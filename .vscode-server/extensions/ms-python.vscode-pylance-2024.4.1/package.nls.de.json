{
    "ClientLoc.ServerRestart.crashMessage": "Pylance ist abgestürzt.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance ist abgestürzt. Die Pylance wird neu gestartet, wenn Sie eine Node.js ausführbare Datei auswählen, um Pylance auszuführen.",
    "ClientLoc.ServerRestart.restartQuestion": "Pylance ist abgestürzt. Möchten Sie versuchen, eine Node.js ausführbare Datei zum Ausführen des Sprachservers zu verwenden?",
    "ClientLoc.ServerRestart.restartingMessage": "Die Pylance wird mit Node.js neu gestartet...",
    "ClientLoc.ServerRestart.selectButton": "Auswählen",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Wählen Sie Node.js ausführbare Datei aus, um Pylance auszuführen.",
    "ClientLoc.askNodeSafetyQuestion": "Pylance ist für die Ausführung mit {0} konfiguriert. Möchten Sie diese ausführbare Datei zum Ausführen von Pylance verwenden?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python-Modus für Autoimport-Vervollständigungen",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Autoimport-Vervollständigungen: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Ausschalten",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Einschalten",
    "ClientLoc.crashTooManyRestarts": "Pylance ist in den letzten 3 Minuten 5-mal abgestürzt. Pylance wird nicht neu gestartet. Weitere Informationen finden Sie in der Ausgabe.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python-Typüberprüfungsmodus",
    "ClientLoc.typeCheckingModeStatusItem.text": "Typüberprüfung: {0}",
    "ClientLoc.typeCheckingModeStatusItem.titleOff": "Wechseln zu aus",
    "ClientLoc.typeCheckingModeStatusItem.titleOn": "Wechseln zu ein",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Aktualisierung der Einstellung '{0}.{1}' fehlgeschlagen.",
    "Common.Help": "Hilfe",
    "Common.No": "Nein",
    "Common.Yes": "Ja",
    "Common.reload": "Neu laden",
    "Common.remindMeLater": "Später erinnern",
    "Insiders.installingPreRelease": "Vorabversionsbuild für Pylance wird installiert...",
    "LanguageServer.settingsMigratedMessage": "Für Microsoft Language Server geltende Einstellungen wurden in die Pylanceeinstellungen kopiert. Weitere Informationen finden Sie in den settings.json-Dateien.",
    "LanguageServer.settingsMigrationError": "Die folgenden Einstellungen konnten nicht migriert werden:",
    "Refactoring.MoveSymbol.newFileDetail": "Pfad eingeben oder Zieldatei auswählen",
    "Refactoring.MoveSymbol.newFileLabel": "Zieldateipfad eingaben",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Auswählen",
    "Refactoring.MoveSymbol.openDialogTitle": "Wählen Sie eine neue Datei aus, in die das Symbol verschoben werden soll...",
    "Refactoring.MoveSymbol.progressBarTitle": "Symbol verschieben nach...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Zieldatei suchen",
    "Refactoring.MoveSymbol.quickPickTitle": "Ziel für Verschiebung auswählen",
    "Refactoring.MoveSymbol.separatorText": "Zieldateien",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Importe suchen",
    "Refactoring.SearchImports.quickPickTitle": "Zusätzliche übereinstimmende Importe suchen",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: Alle persistenten Indizes löschen",
    "commands.pylance.profiling.start.title": "Pylance: Profilerstellung starten",
    "commands.pylance.profiling.stop.title": "Pylance: Profilerstellung beenden",
    "commands.pylance.reportIssue.title": "Pylance: Problem melden...",
    "settings.python.analysis.addImport.exactMatchOnly.description": "Nur exakte Übereinstimmungen in den Codeaktionen \"add import\" anbieten",
    "settings.python.analysis.addImport.heuristics.description": "Experimentelle Heuristiken in \"Import hinzufügen\"-Codeaktionen anbieten",
    "settings.python.analysis.autoFormatStrings.description": "Wenn Sie ein \"{\" in eine Zeichenfolge eingeben, stellen Sie der Zeichenfolge automatisch das Präfix \"f\" voran.",
    "settings.python.analysis.autoImportCompletions.description": "Autoimport-Vervollständigungen aktivieren.",
    "settings.python.analysis.autoSearchPaths.description": "Automatisches Hinzufügen allgemeiner Suchpfade wie \"src\".",
    "settings.python.analysis.completeFunctionParens.description": "Fügen Sie Funktionsabschlüssen Klammern hinzu.",
    "settings.python.analysis.diagnosticMode.description": "Analysebereich zum Anzeigen der Diagnose.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Ermöglicht einem Benutzer, die Schweregrade für einzelne Diagnosen zu überschreiben. Verwenden Sie den Regelnamen als Schlüssel und einen der Werte \"error\", \"warning\", \"information\", \"none\", \"true\" (Alias für \"error\") oder \"false\" (Alias für \"none\"). Der für jede Diagnose angezeigte Standardwert ist der Standardwert, wenn \"python.analysis.typeCheckingMode\" auf \"off\" festgelegt ist. Die Standardwerte für jeden Typüberprüfungsmodus (\"off\", \"basic\" und \"strict\") finden Sie [hier](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults).",
    "settings.python.analysis.enablePytestSupport.description": "Aktiviert pytest-Unterstützung in Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Verwenden des Synchronisierungsservermodus [Experimentell]. Nur zur internen Verwendung kann Pylance nicht mehr funktionieren.",
    "settings.python.analysis.exclude.description": "Pfade von Verzeichnissen oder Dateien, die nicht eingeschlossen werden sollen. Diese überschreiben die Einschlussverzeichnisse, sodass bestimmte Unterverzeichnisse ausgeschlossen werden können. Beachten Sie, dass Dateien in den Ausschlusspfaden weiterhin in die Analyse einbezogen werden können, wenn von Quelldateien, die nicht ausgeschlossen sind, auf sie verwiesen (importiert) wird. Pfade können Platzhalterzeichen ** (ein Verzeichnis oder mehrere Ebenen von Verzeichnissen), * (eine Sequenz von null oder mehr Zeichen) oder ? enthalten. (einzelnes Zeichen) Wenn keine Ausschlusspfade angegeben werden, schließt Pylance automatisch Folgendes aus: \"**/node_modules\", \"**/__pycache__\", \".git\" und alle virtuellen Umgebungsverzeichnisse.",
    "settings.python.analysis.extraCommitChars.description": "Die Verwendung von \".\", \"(\" als Commitzeichen zulassen, falls zutreffend.",
    "settings.python.analysis.extraPaths.description": "Zusätzliche Suchauflösungspfade für Importe",
    "settings.python.analysis.fixAll.description": "Quellkorrekturen, die in \"fix all\" ausgeführt werden sollen.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Für Zeichenfolgenliterale, die wie Modulnamen aussehen, ermöglicht \"go to definition\", zum Modul zu wechseln.",
    "settings.python.analysis.ignore.description": "Pfade von Verzeichnissen oder Dateien, deren Diagnoseausgabe (Fehler und Warnungen) unterdrückt werden soll, auch wenn es sich um eine eingeschlossene Datei oder innerhalb des transitiven Abschlusses einer eingeschlossenen Datei handelt. Pfade können Platzhalterzeichen ** (ein Verzeichnis oder mehrere Ebenen von Verzeichnissen), * (eine Sequenz von null oder mehr Zeichen) oder ? enthalten. (einzelnes Zeichen)",
    "settings.python.analysis.importFormat.description": "Definiert das Standardformat für das Importmodul.",
    "settings.python.analysis.include.description": "Pfade von Verzeichnissen oder Dateien, die eingeschlossen werden sollen. Wenn keine Pfade angegeben werden, verwendet Pylance standardmäßig das Stammverzeichnis des Arbeitsbereichs. Pfade können Platzhalterzeichen ** (ein Verzeichnis oder mehrere Ebenen von Verzeichnissen), * (eine Sequenz von null oder mehr Zeichen) oder ? enthalten. (einzelnes Zeichen)",
    "settings.python.analysis.indexing.description": "Aktivieren Sie die Indizierung installierter Drittanbieterbibliotheken und Benutzerdateien für Sprachfeatures wie den automatischen Import, das Hinzufügen von Importen, Arbeitsbereichssymbole usw.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Aktivieren/Deaktivieren von Inlayhinweisen für Aufrufargumentnamen:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Aktivieren/Deaktivieren von Inlayhinweisen für Funktionsrückgabetypen:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Aktivieren/Deaktivieren von Inlayhinweisen für pytest-Funktionsparameter:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Aktivieren/Deaktivieren Sie Inlay-Hinweise für Variablentypen:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Gibt den Protokolliergrad für den Ausgabebereich an.",
    "settings.python.analysis.nodeExecutable.description": "Pfad zu einer ausführbaren Node.js-Datei, die zum Ausführen des Sprachservers verwendet werden soll. Wenn keine Angabe erfolgt, verwendet der Sprachserver die Node.js ausführbare Datei, die mit VS Code ausgeliefert wird. Legen Sie diese Option fest, wenn bei Problemen mit Pylance nicht genügend Arbeitsspeicher verfügbar ist. Weitere Informationen finden Sie [hier](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Wird verwendet, um zu überschreiben, wie viele Ebenen unter installierten Paketen pro Paket indiziert werden sollen. Standardmäßig werden nur Module der obersten Ebene indiziert (Tiefe = 1). Um Submodule zu indizieren, erhöhen Sie die Tiefe für jede Ebene des Submoduls, das Sie indizieren möchten, um 1. Akzeptierte Werte sind:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nWenn \"Alle Symbole einschließen\" auf \"false\" festgelegt ist, werden nur Symbole in den \"__all__\" jedes Pakets eingeschlossen. Wenn sie auf \"true\" festgelegt ist, indiziert Pylance alle Symboldeklarationen auf Modul-/oberster Ebene in der Datei.  \r\n  \r\nVerwendungsbeispiel: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Indizes für alle Drittanbieterbibliotheken werden auf dem Datenträger beibehalten.",
    "settings.python.analysis.stubPath.description": "Pfad zum Verzeichnis, das Stubdateien vom benutzerdefinierten Typ enthält.",
    "settings.python.analysis.typeshedPaths.description": "Pfade zum Suchen nach Typenmodulen.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Verwenden Sie Bibliotheksimplementierungen, um Typinformationen zu extrahieren, wenn der Typstub nicht vorhanden ist.",
    "settings.python.analysis.userFileIndexingLimit.description": "Maximale Anzahl von Benutzerdateien, die im Arbeitsbereich indiziert werden sollen. Das Indizieren von Dateien ist eine leistungsintensive Aufgabe. Verwenden Sie diese Einstellung, um die Anzahl der Dateien einzuschränken, die indiziert werden sollen. Wenn Sie -1 eingeben, werden alle Dateien indiziert.",
    "settings.typecheckingMode.basic.description": "Alle \"off\"-Regeln + alle grundlegende Typüberprüfungsregeln.",
    "settings.typecheckingMode.off.description": "Diagnose für ungültige Syntax, nicht aufgelöste Importe und nicht definierte Variablen anzeigen.",
    "settings.typecheckingMode.standard.description": "Alle \"off\"-Regeln + grundlegende Typüberprüfungsregeln + Standard-Typüberprüfungsregeln.",
    "settings.typecheckingMode.strict.description": "Alle \"off\"-Regeln + alle Typüberprüfungsregeln."
}
