{
    "ClientLoc.ServerRestart.crashMessage": "Выполнено аварийное завершение работы Pylance.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Выполнено аварийное завершение работы Pylance. Pylance будет перезапущен при выборе исполняемого файла Node.js для запуска Pylance.",
    "ClientLoc.ServerRestart.restartQuestion": "Выполнено аварийное завершение работы Pylance. Вы хотите попробовать исполняемый файл Node.js для запуска языкового сервера?",
    "ClientLoc.ServerRestart.restartingMessage": "Перезапуск Pylance с помощью Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Выбрать",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Выберите исполняемый файл Node.js для запуска Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance настроен для запуска с {0}. Вы хотите использовать этот исполняемый файл для запуска Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Режим завершения автоматического импорта Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Завершения автоматического импорта: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Переключиться в режим \"Выкл.\"",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Переключиться в режим \"Вкл.\"",
    "ClientLoc.crashTooManyRestarts": "За последние 3 минуты произошло 5 сбоев Pylance. Pylance не будет перезапущен. Дополнительные сведения см. в выходных данных.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Режим проверки типа Python",
    "ClientLoc.typeCheckingModeStatusItem.text": "Проверка типов: {0}",
    "ClientLoc.typeCheckingModeStatusItem.titleOff": "Переключиться в режим \"Выкл.\"",
    "ClientLoc.typeCheckingModeStatusItem.titleOn": "Переключиться в режим \"Вкл.\"",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Не удалось обновить параметр \"{0}.{1}\".",
    "Common.Help": "Справка",
    "Common.No": "Нет",
    "Common.Yes": "Да",
    "Common.reload": "Перезагрузить",
    "Common.remindMeLater": "Напомнить позже",
    "Insiders.installingPreRelease": "Установка предварительной сборки Pylance...",
    "LanguageServer.settingsMigratedMessage": "Параметры, применимые к серверу Microsoft Language Server, скопированы в параметры Pylance. Подробные сведения см. в файлах settings.json.",
    "LanguageServer.settingsMigrationError": "Не удалось перенести следующие параметры:",
    "Refactoring.MoveSymbol.newFileDetail": "Введите путь или выберите файл назначения",
    "Refactoring.MoveSymbol.newFileLabel": "Введите путь к конечному файлу",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Выбрать",
    "Refactoring.MoveSymbol.openDialogTitle": "Выберите новый файл, чтобы переместить символ в...",
    "Refactoring.MoveSymbol.progressBarTitle": "Переместить символ в...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Поиск в файле назначения",
    "Refactoring.MoveSymbol.quickPickTitle": "Выберите назначение для перемещения.",
    "Refactoring.MoveSymbol.separatorText": "Конечные файлы",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Поиск импортированных данных",
    "Refactoring.SearchImports.quickPickTitle": "Поиск дополнительных совпадающих импортированных данных",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: очистить все сохраняемые индексы",
    "commands.pylance.profiling.start.title": "Pylance: начать профилирования",
    "commands.pylance.profiling.stop.title": "Pylance: остановить профилирование",
    "commands.pylance.reportIssue.title": "Pylance: сообщить о проблеме...",
    "settings.python.analysis.addImport.exactMatchOnly.description": "Предлагать только точные совпадения в действиях кода \"add import\"",
    "settings.python.analysis.addImport.heuristics.description": "Предлагать экспериментальную эвристику в действиях кода \"добавить импорт\"",
    "settings.python.analysis.autoFormatStrings.description": "При вводе \"{\" в строке автоматически добавляется к строке префикс \"f\".",
    "settings.python.analysis.autoImportCompletions.description": "Включите автоматическое завершение импорта.",
    "settings.python.analysis.autoSearchPaths.description": "Автоматически добавлять общие пути поиска, такие как \"src\"",
    "settings.python.analysis.completeFunctionParens.description": "Добавление скобок в завершения функции.",
    "settings.python.analysis.diagnosticMode.description": "Область анализа для демонстрации диагностики.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Позволяет пользователю переопределить уровни серьезности для отдельной диагностики. Используйте имя правила в качестве ключа и \"error\", \"warning\", \"information\", \"none\", \"true\" (псевдоним для \"error\") или \"false\" (псевдоним для \"none\") в качестве значения. Значение по умолчанию, отображаемое для каждой диагностики, является значением по умолчанию, если для параметра \"python.anaанализ.typeCheckingMode\" установлено значение \"off\". См. [здесь](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) значения по умолчанию для каждого режима проверки типа (\"off\", \"basic\" и\"strict\").",
    "settings.python.analysis.enablePytestSupport.description": "Включает поддержку pytest в Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Используйте режим сервера синхронизации [Экспериментальный]. Только для внутреннего использования: Pylance может перестать работать.",
    "settings.python.analysis.exclude.description": "Пути к каталогам или файлам, которые не следует включать. Они переопределяют включаемые каталоги, позволяя исключить определенные подкаталоги. Обратите внимание, что файлы в путях исключения все равно могут быть включены в анализ, если на них ссылаются (импортируют) исходные файлы, которые не исключены. Пути могут содержать подстановочные знаки ** (каталог или несколько уровней каталогов), * (последовательность из нуля или более символов) или ? (один символ). Если пути исключения не указаны, Pylance автоматически исключает следующее: `**/node_modules`, `**/__pycache__`, `.git` и любые каталоги виртуальной среды.",
    "settings.python.analysis.extraCommitChars.description": "Разрешить использование \".\", \"(\" в качестве символов фиксации, если это применимо.",
    "settings.python.analysis.extraPaths.description": "Дополнительные пути разрешения поиска при импорте",
    "settings.python.analysis.fixAll.description": "исходные исправления для запуска в fix all.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Для строковых литералов, которые выглядят как имена модулей, позволяет перейти к определению, чтобы перейти к модулю.",
    "settings.python.analysis.ignore.description": "Пути к каталогам или файлам, диагностический вывод которых (ошибки и предупреждения) должен подавляться, даже если они являются включенным файлом или находятся в пределах транзитивного закрытия включенного файла. Пути могут содержать подстановочные знаки ** (каталог или несколько уровней каталогов), * (последовательность из нуля или более символов) или ? (один символ).",
    "settings.python.analysis.importFormat.description": "Определяет формат по умолчанию для модуля импорта.",
    "settings.python.analysis.include.description": "Пути к каталогам или файлам, которые следует включить. Если пути не указаны, Pylance по умолчанию использует корневой каталог рабочей области. Пути могут содержать подстановочные знаки ** (каталог или несколько уровней каталогов), * (последовательность из нуля или более символов) или ? (один символ).",
    "settings.python.analysis.indexing.description": "Включите индексирование установленных сторонних библиотек и пользовательских файлов для таких языковых функций, как автоматический импорт, добавление импорта, символов рабочей области и т. д.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Включить или отключить подсказки вложения для имен аргументов вызова:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Включить или отключить подсказки вложения для возвращаемых типов функций:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Включить или отключить подсказки вложения для параметров функции pytest:\r\n```python\r\ndef test_foo(my_fixture: \"str\"):\r\n\tassert(my_fixture == \"foo\")\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Включить или отключить подсказки вложений для типов переменных:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Задает уровень ведения журнала для панели вывода.",
    "settings.python.analysis.nodeExecutable.description": "Путь к исполняемому файлу Node.js, используемому для запуска языкового сервера. Если этот параметр не указан, языковой сервер будет использовать исполняемый файл Node.js, который входит в состав VS Code. Установите этот параметр, если у вас возникли проблемы с нехваткой памяти в Pylance. Дополнительные сведения см. [здесь](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Используется для переопределения числа индексируемых уровней установленных пакетов для каждого пакета. По умолчанию индексируются только модули верхнего уровня (глубина = 1). Чтобы индексировать подмодули, увеличьте глубину на 1 для каждого уровня подмодуля, который вы хотите индексировать. Принятые значения:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nЕсли для параметра \"include all symbols\" установлено значение \"false\", включаются только символы из \"__all__\" каждого пакета. Если для него установлено значение \"true\", Pylance будет индексировать каждое объявление символа модуля или верхнего уровня в файле.  \r\n  \r\nПример использования: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Индексы всех сторонних библиотек будут сохранены на диске.",
    "settings.python.analysis.stubPath.description": "Путь к каталогу, содержащему файлы заглушек пользовательских типов.",
    "settings.python.analysis.typeshedPaths.description": "Пути для поиска типизированных модулей.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Использовать реализации библиотеки для извлечения сведений о типе, если заглушка типа отсутствует.",
    "settings.python.analysis.userFileIndexingLimit.description": "Максимальное число пользовательских файлов для индексации в рабочей области. Индексирование файлов — задача, требующая высокой производительности. Используйте этот параметр, чтобы ограничить число файлов, которые нужно проиндексировать. Если ввести -1, мы проиндексируем все файлы.",
    "settings.typecheckingMode.basic.description": "Все правила \"off\" и основные правила проверки типов.",
    "settings.typecheckingMode.off.description": "Показывать диагностику недопустимого синтаксиса, неразрешенного импорта, неопределенных переменных.",
    "settings.typecheckingMode.standard.description": "Все правила \"off\" и базовые правила проверки типов и стандартные правила проверки типов.",
    "settings.typecheckingMode.strict.description": "Все \"отключенные\" правила и все правила проверки типов."
}
