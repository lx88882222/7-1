{
    "ClientLoc.ServerRestart.crashMessage": "Pylance 已崩溃。",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance 已崩溃。选择 Node.js 可执行文件来运行 Pylance 时，将重启 Pylance。",
    "ClientLoc.ServerRestart.restartQuestion": "Pylance 已崩溃。是否要尝试使用 Node.js 可执行文件运行语言服务器?",
    "ClientLoc.ServerRestart.restartingMessage": "正在使用 Node.js 重启 Pylance...",
    "ClientLoc.ServerRestart.selectButton": "选择",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "选择 Node.js 可执行文件来运行 Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance 配置为使用 {0}运行。是否要使用此可执行文件运行 Pylance?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python 自动导入完成模式",
    "ClientLoc.autoImportCompletionsStatusItem.text": "自动导入完成: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "切换到关闭",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "切换到开启",
    "ClientLoc.crashTooManyRestarts": "Pylance 在过去 3 分钟内崩溃了 5 次。Pylance 不会重新启动。有关详细信息，请参阅输出。",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python 类型检查模式",
    "ClientLoc.typeCheckingModeStatusItem.text": "类型检查: {0}",
    "ClientLoc.typeCheckingModeStatusItem.titleOff": "切换到关闭",
    "ClientLoc.typeCheckingModeStatusItem.titleOn": "切换到打开",
    "ClientLoc.updateSettingsErrorMsgFormatted": "无法更新设置 '{0}.{1}'。",
    "Common.Help": "帮助",
    "Common.No": "否",
    "Common.Yes": "是",
    "Common.reload": "重新加载",
    "Common.remindMeLater": "稍后提醒我",
    "Insiders.installingPreRelease": "正在安装 Pylance 预发行版本...",
    "LanguageServer.settingsMigratedMessage": "适用于 Microsoft 语言服务器的设置已复制到 Pylance 设置。有关详细信息，请查看 settings.json 文件。",
    "LanguageServer.settingsMigrationError": "无法迁移以下设置:",
    "Refactoring.MoveSymbol.newFileDetail": "输入路径或选择目标文件",
    "Refactoring.MoveSymbol.newFileLabel": "输入目标文件路径",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "选择",
    "Refactoring.MoveSymbol.openDialogTitle": "选择新文件以将符号移动到...",
    "Refactoring.MoveSymbol.progressBarTitle": "将符号移动到...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "搜索目标文件",
    "Refactoring.MoveSymbol.quickPickTitle": "选择要移动的目标",
    "Refactoring.MoveSymbol.separatorText": "目标文件",
    "Refactoring.SearchImports.quickPickPlaceHolder": "搜索导入项",
    "Refactoring.SearchImports.quickPickTitle": "搜索其他匹配的导入项",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: 清除所有持久索引",
    "commands.pylance.profiling.start.title": "Pylance: 开始分析",
    "commands.pylance.profiling.stop.title": "Pylance: 停止分析",
    "commands.pylance.reportIssue.title": "Pylance: 报告问题...",
    "settings.python.analysis.addImport.exactMatchOnly.description": "仅提供“添加导入”代码操作中的完全匹配项",
    "settings.python.analysis.addImport.heuristics.description": "在 `添加导入` 代码操作中提供试验性启发",
    "settings.python.analysis.autoFormatStrings.description": "在字符串中输入“{” 时，自动使用“f”为字符串的前缀。",
    "settings.python.analysis.autoImportCompletions.description": "启用自动导入补全。",
    "settings.python.analysis.autoSearchPaths.description": "自动添加常用搜索路径，如“src”。",
    "settings.python.analysis.completeFunctionParens.description": "将括号添加到函数补全。",
    "settings.python.analysis.diagnosticMode.description": "用于显示诊断的分析范围。",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "允许用户替代单个诊断的严重性级别。将规则名称用作键，并将 “error”、“warning”、“information”、“none”、“true”（“error”的别名）或 “false”（“none”的别名）用作值。当“python.analysis.typeCheckingMode”设置为“off”时，将默认显示每个诊断默认显示的值。有关每个类型检查模式的默认值（“关”、“基本”和“严格”），请参阅 [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults)。",
    "settings.python.analysis.enablePytestSupport.description": "在 Pylance 中启用 pytest 支持。",
    "settings.python.analysis.enableSyncServer.description": "使用同步服务器模式 [Experimental]。仅供内部使用，可能会导致 Pylance 停止工作。",
    "settings.python.analysis.exclude.description": "不应包含的目录或文件的路径。这些内容将替代包含目录，从而允许排除特定子目录。请注意，如果排除路径中的文件被未排除的源文件引用（导入），则这些文件仍可能包含在分析中。路径可能包含通配符 **（目录或目录的多个级别），* (0 个或多个字符的序列)，或者？（单个字符）。如果未指定排除路径，则 Pylance 将自动排除以下内容：“**/node_modules”、“**/__pycache__”、“.git”和任何虚拟环境目录。",
    "settings.python.analysis.extraCommitChars.description": "允许在适用时使用“.”、“(”作为提交字符。",
    "settings.python.analysis.extraPaths.description": "其他导入搜索解析路径",
    "settings.python.analysis.fixAll.description": "要在全部修复中运行的源修补程序。",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "对于类似模块名称的字符串文本，允许转到定义以转到模块。",
    "settings.python.analysis.ignore.description": "应该禁止诊断输出（错误和警告）的目录或文件的路径，即使它们是包含的文件或位于包含文件的传递闭包。路径可能包含通配符 **（目录或目录的多个级别），* (0 个或多个字符的序列)，或者？（单个字符）。",
    "settings.python.analysis.importFormat.description": "定义导入模块的默认格式。",
    "settings.python.analysis.include.description": "不应包含的目录或文件的路径。如果未指定路径，则 Pylance 默认使用工作区根目录。路径可能包含通配符 **（目录或目录的多个级别），* (0 个或多个字符的序列)，或者？（单个字符）。",
    "settings.python.analysis.indexing.description": "为语言功能的已安装的第三方库和用户文件启用索引，这些功能包括自动导入、添加导入、工作区符号等。",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "启用/禁用调用参数名称的内嵌提示：\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "启用/禁用函数返回类型的嵌入提示：\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "启用/禁用 pytest 函数参数的嵌入提示：\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "启用/禁用变量类型的内嵌提示：\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n\r\n```\r\n",
    "settings.python.analysis.logLevel.description": "指定输出面板的日志记录级别",
    "settings.python.analysis.nodeExecutable.description": "用于运行语言服务器的 Node.js 可执行文件的路径。如果未指定，语言服务器将使用 VS Code 附带的 Node.js 可执行文件。如果遇到 Pylance 内存不足问题，请设置此选项。有关详细信息，请查看[此处](https://aka.ms/AApf7ox)。",
    "settings.python.analysis.packageIndexDepths.description": "用于替代每个包上要编制索引的已安装包下的级别数。默认情况下，仅对顶级模块编制索引（深度 = 1）。要为子模块编制索引，晴增加深度，每个要编制的子模块增加 1 级。已接受的值为：\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\n如果“include all symbols”设置为“false”，则仅包含每个包的“__all__”中的符号。当设置为“true”时，Pylance 将为文件中的每个模块/顶级符号声明编制索引。 \r\n \r\n用法示例：\r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "所有第三方库的索引将保留到磁盘。",
    "settings.python.analysis.stubPath.description": "包含自定义类型存根文件的目录的路径。",
    "settings.python.analysis.typeshedPaths.description": "用于查找类型化模块的路径。",
    "settings.python.analysis.useLibraryCodeForTypes.description": "当类型存根不存在时，使用库实现提取类型信息。",
    "settings.python.analysis.userFileIndexingLimit.description": "要在工作区中编制索引的最大用户文件数。为文件编制索引是一项性能密集型任务。请使用此设置限制要我们编制索引的文件数。如果输入 -1，我们将为所有文件编制索引。",
    "settings.typecheckingMode.basic.description": "所有“off”规则 + 基本类型检查规则。",
    "settings.typecheckingMode.off.description": "显示无效语法、未解析的导入、未定义变量的诊断。",
    "settings.typecheckingMode.standard.description": "所有“off”规则 + 基本类型检查规则 + 标准类型检查器规则。",
    "settings.typecheckingMode.strict.description": "所有“off”规则 + 所有类型检查规则。"
}
