"use strict";exports.id=80,exports.ids=[80],exports.modules={6468:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.analyzeProgram=t.nullCallback=void 0;const i=n(64704),o=s(n(83181)),l=n(6216);t.nullCallback=()=>{},t.analyzeProgram=function(e,n,a,r,s,p){let c=!1;r=null!=r?r:t.nullCallback;try{(0,i.throwIfCancellationRequested)(p);const t=new l.Duration;c=e.analyze(n,p);const s=e.getFilesToAnalyzeCount(),o=void 0!==n,d=e.getDiagnostics(a,o),u=d.length,m=t.getDurationInSeconds();(u>0||!c)&&r({diagnostics:d,filesInProgram:e.getFileCount(),filesRequiringAnalysis:s,checkingOnlyOpenFiles:e.isCheckingOnlyOpenFiles(),fatalErrorOccurred:!1,configParseErrorOccurred:!1,elapsedTime:m})}catch(e){if(i.OperationCanceledException.is(e))return!1;const t=o.getErrorString(e);s.error("Error performing analysis: "+t),r({diagnostics:[],filesInProgram:0,filesRequiringAnalysis:0,checkingOnlyOpenFiles:!0,fatalErrorOccurred:!0,configParseErrorOccurred:!1,elapsedTime:0,error:o.getSerializableError(e)})}return c}},35964:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isAnnotationEvaluationPostponed=void 0;const a=n(61328);t.isAnnotationEvaluationPostponed=function(e){return!!e.isStubFile||(!!e.futureImports.has("annotations")||!!e.executionEnvironment.pythonVersion.isGreaterOrEqualTo(a.pythonVersion3_13))}},9316:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isCodeUnreachable=t.setDunderAllInfo=t.getDunderAllInfo=t.setCodeFlowComplexity=t.getCodeFlowComplexity=t.setCodeFlowExpressions=t.getCodeFlowExpressions=t.setFileInfo=t.getFileInfo=t.setAfterFlowNode=t.getAfterFlowNode=t.setFlowNode=t.getFlowNode=t.setDeclaration=t.getDeclaration=t.setScope=t.getScope=t.setImportInfo=t.getImportInfo=t.cleanNodeAnalysisInfo=void 0;const a=n(31508);function r(e){return e.flowNode}t.cleanNodeAnalysisInfo=function(e){const t=e;delete t.scope,delete t.declaration,delete t.flowNode,delete t.afterFlowNode,delete t.fileInfo,delete t.codeFlowExpressions,delete t.codeFlowComplexity,delete t.dunderAllInfo,delete t.typeParameterSymbol},t.getImportInfo=function(e){return e.importInfo},t.setImportInfo=function(e,t){e.importInfo=t},t.getScope=function(e){return e.scope},t.setScope=function(e,t){e.scope=t},t.getDeclaration=function(e){return e.declaration},t.setDeclaration=function(e,t){e.declaration=t},t.getFlowNode=r,t.setFlowNode=function(e,t){e.flowNode=t},t.getAfterFlowNode=function(e){return e.afterFlowNode},t.setAfterFlowNode=function(e,t){e.afterFlowNode=t},t.getFileInfo=function(e){for(;36!==e.nodeType;)e=e.parent;return e.fileInfo},t.setFileInfo=function(e,t){e.fileInfo=t},t.getCodeFlowExpressions=function(e){return e.codeFlowExpressions},t.setCodeFlowExpressions=function(e,t){e.codeFlowExpressions=t},t.getCodeFlowComplexity=function(e){var t;return null!==(t=e.codeFlowComplexity)&&void 0!==t?t:0},t.setCodeFlowComplexity=function(e,t){e.codeFlowComplexity=t},t.getDunderAllInfo=function(e){return e.dunderAllInfo},t.setDunderAllInfo=function(e,t){e.dunderAllInfo=t},t.isCodeUnreachable=function(e){let t=e;for(;t;){const e=r(t);if(e)return!!(e.flags&a.FlowFlags.Unreachable);t=t.parent}return!1}},95156:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BackgroundAnalysisProgram=t.InvalidatedReason=void 0,n(58484);const a=n(6468),r=n(4732);var s;!function(e){e[e.Reanalyzed=0]="Reanalyzed",e[e.SourceWatcherChanged=1]="SourceWatcherChanged",e[e.LibraryWatcherChanged=2]="LibraryWatcherChanged",e[e.LibraryWatcherContentOnlyChanged=3]="LibraryWatcherContentOnlyChanged"}(s||(t.InvalidatedReason=s={}));t.BackgroundAnalysisProgram=class{constructor(e,t,n,a,s,i,o){this.serviceId=e,this._serviceProvider=t,this._configOptions=n,this._importResolver=a,this._backgroundAnalysis=s,this._maxAnalysisTime=i,this._disableChecker=o,this._disposed=!1,this._program=new r.Program(this.importResolver,this.configOptions,this._serviceProvider,void 0,this._disableChecker,e)}get configOptions(){return this._configOptions}get importResolver(){return this._importResolver}get program(){return this._program}get host(){return this._importResolver.host}get backgroundAnalysis(){return this._backgroundAnalysis}hasSourceFile(e){return!!this._program.getSourceFile(e)}setConfigOptions(e){var t;this._configOptions=e,null===(t=this._backgroundAnalysis)||void 0===t||t.setConfigOptions(e),this._program.setConfigOptions(e)}setImportResolver(e){var t;this._importResolver=e,null===(t=this._backgroundAnalysis)||void 0===t||t.setImportResolver(e),this._program.setImportResolver(e),this.configOptions.getExecutionEnvironments().forEach((e=>this._ensurePartialStubPackages(e)))}setTrackedFiles(e){var t;null===(t=this._backgroundAnalysis)||void 0===t||t.setTrackedFiles(e);const n=this._program.setTrackedFiles(e);this._reportDiagnosticsForRemovedFiles(n)}setAllowedThirdPartyImports(e){var t;null===(t=this._backgroundAnalysis)||void 0===t||t.setAllowedThirdPartyImports(e),this._program.setAllowedThirdPartyImports(e)}setFileOpened(e,t,n,a){var r;null===(r=this._backgroundAnalysis)||void 0===r||r.setFileOpened(e,t,n,a),this._program.setFileOpened(e,t,n,a)}getChainedUri(e){return this._program.getChainedUri(e)}updateChainedUri(e,t){var n;null===(n=this._backgroundAnalysis)||void 0===n||n.updateChainedUri(e,t),this._program.updateChainedUri(e,t)}updateOpenFileContents(e,t,n,a){var r;null===(r=this._backgroundAnalysis)||void 0===r||r.setFileOpened(e,t,n,a),this._program.setFileOpened(e,t,n,a),this.markFilesDirty([e],!0)}setFileClosed(e,t){var n;null===(n=this._backgroundAnalysis)||void 0===n||n.setFileClosed(e,t);const a=this._program.setFileClosed(e,t);this._reportDiagnosticsForRemovedFiles(a)}addInterimFile(e){var t;null===(t=this._backgroundAnalysis)||void 0===t||t.addInterimFile(e),this._program.addInterimFile(e)}markAllFilesDirty(e){var t;null===(t=this._backgroundAnalysis)||void 0===t||t.markAllFilesDirty(e),this._program.markAllFilesDirty(e)}markFilesDirty(e,t){var n;null===(n=this._backgroundAnalysis)||void 0===n||n.markFilesDirty(e,t),this._program.markFilesDirty(e,t)}setCompletionCallback(e){var t;this._onAnalysisCompletion=e,null===(t=this._backgroundAnalysis)||void 0===t||t.setCompletionCallback(e)}startAnalysis(e){return this._backgroundAnalysis?(this._backgroundAnalysis.startAnalysis(this,e),!1):(0,a.analyzeProgram)(this._program,this._maxAnalysisTime,this._configOptions,this._onAnalysisCompletion,this._serviceProvider.console(),e)}async analyzeFile(e,t){return this._backgroundAnalysis?this._backgroundAnalysis.analyzeFile(e,t):this._program.analyzeFile(e,t)}libraryUpdated(){return!1}async getDiagnosticsForRange(e,t,n){return this._backgroundAnalysis?this._backgroundAnalysis.getDiagnosticsForRange(e,t,n):this._program.getDiagnosticsForRange(e,t)}async writeTypeStub(e,t,n,r){return this._backgroundAnalysis?this._backgroundAnalysis.writeTypeStub(e,t,n,r):((0,a.analyzeProgram)(this._program,void 0,this._configOptions,this._onAnalysisCompletion,this._serviceProvider.console(),r),this._program.writeTypeStub(e,t,n,r))}invalidateAndForceReanalysis(e){var t;null===(t=this._backgroundAnalysis)||void 0===t||t.invalidateAndForceReanalysis(e),this._importResolver.invalidateCache(),this._program.markAllFilesDirty(!0)}restart(){var e;null===(e=this._backgroundAnalysis)||void 0===e||e.restart()}dispose(){var e;this._disposed||(this._disposed=!0,this._program.dispose(),null===(e=this._backgroundAnalysis)||void 0===e||e.shutdown())}enterEditMode(){this._preEditAnalysis=this._backgroundAnalysis,this._backgroundAnalysis=void 0,this._program.enterEditMode()}exitEditMode(){return this._backgroundAnalysis=this._preEditAnalysis,this._preEditAnalysis=void 0,this._program.exitEditMode()}_ensurePartialStubPackages(e){var t,n;return null===(t=this._backgroundAnalysis)||void 0===t||t.ensurePartialStubPackages(null===(n=e.root)||void 0===n?void 0:n.toString()),this._importResolver.ensurePartialStubPackages(e)}_reportDiagnosticsForRemovedFiles(e){0!==e.length&&!this._backgroundAnalysis&&this._onAnalysisCompletion&&this._onAnalysisCompletion({diagnostics:e,filesInProgram:this._program.getFileCount(),filesRequiringAnalysis:this._program.getFilesToAnalyzeCount(),checkingOnlyOpenFiles:this._program.isCheckingOnlyOpenFiles(),fatalErrorOccurred:!1,configParseErrorOccurred:!1,elapsedTime:0})}}},4868:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.DummyScopeGenerator=t.ReturnFinder=t.YieldFinder=t.Binder=void 0;const i=n(28040),o=n(83181),l=n(97652),p=n(11699),c=n(96193),d=n(55164),u=n(55084),m=n(95960),y=s(n(9316)),g=n(31508),h=n(65392),f=n(99216),T=s(n(28340)),v=n(78232),b=n(32700),_=s(n(21084)),C=n(52328),I=n(80944);class k extends v.ParseTreeWalker{constructor(e,t=!1){super(),this._moduleSymbolOnly=t,this._deferredBindingTasks=[],this._currentExceptTargets=[],this._finallyTargets=[],this._typingImportAliases=[],this._sysImportAliases=[],this._dataclassesImportAliases=[],this._typingSymbolAliases=new Map,this._dataclassesSymbolAliases=new Map,this._dunderAllStringNodes=[],this._usesUnsupportedDunderAllForm=!1,this._isInExceptSuite=!1,this._isInAnnotatedAnnotation=!1,this._potentialHiddenSymbols=new Map,this._potentialPrivateSymbols=new Map,this._codeFlowComplexity=0,this._fileInfo=e}bindModule(e){var t;const n=void 0===this._fileInfo.builtinsScope;this._createNewScope(n?5:4,this._fileInfo.builtinsScope,void 0,(()=>{y.setScope(e,this._currentScope),y.setFlowNode(e,this._currentFlowNode),this._addImplicitSymbolToCurrentScope("__name__",e,"str"),this._addImplicitSymbolToCurrentScope("__loader__",e,"Any"),this._addImplicitSymbolToCurrentScope("__package__",e,"str | None"),this._addImplicitSymbolToCurrentScope("__spec__",e,"Any"),this._addImplicitSymbolToCurrentScope("__path__",e,"Iterable[str]"),this._addImplicitSymbolToCurrentScope("__file__",e,"str"),this._addImplicitSymbolToCurrentScope("__cached__",e,"str"),this._addImplicitSymbolToCurrentScope("__dict__",e,"Dict[str, Any]"),this._addImplicitSymbolToCurrentScope("__annotations__",e,"Dict[str, Any]"),this._addImplicitSymbolToCurrentScope("__builtins__",e,"Any");const t=T.getDocString(e.statements);this._addImplicitSymbolToCurrentScope("__doc__",e,!this._fileInfo.isStubFile&&t?"str":"str | None"),this._currentFlowNode=this._createStartFlowNode(),this._walkStatementsAndReportUnreachable(e.statements),y.setAfterFlowNode(e,this._currentFlowNode),y.setCodeFlowExpressions(e,this._currentScopeCodeFlowExpressions),y.setCodeFlowComplexity(e,this._codeFlowComplexity)})),this._bindDeferred(),this._potentialHiddenSymbols.forEach(((e,t)=>{var n;(null===(n=this._dunderAllNames)||void 0===n?void 0:n.some((e=>e===t)))||(this._fileInfo.isStubFile?e.setIsExternallyHidden():e.setPrivatePyTypedImport())})),this._potentialPrivateSymbols.forEach(((e,t)=>{var n;(null===(n=this._dunderAllNames)||void 0===n?void 0:n.some((e=>e===t)))||e.setIsPrivateMember()})),this._dunderAllNames?y.setDunderAllInfo(e,{names:this._dunderAllNames,stringNodes:this._dunderAllStringNodes,usesUnsupportedDunderAllForm:this._usesUnsupportedDunderAllForm}):y.setDunderAllInfo(e,void 0);const a=y.getScope(e);if(a&&this._dunderAllNames)for(const e of this._dunderAllNames)null===(t=a.symbolTable.get(e))||void 0===t||t.setIsInDunderAll()}visitModule(e){return(0,o.fail)("We should never get here"),!1}visitSuite(e){return this._walkStatementsAndReportUnreachable(e.statements),!1}visitModuleName(e){const t=y.getImportInfo(e);if((0,o.assert)(void 0!==t),t.isNativeLib)return!0;if(!t.isImportFound)return this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportMissingImports,l.DiagnosticRule.reportMissingImports,m.LocMessage.importResolveFailure().format({importName:t.importName,venv:this._fileInfo.executionEnvironment.name}),e),!0;if(!t.isStubFile&&1===t.importType&&!t.pyTypedInfo){const n=this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportMissingTypeStubs,l.DiagnosticRule.reportMissingTypeStubs,m.LocMessage.stubFileMissing().format({importName:t.importName}),e);if(n){const e={action:"pyright.createtypestub",moduleName:t.importName};n.addAction(e)}}return!0}visitClass(e){this.walkMultiple(e.decorators);const t={type:6,node:e,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e.name,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite},n=this._bindNameToScope(this._currentScope,e.name);let a;return n&&n.addDeclaration(t),y.setDeclaration(e,t),e.typeParameters&&(this.walk(e.typeParameters),a=y.getScope(e.typeParameters)),this.walkMultiple(e.arguments),this._createNewScope(3,null!=a?a:this._getNonClassParentScope(),void 0,(()=>{y.setScope(e,this._currentScope),this._addImplicitSymbolToCurrentScope("__doc__",e,"str | None"),this._addImplicitSymbolToCurrentScope("__module__",e,"str"),this._addImplicitSymbolToCurrentScope("__qualname__",e,"str"),this._dunderSlotsEntries=void 0,this._moduleSymbolOnly||this.walk(e.suite),this._dunderSlotsEntries&&this._addSlotsToCurrentScope(this._dunderSlotsEntries),this._dunderSlotsEntries=void 0})),this._createAssignmentTargetFlowNodes(e.name,!1,!1),!1}visitFunction(e){this._createVariableAnnotationFlowNode(),y.setFlowNode(e,this._currentFlowNode);const t=this._bindNameToScope(this._currentScope,e.name),n=T.getEnclosingClass(e,!0),a={type:5,node:e,isMethod:!!n,isGenerator:!1,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e.name,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};let r;return t&&t.addDeclaration(a),y.setDeclaration(e,a),e.parameters.forEach((e=>{e.defaultValue&&this.walk(e.defaultValue)})),e.typeParameters&&(this.walk(e.typeParameters),r=y.getScope(e.typeParameters)),this.walkMultiple(e.decorators),e.parameters.forEach((e=>{e.typeAnnotation&&this.walk(e.typeAnnotation),e.typeAnnotationComment&&this.walk(e.typeAnnotationComment)})),e.returnTypeAnnotation&&this.walk(e.returnTypeAnnotation),e.functionAnnotationComment&&this.walk(e.functionAnnotationComment),this._createNewScope(2,null!=r?r:this._getNonClassParentScope(),void 0,(()=>{y.setScope(e,this._currentScope);T.getEnclosingClass(e)&&this._addImplicitSymbolToCurrentScope("__class__",e,"class"),this._deferBinding((()=>{this._currentFlowNode=this._createStartFlowNode(),this._codeFlowComplexity=0,e.parameters.forEach((t=>{var n,a;if(t.name){const r=this._bindNameToScope(this._currentScope,t.name);let s=T.getDocString(null!==(a=null===(n=null==e?void 0:e.suite)||void 0===n?void 0:n.statements)&&void 0!==a?a:[]);if(void 0!==s&&(s=(0,f.extractParameterDocumentation)(s,t.name.value)),r){const e={type:2,node:t,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(t,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite,docString:s};r.addDeclaration(e),y.setDeclaration(t.name,e)}this._createFlowAssignment(t.name)}})),this._targetFunctionDeclaration=a,this._currentReturnTarget=this._createBranchLabel(),this.walk(e.suite),y.setAfterFlowNode(e.suite,this._currentFlowNode),this._addAntecedent(this._currentReturnTarget,this._currentFlowNode);const t=this._finishFlowLabel(this._currentReturnTarget);y.setAfterFlowNode(e,t),y.setCodeFlowExpressions(e,this._currentScopeCodeFlowExpressions),y.setCodeFlowComplexity(e,this._codeFlowComplexity)}))})),this._createAssignmentTargetFlowNodes(e.name,!1,!1),!1}visitLambda(e){return this._createVariableAnnotationFlowNode(),y.setFlowNode(e,this._currentFlowNode),e.parameters.forEach((e=>{e.defaultValue&&this.walk(e.defaultValue)})),this._createNewScope(2,this._getNonClassParentScope(),void 0,(()=>{y.setScope(e,this._currentScope),this._deferBinding((()=>{this._currentFlowNode=this._createStartFlowNode(),e.parameters.forEach((e=>{if(e.name){const t=this._bindNameToScope(this._currentScope,e.name);if(t){const n={type:2,node:e,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};t.addDeclaration(n),y.setDeclaration(e.name,n)}this._createFlowAssignment(e.name),this.walk(e.name),y.setFlowNode(e,this._currentFlowNode)}})),this.walk(e.expression),y.setCodeFlowExpressions(e,this._currentScopeCodeFlowExpressions)}))})),!1}visitCall(e){var t,n;if(this._disableTrueFalseTargets((()=>{this.walk(e.leftExpression);T.getArgumentsByRuntimeOrder(e).forEach((e=>{this._currentFlowNode&&y.setFlowNode(e,this._currentFlowNode),this.walk(e)}))})),T.isNodeContainedWithinNodeType(e,13)||this._isInAnnotatedAnnotation||this._createCallFlowNode(e),4===this._currentScope.type&&35===e.leftExpression.nodeType&&38===e.leftExpression.leftExpression.nodeType&&"__all__"===e.leftExpression.leftExpression.value){let a=!0;if("extend"===e.leftExpression.memberName.value&&1===e.arguments.length){const t=e.arguments[0].valueExpression;if(31===t.nodeType)t.entries.forEach((e=>{var t,n;48===e.nodeType&&1===e.strings.length&&49===e.strings[0].nodeType&&(null===(t=this._dunderAllNames)||void 0===t||t.push(e.strings[0].value),null===(n=this._dunderAllStringNodes)||void 0===n||n.push(e.strings[0]),a=!1)}));else if(35===t.nodeType&&38===t.leftExpression.nodeType&&"__all__"===t.memberName.value){const e=this._getDunderAllNamesFromImport(t.leftExpression.value);e&&e.length>0&&(e.forEach((e=>{var t;null===(t=this._dunderAllNames)||void 0===t||t.push(e)})),a=!1)}}else if("remove"===e.leftExpression.memberName.value&&1===e.arguments.length){const t=e.arguments[0].valueExpression;48===t.nodeType&&1===t.strings.length&&49===t.strings[0].nodeType&&this._dunderAllNames&&(this._dunderAllNames=this._dunderAllNames.filter((e=>e!==t.strings[0].value)),this._dunderAllStringNodes=this._dunderAllStringNodes.filter((e=>e.value!==t.strings[0].value)),a=!1)}else if("append"===e.leftExpression.memberName.value&&1===e.arguments.length){const r=e.arguments[0].valueExpression;48===r.nodeType&&1===r.strings.length&&49===r.strings[0].nodeType&&(null===(t=this._dunderAllNames)||void 0===t||t.push(r.strings[0].value),null===(n=this._dunderAllStringNodes)||void 0===n||n.push(r.strings[0]),a=!1)}a&&(this._usesUnsupportedDunderAllForm=!0,this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportUnsupportedDunderAll,l.DiagnosticRule.reportUnsupportedDunderAll,m.LocMessage.unsupportedDunderAllOperation(),e))}return!1}visitTypeParameterList(e){const t=new b.Scope(0,this._getNonClassParentScope(),this._currentScope);e.parameters.forEach((e=>{e.boundExpression&&this.walk(e.boundExpression)}));const n=new Set;return e.parameters.forEach((a=>{const r=a.name,s=t.addSymbol(r.value,0),i={type:3,node:a,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};s.addDeclaration(i),y.setDeclaration(r,i),n.has(r.value)?this._addSyntaxError(m.LocMessage.typeParameterExistingTypeParameter().format({name:r.value}),r):n.add(r.value)})),e.parameters.forEach((e=>{e.defaultExpression&&this.walk(e.defaultExpression)})),y.setScope(e,t),!1}visitTypeAlias(e){let t;this._bindNameToScope(this._currentScope,e.name),this.walk(e.name),e.typeParameters&&(this.walk(e.typeParameters),t=y.getScope(e.typeParameters));const n={type:4,node:e,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e.name,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite,docString:this._getVariableDocString(e.expression)},a=this._bindNameToScope(this._currentScope,e.name);a&&a.addDeclaration(n),y.setDeclaration(e,n),this._createAssignmentTargetFlowNodes(e.name,!0,!1);const r=this._currentScope;return this._currentScope=null!=t?t:this._currentScope,this.walk(e.expression),this._currentScope=r,!1}visitAssignment(e){if(this._handleTypingStubAssignmentOrAnnotation(e))return!1;if(this._bindPossibleTupleNamedTarget(e.leftExpression),e.typeAnnotationComment&&(this.walk(e.typeAnnotationComment),this._addTypeDeclarationForVariable(e.leftExpression,e.typeAnnotationComment)),e.chainedTypeAnnotationComment&&this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportInvalidTypeForm,l.DiagnosticRule.reportInvalidTypeForm,m.LocMessage.annotationNotSupported(),e.chainedTypeAnnotationComment),24===e.leftExpression.nodeType){const t=e.leftExpression;if(1===t.items.length&&!t.trailingComma&&48===t.items[0].valueExpression.nodeType&&(0,g.isCodeFlowSupportedForReference)(t.baseExpression)){const e=(0,g.createKeyForReference)(t.baseExpression);this._currentScopeCodeFlowExpressions.add(e)}}this.walk(e.rightExpression);let t=!0;if((T.getEnclosingFunction(e)||9===e.rightExpression.nodeType&&this._fileInfo.isTypingStubFile||T.isWithinLoop(e))&&(t=!1),this._addInferredTypeAssignmentForVariable(e.leftExpression,e.rightExpression,t),this._createAssignmentTargetFlowNodes(e.leftExpression,!0,!1),4===this._currentScope.type&&(38===e.leftExpression.nodeType&&"__all__"===e.leftExpression.value||54===e.leftExpression.nodeType&&38===e.leftExpression.valueExpression.nodeType&&"__all__"===e.leftExpression.valueExpression.value)){const t=e.rightExpression;this._dunderAllNames=[];let n=!1;31===t.nodeType?t.entries.forEach((e=>{48===e.nodeType&&1===e.strings.length&&49===e.strings[0].nodeType?(this._dunderAllNames.push(e.strings[0].value),this._dunderAllStringNodes.push(e.strings[0])):n=!0})):52===t.nodeType?t.expressions.forEach((e=>{48===e.nodeType&&1===e.strings.length&&49===e.strings[0].nodeType?(this._dunderAllNames.push(e.strings[0].value),this._dunderAllStringNodes.push(e.strings[0])):n=!0})):n=!0,n&&(this._usesUnsupportedDunderAllForm=!0,this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportUnsupportedDunderAll,l.DiagnosticRule.reportUnsupportedDunderAll,m.LocMessage.unsupportedDunderAllOperation(),e))}if(3===this._currentScope.type&&(38===e.leftExpression.nodeType&&"__slots__"===e.leftExpression.value||54===e.leftExpression.nodeType&&38===e.leftExpression.valueExpression.nodeType&&"__slots__"===e.leftExpression.valueExpression.value)){const t=e.rightExpression;this._dunderSlotsEntries=[];let n=!0;48===t.nodeType?this._dunderSlotsEntries.push(t):31===t.nodeType?t.entries.forEach((e=>{48===e.nodeType&&1===e.strings.length&&49===e.strings[0].nodeType?this._dunderSlotsEntries.push(e):n=!1})):52===t.nodeType?t.expressions.forEach((e=>{48===e.nodeType&&1===e.strings.length&&49===e.strings[0].nodeType?this._dunderSlotsEntries.push(e):n=!1})):n=!1,n||(this._dunderSlotsEntries=void 0)}return!1}visitAssignmentExpression(e){this._disableTrueFalseTargets((()=>{this.walk(e.rightExpression)}));const t=T.getEvaluationNodeForAssignmentExpression(e);if(t){const n=y.getScope(t);let a=this._currentScope;for(;a&&a!==n;){if(a.lookUpSymbol(e.name.value)){this._addSyntaxError(m.LocMessage.assignmentExprComprehension().format({name:e.name.value}),e.name);break}a=a.parent}this._bindNameToScope(n,e.name),this._addInferredTypeAssignmentForVariable(e.name,e.rightExpression),this._createAssignmentTargetFlowNodes(e.name,!0,!1)}else this._addSyntaxError(m.LocMessage.assignmentExprContext(),e),this.walk(e.name);return!1}visitAugmentedAssignment(e){if(this.walk(e.leftExpression),this.walk(e.rightExpression),this._bindPossibleTupleNamedTarget(e.destExpression),this._createAssignmentTargetFlowNodes(e.destExpression,!1,!1),1===e.operator&&4===this._currentScope.type&&38===e.leftExpression.nodeType&&"__all__"===e.leftExpression.value){const t=e.rightExpression;let n=!0;if(31===t.nodeType)t.entries.forEach((e=>{var t;48===e.nodeType&&1===e.strings.length&&49===e.strings[0].nodeType&&(null===(t=this._dunderAllNames)||void 0===t||t.push(e.strings[0].value),this._dunderAllStringNodes.push(e.strings[0]))})),n=!1;else if(35===t.nodeType&&38===t.leftExpression.nodeType&&"__all__"===t.memberName.value){const e=this._getDunderAllNamesFromImport(t.leftExpression.value);e&&(e.forEach((e=>{var t;null===(t=this._dunderAllNames)||void 0===t||t.push(e)})),n=!1)}n&&(this._usesUnsupportedDunderAllForm=!0,this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportUnsupportedDunderAll,l.DiagnosticRule.reportUnsupportedDunderAll,m.LocMessage.unsupportedDunderAllOperation(),e))}return!1}visitDel(e){return e.expressions.forEach((e=>{this._bindPossibleTupleNamedTarget(e),this.walk(e),this._createAssignmentTargetFlowNodes(e,!1,!0)})),!1}visitTypeAnnotation(e){var t;if(this._handleTypingStubAssignmentOrAnnotation(e))return!1;const n=3===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&void 0!==T.getEnclosingClass(e,!0);n||this.walk(e.typeAnnotation),this._createVariableAnnotationFlowNode(),this._bindPossibleTupleNamedTarget(e.valueExpression),this._addTypeDeclarationForVariable(e.valueExpression,e.typeAnnotation),n&&this.walk(e.typeAnnotation);const a=[];return this._isNarrowingExpression(e.valueExpression,a)&&a.forEach((e=>{const t=(0,g.createKeyForReference)(e);this._currentScopeCodeFlowExpressions.add(t)})),this.walk(e.valueExpression),!1}visitFor(e){this._bindPossibleTupleNamedTarget(e.targetExpression),this._addInferredTypeAssignmentForVariable(e.targetExpression,e),this.walk(e.iterableExpression);const t=this._createLoopLabel(),n=this._createBranchLabel(),a=this._createBranchLabel();this._addAntecedent(t,this._currentFlowNode),this._currentFlowNode=t,this._addAntecedent(n,this._currentFlowNode);const r=this._trackCodeFlowExpressions((()=>{this._createAssignmentTargetFlowNodes(e.targetExpression,!0,!1)}));if(this._bindLoopStatement(t,a,(()=>{this.walk(e.forSuite),this._addAntecedent(t,this._currentFlowNode),r.forEach((e=>{var t;null===(t=this._currentScopeCodeFlowExpressions)||void 0===t||t.add(e)}))})),this._currentFlowNode=this._finishFlowLabel(n),e.elseSuite&&this.walk(e.elseSuite),this._addAntecedent(a,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(a),e.asyncToken&&!this._fileInfo.ipythonMode){const t=T.getEnclosingFunction(e);t&&t.isAsync||this._addSyntaxError(m.LocMessage.asyncNotInAsyncFunction(),e.asyncToken)}return!1}visitContinue(e){return this._currentContinueTarget&&this._addAntecedent(this._currentContinueTarget,this._currentFlowNode),this._currentFlowNode=k._unreachableFlowNode,!1}visitBreak(e){return this._currentBreakTarget&&this._addAntecedent(this._currentBreakTarget,this._currentFlowNode),this._currentFlowNode=k._unreachableFlowNode,!1}visitReturn(e){return this._targetFunctionDeclaration&&(this._targetFunctionDeclaration.returnStatements||(this._targetFunctionDeclaration.returnStatements=[]),this._targetFunctionDeclaration.returnStatements.push(e)),e.returnExpression&&this.walk(e.returnExpression),y.setFlowNode(e,this._currentFlowNode),this._currentReturnTarget&&this._addAntecedent(this._currentReturnTarget,this._currentFlowNode),this._finallyTargets.forEach((e=>{this._addAntecedent(e,this._currentFlowNode)})),this._currentFlowNode=k._unreachableFlowNode,!1}visitYield(e){return this._isInListComprehension(e,!0)&&this._addSyntaxError(m.LocMessage.yieldWithinListCompr(),e),this._bindYield(e),!1}visitYieldFrom(e){return this._isInListComprehension(e,!0)&&this._addSyntaxError(m.LocMessage.yieldWithinListCompr(),e),this._bindYield(e),!1}visitMemberAccess(e){return this.walk(e.leftExpression),y.setFlowNode(e,this._currentFlowNode),!1}visitName(e){return y.setFlowNode(e,this._currentFlowNode),!1}visitIndex(e){y.setFlowNode(e,this._currentFlowNode),this.walk(e.baseExpression);const t=this._isInAnnotatedAnnotation;return this._isTypingAnnotation(e.baseExpression,"Annotated")&&(this._isInAnnotatedAnnotation=!0),e.items.forEach((e=>{this.walk(e)})),this._isInAnnotatedAnnotation=t,!1}visitIf(e){const t=this._currentFlowNode,n=this._createBranchLabel(),a=this._createBranchLabel(),r=this._createBranchLabel(t);return r.affectedExpressions=this._trackCodeFlowExpressions((()=>{const t=_.evaluateStaticBoolLikeExpression(e.testExpression,this._fileInfo.executionEnvironment,this._fileInfo.definedConstants,this._typingImportAliases,this._sysImportAliases);this._bindConditional(e.testExpression,n,a),this._currentFlowNode=!1===t?k._unreachableFlowNode:this._finishFlowLabel(n),this.walk(e.ifSuite),this._addAntecedent(r,this._currentFlowNode),this._currentFlowNode=!0===t?k._unreachableFlowNode:this._finishFlowLabel(a),e.elseSuite?this.walk(e.elseSuite):this._bindNeverCondition(e.testExpression,r,!1),this._addAntecedent(r,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(r)})),!1}visitWhile(e){const t=this._createBranchLabel(),n=this._createBranchLabel(),a=this._createBranchLabel(),r=_.evaluateStaticBoolLikeExpression(e.testExpression,this._fileInfo.executionEnvironment,this._fileInfo.definedConstants,this._typingImportAliases,this._sysImportAliases),s=this._createLoopLabel();return this._addAntecedent(s,this._currentFlowNode),this._currentFlowNode=s,this._bindConditional(e.testExpression,t,n),this._currentFlowNode=!1===r?k._unreachableFlowNode:this._finishFlowLabel(t),this._bindLoopStatement(s,a,(()=>{this.walk(e.whileSuite)})),this._addAntecedent(s,this._currentFlowNode),this._currentFlowNode=!0===r?k._unreachableFlowNode:this._finishFlowLabel(n),e.elseSuite&&this.walk(e.elseSuite),this._addAntecedent(a,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(a),!1}visitAssert(e){const t=this._createBranchLabel(),n=this._createBranchLabel();return this._bindConditional(e.testExpression,t,n),e.exceptionExpression&&(this._currentFlowNode=this._finishFlowLabel(n),this.walk(e.exceptionExpression)),this._currentFlowNode=this._finishFlowLabel(t),!1}visitExcept(e){if(e.typeExpression&&this.walk(e.typeExpression),e.name){this.walk(e.name);const t=this._bindNameToScope(this._currentScope,e.name);if(this._createAssignmentTargetFlowNodes(e.name,!0,!1),t){const n={type:1,node:e.name,isConstant:(0,I.isConstantName)(e.name.value),inferredTypeSource:e,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e.name,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};t.addDeclaration(n)}}const t=this._isInExceptSuite;return this._isInExceptSuite=!0,this.walk(e.exceptSuite),this._isInExceptSuite=t,e.name&&this._createFlowAssignment(e.name,!0),!1}visitRaise(e){return this._currentFlowNode&&this._addExceptTargets(this._currentFlowNode),this._targetFunctionDeclaration&&(this._targetFunctionDeclaration.raiseStatements||(this._targetFunctionDeclaration.raiseStatements=[]),this._targetFunctionDeclaration.raiseStatements.push(e)),e.typeExpression&&this.walk(e.typeExpression),e.valueExpression&&this.walk(e.valueExpression),e.tracebackExpression&&this.walk(e.tracebackExpression),this._finallyTargets.forEach((e=>{this._addAntecedent(e,this._currentFlowNode)})),this._currentFlowNode=k._unreachableFlowNode,!1}visitTry(e){const t=this._currentFlowNode,n=e.exceptClauses.map((()=>this._createBranchLabel())),a=this._createBranchLabel(t);let r=!1;const s=this._createBranchLabel(t),i={flags:g.FlowFlags.PreFinallyGate,id:this._getUniqueFlowNodeId(),antecedent:s};if(a.affectedExpressions=this._trackCodeFlowExpressions((()=>{e.finallySuite&&this._addAntecedent(a,i);e.exceptClauses.some((e=>!e.typeExpression))||n.push(s),n.forEach((e=>{this._addAntecedent(e,this._currentFlowNode)})),e.finallySuite&&this._finallyTargets.push(s),this._useExceptTargets(n,(()=>{this.walk(e.trySuite)})),e.elseSuite&&this.walk(e.elseSuite),this._addAntecedent(a,this._currentFlowNode),this._isCodeUnreachable()||(r=!0),e.exceptClauses.forEach(((e,t)=>{this._currentFlowNode=this._finishFlowLabel(n[t]),this.walk(e),this._addAntecedent(a,this._currentFlowNode),this._isCodeUnreachable()||(r=!0)})),e.finallySuite&&this._finallyTargets.pop(),this._currentFlowNode=this._finishFlowLabel(a)})),e.finallySuite){this.walk(e.finallySuite);const t={flags:g.FlowFlags.PostFinally,id:this._getUniqueFlowNodeId(),finallyNode:e.finallySuite,antecedent:this._currentFlowNode,preFinallyGate:i};this._currentFlowNode=r?t:k._unreachableFlowNode}return!1}visitAwait(e){var t;const n=T.getEnclosingFunction(e);if(void 0===n||!n.isAsync){if(this._fileInfo.ipythonMode&&void 0===n)return!0;32!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&this._addSyntaxError(m.LocMessage.awaitNotInAsync(),e)}return!0}visitGlobal(e){const t=this._currentScope.getGlobalScope().scope;return e.nameList.forEach((e=>{const n=e.value;0===this._currentScope.getBindingType(n)&&this._addSyntaxError(m.LocMessage.nonLocalRedefinition().format({name:n}),e);const a=this._currentScope.lookUpSymbolRecursive(n);a&&a.scope===this._currentScope&&this._addSyntaxError(m.LocMessage.globalReassignment().format({name:n}),e),this._bindNameToScope(t,e),this._currentScope!==t&&this._currentScope.setBindingType(n,1)})),!0}visitNonlocal(e){const t=this._currentScope.getGlobalScope().scope;return this._currentScope===t?this._addSyntaxError(m.LocMessage.nonLocalInModule(),e):e.nameList.forEach((e=>{const n=e.value;1===this._currentScope.getBindingType(n)&&this._addSyntaxError(m.LocMessage.globalRedefinition().format({name:n}),e);const a=this._currentScope.lookUpSymbolRecursive(n);a&&a.scope===this._currentScope?this._addSyntaxError(m.LocMessage.nonLocalReassignment().format({name:n}),e):a&&a.scope!==t||this._addSyntaxError(m.LocMessage.nonLocalNoBinding().format({name:n}),e),a&&this._currentScope.setBindingType(n,0)})),!0}visitImportAs(e){var t,n,a,r,s,i;if(e.module.nameParts.length>0){const l=e.module.nameParts[0].value;let p,c;e.alias?(p=e.alias.value,c=e.alias):(p=l,c=e.module.nameParts[0]);const d=this._bindNameToScope(this._currentScope,c);!d||4!==this._currentScope.type&&5!==this._currentScope.type||e.alias&&1===e.module.nameParts.length&&e.module.nameParts[0].value===e.alias.value||(this._fileInfo.isStubFile||this._fileInfo.isInPyTypedPackage)&&this._potentialHiddenSymbols.set(p,d);const u=y.getImportInfo(e.module);(0,o.assert)(void 0!==u),d&&this._createAliasDeclarationForMultipartImportName(e,e.alias,u,d),this._createFlowAssignment(e.alias?e.alias:e.module.nameParts[0]),1===e.module.nameParts.length&&("typing"===l||"typing_extensions"===l?this._typingImportAliases.push(null!==(n=null===(t=e.alias)||void 0===t?void 0:t.value)&&void 0!==n?n:l):"sys"===l?this._sysImportAliases.push(null!==(r=null===(a=e.alias)||void 0===a?void 0:a.value)&&void 0!==r?r:l):"dataclasses"===l&&this._dataclassesImportAliases.push(null!==(i=null===(s=e.alias)||void 0===s?void 0:s.value)&&void 0!==i?i:l))}return!0}visitImportFrom(e){var t;const n=["Final","ClassVar","Annotated"],a=["InitVar"],r=y.getImportInfo(e.module);y.setFlowNode(e,this._currentFlowNode);let s=u.Uri.empty();r&&r.isImportFound&&!r.isNativeLib&&(s=r.resolvedUris[r.resolvedUris.length-1]);const i=(0,p.stripFileExtension)(this._fileInfo.fileUri.fileName),o="__init__"===i&&1===e.module.leadingDots&&1===e.module.nameParts.length;let l=!1,h=!1;if(1===e.module.nameParts.length){const t=e.module.nameParts[0].value;"typing"!==t&&"typing_extensions"!==t||(l=!0),"dataclasses"===t&&(h=!0)}if(e.isWildcardImport){if((T.getEnclosingClass(e)||T.getEnclosingFunction(e))&&this._addSyntaxError(m.LocMessage.wildcardInFunction(),e),r){const i=[];null===(t=this._currentScopeCodeFlowExpressions)||void 0===t||t.add(g.wildcardImportReferenceKey);const p=this._fileInfo.importLookup(s);if(p){const t=this._getWildcardImportNames(p);if(o){t.some((t=>t===e.module.nameParts[0].value))||this._addImplicitFromImport(e,r)}t.forEach((t=>{const n=this._bindNameValueToScope(this._currentScope,t);if(n){if(p.symbolTable.get(t)){const a={type:8,node:e,uri:s,loadSymbolsFromPath:!0,range:(0,d.getEmptyRange)(),usesLocalName:!1,symbolName:t,moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};n.addDeclaration(a),i.push(t)}else if(r&&r.filteredImplicitImports){const a=r.filteredImplicitImports.get(t);if(a){const r={type:8,node:e,uri:a.uri,loadSymbolsFromPath:!0,range:(0,d.getEmptyRange)(),usesLocalName:!1,moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite},o={type:8,node:e,uri:s,loadSymbolsFromPath:!0,usesLocalName:!1,symbolName:t,submoduleFallback:r,range:(0,d.getEmptyRange)(),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};n.addDeclaration(o),i.push(t)}}}}))}this._createFlowWildcardImport(e,i),l&&n.forEach((e=>{this._typingSymbolAliases.set(e,e)})),h&&a.forEach((e=>{this._dataclassesSymbolAliases.set(e,e)}))}}else o&&this._addImplicitFromImport(e,r),e.imports.forEach((t=>{const o=t.name.value,p=t.alias||t.name;y.setFlowNode(t,this._currentFlowNode);const u=this._bindNameToScope(this._currentScope,p);if(u){let m,y;e.module.nameParts.length>0&&(4!==this._currentScope.type&&5!==this._currentScope.type||t.alias&&t.alias.value===t.name.value||(this._fileInfo.isStubFile||this._fileInfo.isInPyTypedPackage)&&this._potentialHiddenSymbols.set(p.value,u)),r&&r.filteredImplicitImports&&(m=r.filteredImplicitImports.get(o));let g=!0;m&&(y={type:8,node:t,uri:m.uri,loadSymbolsFromPath:!0,range:(0,d.getEmptyRange)(),usesLocalName:!1,moduleName:this._formatModuleName(e.module),isInExceptSuite:this._isInExceptSuite},"__init__"===i&&(1===e.module.leadingDots&&0===e.module.nameParts.length||s.equals(this._fileInfo.fileUri))&&(g=!1));const f={type:8,node:t,uri:s,loadSymbolsFromPath:g,usesLocalName:!!t.alias,symbolName:o,submoduleFallback:y,range:(0,c.convertTextRangeToRange)(p,this._fileInfo.lines),moduleName:this._formatModuleName(e.module),isInExceptSuite:this._isInExceptSuite,isNativeLib:null==r?void 0:r.isNativeLib};u.addDeclaration(f),this._createFlowAssignment(t.alias||t.name),l&&n.some((e=>e===t.name.value))&&this._typingSymbolAliases.set(p.value,t.name.value),h&&a.some((e=>e===t.name.value))&&this._dataclassesSymbolAliases.set(p.value,t.name.value)}}));return!0}visitWith(e){e.withItems.forEach((e=>{this.walk(e.expression),e.target&&(this._bindPossibleTupleNamedTarget(e.target),this._addInferredTypeAssignmentForVariable(e.target,e),this._createAssignmentTargetFlowNodes(e.target,!0,!1))}));const t=this._createContextManagerLabel(e.withItems.map((e=>e.expression)),!!e.isAsync,!1);this._addAntecedent(t,this._currentFlowNode);const n=this._createContextManagerLabel(e.withItems.map((e=>e.expression)),!!e.isAsync,!0);this._currentExceptTargets.forEach((e=>{this._addAntecedent(e,n)}));const a=this._currentFlowNode,r=this._createBranchLabel(a);return this._addAntecedent(r,t),r.affectedExpressions=this._trackCodeFlowExpressions((()=>{if(this._useExceptTargets([t,n],(()=>{this.walk(e.suite)})),this._addAntecedent(r,this._currentFlowNode),this._currentFlowNode=r,this._isCodeUnreachable()||this._addExceptTargets(this._currentFlowNode),e.asyncToken&&!this._fileInfo.ipythonMode){const t=T.getEnclosingFunction(e);t&&t.isAsync||this._addSyntaxError(m.LocMessage.asyncNotInAsyncFunction(),e.asyncToken)}})),!1}visitTernary(e){const t=this._currentFlowNode,n=this._createBranchLabel(),a=this._createBranchLabel(),r=this._createBranchLabel(t);return r.affectedExpressions=this._trackCodeFlowExpressions((()=>{this._bindConditional(e.testExpression,n,a),this._currentFlowNode=this._finishFlowLabel(n),this.walk(e.ifExpression),this._addAntecedent(r,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(a),this.walk(e.elseExpression),this._addAntecedent(r,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(r)})),!1}visitUnaryOperation(e){return 38===e.operator&&this._currentFalseTarget&&this._currentTrueTarget?this._bindConditional(e.expression,this._currentFalseTarget,this._currentTrueTarget):this._disableTrueFalseTargets((()=>{this.walk(e.expression)})),!1}visitBinaryOperation(e){if(36===e.operator||37===e.operator){let t,n=this._currentTrueTarget,a=this._currentFalseTarget;n&&a||(t=this._createBranchLabel(),n=a=t);const r=this._createBranchLabel();36===e.operator?this._bindConditional(e.leftExpression,r,a):this._bindConditional(e.leftExpression,n,r),this._currentFlowNode=this._finishFlowLabel(r),this._bindConditional(e.rightExpression,n,a),t&&(this._currentFlowNode=this._finishFlowLabel(t))}else this._disableTrueFalseTargets((()=>{this.walk(e.leftExpression),this.walk(e.rightExpression)}));return!1}visitListComprehension(e){const t=T.getEnclosingFunction(e);return e.forIfNodes.length>0&&33===e.forIfNodes[0].nodeType&&this.walk(e.forIfNodes[0].iterableExpression),this._createNewScope(1,this._getNonClassParentScope(),void 0,(()=>{var n;y.setScope(e,this._currentScope);const a=this._createBranchLabel();for(let a=0;a<e.forIfNodes.length;a++){const r=e.forIfNodes[a],s=new Map;33===r.nodeType&&(this._bindPossibleTupleNamedTarget(r.targetExpression,s),this._addInferredTypeAssignmentForVariable(r.targetExpression,r),r.asyncToken&&!this._fileInfo.ipythonMode&&(t&&t.isAsync||31===(null===(n=e.parent)||void 0===n?void 0:n.nodeType)&&this._addSyntaxError(m.LocMessage.asyncNotInAsyncFunction(),r.asyncToken)))}for(let t=0;t<e.forIfNodes.length;t++){const n=e.forIfNodes[t];if(33===n.nodeType)0!==t&&this.walk(n.iterableExpression),this._createAssignmentTargetFlowNodes(n.targetExpression,!0,!1);else{const e=this._createBranchLabel();this._bindConditional(n.testExpression,e,a),this._currentFlowNode=this._finishFlowLabel(e)}}this.walk(e.expression),this._addAntecedent(a,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(a)})),!1}visitMatch(e){this.walk(e.subjectExpression);const t=[],n=this._isNarrowingExpression(e.subjectExpression,t);n&&t.forEach((e=>{const t=(0,g.createKeyForReference)(e);this._currentScopeCodeFlowExpressions.add(t)}));const a=this._createBranchLabel();let r=!1;return e.cases.forEach((t=>{const n=this._createBranchLabel(),s=this._createBranchLabel(),i=this._createBranchLabel();this._addAntecedent(s,this._currentFlowNode),t.isIrrefutable?t.guardExpression||(r=!0):this._addAntecedent(n,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(s),this.walk(t.pattern),this._createFlowNarrowForPattern(e.subjectExpression,t),t.guardExpression?this._bindConditional(t.guardExpression,i,n):this._addAntecedent(i,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(i),this.walk(t.suite),this._addAntecedent(a,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(n)})),n&&this._createFlowNarrowForPattern(e.subjectExpression,e),r||this._createFlowExhaustedMatch(e),this._addAntecedent(a,this._currentFlowNode),this._currentFlowNode=this._finishFlowLabel(a),!1}visitPatternAs(e){const t=this._createBranchLabel();if(e.orPatterns.forEach((e=>{this.walk(e),this._addAntecedent(t,this._currentFlowNode)})),this._currentFlowNode=this._finishFlowLabel(t),e.target){this.walk(e.target);const t=this._bindNameToScope(this._currentScope,e.target);if(this._createAssignmentTargetFlowNodes(e.target,!1,!1),t){const n={type:1,node:e.target,isConstant:(0,I.isConstantName)(e.target.value),inferredTypeSource:e,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e.target,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};t.addDeclaration(n)}}return!1}visitPatternCapture(e){return e.isWildcard||this._addPatternCaptureTarget(e.target),!0}visitPatternMappingExpandEntry(e){return"_"!==e.target.value&&this._addPatternCaptureTarget(e.target),!0}_formatModuleName(e){return".".repeat(e.leadingDots)+e.nameParts.map((e=>e.value)).join(".")}_getNonClassParentScope(){let e=this._currentScope;for(;3===e.type;)e=e.parent;return e}_addSlotsToCurrentScope(e){(0,o.assert)(3===this._currentScope.type);let t=!1;for(const n of e){const e=n.strings[0].value;if("__dict__"===e){t=!0;continue}let a=this._currentScope.lookUpSymbol(e);if(!a){a=this._currentScope.addSymbol(e,5);const t="none"!==this._fileInfo.diagnosticRuleSet.reportPrivateUsage;(0,I.isPrivateOrProtectedName)(e)&&t&&a.setIsPrivateMember()}const r={type:1,node:n,isConstant:(0,I.isConstantName)(e),isDefinedBySlots:!0,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(n,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};a.addDeclaration(r)}t||this._currentScope.setSlotsNames(e.map((e=>e.strings[0].value)))}_isInListComprehension(e,t=!1){let n,a,r=e;for(;r;){if(32===r.nodeType){if(t&&r.forIfNodes.length>0){const e=r.forIfNodes[0];if(n===e&&33===e.nodeType&&a===e.iterableExpression)return!1}return!0}a=n,n=r,r=r.parent}return!1}_addPatternCaptureTarget(e){const t=this._bindNameToScope(this._currentScope,e);if(this._createAssignmentTargetFlowNodes(e,!1,!1),t){const n={type:1,node:e,isConstant:(0,I.isConstantName)(e.value),inferredTypeSource:e.parent,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite};t.addDeclaration(n)}}_useExceptTargets(e,t){const n=this._currentExceptTargets;this._currentExceptTargets=e,t(),this._currentExceptTargets=n}_getDunderAllNamesFromImport(e){var t,n;const a=this._currentScope.lookUpSymbol(e);if(!a)return;const r=a.getDeclarations().find((e=>8===e.type)),s=(null==r?void 0:r.uri)&&!r.uri.isEmpty()&&r.loadSymbolsFromPath?r.uri:(null===(t=null==r?void 0:r.submoduleFallback)||void 0===t?void 0:t.uri)&&!r.submoduleFallback.uri.isEmpty()&&r.submoduleFallback.loadSymbolsFromPath?r.submoduleFallback.uri:void 0;if(!s)return;let i=this._fileInfo.importLookup(s);return(null==i?void 0:i.dunderAllNames)?i.dunderAllNames:(null===(n=null==r?void 0:r.submoduleFallback)||void 0===n?void 0:n.uri)&&!r.submoduleFallback.uri.isEmpty()?(i=this._fileInfo.importLookup(r.submoduleFallback.uri),null==i?void 0:i.dunderAllNames):void 0}_addImplicitFromImport(e,t){const n=e.module.nameParts[0].value,a=this._bindNameValueToScope(this._currentScope,n);a&&this._createAliasDeclarationForMultipartImportName(e,void 0,t,a),this._createFlowAssignment(e.module.nameParts[0])}_createAliasDeclarationForMultipartImportName(e,t,n,a){var r;const s=e.module.nameParts[0].value;y.setFlowNode(e,this._currentFlowNode);const i=a.getDeclarations().find((e=>8===e.type&&e.firstNamePart===s));let o,l;l=n&&n.isImportFound&&!n.isNativeLib&&n.resolvedUris.length>0?n.resolvedUris[n.resolvedUris.length-1]:h.UnresolvedModuleMarker;const p=n&&n.isImportFound&&!n.isNativeLib&&n.resolvedUris.length>0;o=i||(p?{type:8,node:e,uri:l,loadSymbolsFromPath:!1,range:(0,d.getEmptyRange)(),usesLocalName:!!t,moduleName:t?this._formatModuleName(e.module):".".repeat(e.module.leadingDots)+s,firstNamePart:s,isInExceptSuite:this._isInExceptSuite}:{type:8,node:e,uri:l,loadSymbolsFromPath:!0,range:(0,d.getEmptyRange)(),usesLocalName:!!t,moduleName:null!==(r=null==n?void 0:n.importName)&&void 0!==r?r:"",firstNamePart:t?this._formatModuleName(e.module):".".repeat(e.module.leadingDots)+s,isUnresolved:!0,isInExceptSuite:this._isInExceptSuite});const c=y.getImportInfo(e.module.nameParts[0]);if(c&&c.resolvedUris.length&&(o.uri=c.resolvedUris[0],o.loadSymbolsFromPath=!0,this._addImplicitImportsToLoaderActions(c,o)),t||1===e.module.nameParts.length)o.uri=l,o.loadSymbolsFromPath=!0,o.isUnresolved=!1,n&&this._addImplicitImportsToLoaderActions(n,o);else{let t=o;for(let a=1;a<e.module.nameParts.length;a++){const r=e.module.nameParts[a].value;let s=t.implicitImports?t.implicitImports.get(r):void 0;if(!s){s={uri:n&&a<n.resolvedUris.length?n.resolvedUris[a]:h.UnresolvedModuleMarker,loadSymbolsFromPath:!1,implicitImports:new Map,isUnresolved:!p},t.implicitImports||(t.implicitImports=new Map),t.implicitImports.set(r,s)}if(a===e.module.nameParts.length-1)n&&a<n.resolvedUris.length&&(s.uri=n.resolvedUris[a],s.loadSymbolsFromPath=!0,this._addImplicitImportsToLoaderActions(n,s));else{const t=y.getImportInfo(e.module.nameParts[a]);t&&t.resolvedUris.length&&(s.uri=t.resolvedUris[a],s.loadSymbolsFromPath=!0,this._addImplicitImportsToLoaderActions(t,s))}t=s}}i||a.addDeclaration(o)}_getWildcardImportNames(e){const t=[];if(e.dunderAllNames){if(!e.usesUnsupportedDunderAllForm)return e.dunderAllNames;(0,i.appendArray)(t,e.dunderAllNames)}return e.symbolTable.forEach(((e,n)=>{e.isExternallyHidden()||n.startsWith("_")||t.push(n)})),t}_walkStatementsAndReportUnreachable(e){let t=!1;for(const n of e)if(y.setFlowNode(n,this._currentFlowNode),t||(t=this._isCodeUnreachable()),t){if(this._targetFunctionDeclaration&&!this._targetFunctionDeclaration.isGenerator){(new w).checkContainsYield(n)&&(this._targetFunctionDeclaration.isGenerator=!0)}if(!this._moduleSymbolOnly){new A(this._currentScope).walk(n)}}else this.walk(n);return!1}_createStartFlowNode(){return{flags:g.FlowFlags.Start,id:this._getUniqueFlowNodeId()}}_createBranchLabel(e){return{flags:g.FlowFlags.BranchLabel,id:this._getUniqueFlowNodeId(),antecedents:[],preBranchAntecedent:e,affectedExpressions:void 0}}_createFlowNarrowForPattern(e,t){const n={flags:g.FlowFlags.NarrowForPattern,id:this._getUniqueFlowNodeId(),subjectExpression:e,statement:t,antecedent:this._currentFlowNode};this._currentFlowNode=n}_createContextManagerLabel(e,t,n){return{flags:g.FlowFlags.PostContextManager|g.FlowFlags.BranchLabel,id:this._getUniqueFlowNodeId(),antecedents:[],expressions:e,affectedExpressions:void 0,isAsync:t,blockIfSwallowsExceptions:n}}_createLoopLabel(){return{flags:g.FlowFlags.LoopLabel,id:this._getUniqueFlowNodeId(),antecedents:[],affectedExpressions:void 0}}_finishFlowLabel(e){return 0===e.antecedents.length?k._unreachableFlowNode:1===e.antecedents.length&&e.flags===g.FlowFlags.BranchLabel?e.antecedents[0]:(this._codeFlowComplexity+=e.antecedents.length-1,e)}_bindNeverCondition(e,t,n){const a=[];if(55===e.nodeType&&38===e.operator)this._bindNeverCondition(e.expression,t,!n);else if(7!==e.nodeType||36!==e.operator&&37!==e.operator){if(this._isNarrowingExpression(e,a,!0)){a.filter((e=>38===e.nodeType)).length>0&&(this._currentFlowNode=this._createFlowConditional(n?g.FlowFlags.TrueNeverCondition:g.FlowFlags.FalseNeverCondition,this._currentFlowNode,e))}this._addAntecedent(t,this._currentFlowNode)}else{let a=36===e.operator;if(n&&(a=!a),a){const a=this._currentFlowNode;this._bindNeverCondition(e.leftExpression,t,n),this._currentFlowNode=a,this._bindNeverCondition(e.rightExpression,t,n)}else{const a=this._currentFlowNode,r=this._createBranchLabel();if(this._bindNeverCondition(e.leftExpression,r,n),a!==this._currentFlowNode){this._currentFlowNode=this._finishFlowLabel(r);const s=this._currentFlowNode;this._bindNeverCondition(e.rightExpression,t,n),s===this._currentFlowNode&&(this._currentFlowNode=a)}}}}_bindConditional(e,t,n){this._setTrueFalseTargets(t,n,(()=>{this.walk(e)})),this._isLogicalExpression(e)||(this._addAntecedent(t,this._createFlowConditional(g.FlowFlags.TrueCondition,this._currentFlowNode,e)),this._addAntecedent(n,this._createFlowConditional(g.FlowFlags.FalseCondition,this._currentFlowNode,e)))}_disableTrueFalseTargets(e){this._setTrueFalseTargets(void 0,void 0,e)}_setTrueFalseTargets(e,t,n){const a=this._currentTrueTarget,r=this._currentFalseTarget;this._currentTrueTarget=e,this._currentFalseTarget=t,n(),this._currentTrueTarget=a,this._currentFalseTarget=r}_createFlowConditional(e,t,n){if(t.flags&g.FlowFlags.Unreachable)return t;const a=_.evaluateStaticBoolLikeExpression(n,this._fileInfo.executionEnvironment,this._fileInfo.definedConstants,this._typingImportAliases,this._sysImportAliases);if(!0===a&&e&g.FlowFlags.FalseCondition||!1===a&&e&g.FlowFlags.TrueCondition)return k._unreachableFlowNode;const r=[];if(!this._isNarrowingExpression(n,r,0!=(e&(g.FlowFlags.TrueNeverCondition|g.FlowFlags.FalseNeverCondition))))return t;r.forEach((e=>{const t=(0,g.createKeyForReference)(e);this._currentScopeCodeFlowExpressions.add(t)}));const s=r.filter((e=>38===e.nodeType)),i={flags:e,id:this._getUniqueFlowNodeId(),reference:s.length>0?s[0]:void 0,expression:n,antecedent:t};return this._addExceptTargets(i),i}_isLogicalExpression(e){switch(e.nodeType){case 55:return 38===e.operator;case 7:return 36===e.operator||37===e.operator}return!1}_isNarrowingExpression(e,t,n=!1,a=!1){switch(e.nodeType){case 38:case 35:case 24:if(n){if(38!==e.nodeType)return!1;if(!a)return!1}return!!(0,g.isCodeFlowSupportedForReference)(e)&&(t.push(e),n||(35===e.nodeType&&(0,g.isCodeFlowSupportedForReference)(e.leftExpression)&&t.push(e.leftExpression),24!==e.nodeType||1!==e.items.length||e.trailingComma||0!==e.items[0].argumentCategory||(0,g.isCodeFlowSupportedForReference)(e.baseExpression)&&t.push(e.baseExpression)),!0);case 4:return t.push(e.name),this._isNarrowingExpression(e.rightExpression,t,n,!0),!0;case 7:{const a=39===e.operator||40===e.operator,r=12===e.operator||28===e.operator;if(a||r){if(11===e.rightExpression.nodeType&&26===e.rightExpression.constType)return this._isNarrowingExpression(e.leftExpression,t,n,!0);if(a&&9===e.leftExpression.nodeType&&38===e.leftExpression.leftExpression.nodeType&&"type"===e.leftExpression.leftExpression.value&&1===e.leftExpression.arguments.length&&0===e.leftExpression.arguments[0].argumentCategory)return this._isNarrowingExpression(e.leftExpression.arguments[0].valueExpression,t,n,!0);return this._isNarrowingExpression(e.leftExpression,t,n,!0)}if(40===e.rightExpression.nodeType&&e.rightExpression.isInteger&&(20===e.operator||21===e.operator||15===e.operator||16===e.operator)){return this._isNarrowingExpression(e.leftExpression,t,n,!0)}if((41===e.operator||42===e.operator)&&48===e.leftExpression.nodeType&&this._isNarrowingExpression(e.rightExpression,t,n,!0))return!0;if(41===e.operator||42===e.operator){const a=this._isNarrowingExpression(e.leftExpression,t,n,!0),r=this._isNarrowingExpression(e.rightExpression,t,n,!0);return a||r}return!1}case 55:return 38===e.operator&&this._isNarrowingExpression(e.expression,t,n,!1);case 5:return this._isNarrowingExpression(e.rightExpression,t,n,!0);case 9:if(38===e.leftExpression.nodeType&&("isinstance"===e.leftExpression.value||"issubclass"===e.leftExpression.value)&&2===e.arguments.length)return this._isNarrowingExpression(e.arguments[0].valueExpression,t,n,!0);if(38===e.leftExpression.nodeType&&"callable"===e.leftExpression.value&&1===e.arguments.length)return this._isNarrowingExpression(e.arguments[0].valueExpression,t,n,!0);if(e.arguments.length>=1)return!n&&this._isNarrowingExpression(e.arguments[0].valueExpression,t,n,!0)}return!1}_createAssignmentTargetFlowNodes(e,t,n){switch(e.nodeType){case 38:case 35:case 24:this._createFlowAssignment(e,n),t&&this.walk(e);break;case 52:e.expressions.forEach((e=>{this._createAssignmentTargetFlowNodes(e,t,n)}));break;case 54:this._createAssignmentTargetFlowNodes(e.valueExpression,!1,n),t&&this.walk(e);break;case 56:this._createAssignmentTargetFlowNodes(e.expression,!1,n),t&&this.walk(e);break;case 31:e.entries.forEach((e=>{this._createAssignmentTargetFlowNodes(e,t,n)}));break;default:t&&this.walk(e)}}_createCallFlowNode(e){if(!this._isCodeUnreachable()){this._addExceptTargets(this._currentFlowNode);const t={flags:g.FlowFlags.Call,id:this._getUniqueFlowNodeId(),node:e,antecedent:this._currentFlowNode};this._currentFlowNode=t}}_createVariableAnnotationFlowNode(){if(!this._isCodeUnreachable()){const e={flags:g.FlowFlags.VariableAnnotation,id:this._getUniqueFlowNodeId(),antecedent:this._currentFlowNode};this._currentFlowNode=e}}_createFlowAssignment(e,t=!1){let n=C.indeterminateSymbolId;if(38===e.nodeType){const t=this._currentScope.lookUpSymbolRecursive(e.value);(0,o.assert)(void 0!==t),n=t.symbol.id}const a=this._currentFlowNode;if(!this._isCodeUnreachable()&&(0,g.isCodeFlowSupportedForReference)(e)){const a={flags:g.FlowFlags.Assignment,id:this._getUniqueFlowNodeId(),node:e,antecedent:this._currentFlowNode,targetSymbolId:n},r=(0,g.createKeyForReference)(e);this._currentScopeCodeFlowExpressions.add(r),t&&(a.flags|=g.FlowFlags.Unbind),35===e.nodeType&&this._addExceptTargets(a),this._currentFlowNode=a}t&&void 0!==y.getFlowNode(e)||y.setFlowNode(e,t?a:this._currentFlowNode)}_createFlowWildcardImport(e,t){if(!this._isCodeUnreachable()){const n={flags:g.FlowFlags.WildcardImport,id:this._getUniqueFlowNodeId(),node:e,names:t,antecedent:this._currentFlowNode};this._addExceptTargets(n),this._currentFlowNode=n}y.setFlowNode(e,this._currentFlowNode)}_createFlowExhaustedMatch(e){if(!this._isCodeUnreachable()){const t={flags:g.FlowFlags.ExhaustedMatch,id:this._getUniqueFlowNodeId(),node:e,antecedent:this._currentFlowNode,subjectExpression:e.subjectExpression};this._currentFlowNode=t}y.setAfterFlowNode(e,this._currentFlowNode)}_isCodeUnreachable(){return!!(this._currentFlowNode.flags&g.FlowFlags.Unreachable)}_addExceptTargets(e){this._currentExceptTargets&&this._currentExceptTargets.forEach((t=>{this._addAntecedent(t,e)}))}_trackCodeFlowExpressions(e){const t=this._currentScopeCodeFlowExpressions;this._currentScopeCodeFlowExpressions=new Set,e();const n=this._currentScopeCodeFlowExpressions;return t&&this._currentScopeCodeFlowExpressions.forEach((e=>{t.add(e)})),this._currentScopeCodeFlowExpressions=t,n}_bindLoopStatement(e,t,n){const a=this._currentContinueTarget,r=this._currentBreakTarget;this._currentContinueTarget=e,this._currentBreakTarget=t,e.affectedExpressions=this._trackCodeFlowExpressions(n),this._currentContinueTarget=a,this._currentBreakTarget=r}_addAntecedent(e,t){this._currentFlowNode.flags&g.FlowFlags.Unreachable||e.antecedents.some((e=>e.id===t.id))||e.antecedents.push(t)}_bindNameToScope(e,t,n){return this._bindNameValueToScope(e,t.value,n)}_bindNameValueToScope(e,t,n){const a=this._currentScope.getBindingType(t);if(void 0===a){let a=e.lookUpSymbol(t);return a||(a=e.addSymbol(t,5),4!==this._currentScope.type&&5!==this._currentScope.type||(0,I.isPrivateOrProtectedName)(t)&&((0,I.isPrivateName)(t)?a.setIsExternallyHidden():this._fileInfo.isStubFile||this._fileInfo.isInPyTypedPackage?5===this._currentScope.type?a.setIsExternallyHidden():this._potentialPrivateSymbols.set(t,a):a.setIsPrivateMember()),n&&n.set(t,a)),a}{const e=(0===a?this._currentScope.parent:this._currentScope.getGlobalScope().scope).lookUpSymbolRecursive(t);if(e)return e.symbol}}_bindPossibleTupleNamedTarget(e,t){switch(e.nodeType){case 38:this._bindNameToScope(this._currentScope,e,t);break;case 52:e.expressions.forEach((e=>{this._bindPossibleTupleNamedTarget(e,t)}));break;case 31:e.entries.forEach((e=>{this._bindPossibleTupleNamedTarget(e,t)}));break;case 54:this._bindPossibleTupleNamedTarget(e.valueExpression,t);break;case 56:this._bindPossibleTupleNamedTarget(e.expression,t)}}_addImplicitSymbolToCurrentScope(e,t,n){const a=this._addSymbolToCurrentScope(e,!1);a&&(a.addDeclaration({type:0,node:t,intrinsicType:n,uri:this._fileInfo.fileUri,range:(0,d.getEmptyRange)(),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite}),a.setIsIgnoredForProtocolMatch())}_addSymbolToCurrentScope(e,t){let n=this._currentScope.lookUpSymbol(e);if(!n){let a=0;t&&(a|=1),3===this._currentScope.type&&(a|=4),this._fileInfo.isStubFile&&(0,I.isPrivateOrProtectedName)(e)&&(a|=2),n=this._currentScope.addSymbol(e,a)}return n}_createNewScope(e,t,n,a){const r=this._currentScope,s=new b.Scope(e,t,n);this._currentScope=s;const i=5===e||4===e||2===e,o=this._currentScopeCodeFlowExpressions;return i&&(this._currentScopeCodeFlowExpressions=new Set),a(),this._currentScopeCodeFlowExpressions=o,this._currentScope=r,s}_addInferredTypeAssignmentForVariable(e,t,n=!1){switch(e.nodeType){case 38:{const a=e,r=this._currentScope.lookUpSymbolRecursive(a.value);if(r&&r.symbol){const s={type:1,node:e,isConstant:(0,I.isConstantName)(e.value),inferredTypeSource:t,isInferenceAllowedInPyTyped:this._isInferenceAllowedInPyTyped(a.value),typeAliasName:n?e:void 0,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(a,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite,docString:this._getVariableDocString(e)};r.symbol.addDeclaration(s)}break}case 35:{const n=this._getMemberAccessInfo(e);if(n){const a=e.memberName;let r=n.classScope.lookUpSymbol(a.value);if(!r){r=n.classScope.addSymbol(a.value,1);const e="none"!==this._fileInfo.diagnosticRuleSet.reportPrivateUsage;(0,I.isPrivateOrProtectedName)(a.value)&&e&&r.setIsPrivateMember()}n.isInstanceMember?r.isClassMember()&&r.getDeclarations().some((e=>5===e.type&&e.isMethod))||r.setIsInstanceMember():r.setIsClassMember();const s={type:1,node:e.memberName,isConstant:(0,I.isConstantName)(a.value),inferredTypeSource:t,isDefinedByMemberAccess:!0,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(e.memberName,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite,docString:this._getVariableDocString(e)};r.addDeclaration(s)}break}case 52:e.expressions.forEach((e=>{this._addInferredTypeAssignmentForVariable(e,t)}));break;case 54:this._addInferredTypeAssignmentForVariable(e.valueExpression,t);break;case 56:this._addInferredTypeAssignmentForVariable(e.expression,t);break;case 31:e.entries.forEach((e=>{this._addInferredTypeAssignmentForVariable(e,t)}))}}_isInferenceAllowedInPyTyped(e){return["__match_args__","__slots__","__all__"].some((t=>t===e))}_addTypeDeclarationForVariable(e,t){var n,a,r;let s=!1;switch(e.nodeType){case 38:{const i=e,o=this._currentScope.lookUpSymbolRecursive(i.value);if(o&&o.symbol){const s=this._isAnnotationFinal(t);let l=t;s.isFinal&&(s.finalTypeNode||(l=void 0));const p=this._isAnnotationClassVar(t);p.isClassVar&&(p.classVarTypeNode||(l=void 0));let d=!1;if(s.isFinal){const t=T.getEnclosingClassOrFunction(e);t&&10===t.nodeType&&(3!==(null===(n=e.parent)||void 0===n?void 0:n.nodeType)&&3!==(null===(r=null===(a=e.parent)||void 0===a?void 0:a.parent)||void 0===r?void 0:r.nodeType)||(d=!0))}const u={type:1,node:e,isConstant:(0,I.isConstantName)(i.value),isFinal:s.isFinal,typeAliasName:e,uri:this._fileInfo.fileUri,typeAnnotationNode:l,range:(0,c.convertTextRangeToRange)(i,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite,docString:this._getVariableDocString(e)};if(o.symbol.addDeclaration(u),d&&o.symbol.setIsFinalVarInClassBody(),p.isClassVar?o.symbol.setIsClassVar():d||o.symbol.setIsInstanceMember(),24===t.nodeType)if(this._isDataclassesAnnotation(t.baseExpression,"InitVar"))o.symbol.setIsInitVar();else if(this._isTypingAnnotation(t.baseExpression,"Annotated")&&t.items.length>0){const e=t.items[0].valueExpression;24===e.nodeType&&this._isDataclassesAnnotation(e.baseExpression,"InitVar")&&o.symbol.setIsInitVar()}}s=!0;break}case 35:{const n=this._getMemberAccessInfo(e);if(n){const a=e.memberName;let r=n.classScope.lookUpSymbol(a.value);if(!r){r=n.classScope.addSymbol(a.value,1);const e="none"!==this._fileInfo.diagnosticRuleSet.reportPrivateUsage;(0,I.isPrivateOrProtectedName)(a.value)&&e&&r.setIsPrivateMember()}n.isInstanceMember?r.setIsInstanceMember():r.setIsClassMember();const i=this._isAnnotationFinal(t),o={type:1,node:e.memberName,isConstant:(0,I.isConstantName)(a.value),isDefinedByMemberAccess:!0,isFinal:i.isFinal,uri:this._fileInfo.fileUri,typeAnnotationNode:i.isFinal&&!i.finalTypeNode?void 0:t,range:(0,c.convertTextRangeToRange)(e.memberName,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite,docString:this._getVariableDocString(e)};r.addDeclaration(o),s=!0}break}}s||this._addDiagnostic(this._fileInfo.diagnosticRuleSet.reportInvalidTypeForm,l.DiagnosticRule.reportInvalidTypeForm,m.LocMessage.annotationNotSupported(),t)}_isTypingAnnotation(e,t){return this._isKnownAnnotation(e,t,this._typingImportAliases,this._typingSymbolAliases)}_isDataclassesAnnotation(e,t){return this._isKnownAnnotation(e,t,this._dataclassesImportAliases,this._dataclassesSymbolAliases)}_isKnownAnnotation(e,t,n,a){let r=e;if(48===r.nodeType&&r.typeAnnotation&&(r=r.typeAnnotation),38===r.nodeType){if(a.get(r.value)===t)return!0}else if(35===r.nodeType&&38===r.leftExpression.nodeType&&r.memberName.value===t){const e=r.leftExpression.value;return n.some((t=>t===e))}return!1}_getVariableDocString(e){const t=T.getVariableDocStringNode(e);if(!t)return;const n=t.strings;return 1===n.length?n[0].value:n.map((e=>e.value)).join("")}_isAnnotationFinal(e){let t,n=!1;if(e)if(this._isTypingAnnotation(e,"Final"))n=!0;else if(24===e.nodeType&&1===e.items.length){!this._isAnnotationFinal(e.baseExpression).isFinal||0!==e.items[0].argumentCategory||e.items[0].name||e.trailingComma||(n=!0,t=e.items[0].valueExpression)}return{isFinal:n,finalTypeNode:t}}_isAnnotationClassVar(e){let t,n=!1;for(;e;){if(48===e.nodeType&&e.typeAnnotation&&(e=e.typeAnnotation),!(24===e.nodeType&&e.items.length>0&&this._isTypingAnnotation(e.baseExpression,"Annotated"))){if(this._isTypingAnnotation(e,"ClassVar")){n=!0;break}if(24===e.nodeType&&1===e.items.length){!this._isAnnotationClassVar(e.baseExpression).isClassVar||0!==e.items[0].argumentCategory||e.items[0].name||e.trailingComma||(n=!0,t=e.items[0].valueExpression);break}break}e=e.items[0].valueExpression}return{isClassVar:n,classVarTypeNode:t}}_getMemberAccessInfo(e){if(38!==e.leftExpression.nodeType)return;const t=e.leftExpression.value,n=T.getEnclosingFunction(e);if(!n)return;const a=T.getEnclosingClass(n,!0);if(!a)return;let r=!1;if(n.parameters.length<1||!n.parameters[0].name)return;const s=a.name.value,i=n.parameters[0].name.value;if(t===s)r=!1;else{if(t!==i)return;if("__new__"===n.name.value)r=!1;else{r=!0;for(const e of n.decorators)if(38===e.expression.nodeType){const t=e.expression.value;if("staticmethod"===t)return;if("classmethod"===t){r=!1;break}}}}const l=y.getScope(a);return(0,o.assert)(void 0!==l),{classNode:a,methodNode:n,classScope:l,isInstanceMember:r}}_addImplicitImportsToLoaderActions(e,t){e.filteredImplicitImports.forEach((e=>{const n=t.implicitImports?t.implicitImports.get(e.name):void 0;n?(n.uri=e.uri,n.loadSymbolsFromPath=!0):(t.implicitImports||(t.implicitImports=new Map),t.implicitImports.set(e.name,{uri:e.uri,loadSymbolsFromPath:!0,implicitImports:new Map}))}))}_handleTypingStubAssignmentOrAnnotation(e){if(!this._fileInfo.isTypingStubFile)return!1;let t;if(54===e.nodeType)t=e;else{if(54!==e.leftExpression.nodeType)return!1;t=e.leftExpression}if(38!==t.valueExpression.nodeType)return!1;const n=t.valueExpression,a=new Set(["Tuple","Generic","Protocol","Callable","Type","ClassVar","Final","Literal","TypedDict","Union","Optional","Annotated","TypeAlias","Concatenate","TypeGuard","Unpack","Self","NoReturn","Never","LiteralString","OrderedDict","TypeIs"]),r=n.value;if(!a.has(r))return!1;const s={type:7,node:t,uri:this._fileInfo.fileUri,range:(0,c.convertTextRangeToRange)(t,this._fileInfo.lines),moduleName:this._fileInfo.moduleName,isInExceptSuite:this._isInExceptSuite},i=this._bindNameToScope(this._currentScope,t.valueExpression);return i&&i.addDeclaration(s),y.setDeclaration(e,s),!0}_deferBinding(e){this._moduleSymbolOnly||this._deferredBindingTasks.push({scope:this._currentScope,codeFlowExpressions:this._currentScopeCodeFlowExpressions,callback:e})}_bindDeferred(){for(;this._deferredBindingTasks.length>0;){const e=this._deferredBindingTasks.shift();this._currentScope=e.scope,this._currentScopeCodeFlowExpressions=e.codeFlowExpressions,e.callback()}}_bindYield(e){const t=T.getEnclosingFunction(e);t?t.isAsync&&61===e.nodeType&&this._addSyntaxError(m.LocMessage.yieldFromOutsideAsync(),e):T.getEnclosingLambda(e)||this._addSyntaxError(m.LocMessage.yieldOutsideFunction(),e),this._targetFunctionDeclaration&&(this._targetFunctionDeclaration.yieldStatements||(this._targetFunctionDeclaration.yieldStatements=[]),this._targetFunctionDeclaration.yieldStatements.push(e),this._targetFunctionDeclaration.isGenerator=!0),e.expression&&this.walk(e.expression),y.setFlowNode(e,this._currentFlowNode)}_getUniqueFlowNodeId(){return this._codeFlowComplexity+=.05,(0,g.getUniqueFlowNodeId)()}_addDiagnostic(e,t,n,a){let r;switch(e){case"error":case"warning":case"information":r=this._fileInfo.diagnosticSink.addDiagnosticWithTextRange(e,n,a);break;case"none":break;default:return(0,o.assertNever)(e,`${e} is not expected`)}return r&&r.setRule(t),r}_addSyntaxError(e,t){return this._fileInfo.diagnosticSink.addDiagnosticWithTextRange("error",e,t)}}t.Binder=k,k._unreachableFlowNode={flags:g.FlowFlags.Unreachable,id:(0,g.getUniqueFlowNodeId)()};class w extends v.ParseTreeWalker{constructor(){super(...arguments),this._containsYield=!1}checkContainsYield(e){return this.walk(e),this._containsYield}visitYield(e){return this._containsYield=!0,!1}visitYieldFrom(e){return this._containsYield=!0,!1}}t.YieldFinder=w;class S extends v.ParseTreeWalker{constructor(){super(...arguments),this._containsReturn=!1}checkContainsReturn(e){return this.walk(e),this._containsReturn}visitReturn(e){return this._containsReturn=!0,!1}}t.ReturnFinder=S;class A extends v.ParseTreeWalker{constructor(e){super(),this._currentScope=e}visitClass(e){const t=this._createNewScope(3,(()=>{this.walk(e.suite)}));return y.getScope(e)||y.setScope(e,t),!1}visitFunction(e){const t=this._createNewScope(2,(()=>{this.walk(e.suite)}));return y.getScope(e)||y.setScope(e,t),!1}_createNewScope(e,t){const n=this._currentScope,a=new b.Scope(e,this._currentScope);return this._currentScope=a,t(),this._currentScope=n,a}}t.DummyScopeGenerator=A},80232:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CacheManager=void 0;const a=n(83181),r=n(47604);class s{constructor(e=0){this._maxWorkers=e,this._pausedCount=0,this._cacheOwners=[],this._sharedUsagePosition=0,this._lastHeapStats=Date.now()}registerCacheOwner(e){this._cacheOwners.push(e)}addWorker(e,t){const n=this._getSharedUsageBuffer();n&&(t.postMessage({requestType:"cacheUsageBuffer",sharedUsageBuffer:n,data:e.toString()}),t.on("exit",(()=>{new Float64Array(n)[e]=0})))}handleCachedUsageBufferMessage(e){if("cacheUsageBuffer"===e.requestType){const t=parseInt(e.data||"0"),n=e.sharedUsageBuffer;n&&t&&(this._sharedUsageBuffer=n,this._sharedUsagePosition=t)}}unregisterCacheOwner(e){const t=this._cacheOwners.findIndex((t=>t===e));t<0?(0,a.fail)("Specified cache provider not found"):this._cacheOwners.splice(t,1)}pauseTracking(){const e=this;return e._pausedCount++,{dispose(){e._pausedCount--}}}getCacheUsage(){if(this._pausedCount>0)return-1;let e=0;return this._cacheOwners.forEach((t=>{e+=t.getCacheUsage()})),e}emptyCache(e){if(e){const t=(0,r.getHeapStatistics)();e.info(`Emptying type cache to avoid heap overflow. Used ${this._convertToMB(t.used_heap_size)} out of ${this._convertToMB(t.heap_size_limit)}.`)}this._cacheOwners.forEach((e=>{e.emptyCache()}))}getUsedHeapRatio(e){const t=(0,r.getHeapStatistics)();let n=this._getTotalHeapUsage(t);return e&&Date.now()-this._lastHeapStats>1e3&&(this._lastHeapStats=Date.now(),e.info(`Heap stats: total_heap_size=${this._convertToMB(t.total_heap_size)}, used_heap_size=${this._convertToMB(t.used_heap_size)}, cross_worker_used_heap_size=${this._convertToMB(n)}, total_physical_size=${this._convertToMB(t.total_physical_size)}, total_available_size=${this._convertToMB(t.total_available_size)}, heap_size_limit=${this._convertToMB(t.heap_size_limit)}`)),n+=.05*n,n/t.heap_size_limit}_convertToMB(e){return`${Math.round(e/1048576)}MB`}_getSharedUsageBuffer(){try{return!this._sharedUsageBuffer&&this._maxWorkers>0&&(this._sharedUsageBuffer=new SharedArrayBuffer(8*(this._maxWorkers+1))),this._sharedUsageBuffer}catch{return}}_getTotalHeapUsage(e){const t=this._getSharedUsageBuffer();if(t){const n=new Float64Array(t);return n[this._sharedUsagePosition]=e.used_heap_size,n.reduce(((e,t)=>e+t),0)}return e.used_heap_size}}t.CacheManager=s,function(e){e.is=function(e){return void 0!==e.registerCacheOwner&&void 0!==e.unregisterCacheOwner&&void 0!==e.pauseTracking&&void 0!==e.getCacheUsage&&void 0!==e.emptyCache&&void 0!==e.getUsedHeapRatio}}(s||(t.CacheManager=s={}))},2816:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Checker=void 0;const i=n(65872),o=n(28040),l=n(83181),p=n(72484),c=n(97652),d=n(61328),u=n(55164),m=n(55084),y=n(46772),g=n(95960),h=n(79428),f=n(70736),T=s(n(9316)),v=n(90272),b=n(65392),_=n(61340),C=n(27884),I=n(62744),k=n(29332),w=n(21440),S=n(92488),A=s(n(28340)),x=n(78232),P=n(3573),N=n(85636),D=n(69160),F=n(41500),E=n(76392),M=n(21084),O=s(n(80944)),z=n(8e4),V=n(508),U=n(46048),R=n(808),L=n(97632),j=n(45468),B=n(8312);class q extends x.ParseTreeWalker{constructor(e,t,n,a,r){super(),this._importResolver=e,this._evaluator=t,this._sourceMapper=a,this._dependentFiles=r,this._isUnboundCheckSuppressed=!1,this._scopedNodes=[],this._typeParameterLists=[],this._moduleNode=n.parseTree,this._fileInfo=T.getFileInfo(this._moduleNode)}check(){this._scopedNodes.push(this._moduleNode),this._conditionallyReportShadowedModule();const e=T.getCodeFlowComplexity(this._moduleNode);e>V.maxCodeComplexity&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportGeneralTypeIssues,c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.codeTooComplexToAnalyze(),{start:0,length:0}),this._walkStatementsAndReportUnreachable(this._moduleNode.statements);const t=T.getDunderAllInfo(this._moduleNode);t&&(this._evaluator.markNamesAccessed(this._moduleNode,t.names),this._reportUnusedDunderAllSymbols(t.stringNodes)),this._validateSymbolTables(),this._reportDuplicateImports()}walk(e){T.isCodeUnreachable(e)?this._evaluator.suppressDiagnostics(e,(()=>{super.walk(e)})):super.walk(e)}visitSuite(e){return this._walkStatementsAndReportUnreachable(e.statements),!1}visitStatementList(e){return e.statements.forEach((e=>{(0,h.isExpressionNode)(e)&&(this._evaluator.getType(e),this._reportUnusedExpression(e))})),!0}visitClass(e){const t=this._evaluator.getTypeOfClass(e);return e.typeParameters&&this.walk(e.typeParameters),this.walk(e.suite),this.walkMultiple(e.decorators),this.walkMultiple(e.arguments),t&&(B.ClassType.isProtocolClass(t.classType)&&(e.arguments.forEach((e=>{if(!e.name){const n=this._evaluator.getType(e.valueExpression);n&&(0,B.isInstantiableClass)(n)&&!B.ClassType.isBuiltIn(n,"Protocol")&&!B.ClassType.isBuiltIn(n,"Generic")&&(B.ClassType.isProtocolClass(n)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.protocolBaseClass().format({classType:t.classType.details.name,baseType:n.details.name}),e.valueExpression))}})),this._validateProtocolTypeParamVariance(e,t.classType)),this._fileInfo.isStubFile||this._validateSlotsClassVarConflict(t.classType),this._validateBaseClassOverrides(t.classType),this._validateTypedDictOverrides(t.classType),this._validateOverloadDecoratorConsistency(t.classType),this._validateMultipleInheritanceBaseClasses(t.classType,e.name),this._validateMultipleInheritanceCompatibility(t.classType,e.name),this._validateConstructorConsistency(t.classType,e.name),this._validateFinalMemberOverrides(t.classType),this._validateInstanceVariableInitialization(e,t.classType),this._validateFinalClassNotAbstract(t.classType,e),this._validateDataClassPostInit(t.classType,e),this._validateEnumMembers(t.classType,e),B.ClassType.isTypedDictClass(t.classType)&&this._validateTypedDictClassSuite(e.suite),B.ClassType.isEnumClass(t.classType)&&this._validateEnumClassOverride(e,t.classType),this._evaluator.validateInitSubclassArgs(e,t.classType)),this._scopedNodes.push(e),!1}visitFunction(e){var t,n;e.typeParameters&&this.walk(e.typeParameters),this._fileInfo.diagnosticRuleSet.analyzeUnannotatedFunctions||this._fileInfo.isStubFile||A.isUnannotatedFunction(e)&&this._evaluator.addInformation(g.LocMessage.unannotatedFunctionSkipped().format({name:e.name.value}),e.name);const a=this._evaluator.getTypeOfFunction(e),r=A.getEnclosingClass(e,!0);if(a){let s=!1;const i=new Set,o=(0,S.getParameterListDetails)(a.functionType);if(e.parameters.forEach(((e,t)=>{if(e.name)if(0===e.category&&t>=o.positionOnlyParamCount&&i.add(e.name.value),1===e.category){const t=e.typeAnnotation||e.typeAnnotationComment;if(t&&35===t.nodeType&&"args"===t.memberName.value){const e=this._evaluator.getType(t.leftExpression);e&&(0,B.isTypeVar)(e)&&e.details.isParamSpec&&(s=!0)}}else 2===e.category&&(s=!1);if(e.name&&0===e.category&&s&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.namedParamAfterParamSpecArgs().format({name:e.name.value}),e.name),e.name&&"_"!==e.name.value){const t=a.functionType.details.parameters.find((t=>{var n;return t.name===(null===(n=e.name)||void 0===n?void 0:n.value)}));if(t){const n=t.type;if("none"!==this._fileInfo.diagnosticRuleSet.reportUnknownParameterType)if((0,B.isUnknown)(n)||(0,B.isTypeVar)(n)&&n.details.isSynthesized&&!n.details.isSynthesizedSelf)this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownParameterType,g.LocMessage.paramTypeUnknown().format({paramName:e.name.value}),e.name);else if((0,R.isPartlyUnknown)(n)){const t=new p.DiagnosticAddendum;t.addMessage(g.LocAddendum.paramType().format({paramType:this._evaluator.printType(n,{expandTypeAlias:!0})})),this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownParameterType,g.LocMessage.paramTypePartiallyUnknown().format({paramName:e.name.value})+t.getString(),e.name)}let a=!1;(t.typeAnnotation||(0,B.isTypeVar)(n)&&n.details.isSynthesizedSelf)&&(a=!0),a||"none"===this._fileInfo.diagnosticRuleSet.reportMissingParameterType||this._evaluator.addDiagnostic(c.DiagnosticRule.reportMissingParameterType,g.LocMessage.paramAnnotationMissing().format({name:e.name.value}),e.name)}}})),o.hasUnpackedTypedDict){const n=a.functionType.details.parameters.length-1,r=B.FunctionType.getEffectiveParameterType(a.functionType,n);if((0,B.isClass)(r)&&r.details.typedDictEntries){const a=new Set;r.details.typedDictEntries.knownItems.forEach(((e,t)=>{i.has(t)&&a.add(t)})),a.size>0&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.overlappingKeywordArgs().format({names:[...a.values()].join(", ")}),null!==(t=e.parameters[n].typeAnnotation)&&void 0!==t?t:e.parameters[n])}}const l=a.functionType.details.parameters.filter((e=>!!(e.typeAnnotation&&(0,B.isTypeVar)(e.type)&&(0,B.isParamSpec)(e.type)&&0!==e.category&&e.name&&e.type.paramSpecAccess)));if(1===l.length&&l[0].typeAnnotation&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramSpecArgsKwargsUsage(),l[0].typeAnnotation),this._fileInfo.isStubFile){e.returnTypeAnnotation||(null===(n=e.functionAnnotationComment)||void 0===n?void 0:n.returnTypeAnnotation)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownParameterType,g.LocMessage.returnTypeUnknown(),e.name)}r&&this._validateMethod(e,a.functionType,r)}e.parameters.forEach(((e,t)=>{if(e.defaultValue&&this.walk(e.defaultValue),e.typeAnnotation&&this.walk(e.typeAnnotation),e.typeAnnotationComment&&this.walk(e.typeAnnotationComment),a){const n=e.typeAnnotation||e.typeAnnotationComment;if(n&&t<a.functionType.details.parameters.length){const e=a.functionType.details.parameters[t].type,s=["__init__","__new__"];r&&(0,B.isTypeVar)(e)&&3===e.details.declaredVariance&&!e.details.isSynthesized&&!s.some((e=>e===a.functionType.details.name))&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramTypeCovariant(),n)}}})),e.returnTypeAnnotation&&this.walk(e.returnTypeAnnotation),e.functionAnnotationComment&&(this.walk(e.functionAnnotationComment),"none"!==this._fileInfo.diagnosticRuleSet.reportTypeCommentUsage&&this._fileInfo.executionEnvironment.pythonVersion.isGreaterOrEqualTo(d.pythonVersion3_5)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportTypeCommentUsage,g.LocMessage.typeCommentDeprecated(),e.functionAnnotationComment)),this.walkMultiple(e.decorators),e.parameters.forEach((e=>{e.name&&this.walk(e.name)}));const s=T.getCodeFlowComplexity(e),i=s>V.maxCodeComplexity;if(i?this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.codeTooComplexToAnalyze(),e.name):this.walk(e.suite),a&&(i||this._validateFunctionReturn(e,a.functionType),this._validateDunderSignatures(e,a.functionType,void 0!==r),this._validateTypeGuardFunction(e,a.functionType,void 0!==r),this._validateFunctionTypeVarUsage(e,a),this._validateGeneratorReturnType(e,a.functionType),this._reportDeprecatedClassProperty(e,a),!r&&B.FunctionType.isFinal(a.functionType)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalNonMethod().format({name:e.name.value}),e.name)),this._fileInfo.isStubFile&&"__getattr__"===e.name.value){const t=(0,D.getScopeForNode)(e);4===(null==t?void 0:t.type)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompleteStub,g.LocMessage.stubUsesGetAttr(),e.name)}if(this._scopedNodes.push(e),a&&(0,B.isOverloadedFunction)(a.decoratedType)){if(B.OverloadedFunctionType.getImplementation(a.decoratedType)!==a.functionType){const t=B.OverloadedFunctionType.getOverloads(a.decoratedType);if(t.length>1){const n=100;t.length<n&&this._validateOverloadConsistency(e,t[t.length-1],t.slice(0,t.length-1))}}this._validateOverloadAttributeConsistency(e,a.decoratedType)}return!1}visitLambda(e){this._evaluator.getType(e),this.walkMultiple([...e.parameters,e.expression]),e.parameters.forEach((e=>{if(e.name){const t=this._evaluator.getType(e.name);t&&((0,B.isUnknown)(t)?this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownLambdaType,g.LocMessage.paramTypeUnknown().format({paramName:e.name.value}),e.name):(0,R.isPartlyUnknown)(t)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownLambdaType,g.LocMessage.paramTypePartiallyUnknown().format({paramName:e.name.value}),e.name))}}));const t=this._evaluator.getType(e.expression);return t&&((0,B.isUnknown)(t)?this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownLambdaType,g.LocMessage.lambdaReturnTypeUnknown(),e.expression):(0,R.isPartlyUnknown)(t)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownLambdaType,g.LocMessage.lambdaReturnTypePartiallyUnknown().format({returnType:this._evaluator.printType(t,{expandTypeAlias:!0})}),e.expression)),this._scopedNodes.push(e),!1}visitCall(e){var t;if(this._validateIsInstanceCall(e),this._validateIllegalDefaultParamInitializer(e),this._validateStandardCollectionInstantiation(e),("none"!==this._fileInfo.diagnosticRuleSet.reportUnusedCallResult||"none"!==this._fileInfo.diagnosticRuleSet.reportUnusedCoroutine)&&47===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)){const t=38===e.leftExpression.nodeType&&"reveal_type"===e.leftExpression.value,n=this._evaluator.getType(e);!t&&n&&this._isTypeValidForUnusedValueTest(n)&&(this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnusedCallResult,g.LocMessage.unusedCallResult().format({type:this._evaluator.printType(n)}),e),(0,B.isClassInstance)(n)&&B.ClassType.isBuiltIn(n,"Coroutine")&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnusedCoroutine,g.LocMessage.unusedCoroutine(),e))}return!0}visitAwait(e){var t;if("none"!==this._fileInfo.diagnosticRuleSet.reportUnusedCallResult&&47===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&9===e.expression.nodeType){const t=this._evaluator.getType(e);t&&this._isTypeValidForUnusedValueTest(t)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnusedCallResult,g.LocMessage.unusedCallResult().format({type:this._evaluator.printType(t)}),e)}return!0}visitFor(e){return this._evaluator.evaluateTypesForStatement(e),e.typeComment&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportInvalidTypeForm,c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.annotationNotSupported(),e.typeComment),!0}visitList(e){return this._validateIllegalDefaultParamInitializer(e),!0}visitSet(e){return this._validateIllegalDefaultParamInitializer(e),!0}visitDictionary(e){return this._validateIllegalDefaultParamInitializer(e),!0}visitListComprehension(e){return this._scopedNodes.push(e),!0}visitListComprehensionIf(e){return this._validateConditionalIsBool(e.testExpression),this._reportUnnecessaryConditionExpression(e.testExpression),!0}visitIf(e){return this._validateConditionalIsBool(e.testExpression),this._reportUnnecessaryConditionExpression(e.testExpression),!0}visitWhile(e){return this._validateConditionalIsBool(e.testExpression),this._reportUnnecessaryConditionExpression(e.testExpression),!0}visitWith(e){return e.withItems.forEach((e=>{this._evaluator.evaluateTypesForStatement(e)})),e.typeComment&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportInvalidTypeForm,c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.annotationNotSupported(),e.typeComment),!0}visitReturn(e){var t,n,a,r,s;let i,o;const l=A.getEnclosingFunction(e),d=l?this._evaluator.getFunctionDeclaredReturnType(l):void 0;if(i=e.returnExpression?null!==(t=this._evaluator.getTypeResult(e.returnExpression))&&void 0!==t?t:{type:B.UnknownType.create()}:{type:this._evaluator.getNoneType()},o=i.type,o.specialForm&&(o=o.specialForm),(null==l?void 0:l.isAsync)&&e.returnExpression){const t=T.getDeclaration(l);5===(null==t?void 0:t.type)&&t.isGenerator&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.returnInAsyncGenerator(),e.returnExpression)}if(this._evaluator.isNodeReachable(e,void 0)&&l){if(d)if((0,B.isNever)(d))this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.noReturnContainsReturn(),e);else{let t=new p.DiagnosticAddendum,r=!1;if(this._evaluator.assignType(d,o,t,new L.TypeVarContext,void 0,128))r=!0;else{const n=(0,R.getTypeVarArgumentsRecursive)(d);if(n&&n.some((e=>e.details.constraints.length>0))){const a=new L.TypeVarContext;for(const t of n)if(t.details.constraints.length>0){const n=this._evaluator.narrowConstrainedTypeVar(e,t);n&&(a.setTypeVarType(t,n),a.addSolveForScope((0,R.getTypeVarScopeId)(t)))}if(!a.isEmpty()){const e=(0,R.applySolvedTypeVars)(d,a);this._evaluator.assignType(e,o,t,void 0,void 0,128)&&(r=!0)}}}r||(i.expectedTypeDiagAddendum&&(t=i.expectedTypeDiagAddendum),this._evaluator.addDiagnostic(c.DiagnosticRule.reportReturnType,g.LocMessage.returnTypeMismatch().format({exprType:this._evaluator.printType(o),returnType:this._evaluator.printType(d)})+t.getString(),null!==(n=e.returnExpression)&&void 0!==n?n:e,null===(a=i.expectedTypeDiagAddendum)||void 0===a?void 0:a.getEffectiveTextRange()))}(0,B.isUnknown)(o)?this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownVariableType,g.LocMessage.returnTypeUnknown(),null!==(r=e.returnExpression)&&void 0!==r?r:e):(0,R.isPartlyUnknown)(o)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownVariableType,g.LocMessage.returnTypePartiallyUnknown().format({returnType:this._evaluator.printType(o,{expandTypeAlias:!0})}),null!==(s=e.returnExpression)&&void 0!==s?s:e)}return!0}visitYield(e){var t;const n=e.expression?this._evaluator.getTypeResult(e.expression):{type:this._evaluator.getNoneType()};return this._validateYieldType(e,null!==(t=null==n?void 0:n.type)&&void 0!==t?t:B.UnknownType.create(),null==n?void 0:n.expectedTypeDiagAddendum),!0}visitYieldFrom(e){var t,n,a,r;const s=this._evaluator.getType(e.expression)||B.UnknownType.create();let i,o;if((0,B.isClassInstance)(s)&&B.ClassType.isBuiltIn(s,"Coroutine"))i=B.UnknownType.create();else{i=null!==(n=null===(t=this._evaluator.getTypeOfIterable({type:s},!1,e))||void 0===t?void 0:t.type)&&void 0!==n?n:B.UnknownType.create();const l=(0,R.getGeneratorTypeArgs)(i);l?(i=l.length>=1?l[0]:B.UnknownType.create(),o=l.length>=2?l[1]:void 0):i=null!==(r=null===(a=this._evaluator.getTypeOfIterator({type:s},!1,e))||void 0===a?void 0:a.type)&&void 0!==r?r:B.UnknownType.create()}return this._validateYieldType(e,i,void 0,o),!0}visitRaise(e){if(this._evaluator.verifyRaiseExceptionType(e),e.valueExpression){const t=this._evaluator.getBuiltInType(e,"BaseException"),n=this._evaluator.getType(e.valueExpression);if(n&&t&&(0,B.isInstantiableClass)(t)){const a=new p.DiagnosticAddendum;(0,R.doForEachSubtype)(n,(e=>{e=this._evaluator.makeTopLevelTypeVarsConcrete(e),(0,B.isAnyOrUnknown)(e)||(0,R.isNoneInstance)(e)||(0,B.isClass)(e)&&(0,R.derivesFromClassRecursive)(e,t,!1)||a.addMessage(g.LocMessage.exceptionTypeIncorrect().format({type:this._evaluator.printType(e)}))})),a.isEmpty()||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.expectedExceptionObj()+a.getString(),e.valueExpression)}}return!0}visitExcept(e){if(e.typeExpression){this._evaluator.evaluateTypesForStatement(e);const t=this._evaluator.getType(e.typeExpression);t&&this._validateExceptionType(t,e.typeExpression)}return!0}visitAssert(e){e.exceptionExpression&&this._evaluator.getType(e.exceptionExpression),this._validateConditionalIsBool(e.testExpression);const t=this._evaluator.getType(e.testExpression);return t&&(0,B.isClassInstance)(t)&&(0,R.isTupleClass)(t)&&t.tupleTypeArguments&&t.tupleTypeArguments.length>0&&((0,R.isUnboundedTupleClass)(t)||this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportAssertAlwaysTrue,c.DiagnosticRule.reportAssertAlwaysTrue,g.LocMessage.assertAlwaysTrue(),e.testExpression)),!0}visitAssignment(e){if(this._evaluator.evaluateTypesForStatement(e),e.typeAnnotationComment&&(this._evaluator.getType(e.typeAnnotationComment),"none"!==this._fileInfo.diagnosticRuleSet.reportTypeCommentUsage&&this._fileInfo.executionEnvironment.pythonVersion.isGreaterOrEqualTo(d.pythonVersion3_6)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportTypeCommentUsage,g.LocMessage.typeCommentDeprecated(),e.typeAnnotationComment)),54===e.leftExpression.nodeType){const t=this._evaluator.getTypeOfAnnotation(e.leftExpression.typeAnnotation);if((0,B.isClassInstance)(t)&&B.ClassType.isBuiltIn(t,"TypeAlias")){const t=(0,D.getScopeForNode)(e);t&&3!==t.type&&4!==t.type&&5!==t.type&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasNotInModuleOrClass(),e.leftExpression.typeAnnotation)}}return!0}visitAssignmentExpression(e){return this._evaluator.getType(e),!0}visitAugmentedAssignment(e){return this._evaluator.evaluateTypesForStatement(e),!0}visitIndex(e){this._evaluator.getType(e);const t=this._evaluator.getType(e.baseExpression);return t&&(0,R.doForEachSubtype)(t,(n=>{const a=(0,R.getSpecializedTupleType)(n);if((0,B.isClassInstance)(n)&&(null==a?void 0:a.tupleTypeArguments)&&!(0,R.isUnboundedTupleClass)(a)&&!this._evaluator.isTypeSubsumedByOtherType(a,t,!1)){const t=a.tupleTypeArguments.length;if(1===e.items.length&&!e.trailingComma&&0===e.items[0].argumentCategory&&!e.items[0].name){const a=this._evaluator.getType(e.items[0].valueExpression);a&&(0,B.isClassInstance)(a)&&B.ClassType.isBuiltIn(a,"int")&&(0,R.isLiteralType)(a)&&"number"==typeof a.literalValue&&(a.literalValue>=0&&a.literalValue>=t||a.literalValue<0&&a.literalValue+t<0)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.tupleIndexOutOfRange().format({index:a.literalValue,type:this._evaluator.printType(n)}),e)}}})),!0}visitBinaryOperation(e){return 36!==e.operator&&37!==e.operator||(this._validateConditionalIsBool(e.leftExpression),this._validateConditionalIsBool(e.rightExpression)),12===e.operator||28===e.operator?A.isWithinAssertExpression(e)||this._validateComparisonTypes(e):39===e.operator||40===e.operator?A.isWithinAssertExpression(e)||this._validateComparisonTypesForIsOperator(e):41!==e.operator&&42!==e.operator||A.isWithinAssertExpression(e)||this._validateContainmentTypes(e),this._evaluator.getType(e),!0}visitSlice(e){return this._evaluator.getType(e),!0}visitUnpack(e){return this._evaluator.getType(e),!0}visitTuple(e){return this._evaluator.getType(e),!0}visitUnaryOperation(e){return 38===e.operator&&this._validateConditionalIsBool(e.expression),this._evaluator.getType(e),!0}visitTernary(e){return this._evaluator.getType(e),this._validateConditionalIsBool(e.testExpression),this._reportUnnecessaryConditionExpression(e.testExpression),!0}visitStringList(e){const t=[];if(this._fileInfo.executionEnvironment.pythonVersion.isLessThan(d.pythonVersion3_12)){let n=e;for(;n;)27===n.nodeType&&t.push(n),n=n.parent}for(const n of e.strings){if((49===n.nodeType?[n.token]:n.middleTokens).forEach((e=>{const n=(0,f.getUnescapedString)(e);let a=e.start;if(5===e.type&&(a+=e.prefixLength+e.quoteMarkLength),n.unescapeErrors.forEach((e=>{0===e.errorType&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportInvalidStringEscapeSequence,c.DiagnosticRule.reportInvalidStringEscapeSequence,g.LocMessage.stringUnsupportedEscape(),{start:a+e.offset,length:e.length})})),t.length>0){e.escapedValue.indexOf("\\")>=0&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportGeneralTypeIssues,c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.formatStringEscape(),{start:a,length:1})}})),t.length>0){const e=7;t.some((t=>(t.token.flags&e)==(n.token.flags&e)))&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.formatStringNestedQuote(),n)}}return e.typeAnnotation&&this._evaluator.getType(e),e.strings.length>1&&!e.isParenthesized&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportImplicitStringConcatenation,c.DiagnosticRule.reportImplicitStringConcatenation,g.LocMessage.implicitStringConcat(),e),!0}visitFormatString(e){return e.fieldExpressions.forEach((e=>{this._evaluator.getType(e)})),e.formatExpressions.forEach((e=>{this._evaluator.getType(e)})),!0}visitGlobal(e){return this._suppressUnboundCheck((()=>{e.nameList.forEach((e=>{this._evaluator.getType(e),this.walk(e)}))})),!1}visitNonlocal(e){return this._suppressUnboundCheck((()=>{e.nameList.forEach((e=>{this._evaluator.getType(e),this.walk(e)}))})),!1}visitName(e){this._conditionallyReportPrivateUsage(e),this._isUnboundCheckSuppressed||this._reportUnboundName(e);const t=this._evaluator.getType(e);return this._reportDeprecatedUseForType(e,t),!0}visitDel(e){return e.expressions.forEach((e=>{this._evaluator.verifyDeleteExpression(e),this.walk(e)})),!1}visitMemberAccess(e){var t;const n=this._evaluator.getTypeResult(e),a=null!==(t=null==n?void 0:n.type)&&void 0!==t?t:B.UnknownType.create(),r=this._evaluator.getType(e.leftExpression);return this._reportDeprecatedUseForType(e.memberName,a,r&&(0,B.isModule)(r)&&"typing"===r.moduleName),(null==n?void 0:n.memberAccessDeprecationInfo)&&this._reportDeprecatedUseForMemberAccess(e.memberName,n.memberAccessDeprecationInfo),this._conditionallyReportPrivateUsage(e.memberName),this.walk(e.leftExpression),!1}visitImportAs(e){return this._conditionallyReportShadowedImport(e),this._evaluator.evaluateTypesForStatement(e),!0}visitImportFrom(e){if(0===e.module.leadingDots&&1===e.module.nameParts.length&&"__future__"===e.module.nameParts[0].value&&(A.isValidLocationForFutureImport(e)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.futureImportLocationNotAllowed(),e)),this._conditionallyReportShadowedImport(e),e.isWildcardImport){this._evaluator.evaluateTypesForStatement(e);const t=T.getImportInfo(e.module);t&&t.isImportFound&&2!==t.importType&&!this._fileInfo.isStubFile&&this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportWildcardImportFromLibrary,c.DiagnosticRule.reportWildcardImportFromLibrary,g.LocMessage.wildcardLibraryImport(),e.wildcardToken||e)}else e.imports.forEach((e=>{this._evaluator.evaluateTypesForStatement(e)}));return!0}visitImportFromAs(e){var t,n;if(this._fileInfo.isStubFile)return!1;const a=this._evaluator.getDeclarationsForNameNode(e.name);if(!a)return!1;for(const t of a){if(!(0,b.isAliasDeclaration)(t)||!t.submoduleFallback||t.node!==e)continue;const n=this._evaluator.resolveAliasDeclaration(t,!0),a=null==n?void 0:n.uri;if(!a||!(0,E.isStubFile)(a))continue;const r=this._getImportResult(e,a);if(r){this._addMissingModuleSourceDiagnosticIfNeeded(r,e.name);break}}let r=!1;22===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&0===e.parent.module.leadingDots&&1===e.parent.module.nameParts.length&&"typing"===e.parent.module.nameParts[0].value&&(r=!0);const s=this._evaluator.getType(null!==(n=e.alias)&&void 0!==n?n:e.name);return this._reportDeprecatedUseForType(e.name,s,r),!1}visitModuleName(e){if(this._fileInfo.isStubFile)return!1;const t=T.getImportInfo(e);return(0,l.assert)(void 0!==t),this._addMissingModuleSourceDiagnosticIfNeeded(t,e),!1}visitTypeParameterList(e){return this._typeParameterLists.push(e),!0}visitTypeParameter(e){var t,n,a,r;let s=null===(n=null===(t=e.parent)||void 0===t?void 0:t.parent)||void 0===n?void 0:n.parent,i=!1;for(;s;){const t=A.getTypeVarScopeNode(s);if(!t)break;if(10===t.nodeType){const n=null===(a=this._evaluator.getTypeOfClass(t))||void 0===a?void 0:a.classType;if(null==n?void 0:n.details.typeParameters.some((t=>t.details.name===e.name.value))){i=!0;break}}else if(28===t.nodeType){const n=null===(r=this._evaluator.getTypeOfFunction(t))||void 0===r?void 0:r.functionType;if(null==n?void 0:n.details.typeParameters.some((t=>t.details.name===e.name.value))){i=!0;break}}s=t.parent}return i&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarUsedByOuterScope().format({name:e.name.value}),e.name),!1}visitTypeAlias(e){const t=(0,D.getScopeForNode)(e);return t&&3!==t.type&&4!==t.type&&5!==t.type&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasStatementBadScope(),e.name),!0}visitTypeAnnotation(e){return this._evaluator.getType(e.typeAnnotation),!0}visitMatch(e){return this._evaluator.getType(e.subjectExpression),this._validateExhaustiveMatch(e),!0}visitCase(e){return e.guardExpression&&this._validateConditionalIsBool(e.guardExpression),this._evaluator.evaluateTypesForStatement(e.pattern),!0}visitPatternClass(e){return(0,P.validateClassPattern)(this._evaluator,e),!0}visitTry(e){return this._reportUnusedExceptStatements(e),!0}visitError(e){return e.child&&this._evaluator.getType(e.child),!1}_getImportResult(e,t){const n=this._importResolver.getConfigOptions().findExecEnvironment(t),a=0===e.parent.module.leadingDots?this._importResolver.getModuleNameForImport(t,n).moduleName:(0,w.getRelativeModuleName)(this._importResolver.fileSystem,this._fileInfo.fileUri,t,this._importResolver.getConfigOptions());if(a)return this._importResolver.resolveImport(this._fileInfo.fileUri,n,(0,k.createImportedModuleDescriptor)(a))}_addMissingModuleSourceDiagnosticIfNeeded(e,t){!e.isNativeLib&&e.isStubFile&&0!==e.importType&&e.nonStubImportResult&&!e.nonStubImportResult.isImportFound&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportMissingModuleSource,g.LocMessage.importSourceResolveFailure().format({importName:e.importName,venv:this._fileInfo.executionEnvironment.name}),t)}_validateConditionalIsBool(e){const t=this._evaluator.getType(e);if(!t)return;let n=!0;const a=new p.DiagnosticAddendum;this._evaluator.mapSubtypesExpandTypeVars(t,void 0,(t=>{if((0,B.isAnyOrUnknown)(t))return;if((0,B.isClassInstance)(t)&&B.ClassType.isBuiltIn(t,"bool"))return;const r=this._evaluator.getTypeOfMagicMethodCall(t,"__bool__",[],e,void 0);r&&!(0,B.isAnyOrUnknown)(r)&&((0,B.isClassInstance)(r)&&B.ClassType.isBuiltIn(r,"bool")||(n=!1,a.addMessage(g.LocAddendum.conditionalRequiresBool().format({operandType:this._evaluator.printType(t),boolReturnType:this._evaluator.printType(r)}))))})),n||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.conditionalOperandInvalid().format({type:this._evaluator.printType(t)})+a.getString(),e)}_reportUnnecessaryConditionExpression(e){if(7===e.nodeType)return void(36!==e.operator&&37!==e.operator||(this._reportUnnecessaryConditionExpression(e.leftExpression),this._reportUnnecessaryConditionExpression(e.rightExpression)));if(55===e.nodeType)return void(38===e.operator&&this._reportUnnecessaryConditionExpression(e.expression));const t=this._evaluator.getTypeOfExpression(e);let n=!0,a=!1;(0,R.doForEachSubtype)(t.type,(e=>{e=this._evaluator.makeTopLevelTypeVarsConcrete(e),(0,B.isFunction)(e)||(0,B.isOverloadedFunction)(e)||(n=!1),(0,B.isClassInstance)(e)&&B.ClassType.isBuiltIn(e,"Coroutine")&&(a=!0)})),n&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryComparison,g.LocMessage.functionInConditionalExpression(),e),a&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryComparison,g.LocMessage.coroutineInConditionalExpression(),e)}_reportUnusedExpression(e){var t,n;if("none"===this._fileInfo.diagnosticRuleSet.reportUnusedExpression)return;let a=!1;[55,7,40,11,38,52].some((t=>t===e.nodeType))?a=!0:31!==e.nodeType&&45!==e.nodeType&&15!==e.nodeType||e.entries.some((e=>32===e.nodeType))||(a=!0),a&&this._fileInfo.ipythonMode===F.IPythonMode.CellDocs&&47===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.statements[e.parent.statements.length-1]===e&&36===(null===(n=e.parent.parent)||void 0===n?void 0:n.nodeType)&&e.parent.parent.statements[e.parent.parent.statements.length-1]===e.parent&&(a=!1),a&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnusedExpression,g.LocMessage.unusedExpression(),e)}_validateExhaustiveMatch(e){if("none"===this._fileInfo.diagnosticRuleSet.reportMatchNotExhaustive)return;const t=this._evaluator.evaluateTypeForSubnode(e,(()=>{this._evaluator.evaluateTypesForMatchStatement(e)}));if(t&&!(0,B.isNever)(t.type)){const n=new p.DiagnosticAddendum;n.addMessage(g.LocAddendum.matchIsNotExhaustiveType().format({type:this._evaluator.printType(t.type)})),n.addMessage(g.LocAddendum.matchIsNotExhaustiveHint()),this._evaluator.addDiagnostic(c.DiagnosticRule.reportMatchNotExhaustive,g.LocMessage.matchIsNotExhaustive()+n.getString(),e.subjectExpression)}}_suppressUnboundCheck(e){const t=this._isUnboundCheckSuppressed;this._isUnboundCheckSuppressed=!0;try{e()}finally{this._isUnboundCheckSuppressed=t}}_validateIllegalDefaultParamInitializer(e){"none"!==this._fileInfo.diagnosticRuleSet.reportCallInDefaultInitializer&&A.isWithinDefaultParamInitializer(e)&&!this._fileInfo.isStubFile&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportCallInDefaultInitializer,g.LocMessage.defaultValueContainsCall(),e)}_validateStandardCollectionInstantiation(e){const t=this._evaluator.getType(e.leftExpression);if(t&&(0,B.isInstantiableClass)(t)&&B.ClassType.isBuiltIn(t)&&!t.includeSubclasses&&t.aliasName){["List","Set","Dict","Tuple"].some((e=>e===t.aliasName))&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.collectionAliasInstantiation().format({type:t.aliasName,alias:t.details.name}),e.leftExpression)}}_validateContainmentTypes(e){const t=this._evaluator.getType(e.leftExpression),n=this._evaluator.getType(e.rightExpression);if(!t||!n)return;if((0,B.isNever)(t)||(0,B.isNever)(n))return;const a=(0,U.getElementTypeForContainerNarrowing)(n);if(!a)return;const r=(0,U.narrowTypeForContainerElementType)(this._evaluator,t,this._evaluator.makeTopLevelTypeVarsConcrete(a));if((0,B.isNever)(r)){const n=()=>41===e.operator?g.LocMessage.containmentAlwaysFalse():g.LocMessage.containmentAlwaysTrue();this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryContains,n().format({leftType:this._evaluator.printType(t,{expandTypeAlias:!0}),rightType:this._evaluator.printType(a,{expandTypeAlias:!0})}),e)}}_validateComparisonTypesForIsOperator(e){const t=this._evaluator.getType(e.rightExpression);if(!t||!(0,R.isNoneInstance)(t))return;const n=this._evaluator.getType(e.leftExpression);if(!n)return;let a=!1;(0,R.doForEachSubtype)(n,(e=>{e=this._evaluator.makeTopLevelTypeVarsConcrete(e),this._evaluator.assignType(e,this._evaluator.getNoneType())&&(a=!0)}));a||this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryComparison,(39===e.operator?g.LocMessage.comparisonAlwaysFalse():g.LocMessage.comparisonAlwaysTrue()).format({leftType:this._evaluator.printType(n,{expandTypeAlias:!0}),rightType:this._evaluator.printType(t)}),e)}_validateComparisonTypes(e){let t=e.rightExpression;7===t.nodeType&&!t.parenthesized&&A.operatorSupportsChaining(t.operator)&&(t=t.leftExpression);const n=this._evaluator.getType(e.leftExpression),a=this._evaluator.getType(t);if(!n||!a)return;if((0,B.isNever)(n)||(0,B.isNever)(a))return;const r=()=>12===e.operator?g.LocMessage.comparisonAlwaysFalse():g.LocMessage.comparisonAlwaysTrue();if((0,R.isLiteralTypeOrUnion)(a)&&(0,R.isLiteralTypeOrUnion)(n)){if(void 0===(0,M.evaluateStaticBoolExpression)(e,this._fileInfo.executionEnvironment,this._fileInfo.definedConstants)){let t=!1;(0,R.doForEachSubtype)(n,(e=>{this._evaluator.assignType(a,e)&&(t=!0)})),t||this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryComparison,r().format({leftType:this._evaluator.printType(n,{expandTypeAlias:!0}),rightType:this._evaluator.printType(a,{expandTypeAlias:!0})}),e)}}else{let t=!1;if((0,R.doForEachSubtype)(n,(e=>{t||(e=this._evaluator.makeTopLevelTypeVarsConcrete(e),(0,R.doForEachSubtype)(a,(n=>{t||(n=this._evaluator.makeTopLevelTypeVarsConcrete(n),this._isTypeComparable(e,n)&&(t=!0))})))})),!t){const t=this._evaluator.printType(n,{expandTypeAlias:!0}),s=this._evaluator.printType(a,{expandTypeAlias:!0});this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryComparison,r().format({leftType:t,rightType:s}),e)}}}_isTypeComparable(e,t){if((0,B.isAnyOrUnknown)(e)||(0,B.isAnyOrUnknown)(t))return!0;if((0,B.isNever)(e)||(0,B.isNever)(t))return!1;if((0,B.isModule)(e)||(0,B.isModule)(t))return(0,B.isTypeSame)(e,t);if((0,R.isNoneInstance)(e)||(0,R.isNoneInstance)(t))return(0,B.isTypeSame)(e,t);if(((0,B.isFunction)(e)||(0,B.isOverloadedFunction)(e))!==((0,B.isFunction)(t)||(0,B.isOverloadedFunction)(t)))return!1;if((0,B.isInstantiableClass)(e)||(0,B.isClassInstance)(e)&&B.ClassType.isBuiltIn(e,"type")){if((0,B.isInstantiableClass)(t)||(0,B.isClassInstance)(t)&&B.ClassType.isBuiltIn(t,"type")){const n=B.ClassType.cloneForSpecialization(e,void 0,!1),a=B.ClassType.cloneForSpecialization(t,void 0,!1);if(this._evaluator.assignType(n,a)||this._evaluator.assignType(a,n))return!0}const n=e.details.effectiveMetaclass;return!!(n&&(0,B.isClass)(n)&&(0,R.lookUpClassMember)(n,"__eq__",4))}if((0,B.isClassInstance)(e)){if((0,B.isClassInstance)(t)){const n=B.ClassType.cloneForSpecialization(e,void 0,!1),a=B.ClassType.cloneForSpecialization(t,void 0,!1);if(this._evaluator.assignType(n,a)||this._evaluator.assignType(a,n))return!0;if(B.ClassType.isBuiltIn(e)&&B.ClassType.isBuiltIn(t))return!1}const n=(0,R.lookUpClassMember)(B.ClassType.cloneAsInstantiable(e),"__eq__",4);return!!n&&(!B.ClassType.isDataClass(e)||!n.symbol.getSynthesizedType())}return!0}_validateGeneratorReturnType(e,t){var n;if(!B.FunctionType.isGenerator(t))return;const a=t.details.declaredReturnType;if(!a)return;if((0,B.isNever)(a))return;const r=t.details.declaration;if(!r||!r.yieldStatements||0===r.yieldStatements.length)return;let s;if(s=!e.isAsync&&(0,B.isClassInstance)(a)&&B.ClassType.isBuiltIn(a,"AwaitableGenerator")?this._evaluator.getTypingType(e,"AwaitableGenerator"):this._evaluator.getTypingType(e,e.isAsync?"AsyncGenerator":"Generator"),!s||!(0,B.isInstantiableClass)(s))return;const i=B.ClassType.cloneAsInstance(B.ClassType.cloneForSpecialization(s,[B.AnyType.create(),B.AnyType.create(),B.AnyType.create()],!0)),o=new p.DiagnosticAddendum;if(!this._evaluator.assignType(a,i,o)){const t=e.isAsync?g.LocMessage.generatorAsyncReturnType():g.LocMessage.generatorSyncReturnType();this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidTypeForm,t.format({yieldType:this._evaluator.printType(B.AnyType.create())})+o.getString(),null!==(n=e.returnTypeAnnotation)&&void 0!==n?n:e.name)}}_isTypeValidForUnusedValueTest(e){return!(0,R.isNoneInstance)(e)&&!(0,B.isNever)(e)&&!(0,B.isAnyOrUnknown)(e)}_validateFunctionTypeVarUsage(e,t){if("none"===this._fileInfo.diagnosticRuleSet.reportInvalidTypeVarUse)return;const n=t.functionType,a=new Map,r=new Map;let s,i,o=!0;if(B.FunctionType.isInstanceMethod(n)&&"__init__"===e.name.value){const t=A.getEnclosingClassOrFunction(e);if(t&&10===t.nodeType){const e=this._evaluator.getTypeOfClass(t);e&&(0,B.isClass)(e.classType)&&(i=e.classType)}}const l=new A.NameNodeWalker(((t,n,l)=>{var p,c,d,u,m,y;const g=this._evaluator.getType(t);if(g&&(0,B.isTypeVar)(g)&&!g.details.isSynthesizedSelf){if(g.scopeId===A.getScopeIdForNode(e)){let e=g.details.constraints.length>0||g.details.isDefaultExplicit||o&&void 0!==n||(0,B.isParamSpec)(g);if(!e&&l&&void 0!==n){const t=this._evaluator.getType(l);(null==t?void 0:t.typeAliasInfo)&&t.typeAliasInfo.typeParameters&&n<t.typeAliasInfo.typeParameters.length&&(e=!0)}const r=a.get(g.details.name),i=18===(null===(p=null==s?void 0:s.defaultValue)||void 0===p?void 0:p.nodeType);r?(r.nodes.push(t),void 0!==s?(r.paramTypeUsageCount+=1,i&&(r.paramTypeWithEllipsisUsageCount+=1,r.paramWithEllipsis||(r.paramWithEllipsis=null===(d=null==s?void 0:s.name)||void 0===d?void 0:d.value))):r.returnTypeUsageCount+=1):a.set(g.details.name,{nodes:[t],typeVar:g,paramTypeUsageCount:void 0!==s?1:0,paramTypeWithEllipsisUsageCount:i?1:0,returnTypeUsageCount:void 0===s?1:0,paramWithEllipsis:i?null===(c=null==s?void 0:s.name)||void 0===c?void 0:c.value:void 0,isExempt:e})}if(i&&g.scopeId===i.details.typeVarScopeId){const e=r.get(g.details.name),n=18===(null===(u=null==s?void 0:s.defaultValue)||void 0===u?void 0:u.nodeType),a=!!g.details.isDefaultExplicit;e?(e.nodes.push(t),void 0!==s&&(e.paramTypeUsageCount+=1,n&&(e.paramTypeWithEllipsisUsageCount+=1,e.paramWithEllipsis||(e.paramWithEllipsis=null===(y=null==s?void 0:s.name)||void 0===y?void 0:y.value)))):r.set(g.details.name,{typeVar:g,nodes:[t],paramTypeUsageCount:void 0!==s?1:0,paramTypeWithEllipsisUsageCount:n?1:0,returnTypeUsageCount:0,paramWithEllipsis:n?null===(m=null==s?void 0:s.name)||void 0===m?void 0:m.value:void 0,isExempt:a})}}}));e.parameters.forEach((e=>{const t=e.typeAnnotation||e.typeAnnotationComment;t&&(s=e,l.walk(t))})),s=void 0,e.returnTypeAnnotation&&(o=!1,l.walk(e.returnTypeAnnotation)),a.forEach((e=>{var a;if(1===e.nodes.length&&!e.isExempt){let t;t=e.typeVar.details.isVariadic?'"tuple[object, ...]"':e.typeVar.details.boundType?`"${this._evaluator.printType((0,R.convertToInstance)(e.typeVar.details.boundType))}"`:'"object"';const n=new p.DiagnosticAddendum;n.addMessage(g.LocAddendum.typeVarUnnecessarySuggestion().format({type:t})),this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidTypeVarUse,g.LocMessage.typeVarUsedOnlyOnce().format({name:e.nodes[0].value})+n.getString(),e.nodes[0])}let r=e.returnTypeUsageCount>0;if(1===e.returnTypeUsageCount&&n.details.declaredReturnType){const t=n.details.declaredReturnType;(0,B.isUnion)(t)&&t.subtypes.some((t=>(0,B.isTypeVar)(t)&&t.details.name===e.nodes[0].value))&&(r=!1)}const s=(0,B.isOverloadedFunction)(t.decoratedType)&&!B.FunctionType.isOverloaded(t.functionType);if(r&&e.paramTypeWithEllipsisUsageCount>0&&e.paramTypeUsageCount===e.paramTypeWithEllipsisUsageCount&&!s){const t=new p.DiagnosticAddendum;t.addMessage(g.LocAddendum.typeVarUnsolvableRemedy()),this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidTypeVarUse,g.LocMessage.typeVarPossiblyUnsolvable().format({name:e.nodes[0].value,param:null!==(a=e.paramWithEllipsis)&&void 0!==a?a:""})+t.getString(),e.nodes[0])}})),r.forEach((e=>{var t;if(e.paramTypeWithEllipsisUsageCount>0&&e.paramTypeUsageCount===e.paramTypeWithEllipsisUsageCount&&!e.isExempt){const n=new p.DiagnosticAddendum;n.addMessage(g.LocAddendum.typeVarUnsolvableRemedy()),this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidTypeVarUse,g.LocMessage.typeVarPossiblyUnsolvable().format({name:e.nodes[0].value,param:null!==(t=e.paramWithEllipsis)&&void 0!==t?t:""})+n.getString(),e.nodes[0])}}))}_validateOverloadAttributeConsistency(e,t){var n,a,r,s,i,o;let l=0,p=0;t.overloads.forEach((e=>{B.FunctionType.isStaticMethod(e)&&l++,B.FunctionType.isClassMethod(e)&&p++})),l>0&&l<t.overloads.length&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentOverload,g.LocMessage.overloadStaticMethodInconsistent().format({name:e.name.value}),null!==(r=null===(a=null===(n=t.overloads[0])||void 0===n?void 0:n.details.declaration)||void 0===a?void 0:a.node.name)&&void 0!==r?r:e.name),p>0&&p<t.overloads.length&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentOverload,g.LocMessage.overloadClassMethodInconsistent().format({name:e.name.value}),null!==(o=null===(i=null===(s=t.overloads[0])||void 0===s?void 0:s.details.declaration)||void 0===i?void 0:i.node.name)&&void 0!==o?o:e.name)}_validateOverloadConsistency(e,t,n){for(let a=0;a<n.length;a++){const r=n[a];if(this._isOverlappingOverload(t,r,!1)){this._evaluator.addDiagnostic(c.DiagnosticRule.reportOverlappingOverload,g.LocMessage.overlappingOverload().format({name:e.name.value,obscured:n.length+1,obscuredBy:a+1}),e.name);break}}for(let a=0;a<n.length;a++){const r=n[a];if(this._isOverlappingOverload(r,t,!0)){const s=B.FunctionType.getSpecializedReturnType(r),i=B.FunctionType.getSpecializedReturnType(t);if(s&&i&&!this._evaluator.assignType(i,s,void 0,new L.TypeVarContext,void 0,1032)){const t=this._findNodeForOverload(e,r);this._evaluator.addDiagnostic(c.DiagnosticRule.reportOverlappingOverload,g.LocMessage.overloadReturnTypeMismatch().format({name:e.name.value,newIndex:n.length+1,prevIndex:a+1}),(t||e).name);break}}}}_findNodeForOverload(e,t){const n=this._evaluator.getDeclarationsForNameNode(e.name);if(n)for(const e of n)if(5===e.type){const n=this._evaluator.getTypeOfFunction(e.node);if((null==n?void 0:n.functionType)===t)return e.node}}_isOverlappingOverload(e,t,n){if(B.FunctionType.isInstanceMethod(e)&&"__get__"===e.details.name)return!1;let a=80;return n&&(a|=32),this._evaluator.assignType(e,t,void 0,new L.TypeVarContext((0,R.getTypeVarScopeId)(e)),void 0,a)}_isLegalOverloadImplementation(e,t,n){var a;const r=new L.TypeVarContext((0,R.getTypeVarScopeId)(t)),s=new L.TypeVarContext((0,R.getTypeVarScopeId)(e));let i=this._evaluator.assignType(e,t,n,s,r,578);const o=null!==(a=e.details.declaredReturnType)&&void 0!==a?a:this._evaluator.getFunctionInferredReturnType(e),l=(0,R.applySolvedTypeVars)(t.details.declaredReturnType||this._evaluator.getFunctionInferredReturnType(t),r),c=new p.DiagnosticAddendum;return(0,B.isNever)(o)||this._evaluator.assignType(l,o,c.createAddendum(),r,s,8)||(c.addMessage(g.LocAddendum.functionReturnTypeMismatch().format({sourceType:this._evaluator.printType(o),destType:this._evaluator.printType(l)})),null==n||n.addAddendum(c),i=!1),i}_walkStatementsAndReportUnreachable(e){let t,n=!1;for(const a of e){if(!n&&!this._evaluator.isNodeReachable(a,t)){const t=a.start,r=e[e.length-1],s=u.TextRange.getEnd(r);this._evaluator.addUnreachableCode(a,{start:t,length:s-t}),n=!0}!n&&this._fileInfo.isStubFile&&this._validateStubStatement(a),this.walk(a),t=a}}_validateStubStatement(e){switch(e.nodeType){case 19:case 28:case 10:case 0:break;case 57:case 26:case 53:case 58:this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidStubStatement,g.LocMessage.invalidStubStatement(),e);break;case 47:for(const t of e.statements){let e=!0;switch(t.nodeType){case 2:case 4:case 6:case 7:case 11:case 14:case 15:case 24:case 26:case 27:case 29:case 30:case 31:case 35:case 38:case 39:case 40:case 43:case 44:case 45:case 46:case 51:case 52:case 53:case 55:case 56:case 57:case 58:case 59:case 60:case 61:e=!1;break;case 5:e=1===t.operator&&38===t.leftExpression.nodeType&&"__all__"===t.leftExpression.value;break;case 9:e=35===t.leftExpression.nodeType&&38===t.leftExpression.leftExpression.nodeType&&"__all__"===t.leftExpression.leftExpression.value}e||this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidStubStatement,g.LocMessage.invalidStubStatement(),t)}}}_validateExceptionTypeRecursive(e,t,n,a){(0,R.doForEachSubtype)(e,(e=>{var r;if(!(0,B.isAnyOrUnknown)(e)&&(0,B.isClass)(e)){if(B.TypeBase.isInstantiable(e))return r=e,void(n&&(0,B.isInstantiableClass)(n)&&!(0,R.derivesFromClassRecursive)(r,n,!1)&&t.addMessage(g.LocMessage.exceptionTypeIncorrect().format({type:this._evaluator.printType(e)})));if(a&&e.tupleTypeArguments)return void e.tupleTypeArguments.forEach((e=>{this._validateExceptionTypeRecursive(e.type,t,n,!1)}));t.addMessage(g.LocMessage.exceptionTypeIncorrect().format({type:this._evaluator.printType(e)}))}}))}_validateExceptionType(e,t){const n=this._evaluator.getBuiltInType(t,"BaseException"),a=new p.DiagnosticAddendum;this._validateExceptionTypeRecursive(e,a,n,!0),a.isEmpty()||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.exceptionTypeNotClass().format({type:this._evaluator.printType(e)}),t)}_reportUnusedDunderAllSymbols(e){if("none"===this._fileInfo.diagnosticRuleSet.reportUnsupportedDunderAll)return;const t=T.getScope(this._moduleNode);t&&e.forEach((e=>{t.symbolTable.has(e.value)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnsupportedDunderAll,g.LocMessage.dunderAllSymbolNotPresent().format({name:e.value}),e)}))}_validateSymbolTables(){var e;const t=null===(e=this._dependentFiles)||void 0===e?void 0:e.map((e=>T.getFileInfo(e.parseTree)));for(const e of this._scopedNodes){const n=T.getScope(e);n&&n.symbolTable.forEach(((e,a)=>{this._conditionallyReportUnusedSymbol(a,e,n.type,t),this._reportIncompatibleDeclarations(a,e),this._reportMultipleFinalDeclarations(a,e,n.type),this._reportMultipleTypeAliasDeclarations(a,e),this._reportInvalidOverload(a,e)}))}const n=this._fileInfo.accessedSymbolSet;for(const e of this._typeParameterLists){const t=T.getScope(e);for(const a of e.parameters){const e=null==t?void 0:t.symbolTable.get(a.name.value);if(!e)return;if(!n.has(e.id)){e.getDeclarations().forEach((e=>{this._conditionallyReportUnusedDeclaration(e,!1)}))}}}}_reportInvalidOverload(e,t){const n=t.getTypedDeclarations();if(n.length>=1){const a=n[0];if(5===a.type){const n=this._evaluator.getEffectiveTypeOfSymbol(t),r=(0,B.isOverloadedFunction)(n)?B.OverloadedFunctionType.getOverloads(n):(0,B.isFunction)(n)&&B.FunctionType.isOverloaded(n)?[n]:[];if(1===r.length&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentOverload,g.LocMessage.singleOverload().format({name:e}),a.node.name),!this._fileInfo.isStubFile&&r.length>0){let t,r=!1;if((0,B.isOverloadedFunction)(n)){t=B.OverloadedFunctionType.getImplementation(n);const e=B.OverloadedFunctionType.getOverloads(n);e.length>0&&""===e[0].details.name&&(r=!0)}else(0,B.isFunction)(n)&&!B.FunctionType.isOverloaded(n)&&(t=n);if(t)(0,B.isOverloadedFunction)(n)&&B.OverloadedFunctionType.getOverloads(n).forEach(((n,r)=>{var s,i,o,l;const d=new p.DiagnosticAddendum;if(!this._isLegalOverloadImplementation(n,t,d)&&t.details.declaration){const p=this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentOverload,g.LocMessage.overloadImplementationMismatch().format({name:e,index:r+1})+d.getString(),t.details.declaration.node.name);p&&n.details.declaration&&p.addRelatedInfo(g.LocAddendum.overloadSignature(),null!==(i=null===(s=n.details.declaration)||void 0===s?void 0:s.uri)&&void 0!==i?i:a.uri,null!==(l=null===(o=n.details.declaration)||void 0===o?void 0:o.range)&&void 0!==l?l:a.range)}}));else{const e=A.getEnclosingClassOrFunction(a.node);if(e&&10===e.nodeType){const t=this._evaluator.getTypeOfClass(e);t&&(B.ClassType.isProtocolClass(t.classType)||B.ClassType.supportsAbstractMethods(t.classType)&&(0,B.isOverloadedFunction)(n)&&B.OverloadedFunctionType.getOverloads(n).every((e=>B.FunctionType.isAbstractMethod(e))))&&(r=!0)}r||this._evaluator.addDiagnostic(c.DiagnosticRule.reportNoOverloadImplementation,g.LocMessage.overloadWithoutImplementation().format({name:a.node.name.value}),a.node.name)}}}}}_reportMultipleFinalDeclarations(e,t,n){if(!this._evaluator.isFinalVariable(t))return;const a=t.getDeclarations();let r=!1,s=!1;if(a.forEach((t=>{var a;this._evaluator.isFinalVariableDeclaration(t)&&(r&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalRedeclaration().format({name:e}),t.node),r=!0);let i=!1;1===t.type?t.inferredTypeSource&&(s&&3!==n&&(i=!0),s=!0):i=!0,i&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalReassigned().format({name:e}),null!==(a=(0,_.getNameNodeForDeclaration)(t))&&void 0!==a?a:t.node)})),!s&&!this._fileInfo.isStubFile){const n=a.find((e=>1===e.type&&e.isFinal));if(n){let a=!1,r=!1;if(t.isClassMember()&&!t.isClassVar()){const e=A.getEnclosingClass(n.node,!0);if(e){const t=this._evaluator.getTypeOfClass(e);t&&(0,B.isClass)(t.decoratedType)&&(B.ClassType.isDataClass(t.decoratedType)&&(a=!0),B.ClassType.isProtocolClass(t.decoratedType)&&(r=!0))}}a||r||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalUnassigned().format({name:e}),n.node)}}}_reportMultipleTypeAliasDeclarations(e,t){const n=t.getDeclarations(),a=n.find((e=>this._evaluator.isExplicitTypeAliasDeclaration(e)));a&&n.length>1&&n.forEach((t=>{t!==a&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportRedeclaration,g.LocMessage.typeAliasRedeclared().format({name:e}),t.node)}))}_reportIncompatibleDeclarations(e,t){var n,a,r,s;const i=(0,z.getLastTypedDeclarationForSymbol)(t);if(!i)return;if("_"===e)return;let o,l=t.getDeclarations().filter((e=>e!==i));if(5===i.type){const e=this._evaluator.getTypeOfFunction(i.node);l=l.filter((t=>{if(5!==t.type)return!0;const n=this._evaluator.getTypeOfFunction(t.node);if(!n)return!0;const a=e?this._evaluator.makeTopLevelTypeVarsConcrete(e.decoratedType):void 0;return a&&(0,B.isClassInstance)(a)&&B.ClassType.isPropertyClass(a)&&(0,B.isClassInstance)(n.decoratedType)&&B.ClassType.isPropertyClass(n.decoratedType)?n.decoratedType.details.typeSourceId!==a.details.typeSourceId:!B.FunctionType.isOverloaded(n.functionType)}))}if(0===l.length)return;o=5===i.type?i.isMethod?g.LocAddendum.seeMethodDeclaration():g.LocAddendum.seeFunctionDeclaration():6===i.type?g.LocAddendum.seeClassDeclaration():2===i.type?g.LocAddendum.seeParameterDeclaration():1===i.type?g.LocAddendum.seeVariableDeclaration():4===i.type?g.LocAddendum.seeTypeAliasDeclaration():g.LocAddendum.seeDeclaration();const p=e=>{if(e){let t;5===i.type||6===i.type?t=i.node.name:1===i.type?38===i.node.nodeType&&(t=i.node):2!==i.type&&3!==i.type||i.node.name&&(t=i.node.name),t&&e.addRelatedInfo(o,i.uri,i.range)}};for(const t of l)if(6===t.type){let n=!1;if(3===i.type&&(n=!0),!n){p(this._evaluator.addDiagnostic(c.DiagnosticRule.reportRedeclaration,g.LocMessage.obscuredClassDeclaration().format({name:e}),t.node.name))}}else if(5===t.type){const r=null===(n=this._evaluator.getTypeForDeclaration(i))||void 0===n?void 0:n.type;let s=!1;r&&(0,B.isFunction)(r)&&this._evaluator.getFunctionInferredReturnType(r);const o=null===(a=this._evaluator.getTypeForDeclaration(t))||void 0===a?void 0:a.type,l=A.getEnclosingSuite(i.node)===A.getEnclosingSuite(t.node);if(o&&(0,B.isFunction)(o)&&this._evaluator.getFunctionInferredReturnType(o),!l&&r&&o&&(0,B.isTypeSame)(r,o)&&(s=!0),3===i.type&&(s=!0),!s){p(this._evaluator.addDiagnostic(c.DiagnosticRule.reportRedeclaration,t.isMethod?g.LocMessage.obscuredMethodDeclaration().format({name:e}):g.LocMessage.obscuredFunctionDeclaration().format({name:e}),t.node.name))}}else if(2===t.type){if(t.node.name){let n=!1;if(3===i.type&&(n=!0),!n){const n=g.LocMessage.obscuredParameterDeclaration();p(this._evaluator.addDiagnostic(c.DiagnosticRule.reportRedeclaration,n.format({name:e}),t.node.name))}}}else if(1===t.type){const n=null===(r=this._evaluator.getTypeForDeclaration(i))||void 0===r?void 0:r.type;if(t.typeAnnotationNode&&38===t.node.nodeType){let a=!1;const r=null===(s=this._evaluator.getTypeForDeclaration(t))||void 0===s?void 0:s.type;if(n&&r&&(0,B.isTypeSame)(n,r)&&(a=!0),3===i.type&&(a=!0),!a){p(this._evaluator.addDiagnostic(c.DiagnosticRule.reportRedeclaration,g.LocMessage.obscuredVariableDeclaration().format({name:e}),t.node))}}}else if(4===t.type){p(this._evaluator.addDiagnostic(c.DiagnosticRule.reportRedeclaration,g.LocMessage.obscuredTypeAliasDeclaration().format({name:e}),t.node.name))}}_conditionallyReportUnusedSymbol(e,t,n,a){const r=this._fileInfo.accessedSymbolSet;if(t.isIgnoredForProtocolMatch()||r.has(t.id))return;if(a&&a.some((e=>e.accessedSymbolSet.has(t.id))))return;if("_"===e)return;if(O.isDunderName(e))return;t.getDeclarations().forEach((t=>{this._conditionallyReportUnusedDeclaration(t,this._isSymbolPrivate(e,n))}))}_conditionallyReportUnusedDeclaration(e,t){var n;let a,r,s,i;switch(e.type){case 8:if(a=this._fileInfo.diagnosticRuleSet.reportUnusedImport,i=c.DiagnosticRule.reportUnusedImport,21===e.node.nodeType)if(e.node.alias)e.node.alias.value!==e.moduleName&&(r=e.node.alias);else{const t=e.node.module.nameParts;if(t.length>0){const e=t.map((e=>e.value)).join(".");let n={start:t[0].start,length:t[0].length};return n=u.TextRange.extend(n,t[t.length-1]),this._fileInfo.diagnosticSink.addUnusedCodeWithTextRange(g.LocMessage.unaccessedSymbol().format({name:e}),n,{action:"pyright.unusedImport"}),void this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportUnusedImport,c.DiagnosticRule.reportUnusedImport,g.LocMessage.unaccessedImport().format({name:e}),n)}}else if(23===e.node.nodeType){const t=e.node.parent,a=(null===(n=e.node.alias)||void 0===n?void 0:n.value)===e.node.name.value,s=1===t.module.nameParts.length&&"__future__"===t.module.nameParts[0].value;a||s||(r=e.node.alias||e.node.name)}r&&(s=g.LocMessage.unaccessedImport().format({name:r.value}));break;case 4:case 1:case 2:if(!t)return;if(this._fileInfo.isStubFile)return;a=this._fileInfo.diagnosticRuleSet.reportUnusedVariable,38===e.node.nodeType?(r=e.node,r.value.startsWith("_")&&(a="none")):41===e.node.nodeType&&(r=e.node.name,a="none"),r&&(i=c.DiagnosticRule.reportUnusedVariable,s=g.LocMessage.unaccessedVariable().format({name:r.value}));break;case 6:if(!t)return;if(this._fileInfo.isStubFile)return;a=this._fileInfo.diagnosticRuleSet.reportUnusedClass,r=e.node.name,i=c.DiagnosticRule.reportUnusedClass,s=g.LocMessage.unaccessedClass().format({name:r.value});break;case 5:if(!t)return;if(this._fileInfo.isStubFile)return;a=this._fileInfo.diagnosticRuleSet.reportUnusedFunction,r=e.node.name,i=c.DiagnosticRule.reportUnusedFunction,s=g.LocMessage.unaccessedFunction().format({name:r.value});break;case 3:a="none",r=e.node.name;break;case 0:case 7:return;default:(0,l.assertNever)(e)}const o=i===c.DiagnosticRule.reportUnusedImport?{action:"pyright.unusedImport"}:void 0;r&&(this._fileInfo.diagnosticSink.addUnusedCodeWithTextRange(g.LocMessage.unaccessedSymbol().format({name:r.value}),r,o),void 0!==i&&s&&"none"!==a&&this._evaluator.addDiagnostic(i,s,r))}_validateIsInstanceCall(e){if(38!==e.leftExpression.nodeType||"isinstance"!==e.leftExpression.value&&"issubclass"!==e.leftExpression.value||2!==e.arguments.length)return;const t="isinstance"===e.leftExpression.value;let n=this._evaluator.getType(e.arguments[0].valueExpression);if(!n)return;n=(0,R.mapSubtypes)(n,(e=>(0,R.transformPossibleRecursiveTypeAlias)(e))),n=this._evaluator.expandPromotionTypes(e,n);const a=this._evaluator.getType(e.arguments[1].valueExpression);if(!a)return;let r=!0;const s=new p.DiagnosticAddendum;if((0,R.doForEachSubtype)(a,(e=>{(0,B.isClassInstance)(e)&&B.ClassType.isTupleClass(e)&&e.tupleTypeArguments?e.tupleTypeArguments.some((e=>!this._isTypeSupportedTypeForIsInstance(e.type,t,s)))&&(r=!1):this._isTypeSupportedTypeForIsInstance(e,t,s)||(r=!1)})),r||this._evaluator.addDiagnostic(c.DiagnosticRule.reportArgumentType,t?g.LocMessage.isInstanceInvalidType().format({type:this._evaluator.printType(a)})+s.getString():g.LocMessage.isSubclassInvalidType().format({type:this._evaluator.printType(a)})+s.getString(),e.arguments[1]),!t){const t=new p.DiagnosticAddendum;(0,R.doForEachSubtype)(a,(e=>{(0,B.isClassInstance)(e)&&B.ClassType.isTupleClass(e)&&e.tupleTypeArguments?e.tupleTypeArguments.forEach((e=>{this._validateNotDataProtocol(e.type,t)})):this._validateNotDataProtocol(e,t)})),t.isEmpty()||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.dataProtocolInSubclassCheck(),e.arguments[1])}let i=e;for(;i;){if(2===i.nodeType)return;i=i.parent}const o=["FunctionType","LambdaType","BuiltinFunctionType","BuiltinMethodType","type","Type"],l=[];let d=!1;if((0,R.doForEachSubtype)(a,(a=>{(0,B.isClass)(a)?B.TypeBase.isInstantiable(a)?(void 0===a.literalValue&&(l.push(a),B.ClassType.isBuiltIn(a)&&o.some((e=>e===a.details.name))&&(r=!1),a.includeSubclasses&&(d=!0)),n&&this._validateUnsafeProtocolOverlap(e.arguments[0].valueExpression,(0,R.convertToInstance)(a),t?n:(0,R.convertToInstance)(n))):((0,R.isTupleClass)(a)?a.tupleTypeArguments&&a.tupleTypeArguments.forEach((a=>{(0,B.isInstantiableClass)(a.type)?(l.push(a.type),a.type.includeSubclasses&&(d=!0),n&&this._validateUnsafeProtocolOverlap(e.arguments[0].valueExpression,(0,R.convertToInstance)(a.type),t?n:(0,R.convertToInstance)(n))):r=!1})):a.includeSubclasses&&(d=!0),B.ClassType.isBuiltIn(a)&&o.some((e=>e===a.details.name))&&(r=!1)):r=!1})),!r)return;if((0,R.derivesFromAnyOrUnknown)(n))return;const u=e=>(0,B.combineTypes)(e),m=e=>{const n=[];for(const a of l){const r=(0,U.isIsinstanceFilterSuperclass)(this._evaluator,e,e,a,a,t),s=(0,U.isIsinstanceFilterSubclass)(this._evaluator,e,a,t);r&&s&&!B.ClassType.isSameGenericClass(e,a)?n.push(B.UnknownType.create()):r?n.push(e):s&&n.push(a)}return t?n.map((e=>(0,B.isInstantiableClass)(e)?B.ClassType.cloneAsInstance(e):e)):n};let y;if(t&&(0,B.isClassInstance)(n)){y=u(m(B.ClassType.cloneAsInstantiable(n)))}else if(!t&&(0,B.isInstantiableClass)(n)){y=u(m(n))}else{if(!(0,B.isUnion)(n))return;{let e=[],a=!1;if((0,R.doForEachSubtype)(n,(n=>{(0,B.isAnyOrUnknown)(n)&&(a=!0),t&&(0,B.isClassInstance)(n)?e=e.concat(m(B.ClassType.cloneAsInstantiable(n))):!t&&(0,B.isInstantiableClass)(n)&&(e=e.concat(m(n)))})),y=u(e),a)return}}const h=()=>{const e=l.map((e=>B.ClassType.cloneAsInstance(e)));return(0,B.combineTypes)(e)};!d&&(0,B.isTypeSame)(y,n,{ignorePseudoGeneric:!0})&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnnecessaryIsInstance,t?g.LocMessage.unnecessaryIsInstanceAlways().format({testType:this._evaluator.printType(n),classType:this._evaluator.printType(h())}):g.LocMessage.unnecessaryIsSubclassAlways().format({testType:this._evaluator.printType(n),classType:this._evaluator.printType(h())}),e)}_validateUnsafeProtocolOverlap(e,t,n){if(B.ClassType.isProtocolClass(t)){let a=!1;const r=new p.DiagnosticAddendum;(0,R.doForEachSubtype)(n,(e=>{(0,B.isClassInstance)(e)&&(0,N.isProtocolUnsafeOverlap)(this._evaluator,t,e)&&(a=!0,r.addMessage(g.LocAddendum.protocolUnsafeOverlap().format({name:e.details.name})))})),a&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.protocolUnsafeOverlap().format({name:t.details.name})+r.getString(),e)}}_isTypeSupportedTypeForIsInstance(e,t,n){let a=!0;return(0,R.doForEachSubtype)(e,(e=>{if(e=this._evaluator.makeTopLevelTypeVarsConcrete(e),(e=(0,R.transformPossibleRecursiveTypeAlias)(e)).specialForm&&B.ClassType.isBuiltIn(e.specialForm,"TypeAliasType"))return n.addMessage(g.LocAddendum.typeAliasInstanceCheck()),void(a=!1);switch(e.category){case 2:case 1:case 0:break;case 6:B.ClassType.isBuiltIn(e,"TypedDict")?(n.addMessage(g.LocAddendum.typedDictNotAllowed()),a=!1):B.ClassType.isBuiltIn(e,"NamedTuple")?(n.addMessage(g.LocAddendum.namedTupleNotAllowed()),a=!1):(0,R.isNoneInstance)(e)?(n.addMessage(g.LocAddendum.noneNotAllowed()),a=!1):B.ClassType.isTypedDictClass(e)?(n.addMessage(g.LocAddendum.typedDictClassNotAllowed()),a=!1):e.isTypeArgumentExplicit&&!e.includeSubclasses?(n.addMessage(g.LocAddendum.genericClassNotAllowed()),a=!1):!B.ClassType.isProtocolClass(e)||B.ClassType.isRuntimeCheckable(e)||e.includeSubclasses?B.ClassType.isNewTypeClass(e)?(n.addMessage(g.LocAddendum.newTypeClassNotAllowed()),a=!1):e.specialForm&&(0,B.isInstantiableClass)(e.specialForm)&&B.ClassType.isBuiltIn(e.specialForm,"Annotated")&&(n.addMessage(g.LocAddendum.annotatedNotAllowed()),a=!1):(n.addMessage(g.LocAddendum.protocolRequiresRuntimeCheckable()),a=!1);break;case 4:B.TypeBase.isInstantiable(e)&&!e.isCallableWithTypeArgs||(n.addMessage(g.LocAddendum.genericClassNotAllowed()),a=!1);break;case 9:n.addMessage(g.LocAddendum.typeVarNotAllowed()),a=!1}})),a}_validateNotDataProtocol(e,t){(0,B.isInstantiableClass)(e)&&B.ClassType.isProtocolClass(e)&&!(0,N.isMethodOnlyProtocol)(e)&&t.addMessage(g.LocAddendum.dataProtocolUnsupported().format({name:e.details.name}))}_isSymbolPrivate(e,t){if(2===t||1===t)return!0;if(O.isPrivateName(e))return!0;if(O.isProtectedName(e)){return!(3===t)}return!1}_reportDeprecatedClassProperty(e,t){(0,B.isClassInstance)(t.decoratedType)&&B.ClassType.isClassProperty(t.decoratedType)&&this._reportDeprecatedDiagnostic(e.name,g.LocMessage.classPropertyDeprecated())}_reportDeprecatedUseForMemberAccess(e,t){let n;"property"===t.accessType?n="get"===t.accessMethod?g.LocMessage.deprecatedPropertyGetter().format({name:e.value}):"set"===t.accessMethod?g.LocMessage.deprecatedPropertySetter().format({name:e.value}):g.LocMessage.deprecatedPropertyDeleter().format({name:e.value}):"descriptor"===t.accessType&&(n="get"===t.accessMethod?g.LocMessage.deprecatedDescriptorGetter().format({name:e.value}):"set"===t.accessMethod?g.LocMessage.deprecatedDescriptorSetter().format({name:e.value}):g.LocMessage.deprecatedDescriptorDeleter().format({name:e.value})),n&&this._reportDeprecatedDiagnostic(e,n,t.deprecationMessage)}_reportDeprecatedUseForType(e,t,n=!1){var a,r;if(!t)return;let s,i;function o(e){if(e.details.declaration&&28===e.details.declaration.node.nodeType){const t=A.getEnclosingClass(e.details.declaration.node,!0);if(t)return g.LocMessage.deprecatedMethod().format({name:e.details.name||"<anonymous>",className:t.name.value})}return g.LocMessage.deprecatedFunction().format({name:e.details.name})}function l(t,n){let a;const r=A.getCallForName(e);if(r)a=t.getTypeResult(r);else{const n=A.getDecoratorForName(e);n&&(a=t.getTypeResultForDecorator(n))}a&&a.overloadsUsedForCall&&a.overloadsUsedForCall.length>0&&a.overloadsUsedForCall.forEach((t=>{void 0!==t.details.deprecatedMessage&&(e.value===t.details.name?(i=t.details.deprecatedMessage,s=o(t)):(0,B.isInstantiableClass)(n)&&"__init__"===t.details.name?(i=t.details.deprecatedMessage,s=g.LocMessage.deprecatedConstructor().format({name:n.details.name})):(0,B.isClassInstance)(n)&&"__call__"===t.details.name&&(i=t.details.deprecatedMessage,s=g.LocMessage.deprecatedFunction().format({name:e.value})))}))}if((0,R.doForEachSubtype)(t,(t=>{if((0,B.isClass)(t))return t.includeSubclasses||void 0===t.details.deprecatedMessage||e.value!==t.details.name?void l(this._evaluator,t):(i=t.details.deprecatedMessage,void(s=g.LocMessage.deprecatedClass().format({name:t.details.name})));if((0,B.isFunction)(t))void 0!==t.details.deprecatedMessage&&(t.details.name&&"__call__"!==t.details.name&&e.value!==t.details.name||(i=t.details.deprecatedMessage,s=o(t)));else if((0,B.isOverloadedFunction)(t)){l(this._evaluator,t);const n=B.OverloadedFunctionType.getImplementation(t);void 0!==(null==n?void 0:n.details.deprecatedMessage)&&(n.details.name&&e.value!==n.details.name||(i=n.details.deprecatedMessage,s=o(n)))}})),s&&this._reportDeprecatedDiagnostic(e,s,i),this._fileInfo.diagnosticRuleSet.deprecateTypingAliases){const s=null!==(a=C.deprecatedAliases.get(e.value))&&void 0!==a?a:C.deprecatedSpecialForms.get(e.value);s&&((0,B.isInstantiableClass)(t)&&t.details.fullName===s.fullName||(null===(r=t.typeAliasInfo)||void 0===r?void 0:r.fullName)===s.fullName)&&this._fileInfo.executionEnvironment.pythonVersion.isGreaterOrEqualTo(s.version)&&(s.typingImportOnly&&!n||("none"===this._fileInfo.diagnosticRuleSet.reportDeprecated?this._evaluator.addDeprecated(g.LocMessage.deprecatedType().format({version:s.version.toString(),replacement:s.replacementText}),e):this._evaluator.addDiagnostic(c.DiagnosticRule.reportDeprecated,g.LocMessage.deprecatedType().format({version:s.version.toString(),replacement:s.replacementText}),e)))}}_reportDeprecatedDiagnostic(e,t,n){const a=new p.DiagnosticAddendum;n&&a.addMessage(n),"none"===this._fileInfo.diagnosticRuleSet.reportDeprecated?this._evaluator.addDeprecated(t+a.getString(),e):this._evaluator.addDiagnostic(c.DiagnosticRule.reportDeprecated,t+a.getString(),e)}_reportUnboundName(e){if("none"!==this._fileInfo.diagnosticRuleSet.reportUnboundVariable&&!T.isCodeUnreachable(e)){const t=this._evaluator.getType(e);t&&((0,B.isUnbound)(t)?this._evaluator.isNodeReachable(e)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnboundVariable,g.LocMessage.symbolIsUnbound().format({name:e.value}),e):(0,B.isPossiblyUnbound)(t)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportPossiblyUnboundVariable,g.LocMessage.symbolIsPossiblyUnbound().format({name:e.value}),e))}}_conditionallyReportShadowedModule(){if("none"===this._fileInfo.diagnosticRuleSet.reportShadowedImports)return;const e=this._fileInfo.moduleName,t={nameParts:e.split("."),leadingDots:0,importedSymbols:new Set};if(this._importResolver.getTypeshedStdLibPath(this._fileInfo.executionEnvironment)&&this._importResolver.isStdlibModule(t,this._fileInfo.executionEnvironment)&&this._sourceMapper.isUserCode(this._fileInfo.fileUri)){const t=this._evaluator.addDiagnosticForTextRange(this._fileInfo,this._fileInfo.diagnosticRuleSet.reportShadowedImports,c.DiagnosticRule.reportShadowedImports,g.LocMessage.stdlibModuleOverridden().format({name:e,path:this._fileInfo.fileUri.toUserVisibleString()}),this._moduleNode);if(t){const e={action:"renameShadowedFile",oldUri:this._fileInfo.fileUri,newUri:this._sourceMapper.getNextFileName(this._fileInfo.fileUri)};t.addAction(e)}}}_conditionallyReportShadowedImport(e){var t,n;if("none"===this._fileInfo.diagnosticRuleSet.reportShadowedImports)return;const a=23===e.nodeType?22===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)?null===(n=e.parent)||void 0===n?void 0:n.module:void 0:e.module;if(null==a?void 0:a.leadingDots)return;const r=21===e.nodeType?e.module.nameParts:23===e.nodeType?[e.name]:e.module.nameParts,s=r.map((e=>e.value)),o={nameParts:s,leadingDots:0,importedSymbols:new Set},l=this._importResolver.getTypeshedStdLibPath(this._fileInfo.executionEnvironment);if(l&&this._importResolver.isStdlibModule(o,this._fileInfo.executionEnvironment)){const t=y.DefinitionProvider.getDefinitionsForNode(this._sourceMapper,this._evaluator,r[r.length-1],r[r.length-1].start,i.CancellationToken.None);(t?t.map((e=>e.uri)):[]).forEach((t=>{if(!t.startsWith(l)&&!(0,E.isStubFile)(t)&&this._sourceMapper.isUserCode(t)){const n=this._evaluator.addDiagnostic(c.DiagnosticRule.reportShadowedImports,g.LocMessage.stdlibModuleOverridden().format({name:s.join("."),path:t.toUserVisibleString()}),e);if(n){const e={action:"renameShadowedFile",oldUri:t,newUri:this._sourceMapper.getNextFileName(t)};n.addAction(e)}}}))}}_conditionallyReportPrivateUsage(e){var t;if("none"===this._fileInfo.diagnosticRuleSet.reportPrivateUsage)return;if(this._fileInfo.isStubFile)return;if(1===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.name===e)return;const n=e.value,a=O.isPrivateName(n),r=O.isProtectedName(n);if(!a&&!r)return;const s=this._evaluator.getDeclarationsForNameNode(e);let i,o=s&&s.length>0?s[s.length-1]:void 0;if(!o||o.node===e)return;if(8===o.type){if(o.usesLocalName)return;const e=this._evaluator.resolveAliasDeclarationWithInfo(o,!0);if(!e)return;if(o=e.declaration,!e.isPrivate)return}if(!o||o.node===e)return;o.node&&(i=A.getEnclosingClass(o.node)),o.node&&o.node.parent&&o.node.parent===i&&(i=A.getEnclosingClass(i));let l=!1;if(i&&r){const t=this._evaluator.getTypeOfClass(i);if(t&&(0,B.isInstantiableClass)(t.decoratedType)){if(B.ClassType.isDefinedInStub(t.decoratedType))return;l=!0;const n=A.getEnclosingClass(e);if(n){const e=this._evaluator.getTypeOfClass(n);if(e&&(0,B.isInstantiableClass)(e.decoratedType)&&(0,R.derivesFromClassRecursive)(e.decoratedType,t.decoratedType,!0))return}}}i&&!A.isNodeContainedWithin(e,i)&&(l?this._evaluator.addDiagnostic(c.DiagnosticRule.reportPrivateUsage,g.LocMessage.protectedUsedOutsideOfClass().format({name:n}),e):this._evaluator.addDiagnostic(c.DiagnosticRule.reportPrivateUsage,g.LocMessage.privateUsedOutsideOfClass().format({name:n}),e))}_validateEnumClassOverride(e,t){t.details.baseClasses.forEach(((t,n)=>{(0,B.isClass)(t)&&(0,I.isEnumClassWithMembers)(this._evaluator,t)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.enumClassOverride().format({name:t.details.name}),e.arguments[n])}))}_validateTypedDictClassSuite(e){const t=e=>{this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typedDictBadVar(),e)};e.statements.forEach((e=>{if(!T.isCodeUnreachable(e))if(47===e.nodeType)for(const n of e.statements)54!==n.nodeType&&18!==n.nodeType&&48!==n.nodeType&&42!==n.nodeType&&t(n);else t(e)}))}_validateTypeGuardFunction(e,t,n){var a;const r=t.details.declaredReturnType;if(!r)return;if(!(0,B.isClassInstance)(r)||!r.typeArguments||r.typeArguments.length<1)return;const s=B.ClassType.isBuiltIn(r,"TypeGuard"),i=B.ClassType.isBuiltIn(r,"TypeIs");if(!s&&!i)return;let o=t.details.parameters.length;if(n&&(B.FunctionType.isInstanceMethod(t)||B.FunctionType.isConstructorMethod(t)||B.FunctionType.isClassMethod(t))&&o--,o<1&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeGuardParamCount(),e.name),i){const s=r.typeArguments[0],i=n&&!B.FunctionType.isStaticMethod(t)?1:0;if(i>=t.details.parameters.length)return;const o=B.FunctionType.getEffectiveParameterType(t,i);if(!this._evaluator.assignType(o,s)){const t=e.returnTypeAnnotation||(null===(a=e.functionAnnotationComment)||void 0===a?void 0:a.returnTypeAnnotation);t&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeIsReturnType().format({type:this._evaluator.printType(o),returnType:this._evaluator.printType(s)}),t)}}}_validateDunderSignatures(e,t,n){var a;const r=t.details.name;if(n&&"__init__"===r){const n=e.returnTypeAnnotation||(null===(a=e.functionAnnotationComment)||void 0===a?void 0:a.returnTypeAnnotation),r=t.details.declaredReturnType;if(n&&r)(0,R.isNoneInstance)(r)||(0,B.isNever)(r)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.initMustReturnNone(),n);else{const n=this._evaluator.getFunctionInferredReturnType(t);(0,B.isNever)(n)||(0,R.isNoneInstance)(n)||(0,B.isAnyOrUnknown)(n)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.initMustReturnNone(),e.name)}}}_validateFunctionReturn(e,t){var n;if(this._fileInfo.isStubFile)return;const a=e.returnTypeAnnotation||(null===(n=e.functionAnnotationComment)||void 0===n?void 0:n.returnTypeAnnotation);if(a){const n=!this._evaluator.isAfterNodeReachable(e),r=this._evaluator.isAfterNodeReachable(e.suite);let s=t.details.declaredReturnType;if(s&&(this._reportUnknownReturnResult(e,s),this._validateReturnTypeIsNotContravariant(s,a)),B.FunctionType.isGenerator(t)&&(s=(0,R.getDeclaredGeneratorReturnType)(t)),s&&!n&&r)if((0,B.isNever)(s))A.isSuiteEmpty(e.suite)||B.FunctionType.isOverloaded(t)||B.FunctionType.isAsync(t)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportReturnType,g.LocMessage.noReturnReturnsNone(),a);else if(!B.FunctionType.isAbstractMethod(t)){const n=new p.DiagnosticAddendum;this._evaluator.assignType(s,this._evaluator.getNoneType(),n)||A.isSuiteEmpty(e.suite)||B.FunctionType.isOverloaded(t)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportReturnType,g.LocMessage.returnMissing().format({returnType:this._evaluator.printType(s)})+n.getString(),a)}}else{const n=this._evaluator.getFunctionInferredReturnType(t);this._reportUnknownReturnResult(e,n),this._validateReturnTypeIsNotContravariant(n,e.name)}}_validateReturnTypeIsNotContravariant(e,t){let n=!1;(0,R.doForEachSubtype)(e,(e=>{(0,B.isTypeVar)(e)&&4===e.details.declaredVariance&&0===e.scopeType&&(n=!0)})),n&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.returnTypeContravariant(),t)}_reportUnknownReturnResult(e,t){(0,B.isUnknown)(t)?this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownParameterType,g.LocMessage.returnTypeUnknown(),e.name):(0,R.isPartlyUnknown)(t)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnknownParameterType,g.LocMessage.returnTypePartiallyUnknown().format({returnType:this._evaluator.printType(t,{expandTypeAlias:!0})}),e.name)}_validateFinalMemberOverrides(e){B.ClassType.getSymbolTable(e).forEach(((t,n)=>{const a=(0,R.lookUpClassMember)(e,n,1);if(a&&(0,B.isInstantiableClass)(a.classType)&&!O.isPrivateName(n))if(this._evaluator.isFinalVariable(a.symbol)){const e=t.getDeclarations()[0];this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalRedeclarationBySubclass().format({name:n,className:a.classType.details.name}),e.node)}else if(B.ClassType.isReadOnlyInstanceVariables(a.classType)&&!O.isDunderName(n)){const e=t.getDeclarations()[0];1===e.type&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.namedTupleEntryRedeclared().format({name:n,className:a.classType.details.name}),e.node)}}))}_validateEnumMembers(e,t){if(!B.ClassType.isEnumClass(e)||B.ClassType.isBuiltIn(e))return;const n=(0,I.getEnumDeclaredValueType)(this._evaluator,e,!0);let a=(0,v.getBoundNewMethod)(this._evaluator,t.name,e,void 0,4);(null==a?void 0:a.classType)&&(0,B.isClass)(a.classType)&&B.ClassType.isBuiltIn(a.classType)&&(a=void 0);let r=(0,v.getBoundInitMethod)(this._evaluator,t.name,B.ClassType.cloneAsInstance(e),void 0,4);(null==r?void 0:r.classType)&&(0,B.isClass)(r.classType)&&B.ClassType.isBuiltIn(r.classType)&&(r=void 0),B.ClassType.getSymbolTable(e).forEach(((t,s)=>{var i;if(t.getTypedDeclarations().length>0)return;const o=this._evaluator.getEffectiveTypeOfSymbol(t);if(!((0,B.isClassInstance)(o)&&B.ClassType.isSameGenericClass(o,e)&&o.literalValue instanceof B.EnumLiteral))return;const l=t.getDeclarations();if(l.length>=2&&1===l[0].type)return void this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.duplicateEnumMember().format({name:s}),l[1].node);if(1!==l[0].type)return;const d=l[0].node,u=o.literalValue.itemType,m=A.getParentNodeOfType(d,3),y=null!==(i=null==m?void 0:m.rightExpression)&&void 0!==i?i:d;if(a||r){if(!(0,B.isAnyOrUnknown)(u)){const e=[{argumentCategory:(0,B.isClassInstance)(u)&&(0,R.isTupleClass)(u)?1:0,typeResult:{type:u}}];a&&this._evaluator.validateCallArguments(y,e,a),r&&this._evaluator.validateCallArguments(y,e,r)}}else if(n){const t=new p.DiagnosticAddendum;(0,B.isClassInstance)(u)&&B.ClassType.isSameGenericClass(u,e)||this._evaluator.assignType(n,u,t)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportAssignmentType,g.LocMessage.typeAssignmentMismatch().format(this._evaluator.printSrcDestTypes(u,n))+t.getString(),y)}}))}_validateDataClassPostInit(e,t){if(!B.ClassType.isDataClass(e))return;const n=(0,R.lookUpClassMember)(e,"__post_init__",66);if(!n)return;if(B.ClassType.derivesFromAnyOrUnknown(e))return;const a=new Map;B.ClassType.getReverseMro(e).forEach((e=>{(0,B.isClass)(e)&&B.ClassType.isDataClass(e)&&B.ClassType.getSymbolTable(e).forEach(((e,t)=>{e.isInitVar()&&a.set(t,e)}))}));const r=this._evaluator.getTypeOfMember(n);if(!(0,B.isFunction)(r)||!B.FunctionType.isInstanceMethod(r)||!r.details.declaration)return;const s=(0,S.getParameterListDetails)(r);if(void 0!==s.argsIndex||void 0!==s.kwargsIndex||void 0!==s.firstKeywordOnlyIndex)return;const i=s.params.filter((e=>!e.param.hasDefault)),o=a.size+1;(o<i.length||o>s.params.length)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.dataClassPostInitParamCount().format({expected:a.size}),r.details.declaration.node.name);let l=1;a.forEach(((e,t)=>{var n;if(l>=s.params.length)return;const a=s.params[l].param;if(a.hasDeclaredType&&a.typeAnnotation){const i=null===(n=this._evaluator.getDeclaredTypeOfSymbol(e))||void 0===n?void 0:n.type,o=B.FunctionType.getEffectiveParameterType(r,s.params[l].index),d=new p.DiagnosticAddendum;if(i&&!this._evaluator.assignType(o,i,d)){const n=this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.dataClassPostInitType().format({fieldName:t})+d.getString(),a.typeAnnotation);if(n){const t=e.getTypedDeclarations();t.length>0&&n.addRelatedInfo(g.LocAddendum.dataClassFieldLocation(),t[0].uri,t[0].range)}}}l++}))}_validateFinalClassNotAbstract(e,t){if(!B.ClassType.isFinal(e))return;if(!B.ClassType.supportsAbstractMethods(e))return;const n=this._evaluator.getAbstractSymbols(e);if(0===n.length)return;const a=new p.DiagnosticAddendum;n.forEach(((e,t)=>{if(2===t)a.addMessage(g.LocAddendum.memberIsAbstractMore().format({count:n.length-2}));else if(t<2&&(0,B.isInstantiableClass)(e.classType)){const t=e.classType.details.name;a.addMessage(g.LocAddendum.memberIsAbstract().format({type:t,name:e.symbolName}))}})),this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalClassIsAbstract().format({type:e.details.name})+a.getString(),t.name)}_validateInstanceVariableInitialization(e,t){if(this._fileInfo.isStubFile)return;if("none"===this._fileInfo.diagnosticRuleSet.reportUninitializedInstanceVariable)return;if(B.ClassType.isProtocolClass(t)||B.ClassType.supportsAbstractMethods(t)&&!B.ClassType.isFinal(t))return;const n=new Map;B.ClassType.isFinal(t)&&(0,R.getProtocolSymbolsRecursive)(t,n,2048),B.ClassType.getSymbolTable(t).forEach(((e,a)=>{if(n.delete(a),!e.isInstanceMember())return;const r=e.getDeclarations();if(r.find((e=>{var n,a,r;const s=A.getEnclosingClassOrFunction(e.node);if(!s)return!0;if(10===s.nodeType){if(3===(null===(n=e.node.parent)||void 0===n?void 0:n.nodeType))return!0;if(54===(null===(a=e.node.parent)||void 0===a?void 0:a.nodeType)&&3===(null===(r=e.node.parent.parent)||void 0===r?void 0:r.nodeType))return!0;if(B.ClassType.isDataClass(t))return!0;if(B.ClassType.isTypedDictClass(t))return!0}return"__init__"===s.name.value})))return;(0,R.lookUpClassMember)(t,a,1)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportUninitializedInstanceVariable,g.LocMessage.uninitializedInstanceVariable().format({name:a}),r[0].node)}));const a=new p.DiagnosticAddendum;n.forEach(((e,t)=>{const n=e.symbol.getDeclarations();0!==n.length&&(0,B.isClass)(e.classType)&&1===n[0].type&&(n.some((e=>1===e.type&&!!e.inferredTypeSource))||a.addMessage(g.LocAddendum.uninitializedAbstractVariable().format({name:t,classType:e.classType.details.name})))})),a.isEmpty()||this._evaluator.addDiagnostic(c.DiagnosticRule.reportUninitializedInstanceVariable,g.LocMessage.uninitializedAbstractVariables().format({classType:t.details.name})+a.getString(),e.name)}_validateProtocolTypeParamVariance(e,t){if(0===t.details.typeParameters.length)return;const n=this._evaluator.getBuiltInType(e,"object");if(!(0,B.isInstantiableClass)(n))return;const a=B.ClassType.cloneAsInstance(n),r=B.ClassType.createInstantiable("__varianceDummy","","",m.Uri.empty(),0,0,void 0,void 0);t.details.typeParameters.forEach(((n,s)=>{if(n.details.isVariadic||n.details.isParamSpec)return;if(0===n.details.declaredVariance)return;const i=t.details.typeParameters.map(((e,t)=>e.details.isVariadic?e:t===s?a:r)),o=t.details.typeParameters.map(((e,t)=>t===s||e.details.isVariadic?e:r)),l=B.ClassType.cloneForSpecialization(t,i,!0),p=B.ClassType.cloneForSpecialization(t,o,!0);let d;if(this._evaluator.assignClassToSelf(l,p,3))d=3;else{d=this._evaluator.assignClassToSelf(p,l,4)?4:2}if(d!==t.details.typeParameters[s].details.declaredVariance){let a;a=3===d?g.LocMessage.protocolVarianceCovariant().format({variable:n.details.name,class:t.details.name}):4===d?g.LocMessage.protocolVarianceContravariant().format({variable:n.details.name,class:t.details.name}):g.LocMessage.protocolVarianceInvariant().format({variable:n.details.name,class:t.details.name}),this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidTypeVarUse,a,e.name)}}))}_validateSlotsClassVarConflict(e){e.details.localSlotsNames&&(B.ClassType.isDataClass(e)||B.ClassType.getSymbolTable(e).forEach(((e,t)=>{const n=e.getDeclarations();n.some((e=>1===e.type&&e.isDefinedBySlots))&&n.forEach((e=>{1!==e.type||e.isDefinedBySlots||e.isDefinedByMemberAccess||38===e.node.nodeType&&A.isWriteAccess(e.node)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.slotsClassVarConflict().format({name:t}),e.node)}))})))}_validateConstructorConsistency(e,t){if((0,v.getBoundCallMethod)(this._evaluator,t,e))return;const n=(0,v.getBoundNewMethod)(this._evaluator,t,e);if(!n||n.typeErrors||!n.classType||!(0,B.isClass)(n.classType))return;const a=(0,v.getBoundInitMethod)(this._evaluator,t,B.ClassType.cloneAsInstance(e));if(!a||a.typeErrors||!a.classType||!(0,B.isClass)(a.classType))return;if(!B.ClassType.isSameGenericClass(a.classType,e)&&!B.ClassType.isSameGenericClass(n.classType,e))return;let r=n.type;if(!(0,B.isFunction)(r)&&!(0,B.isOverloadedFunction)(r))return;if((0,B.isOverloadedFunction)(r)&&(r=B.OverloadedFunctionType.getImplementation(r),!r))return;let s=a.type;if(((0,B.isFunction)(s)||(0,B.isOverloadedFunction)(s))&&(!(0,B.isOverloadedFunction)(s)||(s=B.OverloadedFunctionType.getImplementation(s),s))&&!(B.FunctionType.hasDefaultParameters(s)||B.FunctionType.hasDefaultParameters(r)||(s=B.FunctionType.cloneWithNewFlags(s,98304|s.details.flags),r=B.FunctionType.cloneWithNewFlags(r,98304|s.details.flags),this._evaluator.assignType(r,s,void 0,void 0,void 0,64)&&this._evaluator.assignType(s,r,void 0,void 0,void 0,64)))){const t=B.ClassType.isSameGenericClass(a.classType,e),i=s.details.declaration,o=r.details.declaration;if(i&&o){const e=t?i:o,l=28===e.node.nodeType?e.node.name:e.node,d=new p.DiagnosticAddendum,u=this._evaluator.printType(s),m=this._evaluator.printType(r);d.addMessage(g.LocAddendum.initMethodSignature().format({type:u})),d.addMessage(g.LocAddendum.newMethodSignature().format({type:m}));const y=this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentConstructor,g.LocMessage.constructorParametersMismatch().format({classType:this._evaluator.printType(B.ClassType.cloneAsInstance(t?a.classType:n.classType))})+d.getString(),l);if(y){const e=t?o:i;y.addRelatedInfo((t?g.LocAddendum.newMethodLocation():g.LocAddendum.initMethodLocation()).format({type:this._evaluator.printType(B.ClassType.cloneAsInstance(t?n.classType:a.classType))}),e.uri,e.range)}}}}_validateMultipleInheritanceBaseClasses(e,t){const n=[];for(const t of e.details.baseClasses){if(!(0,B.isClass)(t))return;B.ClassType.isBuiltIn(t,["Generic","Protocol","object"])||n.push(t)}if(n.length<2)return;const a=new p.DiagnosticAddendum;for(const t of n){const n=(0,R.buildTypeVarContextFromSpecializedClass)(t);for(const r of t.details.mro)if((0,B.isClass)(r)&&r.details.typeParameters.length>0){const s=(0,R.applySolvedTypeVars)(r,n),i=e.details.mro.find((e=>(0,B.isClass)(e)&&B.ClassType.isSameGenericClass(e,s)));if(i&&(0,B.isInstantiableClass)(i)){const e=B.ClassType.cloneAsInstance(i),n=B.ClassType.cloneAsInstance(s);if(!this._evaluator.assignType(e,n)){const r=new p.DiagnosticAddendum,s=(0,R.convertToInstance)(t);(0,B.isTypeSame)(s,n)?r.addMessage(g.LocAddendum.baseClassIncompatible().format({baseClass:this._evaluator.printType(s),type:this._evaluator.printType(e)})):r.addMessage(g.LocAddendum.baseClassIncompatibleSubclass().format({baseClass:this._evaluator.printType(s),subclass:this._evaluator.printType(n),type:this._evaluator.printType(e)})),a.addAddendum(r);break}}}}a.isEmpty()||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.baseClassIncompatible().format({type:e.details.name})+a.getString(),t)}_validateMultipleInheritanceCompatibility(e,t){if("none"===this._fileInfo.diagnosticRuleSet.reportIncompatibleMethodOverride&&"none"===this._fileInfo.diagnosticRuleSet.reportIncompatibleVariableOverride)return;const n=[];if(e.details.baseClasses.forEach((e=>{!(0,B.isClass)(e)||B.ClassType.isBuiltIn(e,"Generic")||B.ClassType.isBuiltIn(e,"Protocol")||n.push(e)})),n.length<2)return;const a=n.map((t=>{const n=e.details.mro.find((e=>(0,B.isClass)(e)&&B.ClassType.isSameGenericClass(e,t)));return n&&(0,B.isClass)(n)?(0,R.getClassFieldsRecursive)(n):new Map})),r=(0,R.getClassFieldsRecursive)(e);for(let n=1;n<a.length;n++){const s=a[n];for(const[n,a]of s){if(O.isDunderName(n)||O.isPrivateName(n))continue;const s=a.classType;if(!(0,B.isClass)(s))continue;const i=r.get(n);if(i){const r=i.classType;if(!(0,B.isClass)(r)||B.ClassType.isSameGenericClass(r,s)||B.ClassType.isSameGenericClass(r,e))continue;this._validateMultipleInheritanceOverride(a,i,e,n,t)}}}}_validateMultipleInheritanceOverride(e,t,n,a,r){var s,i,o,l;if(!(0,B.isClass)(e.classType)||!(0,B.isClass)(t.classType))return;if("_"===a)return;let d=this._evaluator.getEffectiveTypeOfSymbol(e.symbol);d=(0,R.partiallySpecializeType)(d,e.classType);const u=t.symbol;let m=this._evaluator.getEffectiveTypeOfSymbol(u);m=(0,R.partiallySpecializeType)(m,t.classType);const y=B.ClassType.getSymbolTable(n).get(a),h=y?this._evaluator.getEffectiveTypeOfSymbol(y):void 0;let f;const T=(0,z.getLastTypedDeclarationForSymbol)(t.symbol),v=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);if((0,B.isFunction)(d)||(0,B.isOverloadedFunction)(d)){const e=new p.DiagnosticAddendum;let t;if((0,B.isFunction)(m))t=m;else if((0,B.isOverloadedFunction)(m)&&(t=B.OverloadedFunctionType.getImplementation(m),!t))return;if(t&&!this._evaluator.validateOverrideMethod(d,t,void 0,e,!0)){const s=t.details.declaration;s&&5===s.type&&(f=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.baseClassMethodTypeIncompatible().format({classType:n.details.name,name:a})+e.getString(),r))}}else if((0,R.isProperty)(d)){if(!(0,R.isProperty)(m)&&!(0,B.isAnyOrUnknown)(m)){u.getDeclarations().length>0&&(f=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.baseClassVariableTypeIncompatible().format({classType:n.details.name,name:a}),r))}}else if("none"!==this._fileInfo.diagnosticRuleSet.reportIncompatibleVariableOverride){const p=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);let u,y,T=1===(null==p?void 0:p.type)&&!p.isFinal;if(B.ClassType.isFrozenDataClass(e.classType)&&e.classType.details.dataClassEntries){e.classType.details.dataClassEntries.find((e=>e.name===a))&&(T=!1)}if(e.classType.details.typedDictEntries&&(u=null!==(i=null!==(s=e.classType.details.typedDictEntries.knownItems.get(a))&&void 0!==s?s:e.classType.details.typedDictEntries.extraItems)&&void 0!==i?i:(0,j.getEffectiveExtraItemsEntryType)(this._evaluator,e.classType),(null==u?void 0:u.isReadOnly)&&(T=!1)),t.classType.details.typedDictEntries&&(y=null!==(l=null!==(o=t.classType.details.typedDictEntries.knownItems.get(a))&&void 0!==o?o:t.classType.details.typedDictEntries.extraItems)&&void 0!==l?l:(0,j.getEffectiveExtraItemsEntryType)(this._evaluator,t.classType)),this._evaluator.assignType(d,null!=h?h:m,void 0,void 0,void 0,T?1:0)){if(u&&y){let e,t=!0;if(u.isReadOnly?e=y.isRequired||!u.isRequired:(t=!y.isReadOnly,e=y.isRequired===u.isRequired),e)t||(f=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.typedDictFieldReadOnlyRedefinition().format({name:a}),r));else{const e=y.isRequired?g.LocMessage.typedDictFieldRequiredRedefinition:g.LocMessage.typedDictFieldNotRequiredRedefinition;f=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,e().format({name:a}),r)}}}else f=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.baseClassVariableTypeIncompatible().format({classType:n.details.name,name:a}),r)}f&&T&&v&&(f.addRelatedInfo(g.LocAddendum.baseClassOverriddenType().format({baseClass:this._evaluator.printType((0,R.convertToInstance)(e.classType)),type:this._evaluator.printType(d)}),v.uri,v.range),f.addRelatedInfo(g.LocAddendum.baseClassOverridesType().format({baseClass:this._evaluator.printType((0,R.convertToInstance)(t.classType)),type:this._evaluator.printType(m)}),T.uri,T.range))}_validateOverloadDecoratorConsistency(e){B.ClassType.getSymbolTable(e).forEach(((e,t)=>{const n=(0,z.getLastTypedDeclarationForSymbol)(e);if(!n||5!==n.type)return;const a=this._evaluator.getEffectiveTypeOfSymbol(e);if(!(0,B.isOverloadedFunction)(a))return;const r=B.OverloadedFunctionType.getOverloads(a),s=B.OverloadedFunctionType.getImplementation(a);s?B.FunctionType.isFinal(s)||r.forEach((e=>{var t,n;B.FunctionType.isFinal(e)&&(null===(t=e.details.declaration)||void 0===t?void 0:t.node)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentOverload,g.LocMessage.overloadFinalInconsistencyImpl().format({name:e.details.name}),null!==(n=(0,_.getNameNodeForDeclaration)(e.details.declaration))&&void 0!==n?n:e.details.declaration.node)})):B.FunctionType.isFinal(r[0])||r.slice(1).forEach(((e,t)=>{var n,a;B.FunctionType.isFinal(e)&&(null===(n=e.details.declaration)||void 0===n?void 0:n.node)&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportInconsistentOverload,g.LocMessage.overloadFinalInconsistencyNoImpl().format({name:e.details.name,index:t+2}),null!==(a=(0,_.getNameNodeForDeclaration)(e.details.declaration))&&void 0!==a?a:e.details.declaration.node)}))}))}_validateTypedDictOverrides(e){if(!B.ClassType.isTypedDictClass(e))return;const t=(0,j.getTypedDictMembersForClass)(this._evaluator,e,!1);for(const n of e.details.baseClasses){const a=new p.DiagnosticAddendum;if(!(0,B.isClass)(n)||!B.ClassType.isTypedDictClass(n)||!B.ClassType.isTypedDictEffectivelyClosed(n))continue;const r=(0,j.getTypedDictMembersForClass)(this._evaluator,n,!1),s=(0,R.buildTypeVarContextFromSpecializedClass)(n),i=r.extraItems?(0,R.applySolvedTypeVars)(r.extraItems.valueType,s):B.UnknownType.create();for(const[e,n]of t.knownItems){r.knownItems.get(e)||(!r.extraItems||(0,B.isNever)(r.extraItems.valueType)?a.addMessage(g.LocAddendum.typedDictClosedExtraNotAllowed().format({name:e})):this._evaluator.assignType(i,n.valueType,void 0,void 0,void 0,r.extraItems.isReadOnly?0:1)?!r.extraItems.isReadOnly&&n.isRequired&&a.addMessage(g.LocAddendum.typedDictClosedFieldNotRequired().format({name:e})):a.addMessage(g.LocAddendum.typedDictClosedExtraTypeMismatch().format({name:e,type:this._evaluator.printType(n.valueType)})))}if(t.extraItems&&r.extraItems&&(this._evaluator.assignType(i,t.extraItems.valueType,void 0,void 0,void 0,r.extraItems.isReadOnly?0:1)||a.addMessage(g.LocAddendum.typedDictClosedExtraTypeMismatch().format({name:"__extra_items__",type:this._evaluator.printType(t.extraItems.valueType)}))),!a.isEmpty()&&e.details.declaration){const t=(0,_.getNameNodeForDeclaration)(e.details.declaration);t&&(r.extraItems?this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.typedDictClosedExtras().format({name:n.details.name,type:this._evaluator.printType(i)})+a.getString(),t):this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.typedDictClosedNoExtras().format({name:n.details.name})+a.getString(),t))}}}_validateBaseClassOverrides(e){B.ClassType.getSymbolTable(e).forEach(((t,n)=>{if(O.isPrivateName(n))return;let a=!0;t.hasTypedDeclarations()||(a=!1);const r=this._evaluator.getEffectiveTypeOfSymbol(t);if((0,B.isAnyOrUnknown)(r))return;let s;for(const i of e.details.baseClasses){if(!(0,B.isClass)(i))continue;const o=e.details.mro.find((e=>(0,B.isClass)(e)&&B.ClassType.isSameGenericClass(e,i)));if(!o)continue;(0,l.assert)((0,B.isClass)(o));const p=(0,R.lookUpClassMember)(o,n,0);p&&(s=null!=s?s:p,this._validateBaseClassOverride(p,t,a?r:B.AnyType.create(),e,n))}s?this._validateOverrideDecoratorPresent(t,r,s):this._validateOverrideDecoratorNotPresent(t,r)}))}_validateOverrideDecoratorPresent(e,t,n){if("none"===this._fileInfo.diagnosticRuleSet.reportImplicitOverride)return;let a;if((0,B.isFunction)(t)?a=t:(0,B.isOverloadedFunction)(t)?a=B.OverloadedFunctionType.getImplementation(t):(0,B.isClassInstance)(t)&&B.ClassType.isPropertyClass(t)&&t.fgetInfo&&(a=t.fgetInfo.methodType),!(null==a?void 0:a.details.declaration)||B.FunctionType.isOverridden(a))return;if(this._isMethodExemptFromLsp(a.details.name))return;if(!e.getDeclarations().some((e=>e===a.details.declaration)))return;if((0,B.isAnyOrUnknown)(n.classType))return;const r=a.details.declaration.node;this._evaluator.addDiagnostic(c.DiagnosticRule.reportImplicitOverride,g.LocMessage.overrideDecoratorMissing().format({name:r.name.value,className:this._evaluator.printType((0,R.convertToInstance)(n.classType))}),r.name)}_isMethodExemptFromLsp(e){return["__init__","__new__","__init_subclass__","__post_init__"].some((t=>t===e))}_validateOverrideDecoratorNotPresent(e,t){let n;if((0,B.isFunction)(t)?n=t:(0,B.isOverloadedFunction)(t)?n=B.OverloadedFunctionType.getImplementation(t):(0,B.isClassInstance)(t)&&B.ClassType.isPropertyClass(t)&&t.fgetInfo&&(n=t.fgetInfo.methodType),!(null==n?void 0:n.details.declaration)||!B.FunctionType.isOverridden(n))return;if(!e.getDeclarations().some((e=>e===n.details.declaration)))return;const a=n.details.declaration.node;this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.overriddenMethodNotFound().format({name:a.name.value}),a.name)}_validateBaseClassOverride(e,t,n,a,r){var s,i,o,l,d,u,m,y,h,f,T,v;if(!(0,B.isInstantiableClass)(e.classType))return;if(e.symbol.isIgnoredForOverrideChecks()||t.isIgnoredForOverrideChecks())return;if(!e.symbol.hasTypedDeclarations())return;if("_"===r)return;const b=e.classType,C=B.ClassType.cloneAsInstance((0,R.selfSpecializeClass)(a)),I=(0,R.partiallySpecializeType)(this._evaluator.getEffectiveTypeOfSymbol(e.symbol),b,C);if(n=(0,R.partiallySpecializeType)(n,a,C),(0,B.isFunction)(I)||(0,B.isOverloadedFunction)(I)){const o=new p.DiagnosticAddendum;let l=!1;if(O.isPrivateName(r)||((0,B.isFunction)(I)&&B.FunctionType.isFinal(I)||(0,B.isOverloadedFunction)(I)&&I.overloads.some((e=>B.FunctionType.isFinal(e))))&&(l=!0),l){const n=(0,z.getLastTypedDeclarationForSymbol)(t);if(n&&5===n.type){const t=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.finalMethodOverride().format({name:r,className:b.details.name}),n.node.name),a=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);t&&a&&t.addRelatedInfo(g.LocAddendum.finalMethod(),a.uri,a.range)}}if((0,B.isFunction)(n)||(0,B.isOverloadedFunction)(n)){const i=!O.isDunderName(r);if(!(this._isMethodExemptFromLsp(r)||O.isPrivateName(r)||B.ClassType.isTypedDictClass(a)||this._evaluator.validateOverrideMethod(I,n,a,o,i))){const a=(0,B.isFunction)(n)&&n.details.declaration?n.details.declaration:(0,z.getLastTypedDeclarationForSymbol)(t);if(a){const t=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.incompatibleMethodOverride().format({name:r,className:b.details.name})+o.getString(),null!==(s=(0,_.getNameNodeForDeclaration)(a))&&void 0!==s?s:a.node),n=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);t&&n&&t.addRelatedInfo(g.LocAddendum.overriddenMethod(),n.uri,n.range)}}}else if(!(0,B.isAnyOrUnknown)(n)&&!B.ClassType.isBuiltIn(b,"_TypedDict")){const a=t.getDeclarations();if(a.length>0){const t=a[a.length-1],s=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.methodOverridden().format({name:r,className:b.details.name,type:this._evaluator.printType(n)}),null!==(i=(0,_.getNameNodeForDeclaration)(t))&&void 0!==i?i:t.node),o=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);s&&o&&s.addRelatedInfo(g.LocAddendum.overriddenMethod(),o.uri,o.range)}}}else if((0,R.isProperty)(I))if((0,R.isProperty)(n)){const e=b,s=[["fget",e=>{var t;return null===(t=e.fgetInfo)||void 0===t?void 0:t.methodType}],["fset",e=>{var t;return null===(t=e.fsetInfo)||void 0===t?void 0:t.methodType}],["fdel",e=>{var t;return null===(t=e.fdelInfo)||void 0===t?void 0:t.methodType}]];s.forEach((s=>{var i;const o=new p.DiagnosticAddendum,[l,d]=s,u=d(I),m=d(n);if(u){const n=(0,R.partiallySpecializeType)(u,e);if((0,B.isFunction)(n))if(m){const t=(0,R.partiallySpecializeType)(m,a);if((0,B.isFunction)(t)&&!this._evaluator.validateOverrideMethod(n,t,a,o.createAddendum())){o.addMessage(g.LocAddendum.propertyMethodIncompatible().format({name:l}));const a=t.details.declaration;if(a&&5===a.type){const t=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.propertyOverridden().format({name:r,className:e.details.name})+o.getString(),a.node.name),s=n.details.declaration;t&&s&&t.addRelatedInfo(g.LocAddendum.overriddenMethod(),s.uri,s.range)}}}else{o.addMessage(g.LocAddendum.propertyMethodMissing().format({name:l}));const a=t.getDeclarations();if(a.length>0){const t=a[a.length-1],s=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.propertyOverridden().format({name:r,className:e.details.name})+o.getString(),null!==(i=(0,_.getNameNodeForDeclaration)(t))&&void 0!==i?i:t.node),l=n.details.declaration;s&&l&&s.addRelatedInfo(g.LocAddendum.overriddenMethod(),l.uri,l.range)}}}}))}else{const e=t.getDeclarations();if(e.length>0&&t.isClassMember()){const t=e[e.length-1];this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleMethodOverride,g.LocMessage.propertyOverridden().format({name:r,className:b.details.name}),null!==(o=(0,_.getNameNodeForDeclaration)(t))&&void 0!==o?o:t.node)}}else if("none"!==this._fileInfo.diagnosticRuleSet.reportIncompatibleVariableOverride){const s=t.getDeclarations();if(s.length>0){const i=s[s.length-1],o=s[0];let C,k,w=1===(null==o?void 0:o.type)&&!o.isFinal;if(B.ClassType.isFrozenDataClass(b)&&b.details.dataClassEntries){b.details.dataClassEntries.find((e=>e.name===r))&&(w=!1)}t.isIgnoredForProtocolMatch()||(b.details.typedDictEntries&&(C=null!==(d=null!==(l=b.details.typedDictEntries.knownItems.get(r))&&void 0!==l?l:b.details.typedDictEntries.extraItems)&&void 0!==d?d:(0,j.getEffectiveExtraItemsEntryType)(this._evaluator,b),(null==C?void 0:C.isReadOnly)&&(w=!1)),a.details.typedDictEntries&&(B.ClassType.isTypedDictMarkedClosed(a)&&"__extra_items__"===r?(k=C,n=I):k=null!==(m=null!==(u=a.details.typedDictEntries.knownItems.get(r))&&void 0!==u?u:a.details.typedDictEntries.extraItems)&&void 0!==m?m:(0,j.getEffectiveExtraItemsEntryType)(this._evaluator,a)));let S=new p.DiagnosticAddendum;if(this._evaluator.assignType(I,n,S,void 0,void 0,w?1:0)){if(C&&k){let e=!0;if(e=C.isReadOnly?k.isRequired||!C.isRequired:k.isRequired===C.isRequired,!e){const e=k.isRequired?g.LocMessage.typedDictFieldRequiredRedefinition:g.LocMessage.typedDictFieldNotRequiredRedefinition;this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,e().format({name:r}),null!==(h=(0,_.getNameNodeForDeclaration)(i))&&void 0!==h?h:i.node)}!C.isReadOnly&&k.isReadOnly&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typedDictFieldReadOnlyRedefinition().format({name:r}),null!==(f=(0,_.getNameNodeForDeclaration)(i))&&void 0!==f?f:i.node)}}else{w&&(S=new p.DiagnosticAddendum,S.addMessage(g.LocAddendum.overrideIsInvariant()),S.createAddendum().addMessage(g.LocAddendum.overrideInvariantMismatch().format({overrideType:this._evaluator.printType(n),baseType:this._evaluator.printType(I)})));const t=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.symbolOverridden().format({name:r,className:b.details.name})+S.getString(),null!==(y=(0,_.getNameNodeForDeclaration)(i))&&void 0!==y?y:i.node),a=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);t&&a&&t.addRelatedInfo(g.LocAddendum.overriddenSymbol(),a.uri,a.range)}const A=this._evaluator.isFinalVariable(e.symbol),x=s.find((e=>this._evaluator.isFinalVariableDeclaration(e)));if(!A&&x){const e=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,g.LocMessage.variableFinalOverride().format({name:r,className:b.details.name}),null!==(T=(0,_.getNameNodeForDeclaration)(i))&&void 0!==T?T:i.node);e&&e.addRelatedInfo(g.LocAddendum.overriddenSymbol(),x.uri,x.range)}const P=e.symbol.isClassVar();let N=t.isClassVar();if(P&&!N&&(t.hasTypedDeclarations()||(N=!0),t.getTypedDeclarations().every((e=>6===e.type))&&(N=!0)),P!==N){const n=t.isClassVar()?g.LocMessage.classVarOverridesInstanceVar():g.LocMessage.instanceVarOverridesClassVar(),a=this._evaluator.addDiagnostic(c.DiagnosticRule.reportIncompatibleVariableOverride,n.format({name:r,className:b.details.name}),null!==(v=(0,_.getNameNodeForDeclaration)(i))&&void 0!==v?v:i.node),s=(0,z.getLastTypedDeclarationForSymbol)(e.symbol);a&&s&&a.addRelatedInfo(g.LocAddendum.overriddenSymbol(),s.uri,s.range)}}}}_validateMethod(e,t,n){var a,r;const s=this._evaluator.getTypeOfClass(n),i=null==s?void 0:s.classType;if(e.name&&i){["__init__","__init_subclass__","__enter__","__exit__"].some((t=>t===e.name.value))&&(B.FunctionType.isAbstractMethod(t)||B.FunctionType.isOverloaded(t)||this._fileInfo.isStubFile||this._validateSuperCallForMethod(e,t,i))}if("__new__"===(null===(a=e.name)||void 0===a?void 0:a.value))0!==e.parameters.length&&e.parameters[0].name&&["cls","_cls","__cls","__mcls","mcls","mcs","metacls"].some((t=>e.parameters[0].name.value===t))||this._evaluator.addDiagnostic(c.DiagnosticRule.reportSelfClsParameterName,g.LocMessage.newClsParam(),e.parameters.length>0?e.parameters[0]:e.name),i&&this._validateClsSelfParameterType(t,i,!0);else if("_generate_next_value_"===(null===(r=e.name)||void 0===r?void 0:r.value));else if(B.FunctionType.isStaticMethod(t)){if(e.parameters.length>0&&e.parameters[0].name){const t=e.parameters[0].name.value;"self"!==t&&"cls"!==t||this._evaluator.addDiagnostic(c.DiagnosticRule.reportSelfClsParameterName,g.LocMessage.staticClsSelfParam(),e.parameters[0].name)}}else if(B.FunctionType.isClassMethod(t)){let n="";e.parameters.length>0&&e.parameters[0].name&&(n=e.parameters[0].name.value),"cls"!==n&&(this._fileInfo.isStubFile&&(n.startsWith("_")||"metacls"===n)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportSelfClsParameterName,g.LocMessage.classMethodClsParam(),e.parameters.length>0?e.parameters[0]:e.name)),i&&this._validateClsSelfParameterType(t,i,!0)}else{const a=e.decorators.length>0;if(B.FunctionType.isOverloaded(t)||!a){let t="",a=!0;if(e.parameters.length>0&&(e.parameters[0].name&&(t=e.parameters[0].name.value),0!==e.parameters[0].category&&(a=!1)),a&&"self"!==t){let a=!1;if(["cls","mcls","mcs"].some((e=>e===t))){const e=this._evaluator.getTypeOfClass(n),t=this._evaluator.getBuiltInType(n,"type");t&&(0,B.isInstantiableClass)(t)&&e&&(0,B.isInstantiableClass)(e.classType)&&(0,R.derivesFromClassRecursive)(e.classType,t,!0)&&(a=!0)}const r=O.isPrivateOrProtectedName(t);a||r||this._evaluator.addDiagnostic(c.DiagnosticRule.reportSelfClsParameterName,g.LocMessage.instanceMethodSelfParam(),e.parameters.length>0?e.parameters[0]:e.name)}}i&&this._validateClsSelfParameterType(t,i,!1)}}_validateSuperCallForMethod(e,t,n){if("none"===this._fileInfo.diagnosticRuleSet.reportMissingSuperCall)return;let a=17;B.ClassType.isFinal(n)&&(a|=4);if(!(0,R.lookUpClassMember)(n,t.details.name,a))return;let r=!1;const s=new A.CallNodeWalker((e=>{if(35===e.leftExpression.nodeType&&e.leftExpression.memberName.value===t.details.name){const t=e.leftExpression.leftExpression;if(9===t.nodeType&&38===t.leftExpression.nodeType&&"super"===t.leftExpression.value)r=!0;else{const e=this._evaluator.getType(t);e&&(0,B.isInstantiableClass)(e)&&(r=!0)}}}));s.walk(e.suite),r||this._evaluator.addDiagnostic(c.DiagnosticRule.reportMissingSuperCall,g.LocMessage.missingSuperCall().format({methodName:t.details.name}),e.name)}_validateClsSelfParameterType(e,t,n){if(e.details.parameters.length<1)return;const a=e.details.parameters[0];if(!a.typeAnnotation||!a.name)return;if("__init__"===e.details.name&&e.details.methodClass){(0,R.getTypeVarArgumentsRecursive)(a.type).some((t=>{var n;return t.scopeId===(null===(n=e.details.methodClass)||void 0===n?void 0:n.details.typeVarScopeId)}))&&this._evaluator.addDiagnostic(c.DiagnosticRule.reportInvalidTypeVarUse,g.LocMessage.initMethodSelfParamTypeVar(),a.typeAnnotation)}if(B.ClassType.isProtocolClass(t))return;const r=this._evaluator.makeTopLevelTypeVarsConcrete(a.type),s=n?t:(0,R.convertToInstance)(t);if((0,B.isInstantiableClass)(r)&&B.ClassType.isProtocolClass(r))return;if((0,B.isClassInstance)(r)&&B.ClassType.isProtocolClass(r))return;if(1===a.category&&(0,B.isParamSpec)(a.type)&&"args"===a.type.paramSpecAccess)return;if(B.FunctionType.isOverloaded(e))return;if((0,B.isClassInstance)(r)&&B.ClassType.isBuiltIn(r,"LiteralString")&&B.ClassType.isBuiltIn(t,"str"))return;const i=new L.TypeVarContext((0,R.getTypeVarScopeId)(e));this._evaluator.assignType(r,s,void 0,i)||(0,B.isNever)(r)||this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.clsSelfParamTypeMismatch().format({name:a.name,classType:this._evaluator.printType(s)}),a.typeAnnotation)}_validateYieldType(e,t,n,a){var r,s,i,o;const l=A.getEnclosingFunction(e);if(!l||!l.returnTypeAnnotation)return;const d=this._evaluator.getTypeOfFunction(l);if(!d)return;const u=B.FunctionType.getSpecializedReturnType(d.functionType);if(!u)return;let m;if(m=!l.isAsync&&(0,B.isClassInstance)(u)&&B.ClassType.isBuiltIn(u,"AwaitableGenerator")?this._evaluator.getTypingType(e,"AwaitableGenerator"):this._evaluator.getTypingType(e,l.isAsync?"AsyncGenerator":"Generator"),!m||!(0,B.isInstantiableClass)(m))return;if(!this._evaluator.isNodeReachable(e,void 0))return;if((0,B.isNever)(u))return void this._evaluator.addDiagnostic(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.noReturnContainsYield(),e);const y=[t,null!=a?a:B.UnknownType.create(),B.UnknownType.create()],h=B.ClassType.cloneAsInstance(B.ClassType.cloneForSpecialization(m,y,!0)),f=new p.DiagnosticAddendum;if(!this._evaluator.assignType(u,h,f)){const a=l.isAsync?g.LocMessage.generatorAsyncReturnType():g.LocMessage.generatorSyncReturnType();this._evaluator.addDiagnostic(c.DiagnosticRule.reportReturnType,a.format({yieldType:this._evaluator.printType(t)})+(null!==(r=null==n?void 0:n.getString())&&void 0!==r?r:f.getString()),null!==(s=e.expression)&&void 0!==s?s:e,null!==(o=null!==(i=null==n?void 0:n.getEffectiveTextRange())&&void 0!==i?i:e.expression)&&void 0!==o?o:e)}}_reportUnusedExceptStatements(e){let t=!1;const n=[];e.exceptClauses.forEach((e=>{var a,r;if(t||e.isExceptGroup||!e.typeExpression)return;const s=this._evaluator.getType(e.typeExpression);if(!s||(0,B.isAnyOrUnknown)(s))return void(t=!0);const i=[];if((0,B.isInstantiableClass)(s))s.includeSubclasses&&(t=!0),i.push(s);else if((0,B.isClassInstance)(s)){const n=null!==(r=null===(a=this._evaluator.getTypeOfIterator({type:s},!1,e.typeExpression,!1))||void 0===a?void 0:a.type)&&void 0!==r?r:B.UnknownType.create();(0,R.doForEachSubtype)(n,(e=>{(0,B.isAnyOrUnknown)(e)&&(t=!0),(0,B.isInstantiableClass)(e)&&(e.includeSubclasses&&(t=!0),i.push(e))}))}else t=!0;if(n.length>0&&!t){const t=new p.DiagnosticAddendum;let a=0;i.forEach((e=>{const r=n.find((t=>(0,R.derivesFromClassRecursive)(e,t,!0)));r&&(t.addMessage(g.LocAddendum.unreachableExcept().format({exceptionType:this._evaluator.printType((0,R.convertToInstance)(e)),parentType:this._evaluator.printType((0,R.convertToInstance)(r))})),a++)})),i.length>0&&i.length===a&&(this._evaluator.addDiagnostic(c.DiagnosticRule.reportUnusedExcept,g.LocMessage.unreachableExcept()+t.getString(),e.typeExpression),this._evaluator.addUnreachableCode(e,e.exceptSuite))}(0,o.appendArray)(n,i)}))}_reportDuplicateImports(){const e=(0,w.getTopLevelImports)(this._moduleNode),t=new Map;e.orderedImports.forEach((e=>{if(22===e.node.nodeType){const t=new Map;e.node.imports.forEach((e=>{if(!e.alias){t.get(e.name.value)?this._evaluator.addDiagnostic(c.DiagnosticRule.reportDuplicateImport,g.LocMessage.duplicateImport().format({importName:e.name.value}),e.name):t.set(e.name.value,e)}}))}else if(e.subnode&&!e.subnode.alias){t.get(e.moduleName)?this._evaluator.addDiagnostic(c.DiagnosticRule.reportDuplicateImport,g.LocMessage.duplicateImport().format({importName:e.moduleName}),e.subnode):t.set(e.moduleName,e.subnode)}}))}}t.Checker=q},53748:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CircularDependency=void 0;t.CircularDependency=class{constructor(){this._paths=[]}appendPath(e){this._paths.push(e)}getPaths(){return this._paths}normalizeOrder(){let e=0;this._paths.forEach(((t,n)=>{t<this._paths[e]&&(e=n)})),0!==e&&(this._paths=this._paths.slice(e).concat(this._paths.slice(0,e)))}isEqual(e){if(e._paths.length!==this._paths.length)return!1;for(let t=0;t<this._paths.length;t++)if(this._paths[t]!==e._paths[t])return!1;return!0}}},94416:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getCodeFlowEngine=t.isIncompleteType=void 0;const a=n(83181),r=n(96193),s=n(9316),i=n(31508),o=n(48816),l=n(90272),p=n(28340),c=n(3573),d=n(45468),u=n(46048),m=n(8312),y=n(808);function g(e){return!!e.isIncompleteType}t.isIncompleteType=g;t.getCodeFlowEngine=function(e,t){const n=new Set,h=new Map,f=new Map;let T=1,v=0,b=0;function _(t,r,s=!1){const o=new Set,l=new Set;if(n.has(t.id))return!0;n.add(t.id);try{return function t(n,r,p=0){var c;if(p>64)return!0;p++;let d=n;for(;;){if(o.has(d.id))return!1;if(o.add(d.id),d.flags&i.FlowFlags.Unreachable)return!1;if(d===r)return!0;if(d.flags&(i.FlowFlags.VariableAnnotation|i.FlowFlags.Assignment|i.FlowFlags.TrueCondition|i.FlowFlags.FalseCondition|i.FlowFlags.WildcardImport|i.FlowFlags.NarrowForPattern|i.FlowFlags.ExhaustedMatch))d=d.antecedent;else if(d.flags&(i.FlowFlags.TrueNeverCondition|i.FlowFlags.FalseNeverCondition)){const t=d;if(t.reference){const n=e.lookUpSymbolRecursive(t.reference,t.reference.value,!1);if(n&&n.symbol.hasTypedDeclarations()){let n=!1;const a=(0,u.getTypeNarrowingCallback)(e,t.reference,t.expression,!!(t.flags&(i.FlowFlags.TrueCondition|i.FlowFlags.TrueNeverCondition)));if(a){const r=e.getTypeOfExpression(t.reference),s=a(r.type),i=null!==(c=null==s?void 0:s.type)&&void 0!==c?c:r.type;(0,m.isNever)(i)&&!r.isIncomplete&&(n=!0)}if(n)return!1}}d=t.antecedent}else if(d.flags&i.FlowFlags.Call){const t=d;if(!s&&I(e,t))return!1;d=t.antecedent}else{if(d.flags&(i.FlowFlags.BranchLabel|i.FlowFlags.LoopLabel)){if(d.flags&i.FlowFlags.PostContextManager){const t=d;if(!t.expressions.some((n=>w(e,n,t.isAsync))))return!1}const n=d;for(const e of n.antecedents)if(t(e,r,p))return!0;return!1}if(d.flags&i.FlowFlags.Start)return!r;if(!(d.flags&i.FlowFlags.PreFinallyGate)){if(d.flags&i.FlowFlags.PostFinally){const e=d,n=l.has(e.preFinallyGate.id);try{return l.add(e.preFinallyGate.id),t(e.antecedent,r,p)}finally{n||l.delete(e.preFinallyGate.id)}}return(0,a.fail)("Unexpected flow node flags"),!1}{const e=d;if(l.has(e.id))return!1;d=e.antecedent}}}}(t,r)}finally{n.delete(t.id)}}function C(e,t){let n=!0;return(0,y.doForEachSubtype)(e,(e=>{(0,m.isTypeVar)(e)?(0,m.isTypeSame)(e,t)||(n=!1):e.condition&&e.condition.some((e=>e.typeVar.details.constraints.length>0&&e.typeVar.nameWithScope===t.nameWithScope))||(n=!1)})),n}function I(e,t){const n=t.node;if(h.has(n.id)){const e=h.get(n.id);return e}if(v>m.maxTypeRecursionCount)return!1;if(30===n.leftExpression.nodeType)return!1;h.set(n.id,!1),v++;try{let t=0,a=0;const r=e.getTypeOfExpression(n.leftExpression,2),s=r.type;(0,y.doForEachSubtype)(s,(s=>{var i;if(a++,(0,m.isInstantiableClass)(s)){if((0,l.getBoundCallMethod)(e,n,s))return;const t=(0,l.getBoundNewMethod)(e,n,s);t&&((0,m.isFunction)(t.type)||(0,m.isOverloadedFunction)(t.type))&&(s=t.type)}else if((0,m.isClassInstance)(s)){const t=e.getBoundMagicMethod(s,"__call__");t&&(s=t)}const o=6===(null===(i=n.parent)||void 0===i?void 0:i.nodeType);if((0,m.isFunction)(s))k(s,o)&&t++;else if((0,m.isOverloadedFunction)(s)){let a=0,i=0;if(m.OverloadedFunctionType.getOverloads(s).forEach((e=>{a++,k(e,o)&&i++})),i>0)if(i===a)t++;else{const a=e.validateOverloadedFunctionArguments(n,n.arguments,{type:s,isIncomplete:r.isIncomplete},void 0,!1,void 0);a.returnType&&(0,m.isNever)(a.returnType)&&t++}}}));const i=a>0&&t===a;return h.set(n.id,i),i}finally{v--}}function k(e,t){const n=e.details.declaredReturnType;return!!n&&(!!((0,m.isClassInstance)(n)&&m.ClassType.isBuiltIn(n,"Coroutine")&&n.typeArguments&&n.typeArguments.length>=3&&(0,m.isNever)(n.typeArguments[2])&&t)||(0,m.isNever)(n))}function w(e,t,n){if(f.has(t.id))return f.get(t.id);if(f.set(t.id,!1),b>m.maxTypeRecursionCount)return!1;b++;let a=!1;try{const r=e.getTypeOfExpression(t).type;if(r&&(0,m.isClassInstance)(r)){const t=n?"__aexit__":"__exit__",s=e.getBoundMagicMethod(r,t);if(s&&(0,m.isFunction)(s)&&s.details.declaredReturnType){let e=s.details.declaredReturnType;n&&(0,m.isClassInstance)(e)&&m.ClassType.isBuiltIn(e,"Coroutine")&&e.typeArguments&&e.typeArguments.length>=3&&(e=e.typeArguments[2]),a=!1,(0,m.isClassInstance)(e)&&m.ClassType.isBuiltIn(e,"bool")&&(void 0!==e.literalValue&&!0!==e.literalValue||(a=!0))}}}finally{b--}return f.set(t.id,a),a}function S(t,n){const r=(0,s.getImportInfo)(t.node.module);(0,a.assert)(void 0!==r&&r.isImportFound),(0,a.assert)(t.node.isWildcardImport);const i=e.lookUpSymbolRecursive(t.node,n,!1);(0,a.assert)(void 0!==i);const o=i.symbol.getDeclarations().find((e=>e.node===t.node));return o&&e.getInferredTypeOfDeclaration(i.symbol,o)||m.UnknownType.create()}function A(e,t,n,a=console){let i="";if(t){const e=(0,s.getFileInfo)(t),n=(0,r.convertOffsetToPosition)(t.start,e.lines);i=`${(0,p.printExpression)(t)}[${n.line+1}:${n.character+1}]`}a.log(`${n}@${e.id}: ${i||"(none)"}`),a.log((0,o.formatControlFlowGraph)(e))}return{createCodeFlowAnalyzer:function(n){const r=new Map;return{getTypeFromCodeFlow:function(n,s,o){var l,h;const f=void 0!==s?(0,i.createKeyForReference)(s):void 0;let v;const b=function(e){let t=r.get(e);return t||(t={cache:new Map,pendingNodes:new Set,closedFinallyGateNodes:new Set},r.set(e,t)),t}(void 0!==f&&void 0!==(null==o?void 0:o.targetSymbolId)?f+`.${null==o?void 0:o.targetSymbolId.toString()}`:".");function C(e,n,a){if(a){if(n){const t=b.cache.get(e.id);if(t){const e=t;e.isIncompleteType&&e.type&&!(0,m.isTypeSame)(e.type,n)&&T++}}}else T++;const r=a?{isIncompleteType:!0,type:n,incompleteSubtypes:[],generationCount:T}:n;return b.cache.set(e.id,r),t.trackEntry(b.cache,e.id),{type:n,isIncomplete:a,generationCount:T,incompleteSubtypes:a?[]:void 0}}function k(e,t,n,r,s,i){const o=b.cache.get(e.id);void 0!==o&&g(o)||(0,a.fail)(`setIncompleteSubtype can be called only on a valid incomplete cache entry: prev cache entry?: ${!o} index=${t} isPending=${s} evaluationCount=${i}`);const l=o.incompleteSubtypes;if(t<l.length){const e=l[t];e.isIncomplete===r&&(0,m.isTypeSame)(e.type,n)?e.isPending!==s&&(l[t]={type:n,isIncomplete:r,isPending:s,evaluationCount:i}):(l[t]={type:n,isIncomplete:r,isPending:s,evaluationCount:i},T++)}else(0,a.assert)(l.length===t),l.push({type:n,isIncomplete:r,isPending:s,evaluationCount:i}),T++;let p;if(o.incompleteSubtypes.length>0){const e=[];o.incompleteSubtypes.forEach((t=>{t.type&&e.push(t.type)})),p=e.length>0?(0,m.combineTypes)(e):void 0}return o.type=p,o.generationCount=T,A(e)}function A(e){if(!b.cache.has(e.id))return;const t=b.cache.get(e.id);return void 0===t?{type:void 0,isIncomplete:!1}:g(t)?{type:t.type,isIncomplete:!0,incompleteSubtypes:t.incompleteSubtypes,generationCount:t.generationCount}:{type:t,isIncomplete:!1}}function x(t){let n=t.node;const a=t.node.parent;return a&&(28!==a.nodeType&&10!==a.nodeType||(n=a)),e.evaluateTypeForSubnode(n,(()=>{e.evaluateTypesForStatement(t.node)}))}function P(e,t){b.pendingNodes.add(e.id);try{const n=t();return b.pendingNodes.delete(e.id),n}catch(t){throw b.pendingNodes.delete(e.id),t}}function N(t){var n,r,l,g,h,k;let O=t;for(e.checkForCancellation();;){const z=A(O);if(z){if(!z.isIncomplete)return z;if(z.generationCount===T)return{type:z.type?(0,y.cleanIncompleteUnknown)(z.type):void 0,isIncomplete:!0}}if(b.pendingNodes.has(O.id))return{type:null!==(n=null==z?void 0:z.type)&&void 0!==n?n:m.UnknownType.create(!0),isIncomplete:!0};if(O.flags&i.FlowFlags.Unreachable)return C(O,m.NeverType.createNever(),!1);if(O.flags&i.FlowFlags.VariableAnnotation){O=O.antecedent}else if(O.flags&i.FlowFlags.Call){const t=O;if(I(e,t))return C(O,void 0,!1);O=t.antecedent}else if(O.flags&i.FlowFlags.Assignment){const n=O,a=n.node;if(s){if((null==o?void 0:o.targetSymbolId)===n.targetSymbolId&&(0,p.isMatchingExpression)(s,a)){if(O.flags&i.FlowFlags.Unbind)return 24===s.nodeType||35===s.nodeType?C(O,void 0,!1):C(O,m.UnboundType.create(),!1);let r=P(O,(()=>x(n)));if(r){if((0,y.isTypeAliasPlaceholder)(r.type))return{type:r.type,isIncomplete:!0};35===s.nodeType&&e.isAsymmetricAccessorAssignment(a)&&(r=void 0)}return r&&!_(t)&&(r=void 0),C(O,null==r?void 0:r.type,!!(null==r?void 0:r.isIncomplete))}if(24===a.nodeType&&(0,p.isMatchingExpression)(s,a.baseExpression)&&3===(null===(r=a.parent)||void 0===r?void 0:r.nodeType)&&1===a.items.length&&!a.trailingComma&&!a.items[0].name&&0===a.items[0].argumentCategory&&48===a.items[0].valueExpression.nodeType&&1===a.items[0].valueExpression.strings.length&&49===a.items[0].valueExpression.strings[0].nodeType){const e=a.items[0].valueExpression.strings[0].value,t=P(n,(()=>{const t=N(n.antecedent);return t.type&&(t.type=(0,y.mapSubtypes)(t.type,(t=>(0,m.isClass)(t)&&m.ClassType.isTypedDictClass(t)?(0,d.narrowForKeyAssignment)(t,e):t))),t}));return C(O,null==t?void 0:t.type,!!(null==t?void 0:t.isIncomplete))}if((0,p.isPartialMatchingExpression)(s,a))return{type:null===(l=null==o?void 0:o.typeAtStart)||void 0===l?void 0:l.type,isIncomplete:!!(null===(g=null==o?void 0:o.typeAtStart)||void 0===g?void 0:g.isIncomplete)}}O=n.antecedent}else{if(O.flags&i.FlowFlags.BranchLabel){const t=O;if(O.flags&i.FlowFlags.PostContextManager){const t=O;if(t.expressions.some((n=>w(e,n,t.isAsync)))===t.blockIfSwallowsExceptions)return C(O,void 0,!1)}if(s&&t.preBranchAntecedent&&t.affectedExpressions&&(v||(v=(0,i.createKeysForReferenceSubexpressions)(s)),!v.some((e=>t.affectedExpressions.has(e)))&&_(O,t.preBranchAntecedent))){O=t.preBranchAntecedent;continue}return D(O)}if(O.flags&i.FlowFlags.LoopLabel){const e=O;if(s&&(v||(v=(0,i.createKeysForReferenceSubexpressions)(s)),!v.some((t=>e.affectedExpressions.has(t))))){O=e.antecedents[0];continue}return F(e,z)}if(O.flags&(i.FlowFlags.TrueCondition|i.FlowFlags.FalseCondition)){const t=O;if(!(null==o?void 0:o.skipConditionalNarrowing)&&s){const n=P(O,(()=>{const n=(0,u.getTypeNarrowingCallback)(e,s,t.expression,!!(t.flags&(i.FlowFlags.TrueCondition|i.FlowFlags.TrueNeverCondition)));if(n){const e=N(t.antecedent);let a=e.type,r=e.isIncomplete;if(a){const e=n(a);e&&(a=e.type,e.isIncomplete&&(r=!0))}return C(O,a,r)}}));if(n)return n}O=t.antecedent}else if(O.flags&(i.FlowFlags.TrueNeverCondition|i.FlowFlags.FalseNeverCondition)){const t=O;if(!(null==o?void 0:o.skipConditionalNarrowing)&&t.reference&&(0,i.createKeyForReference)(t.reference)!==f){const n=e.lookUpSymbolRecursive(t.reference,t.reference.value,!1);if(n&&n.symbol.hasTypedDeclarations()){const n=P(O,(()=>{const n=(0,u.getTypeNarrowingCallback)(e,t.reference,t.expression,!!(t.flags&(i.FlowFlags.TrueCondition|i.FlowFlags.TrueNeverCondition)));if(n){const a=e.getTypeOfExpression(t.reference);let r=a.type,s=!!a.isIncomplete;const i=n(a.type);if(i&&(r=i.type,i.isIncomplete&&(s=!0)),(0,m.isNever)(r))return C(O,void 0,s)}}));if(n)return n}}O=t.antecedent}else if(O.flags&i.FlowFlags.ExhaustedMatch){const t=O,n=e.evaluateTypeForSubnode(t.node,(()=>{e.evaluateTypesForMatchStatement(t.node)}));if(n){if((0,m.isNever)(n.type))return C(O,n.type,!!n.isIncomplete);if(s){const a=(0,c.getPatternSubtypeNarrowingCallback)(e,s,t.subjectExpression);if(a){const e=a(n.type);if(e)return C(O,e.type,!!n.isIncomplete||!!e.isIncomplete)}}}O=t.antecedent}else if(O.flags&i.FlowFlags.NarrowForPattern){const t=O;if(!s||(0,p.isMatchingExpression)(s,t.subjectExpression)){const n=e.evaluateTypeForSubnode(t.statement,(()=>{64===t.statement.nodeType?e.evaluateTypesForCaseStatement(t.statement):e.evaluateTypesForMatchStatement(t.statement)}));if(n){if(s)return C(O,n.type,!!n.isIncomplete);if((0,m.isNever)(n.type))return C(O,void 0,!!n.isIncomplete)}}else if(64===t.statement.nodeType){const n=t.statement,a=(0,c.getPatternSubtypeNarrowingCallback)(e,s,t.subjectExpression);if(a){const t=e.evaluateTypeForSubnode(n,(()=>{e.evaluateTypesForCaseStatement(n)}));if(t){const e=a(t.type);if(e)return C(O,e.type,!!t.isIncomplete||!!e.isIncomplete)}}}O=t.antecedent}else{if(O.flags&i.FlowFlags.PreFinallyGate)return E(O);if(O.flags&i.FlowFlags.PostFinally)return M(O);if(O.flags&i.FlowFlags.Start)return C(O,null===(h=null==o?void 0:o.typeAtStart)||void 0===h?void 0:h.type,!!(null===(k=null==o?void 0:o.typeAtStart)||void 0===k?void 0:k.isIncomplete));if(O.flags&i.FlowFlags.WildcardImport){const e=O;if(s&&38===s.nodeType){const t=s.value;if(e.names.some((e=>e===t)))return P(O,(()=>{const n=S(e,t);return C(O,n,!1)}))}O=e.antecedent}else(0,a.fail)("Unexpected flow node flags")}}}}function D(e){const t=[];let n=!1;for(const a of e.antecedents){const r=N(a);if(void 0===s&&r.type&&!(0,m.isNever)(r.type))return C(e,m.UnknownType.create(),!1);r.isIncomplete&&(n=!0),r.type&&t.push(r.type)}return C(e,t.length>0?(0,m.combineTypes)(t):void 0,n)}function F(e,t){var n;const a=e.antecedents.length;if(void 0===t)t=C(e,s?void 0:m.UnknownType.create(),!0);else if(t.incompleteSubtypes&&t.incompleteSubtypes.length===e.antecedents.length&&t.incompleteSubtypes.some((e=>e.isPending)))return{type:t.type?(0,y.cleanIncompleteUnknown)(t.type):void 0,isIncomplete:!0};let r=0;for(;;){let i=!1,o=!1,l=void 0===s&&(null===(n=t.incompleteSubtypes)||void 0===n?void 0:n.some((e=>void 0!==e.type))),p=!1,c=!1;if(e.antecedents.forEach(((n,a)=>{var r,d;if(void 0===s&&l)return;if(c&&a>0)return;if((t=A(e)).incompleteSubtypes&&a<t.incompleteSubtypes.length&&t.incompleteSubtypes[a].isPending){if(0!==a)return i=!0,void(o=!0);c=!0}const u=void 0!==t.incompleteSubtypes&&a<t.incompleteSubtypes.length?t.incompleteSubtypes[a]:void 0;if(void 0===u||!(null==u?void 0:u.isPending)&&(null==u?void 0:u.isIncomplete)){const s=void 0===u?0:u.evaluationCount;t=k(e,a,null!==(r=null==u?void 0:u.type)&&void 0!==r?r:m.UnknownType.create(!0),!0,!0,s);try{const r=N(n);r.isIncomplete&&(i=!0,0===a&&(p=!0)),t=k(e,a,null!==(d=r.type)&&void 0!==d?d:r.isIncomplete?m.UnknownType.create(!0):m.NeverType.createNever(),r.isIncomplete,c,s+1)}catch(n){throw t=k(e,a,m.UnknownType.create(!0),!0,c,s+1),n}}void 0===s&&void 0!==(null==t?void 0:t.type)&&(l=!0)})),l)return o?{type:m.UnknownType.create(),isIncomplete:!1}:C(e,m.UnknownType.create(),!1);let d=t.type;if(i&&d){const e=(0,y.cleanIncompleteUnknown)(d);e!==d&&(d=e)}if(!i||r>=a){let t=i;return!i||o||!d||(0,y.isIncompleteUnknown)(d)||p||(t=!1),o||i?(t||T++,{type:d,isIncomplete:t}):c?{type:d,isIncomplete:!0}:C(e,d,!1)}r++}}function E(e){if(b.closedFinallyGateNodes.has(e.id))return{type:void 0,isIncomplete:!1};const t=N(e.antecedent);return function(e){b.cache.delete(e.id)}(e),{type:t.type,isIncomplete:t.isIncomplete}}function M(t){const n=b.closedFinallyGateNodes.has(t.preFinallyGate.id);try{let n;return b.closedFinallyGateNodes.add(t.preFinallyGate.id),e.useSpeculativeMode(t.finallyNode,(()=>{n=N(t.antecedent)})),n.isIncomplete?n:C(t,n.type,!1)}finally{n||b.closedFinallyGateNodes.delete(t.preFinallyGate.id)}}return n?N(n):{type:null===(l=null==o?void 0:o.typeAtStart)||void 0===l?void 0:l.type,isIncomplete:!!(null===(h=null==o?void 0:o.typeAtStart)||void 0===h?void 0:h.isIncomplete)}}}},isFlowNodeReachable:_,narrowConstrainedTypeVar:function(t,n){(0,a.assert)(!n.details.isParamSpec),(0,a.assert)(!n.details.isVariadic),(0,a.assert)(!n.details.boundType),(0,a.assert)(n.details.constraints.length>0);const r=new Set,s=[];for(const e of n.details.constraints){if(!(0,m.isClassInstance)(e))return;s.push(e)}const o=function t(n,o){let l=n;for(;;){if(r.has(l.id))return s;if(l.flags&(i.FlowFlags.Unreachable|i.FlowFlags.Start))return s;if(l.flags&(i.FlowFlags.VariableAnnotation|i.FlowFlags.Assignment|i.FlowFlags.WildcardImport|i.FlowFlags.TrueNeverCondition|i.FlowFlags.FalseNeverCondition|i.FlowFlags.ExhaustedMatch|i.FlowFlags.PostFinally|i.FlowFlags.PreFinallyGate|i.FlowFlags.Call)){l=l.antecedent}else if(l.flags&i.FlowFlags.NarrowForPattern){const n=l;if(64===n.statement.nodeType){if(C(e.getTypeOfExpression(n.subjectExpression).type,o)){const a=n.statement.pattern;if(66===a.nodeType&&1===a.orPatterns.length&&68===a.orPatterns[0].nodeType){const r=a.orPatterns[0],s=e.getTypeOfExpression(r.className,2).type;if((0,m.isInstantiableClass)(s)){return t(n.antecedent,o).filter((e=>m.ClassType.isSameGenericClass(e,s)))}}}}l=n.antecedent}else{if(!(l.flags&(i.FlowFlags.TrueCondition|i.FlowFlags.FalseCondition))){if(l.flags&(i.FlowFlags.BranchLabel|i.FlowFlags.LoopLabel)){const e=l,n=[];r.add(l.id);for(const a of e.antecedents){const e=t(a,o);for(const t of e)n.some((e=>(0,m.isTypeSame)(e,t)))||n.push(t)}return r.delete(l.id),n}return(0,a.fail)("Unexpected flow node flags"),s}{const n=l,a=n.expression,s=0!=(l.flags&i.FlowFlags.TrueCondition);if(9===a.nodeType&&38===a.leftExpression.nodeType&&"isinstance"===a.leftExpression.value&&2===a.arguments.length){const i=a.arguments[0].valueExpression;if(C(e.getTypeOfExpression(i).type,o)){r.add(l.id);const i=t(n.antecedent,o);r.delete(l.id);const p=a.arguments[1].valueExpression,c=e.getTypeOfExpression(p,104).type;if((0,m.isInstantiableClass)(c))return i.filter((e=>m.ClassType.isSameGenericClass(e,c)?s:!s))}}l=n.antecedent}}}}(t,n);return 1===o.length?o[0]:void 0},printControlFlowGraph:A}}},31508:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.wildcardImportReferenceKey=t.createKeysForReferenceSubexpressions=t.createKeyForReference=t.isCodeFlowSupportedForReference=t.getUniqueFlowNodeId=t.FlowFlags=void 0;const a=n(83181);var r;!function(e){e[e.Unreachable=1]="Unreachable",e[e.Start=2]="Start",e[e.BranchLabel=4]="BranchLabel",e[e.LoopLabel=8]="LoopLabel",e[e.Assignment=16]="Assignment",e[e.Unbind=32]="Unbind",e[e.WildcardImport=64]="WildcardImport",e[e.TrueCondition=128]="TrueCondition",e[e.FalseCondition=512]="FalseCondition",e[e.Call=1024]="Call",e[e.PreFinallyGate=2048]="PreFinallyGate",e[e.PostFinally=4096]="PostFinally",e[e.VariableAnnotation=16384]="VariableAnnotation",e[e.PostContextManager=32768]="PostContextManager",e[e.TrueNeverCondition=65536]="TrueNeverCondition",e[e.FalseNeverCondition=131072]="FalseNeverCondition",e[e.NarrowForPattern=262144]="NarrowForPattern",e[e.ExhaustedMatch=524288]="ExhaustedMatch"}(r||(t.FlowFlags=r={}));let s=1;function i(e){let t;if(38===e.nodeType)t=e.value;else if(35===e.nodeType){t=`${i(e.leftExpression)}.${e.memberName.value}`}else if(24===e.nodeType){const n=i(e.baseExpression);(0,a.assert)(1===e.items.length);const r=e.items[0].valueExpression;if(40===r.nodeType)t=`${n}[${r.value.toString()}]`;else if(48===r.nodeType){const e=r;(0,a.assert)(1===e.strings.length&&49===e.strings[0].nodeType),t=`${n}["${e.strings[0].value}"]`}else 55===r.nodeType&&33===r.operator&&40===r.expression.nodeType?t=`${n}[-${r.expression.value.toString()}]`:(0,a.fail)("createKeyForReference received unexpected index type")}else(0,a.fail)("createKeyForReference received unexpected expression type");return t}t.getUniqueFlowNodeId=function(){return s++},t.isCodeFlowSupportedForReference=function e(t){if(38===t.nodeType)return!0;if(35===t.nodeType)return e(t.leftExpression);if(24===t.nodeType){if(1!==t.items.length||t.trailingComma||void 0!==t.items[0].name||0!==t.items[0].argumentCategory)return!1;const n=t.items[0].valueExpression,a=40===n.nodeType&&!n.isImaginary&&n.isInteger,r=55===n.nodeType&&33===n.operator&&40===n.expression.nodeType&&!n.expression.isImaginary&&n.expression.isInteger,s=48===n.nodeType&&1===n.strings.length&&49===n.strings[0].nodeType;return!!(a||r||s)&&e(t.baseExpression)}return!1},t.createKeyForReference=i,t.createKeysForReferenceSubexpressions=function e(t){return 38===t.nodeType?[i(t)]:35===t.nodeType?[...e(t.leftExpression),i(t)]:24===t.nodeType?[...e(t.baseExpression),i(t)]:void(0,a.fail)("createKeyForReference received unexpected expression type")},t.wildcardImportReferenceKey="*"},48816:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.formatControlFlowGraph=void 0;const a=n(96193),r=n(9316),s=n(31508);t.formatControlFlowGraph=function(e){const t=Object.create(null),n=[],i=[],o=d(e,new Set);for(const e of n)e.text=g(e.flowNode,e.circular),m(e);const l=function(e){const t=f(Array(e),0);for(const e of n)t[e.level]=Math.max(t[e.level],e.text.length);return t}(function e(t){let n=0;for(const a of p(t))n=Math.max(n,e(a));return n+1}(o));return function e(t,n){if(-1===t.lane){t.lane=n,t.endLane=n;const a=p(t);for(let r=0;r<a.length;r++){r>0&&n++;const s=a[r];e(s,n),s.endLane>t.endLane&&(n=s.endLane)}t.endLane=n}}(o,0),function(){const e=l.length,t=n.reduce(((e,t)=>Math.max(e,t.lane)),0)+1,a=f(Array(t),""),r=l.map((()=>Array(t))),s=l.map((()=>f(Array(t),0)));for(const e of n){r[e.level][e.lane]=e;const t=p(e);for(let n=0;n<t.length;n++){const a=t[n];let r=8;a.lane===e.lane&&(r|=4),n>0&&(r|=1),n<t.length-1&&(r|=2),s[e.level][a.lane]|=r}0===t.length&&(s[e.level][e.lane]|=16);const n=c(e);for(let t=0;t<n.length;t++){const a=n[t];let r=4;t>0&&(r|=1),t<n.length-1&&(r|=2),s[e.level-1][a.lane]|=r}}for(let n=0;n<e;n++)for(let e=0;e<t;e++){const t=n>0?s[n-1][e]:0,a=e>0?s[n][e-1]:0;let r=s[n][e];r||(r=0,8&t&&(r|=12),2&a&&(r|=3),s[n][e]=r)}for(let t=0;t<e;t++)for(let n=0;n<a.length;n++){const a=s[t][n],o=4&a?"─":" ",p=r[t][n];p?(i(n,p.text),t<e-1&&(i(n," "),i(n,T(o,l[t]-p.text.length)))):t<e-1&&i(n,T(o,l[t]+1)),i(n,h(a)),i(n,8&a&&t<e-1&&!r[t+1][n]?"─":" ")}return`${a.join("\n")}\n`;function i(e,t){a[e]+=t}}();function p(e){const t=[];for(const n of e.edges)n.source===e&&t.push(n.target);return t}function c(e){const t=[];for(const n of e.edges)n.target===e&&t.push(n.source);return t}function d(e,a){const r=e.id;let i=t[r];if(i&&a.has(e))return i={id:-1,flowNode:e,edges:[],text:"",lane:-1,endLane:-1,level:-1,circular:!0},n.push(i),i;if(a.add(e),!i){t[r]=i={id:r,flowNode:e,edges:[],text:"",lane:-1,endLane:-1,level:-1,circular:!1},n.push(i);const o=function(e){if(e.flags&(s.FlowFlags.LoopLabel|s.FlowFlags.BranchLabel))return e.antecedents;if(e.flags&(s.FlowFlags.Assignment|s.FlowFlags.VariableAnnotation|s.FlowFlags.WildcardImport|s.FlowFlags.TrueCondition|s.FlowFlags.FalseCondition|s.FlowFlags.TrueNeverCondition|s.FlowFlags.FalseNeverCondition|s.FlowFlags.NarrowForPattern|s.FlowFlags.ExhaustedMatch|s.FlowFlags.Call|s.FlowFlags.PreFinallyGate|s.FlowFlags.PostFinally))return[e.antecedent];return[]}(e);for(const e of o)u(i,e,a)}return a.delete(e),i}function u(e,t,n){const a=d(t,n),r={source:e,target:a};i.push(r),e.edges.push(r),a.edges.push(r)}function m(e){if(-1!==e.level)return e.level;let t=0;for(const n of c(e))t=Math.max(t,m(n)+1);return e.level=t}function y(e){const t=function(e){return e.flags&s.FlowFlags.Assignment||e.flags&s.FlowFlags.WildcardImport?e.node:e.flags&(s.FlowFlags.TrueCondition|s.FlowFlags.FalseCondition)?e.expression:e.flags&s.FlowFlags.NarrowForPattern?e.statement:e.flags&s.FlowFlags.Call?e.node:void 0}(e);if(!t)return;const n=(0,r.getFileInfo)(t),i=(0,a.convertOffsetToPosition)(t.start,n.lines);return`[${i.line+1}:${i.character+1}]`}function g(e,t){const n=`${function(e){if(e&s.FlowFlags.Start)return"Start";if(e&s.FlowFlags.BranchLabel)return"Branch";if(e&s.FlowFlags.LoopLabel)return"Loop";if(e&s.FlowFlags.Unbind)return"Unbind";if(e&s.FlowFlags.Assignment)return"Assign";if(e&s.FlowFlags.TrueCondition)return"True";if(e&s.FlowFlags.FalseCondition)return"False";if(e&s.FlowFlags.Call)return"Call";if(e&s.FlowFlags.Unreachable)return"Unreachable";if(e&s.FlowFlags.WildcardImport)return"Wildcard";if(e&s.FlowFlags.PreFinallyGate)return"PreFinal";if(e&s.FlowFlags.PostFinally)return"PostFinal";if(e&s.FlowFlags.VariableAnnotation)return"Annotate";if(e&s.FlowFlags.TrueNeverCondition)return"TrueNever";if(e&s.FlowFlags.FalseNeverCondition)return"FalseNever";if(e&s.FlowFlags.NarrowForPattern)return"Pattern";if(e&s.FlowFlags.ExhaustedMatch)return"Exhaust";throw new Error}(e.flags)}@${e.id}${y(e)||""}`;return t?`Circular(${n})`:n}function h(e){switch(e){case 3:return"│";case 12:return"─";case 5:return"╯";case 9:return"╰";case 6:return"╮";case 10:return"╭";case 7:return"┤";case 11:return"├";case 13:return"┴";case 14:return"┬";case 15:return"╫"}return" "}function f(e,t){if(e.fill)e.fill(t);else for(let n=0;n<e.length;n++)e[n]=t;return e}function T(e,t){if(e.repeat)return t>0?e.repeat(t):"";let n="";for(;n.length<t;)n+=e;return n}}},63516:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getFileLevelDirectives=void 0;const a=n(55484),r=n(83181),s=n(72484),i=n(96193),o=n(95960),l="strict",p="standard",c="basic";function d(e){!function(e,t,n){const r=(0,a.getBooleanDiagnosticRules)(),s=(0,a.getDiagLevelDiagnosticRules)();for(const a of r)n.find((e=>e===a))||t[a]&&(e[a]=!0);for(const a of s){if(n.find((e=>e===a)))continue;const r=t[a],s=e[a];("error"===r||"warning"===r&&"error"!==s||"information"===r&&"error"!==s&&"warning"!==s)&&(e[a]=r)}}(e,(0,a.getStrictDiagnosticRuleSet)(),(0,a.getStrictModeNotOverriddenRules)())}function u(e,t){const n=(0,a.getBooleanDiagnosticRules)(),r=(0,a.getDiagLevelDiagnosticRules)();for(const a of n)e[a]=t[a];for(const n of r)e[n]=t[n]}function m(e,t,n,r,i){const m="pyright:";if(e.startsWith(m)){const m=e.substring(8);if(m.trim().startsWith("ignore"))return r;if(!n()){const e=new s.DiagnosticAddendum;e.addMessage(o.LocAddendum.pyrightCommentIgnoreTip());const n={message:o.LocMessage.pyrightCommentNotOnOwnLine()+e.getString(),range:t};i.push(n)}const h=m.split(",");h.some((e=>e.trim()===l))?d(r):h.some((e=>e.trim()===p))?function(e){u(e,(0,a.getStandardDiagnosticRuleSet)())}(r):h.some((e=>e.trim()===c))&&function(e){u(e,(0,a.getBasicDiagnosticRuleSet)())}(r);let f=0;for(const e of h){const[n,a]=g(e,{start:t.start+8+f,length:e.length});r=y(n,a,r,i),f+=e.length+1}}return r}function y(e,t,n,r){const s=e.split("="),[i,p]=g(s[0],{start:t.start,length:s[0].length});if(1===s.length&&i&&[l,c].some((e=>i===e)))return n;const d=(0,a.getDiagLevelDiagnosticRules)(),u=(0,a.getBooleanDiagnosticRules)(),m=s.length>0?s.slice(1).join("="):"",[y,h]=g(m,{start:t.start+s[0].length+1,length:m.length});if(d.find((e=>e===i))){const e=function(e){switch(e){case"false":case"none":return"none";case"true":case"error":return"error";case"warning":return"warning";case"information":return"information";default:return}}(y);if(void 0!==e)n[i]=e;else{const e={message:o.LocMessage.pyrightCommentInvalidDiagnosticSeverityValue(),range:y?h:p};r.push(e)}}else if(u.find((e=>e===i))){const e=function(e){if("false"===e)return!1;if("true"===e)return!0;return}(y);if(void 0!==e)n[i]=e;else{const e={message:o.LocMessage.pyrightCommentInvalidDiagnosticBoolValue(),range:y?h:p};r.push(e)}}else if(i){const e={message:y?o.LocMessage.pyrightCommentUnknownDiagnosticRule().format({rule:i}):o.LocMessage.pyrightCommentUnknownDirective().format({directive:i}),range:p};r.push(e)}else{const e={message:o.LocMessage.pyrightCommentMissingDirective(),range:p};r.push(e)}return n}function g(e,t){(0,r.assert)(e.length===t.length);const n=e.trimStart();let a=t;if(n!==e){const t=e.length-n.length;a={start:a.start+t,length:a.length-t}}const s=n.trimEnd();return s!==n&&(a={start:a.start,length:a.length-n.length+s.length}),(0,r.assert)(s.length===a.length),[s,a]}t.getFileLevelDirectives=function(e,t,n,r,s){let o=(0,a.cloneDiagnosticRuleSet)(n);r&&d(o);for(let n=0;n<e.count;n++){const a=e.getItemAt(n);if(a.comments)for(const e of a.comments){const[n,a]=g(e.value,{start:e.start,length:e.length});o=m(n,a,(()=>(0,i.convertOffsetToPosition)(e.start,t).character<=1),o,s)}}return o}},99868:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.populateTypeVarContextBasedOnExpectedType=t.updateTypeVarType=t.assignTypeToTypeVar=void 0;const a=n(72484),r=n(95960),s=n(90549),i=n(8312),o=n(808),l=n(97632),p=!1;function c(e,t,n,a,r,s=void 0,o=!1){let l;if(a&&!o){const t=(0,i.isVariadicTypeVar)(n)?d(e,a):e.stripLiteralValue(a);t!==a&&(r&&!e.assignType(r,t)||(l=t))}t.setTypeVarType(n,a,l,r,s)}function d(e,t){if(!(0,i.isUnpackedClass)(t)||!t.tupleTypeArguments)return t;let n=!1;const a=t.tupleTypeArguments.map((t=>{const a=e.stripLiteralValue(t.type);return a!==t.type&&(n=!0),{isUnbounded:t.isUnbounded,isOptional:t.isOptional,type:a}}));return n?(0,o.specializeTupleClass)(t,a,!0,!0):t}function u(e,t,n){const a=t.getSignatureContexts().length;0===a?console.log(`${n}  no signatures`):1===a?m(e,t.getSignatureContexts()[0],`${n}  `):t.doForEachSignatureContext(((t,a)=>{console.log(`${n}  signature ${a}`),m(e,t,`${n}    `)}))}function m(e,t,n){let a=!1;t.getTypeVars().forEach((t=>{var r;const s=`${n}${t.typeVar.details.name}`,o=null!==(r=t.narrowBoundNoLiterals)&&void 0!==r?r:t.narrowBound,l=t.wideBound;o&&l&&(0,i.isTypeSame)(o,l)?(console.log(`${s} = ${e.printType(o)}`),a=!0):(o&&(console.log(`${s} ≤ ${e.printType(o)}`),a=!0),l&&(console.log(`${s} ≥ ${e.printType(l)}`),a=!0))})),a||console.log(`${n}no constraints`)}t.assignTypeToTypeVar=function(e,t,n,m,y,g=0,h=0){if(p){const a=" ".repeat(2*h);console.log(`${a}`),console.log(`${a}assignTypeToTypeVar called with`),console.log(`${a}destType: ${e.printType(t)}`),console.log(`${a}srcType: ${e.printType(n)}`),console.log(`${a}flags: ${g}`),console.log(`${a}scopes: ${(y.getSolveForScopes()||[]).join(", ")}`),console.log(`${a}pre-call context #${y.getId()}: `),u(e,y,a)}let f=!0;const T=0!=(1&g),v=0!=(2&g);if(!t.scopeId)return!0;if(i.TypeBase.isInstantiable(t)&&(0,i.isInstantiableClass)(n)&&e.isSpecialFormClass(n,g))return!1;if(!y.hasSolveForScope(t.scopeId)){if((0,i.isAnyOrUnknown)(n)||(0,i.isClass)(n)&&i.ClassType.derivesFromAnyOrUnknown(n))return!0;if((0,i.isClassInstance)(n)&&i.ClassType.isBuiltIn(n,"type")&&(!n.typeArguments||n.typeArguments.length<1||(0,i.isAnyOrUnknown)(n.typeArguments[0]))&&i.TypeBase.isInstantiable(t))return!0;if(t.details.isParamSpec&&(0,i.isFunction)(n)&&i.FunctionType.isParamSpecValue(n)&&i.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(n))return!0;if((0,i.isNever)(n)&&!T)return!0;if(0!=(1024&g))return!0;if(f=!1,!t.details.isSynthesized||t.details.isSynthesizedSelf)return null==m||m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(n,t))),!1}if((0,i.isTypeSame)(t,n)&&t.isInScopePlaceholder)return!0;if(0!=(8&g))return e.assignType(e.makeTopLevelTypeVarsConcrete(t),e.makeTopLevelTypeVarsConcrete(n),m,void 0,void 0,g,h);if(t.details.isParamSpec)return function(e,t,n,a,s,l=0){let c=!0;if(s.doForEachSignature((p=>{if((0,i.isTypeVar)(n)&&n.details.isParamSpec){const e=p.getParamSpecType(t);if(!e)return void(!s.isLocked()&&s.hasSolveForScope(t.scopeId)&&p.setTypeVarType(t,(0,o.convertTypeToParamSpecValue)(n)));if(0===e.details.parameters.length&&e.details.paramSpec&&(0,i.isTypeSame)(e.details.paramSpec,n,{},l))return}else if((0,i.isFunction)(n)){const a=n,r=n.details.parameters.map(((e,t)=>({category:e.category,name:e.name,isNameSynthesized:e.isNameSynthesized,hasDefault:!!e.hasDefault,defaultValueExpression:e.defaultValueExpression,hasDeclaredType:e.hasDeclaredType,type:i.FunctionType.getEffectiveParameterType(a,t)}))),c=i.FunctionType.createInstance("","","",65536|n.details.flags);r.forEach((e=>{i.FunctionType.addParameter(c,e)})),c.details.typeVarScopeId=n.details.typeVarScopeId,c.details.constructorTypeVarScopeId=n.details.constructorTypeVarScopeId,i.FunctionType.addHigherOrderTypeVarScopeIds(c,n.details.higherOrderTypeVarScopeIds),c.details.docString=n.details.docString,c.details.deprecatedMessage=n.details.deprecatedMessage,c.details.paramSpec=n.details.paramSpec,c.details.methodClass=n.details.methodClass;let d=!1;const u=p.getParamSpecType(t);if(u){const t=(0,o.convertParamSpecValueToType)(u),n=e.assignType(t,c,void 0,void 0,void 0,64,l),a=e.assignType(c,t,void 0,void 0,void 0,64,l);if(n&&a){if(i.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(c))return;d=!0}else if(a)d=!0;else if(n)return}else d=!0;if(d)return void(!s.isLocked()&&s.hasSolveForScope(t.scopeId)&&p.setTypeVarType(t,c))}else if((0,i.isAnyOrUnknown)(n))return;null==a||a.addMessage(r.LocAddendum.typeParamSpec().format({type:e.printType(n),name:t.details.name})),c=!1})),p){const t=" ".repeat(2*l);console.log(`${t}`),console.log(`${t}post-call typeVarContext: `),u(e,s,t)}return c}(e,t,n,m,y,h);if(t.details.isVariadic&&!t.isVariadicInUnion&&!(0,i.isUnpacked)(n)){const t=e.getTupleClassType();n=t&&(0,i.isInstantiableClass)(t)?(0,o.convertToInstance)((0,o.specializeTupleClass)(t,[{type:n,isUnbounded:!1}],!0,!0)):i.UnknownType.create()}if((0,i.isTypeVar)(n)&&n.details.isVariadic&&n.isVariadicUnpacked&&!n.isVariadicInUnion&&!t.details.isVariadic&&(n=i.TypeVarType.cloneForUnpacked(n,!0)),t.details.constraints.length>0)return function(e,t,n,a,s,p,d,u){let m;const y=e.makeTopLevelTypeVarsConcrete(n),g=s.getPrimarySignature().getTypeVar(t),h=null==g?void 0:g.wideBound,f=null==g?void 0:g.narrowBound;let T=!1;if((0,i.isTypeVar)(n))e.assignType(t,y,void 0,new l.TypeVarContext(t.scopeId),void 0,0,u)&&(m=n,i.TypeBase.isInstantiable(n)&&(m=(0,o.convertToInstance)(n,!1)));else{let n,a=!0;m=(0,o.mapSubtypes)(y,(r=>{let s,l;return(0,i.isAnyOrUnknown)(r)?r:(t.details.constraints.forEach(((n,a)=>{const p=i.TypeBase.isInstantiable(t)?(0,o.convertToInstantiable)(n):n;e.assignType(p,r,void 0,void 0,void 0,0,u)&&(s&&!e.assignType(i.TypeBase.isInstantiable(t)?(0,o.convertToInstantiable)(s):s,p,void 0,void 0,void 0,0,u)||(s=(0,o.addConditionToType)(n,(0,o.getTypeCondition)(r)),l=a))})),s||0==(2&p)&&(a=!1),void 0===l||(0,o.getTypeCondition)(r)||(void 0!==n&&n!==l&&(a=!1),n=l),s)})),!(0,i.isNever)(m)&&a||(m=void 0),!m&&(0,i.isUnion)(y)&&(m=t.details.constraints.find((n=>{const a=i.TypeBase.isInstantiable(t)?(0,o.convertToInstantiable)(n):n;return e.assignType(a,y,void 0,void 0,void 0,0,u)})))}if(!m)return null==a||a.addMessage(r.LocAddendum.typeConstrainedTypeVar().format({type:e.printType(n),name:t.details.name})),!1;(0,o.isLiteralTypeOrUnion)(m)&&(T=!0);if(f&&!(0,i.isAnyOrUnknown)(f)){if(!e.assignType(f,m,void 0,void 0,void 0,0,u)){if(!e.assignType(m,f,void 0,void 0,void 0,0,u))return null==a||a.addMessage(r.LocAddendum.typeConstrainedTypeVar().format({type:e.printType(m),name:e.printType(f)})),!1;!s.isLocked()&&d&&c(e,s,t,m,h)}}else!s.isLocked()&&d&&c(e,s,t,m,h,void 0,T);return!0}(e,t,n,m,y,g,f,h);const b=y.getPrimarySignature().getTypeVar(t);let _=null==b?void 0:b.wideBound;_||t.details.isSynthesizedSelf||(_=t.details.boundType);let C=null==b?void 0:b.narrowBound,I=C,k=_;const w=m?new a.DiagnosticAddendum:void 0;let S=n;if(0==(8192&g)&&(0,i.isClass)(S)&&S.includeSubclasses&&(S=(0,o.specializeWithDefaultTypeArgs)(S)),i.TypeBase.isInstantiable(t))if((0,o.isEffectivelyInstantiable)(S))S=(0,o.convertToInstance)(S,!1);else{const a=e.makeTopLevelTypeVarsConcrete(S);if(!(0,o.isEffectivelyInstantiable)(a))return null==m||m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(n,t))),!1;S=(0,o.convertToInstance)(a)}else if((0,i.isTypeVar)(n)&&i.TypeBase.isInstantiable(n)&&(0,i.isTypeSame)((0,o.convertToInstance)(n),t))return null==m||m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(S,t))),!1;if(0!=(2048&g)){if(0!=(4096&g)&&(0,i.isUnknown)(S))return!0;b||(T?(I=S,k=S):v?I=S:k=S)}else if(v){if(!_||(0,i.isTypeSame)(t,_))k=S;else if(!(0,i.isTypeSame)(_,S,{},h))if(e.assignType(_,e.makeTopLevelTypeVarsConcrete(S),w,void 0,void 0,1024&g,h))(0,i.isAnyOrUnknown)(_)||(k=S);else if(!e.assignType(S,_,w,void 0,void 0,1024&g,h))return m&&w&&(m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(_,S))),m.addAddendum(w)),!1;if(C&&!e.assignType(k,C,void 0,void 0,void 0,1024&g,h))return m&&w&&(m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(C,k))),m.addAddendum(w)),!1}else{if(!C||(0,i.isTypeSame)(t,C))I=S;else if((0,i.isTypeSame)(C,S,{},h))!k&&T&&(null==b?void 0:b.narrowBoundNoLiterals)&&(I=b.narrowBoundNoLiterals);else if((0,i.isAnyOrUnknown)(S)&&(null==b?void 0:b.tupleTypes))I=S;else if(e.assignType(C,S,w,y,void 0,g,h))I=(0,o.isPartlyUnknown)(C)&&!(0,i.isUnknown)(S)&&e.assignType(S,C,void 0,y,void 0,1024&g,h)?S:(0,o.applySolvedTypeVars)(C,y);else if((0,i.isTypeVar)(C)&&!(0,i.isTypeVar)(S)&&e.assignType(e.makeTopLevelTypeVarsConcrete(C),S,w,y,void 0,g,h))I=S;else{if(y.isLocked())return null==m||m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(S,C))),!1;if(e.assignType(S,C,void 0,y,void 0,1024&g,h))I=S;else if((0,i.isVariadicTypeVar)(t)){const t=function(e,t,n){if(!(0,i.isUnpackedClass)(t)||!(0,i.isUnpackedClass)(n))return;if(!t.tupleTypeArguments||!n.tupleTypeArguments||t.tupleTypeArguments.length!==n.tupleTypeArguments.length)return;const a=d(e,t),r=d(e,n);if((0,i.isTypeSame)(a,r))return a;return}(e,C,S);if(!t)return null==m||m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(C,S))),!1;I=t}else{const n=e.getObjectType();!k&&T&&(null==b?void 0:b.narrowBoundNoLiterals)&&(C=b.narrowBoundNoLiterals);const a=(0,o.applySolvedTypeVars)(C,y);I=(0,i.isUnion)(a)&&a.subtypes.length>s.maxSubtypesForInferredType&&void 0!==t.details.boundType&&(0,i.isClassInstance)(n)?(0,i.combineTypes)([a,n],64):(0,i.combineTypes)([a,S],64)}}if(_&&I&&!(0,i.isTypeSame)(_,I,{},h)){let t=!0;(0,i.isTypeVar)(_)&&((0,i.isTypeSame)(I,_)||(0,i.isUnion)(I)&&I.subtypes.some((e=>(0,i.isTypeSame)(e,_))))&&(t=!1);const n=t?e.makeTopLevelTypeVarsConcrete(_,!0):_;if(!e.assignType(n,I,null==m?void 0:m.createAddendum(),y,void 0,1024,h))return m&&w&&m.addMessage(r.LocAddendum.typeAssignmentMismatch().format(e.printSrcDestTypes(I,n))),!1}}if(!k&&T&&(k=I),t.details.boundType){const a=I||k;if(i.TypeBase.isInstantiable(t)&&!i.TypeBase.isInstantiable(n))return!1;const s=t.details.isSynthesizedSelf?y:new l.TypeVarContext(t.scopeId);if(!e.assignType(t.details.boundType,e.makeTopLevelTypeVarsConcrete(a),null==m?void 0:m.createAddendum(),s,void 0,1024&g,h))return t.details.isSynthesized||null==m||m.addMessage(r.LocAddendum.typeBound().format({sourceType:e.printType(a),destType:e.printType(t.details.boundType),name:i.TypeVarType.getReadableName(t)})),!1}let A=null==b?void 0:b.tupleTypes;if(A){const e=null!=I?I:k;e&&(A=[{type:e,isUnbounded:!0}])}if(!y.isLocked()&&f&&c(e,y,t,I,k,A,0!=(2304&g)),p){const t=" ".repeat(2*h);console.log(`${t}`),console.log(`${t}post-call context #${y.getId()}: `),u(e,y,t)}return!0},t.updateTypeVarType=c,t.populateTypeVarContextBasedOnExpectedType=function(e,t,n,a,r,s=void 0){if((0,i.isAny)(n))return t.details.typeParameters.forEach((t=>{c(e,a,t,n,n)})),!0;if((0,i.isTypeVar)(n)&&n.details.isSynthesizedSelf&&n.details.boundType&&(n=n.details.boundType),!(0,i.isClass)(n))return!1;const p=n.typeArguments;if(!p)return e.assignType(t,n,void 0,a,void 0,2048);if(e.inferTypeParameterVarianceForClass(t),i.ClassType.isSameGenericClass(n,t)){const t=(0,o.buildTypeVarContextFromSpecializedClass)(n);return t.getPrimarySignature().getTypeVars().forEach((n=>{let l=t.getPrimarySignature().getTypeVarType(n.typeVar);if(l&&r&&(l=(0,o.transformExpectedType)(l,r,s)),l){const t=i.TypeVarType.getVariance(n.typeVar);c(e,a,n.typeVar,3===t?void 0:l,4===t?void 0:l),n.tupleTypes&&a.setTupleTypeVar(n.typeVar,n.tupleTypes.map((e=>{let t=e.type;return r&&(t=(0,o.transformExpectedType)(e.type,r,s)),{type:t,isUnbounded:e.isUnbounded,isOptional:e.isOptional}})))}})),!0}const d=(0,o.getTypeVarScopeId)(n),u=i.ClassType.getTypeParameters(n).map(((e,t)=>{const n=i.TypeVarType.createInstance(`__dest${t}`);return n.details.isSynthesized=!0,e.details.isParamSpec&&(n.details.isParamSpec=!0),n.details.declaredVariance=2,n.scopeId=d,n})),m=i.ClassType.cloneForSpecialization(n,u,!0),y=i.ClassType.getTypeParameters(t).map(((e,t)=>{const n=i.TypeVarType.createInstance(`__source${t}`);return n.details.isSynthesized=!0,n.details.synthesizedIndex=t,n.details.isExemptFromBoundCheck=!0,e.details.isParamSpec&&(n.details.isParamSpec=!0),i.TypeVarType.cloneAsInScopePlaceholder(n)})),g=i.ClassType.cloneForSpecialization(t,y,!0),h=new l.TypeVarContext(d);if(e.assignType(m,g,void 0,h,void 0,2048)){let t=!0;return u.forEach(((n,l)=>{let d=h.getPrimarySignature().getTypeVarType(n);const u=[];if(d&&(n.details.isParamSpec&&(0,i.isFunction)(d)&&(d=(0,o.convertParamSpecValueToType)(d)),(0,i.isUnion)(d))){let e;(0,o.sortTypes)(d.subtypes).forEach((t=>{(0,i.isTypeVar)(t)&&t.details.isSynthesized&&void 0!==t.details.synthesizedIndex&&!e?e=t:u.push(t)})),e&&(d=e)}if(d&&(0,i.isTypeVar)(d)&&d.details.isSynthesized&&void 0!==d.details.synthesizedIndex){const m=i.ClassType.getTypeParameters(g)[d.details.synthesizedIndex];if(l<p.length){let d=(0,o.transformPossibleRecursiveTypeAlias)(p[l]);if(u.length>0&&(d=(0,i.combineTypes)([d,...u])),r&&(d=(0,o.transformExpectedType)(d,r,s)),d){const r=i.TypeVarType.getVariance(n);a.getPrimarySignature().getTypeVarType(m)&&(t=!1,d=i.UnknownType.create()),c(e,a,m,3===r?void 0:d,4===r?void 0:d)}else t=!1}}})),t}return!1}},28580:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.applyConstructorTransform=t.hasConstructorTransform=void 0;const a=n(28040),r=n(72484),s=n(97652),i=n(95960),o=n(90272),l=n(92488),p=n(52328),c=n(8312),d=n(808),u=n(97632);function m(e,t,n,o,p){const m=new Map,y=(0,l.getParameterListDetails)(p);let g=!1,h=!1;const f=new u.TypeVarContext((0,d.getTypeVarScopeId)(p));n.slice(1).forEach(((n,a)=>{var o,u,T,v,b,_,C,I;if(n.valueExpression)if(n.name){const a=y.params.find((e=>{var t;return e.param.name===(null===(t=n.name)||void 0===t?void 0:t.value)&&e.source!==l.ParameterSource.PositionOnly}));if(a){const o=a.param.name,l=c.FunctionType.getEffectiveParameterType(p,a.index);if(m.has(o))t&&e.addDiagnostic(s.DiagnosticRule.reportCallIssue,i.LocMessage.paramAlreadyAssigned().format({name:n.name.value}),n.name),g=!0;else{const a=new r.DiagnosticAddendum,c=e.getTypeOfExpression(n.valueExpression,void 0,(0,d.makeInferenceContext)(l));e.assignType(l,c.type,a,f)||(t&&e.addDiagnostic(s.DiagnosticRule.reportArgumentType,i.LocMessage.argAssignmentParamFunction().format({argType:e.printType(c.type),paramType:e.printType(l),functionName:p.details.name,paramName:o}),null!==(I=n.valueExpression)&&void 0!==I?I:t),g=!0),m.set(o,!0)}}else if(void 0===y.kwargsIndex)t&&e.addDiagnostic(s.DiagnosticRule.reportCallIssue,i.LocMessage.paramNameMissing().format({name:n.name.value}),n.name),g=!0;else{const a=c.FunctionType.getEffectiveParameterType(p,y.params[y.kwargsIndex].index),o=new r.DiagnosticAddendum,l=e.getTypeOfExpression(n.valueExpression,void 0,(0,d.makeInferenceContext)(a));e.assignType(a,l.type,o,f)||(t&&e.addDiagnostic(s.DiagnosticRule.reportArgumentType,i.LocMessage.argAssignmentParamFunction().format({argType:e.printType(l.type),paramType:e.printType(a),functionName:p.details.name,paramName:null!==(_=y.params[y.kwargsIndex].param.name)&&void 0!==_?_:""}),null!==(C=n.valueExpression)&&void 0!==C?C:t),g=!0)}}else if(a>=y.params.length||y.params[a].source===l.ParameterSource.KeywordOnly)if(void 0!==y.argsIndex){const a=c.FunctionType.getEffectiveParameterType(p,y.params[y.argsIndex].index),l=new r.DiagnosticAddendum,m=e.getTypeOfExpression(n.valueExpression,void 0,(0,d.makeInferenceContext)(a));e.assignType(a,m.type,l,f)||(t&&e.addDiagnostic(s.DiagnosticRule.reportArgumentType,i.LocMessage.argAssignmentParamFunction().format({argType:e.printType(m.type),paramType:e.printType(a),functionName:p.details.name,paramName:null!==(o=y.params[y.argsIndex].param.name)&&void 0!==o?o:""}),null!==(u=n.valueExpression)&&void 0!==u?u:t),g=!0)}else h||t&&e.addDiagnostic(s.DiagnosticRule.reportCallIssue,1===y.positionParamCount?i.LocMessage.argPositionalExpectedOne():i.LocMessage.argPositionalExpectedCount().format({expected:y.positionParamCount}),null!==(T=n.valueExpression)&&void 0!==T?T:t),h=!0,g=!0;else{const o=c.FunctionType.getEffectiveParameterType(p,a),l=new r.DiagnosticAddendum,u=null!==(v=y.params[a].param.name)&&void 0!==v?v:"",h=e.getTypeOfExpression(n.valueExpression,void 0,(0,d.makeInferenceContext)(o));e.assignType(o,h.type,l,f)||(t&&e.addDiagnostic(s.DiagnosticRule.reportArgumentType,i.LocMessage.argAssignmentParamFunction().format({argType:e.printType(h.type),paramType:e.printType(o),functionName:p.details.name,paramName:u}),null!==(b=n.valueExpression)&&void 0!==b?b:t),g=!0),m.set(u,!1)}}));const T=(0,d.applySolvedTypeVars)(p,f);if(!(0,c.isFunction)(T))return;const v=T.details.parameters.map(((e,t)=>{const n={...e};return n.type=c.FunctionType.getEffectiveParameterType(T,t),e.name&&m.get(e.name)&&(n.hasDefault=!0),n})),b=v.filter((e=>2!==e.category&&(1===e.category||(!e.name||!m.has(e.name))))),_=v.filter((e=>e.name&&m.get(e.name))),C=v.filter((e=>2===e.category)),I=[];(0,a.appendArray)(I,b),(0,a.appendArray)(I,_),(0,a.appendArray)(I,C);const k=c.FunctionType.createInstance(o.details.name,o.details.fullName,o.details.moduleName,o.details.flags,T.details.docString);return o.details.parameters.length>0&&c.FunctionType.addParameter(k,o.details.parameters[0]),I.forEach((e=>{c.FunctionType.addParameter(k,e)})),k.details.declaredReturnType=T.details.declaredReturnType?c.FunctionType.getSpecializedReturnType(T):T.inferredReturnType,k.details.declaration=o.details.declaration,k.details.typeVarScopeId=T.details.typeVarScopeId,{returnType:k,isTypeIncomplete:!1,argumentErrors:g}}t.hasConstructorTransform=function(e){return"functools.partial"===e.details.fullName},t.applyConstructorTransform=function(e,t,n,a,r){return"functools.partial"===a.details.fullName?function(e,t,n,a){if(!(0,c.isClassInstance)(a.returnType)||"functools.partial"!==a.returnType.details.fullName)return a;const r=(0,d.lookUpObjectMember)(a.returnType,"__call__",16);if(!r||!(0,c.isTypeSame)((0,d.convertToInstance)(r.classType),a.returnType))return a;const l=e.getTypeOfMember(r);if(!(0,c.isFunction)(l)||l.details.parameters.length<1)return a;if(n.length<1)return a;const u=e.getTypeOfArgument(n[0]);let y=u.type;const g=e.makeTopLevelTypeVarsConcrete(y);if((0,c.isInstantiableClass)(g)){const t=(0,o.createFunctionFromConstructor)(e,g,(0,c.isTypeVar)(y)?(0,d.convertToInstance)(y):void 0);t&&(y=t)}if(e.inferReturnTypeIfNecessary(y),n.some((e=>0!==e.argumentCategory)))return a;if((0,c.isFunction)(y)){const r=m(e,t,n,l,y);if(!r)return a;const s=c.ClassType.cloneForSymbolTableUpdate(a.returnType);return c.ClassType.getSymbolTable(s).set("__call__",p.Symbol.createWithType(4,r.returnType)),{returnType:s,isTypeIncomplete:a.isTypeIncomplete,argumentErrors:r.argumentErrors}}if((0,c.isOverloadedFunction)(y)){const r=[];let o=!1;if(c.OverloadedFunctionType.getOverloads(y).forEach((t=>{const a=m(e,void 0,n,l,t);a&&(a.argumentErrors?o=!0:(0,c.isFunction)(a.returnType)&&r.push(a.returnType))})),0===r.length)return o&&e.addDiagnostic(s.DiagnosticRule.reportCallIssue,i.LocMessage.noOverload().format({name:y.overloads[0].details.name}),t),a;const d=c.ClassType.cloneForSymbolTableUpdate(a.returnType);let u;return u=1===r.length?r[0]:c.OverloadedFunctionType.create(r.map((e=>c.FunctionType.cloneWithNewFlags(e,256|e.details.flags)))),c.ClassType.getSymbolTable(d).set("__call__",p.Symbol.createWithType(4,u)),{returnType:d,isTypeIncomplete:a.isTypeIncomplete,argumentErrors:!1}}return a}(e,t,n,r):r}},90272:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createFunctionFromConstructor=t.validateConstructorArguments=t.getBoundCallMethod=t.getBoundInitMethod=t.getBoundNewMethod=void 0;const a=n(28040),r=n(72484),s=n(97652),i=n(95960),o=n(99868),l=n(28580),p=n(28340),c=n(808),d=n(97632),u=n(8312);function m(e,t,n,a=void 0,r=4){const s=800|r;return e.getTypeOfBoundMember(t,n,"__new__",{method:"get"},a,s)}function y(e,t,n,a=void 0,r=4){const s=528|r;return e.getTypeOfBoundMember(t,n,"__init__",{method:"get"},a,s)}function g(e,t,n){return e.getTypeOfBoundMember(t,n,"__call__",{method:"get"},void 0,536)}function h(e,t,n,l,m,g,h){var b,C;let I,k=!1,w=!1,S=!1;const A=[];let x,P;if(h){const r=f(e,t,n,l,m,g,h,!0);r.argumentErrors?w=!0:(0,a.appendArray)(A,null!==(b=r.overloadsUsedForCall)&&void 0!==b?b:[]),r.isTypeIncomplete&&(S=!0),x=r.returnType}if(!x||function(e){var t;if(!e||!(0,u.isFunction)(e))return!1;if(e.details.paramSpec)return!1;const n=e.details.parameters;if(2!==n.length)return!1;if(1!==n[0].category||2!==n[1].category)return!1;const a=null!==(t=e.details.declaredReturnType)&&void 0!==t?t:e.inferredReturnType;if(!a||!(0,u.isTypeVar)(a)||!a.details.isSynthesizedSelf)return!1;return!0}(null==h?void 0:h.type)?x=u.ClassType.cloneAsInstance(l):(0,u.isAnyOrUnknown)(x)&&(x=(0,c.applySolvedTypeVars)(u.ClassType.cloneAsInstance(l),new d.TypeVarContext((0,c.getTypeVarScopeId)(l)),{unknownIfNotFound:!0})),!w&&!(0,u.isNever)(x)&&!_(e,l,x)&&(0,u.isClassInstance)(x)){let i=x;i.typeArguments&&i.typeArguments.some((e=>(0,u.isUnknown)(e)))&&(i=u.ClassType.cloneAsInstance(l));const h=new r.DiagnosticAddendum;if(P=y(e,t,i,h),(null==P?void 0:P.typeErrors)&&e.addDiagnostic(s.DiagnosticRule.reportGeneralTypeIssues,h.getString(),t),P){const r=function(e,t,n,r,s,i,l){let m,y=!1,g=!1;const h=[];(null==i?void 0:i.signatureTracker)&&(l=(0,c.ensureFunctionSignaturesAreUnique)(l,i.signatureTracker,t.start));if(i){let f=!1;m=(0,c.mapSubtypes)(i.expectedType,(i=>{if(f)return;if(i=(0,c.transformPossibleRecursiveTypeAlias)(i),(0,u.isClassInstance)(i)&&u.ClassType.isSameGenericClass(r,i)&&r.typeArguments)return;const m=new d.TypeVarContext((0,c.getTypeVarScopeId)(r));if(m.addSolveForScope((0,c.getTypeVarScopeId)(l)),(0,o.populateTypeVarContextBasedOnExpectedType)(e,u.ClassType.cloneAsInstance(r),i,m,(0,p.getTypeVarScopesForNode)(t),t.start)){const o=(0,c.applySolvedTypeVars)(l,m);let p;if(p=e.useSpeculativeMode(t,(()=>e.validateCallArguments(t,n,{type:o},m.clone(),s))),!p.argumentErrors)return p=e.validateCallArguments(t,n,{type:o},m,s),p.isTypeIncomplete&&(y=!0),p.argumentErrors&&(g=!0),p.overloadsUsedForCall&&(0,a.appendArray)(h,p.overloadsUsedForCall),f=!0,T(e,r,i,m)}}),!0),((0,u.isNever)(m)||g)&&(m=void 0)}if(!m){const a=r.typeArguments?(0,c.buildTypeVarContextFromSpecializedClass)(r):new d.TypeVarContext((0,c.getTypeVarScopeId)(r));a.addSolveForScope((0,c.getTypeVarScopeId)(l));const i=e.validateCallArguments(t,n,{type:l},a,s);let o=r;i.specializedInitSelfType&&(0,u.isClassInstance)(i.specializedInitSelfType)&&u.ClassType.isSameGenericClass(i.specializedInitSelfType,o)&&(o=u.ClassType.cloneAsInstantiable(i.specializedInitSelfType)),m=v(e,o,void 0,a),i.isTypeIncomplete&&(y=!0),i.argumentErrors?g=!0:i.overloadsUsedForCall&&h.push(...i.overloadsUsedForCall)}return{argumentErrors:g,returnType:m,isTypeIncomplete:y,overloadsUsedForCall:h}}(e,t,n,i,m,g,P.type);r.argumentErrors?w=!0:r.overloadsUsedForCall&&A.push(...r.overloadsUsedForCall),r.isTypeIncomplete&&(S=!0),I=r.returnType,k=!0,m=!0}}if(!k&&h&&(e.isSpeculativeModeInUse(t)||f(e,t,n,l,m,g,h,!1),k=!0,I=x),!h&&!P){const r=function(e,t,n,a,r){let l=!1;n.length>0&&n.some((e=>0===e.argumentCategory))&&(e.addDiagnostic(s.DiagnosticRule.reportCallIssue,i.LocMessage.constructorNoArgs().format({type:a.aliasName||a.details.name}),t),l=!0);if(!r&&a.typeArguments)return{argumentErrors:l,overloadsUsedForCall:[],returnType:(0,c.convertToInstance)(a)};const m=new d.TypeVarContext((0,c.getTypeVarScopeId)(a));r&&(0,o.populateTypeVarContextBasedOnExpectedType)(e,u.ClassType.cloneAsInstance(a),r.expectedType,m,(0,p.getTypeVarScopesForNode)(t),t.start);return{argumentErrors:l,overloadsUsedForCall:[],returnType:v(e,a,r,m)}}(e,t,n,l,g);r.argumentErrors?w=!0:r.overloadsUsedForCall&&(0,a.appendArray)(A,r.overloadsUsedForCall),r.isTypeIncomplete&&(S=!0),I=null!==(C=r.returnType)&&void 0!==C?C:u.UnknownType.create()}return{argumentErrors:w,returnType:I,isTypeIncomplete:S,overloadsUsedForCall:A}}function f(e,t,n,a,r,s,i,o){let l,p=!1,m=!1;const y=[];(null==s?void 0:s.signatureTracker)&&(i.type=(0,c.ensureFunctionSignaturesAreUnique)(i.type,s.signatureTracker,t.start));const g=new d.TypeVarContext((0,c.getTypeVarScopeId)(a));g.addSolveForScope((0,c.getTypeVarScopeId)(i.type)),a.typeAliasInfo&&g.addSolveForScope(a.typeAliasInfo.typeVarScopeId);const h=e.useSpeculativeMode(o?t:void 0,(()=>e.validateCallArguments(t,n,i,g,r,s)));return h.isTypeIncomplete&&(p=!0),h.argumentErrors?(m=!0,g.unlock(),e.validateCallArguments(t,n,i,g,r)):(l=h.returnType,0===y.length&&h.overloadsUsedForCall&&y.push(...h.overloadsUsedForCall)),l?(0,u.isClassInstance)(l)&&(0,c.isTupleClass)(l)&&!l.tupleTypeArguments&&(l.typeArguments&&1===l.typeArguments.length&&(l=(0,c.specializeTupleClass)(l,[{type:l.typeArguments[0],isUnbounded:!0}])),l=function(e,t){let n=e;t&&(0,u.isClassInstance)(t.expectedType)&&(0,c.isTupleClass)(t.expectedType)&&t.expectedType.tupleTypeArguments&&(n=(0,c.specializeTupleClass)(e,t.expectedType.tupleTypeArguments));return n}(l,s)):l=v(e,a,s,g),{argumentErrors:m,returnType:l,isTypeIncomplete:p,overloadsUsedForCall:y}}function T(e,t,n,a){const r=(0,c.applySolvedTypeVars)(u.ClassType.cloneAsInstance(t),a,{applyInScopePlaceholders:!0});if(e.assignType(n,r))return(0,u.isAny)(n)?n:r}function v(e,t,n,a){let r=!0;if(0===t.details.typeParameters.length||t.typeArguments)return(0,c.applySolvedTypeVars)(u.ClassType.cloneAsInstance(t),a,{applyInScopePlaceholders:!0});if(n){const s=(0,c.mapSubtypes)(n.expectedType,(n=>T(e,t,n,a)));if(!(0,u.isNever)(s))return s;t.typeArguments&&(r=!1)}const s=(0,c.applySolvedTypeVars)(t,a,{unknownIfNotFound:r});return u.ClassType.cloneAsInstance(s)}function b(e,t,n){return!(e.assignType((0,c.convertToInstance)(t),n)&&!(0,u.isNever)(n)&&!(0,u.findSubtype)(n,(e=>(0,u.isAny)(e))))||!!u.ClassType.isEnumClass(t)}function _(e,t,n){const a=e.makeTopLevelTypeVarsConcrete(n);let r=!1;return(0,c.doForEachSubtype)(a,(e=>{if(!(0,u.isUnknown)(e))if((0,u.isClassInstance)(e)){const n=[];u.ClassType.isDerivedFrom(e,t,n)||(r=!0)}else r=!0})),r}t.getBoundNewMethod=m,t.getBoundInitMethod=y,t.getBoundCallMethod=g,t.validateConstructorArguments=function(e,t,n,a,i,o){var p;const c=function(e,t,n,a,r,s){const i=g(e,t,a);if(!i)return;const o=e.validateCallArguments(t,n,i,void 0,r,s),l=i.type;if((0,u.isFunction)(l)&&!l.details.declaredReturnType)return;if(o.returnType&&(0,u.isUnknown)(o.returnType))return;return o}(e,t,n,a,i,o);if(c){const t=null!==(p=c.returnType)&&void 0!==p?p:u.UnknownType.create();if(c.argumentErrors||b(e,a,t))return c}const d=new r.DiagnosticAddendum,y=m(e,t,a,d);(null==y?void 0:y.typeErrors)&&e.addDiagnostic(s.DiagnosticRule.reportGeneralTypeIssues,d.getString(),t);const f=(0,l.hasConstructorTransform)(a),T=e.useSpeculativeMode(f?t:void 0,(()=>h(e,t,n,a,i,o,y)));let v=!f||T.argumentErrors;if(f)if(T.argumentErrors)h(e,t,n,a,i,o,y),v=!0;else if(T.returnType){const r=(0,l.applyConstructorTransform)(e,t,n,a,{argumentErrors:!!T.argumentErrors,returnType:T.returnType,isTypeIncomplete:!!T.isTypeIncomplete});T.returnType=r.returnType,r.isTypeIncomplete&&(T.isTypeIncomplete=!0),r.argumentErrors&&(T.argumentErrors=!0),v=!0}return v||n.forEach((t=>{t.valueExpression&&!e.isSpeculativeModeInUse(t.valueExpression)&&e.getTypeOfExpression(t.valueExpression)})),T},t.createFunctionFromConstructor=function(e,t,n=void 0,a=0){const r=function(e,t,n){const a=t.details.effectiveMetaclass;if(!a||!(0,u.isClass)(a))return;const r=(0,c.lookUpClassMember)(a,"__call__",536);if(!r)return;const s=e.getTypeOfMember(r);if(!(0,u.isFunction)(s)&&!(0,u.isOverloadedFunction)(s))return;const i=e.bindFunctionToClassOrObject(t,s,r&&(0,u.isInstantiableClass)(r.classType)?r.classType:void 0,!1,u.ClassType.cloneAsInstantiable(t),void 0,n);if(!i)return;let o=!1;return(0,c.doForEachSignature)(i,(n=>{if(n.details.declaredReturnType){const a=u.FunctionType.getSpecializedReturnType(n);a&&b(e,t,a)&&(o=!0)}})),o?i:void 0}(e,t,a);if(r)return r;const s=function(e,t,n,a){const r=(0,c.lookUpClassMember)(t,"__new__",532);if(!r)return;const s=e.getTypeOfMember(r),i=s=>{const i=s.details.parameters.some(((e,n)=>{if(0===n||!e.name)return!1;const a=u.FunctionType.getEffectiveParameterType(s,n);return(0,c.getTypeVarArgumentsRecursive)(a).some((e=>e.scopeId===(0,c.getTypeVarScopeId)(t)))})),o=e.bindFunctionToClassOrObject(i?(0,c.selfSpecializeClass)(t):t,s,r&&(0,u.isInstantiableClass)(r.classType)?r.classType:void 0,!0,n,void 0,a);if(!o)return;const l=u.FunctionType.clone(o);return l.details.typeVarScopeId=s.details.typeVarScopeId,!l.details.docString&&t.details.docString&&(l.details.docString=t.details.docString),l.details.flags&=-6,l.details.constructorTypeVarScopeId=(0,c.getTypeVarScopeId)(t),l};if((0,u.isFunction)(s))return i(s);if(!(0,u.isOverloadedFunction)(s))return;const o=[];if(s.overloads.forEach((e=>{const t=i(e);t&&o.push(t)})),0===o.length)return;if(1===o.length)return o[0];return u.OverloadedFunctionType.create(o)}(e,t,n,a);if(s){let n=!1;if((0,c.doForEachSignature)(s,(a=>{const r=u.FunctionType.getSpecializedReturnType(a);r&&_(e,t,r)&&(n=!0)})),n)return s}const i=function(e,t,n,a){const r=(0,c.lookUpClassMember)(t,"__init__",532);if(!r)return;const s=e.getTypeOfMember(r),i=u.ClassType.cloneAsInstance(t);function o(s){var o,l;const p=e.bindFunctionToClassOrObject(i,s,r&&(0,u.isInstantiableClass)(r.classType)?r.classType:void 0,void 0,n,void 0,a);if(!p)return;const d=u.FunctionType.clone(p);return d.details.declaredReturnType=null!==(l=null!==(o=p.strippedFirstParamType)&&void 0!==o?o:n)&&void 0!==l?l:i,d.details.name="",d.details.fullName="",d.specializedTypes&&(d.specializedTypes.returnType=null!=n?n:i),!d.details.docString&&t.details.docString&&(d.details.docString=t.details.docString),d.details.flags&=-5,d.details.constructorTypeVarScopeId=(0,c.getTypeVarScopeId)(t),d}if((0,u.isFunction)(s))return o(s);if(!(0,u.isOverloadedFunction)(s))return;const l=[];if(s.overloads.forEach((e=>{const t=o(e);t&&l.push(t)})),0===l.length)return;if(1===l.length)return l[0];return u.OverloadedFunctionType.create(l)}(e,t,n,a);return s&&i?(0,u.combineTypes)([i,s]):s||i?null!=s?s:i:null!=s?s:function(e){const t=u.FunctionType.createSynthesizedInstance("__new__",0);t.details.declaredReturnType=u.ClassType.cloneAsInstance(e),(e.includeSubclasses||u.ClassType.isProtocolClass(e))&&u.FunctionType.addDefaultParameters(t);!t.details.docString&&e.details.docString&&(t.details.docString=e.details.docString);return t}(t)}},33215:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.applyDataClassDecorator=t.applyDataClassDefaultBehaviors=t.applyDataClassClassBehaviorOverrides=t.getDataclassDecoratorBehaviors=t.validateDataClassTransformDecorator=t.synthesizeDataClassMethods=void 0;const i=n(83181),o=n(72484),l=n(97652),p=n(95960),c=s(n(9316)),d=n(9316),u=n(90272),m=n(37356),y=n(28340),g=n(21084),h=n(52328),f=n(80944),T=n(8312),v=n(808),b=n(97632);function _(e,t,n,a){const r=n.type;let s;if((0,T.isFunction)(r))s=r;else if((0,T.isOverloadedFunction)(r))s=e.getBestOverloadForArguments(t,{type:r,isIncomplete:n.isIncomplete},t.arguments);else if((0,T.isInstantiableClass)(r)){const n=(0,u.getBoundInitMethod)(e,t,r);n&&((0,T.isFunction)(n.type)?s=n.type:(0,T.isOverloadedFunction)(n.type)&&(s=e.getBestOverloadForArguments(t,{type:n.type},t.arguments)))}if(s){const e=s.details.parameters.find((e=>e.name===a));if(e){if(e.hasDeclaredType&&(0,T.isClass)(e.type)&&"boolean"==typeof e.type.literalValue)return e.type.literalValue;if(e.defaultValueExpression&&e.defaultType&&(0,T.isClass)(e.defaultType)&&"boolean"==typeof e.defaultType.literalValue)return e.defaultType.literalValue}}}function C(e,t){let n;return(0,T.isFunction)(e)?n=e.details.fullName:(0,T.isOverloadedFunction)(e)?n=e.overloads[0].details.fullName:(0,T.isInstantiableClass)(e)&&(n=e.details.fullName),!!n&&t.some((e=>e===n))}function I(e,t,n,a,r){switch(a){case"order":!0===r?n.details.flags|=64:!1===r&&(n.details.flags&=-65);break;case"kw_only":!1===r?n.details.flags&=-4194305:!0===r&&(n.details.flags|=4194304);break;case"frozen":{let a=!1,s=!1;!1===r?n.details.flags&=-9:!0===r&&(n.details.flags|=8),n.details.baseClasses.forEach((e=>{(0,T.isInstantiableClass)(e)&&T.ClassType.isDataClass(e)&&(T.ClassType.isFrozenDataClass(e)?s=!0:e.details.classDataClassTransform||e.details.declaredMetaclass&&(0,T.isInstantiableClass)(e.details.declaredMetaclass)&&e.details.declaredMetaclass.details.classDataClassTransform||(a=!0))})),r?a&&e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassBaseClassNotFrozen(),t):s&&e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassBaseClassFrozen(),t);break}case"init":!1===r?n.details.flags|=16:!0===r&&(n.details.flags&=-17);break;case"eq":!1===r?n.details.flags|=32:!0===r&&(n.details.flags&=-33);break;case"slots":!0===r?(n.details.flags|=67108864,n.details.localSlotsNames&&e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassSlotsOverwrite(),t)):!1===r&&(n.details.flags&=-67108865);break;case"hash":case"unsafe_hash":!0===r&&(n.details.flags|=134217728)}}function k(e,t,n,a,r){let s=!1;a.forEach((t=>{t.valueExpression&&t.name&&(!function(e,t,n,a,r){const s=c.getFileInfo(t);I(e,t,n,a,(0,g.evaluateStaticBoolExpression)(r,s.executionEnvironment,s.definedConstants))}(e,t.name,n,t.name.value,t.valueExpression),"frozen"===t.name.value&&(s=!0))})),s||I(e,t,n,"frozen",r.frozen)}function w(e,t){e.details.dataClassBehaviors=t,e.details.flags|=4,t.keywordOnlyParams&&(e.details.flags|=4194304),t.generateEq||(e.details.flags|=32),t.generateOrder&&(e.details.flags|=64),t.frozen&&(e.details.flags|=8)}t.synthesizeDataClassMethods=function(e,t,n,a,r,s){var I;(0,i.assert)(T.ClassType.isDataClass(n));const k=(0,v.synthesizeTypeVarForSelfCls)(n,!0),w=T.FunctionType.createSynthesizedInstance("__new__",1);w.details.constructorTypeVarScopeId=n.details.typeVarScopeId;const S=T.FunctionType.createSynthesizedInstance("__init__");S.details.constructorTypeVarScopeId=n.details.typeVarScopeId,T.FunctionType.addParameter(w,{category:0,name:"cls",type:k,hasDeclaredType:!0}),T.FunctionType.addDefaultParameters(w),w.details.declaredReturnType=(0,v.convertToInstance)(k);const A={category:0,name:"self",type:(0,v.synthesizeTypeVarForSelfCls)(n,!1),hasDeclaredType:!0};T.FunctionType.addParameter(S,A),S.details.declaredReturnType=e.getNoneType();const x=[],P=[],N=function(e,t){let n=!0;return T.ClassType.getReverseMro(e).forEach((e=>{if((0,T.isInstantiableClass)(e)){const n=(0,v.buildTypeVarContextFromSpecializedClass)(e);T.ClassType.getDataClassEntries(e).forEach((e=>{const a=t.findIndex((t=>t.name===e.name)),r={...e};r.type=(0,v.applySolvedTypeVars)(r.type,n),e.isClassVar?a>=0&&t.splice(a,1):a>=0?t[a]=r:t.push(r)}))}else n=!1})),n}(n,P);N||T.FunctionType.addDefaultParameters(S);const D=[];let F=!1;T.ClassType.getSymbolTable(n).forEach(((r,s)=>{var i,o,d,u,m,h,f;if(r.isIgnoredForProtocolMatch())return;if("__hash__"===s)return;const b=r.getTypedDeclarations().find((e=>{if(1!==e.type)return!1;const t=(0,y.getEnclosingClassOrFunction)(e.node);return!(!t||10!==t.nodeType)}));if(b){let r,s,y,f=b.node;for(;f&&3!==f.nodeType;){if(54===f.nodeType){3===(null===(i=f.parent)||void 0===i?void 0:i.nodeType)&&(f=f.parent);break}f=f.parent}if(!f)return;let I,k,w=!1,S=T.ClassType.isDataClassKeywordOnlyParams(n)||F,A=!0;if(3===f.nodeType){if(54===f.leftExpression.nodeType&&38===f.leftExpression.valueExpression.nodeType){r=f.leftExpression.valueExpression;const t=f;y=()=>e.getTypeOfAnnotation(t.leftExpression.typeAnnotation,{isVariableAnnotation:!0,allowFinal:!0,allowClassVar:!0})}if(w=!0,I=f.rightExpression,9===f.rightExpression.nodeType){const a=e.getTypeOfExpression(f.rightExpression.leftExpression,2);if(C(a.type,(null===(o=n.details.dataClassBehaviors)||void 0===o?void 0:o.fieldDescriptorNames)||[])){const n=f.rightExpression.arguments.find((e=>{var t;return"init"===(null===(t=e.name)||void 0===t?void 0:t.value)}));if(n&&n.valueExpression){const e=c.getFileInfo(t);A=null!==(d=(0,g.evaluateStaticBoolExpression)(n.valueExpression,e.executionEnvironment,e.definedConstants))&&void 0!==d?d:A}else A=null!==(u=_(e,f.rightExpression,a,"init"))&&void 0!==u?u:A;const r=f.rightExpression.arguments.find((e=>{var t;return"kw_only"===(null===(t=e.name)||void 0===t?void 0:t.value)}));if(r&&r.valueExpression){const e=c.getFileInfo(t);S=null!==(m=(0,g.evaluateStaticBoolExpression)(r.valueExpression,e.executionEnvironment,e.definedConstants))&&void 0!==m?m:S}else S=null!==(h=_(e,f.rightExpression,a,"kw_only"))&&void 0!==h?h:S;const i=f.rightExpression.arguments.find((e=>{var t,n,a;return"default"===(null===(t=e.name)||void 0===t?void 0:t.value)||"default_factory"===(null===(n=e.name)||void 0===n?void 0:n.value)||"factory"===(null===(a=e.name)||void 0===a?void 0:a.value)}));w=!!i,(null==i?void 0:i.valueExpression)&&(I=i.valueExpression);const o=f.rightExpression.arguments.find((e=>{var t;return"alias"===(null===(t=e.name)||void 0===t?void 0:t.value)}));if(o){const t=e.getTypeOfExpression(o.valueExpression).type;(0,T.isClassInstance)(t)&&T.ClassType.isBuiltIn(t,"str")&&(0,v.isLiteralType)(t)&&(s=t.literalValue)}const l=f.rightExpression.arguments.find((e=>{var t;return"converter"===(null===(t=e.name)||void 0===t?void 0:t.value)}));l&&l.valueExpression&&(k=l)}}}else if(54===f.nodeType&&38===f.valueExpression.nodeType){r=f.valueExpression;const t=f;if(y=()=>e.getTypeOfAnnotation(t.typeAnnotation,{isVariableAnnotation:!0,allowFinal:!0,allowClassVar:!0}),"_"===f.valueExpression.value){const e=y();(0,T.isClassInstance)(e)&&T.ClassType.isBuiltIn(e,"KW_ONLY")&&(F=!0,r=void 0,y=void 0)}}if(r&&y){const t=r.value,i=T.ClassType.getSymbolTable(n).get(t);if((null==i?void 0:i.isClassVar())&&!(null==i?void 0:i.isFinalVarInClassBody())){const e=P.findIndex((e=>e.name===t));e>=0&&P.splice(e,1);const a={name:t,classType:n,alias:s,isKeywordOnly:!1,hasDefault:w,defaultValueExpression:I,includeInInit:A,nameNode:r,type:T.UnknownType.create(),isClassVar:!0,converter:k};x.push(a)}else{const i={name:t,classType:n,alias:s,isKeywordOnly:S,hasDefault:w,defaultValueExpression:I,includeInInit:A,nameNode:r,type:T.UnknownType.create(),isClassVar:!1,converter:k};D.push({entry:i,evaluator:y});let o=x.findIndex((e=>e.name===t));if(o>=0?x[o]=i:x.push(i),o=P.findIndex((e=>e.name===t)),o>=0){const n=P[o];!i.hasDefault&&n.hasDefault&&n.includeInInit&&(i.hasDefault=!0,i.defaultValueExpression=n.defaultValueExpression,w=!0,e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassFieldInheritedDefault().format({fieldName:t}),r)),P[o]=i}else P.push(i),o=P.length-1;if(!S&&A&&!a&&!w){const t=P.findIndex((e=>e.hasDefault&&e.includeInInit&&!e.isKeywordOnly));t>=0&&t<o&&e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassFieldWithDefault(),r)}}}}else{const t=r.getDeclarations();if(0===t.length)return;const a=t[t.length-1];if(1!==a.type)return;const s=a.node.parent;if(!s||3!==s.nodeType)return;if(9===s.rightExpression.nodeType){C(e.getTypeOfExpression(s.rightExpression.leftExpression,2).type,(null===(f=n.details.dataClassBehaviors)||void 0===f?void 0:f.fieldDescriptorNames)||[])&&e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassFieldWithoutAnnotation(),s.rightExpression)}}})),n.details.dataClassEntries=x,D.forEach((e=>{e.entry.type=e.evaluator()}));const E=T.ClassType.getSymbolTable(n),M=[];a||r||(N&&(P.forEach((a=>{if(a.includeInInit){let r=a.type;if(a.classType!==n&&(0,v.requiresSpecialization)(r)){const e=new b.TypeVarContext((0,v.getTypeVarScopeId)(a.classType));(0,v.populateTypeVarContextForSelfType)(e,a.classType,n),r=(0,v.applySolvedTypeVars)(r,e)}if(r=function(e,t){if(!(0,T.isClassInstance)(t)||(0,v.isMetaclassInstance)(t))return t;const n=e.getBoundMagicMethod(t,"__set__");if(!n)return t;if(!(0,T.isFunction)(n))return t;return T.FunctionType.getEffectiveParameterType(n,1)}(e,r),a.converter){const n=r;r=function(e,t,n,a){var r;const s=function(e,t){if((0,T.isFunction)(t)||(0,T.isOverloadedFunction)(t))return t;if((0,T.isClassInstance)(t))return e.getBoundMagicMethod(t,"__call__");if((0,T.isInstantiableClass)(t)){let n=(0,u.createFunctionFromConstructor)(e,t);if(n&&((0,T.isUnion)(n)&&(n=n.subtypes[0]),(0,T.isFunction)(n)||(0,T.isOverloadedFunction)(n)))return n}return}(e,e.getTypeOfExpression(t.valueExpression).type);if(!s)return n;const i=T.TypeVarType.createInstance("__converterInput");i.scopeId=(0,y.getScopeIdForNode)(t);const c=T.FunctionType.createSynthesizedInstance("");if(c.details.typeVarScopeId=i.scopeId,c.details.declaredReturnType=n,T.FunctionType.addParameter(c,{category:0,name:"__input",type:i,hasDeclaredType:!0}),T.FunctionType.addPositionOnlyParameterSeparator(c),(0,T.isFunction)(s)){const d=new b.TypeVarContext(i.scopeId),u=new o.DiagnosticAddendum;if(e.assignType(c,s,u,d)){return(0,v.applySolvedTypeVars)(i,d,{unknownIfNotFound:!0})}e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassConverterFunction().format({argType:e.printType(s),fieldType:e.printType(n),fieldName:a})+u.getString(),t,null!==(r=u.getEffectiveTextRange())&&void 0!==r?r:t)}else{const r=[],d=new o.DiagnosticAddendum;if(T.OverloadedFunctionType.getOverloads(s).forEach((t=>{const n=new b.TypeVarContext(i.scopeId);if(e.assignType(c,t,d,n)){const e=(0,v.applySolvedTypeVars)(i,n,{unknownIfNotFound:!0});r.push(e)}})),r.length>0)return(0,T.combineTypes)(r);e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassConverterOverloads().format({funcName:s.overloads[0].details.name||"<anonymous function>",fieldType:e.printType(n),fieldName:a})+d.getString(),t)}return n}(e,a.converter,r,a.name),E.set(a.name,function(e,t,n,a,r,s){const i=(0,d.getFileInfo)(t),o=e.getBuiltInType(t,"type"),l=`__converterDescriptor_${a}`,p=T.ClassType.createInstantiable(l,(0,y.getClassFullName)(n,i.moduleName,l),i.moduleName,i.fileUri,0,(0,y.getTypeSourceId)(n),void 0,(0,T.isInstantiableClass)(o)?o:T.UnknownType.create());p.details.baseClasses.push(e.getBuiltInType(t,"object")),(0,v.computeMroLinearization)(p);const c=T.ClassType.getSymbolTable(p),u=(0,v.synthesizeTypeVarForSelfCls)(p,!1),m=T.FunctionType.createSynthesizedInstance("__set__");T.FunctionType.addParameter(m,{category:0,name:"self",type:u,hasDeclaredType:!0}),T.FunctionType.addParameter(m,{category:0,name:"obj",type:T.AnyType.create(),hasDeclaredType:!0}),T.FunctionType.addParameter(m,{category:0,name:"value",type:s,hasDeclaredType:!0}),m.details.declaredReturnType=e.getNoneType();const g=h.Symbol.createWithType(4,m);c.set("__set__",g);const f=T.FunctionType.createSynthesizedInstance("__get__");T.FunctionType.addParameter(f,{category:0,name:"self",type:u,hasDeclaredType:!0}),T.FunctionType.addParameter(f,{category:0,name:"obj",type:T.AnyType.create(),hasDeclaredType:!0}),T.FunctionType.addParameter(f,{category:0,name:"objtype",type:T.AnyType.create(),hasDeclaredType:!0}),f.details.declaredReturnType=r;const b=h.Symbol.createWithType(4,f);return c.set("__get__",b),h.Symbol.createWithType(4,T.ClassType.cloneAsInstance(p))}(e,t,a.converter,a.name,n,r))}const s=a.alias||a.name;!a.alias&&a.nameNode&&(0,f.isPrivateName)(a.nameNode.value)&&e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassFieldWithPrivateName(),a.nameNode);const i={category:0,name:s,hasDefault:a.hasDefault,defaultValueExpression:a.defaultValueExpression,type:r,hasDeclaredType:!0};a.isKeywordOnly?M.push(i):T.FunctionType.addParameter(S,i)}})),M.length>0&&(T.FunctionType.addKeywordOnlyParameterSeparator(S),M.forEach((e=>{T.FunctionType.addParameter(S,e)})))),E.set("__init__",h.Symbol.createWithType(4,S)),E.set("__new__",h.Symbol.createWithType(4,w)));const O=e.getBuiltInType(t,"str"),z=e.getBuiltInType(t,"tuple");if(z&&(0,T.isInstantiableClass)(z)&&O&&(0,T.isInstantiableClass)(O)&&!E.has("__match_args__")){const e=[];P.forEach((t=>{t.includeInInit&&!t.isKeywordOnly&&e.push(t.name)}));const t=e.map((e=>({type:T.ClassType.cloneAsInstance(T.ClassType.cloneWithLiteral(O,e)),isUnbounded:!1}))),n=T.ClassType.cloneAsInstance((0,v.specializeTupleClass)(z,t));E.set("__match_args__",h.Symbol.createWithType(4,n))}const V=(n,a)=>{const r=T.FunctionType.createSynthesizedInstance(n);T.FunctionType.addParameter(r,A),T.FunctionType.addParameter(r,{category:0,name:"other",type:a,hasDeclaredType:!0}),r.details.declaredReturnType=e.getBuiltInObject(t,"bool"),E.get(n)||E.set(n,h.Symbol.createWithType(4,r))};if(T.ClassType.isSkipSynthesizedDataClassEq(n)||V("__eq__",e.getBuiltInObject(t,"object")),T.ClassType.isSynthesizedDataclassOrder(n)){const e=T.ClassType.cloneAsInstance(n);["__lt__","__le__","__gt__","__ge__"].forEach((t=>{V(t,e)}))}let U=T.ClassType.isFrozenDataClass(n);const R=!T.ClassType.isSkipSynthesizedDataClassEq(n)&&!T.ClassType.isFrozenDataClass(n);if(s&&(U=!1),T.ClassType.isSynthesizeDataClassUnsafeHash(n)&&(U=!0),U){const n=T.FunctionType.createSynthesizedInstance("__hash__");T.FunctionType.addParameter(n,A),n.details.declaredReturnType=e.getBuiltInObject(t,"int"),E.set("__hash__",h.Symbol.createWithType(4100,n))}else R&&!s&&E.set("__hash__",h.Symbol.createWithType(4100,e.getNoneType()));let L=e.getBuiltInType(t,"dict");if((0,T.isInstantiableClass)(L)&&(L=T.ClassType.cloneAsInstance(T.ClassType.cloneForSpecialization(L,[e.getBuiltInObject(t,"str"),T.AnyType.create()],!0))),E.set("__dataclass_fields__",h.Symbol.createWithType(132,L)),T.ClassType.isGeneratedDataClassSlots(n)&&void 0===n.details.localSlotsNames&&(n.details.localSlotsNames=x.map((e=>e.name))),T.ClassType.isGeneratedDataClassSlots(n)){let n=null!==(I=e.getTypingType(t,"Iterable"))&&void 0!==I?I:T.UnknownType.create();(0,T.isInstantiableClass)(n)&&(n=T.ClassType.cloneAsInstance(T.ClassType.cloneForSpecialization(n,[e.getBuiltInObject(t,"str")],!0))),E.set("__slots__",h.Symbol.createWithType(132,n))}(0,m.updateNamedTupleBaseClass)(n,P.map((e=>e.type)),!0)&&(0,v.computeMroLinearization)(n)},t.validateDataClassTransformDecorator=function(e,t){const n={keywordOnlyParams:!1,generateEq:!0,generateOrder:!1,frozen:!1,fieldDescriptorNames:[]},a=c.getFileInfo(t);return t.arguments.forEach((t=>{if(t.name&&0===t.argumentCategory)switch(t.name.value){case"kw_only_default":{const r=(0,g.evaluateStaticBoolExpression)(t.valueExpression,a.executionEnvironment,a.definedConstants);if(void 0===r)return void e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassTransformExpectedBoolLiteral(),t.valueExpression);n.keywordOnlyParams=r;break}case"eq_default":{const r=(0,g.evaluateStaticBoolExpression)(t.valueExpression,a.executionEnvironment,a.definedConstants);if(void 0===r)return void e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassTransformExpectedBoolLiteral(),t.valueExpression);n.generateEq=r;break}case"order_default":{const r=(0,g.evaluateStaticBoolExpression)(t.valueExpression,a.executionEnvironment,a.definedConstants);if(void 0===r)return void e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassTransformExpectedBoolLiteral(),t.valueExpression);n.generateOrder=r;break}case"frozen_default":{const r=(0,g.evaluateStaticBoolExpression)(t.valueExpression,a.executionEnvironment,a.definedConstants);if(void 0===r)return void e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassTransformExpectedBoolLiteral(),t.valueExpression);n.frozen=r;break}case"field_descriptors":case"field_specifiers":{const a=e.getTypeOfExpression(t.valueExpression).type;if(!(0,T.isClassInstance)(a)||!T.ClassType.isBuiltIn(a,"tuple")||!a.tupleTypeArguments||a.tupleTypeArguments.some((e=>!(0,T.isInstantiableClass)(e.type)&&!(0,T.isFunction)(e.type)&&!(0,T.isOverloadedFunction)(e.type))))return void e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassTransformFieldSpecifier().format({type:e.printType(a)}),t.valueExpression);n.fieldDescriptorNames||(n.fieldDescriptorNames=[]),a.tupleTypeArguments.forEach((e=>{(0,T.isInstantiableClass)(e.type)||(0,T.isFunction)(e.type)?n.fieldDescriptorNames.push(e.type.details.fullName):(0,T.isOverloadedFunction)(e.type)&&n.fieldDescriptorNames.push(e.type.overloads[0].details.fullName)}));break}default:e.addDiagnostic(l.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.dataClassTransformUnknownArgument().format({name:t.name.value}),t.valueExpression)}else e.addDiagnostic(l.DiagnosticRule.reportCallIssue,p.LocMessage.dataClassTransformPositionalParam(),t)})),n},t.getDataclassDecoratorBehaviors=function(e){var t;let n;if((0,T.isFunction)(e)?n=e:(0,T.isOverloadedFunction)(e)&&(n=null!==(t=e.overloads.find((e=>!!e.details.decoratorDataClassBehaviors)))&&void 0!==t?t:e.overloads[0]),n)return n.details.decoratorDataClassBehaviors?n.details.decoratorDataClassBehaviors:"dataclasses.dataclass"===n.details.fullName?{keywordOnlyParams:!1,generateEq:!0,generateOrder:!1,frozen:!1,fieldDescriptorNames:["dataclasses.field","dataclasses.Field"]}:void 0},t.applyDataClassClassBehaviorOverrides=k,t.applyDataClassDefaultBehaviors=w,t.applyDataClassDecorator=function(e,t,n,a,r){var s;w(n,a),k(e,t,n,null!==(s=null==r?void 0:r.arguments)&&void 0!==s?s:[],a)}},65392:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isUnresolvedAliasDeclaration=t.isIntrinsicDeclaration=t.isSpecialBuiltInClassDeclaration=t.isAliasDeclaration=t.isVariableDeclaration=t.isTypeAliasDeclaration=t.isTypeParameterDeclaration=t.isParameterDeclaration=t.isClassDeclaration=t.isFunctionDeclaration=t.UnresolvedModuleMarker=void 0;const a=n(55084);function r(e){return 8===e.type}t.UnresolvedModuleMarker=a.Uri.constant("*** unresolved module ***"),t.isFunctionDeclaration=function(e){return 5===e.type},t.isClassDeclaration=function(e){return 6===e.type},t.isParameterDeclaration=function(e){return 2===e.type},t.isTypeParameterDeclaration=function(e){return 3===e.type},t.isTypeAliasDeclaration=function(e){return 4===e.type},t.isVariableDeclaration=function(e){return 1===e.type},t.isAliasDeclaration=r,t.isSpecialBuiltInClassDeclaration=function(e){return 7===e.type},t.isIntrinsicDeclaration=function(e){return 0===e.type},t.isUnresolvedAliasDeclaration=function(e){return r(e)&&e.uri.equals(t.UnresolvedModuleMarker)}},61340:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.resolveAliasDeclaration=t.createSynthesizedAliasDeclaration=t.getDeclarationsWithUsesLocalNameRemoved=t.isDefinedInFile=t.getNameNodeForDeclaration=t.getNameFromDeclaration=t.areDeclarationsSame=t.hasTypeForDeclaration=void 0;const a=n(55164),r=n(65392),s=n(28340);t.hasTypeForDeclaration=function(e){switch(e.type){case 0:case 6:case 7:case 5:case 3:case 4:return!0;case 2:{if(e.node.typeAnnotation||e.node.typeAnnotationComment)return!0;const t=e.node.parent;if(28===(null==t?void 0:t.nodeType)&&t.functionAnnotationComment&&!t.functionAnnotationComment.isParamListEllipsis){const n=t.functionAnnotationComment.paramTypeAnnotations;return!(t.parameters.length>n.length&&e.node===t.parameters[0])}return!1}case 1:return!!e.typeAnnotationNode;case 8:return!1}},t.areDeclarationsSame=function(e,t,n=!1,a=!1){if(e.type!==t.type)return!1;if(!e.uri.equals(t.uri))return!1;if(!(a&&8===e.type||e.range.start.line===t.range.start.line&&e.range.start.character===t.range.start.character))return!1;if(8===e.type&&8===t.type){if(e.symbolName!==t.symbolName||e.usesLocalName!==t.usesLocalName)return!1;if(n)return!0;if(e.node!==t.node)return!1}return!0},t.getNameFromDeclaration=function(e){var t;switch(e.type){case 8:return e.symbolName;case 6:case 5:case 3:case 4:return e.node.name.value;case 2:return null===(t=e.node.name)||void 0===t?void 0:t.value;case 1:return 38===e.node.nodeType?e.node.value:void 0;case 0:case 7:return 54===e.node.nodeType&&38===e.node.valueExpression.nodeType?e.node.valueExpression.value:void 0}throw new Error("Shouldn't reach here")},t.getNameNodeForDeclaration=function(e){var t,n;switch(e.type){case 8:return 21===e.node.nodeType?null!==(t=e.node.alias)&&void 0!==t?t:e.node.module.nameParts[0]:23===e.node.nodeType?null!==(n=e.node.alias)&&void 0!==n?n:e.node.name:e.node.module.nameParts[0];case 6:case 5:case 3:case 2:case 4:return e.node.name;case 1:return 38===e.node.nodeType?e.node:void 0;case 0:case 7:return}throw new Error("Shouldn't reach here")},t.isDefinedInFile=function(e,t){var n;return(0,r.isAliasDeclaration)(e)?null===(n=(0,s.getFileInfoFromNode)(e.node))||void 0===n?void 0:n.fileUri.equals(t):e.uri.equals(t)},t.getDeclarationsWithUsesLocalNameRemoved=function(e){return e.map((e=>{if(8!==e.type)return e;const t={...e};return t.usesLocalName=!1,t}))},t.createSynthesizedAliasDeclaration=function(e){return{type:8,node:void 0,uri:e,loadSymbolsFromPath:!1,range:(0,a.getEmptyRange)(),implicitImports:new Map,usesLocalName:!1,moduleName:"",isInExceptSuite:!1}},t.resolveAliasDeclaration=function e(t,n,a){let r=n;const s=[];let i,o,l=!1,p=!1;for(;;){if(8!==r.type||!r.symbolName)return{declaration:r,isPrivate:l,privatePyTypedImported:i,privatePyTypedImporter:o};if(!a.resolveLocalNames&&r.usesLocalName)return{declaration:r,isPrivate:l,privatePyTypedImported:i,privatePyTypedImporter:o};let c;!r.uri.isEmpty()&&r.loadSymbolsFromPath&&(c=t(r.uri,{skipFileNeededCheck:a.skipFileNeededCheck}));const d=c?c.symbolTable.get(r.symbolName):void 0;if(!d){if(r.submoduleFallback){if(r.symbolName&&!r.uri.isEmpty()&&8===r.submoduleFallback.type&&!r.submoduleFallback.uri.isEmpty()){if(!t(r.submoduleFallback.uri,{skipFileNeededCheck:a.skipFileNeededCheck,skipParsing:!0}))return}let n=r.submoduleFallback;if(r.symbolName){n={...r.submoduleFallback};let e=n.moduleName;e&&(e=`${e}.`),n.moduleName=`${e}${r.symbolName}`}return e(t,n,a)}return r.isNativeLib?{declaration:void 0,isPrivate:l}:void 0}if(d.isPrivateMember()&&!p&&(l=!0),d.isExternallyHidden()&&!a.allowExternallyHiddenAccess)return;let u=d.getTypedDeclarations();if(u=u.filter((e=>!e.isInExceptSuite)),0===u.length&&(u=d.getDeclarations(),u=u.filter((e=>!e.isInExceptSuite))),0===u.length&&(u=d.getDeclarations()),0===u.length)return;const m=r,y=u.filter((e=>!s.includes(e)));if(r=y.length>0?y[y.length-1]:u[u.length-1],(null==c?void 0:c.isInPyTypedPackage)&&(p?d.isPrivatePyTypedImport()||(i=null!=i?i:null==r?void 0:r.moduleName):(d.isPrivatePyTypedImport()&&(o=null==m?void 0:m.moduleName),p=!0)),s.find((e=>e===r)))return r.uri.equals(n.uri)&&8===r.type&&r.submoduleFallback?e(t,r.submoduleFallback,a):{declaration:n,isPrivate:l,privatePyTypedImported:i,privatePyTypedImporter:o};s.push(r)}}},91720:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.addOverloadsToFunctionType=t.applyClassDecorator=t.applyFunctionDecorator=t.getFunctionInfoFromDecorators=void 0;const a=n(28040),r=n(97652),s=n(95960),i=n(9316),o=n(33215),l=n(74124),p=n(50520),c=n(808),d=n(8312);function u(e,t,n){var a,r;let s=(0,i.getFileInfo)(t).isStubFile?4:0;9!==t.expression.nodeType&&(s|=2);const o=e.getTypeOfExpression(t.expression,s);if((0,d.isInstantiableClass)(o.type)&&d.ClassType.isBuiltIn(o.type,"classmethod")&&(0,c.isProperty)(n))return n;const l=[{argumentCategory:0,typeResult:{type:n}}],p=e.validateCallArguments(t.expression,l,o,void 0,!0);e.setTypeResultForNode(t,{type:null!==(a=p.returnType)&&void 0!==a?a:d.UnknownType.create(),overloadsUsedForCall:p.overloadsUsedForCall,isIncomplete:p.isTypeIncomplete});const u=null!==(r=p.returnType)&&void 0!==r?r:d.UnknownType.create();return!(0,d.isFunction)(u)||u.details.declaredReturnType||u.details.parameters.some(((e,t)=>!(e.name&&!e.hasDeclaredType)||0===e.category&&(0!==t||!e.isTypeInferred)))?(0,c.isPartlyUnknown)(u)&&(0,d.isFunction)(o.type)&&!o.type.details.parameters.find((e=>void 0!==e.typeAnnotation))&&void 0===o.type.details.declaredReturnType?n:u:n}function m(e){if(9===e.expression.nodeType&&e.expression.arguments.length>0&&0===e.expression.arguments[0].argumentCategory&&48===e.expression.arguments[0].valueExpression.nodeType){const t=e.expression.arguments[0].valueExpression.strings.map((e=>e.value)).join("");return(0,l.convertDocStringToPlainText)(t)}return""}t.getFunctionInfoFromDecorators=function(e,t,n){const a=(0,i.getFileInfo)(t);let r,s=0;if(n){"__new__"===t.name.value&&(s|=1);["__init_subclass__","__class_getitem__"].some((e=>t.name.value===e))&&(s|=2)}for(const i of t.decorators){let t=a.isStubFile?4:0;if(9!==i.expression.nodeType)t|=2;else if(9===i.expression.nodeType){const n=e.getTypeOfExpression(i.expression.leftExpression,2|t).type;(0,c.isBuiltInDeprecatedType)(n)&&(r=m(i))}const o=e.getTypeOfExpression(i.expression,t).type;(0,d.isFunction)(o)?"abstractmethod"===o.details.builtInName?n&&(s|=8):"final"===o.details.builtInName?s|=8192:"override"===o.details.builtInName?s|=262144:"type_check_only"===o.details.builtInName?s|=128:"no_type_check"===o.details.builtInName?s|=524288:"overload"===o.details.builtInName&&(s|=256):(0,d.isInstantiableClass)(o)&&(d.ClassType.isBuiltIn(o,"staticmethod")?n&&(s|=4):d.ClassType.isBuiltIn(o,"classmethod")&&n&&(s|=2)),(0,c.isBuiltInDeprecatedType)(o)&&(r=m(i))}return{flags:s,deprecationMessage:r}},t.applyFunctionDecorator=function(e,t,n,a,r){let s=(0,i.getFileInfo)(a).isStubFile?4:0;9!==a.expression.nodeType&&(s|=2);const l=e.getTypeOfExpression(a.expression,s).type;if(((0,d.isInstantiableClass)(l)&&d.ClassType.isSpecialBuiltIn(l,"overload")||(0,d.isFunction)(l)&&"overload"===l.details.builtInName)&&(0,d.isFunction)(t))return t.details.flags|=256,n.details.flags|=256,t;if(9===a.expression.nodeType){const r=e.getTypeOfExpression(a.expression.leftExpression,2|s).type;if((0,d.isFunction)(r)&&("__dataclass_transform__"===r.details.name||"dataclass_transform"===r.details.builtInName))return n.details.decoratorDataClassBehaviors=(0,o.validateDataClassTransformDecorator)(e,a.expression),t;if((0,c.isBuiltInDeprecatedType)(r))return t}let m=u(e,a,t);if((0,d.isFunction)(l)){if("abstractmethod"===l.details.builtInName)return t;if("type_check_only"===l.details.builtInName)return n.details.flags|=128,t;if(35===a.expression.nodeType){const n=e.getTypeOfExpression(a.expression.leftExpression,2|s).type;if((0,c.isProperty)(n)){const s=a.expression.memberName.value;if("setter"===s)return(0,d.isFunction)(t)?((0,p.validatePropertyMethod)(e,t,a),(0,p.clonePropertyWithSetter)(e,n,t,r)):t;if("deleter"===s)return(0,d.isFunction)(t)?((0,p.validatePropertyMethod)(e,t,a),(0,p.clonePropertyWithDeleter)(e,n,t,r)):t}}}else if((0,d.isInstantiableClass)(l)){if(d.ClassType.isBuiltIn(l))switch(l.details.name){case"classmethod":case"staticmethod":{const e="classmethod"===l.details.name?2:4;if((0,d.isFunction)(t)&&0==(t.details.flags&e)){const n=d.FunctionType.clone(t);return n.details.flags&=-8,n.details.flags|=e,n}return t}}if((0,c.isBuiltInDeprecatedType)(l))return t;if(d.ClassType.isPropertyClass(l)){if((0,d.isFunction)(t))return(0,p.validatePropertyMethod)(e,t,a),(0,p.createProperty)(e,a,l,t);if((0,d.isClassInstance)(t)){const n=e.getBoundMagicMethod(t,"__call__");return n&&(0,d.isFunction)(n)?(0,p.createProperty)(e,a,l,n):d.UnknownType.create()}}}return(0,d.isFunction)(t)&&(0,d.isFunction)(m)&&(m=d.FunctionType.clone(m),d.FunctionType.isOverloaded(t)&&(m.details.flags|=256),m.details.docString||(m.details.docString=t.details.docString)),m},t.applyClassDecorator=function(e,t,n,a){let r=(0,i.getFileInfo)(a).isStubFile?4:0;9!==a.expression.nodeType&&(r|=2);const s=e.getTypeOfExpression(a.expression,r).type;if(9===a.expression.nodeType){const s=e.getTypeOfExpression(a.expression.leftExpression,2|r).type;if((0,d.isFunction)(s)&&("__dataclass_transform__"!==s.details.name&&"dataclass_transform"!==s.details.builtInName||(n.details.classDataClassTransform=(0,o.validateDataClassTransformDecorator)(e,a.expression))),(0,c.isBuiltInDeprecatedType)(s))return n.details.deprecatedMessage=m(a),t}if((0,d.isOverloadedFunction)(s)){const r=(0,o.getDataclassDecoratorBehaviors)(s);if(r)return(0,o.applyDataClassDecorator)(e,a,n,r,void 0),t}else if((0,d.isFunction)(s)){if("final"===s.details.builtInName)return n.details.flags|=8192,t;if("type_check_only"===s.details.builtInName)return n.details.flags|=268435456,t;if("runtime_checkable"===s.details.builtInName)return n.details.flags|=65536,t;let i,l;if(9===a.expression.nodeType){l=a.expression;const t=e.getTypeOfExpression(l.leftExpression,2|r).type;i=(0,o.getDataclassDecoratorBehaviors)(t)}else{const t=e.getTypeOfExpression(a.expression,r).type;i=(0,o.getDataclassDecoratorBehaviors)(t)}if(i)return(0,o.applyDataClassDecorator)(e,a,n,i,l),t}return u(e,a,t)},t.addOverloadsToFunctionType=function(e,t,n){let o;const l=(0,i.getDeclaration)(t);l&&(o=l);const p=e.lookUpSymbolRecursive(t,t.name.value,!1);if(p){const i=p.symbol.getDeclarations(),l=i.findIndex((e=>e===o));if(l>0){for(let t=0;t<l;t++){const n=i[t];5===n.type&&e.getTypeOfFunction(n.node)}let o=[];const p=i[l-1];if(5===p.type){const t=e.getTypeOfFunction(p.node);t&&((0,d.isFunction)(t.decoratedType)?d.FunctionType.isOverloaded(t.decoratedType)&&o.push(t.decoratedType):(0,d.isOverloadedFunction)(t.decoratedType)&&(0,a.appendArray)(o,t.decoratedType.overloads))}if(o.push(n),1===o.length)return o[0];const c=o.find((e=>!d.FunctionType.isOverloaded(e)));(null==c?void 0:c.details.docString)&&(o=o.map((e=>d.FunctionType.isOverloaded(e)&&!e.details.docString?d.FunctionType.cloneWithDocString(e,c.details.docString):e))),c&&void 0!==c.details.deprecatedMessage&&(o=o.map((e=>d.FunctionType.isOverloaded(e)&&void 0===e.details.deprecatedMessage?d.FunctionType.cloneWithDeprecatedMessage(e,c.details.deprecatedMessage):e)));const u=d.OverloadedFunctionType.create(o),m=o[o.length-2];return d.FunctionType.isAbstractMethod(m)!==d.FunctionType.isAbstractMethod(n)&&e.addDiagnostic(r.DiagnosticRule.reportInconsistentOverload,s.LocMessage.overloadAbstractMismatch().format({name:t.name.value}),t.name),u}}return n}},27884:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.deprecatedSpecialForms=t.deprecatedAliases=void 0;const a=n(61328);t.deprecatedAliases=new Map([["Tuple",{version:a.pythonVersion3_9,fullName:"builtins.tuple",replacementText:"tuple"}],["List",{version:a.pythonVersion3_9,fullName:"builtins.list",replacementText:"list"}],["Dict",{version:a.pythonVersion3_9,fullName:"builtins.dict",replacementText:"dict"}],["Set",{version:a.pythonVersion3_9,fullName:"builtins.set",replacementText:"set"}],["FrozenSet",{version:a.pythonVersion3_9,fullName:"builtins.frozenset",replacementText:"frozenset"}],["Type",{version:a.pythonVersion3_9,fullName:"builtins.type",replacementText:"type"}],["Deque",{version:a.pythonVersion3_9,fullName:"collections.deque",replacementText:"collections.deque"}],["DefaultDict",{version:a.pythonVersion3_9,fullName:"collections.defaultdict",replacementText:"collections.defaultdict"}],["OrderedDict",{version:a.pythonVersion3_9,fullName:"collections.OrderedDict",replacementText:"collections.OrderedDict",typingImportOnly:!0}],["Counter",{version:a.pythonVersion3_9,fullName:"collections.Counter",replacementText:"collections.Counter",typingImportOnly:!0}],["ChainMap",{version:a.pythonVersion3_9,fullName:"collections.ChainMap",replacementText:"collections.ChainMap",typingImportOnly:!0}],["Awaitable",{version:a.pythonVersion3_9,fullName:"typing.Awaitable",replacementText:"collections.abc.Awaitable",typingImportOnly:!0}],["Coroutine",{version:a.pythonVersion3_9,fullName:"typing.Coroutine",replacementText:"collections.abc.Coroutine",typingImportOnly:!0}],["AsyncIterable",{version:a.pythonVersion3_9,fullName:"typing.AsyncIterable",replacementText:"collections.abc.AsyncIterable",typingImportOnly:!0}],["AsyncIterator",{version:a.pythonVersion3_9,fullName:"typing.AsyncIterator",replacementText:"collections.abc.AsyncIterator",typingImportOnly:!0}],["AsyncGenerator",{version:a.pythonVersion3_9,fullName:"typing.AsyncGenerator",replacementText:"collections.abc.AsyncGenerator",typingImportOnly:!0}],["Iterable",{version:a.pythonVersion3_9,fullName:"typing.Iterable",replacementText:"collections.abc.Iterable",typingImportOnly:!0}],["Iterator",{version:a.pythonVersion3_9,fullName:"typing.Iterator",replacementText:"collections.abc.Iterator",typingImportOnly:!0}],["Generator",{version:a.pythonVersion3_9,fullName:"typing.Generator",replacementText:"collections.abc.Generator",typingImportOnly:!0}],["Reversible",{version:a.pythonVersion3_9,fullName:"typing.Reversible",replacementText:"collections.abc.Reversible",typingImportOnly:!0}],["Container",{version:a.pythonVersion3_9,fullName:"typing.Container",replacementText:"collections.abc.Container",typingImportOnly:!0}],["Collection",{version:a.pythonVersion3_9,fullName:"typing.Collection",replacementText:"collections.abc.Collection",typingImportOnly:!0}],["AbstractSet",{version:a.pythonVersion3_9,fullName:"typing.AbstractSet",replacementText:"collections.abc.Set"}],["MutableSet",{version:a.pythonVersion3_9,fullName:"typing.MutableSet",replacementText:"collections.abc.MutableSet",typingImportOnly:!0}],["Mapping",{version:a.pythonVersion3_9,fullName:"typing.Mapping",replacementText:"collections.abc.Mapping",typingImportOnly:!0}],["MutableMapping",{version:a.pythonVersion3_9,fullName:"typing.MutableMapping",replacementText:"collections.abc.MutableMapping",typingImportOnly:!0}],["Sequence",{version:a.pythonVersion3_9,fullName:"typing.Sequence",replacementText:"collections.abc.Sequence",typingImportOnly:!0}],["MutableSequence",{version:a.pythonVersion3_9,fullName:"typing.MutableSequence",replacementText:"collections.abc.MutableSequence",typingImportOnly:!0}],["ByteString",{version:a.pythonVersion3_9,fullName:"typing.ByteString",replacementText:"collections.abc.ByteString",typingImportOnly:!0}],["MappingView",{version:a.pythonVersion3_9,fullName:"typing.MappingView",replacementText:"collections.abc.MappingView",typingImportOnly:!0}],["KeysView",{version:a.pythonVersion3_9,fullName:"typing.KeysView",replacementText:"collections.abc.KeysView",typingImportOnly:!0}],["ItemsView",{version:a.pythonVersion3_9,fullName:"typing.ItemsView",replacementText:"collections.abc.ItemsView",typingImportOnly:!0}],["ValuesView",{version:a.pythonVersion3_9,fullName:"typing.ValuesView",replacementText:"collections.abc.ValuesView",typingImportOnly:!0}],["ContextManager",{version:a.pythonVersion3_9,fullName:"typing.ContextManager",replacementText:"contextlib.AbstractContextManager"}],["AsyncContextManager",{version:a.pythonVersion3_9,fullName:"typing.AsyncContextManager",replacementText:"contextlib.AbstractAsyncContextManager"}],["Pattern",{version:a.pythonVersion3_9,fullName:"re.Pattern",replacementText:"re.Pattern",typingImportOnly:!0}],["Match",{version:a.pythonVersion3_9,fullName:"re.Match",replacementText:"re.Match",typingImportOnly:!0}]]),t.deprecatedSpecialForms=new Map([["Optional",{version:a.pythonVersion3_10,fullName:"typing.Optional",replacementText:"| None"}],["Union",{version:a.pythonVersion3_10,fullName:"typing.Union",replacementText:"|"}],["Callable",{version:a.pythonVersion3_9,fullName:"typing.Callable",replacementText:"collections.abc.Callable",typingImportOnly:!0}]])},74124:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertDocStringToPlainText=t.convertDocStringToMarkdown=void 0;const a=n(99216);t.convertDocStringToMarkdown=function(e){return new E(e).convert()},t.convertDocStringToPlainText=function(e){const t=(0,a.cleanAndSplitDocString)(e),n=[];for(const e of t){const t=n.length>0?n[n.length-1]:void 0;O(e)&&O(t)||n.push(e)}return n.join("\n").trimEnd()};const r=/\S|$/,s=/\S/,i=/^\s*~~~+$/,o=/^\s*\+\+\++$/,l=/^\s*===+\s+===+$/,p=/^\s*---+\s+---+$/,c=/^(\s*)-\s/,d=/^(\s*)\*\s/,u=/^(\s*)\d+\.\s/,m=/^(\s+\* )(.*)$/,y=/^\s*\.\. /,g=/^\s*\.\.\s+(.*)::\s*(.*)$/,h=/ *>>> /,f=/^\s*:(param|arg|type|return|rtype|raise|except|var|ivar|cvar|copyright|license)/,T=/^\.[\s\t]+(@\w)/gm,v=/^(\.\s{3})|^(\.)/,b=[{exp:/^\s*=+(\s+=+)+$/,replacement:"="},{exp:/^\s*-+(\s+-+)+$/,replacement:"-"},{exp:/^\s*~+(\s+-+)+$/,replacement:"~"},{exp:/^\s*\++(\s+\++)+$/,replacement:"+"}],_=/\s/g,C=/``/g,I=/~/g,k=/\+/g,w=/(?<!\\)([_*~[\]])/g,S=/(\[.*\]\(.*\))/g,A=/^\s*(?<block>`{3}(?!`)|~{3}(?!~))(\w*)/,x=/^\s*(?<block>`{3}(?!`)|~{3}(?!~))/,P=[{exp:/</g,replacement:"&lt;"},{exp:/>/g,replacement:"&gt;"}],N="  \n",D=/^\s*::$/,F=[{exp:/\s+::$/g,replacement:""},{exp:/(\S)\s*::$/g,replacement:"$1:"},{exp:/:[\w_\-+:.]+:`/g,replacement:"`"},{exp:/`:[\w_\-+:.]+:/g,replacement:"`"}];class E{constructor(e){this._builder="",this._skipAppendEmptyLine=!0,this._insideInlineCode=!1,this._appendDirectiveBlock=!1,this._stateStack=[],this._lineNum=0,this._blockIndent=0,this._state=this._parseText,this._input=e,this._lines=(0,a.cleanAndSplitDocString)(e)}convert(){for(T.test(this._input)&&(this._lines=this._lines.map((e=>e.replace(v,""))));void 0!==this._currentLineOrUndefined();){const e=this._state,t=this._lineNum;if(this._state(),this._state===e&&this._lineNum===t)break}return this._state===this._parseBacktickBlock||this._state===this._parseDocTest||this._state===this._parseLiteralBlock?this._trimOutputAndAppendLine(this._lastBacktickString||"```"):this._insideInlineCode&&this._trimOutputAndAppendLine("`",!0),this._builder.trim()}_eatLine(){this._lineNum++}_currentLineOrUndefined(){return this._lineNum<this._lines.length?this._lines[this._lineNum]:void 0}_currentLine(){return this._currentLineOrUndefined()||""}_currentIndent(){return M(this._currentLine())}_prevIndent(){var e;return M(null!==(e=this._lineAt(this._lineNum-1))&&void 0!==e?e:"")}_lineAt(e){return e<this._lines.length?this._lines[e]:void 0}_nextBlockIndent(){return M(this._lines.slice(this._lineNum+1).find((e=>!O(e)))||"")}_currentLineIsOutsideBlock(){return this._currentIndent()<this._blockIndent}_currentLineWithinBlock(){return this._currentLine().substr(this._blockIndent)}_pushAndSetState(e){this._state===this._parseText&&(this._insideInlineCode=!1),this._stateStack.push(this._state),this._state=e}_popState(){this._state=this._stateStack.splice(0,1)[0],this._state===this._parseText&&(this._insideInlineCode=!1)}_parseText(){if(O(this._currentLineOrUndefined()))return void(this._state=this._parseEmpty);if(this._beginBacktickBlock())return;if(this._beginLiteralBlock())return;if(this._beginDocTest())return;if(this._beginDirective())return;if(this._beginList())return;if(this._beginFieldList())return;if(this._beginTableBlock())return;const e=this._formatPlainTextIndent(this._currentLine());this._appendTextLine(e),this._eatLine()}_formatPlainTextIndent(e){const t=this._lineAt(this._lineNum-1),n=this._prevIndent(),a=this._currentIndent();return!(a>n)||O(t)||this._builder.endsWith(N)||this._builder.endsWith("\n\n")||z(t)||(this._builder=this._builder.slice(0,-1)+N),n>a&&!O(t)&&!this._builder.endsWith(N)&&!this._builder.endsWith("\n\n")&&(this._builder=this._builder.slice(0,-1)+N),e=0===n||this._builder.endsWith(N)||this._builder.endsWith("\n\n")?this._convertIndent(e):e.trimStart()}_convertIndent(e){return e=e.replace(/^([ \t]+)(.+)$/g,((e,t,n)=>"&nbsp;".repeat(t.length)+n))}_escapeHtml(e){return P.forEach((t=>{e=e.replace(t.exp,t.replacement)})),e}_appendTextLine(e){const t=(e=this._preprocessTextLine(e)).split("`");for(let e=0;e<t.length;e++){let n=t[e];if(e>0&&(this._insideInlineCode=!this._insideInlineCode,this._append("`")),this._insideInlineCode){this._append(n);continue}if(n=this._escapeHtml(n),0===e){if(1===t.length){for(const e of b)if(e.exp.test(n)){n=n.replace(_,e.replacement);break}if(i.test(n)){this._append(n.replace(I,"-"));continue}if(o.test(n)){this._append(n.replace(k,"-"));continue}}const e=m.exec(n);null!==e&&3===e.length&&(this._append(e[1]),n=e[2])}n.split(S).forEach((e=>{S.test(e)?this._append(e):this._append(e.replace(w,"\\$1"))}))}this._builder+="\n"}_preprocessTextLine(e){return D.test(e)?"":(F.forEach((t=>e=e.replace(t.exp,t.replacement))),e=e.replace(C,"`"))}_parseEmpty(){if(O(this._currentLineOrUndefined()))return this._appendLine(),void this._eatLine();this._state=this._parseText}_beginMinIndentCodeBlock(e){this._appendLine("```"),this._pushAndSetState(e),this._blockIndent=this._currentIndent()}_beginBacktickBlock(){const e=this._currentLine().match(A);return null!==e&&(this._blockIndent=this._currentIndent(),this._lastBacktickString=e[1],this._appendLine(e[1]+e[2]),this._pushAndSetState(this._parseBacktickBlock),this._eatLine(),!0)}_parseBacktickBlock(){if(x.test(this._currentLine())&&this._currentIndent()===this._blockIndent){const e=this._currentLine().match(x);this._lastBacktickString=e?e[1]:"```",this._appendLine(this._lastBacktickString),this._appendLine(),this._popState()}else this._appendLine(this._currentLine());this._eatLine()}_beginDocTest(){return!!h.test(this._currentLine())&&(this._beginMinIndentCodeBlock(this._parseDocTest),this._appendLine(this._currentLineWithinBlock()),this._eatLine(),!0)}_parseDocTest(){if(this._currentLineIsOutsideBlock()||O(this._currentLine()))return this._trimOutputAndAppendLine("```"),this._appendLine(),void this._popState();this._appendLine(this._currentLineWithinBlock()),this._eatLine()}_beginLiteralBlock(){const e=this._lineAt(this._lineNum-1);if(void 0===e)return!1;if(!O(e))return!1;let t=this._lineNum-2;for(;t>=0;t--){const e=this._lineAt(t);if(!O(e)){if(e.endsWith("::"))break;return!1}}return!(t<0)&&(0===this._currentIndent()?(this._appendLine("```"),this._pushAndSetState(this._parseLiteralBlockSingleLine),!0):(this._beginMinIndentCodeBlock(this._parseLiteralBlock),!0))}_parseLiteralBlock(){if(O(this._currentLineOrUndefined()))return this._appendLine(),void this._eatLine();const e=this._lineAt(this._lineNum-1);if(this._currentLineIsOutsideBlock()&&O(e))return this._trimOutputAndAppendLine("```"),this._appendLine(),void this._popState();this._appendLine(this._currentLine()),this._eatLine()}_parseLiteralBlockSingleLine(){this._appendLine(this._currentLine()),this._appendLine("```"),this._appendLine(),this._popState(),this._eatLine()}_beginDirective(){return!!y.test(this._currentLine())&&(this._pushAndSetState(this._parseDirective),this._blockIndent=this._nextBlockIndent(),this._appendDirectiveBlock=!1,!0)}_beginFieldList(){if(this._insideInlineCode)return!1;let e=this._currentLine();if(e.startsWith("@"))return this._appendLine(),this._appendTextLine(e),this._eatLine(),!0;const t=!(null==e?void 0:e.endsWith(":"))&&!(null==e?void 0:e.endsWith("::"))&&!!e.match(/.*?\s*:\s*(.+)/gu),n=f.test(e);if(t||n){const t=this._lineAt(this._lineNum-1);return this._builder.endsWith(N)||this._builder.endsWith("\n\n")||z(t)||(this._builder=this._builder.slice(0,-1)+N),e=this._convertIndent(e),this._appendTextLine(e),this._eatLine(),!0}return!1}_beginTableBlock(){if(this._insideInlineCode)return!1;const e=this._currentLine();return!!l.test(e)&&(this._tableState={header:e.trimStart(),inHeader:!0},this._eatLine(),this._pushAndSetState(this._parseTableBlock),!0)}_parseTableBlock(){if(O(this._currentLineOrUndefined())||!this._tableState)return this._tableState=void 0,void this._popState();let e=this._currentLine();if(l.test(e))return this._eatLine(),this._appendLine("\n<br/>\n"),this._popState(),void(this._tableState=void 0);{let t="|";const n=this._tableState.header.split(" "),a=[];if(this._tableState.inHeader){do{let t=0;for(let r=0;r<n.length;r++){const s=n[r].length+1,i=e.slice(t,t+s);void 0===a[r]?a[r]=`${i} `:a[r]=a[r].concat(`<br>${i} `),t+=s}this._eatLine(),e=this._currentLine()}while(!O(this._currentLineOrUndefined())&&!p.test(e)&&!l.test(e));this._tableState.inHeader=!1,a.forEach((e=>{t+=`${e}|`})),this._appendLine(t);const r=e.trimStart().replace(/=/g,"-").replace(" ","|");this._appendLine(`|${r}|`),this._eatLine()}else{let a=0;n.forEach((n=>{const r=n.length+1,s=e.slice(a,a+r);t+=`${s}|`,a+=r})),this._appendLine(t),this._eatLine()}}}_beginList(){if(this._insideInlineCode)return!1;let e=this._currentLine();const t=c.exec(e);if(2===(null==t?void 0:t.length))return t[1].length>=4&&(e=" ".repeat(t[1].length/2)+e.trimLeft()),this._appendTextLine(e),this._eatLine(),this._state!==this._parseList&&this._pushAndSetState(this._parseList),!0;const n=d.exec(e);if(2===(null==n?void 0:n.length))return 0===n[1].length?e=e=" "+e:n[1].length>=4&&(e=" ".repeat(n[1].length/2)+e.trimLeft()),this._appendTextLine(e),this._eatLine(),this._state!==this._parseList&&this._pushAndSetState(this._parseList),!0;const a=u.exec(e);return 2===(null==a?void 0:a.length)&&(this._appendTextLine(e),this._eatLine(),!0)}_parseList(){if(O(this._currentLineOrUndefined())||this._currentLineIsOutsideBlock())return void this._popState();if(!this._beginList()){const e=this._currentLine().trimStart();this._appendTextLine(e),this._eatLine()}}_parseDirective(){const e=g.exec(this._currentLine());if(null!==e&&3===e.length){const t=e[1],n=e[2];if("class"===t)this._appendDirectiveBlock=!0,this._appendLine(),this._appendLine("```"),this._appendLine(n),this._appendLine("```"),this._appendLine();else if("code-block"===t)return this._appendDirectiveBlock=!0,this._beginMinIndentCodeBlock(this._parseLiteralBlock),void this._eatLine()}0===this._blockIndent?this._popState():this._state=this._parseDirectiveBlock,this._eatLine()}_parseDirectiveBlock(){O(this._currentLineOrUndefined())||!this._currentLineIsOutsideBlock()?(this._appendDirectiveBlock&&this._appendTextLine(this._currentLine().trimLeft()),this._eatLine()):this._popState()}_appendLine(e){O(e)?this._skipAppendEmptyLine||(this._builder+="\n",this._skipAppendEmptyLine=!0):(this._builder+=e+"\n",this._skipAppendEmptyLine=!1)}_append(e){this._builder+=e,this._skipAppendEmptyLine=!1}_trimOutputAndAppendLine(e,t=!1){this._builder=this._builder.trimRight(),this._skipAppendEmptyLine=!1,t||this._appendLine(),this._appendLine(e)}}function M(e){return e.search(r)}function O(e){return void 0===e||!s.test(e)}function z(e){var t,n;return void 0!==e&&(null!==(n=null===(t=e.match(/^\s*[#`~=-]{3,}/))||void 0===t?void 0:t.length)&&void 0!==n?n:0)>0}},99216:(e,t)=>{function n(e){const t=e.replace(/\r/g,"").replace(/\t/g,"        ").split("\n");let n=Number.MAX_VALUE;t.forEach(((e,a)=>{if(t.length<=1||a>0){const t=e.trimLeft();t&&(n=Math.min(n,e.length-t.length))}})),n>=Number.MAX_VALUE&&(n=0);const a=[];for(t.forEach(((e,t)=>{0===t?a.push(e.trim()):a.push(e.substr(n).trimRight())}));a.length>0&&0===a[0].length;)a.shift();for(;a.length>0&&0===a[a.length-1].length;)a.pop();return a}Object.defineProperty(t,"__esModule",{value:!0}),t.extractParameterDocumentation=t.cleanAndSplitDocString=t.cleanDocString=void 0,t.cleanDocString=function(e){return n(e).join("\n")},t.cleanAndSplitDocString=n,t.extractParameterDocumentation=function(e,t){if(!e||!t)return;const a=n(e);for(const e of a){const n=e.trim();let a=n.indexOf("@param "+t);if(a>=0)return n.substr(a+7);if(a=n.indexOf(":param "+t),a>=0)return n.substr(a+7);if(a=n.indexOf(t+": "),a>=0)return n.substr(a);if(a=n.indexOf(t+" ("),a>=0)return n.substr(a)}}},62744:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getEnumAutoValueType=t.getTypeOfEnumMember=t.getEnumDeclaredValueType=t.isDeclInEnumClass=t.transformTypeForPossibleEnumClass=t.createEnumType=t.isEnumClassWithMembers=t.isEnumMetaclass=void 0;const a=n(83181),r=n(9316),s=n(28340),i=n(52328),o=n(80944),l=n(46048),p=n(808),c=n(8312);function d(e,t,n=!1){let a;const r=(0,p.lookUpClassMember)(t,"_value_",n?64:0);return r&&r.classType&&(0,c.isClass)(r.classType)&&!c.ClassType.isBuiltIn(r.classType,"Enum")&&(a=e.getTypeOfMember(r)),a}t.isEnumMetaclass=function(e){return e.details.mro.some((e=>(0,c.isClass)(e)&&c.ClassType.isBuiltIn(e,["EnumMeta","EnumType"])))},t.isEnumClassWithMembers=function(e,t){if(!(0,c.isClass)(t)||!c.ClassType.isEnumClass(t))return!1;let n=!1;return c.ClassType.getSymbolTable(t).forEach((a=>{const r=e.getEffectiveTypeOfSymbol(a);(0,c.isClassInstance)(r)&&c.ClassType.isSameGenericClass(r,t)&&(n=!0)})),n},t.createEnumType=function(e,t,n,a){const o=(0,r.getFileInfo)(t);if(0===a.length)return;const l=a[0];if(0!==l.argumentCategory||!l.valueExpression||48!==l.valueExpression.nodeType||1!==l.valueExpression.strings.length||49!==l.valueExpression.strings[0].nodeType)return;const d=l.valueExpression.strings.map((e=>e.value)).join(""),u=c.ClassType.createInstantiable(d,(0,s.getClassFullName)(t,o.moduleName,d),o.moduleName,o.fileUri,1075838976,(0,s.getTypeSourceId)(t),void 0,n.details.effectiveMetaclass);u.details.baseClasses.push(n),(0,p.computeMroLinearization)(u);const m=c.ClassType.getSymbolTable(u);if(m.set("__class__",i.Symbol.createWithType(68,u)),a.length<2)return;const y=a[1];if(0!==y.argumentCategory||!y.valueExpression)return;const g=e.getBuiltInType(t,"int");if(!g||!(0,c.isInstantiableClass)(g))return;const h=c.ClassType.cloneAsInstance(u);if(48===y.valueExpression.nodeType){if(!y.valueExpression.strings.every((e=>49===e.nodeType)))return;const e=y.valueExpression.strings.map((e=>e.value)).join("").trim().split(/[\s,]+/);for(const[t,n]of e.entries()){if(!n)return;const e=c.ClassType.cloneWithLiteral(c.ClassType.cloneAsInstance(g),t+1),a=new c.EnumLiteral(u.details.fullName,u.details.name,n,e),r=i.Symbol.createWithType(4,c.ClassType.cloneWithLiteral(h,a));m.set(n,r)}return u}if(31===y.valueExpression.nodeType||52===y.valueExpression.nodeType){const t=31===y.valueExpression.nodeType?y.valueExpression.entries:y.valueExpression.expressions;if(0===t.length)return;let n=!1;for(const[a,r]of t.entries()){let t,s;if(0===a&&(n=48===r.nodeType),48===r.nodeType){if(!n)return;t=r,s=c.ClassType.cloneWithLiteral(c.ClassType.cloneAsInstance(g),a+1)}else{if(52!==r.nodeType)return;if(n)return;if(2!==r.expressions.length)return;t=r.expressions[0],s=e.getTypeOfExpression(r.expressions[1]).type}if(48!==t.nodeType||1!==t.strings.length||49!==t.strings[0].nodeType)return;const o=t.strings[0].value,l=new c.EnumLiteral(u.details.fullName,u.details.name,o,s),p=i.Symbol.createWithType(4,c.ClassType.cloneWithLiteral(h,l));m.set(o,p)}}if(15===y.valueExpression.nodeType){const t=y.valueExpression.entries;if(0===t.length)return;for(const n of t){if(17!==n.nodeType)return;const t=n.keyExpression,a=e.getTypeOfExpression(n.valueExpression).type;if(48!==t.nodeType||1!==t.strings.length||49!==t.strings[0].nodeType)return;const r=t.strings[0].value,s=new c.EnumLiteral(u.details.fullName,u.details.name,r,a),o=i.Symbol.createWithType(4,c.ClassType.cloneWithLiteral(h,s));m.set(r,o)}}return u},t.transformTypeForPossibleEnumClass=function(e,t,n,a){var i,l,d,u;const m=(0,s.getEnclosingClass)(t,!0);if(!m)return;const y=e.getTypeOfClass(m);if(!y||!c.ClassType.isEnumClass(y.classType))return;let g=!1,h=!1;if(3===t.nodeType&&(0,s.isNodeContainedWithin)(n,t.leftExpression)?(g=!0,(0,s.getParentNodeOfType)(n,52)&&(h=!0)):(0,r.getFileInfo)(n).isStubFile&&54===(null===(i=n.parent)||void 0===i?void 0:i.nodeType)&&n.parent.valueExpression===n&&(g=!0),(0,o.isSingleDunderName)(n.value))return;if("name"===n.value||"value"===n.value)return;const f=a(),T=f.declaredType;let v=f.assignedType,b=null!==(l=null!=T?T:v)&&void 0!==l?l:c.UnknownType.create();if(h&&(b=null!==(u=null===(d=e.getTypeOfIterator({type:b},!1,n,!1))||void 0===d?void 0:d.type)&&void 0!==u?u:c.UnknownType.create()),(0,c.isClassInstance)(b)&&c.ClassType.getSymbolTable(b).get("__get__"))return;if((0,o.isPrivateName)(n.value))return;if(!(0,c.findSubtype)(b,(e=>!(0,c.isFunction)(e)&&!(0,c.isOverloadedFunction)(e))))return;if(v||3!==t.nodeType||(v=e.getTypeOfExpression(t.rightExpression,void 0,(0,p.makeInferenceContext)(T)).type),v&&(0,c.isClassInstance)(v)&&c.ClassType.isBuiltIn(v)){if("enum.nonmember"===v.details.fullName){const t=v.typeArguments&&v.typeArguments.length>0?v.typeArguments[0]:c.UnknownType.create();return T&&e.assignType(T,t)?T:t}"enum.member"===v.details.fullName&&(b=v.typeArguments&&v.typeArguments.length>0?v.typeArguments[0]:c.UnknownType.create(),g=!0)}if((0,c.isClassInstance)(b)&&c.ClassType.isSameGenericClass(b,c.ClassType.cloneAsInstance(y.classType))&&void 0!==b.literalValue)return;if(!g)return;const _=new c.EnumLiteral(y.classType.details.fullName,y.classType.details.name,n.value,b);return c.ClassType.cloneAsInstance(c.ClassType.cloneWithLiteral(y.classType,_))},t.isDeclInEnumClass=function(e,t){const n=(0,s.getEnclosingClass)(t.node,!0);if(!n)return!1;const a=e.getTypeOfClass(n);return!!a&&c.ClassType.isEnumClass(a.classType)},t.getEnumDeclaredValueType=d,t.getTypeOfEnumMember=function(e,t,n,r,s){if(!(0,c.isClassInstance)(n)||!c.ClassType.isEnumClass(n))return;const i=n.literalValue;if("name"===r||"_name_"===r){const r=e.getBuiltInType(t,"str");if(!(0,c.isInstantiableClass)(r))return;const o=e=>c.ClassType.cloneAsInstance(c.ClassType.cloneWithLiteral(r,e.itemName));if(i)return(0,a.assert)(i instanceof c.EnumLiteral),{type:o(i),isIncomplete:s};const p=(0,l.enumerateLiteralsForType)(e,n);if(p&&p.length>0)return{type:(0,c.combineTypes)(p.map((e=>{const t=e.literalValue;return(0,a.assert)(t instanceof c.EnumLiteral),o(t)}))),isIncomplete:s}}const o=d(e,n);if("value"===r||"_value_"===r){const t=n.details.effectiveMetaclass;if(t&&(0,c.isClass)(t)&&!c.ClassType.isBuiltIn(t))return{type:null!=o?o:c.AnyType.create(),isIncomplete:s};const r=(0,p.lookUpClassMember)(n,"__new__",4),d=(0,p.lookUpClassMember)(n,"__init__",4);if(r&&(0,c.isClass)(r.classType)&&!c.ClassType.isBuiltIn(r.classType))return{type:null!=o?o:c.AnyType.create(),isIncomplete:s};if(d&&(0,c.isClass)(d.classType)&&!c.ClassType.isBuiltIn(d.classType))return{type:null!=o?o:c.AnyType.create(),isIncomplete:s};if(i)return(0,a.assert)(i instanceof c.EnumLiteral),(0,c.isAny)(i.itemType)?o?{type:o,isIncomplete:s}:void 0:{type:i.itemType,isIncomplete:s};const u=(0,l.enumerateLiteralsForType)(e,n);if(u&&u.length>0)return{type:(0,c.combineTypes)(u.map((e=>{const t=e.literalValue;return(0,a.assert)(t instanceof c.EnumLiteral),t.itemType}))),isIncomplete:s}}},t.getEnumAutoValueType=function(e,t){const n=(0,s.getEnclosingClass)(t);if(n){const a=e.getTypeOfClass(n);if(a){const n=e.getTypeOfBoundMember(t,c.ClassType.cloneAsInstance(a.classType),"_generate_next_value_");if(n&&!n.typeErrors&&(0,c.isFunction)(n.type)&&n.classType&&(0,c.isClass)(n.classType)&&!c.ClassType.isBuiltIn(n.classType,"Enum")&&n.type.details.declaredReturnType)return n.type.details.declaredReturnType}}return e.getBuiltInObject(t,"int")}},60092:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.applyFunctionTransform=void 0;const a=n(97652),r=n(95960),s=n(52328),i=n(8312),o=n(808);t.applyFunctionTransform=function(e,t,n,l,p){return(0,i.isFunction)(l)&&"functools.total_ordering"===l.details.fullName?function(e,t,n,l){var p;if(1!==n.length)return l;const c=null===(p=n[0].typeResult)||void 0===p?void 0:p.type;if(!c||!(0,i.isInstantiableClass)(c)||c.includeSubclasses)return l;const d=["__lt__","__le__","__gt__","__ge__"],u=i.ClassType.cloneAsInstance(c);let m;const y=d.filter((e=>{const t=(0,o.lookUpObjectMember)(u,e,16);return t&&!m&&(m=t),!t}));if(!m)return e.addDiagnostic(a.DiagnosticRule.reportGeneralTypeIssues,r.LocMessage.totalOrderingMissingMethod(),t),l;let g;const h=e.getTypeOfMember(m);(0,i.isFunction)(h)&&h.details.parameters.length>=2&&h.details.parameters[1].hasDeclaredType&&(g=h.details.parameters[1].type);if(!g){const n=e.getBuiltInObject(t,"object");if(!n||!(0,i.isClassInstance)(n))return l;g=n}const f=e.getBuiltInObject(t,"bool");if(!f||!(0,i.isClassInstance)(f))return l;const T={category:0,name:"self",type:(0,o.synthesizeTypeVarForSelfCls)(c,!1),hasDeclaredType:!0},v={category:0,name:"__value",type:g,hasDeclaredType:!0};return y.forEach((e=>{const t=i.FunctionType.createSynthesizedInstance(e);i.FunctionType.addParameter(t,T),i.FunctionType.addParameter(t,v),t.details.declaredReturnType=f,i.ClassType.getSymbolTable(c).set(e,s.Symbol.createWithType(4,t))})),l}(e,t,n,p):p}},29332:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ImportResolver=t.supportedFileExtensions=t.createImportedModuleDescriptor=void 0;const i=n(28040),o=n(55484),l=n(93924),p=n(11699),c=n(61328),d=n(37636),u=s(n(50356)),m=n(50356),y=n(55084),g=n(80636),h=n(34296),f=n(21440),T=n(88288),v=n(65940),b=s(n(58700)),_=s(n(80944)),C=n(80944);t.createImportedModuleDescriptor=function(e){if(0===e.length)return{leadingDots:0,nameParts:[],importedSymbols:new Set};let t=0,n=0;for(;t<e.length&&"."===e[t];t++)n++;return{leadingDots:n,nameParts:e.slice(t).split("."),importedSymbols:new Set}};const I=[".pyd",".so",".dylib"],k=[".py",".pyi"];t.supportedFileExtensions=[...k,...I];class w{constructor(e,t,n){this.serviceProvider=e,this._configOptions=t,this.host=n,this._cachedImportResults=new Map,this._cachedModuleNameResults=new Map,this._cachedEntriesForPath=new Map,this._cachedFilesForPath=new Map,this._cachedDirExistenceForRoot=new Map,this.cachedParentImportResults=new T.ParentDirectoryCache((()=>this.getPythonSearchPaths([])))}get fileSystem(){return this.serviceProvider.fs()}get tmp(){return this.serviceProvider.tmp()}get partialStubs(){return this.serviceProvider.tryGet(d.ServiceKeys.partialStubs)}static isSupportedImportSourceFile(e){const t=e.lastExtension.toLowerCase();return k.some((e=>t===e))}static isSupportedImportFile(e){const n=e.lastExtension.toLowerCase();return t.supportedFileExtensions.some((e=>n===e))}invalidateCache(){var e;this._cachedImportResults=new Map,this._cachedModuleNameResults=new Map,this.cachedParentImportResults.reset(),this._stdlibModules=void 0,this._invalidateFileSystemCache(),null===(e=this.partialStubs)||void 0===e||e.clearPartialStubs()}resolveImport(e,t,n){return this.resolveImportInternal(e,t,n)}getCompletionSuggestions(e,t,n){const a=this._getCompletionSuggestionsStrict(e,t,n);if(n.leadingDots>0)return a;const r=this.getParentImportResolutionRoot(e,t.root);let s=e.getDirectory();for(;this._shouldWalkUp(s,r,t)&&s;)this._getCompletionSuggestionsAbsolute(e,t,s,n,a,!1),s=this._tryWalkUp(s);return a}getConfigOptions(){return this._configOptions}setConfigOptions(e){this._configOptions=e,this.invalidateCache()}getSourceFilesFromStub(e,t,n){const a=[];if(this._cachedImportResults.forEach((t=>{t.forEach((t=>{if(t.isStubFile&&t.isImportFound&&t.nonStubImportResult&&t.resolvedUris[t.resolvedUris.length-1].equals(e)&&t.nonStubImportResult.isImportFound){const e=t.nonStubImportResult.resolvedUris[t.nonStubImportResult.resolvedUris.length-1];(e.hasExtension(".py")||e.hasExtension(".pyi"))&&a.push(e)}}))})),0===a.length){const t=e.replaceExtension(".py");this.dirExistsCached(t)&&a.push(t)}if(0===a.length){const n=this.getImportRoots(t),r=[];for(const t of n)if(e.isChild(t)){const n=Array.from(t.getRelativePathComponents(e));n.length>=1&&(n[0].endsWith(l.stubsSuffix)&&(n[0]=n[0].slice(0,n[0].length-l.stubsSuffix.length)),r.push(n.join("/")))}for(const e of r)for(const t of n){let n=t.resolvePaths(e).replaceExtension(".py");if(this.fileExistsCached(n))a.push(n);else{const e=n.stripExtension();e.pathEndsWith("__init__")?(n=e.getDirectory().packageUri,this.fileExistsCached(n)&&a.push(n)):(n=e.initPyUri,this.fileExistsCached(n)&&a.push(n))}}}return a}getModuleNameForImport(e,t,n=!1,a=!1){var r;const s=(0,i.getOrAdd)(this._cachedModuleNameResults,null===(r=t.root)||void 0===r?void 0:r.key,(()=>new Map)),o=`${n}.${a}.${e.key}`;return(0,i.getOrAdd)(s,o,(()=>this._getModuleNameForImport(e,t,n,a)))}getTypeshedStdLibPath(e){return this._getStdlibTypeshedPath(this._configOptions.typeshedPath,e.pythonVersion,e.pythonPlatform,[])}getTypeshedThirdPartyPath(e){return this._getThirdPartyTypeshedPath(this._configOptions.typeshedPath,[])}isStdlibModule(e,t){return this._stdlibModules||(this._stdlibModules=this._buildStdlibCache(this.getTypeshedStdLibPath(t))),this._stdlibModules.has(e.nameParts.join("."))}getImportRoots(e,t=!1){const n=[],a=[],r=this._getStdlibTypeshedPath(this._configOptions.typeshedPath,e.pythonVersion,e.pythonPlatform,n);if(r&&a.push(r),e.root&&a.push(e.root),(0,i.appendArray)(a,e.extraPaths),this._configOptions.stubPath&&a.push(this._configOptions.stubPath),t){const e=this._getThirdPartyTypeshedPath(this._configOptions.typeshedPath,n);e&&a.push(e.resolvePaths("..."))}else{const e=this._getThirdPartyTypeshedPackageRoots(n);(0,i.appendArray)(a,e)}const s=this.getTypeshedPathEx(e,n);s&&a.push(s);const o=this.getPythonSearchPaths(n);return o.length>0&&(0,i.appendArray)(a,o),a}ensurePartialStubPackages(e){var t;if(!this.partialStubs)return!1;if(this.partialStubs.isPartialStubPackagesScanned(e))return!1;const n=this.partialStubs,a=[],r=[],s=this.getTypeshedPathEx(e,a);return i(this._configOptions.stubPath),i(null!==(t=e.root)&&void 0!==t?t:this._configOptions.projectRoot),e.extraPaths.forEach((e=>i(e))),i(s),this.getPythonSearchPaths(a).forEach((e=>i(e))),this.partialStubs.processPartialStubPackages(r,this.getImportRoots(e),s),this._invalidateFileSystemCache(),!0;function i(e){e&&!n.isPathScanned(e)&&r.push(e)}}getPythonSearchPaths(e){if(!this._cachedPythonSearchPaths){const e=[],t=(b.findPythonSearchPaths(this.fileSystem,this._configOptions,this.host,e)||[]).map((e=>this.fileSystem.realCasePath(e)));this._cachedPythonSearchPaths={paths:Array.from(new Set(t)),failureInfo:e}}return e.push(...this._cachedPythonSearchPaths.failureInfo),this._cachedPythonSearchPaths.paths}getTypeshedStdlibExcludeList(e,t,n){const a=this._getStdlibTypeshedPath(e,t,n,[]),r=[];return a?(this._cachedTypeshedStdLibModuleVersionInfo||(this._cachedTypeshedStdLibModuleVersionInfo=this._readTypeshedStdLibVersions(e,[])),this._cachedTypeshedStdLibModuleVersionInfo.forEach(((e,s)=>{let i=!1;if(void 0!==e.max&&t.isGreaterThan(e.max)&&(i=!0),void 0!==n){const t=n.toLowerCase();e.supportedPlatforms&&e.supportedPlatforms.every((e=>e.toLowerCase()!==t))&&(i=!0),e.unsupportedPlatforms&&e.unsupportedPlatforms.some((e=>e.toLowerCase()===t))&&(i=!0)}if(i){const e=a.combinePaths(...s.split("."));r.push(e);const t=e.replaceExtension(".pyi");r.push(t)}})),r):r}readdirEntriesCached(e){const t=this._cachedEntriesForPath.get(e.key);if(t)return t;let n;try{n=this.fileSystem.readdirEntriesSync(e)}catch{n=[]}return this._cachedEntriesForPath.set(e.key,n),n}resolveImportInternal(e,t,n){const a=this.formatImportName(n),r=this._resolveImportStrict(a,e,t,n,[]);if(r.isImportFound||n.leadingDots>0)return r;const s=e.getDirectory(),i=this.cachedParentImportResults.getImportResult(s,a,r);if(i)return this.filterImplicitImports(i,n.importedSymbols);const o=this.getParentImportResolutionRoot(e,t.root);if(!this.cachedParentImportResults.checkValidPath(this.fileSystem,e,o))return r;const l={importPath:void 0};let p=s;for(;this._shouldWalkUp(p,o,t)&&p;){const r=this.resolveAbsoluteImport(e,p,t,n,a,[],void 0,void 0,!1,!0);if(this.cachedParentImportResults.checked(p,a,l),r.isImportFound)return l.importPath=p,this.cachedParentImportResults.add({importResult:r,path:p,importName:a}),this.filterImplicitImports(r,n.importedSymbols);p=this._tryWalkUp(p)}return p&&this.cachedParentImportResults.checked(p,a,l),r}fileExistsCached(e){const t=e.getDirectory();if(t.equals(e))return!1;const n=e.fileName,a=this.readdirEntriesCached(t).find((e=>e.name===n));if(null==a?void 0:a.isFile())return!0;if(null==a?void 0:a.isSymbolicLink()){const t=(0,g.tryRealpath)(this.fileSystem,e);if(t&&this.fileSystem.existsSync(t)&&(0,g.isFile)(this.fileSystem,t))return!0}return!1}dirExistsCached(e){var t,n;const a=e.getDirectory();if(a.equals(e)){let a=this._cachedDirExistenceForRoot.get(e.key);return void 0===a&&(a=null!==(n=null===(t=(0,g.tryStat)(this.fileSystem,e))||void 0===t?void 0:t.isDirectory())&&void 0!==n&&n,this._cachedDirExistenceForRoot.set(e.key,a)),a}const r=e.fileName,s=this.readdirEntriesCached(a).find((e=>e.name===r));if(null==s?void 0:s.isDirectory())return!0;if(null==s?void 0:s.isSymbolicLink()){const t=(0,g.tryRealpath)(this.fileSystem,e);if(t&&this.fileSystem.existsSync(t)&&(0,g.isDirectory)(this.fileSystem,t))return!0}return!1}addResultsToCache(e,t,n,a,r,s){var o;const l=r&&r.leadingDots>0?e:void 0;return(0,i.getOrAdd)(this._cachedImportResults,null===(o=t.root)||void 0===o?void 0:o.key,(()=>new Map)).set(this._getImportCacheKey(l,n,s),a),this.filterImplicitImports(a,null==r?void 0:r.importedSymbols)}resolveAbsoluteImport(e,t,n,a,r,s,i=!1,o=!1,l=!1,p=!0,c=!1){if(p&&l){const e=this._resolveAbsoluteImport(t,n,a,r,s,i,!1,!0,!0,!0);if(e.packageDirectory&&(!e.isNamespacePackage||e.isImportFound))return e}return this._resolveAbsoluteImport(t,n,a,r,s,i,o,!1,p,c)}getTypeshedPathEx(e,t){}resolveImportEx(e,t,n,a,r=[],s=!0){}resolveNativeImportEx(e,t,n=[]){}getNativeModuleName(e){const t=e.lastExtension.toLowerCase();if(this._isNativeModuleFileExtension(t))return(0,p.stripFileExtension)(e.fileName,!0)}getModuleNameFromPath(e,t,n=!1){const a=this.getModuleNameInfoFromPath(e,t,n);if(a&&!a.containsInvalidCharacters)return a.moduleName}getModuleNameInfoFromPath(e,t,n=!1){let a=t.stripExtension();if(this._isNativeModuleFileExtension(t.lastExtension)&&(a=a.stripExtension()),!a.startsWith(e))return;a.pathEndsWith("__init__")&&(a=a.getDirectory());const r=Array.from(e.getRelativePathComponents(a));if(n){if(0===r.length)return;r.shift()}if(0===r.length)return;r[0].endsWith(l.stubsSuffix)&&(r[0]=r[0].substr(0,r[0].length-l.stubsSuffix.length));const s=r.some((e=>!this._isIdentifier(e)));return{moduleName:r.join("."),containsInvalidCharacters:s}}filterImplicitImports(e,t){if(void 0===t){const t=Object.assign({},e);return t.filteredImplicitImports=new Map,t}if(0===t.size)return e;if(0===e.implicitImports.size)return e;const n=new Map;if(e.implicitImports.forEach((e=>{t.has(e.name)&&n.set(e.name,e)})),n.size===e.implicitImports.size)return e;const a=Object.assign({},e);return a.filteredImplicitImports=n,a}formatImportName(e){return".".repeat(e.leadingDots)+e.nameParts.join(".")}getParentImportResolutionRoot(e,t){return t&&!t.isEmpty()?this.fileSystem.realCasePath(t):e.getDirectory()}_resolveImportStrict(e,t,n,a,r){const s=(0,o.matchFileSpecs)(this._configOptions,t),i={importName:e,isRelative:!1,isImportFound:!1,isPartlyResolved:!1,isNamespacePackage:!1,isInitFilePresent:!1,isStubPackage:!1,importFailureInfo:r,resolvedUris:[],importType:2,isStubFile:!1,isNativeLib:!1,implicitImports:new Map,filteredImplicitImports:new Map,nonStubImportResult:void 0};if(this.ensurePartialStubPackages(n),a.leadingDots>0){const i=this._lookUpResultsInCache(t,n,e,a,s);if(i)return i;const o=this._resolveRelativeImport(t,n,a,e,r);if(o)return o.isRelative=!0,this.addResultsToCache(t,n,e,o,a,s)}else{const r=this._lookUpResultsInCache(t,n,e,a,s);if(r){if(!(r.isImportFound&&r.isNamespacePackage&&!this._isNamespacePackageResolved(a,r.implicitImports)))return r}const o=this._resolveBestAbsoluteImport(t,n,a,!0);if(o)return o.isStubFile&&(o.nonStubImportResult=this._resolveBestAbsoluteImport(t,n,a,!1)||i),this.addResultsToCache(t,n,e,o,a,s)}return this.addResultsToCache(t,n,e,i,void 0,s)}_getCompletionSuggestionsStrict(e,t,n){const a=[],r=new Map;if(n.leadingDots>0)this._getCompletionSuggestionsRelative(e,t,n,r);else{n.nameParts.length>0&&this._getCompletionSuggestionsTypeshedPath(e,t,n,!0,r),t.root&&this._getCompletionSuggestionsAbsolute(e,t,t.root,n,r);for(const a of t.extraPaths)this._getCompletionSuggestionsAbsolute(e,t,a,n,r);this._configOptions.stubPath&&this._getCompletionSuggestionsAbsolute(e,t,this._configOptions.stubPath,n,r),this._getCompletionSuggestionsTypeshedPath(e,t,n,!1,r);const s=this.getPythonSearchPaths(a);for(const a of s)this._getCompletionSuggestionsAbsolute(e,t,a,n,r)}return r}_getModuleNameForImport(e,t,n,a){let r,s=0,i=!1,o=!1,l=!1;const p=[];let c;const d=this._getStdlibTypeshedPath(this._configOptions.typeshedPath,t.pythonVersion,t.pythonPlatform,p);if(d&&(r=this.getModuleNameFromPath(d,e),r)){const e={leadingDots:0,nameParts:r.split("."),importedSymbols:void 0};if(this._isStdlibTypeshedStubValidForVersion(e,this._configOptions.typeshedPath,t.pythonVersion,t.pythonPlatform,[]))return{moduleName:r,importType:s,isTypeshedFile:!0,isLocalTypingsFile:i,isThirdPartyPyTypedPresent:o}}if(t.root){const n=this.getModuleNameInfoFromPath(t.root,e);n&&(n.containsInvalidCharacters?c=n.moduleName:r=n.moduleName),s=2}for(const n of t.extraPaths){const t=this.getModuleNameInfoFromPath(n,e);if(t)if(t.containsInvalidCharacters)c=t.moduleName;else{const e=t.moduleName;(!r||e&&e.length<r.length)&&(r=e,s=2)}}if(this._configOptions.stubPath){const t=this.getModuleNameInfoFromPath(this._configOptions.stubPath,e);if(t)if(t.containsInvalidCharacters)c=t.moduleName;else{const e=t.moduleName;(!r||e&&e.length<r.length)&&(r=e,s=2,i=!0)}}const u=this._getThirdPartyTypeshedPath(this._configOptions.typeshedPath,p);if(u){const t=this.getModuleNameFromPath(u,e,!0);(!r||t&&t.length<r.length)&&(r=t,s=1,l=!0)}const m=this.getTypeshedPathEx(t,p);if(m){const t=this.getModuleNameFromPath(m,e);(!r||t&&t.length<r.length)&&(r=t,s=1,l=!0)}const y=this.getPythonSearchPaths(p);for(const t of y){const n=this.getModuleNameInfoFromPath(t,e);if(n)if(n.containsInvalidCharacters)c=n.moduleName;else{const e=n.moduleName;(!r||e&&e.length<r.length)&&(r=e,s=1,l=!1)}}if(a&&1===s){const n=this.getParentImportResolutionRoot(e,t.root);let a=e.getDirectory();for(;this._shouldWalkUp(a,n,t);){const e=this._getPyTypedInfo(a);e&&!e.isPartiallyTyped&&(o=!0);break}}return r?{moduleName:r,importType:s,isTypeshedFile:l,isLocalTypingsFile:i,isThirdPartyPyTypedPresent:o}:n&&c?{moduleName:c,isTypeshedFile:l,importType:s,isLocalTypingsFile:i,isThirdPartyPyTypedPresent:o}:{moduleName:"",isTypeshedFile:l,importType:2,isLocalTypingsFile:i,isThirdPartyPyTypedPresent:o}}_invalidateFileSystemCache(){this._cachedEntriesForPath.clear(),this._cachedFilesForPath.clear(),this._cachedDirExistenceForRoot.clear()}_resolveAbsoluteImport(e,t,n,a,r,s,i,o,p,c){o?r.push(`Attempting to resolve stub package using root path '${e}'`):r.push(`Attempting to resolve using root path '${e}'`);const d=[];let u,m,g,h=e,f=!1,T=!1,v=!1,b=!1,_=!1,C=new Map;if(0===n.nameParts.length){const e=h.initPyUri,t=h.initPyiUri;p&&this.fileExistsCached(t)?(r.push(`Resolved import with file '${t}'`),d.push(t),b=!0):this.fileExistsCached(e)?(r.push(`Resolved import with file '${e}'`),d.push(e)):(r.push(`Partially resolved import with directory '${h}'`),d.push(y.Uri.empty()),f=!0),C=this._findImplicitImports(a,h,[e,t])}else for(let e=0;e<n.nameParts.length;e++){const s=0===e,g=e===n.nameParts.length-1;h=h.combinePaths(n.nameParts[e]),o&&s&&(h=h.addPath(l.stubsSuffix),v=!0);const I=this.dirExistsCached(h);if(I){s&&(u=h);const e=h.initPyUri,t=h.initPyiUri;if(T=!1,p&&this.fileExistsCached(t)?(r.push(`Resolved import with file '${t}'`),d.push(t),g&&(b=!0),T=!0):this.fileExistsCached(e)&&(r.push(`Resolved import with file '${e}'`),d.push(e),T=!0),!m&&c&&(m=this._getPyTypedInfo(h)),!g){T||(d.push(y.Uri.empty()),f=!0,m=void 0);continue}if(T){C=this._findImplicitImports(n.nameParts.join("."),h,[e,t]);break}}const k=h.packageUri,w=h.packageStubUri,S=h.getDirectory();if(p&&this.fileExistsCached(w))r.push(`Resolved import with file '${w}'`),d.push(w),g&&(b=!0);else if(this.fileExistsCached(k))r.push(`Resolved import with file '${k}'`),d.push(k);else{if(i&&this.dirExistsCached(S)){const e=this._getFilesInDirectory(S),s=h.fileName,i=e.find((e=>this._isNativeModuleFileName(s,e)));i&&(_=this._resolveNativeModuleStub(i,t,a,n,r,d))}!_&&I?(r.push(`Partially resolved import with directory '${h}'`),d.push(y.Uri.empty()),g&&(C=this._findImplicitImports(a,h,[k,w]),f=!0)):_&&r.push(`Did not find file '${w}' or '${k}'`)}!m&&c&&(m=this._getPyTypedInfo(S));break}const I=d.length>0&&d.length<n.nameParts.length;return g=s?d.length>0:d.length>=n.nameParts.length,{importName:a,isRelative:!1,isNamespacePackage:f,isInitFilePresent:T,isStubPackage:v,isImportFound:g,isPartlyResolved:I,importFailureInfo:r,importType:2,resolvedUris:d,searchPath:e,isStubFile:b,isNativeLib:_,implicitImports:C,pyTypedInfo:m,filteredImplicitImports:C,packageDirectory:u}}_getImportCacheKey(e,t,n){var a;return`${null!==(a=null==e?void 0:e.key)&&void 0!==a?a:""}-${t}-${n}`}_lookUpResultsInCache(e,t,n,a,r){var s,i;const o=this._cachedImportResults.get(null!==(i=null===(s=t.root)||void 0===s?void 0:s.key)&&void 0!==i?i:"");if(!o)return;const l=a.leadingDots>0?e:void 0,p=o.get(this._getImportCacheKey(l,n,r));return p?this.filterImplicitImports(p,a.importedSymbols):void 0}_isNamespacePackageResolved(e,t){if(e.importedSymbols){if(!Array.from(e.importedSymbols.keys()).some((e=>t.has(e))))return!1}else if(0===t.size)return!1;return!0}_resolveBestAbsoluteImport(e,t,n,a){const r=this.formatImportName(n),s=[];if(a&&this._configOptions.stubPath){s.push(`Looking in stubPath '${this._configOptions.stubPath}'`);const i=this.resolveAbsoluteImport(e,this._configOptions.stubPath,t,n,r,s,void 0,!1,!0,a,!1);if(i.isImportFound){if(i.importType=2,i.isLocalTypingsFile=!0,!i.isNamespacePackage||!i.resolvedUris[i.resolvedUris.length-1].isEmpty())return i;if(this._isNamespacePackageResolved(n,i.implicitImports))return i}}let i,o;t.root&&(s.push(`Looking in root directory of execution environment '${t.root}'`),o=this.resolveAbsoluteImport(e,t.root,t,n,r,s,void 0,!0,!0,a,!1),i=o);for(const l of t.extraPaths)s.push(`Looking in extraPath '${l}'`),o=this.resolveAbsoluteImport(e,l,t,n,r,s,void 0,!0,!0,a,!1),i=this._pickBestImport(i,o,n);const l=this.getPythonSearchPaths(s);if(l.length>0)for(const o of l){s.push(`Looking in python search path '${o}'`);const l=this.resolveAbsoluteImport(e,o,t,n,r,s,false,!0,!0,a,!0);l&&(l.importType=1,i=this._pickBestImport(i,l,n))}else s.push("No python interpreter search path");if(t.root!==this._getTypeshedRoot(this._configOptions.typeshedPath,s)&&(null==i?void 0:i.pyTypedInfo)&&!i.isPartlyResolved)return i;const p=this.resolveImportEx(e,t,n,r,s,a);if(p)return p;if(a&&n.nameParts.length>0){s.push("Looking for typeshed stdlib path");const e=this._findTypeshedPath(t,n,r,!0,s);if(e)return e.isStdlibTypeshedFile=!0,e;s.push("Looking for typeshed third-party path");const a=this._findTypeshedPath(t,n,r,!1,s);a&&(a.isThirdPartyTypeshedFile=!0,i=this._pickBestImport(i,a,n))}return i}_pickBestImport(e,t,n){if(!e)return t;if(!t)return e;if(t.isImportFound){const a=e.resolvedUris.findIndex((e=>!e.isEmpty())),r=t.resolvedUris.findIndex((e=>!e.isEmpty()));if(a!==r)return a<0?t:r<0||a<r?e:t;if(!e.isImportFound)return t;if(e.isNamespacePackage&&t.isNamespacePackage&&n.importedSymbols&&!this._isNamespacePackageResolved(n,e.implicitImports)){if(this._isNamespacePackageResolved(n,t.implicitImports))return t;if(e.isInitFilePresent&&!t.isInitFilePresent)return e;if(!e.isInitFilePresent&&t.isInitFilePresent)return t}if(2===e.importType&&1===t.importType)return e;if(e.pyTypedInfo&&!t.pyTypedInfo)return e;if(!e.pyTypedInfo&&t.pyTypedInfo&&e.importType===t.importType)return t;if(e.isStubFile&&!t.isStubFile)return e;if(!e.isStubFile&&t.isStubFile)return t;if(e.resolvedUris.length>t.resolvedUris.length)return t}else if(t.isPartlyResolved){const n=e.resolvedUris.findIndex((e=>!e.isEmpty())),a=t.resolvedUris.findIndex((e=>!e.isEmpty()));if(n!==a)return n<0?t:a<0||n<a?e:t}return e}_isIdentifier(e){for(let t=0;t<e.length;t++)if(0===t?!(0,h.isIdentifierStartChar)(e.charCodeAt(t)):!(0,h.isIdentifierChar)(e.charCodeAt(t)))return!1;return!0}_findTypeshedPath(e,t,n,a,r){let s;if(r.push(`Looking for typeshed ${a?b.stdLibFolderName:b.thirdPartyFolderName} path`),a){const n=this._getStdlibTypeshedPath(this._configOptions.typeshedPath,e.pythonVersion,e.pythonPlatform,r,t);n&&(s=[n])}else s=this._getThirdPartyTypeshedPackagePaths(t,r);if(s)for(const i of s)if(this.dirExistsCached(i)){const s=this.resolveAbsoluteImport(void 0,i,e,t,n,r);if(s.isImportFound){let e=a?0:1;return"typing_extensions"===n&&(e=1),s.importType=e,s}}r.push("Typeshed path not found")}_buildStdlibCache(e){const t=new Set;if(e){const n=(e,a)=>{this.readdirEntriesCached(e).forEach((r=>{if(r.isDirectory()){const t=e.combinePaths(r.name);n(t,a?`${a}.${r.name}`:r.name)}else if(r.name.includes(".py")){const e=(0,p.stripFileExtension)(r.name);e.startsWith("_")||t.add(a?`${a}.${e}`:e)}}))};n(e,void 0)}return t}_buildTypeshedThirdPartyPackageMap(e){this._cachedTypeshedThirdPartyPackagePaths=new Map,e&&this.readdirEntriesCached(e).forEach((t=>{if(t.isDirectory()){const n=e.combinePaths(t.name);this.readdirEntriesCached(n).forEach((e=>{if("@python2"!==e.name)if(e.isDirectory()){const t=this._cachedTypeshedThirdPartyPackagePaths.get(e.name);t?t.push(n):this._cachedTypeshedThirdPartyPackagePaths.set(e.name,[n])}else if(e.isFile()&&e.name.endsWith(".pyi")){const t=(0,p.stripFileExtension)(e.name),a=this._cachedTypeshedThirdPartyPackagePaths.get(t);a?a.push(n):this._cachedTypeshedThirdPartyPackagePaths.set(t,[n])}}))}}));const t=Array.from(this._cachedTypeshedThirdPartyPackagePaths.values()).flatMap((e=>e));this._cachedTypeshedThirdPartyPackageRoots=Array.from(new Set(t)).sort()}_getCompletionSuggestionsTypeshedPath(e,t,n,a,r){const s=[];let i;if(a){const e=this._getStdlibTypeshedPath(this._configOptions.typeshedPath,t.pythonVersion,t.pythonPlatform,s,n);e&&(i=[e])}else{i=this._getThirdPartyTypeshedPackagePaths(n,s,!1);const e=this.getTypeshedPathEx(t,s);e&&(i=null!=i?i:[],i.push(e))}i&&i.forEach((a=>{this.dirExistsCached(a)&&this._getCompletionSuggestionsAbsolute(e,t,a,n,r)}))}_getStdlibTypeshedPath(e,t,n,a,r){const s=this._getTypeshedSubdirectory(!0,e,a);if(!s||!r||this._isStdlibTypeshedStubValidForVersion(r,e,t,n,a))return s}_getThirdPartyTypeshedPath(e,t){return this._getTypeshedSubdirectory(!1,e,t)}_isStdlibTypeshedStubValidForVersion(e,t,n,a,r){this._cachedTypeshedStdLibModuleVersionInfo||(this._cachedTypeshedStdLibModuleVersionInfo=this._readTypeshedStdLibVersions(t,r));for(let t=1;t<=e.nameParts.length;t++){const r=e.nameParts.slice(0,t),s=this._cachedTypeshedStdLibModuleVersionInfo.get(r.join("."));if(s){if(n.isLessThan(s.min))return!1;if(void 0!==s.max&&n.isGreaterThan(s.max))return!1;if(void 0!==a){const e=a.toLowerCase();if(s.supportedPlatforms&&s.supportedPlatforms.every((t=>t.toLowerCase()!==e)))return!1;if(s.unsupportedPlatforms&&s.unsupportedPlatforms.some((t=>t.toLowerCase()===e)))return!1}}}return!0}_readTypeshedStdLibVersions(e,t){const n=new Map,a=this._getTypeshedSubdirectory(!0,e,t);if(a){const e=a.combinePaths("VERSIONS");try{const a=this.fileSystem.statSync(e);if(a.size>0&&a.size<262144){this.fileSystem.readFileSync(e,"utf8").split(/\r?\n/).forEach((e=>{const t=e.split("#")[0].split(";").map((e=>e.trim())),a=t[0].split(":");if(2!==a.length)return;const r=a[1].split("-");if(r.length>2)return;const s=a[0].trim();if(!s)return;let i=r[0].trim();i.endsWith("+")&&(i=i.substr(0,i.length-1));let o,l,p,d=c.PythonVersion.fromString(i);d||(d=c.pythonVersion3_0),r.length>1&&(o=c.PythonVersion.fromString(r[1].trim()));const u="platforms=";let m=t.slice(1).find((e=>e.startsWith(u)));if(m){m=m.trim().substring(10);const e=m.split(",");for(let t of e){t=t.trim();let e=!1;t.startsWith("!")&&(e=!0,t=t.substring(1)),e?(p=null!=p?p:[],p.push(t)):(l=null!=l?l:[],l.push(t))}}n.set(s,{min:d,max:o,supportedPlatforms:l,unsupportedPlatforms:p})}))}else t.push("Typeshed stdlib VERSIONS file is unexpectedly large")}catch(e){t.push(`Could not read typeshed stdlib VERSIONS file: '${JSON.stringify(e)}'`)}}return n}_getThirdPartyTypeshedPackagePaths(e,t,n=!0){const a=this._getThirdPartyTypeshedPath(this._configOptions.typeshedPath,t);this._cachedTypeshedThirdPartyPackagePaths||this._buildTypeshedThirdPartyPackageMap(a);const r=e.nameParts.length>0?e.nameParts[0]:"";return n?this._cachedTypeshedThirdPartyPackagePaths.get(r):r?(0,i.flatten)((0,i.getMapValues)(this._cachedTypeshedThirdPartyPackagePaths,(e=>e.startsWith(r)))):[]}_getThirdPartyTypeshedPackageRoots(e){const t=this._getThirdPartyTypeshedPath(this._configOptions.typeshedPath,e);return this._cachedTypeshedThirdPartyPackagePaths||this._buildTypeshedThirdPartyPackageMap(t),this._cachedTypeshedThirdPartyPackageRoots}_getTypeshedRoot(e,t){var n;if(void 0===this._cachedTypeshedRoot){let t;e&&this.dirExistsCached(e)&&(t=e),t||(t=null!==(n=b.getTypeShedFallbackPath(this.fileSystem))&&void 0!==n?n:y.Uri.empty()),this._cachedTypeshedRoot=t}return this._cachedTypeshedRoot.isEmpty()?void 0:this._cachedTypeshedRoot}_getTypeshedSubdirectory(e,t,n){if(e){if(void 0!==this._cachedTypeshedStdLibPath)return this._cachedTypeshedStdLibPath}else if(void 0!==this._cachedTypeshedThirdPartyPath)return this._cachedTypeshedThirdPartyPath;let a=this._getTypeshedRoot(t,n);if(void 0!==a&&(a=b.getTypeshedSubdirectory(a,e),this.dirExistsCached(a)))return e?this._cachedTypeshedStdLibPath=a:this._cachedTypeshedThirdPartyPath=a,a}_resolveRelativeImport(e,t,n,a,r){r.push("Attempting to resolve relative import");const s=(0,f.getDirectoryLeadingDotsPointsTo)(e.getDirectory(),n.leadingDots);if(!s)return void r.push(`Invalid relative path '${a}'`);const i=this.resolveAbsoluteImport(e,s,t,n,a,r,!1,!0);return i&&i.isStubFile&&(i.nonStubImportResult=this.resolveAbsoluteImport(e,s,t,n,a,r,!1,!0,!1,!1)||{importName:a,isRelative:!0,isImportFound:!1,isPartlyResolved:!1,isNamespacePackage:!1,isStubPackage:!1,importFailureInfo:r,resolvedUris:[],importType:2,isStubFile:!1,isNativeLib:!1,implicitImports:[],filteredImplicitImports:[],nonStubImportResult:void 0}),i}_getCompletionSuggestionsRelative(e,t,n,a){const r=(0,f.getDirectoryLeadingDotsPointsTo)(e.getDirectory(),n.leadingDots);r&&this._getCompletionSuggestionsAbsolute(e,t,r,n,a)}_getFilesInDirectory(e){const t=this._cachedFilesForPath.get(e.key);if(t)return t;let n=[];try{const t=this.readdirEntriesCached(e),a=t.filter((e=>e.isFile()));t.forEach((t=>{var n;t.isSymbolicLink()&&(null===(n=(0,g.tryStat)(this.fileSystem,e.combinePaths(t.name)))||void 0===n?void 0:n.isFile())&&a.push(t)})),n=a.map((t=>e.combinePaths(t.name)))}catch{n=[]}return this._cachedFilesForPath.set(e.key,n),n}_getCompletionSuggestionsAbsolute(e,t,n,a,r,s=!0){let i=n;const o=a.nameParts.map((e=>e));a.hasTrailingDot&&o.push("");const l=a.leadingDots,p=o.slice(0,-1);if(0===o.length)this._addFilteredSuggestionsAbsolute(e,t,i,"",r,l,p,s);else for(let n=0;n<o.length&&(n===o.length-1&&this._addFilteredSuggestionsAbsolute(e,t,i,o[n],r,l,p,s),i=i.combinePaths(o[n]),this.dirExistsCached(i));n++);}_addFilteredSuggestionsAbsolute(e,t,n,a,r,s,i,o){const l=(0,g.getFileSystemEntriesFromDirEntries)(this.readdirEntriesCached(n),this.fileSystem,n);l.files.forEach((n=>{const l=n.stripAllExtensions().fileName;if(w.isSupportedImportFile(n)){if("__init__"===l)return;if(a&&!u.isPatternInSymbol(a,l))return;if(!this._isUniqueValidSuggestion(l,r)||!this._isResolvableSuggestion(l,s,i,e,t,o))return;r.set(l,n)}})),l.directories.forEach((n=>{const l=n.fileName;if(a&&!l.startsWith(a))return;if(!this._isUniqueValidSuggestion(l,r)||!this._isResolvableSuggestion(l,s,i,e,t,o))return;const p=n.initPyiUri;if(this.fileExistsCached(p))return void r.set(l,p);const c=n.initPyUri;this.fileExistsCached(c)?r.set(l,c):r.set(l,y.Uri.empty())}))}_isResolvableSuggestion(e,t,n,a,r,s){const i={leadingDots:t,nameParts:[...n,e],importedSymbols:new Set};let o;if(s){const e=this.formatImportName(i),t=[];o=this._resolveImportStrict(e,a,r,i,t)}else o=this.resolveImportInternal(a,r,i);return!(!o||!o.isImportFound||_.isPrivateOrProtectedName(e)&&void 0!==o.pyTypedInfo)}_isUniqueValidSuggestion(e,t){return!t.has(e)&&(!/[.-]/.test(e)&&(!(0,C.isDunderName)(e)||"__future__"===e))}_findImplicitImports(e,t,n){const a=new Map,r=(0,g.getFileSystemEntriesFromDirEntries)(this.readdirEntriesCached(t),this.fileSystem,t);for(const t of r.files){const r=t.lastExtension;let s,i=!1;if(".py"===r||".pyi"===r)s=(0,p.stripFileExtension)(t.fileName);else{if(!this._isNativeModuleFileExtension(r)||this.fileExistsCached(t.packageUri)||this.fileExistsCached(t.packageStubUri))continue;s=t.stripAllExtensions().fileName,i=!0}if(!n.find((e=>e.equals(t)))){const n={isStubFile:t.hasExtension(".pyi"),isNativeLib:i,name:s,uri:t},r=a.get(n.name);if(!r||!r.isStubFile){if(i){const a=t,r=this.resolveNativeImportEx(a,`${e}.${s}`,[]);r&&(n.uri=r,n.isNativeLib=!1)}a.set(n.name,n)}}}for(const e of r.directories){const t=e.initPyUri,r=e.initPyiUri;let s,i=!1;if(this.fileExistsCached(r)?(i=!0,s=r):this.fileExistsCached(t)&&(s=t),s&&!n.find((e=>e.equals(s)))){const t={isStubFile:i,isNativeLib:!1,name:e.fileName,uri:s,pyTypedInfo:this._getPyTypedInfo(e)};a.set(t.name,t)}}return a}_getPyTypedInfo(e){if(this.fileExistsCached(e.pytypedUri))return(0,v.getPyTypedInfoForPyTypedFile)(this.fileSystem,e.pytypedUri)}_resolveNativeModuleStub(e,t,n,a,r,s){let i=n;if(a.leadingDots>0){const n=this.getModuleNameForImport(e,t);i=n.moduleName.length>0?n.moduleName:i}const o=this.resolveNativeImportEx(e,i,r);return o?(r.push(`Resolved native import ${n} with stub '${o}'`),s.push(o),!1):(r.push(`Resolved import with file '${e}'`),s.push(e),!0)}_isNativeModuleFileName(e,t){const n=t.lastExtension.toLowerCase(),a=(0,p.stripFileExtension)(t.fileName,!0);return this._isNativeModuleFileExtension(n)&&(0,m.equateStringsCaseInsensitive)(e,a)}_isNativeModuleFileExtension(e){return I.some((t=>t===e))}_tryWalkUp(e){if(!e||e.isEmpty()||e.isRoot())return;const t=e.resolvePaths("..");return t.equals(e)?void 0:t}_shouldWalkUp(e,t,n){return e&&!e.isEmpty()&&(e.isChild(t)||e.equals(t)&&(!n.root||n.root.isEmpty()))}}t.ImportResolver=w},21440:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.haveSameParentModule=t.getResolvedFilePath=t.getDirectoryLeadingDotsPointsTo=t.getRelativeModuleName=t.getTextRangeForImportNameDeletion=t.getImportGroupFromModuleNameAndType=t.getAllImportNames=t.getContainingImportStatement=t.getTextEditsForAutoImportInsertion=t.getTextEditsForAutoImportInsertions=t.getTextEditsForAutoImportSymbolAddition=t.getTopLevelImports=t.compareImportStatements=t.getImportGroup=void 0;const i=n(64704),o=n(28040),l=n(96193),p=n(50356),c=n(55164),d=n(55084),u=n(80636),m=s(n(9316)),y=n(28340),g=s(n(80944));function h(e){return e.importResult?0===e.importResult.importType?0:1===e.importResult.importType||e.importResult.isLocalTypingsFile?1:e.importResult.isRelative?3:2:2}function f(e){return g.isConstantName(e)?0:g.isTypeAliasName(e)?1:2}function T(e,t){const n=f(e)-f(t);if(0!==n)return n;const a=e.replace(/_/g,"="),r=t.replace(/_/g,"=");return(0,p.compareStringsCaseSensitive)(a,r)}function v(e,t,n,a){let r;for(const t of n.imports){if(T(t.name.value,e)>0)break;r=t}let s=!1,i="";if(n.imports.length>0){const e=(0,l.convertOffsetToPosition)(n.start,a.tokenizerOutput.lines),t=(0,l.convertOffsetToPosition)(n.imports[0].start,a.tokenizerOutput.lines),r=n.imports.length>1?(0,l.convertOffsetToPosition)(n.imports[1].start,a.tokenizerOutput.lines):void 0;if(t.line>e.line&&(void 0===r||r.line>t.line)){const e=a.tokenizerOutput.lines.getItemAt(t.line);i=a.text.substr(e.start,t.character),/^\s*$/.test(i)&&(s=!0)}}const o=r?c.TextRange.getEnd(r):n.imports.length>0?n.imports[0].start:n.start+n.length,p=(0,l.convertOffsetToPosition)(o,a.tokenizerOutput.lines),d=t?`${e} as ${t}`:`${e}`;let u;if(s){const e=a.tokenizerOutput.predominantEndOfLineSequence;u=r?`,${e}${i}${d}`:`${d},${e}${i}`}else u=r?`, ${d}`:`${d}, `;return{range:{start:p,end:p},importName:e,replacementText:u}}function b(e,t){if(t.length<2)return t.map((e=>r(e)));const n=[...(0,o.createMapFromItems)(t,(e=>`${e.importGroup} ${c.Range.print(e.range)}`))].sort(((e,t)=>(0,p.compareStringsCaseSensitive)(e[0],t[0]))).map((e=>e[1])),a=[];for(const t of n)1===t.length?a.push(r(t[0])):a.push({range:t[0].range,replacementText:t[0].preChange+t.map((e=>e.importStatement)).sort(((e,t)=>s(e,t))).join(e.tokenizerOutput.predominantEndOfLineSequence)+t[0].postChange});return a;function r(e){return{range:e.range,replacementText:e.preChange+e.importStatement+e.postChange}}function s(e,t){const n=e.startsWith("import");return n===t.startsWith("import")?e<t?-1:1:n?-1:1}}function _(e,t,n,a,r,s){const i=[];0===(e=Array.isArray(e)?e:[e]).length&&e.push({});const p=(0,o.createMapFromItems)(e,(e=>e.name?"from":"import")),d=p.get("import");d&&m(d,(e=>`import ${e.join(", ")}`));const u=p.get("from");return u&&m(u,(e=>{var n;return`from ${null!==(n=t.nameForImportFrom)&&void 0!==n?n:t.name} import ${e.join(", ")}`})),i;function m(e,p){const d=e.map((e=>function(e,t){const n=e.name?e.name:t;return{sortText:n,text:e.alias?`${n} as ${e.alias}`:n}}(e,t.name))).sort(((e,t)=>T(e.sortText,t.sortText))).reduce(((e,t)=>(0,o.addIfUnique)(e,t.text)),[]);i.push(function(e,t,n,a,r,s){let i,o="",p="";const d=(0,l.convertPositionToOffset)(s,r.tokenizerOutput.lines);if(t.orderedImports.length>0&&d>t.orderedImports[0].node.start){let e=!0,s=t.orderedImports[0],d=0;for(const i of t.orderedImports){const l=i.importResult?h(i):d;if(a<l){!e&&d<a&&(o=r.tokenizerOutput.predominantEndOfLineSequence+o);break}if(a===l&&i.moduleName>n){e=!0,s=i;break}if(i.followsNonImportStatement){a>d&&(o=r.tokenizerOutput.predominantEndOfLineSequence+o);break}i===t.orderedImports[t.orderedImports.length-1]&&a>l&&(o=r.tokenizerOutput.predominantEndOfLineSequence+o),e=!e&&a<d&&a===l,d=l,s=i}s?(e?p+=r.tokenizerOutput.predominantEndOfLineSequence:o=r.tokenizerOutput.predominantEndOfLineSequence+o,i=(0,l.convertOffsetToPosition)(e?s.node.start:c.TextRange.getEnd(s.node),r.tokenizerOutput.lines)):i={line:0,character:0}}else{i={line:0,character:0};let e=!1;for(const t of r.parserOutput.parseTree.statements){let n=!0;if(47===t.nodeType&&1===t.statements.length){const e=t.statements[0];(48===e.nodeType||3===e.nodeType&&38===e.leftExpression.nodeType&&g.isDunderName(e.leftExpression.value))&&(n=!1)}if(n){i=(0,l.convertOffsetToPosition)(t.start,r.tokenizerOutput.lines),e=!1;break}i=(0,l.convertOffsetToPosition)(t.start+t.length,r.tokenizerOutput.lines),e=!0}p=p+r.tokenizerOutput.predominantEndOfLineSequence+r.tokenizerOutput.predominantEndOfLineSequence,e?o=r.tokenizerOutput.predominantEndOfLineSequence+o:p+=r.tokenizerOutput.predominantEndOfLineSequence}return{range:{start:i,end:i},preChange:o,importStatement:e,postChange:p,importGroup:a}}(p(d),n,t.name,a,r,s))}}function C(e){let t="";for(let n=0;n<e.leadingDots;n++)t+=".";return t+=e.nameParts.map((e=>e.value)).join("."),t}function I(e){let t=2;return e.isLocalTypingsFile||1===e.importType?t=1:0===e.importType&&(t=0),t}function k(e,t,n,a){const r=c.TextRange.getEnd(t),s=(0,y.getTokenAt)(e.tokenizerOutput.tokens,n.start);if(!s||!s.comments||0===s.comments.length){return[{start:r,length:c.TextRange.getEnd(a)-r}]}const i=(0,y.findTokenAfter)(e.tokenizerOutput,c.TextRange.getEnd(t),(e=>12===e.type));if(!i){return[{start:r,length:c.TextRange.getEnd(a)-r}]}const o=c.TextRange.getEnd(i)-r,l=c.TextRange.getEnd(s.comments[s.comments.length-1]);return[{start:r,length:o},{start:l,length:c.TextRange.getEnd(a)-l}]}t.getImportGroup=h,t.compareImportStatements=function(e,t){const n=h(e),a=h(t);return n<a?-1:n>a?1:e.moduleName<t.moduleName?-1:1},t.getTopLevelImports=function(e,t=!1){const n={orderedImports:[],mapByFilePath:new Map};let a=!1,r=!1;return e.statements.forEach((e=>{47===e.nodeType?e.statements.forEach((e=>{20===e.nodeType?(r=!0,function(e,t,n){e.list.forEach((a=>{const r=m.getImportInfo(a.module);let s;r&&r.isImportFound&&(s=r.resolvedUris[r.resolvedUris.length-1]);const i={node:e,subnode:a,importResult:r,resolvedPath:s,moduleName:C(a.module),followsNonImportStatement:n};t.orderedImports.push(i),s&&!s.isEmpty()&&(t.mapByFilePath.has(s.key)||t.mapByFilePath.set(s.key,i))}))}(e,n,a),a=!1):22===e.nodeType?(r=!0,function(e,t,n,a){var r;const s=m.getImportInfo(e.module);let i;s&&s.isImportFound&&(i=s.resolvedUris[s.resolvedUris.length-1]);if(a&&s){t.implicitImports=null!==(r=t.implicitImports)&&void 0!==r?r:new Map;for(const n of s.implicitImports.values()){const a=e.imports.find((e=>e.name.value===n.name));a&&t.implicitImports.set(n.uri.key,a)}}const o={node:e,importResult:s,resolvedPath:i,moduleName:C(e.module),followsNonImportStatement:n};if(t.orderedImports.push(o),i&&!i.isEmpty()){const e=t.mapByFilePath.get(i.key);(!e||20===e.node.nodeType||e.moduleName.length>o.moduleName.length)&&t.mapByFilePath.set(i.key,o)}}(e,n,a,t),a=!1):a=r})):a=r})),n},t.getTextEditsForAutoImportSymbolAddition=function(e,t,n){const a=[];if(!t.node||22!==t.node.nodeType||t.node.isWildcardImport)return a;const r=t.node;if(0===(e=(Array.isArray(e)?e:[e]).filter((e=>!!e.name&&!r.imports.some((t=>{var n;return t.name.value===e.name&&(null===(n=t.alias)||void 0===n?void 0:n.value)===e.alias}))))).length)return a;for(const r of e)a.push(v(r.name,r.alias,t.node,n));const s=(0,o.createMapFromItems)(a,(e=>c.Range.print(e.range))),i=[];for(const e of s.values())1===e.length?i.push(e[0]):i.push({range:e[0].range,replacementText:e.sort(((e,t)=>T(e.importName,t.importName))).map((e=>e.replacementText)).join("")});return i},t.getTextEditsForAutoImportInsertions=function(e,t,n,a){const r=[];if(0===(e=Array.isArray(e)?e:[e]).length)return[];const s=(0,o.createMapFromItems)(e,(e=>{var t;return`${e.module.moduleName}-${null!==(t=e.nameForImportFrom)&&void 0!==t?t:""}`}));for(const e of s.values())(0,o.appendArray)(r,_(e,{name:e[0].module.moduleName,nameForImportFrom:e[0].nameForImportFrom},t,I(e[0].module),n,a));return b(n,r)},t.getTextEditsForAutoImportInsertion=function(e,t,n,a,r,s){return b(r,_(e,t,n,a,r,s))},t.getContainingImportStatement=function(e,t){for(;e&&((0,i.throwIfCancellationRequested)(t),20!==e.nodeType&&22!==e.nodeType);)e=e.parent;return e},t.getAllImportNames=function(e){if(20===e.nodeType){return e.list}return e.imports},t.getImportGroupFromModuleNameAndType=I,t.getTextRangeForImportNameDeletion=function(e,t,...n){const a=[];for(const r of function(e){if(0===e.length)return[];if(1===e.length)return[{start:e[0],end:e[0]}];const t=[];let n=e[0],a=n;for(const r of e)a!==r&&(a+1!==r?(t.push({start:n,end:a}),n=r,a=r):a=r);return t.push({start:n,end:a}),t}(n)){const n=t[r.start],s=t[r.end];if(0===r.start&&t.length===r.end+1)a.push(c.TextRange.fromBounds(n.start,c.TextRange.getEnd(s)));else if(r.end===t.length-1){const i=t[r.start-1];a.push(...k(e,i,n,s))}else{const e=n.start,s=t[r.end+1].start-e;a.push({start:e,length:s})}}return a},t.getRelativeModuleName=function(e,t,n,a,r=!1,s){let i,o=t;(s=void 0!==s?s:(0,u.isFile)(e,t))&&(o=t.getDirectory());let l=n;if(a.stubPath&&l.isChild(a.stubPath)||a.typeshedPath&&l.isChild(a.typeshedPath))return;if(s){l=n.getDirectory();const e=n.stripAllExtensions().fileName;"__init__"!==e?i=e:r&&(i=l.fileName,l=l.getDirectory())}const p=o.getRelativePathComponents(l);let c=".";for(let e=0;e<p.length;e++){const t=p[e];c+=".."===t?".":t,".."!==t&&e!==p.length-1&&(c+=".")}return i&&(c="."===c[c.length-1]?c+i:c+"."+i),c},t.getDirectoryLeadingDotsPointsTo=function(e,t){let n=e;for(let e=1;e<t;e++){if(n.isRoot())return;n=n.getDirectory()}return n},t.getResolvedFilePath=function(e){if(e&&e.isImportFound&&0!==e.resolvedUris.length)return 1===e.resolvedUris.length&&e.resolvedUris[0].equals(d.Uri.empty())?e.packageDirectory?e.packageDirectory:e.searchPath?e.searchPath:void 0:e.resolvedUris[e.resolvedUris.length-1]},t.haveSameParentModule=function(e,t){if(e.length!==t.length)return!1;let n=0;for(n=0;n<e.length-1&&e[n]===t[n];n++);return n===e.length-1}},37356:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.updateNamedTupleBaseClass=t.createNamedTupleType=void 0;const i=n(97652),o=n(96193),l=n(55164),p=n(95960),c=n(71424),d=n(9316),u=s(n(28340)),m=n(21084),y=n(52328),g=n(808),h=n(8312);function f(e,t,n){let a=!1;return e.details.baseClasses=e.details.baseClasses.map((e=>{if(!(0,h.isInstantiableClass)(e)||!h.ClassType.isBuiltIn(e,"NamedTuple"))return e;const r=[];n?t.forEach((e=>{r.push({type:e,isUnbounded:!1})})):r.push({type:t.length>0?(0,h.combineTypes)(t):h.UnknownType.create(),isUnbounded:!0});const s=h.ClassType.cloneForSpecialization(e,void 0,n);return s.details={...s.details},s.details.baseClasses=s.details.baseClasses.map((e=>(0,h.isInstantiableClass)(e)&&h.ClassType.isBuiltIn(e,"tuple")?(0,g.specializeTupleClass)(e,r,n):e)),(0,g.computeMroLinearization)(s),a=!0,s})),a}function T(e,t,n,a,r){return c.Tokenizer.isPythonKeyword(t)?n?`_${r}`:(e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.namedTupleNameKeyword(),a),t):t}t.createNamedTupleType=function(e,t,n,a){var r,s,c;const v=(0,d.getFileInfo)(t);let b="namedtuple",_=!1;if(!a){const e=n.find((e=>{var t;return 0===e.argumentCategory&&"rename"===(null===(t=e.name)||void 0===t?void 0:t.value)}));if(null==e?void 0:e.valueExpression){!0===(0,m.evaluateStaticBoolExpression)(e.valueExpression,v.executionEnvironment,v.definedConstants)&&(_=!0)}}if(0===n.length)e.addDiagnostic(i.DiagnosticRule.reportCallIssue,p.LocMessage.namedTupleFirstArg(),t);else{const a=n[0];0!==a.argumentCategory?e.addDiagnostic(i.DiagnosticRule.reportArgumentType,p.LocMessage.namedTupleFirstArg(),n[0].valueExpression||t):a.valueExpression&&48===a.valueExpression.nodeType&&(b=a.valueExpression.strings.map((e=>e.value)).join(""))}const C=n.find((e=>{var t;return"defaults"===(null===(t=e.name)||void 0===t?void 0:t.value)}));let I=0;if(C&&C.valueExpression){const t=e.getTypeOfExpression(C.valueExpression).type;I=(0,h.isClassInstance)(t)&&(0,g.isTupleClass)(t)&&!(0,g.isUnboundedTupleClass)(t)&&t.tupleTypeArguments?t.tupleTypeArguments.length:void 0}const k=e.getTypingType(t,"NamedTuple")||h.UnknownType.create(),w=h.ClassType.createInstantiable(b,u.getClassFullName(t,v.moduleName,b),v.moduleName,v.fileUri,1107296256,u.getTypeSourceId(t),void 0,(0,h.isInstantiableClass)(k)?k.details.effectiveMetaclass:h.UnknownType.create());w.details.baseClasses.push(k),w.details.typeVarScopeId=u.getScopeIdForNode(t);const S=h.ClassType.getSymbolTable(w);S.set("__class__",y.Symbol.createWithType(68,w));const A=(0,g.synthesizeTypeVarForSelfCls)(w,!0),x=h.FunctionType.createSynthesizedInstance("__new__",1);x.details.declaredReturnType=(0,g.convertToInstance)(A),x.details.constructorTypeVarScopeId=w.details.typeVarScopeId,u.isAssignmentToDefaultsFollowingNamedTuple(t)&&(x.details.flags|=32),x.details.typeVarScopeId=w.details.typeVarScopeId,h.FunctionType.addParameter(x,{category:0,name:"cls",type:A,hasDeclaredType:!0});const P=[],N={category:0,name:"self",type:(0,g.synthesizeTypeVarForSelfCls)(w,!1),hasDeclaredType:!0};let D=!1;const F=[];if(n.length<2)e.addDiagnostic(i.DiagnosticRule.reportCallIssue,p.LocMessage.namedTupleSecondArg(),t),D=!0;else{const t=n[1];if(0!==t.argumentCategory)D=!0;else{if(!a&&t.valueExpression&&48===t.valueExpression.nodeType){const n=t.valueExpression.strings.map((e=>e.value)).join("").split(/[,\s]+/),r=void 0===I?0:Math.max(0,n.length-I);n.forEach(((n,s)=>{if(n=n.trim()){n=T(e,n,_,t.valueExpression,s);const i=h.UnknownType.create(),p={category:0,name:n,type:i,hasDeclaredType:a,hasDefault:s>=r};h.FunctionType.addParameter(x,p);const c=y.Symbol.createWithType(8,i);P.push(n);const d=t.valueExpression,u={type:1,node:d,isRuntimeTypeExpression:!0,uri:v.fileUri,range:(0,o.convertOffsetsToRange)(d.start,l.TextRange.getEnd(d),v.lines),moduleName:v.moduleName,isInExceptSuite:!1};c.addDeclaration(u),S.set(n,c),F.push(i)}}))}else if(31===(null===(r=t.valueExpression)||void 0===r?void 0:r.nodeType)||52===(null===(s=t.valueExpression)||void 0===s?void 0:s.nodeType)){const n=t.valueExpression,r=new Map,s=31===(null===(c=t.valueExpression)||void 0===c?void 0:c.nodeType)?t.valueExpression.entries:t.valueExpression.expressions,d=void 0===I?0:Math.max(0,s.length-I);s.forEach(((t,n)=>{let s,c,u,m="";if(a?52===t.nodeType&&2===t.expressions.length?(u=t.expressions[0],s=t.expressions[1],c=(0,g.convertToInstance)(e.getTypeOfExpressionExpectingType(s).type)):e.addDiagnostic(i.DiagnosticRule.reportArgumentType,p.LocMessage.namedTupleNameType(),t):(u=t,c=h.UnknownType.create()),u){const t=e.getTypeOfExpression(u);(0,h.isClassInstance)(t.type)&&h.ClassType.isBuiltIn(t.type,"str")&&(0,g.isLiteralType)(t.type)?(m=t.type.literalValue,m?m=T(e,m,_,u,n):e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.namedTupleEmptyName(),u)):D=!0}else D=!0;m||(m=`_${n.toString()}`),r.has(m)&&e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,p.LocMessage.namedTupleNameUnique(),u||t),r.set(m,m),c||(c=h.UnknownType.create());const f={category:0,name:m,type:c,hasDeclaredType:a,hasDefault:n>=d};h.FunctionType.addParameter(x,f),F.push(c),P.push(m);const b=y.Symbol.createWithType(2056,c);if(u&&48===u.nodeType){const e={type:1,node:u,uri:v.fileUri,typeAnnotationNode:s,range:(0,o.convertOffsetsToRange)(u.start,l.TextRange.getEnd(u),v.lines),moduleName:v.moduleName,isInExceptSuite:!1};b.addDeclaration(e)}S.set(m,b)})),e.setTypeResultForNode(n,{type:h.UnknownType.create()})}else D=!0;t.valueExpression&&!D&&e.setTypeResultForNode(t.valueExpression,{type:h.AnyType.create()})}}D&&(x.details.parameters=[],h.FunctionType.addDefaultParameters(x),F.push(h.AnyType.create(!1)),F.push(h.AnyType.create(!0)));const E=h.FunctionType.createSynthesizedInstance("__init__");h.FunctionType.addParameter(E,N),h.FunctionType.addDefaultParameters(E),E.details.declaredReturnType=e.getNoneType(),E.details.constructorTypeVarScopeId=w.details.typeVarScopeId,S.set("__new__",y.Symbol.createWithType(4,x)),S.set("__init__",y.Symbol.createWithType(4,E));const M=h.FunctionType.createSynthesizedInstance("keys"),O=h.FunctionType.createSynthesizedInstance("items");M.details.declaredReturnType=e.getBuiltInObject(t,"list",[e.getBuiltInObject(t,"str")]),O.details.declaredReturnType=M.details.declaredReturnType,S.set("keys",y.Symbol.createWithType(8,M)),S.set("items",y.Symbol.createWithType(8,O));const z=h.FunctionType.createSynthesizedInstance("__len__");if(z.details.declaredReturnType=e.getBuiltInObject(t,"int"),h.FunctionType.addParameter(z,N),S.set("__len__",y.Symbol.createWithType(4,z)),D){const n=h.FunctionType.createSynthesizedInstance("__getattribute__");n.details.declaredReturnType=h.AnyType.create(),h.FunctionType.addParameter(n,N),h.FunctionType.addParameter(n,{category:0,name:"name",type:e.getBuiltInObject(t,"str")}),S.set("__getattribute__",y.Symbol.createWithType(4,n))}const V=e.getBuiltInType(t,"tuple"),U=e.getBuiltInType(t,"str");if(!D&&U&&(0,h.isInstantiableClass)(U)&&V&&(0,h.isInstantiableClass)(V)){const e=P.map((e=>({type:h.ClassType.cloneAsInstance(h.ClassType.cloneWithLiteral(U,e)),isUnbounded:!1}))),t=h.ClassType.cloneAsInstance((0,g.specializeTupleClass)(V,e));S.set("__match_args__",y.Symbol.createWithType(4,t))}return f(w,F,!D),(0,g.computeMroLinearization)(w),w},t.updateNamedTupleBaseClass=f},86084:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getTypeOfTernaryOperation=t.getTypeOfUnaryOperation=t.getTypeOfAugmentedAssignment=t.getTypeOfBinaryOperation=t.validateBinaryOperation=void 0;const a=n(72484),r=n(97652),s=n(61328),i=n(95960),o=n(9316),l=n(28340),p=n(69160),c=n(21084),d=n(808),u=n(8312),m={0:["__add__","__radd__"],33:["__sub__","__rsub__"],26:["__mul__","__rmul__"],13:["__floordiv__","__rfloordiv__"],10:["__truediv__","__rtruediv__"],24:["__mod__","__rmod__"],29:["__pow__","__rpow__"],22:["__matmul__","__rmatmul__"],3:["__and__","__rand__"],6:["__or__","__ror__"],8:["__xor__","__rxor__"],17:["__lshift__","__rlshift__"],31:["__rshift__","__rrshift__"],12:["__eq__","__eq__"],28:["__ne__","__ne__"],20:["__lt__","__gt__"],21:["__le__","__ge__"],15:["__gt__","__lt__"],16:["__ge__","__le__"]},y={36:!0,37:!0,39:!0,40:!0,41:!0,42:!0},g=64;function h(e,t,n,a,r,s,o,p){const c=n.type,h=a.type;let f,v=e.makeTopLevelTypeVarsConcrete(c);if(void 0!==y[t]){if(36===t){if(!e.canBeTruthy(v))return c;if(!e.canBeFalsy(v))return h;if(v=e.removeTruthinessFromType(v),(0,u.isNever)(h))return v}else if(37===t){if(!e.canBeFalsy(v))return c;if(!e.canBeTruthy(v))return h;if(v=e.removeFalsinessFromType(v),(0,u.isNever)(h))return v}if((0,u.isNever)(c)||(0,u.isNever)(h))return u.NeverType.createNever();41===t||42===t?(f=e.mapSubtypesExpandTypeVars(h,void 0,((s,p)=>e.mapSubtypesExpandTypeVars(v,{conditionFilter:(0,d.getTypeCondition)(s)},(c=>{var m;if((0,u.isAnyOrUnknown)(c)||(0,u.isAnyOrUnknown)(p))return(0,d.preserveUnknown)(c,s);let y=e.getTypeOfMagicMethodCall(s,"__contains__",[{type:c,isIncomplete:n.isIncomplete}],r,void 0);if(!y){const t=null===(m=e.getTypeOfIterator({type:s,isIncomplete:a.isIncomplete},!1,r,!1))||void 0===m?void 0:m.type;t&&e.assignType(t,c)&&(y=e.getBuiltInObject(r,"bool"))}return y||o.addMessage(i.LocMessage.typeNotSupportBinaryOperator().format({operator:(0,l.printOperator)(t),leftType:e.printType(c),rightType:e.printType(s)})),y})))),f&&!(0,u.isNever)(f)&&(f=e.getBuiltInObject(r,"bool"))):f=e.mapSubtypesExpandTypeVars(v,void 0,((n,a)=>e.mapSubtypesExpandTypeVars(h,{conditionFilter:(0,d.getTypeCondition)(n)},((n,s)=>36===t||37===t?(0,u.combineTypes)([a,s]):e.getBuiltInObject(r,"bool")))))}else if(m[t]){if((0,u.isNever)(c)||(0,u.isNever)(h))return u.NeverType.createNever();if(p.isLiteralMathAllowed){const e=(0,d.getLiteralTypeClassName)(c);if(e&&!(0,d.getTypeCondition)(c)){if(e===(0,d.getLiteralTypeClassName)(h)&&!(0,d.getTypeCondition)(h)&&(0,d.getUnionSubtypeCount)(c)*(0,d.getUnionSubtypeCount)(h)<g)if("str"===e||"bytes"===e)0===t&&(f=(0,d.mapSubtypes)(c,(e=>(0,d.mapSubtypes)(h,(t=>{const n=e,a=t;return u.ClassType.cloneWithLiteral(n,n.literalValue+a.literalValue)})))));else if("int"===e&&(0===t||33===t||26===t||13===t||24===t)){let e=!0;f=(0,d.mapSubtypes)(c,(n=>(0,d.mapSubtypes)(h,(a=>{try{const r=n,s=a,i=BigInt(r.literalValue),o=BigInt(s.literalValue);let l;return 0===t?l=i+o:33===t?l=i-o:26===t?l=i*o:13===t?o!==BigInt(0)&&(l=i/o):24===t&&o!==BigInt(0)&&(l=i%o),void 0===l||"number"==typeof l&&isNaN(l)?void(e=!1):(l>=Number.MIN_SAFE_INTEGER&&l<=Number.MAX_SAFE_INTEGER&&(l=Number(l)),u.ClassType.cloneWithLiteral(r,l))}catch{return void(e=!1)}})))),e||(f=void 0)}}}f||(f=e.mapSubtypesExpandTypeVars(c,void 0,((c,y)=>e.mapSubtypesExpandTypeVars(h,{conditionFilter:(0,d.getTypeCondition)(c)},((g,h)=>{if((0,u.isAnyOrUnknown)(y)||(0,u.isAnyOrUnknown)(h))return(0,d.preserveUnknown)(y,h);const f=e.getTupleClassType();if(p.isTupleAddAllowed&&0===t&&(0,u.isClassInstance)(c)&&(0,d.isTupleClass)(c)&&c.tupleTypeArguments&&(0,u.isClassInstance)(g)&&(0,d.isTupleClass)(g)&&g.tupleTypeArguments&&f&&(0,u.isInstantiableClass)(f)&&(!(0,d.isUnboundedTupleClass)(c)||!(0,d.isUnboundedTupleClass)(g)))return u.ClassType.cloneAsInstance((0,d.specializeTupleClass)(f,[...c.tupleTypeArguments,...g.tupleTypeArguments]));const v=m[t][0];let b=e.getTypeOfMagicMethodCall(T(e,y),v,[{type:h,isIncomplete:a.isIncomplete}],r,s);if(b||y===c||(b=e.getTypeOfMagicMethodCall(T(e,c),v,[{type:h,isIncomplete:a.isIncomplete}],r,s)),b||h===g||(b=e.getTypeOfMagicMethodCall(T(e,c),v,[{type:g,isIncomplete:a.isIncomplete}],r,s)),!b){const a=m[t][1];b=e.getTypeOfMagicMethodCall(T(e,h),a,[{type:y,isIncomplete:n.isIncomplete}],r,s),b||h===g||(b=e.getTypeOfMagicMethodCall(T(e,g),a,[{type:y,isIncomplete:n.isIncomplete}],r,s)),b||y===c||(b=e.getTypeOfMagicMethodCall(T(e,g),a,[{type:c,isIncomplete:n.isIncomplete}],r,s))}return b||(s?o.addMessage(i.LocMessage.typeNotSupportBinaryOperatorBidirectional().format({operator:(0,l.printOperator)(t),leftType:e.printType(c),rightType:e.printType(g),expectedType:e.printType(s.expectedType)})):o.addMessage(i.LocMessage.typeNotSupportBinaryOperator().format({operator:(0,l.printOperator)(t),leftType:e.printType(c),rightType:e.printType(g)}))),b})))))}return null!=f?f:u.UnknownType.create()}function f(e,t){if(!(0,u.isInstantiableClass)(e))return!1;const n=e.details.effectiveMetaclass;if(!n||!(0,u.isInstantiableClass)(n))return!1;if(u.ClassType.isBuiltIn(n,"type"))return!1;const a=(0,d.lookUpClassMember)(n,t);return!!a&&(!(0,u.isAnyOrUnknown)(a.classType)&&(!(0,u.isInstantiableClass)(a.classType)||!u.ClassType.isBuiltIn(a.classType,"type")))}function T(e,t){return(0,u.isFunction)(t)||(0,u.isOverloadedFunction)(t)?e.getObjectType():t}t.validateBinaryOperation=h,t.getTypeOfBinaryOperation=function e(t,n,p,c){const m=n.leftExpression;let g=n.rightExpression,T=!1,v=!1;(0,l.operatorSupportsChaining)(n.operator)&&7===g.nodeType&&!g.parenthesized&&(0,l.operatorSupportsChaining)(g.operator)&&(e(t,g,p,c),g=g.leftExpression);let b,_=37===n.operator||36===n.operator?null==c?void 0:c.expectedType:void 0;26===n.operator&&c&&(0,u.isClassInstance)(c.expectedType)&&u.ClassType.isBuiltIn(c.expectedType,"list")&&c.expectedType.typeArguments&&c.expectedType.typeArguments.length>=1&&31===n.leftExpression.nodeType&&(b=c.expectedType);const C=null!=_?_:b,I=t.getTypeOfExpression(m,p,(0,d.makeInferenceContext)(C));let k=I.type;_||(37===n.operator||36===n.operator?(0,d.someSubtypes)(k,(e=>!!(0,u.isClassInstance)(e)&&(u.ClassType.isTypedDictClass(e)||e.details.typeParameters.length>0)))&&(_=k):(0===n.operator&&31===n.rightExpression.nodeType||6===n.operator&&(0,u.isClassInstance)(k)&&u.ClassType.isTypedDictClass(k))&&(_=k));const w=t.getTypeOfExpression(g,p,(0,d.makeInferenceContext)(_));let S=w.type;if((I.isIncomplete||w.isIncomplete)&&(T=!0),6===n.operator&&!f(k,"__or__")&&!f(S,"__ror__")){let e=S,a=k;if(!(0,d.isNoneInstance)(k)&&(0,d.isNoneInstance)(S)?e=(0,d.convertToInstantiable)(t.getNoneType()):!(0,d.isNoneInstance)(S)&&(0,d.isNoneInstance)(k)&&(a=(0,d.convertToInstantiable)(t.getNoneType())),(0,d.isUnionableType)([a,e])){const l=(0,o.getFileInfo)(n);if(l.isStubFile||0!=(4&p)||l.executionEnvironment.pythonVersion.isGreaterOrEqualTo(s.pythonVersion3_10)||(0,u.isAnyOrUnknown)(a)||t.addDiagnostic(r.DiagnosticRule.reportGeneralTypeIssues,i.LocMessage.unionSyntaxIllegal(),n,n.operatorToken),!t.validateTypeArg({...I,node:m},{allowVariadicTypeVar:!0,allowUnpackedTuples:!0})||!t.validateTypeArg({...w,node:g},{allowVariadicTypeVar:!0,allowUnpackedTuples:!0}))return{type:u.UnknownType.create()};a=t.reportMissingTypeArguments(n.leftExpression,a,128|p),e=t.reportMissingTypeArguments(n.rightExpression,e,128|p);let c=(0,u.combineTypes)([a,e]);const d=t.getUnionClassType();if(d&&(0,u.isInstantiableClass)(d)&&(c=u.TypeBase.cloneAsSpecialForm(c,u.ClassType.cloneAsInstance(d))),!l.isStubFile){let e,n,a;if(48===m.nodeType?(e=m,n=g,a=S):48===g.nodeType&&(e=g,n=m,a=k),e&&n&&a){let n=!0;(0,u.isClass)(a)&&(a.isTypeArgumentExplicit&&!(0,u.isClassInstance)(a)||(n=!1)),n||t.addDiagnostic(r.DiagnosticRule.reportGeneralTypeIssues,i.LocMessage.unionForwardReferenceNotAllowed(),e)}}return{type:c}}}if(0!=(256&p)&&6!==n.operator)return t.addDiagnostic(r.DiagnosticRule.reportInvalidTypeForm,i.LocMessage.binaryOperationNotAllowed(),n),{type:u.UnknownType.create()};let A=!1;void 0===y[n.operator]&&(12===n.operator||28===n.operator?k=(0,d.removeNoneFromUnion)(k):A=(0,d.isOptionalType)(k),12!==n.operator&&28!==n.operator||(S=(0,d.removeNoneFromUnion)(S)));const x=new a.DiagnosticAddendum,P=!(0,l.isWithinLoop)(n)&&!(0,l.getEnclosingLambda)(n),N=!(0,u.isUnion)(k);let D=h(t,n.operator,{type:k,isIncomplete:I.isIncomplete},{type:S,isIncomplete:w.isIncomplete},n,c,x,{isLiteralMathAllowed:P,isTupleAddAllowed:N});if(!x.isEmpty()){if(v=!0,!T)if(A&&1===x.getMessages().length)t.addDiagnostic(r.DiagnosticRule.reportOptionalOperand,i.LocMessage.noneOperator().format({operator:(0,l.printOperator)(n.operator)}),n.leftExpression);else{let e="";((0,u.isUnion)(t.makeTopLevelTypeVarsConcrete(k))||(0,u.isUnion)(t.makeTopLevelTypeVarsConcrete(S)))&&(e=x.getString()),t.addDiagnostic(r.DiagnosticRule.reportOperatorIssue,i.LocMessage.typeNotSupportBinaryOperator().format({operator:(0,l.printOperator)(n.operator),leftType:t.printType(k),rightType:t.printType(S)})+e,n)}D=u.UnknownType.create()}return{type:D,isIncomplete:T,typeErrors:v}},t.getTypeOfAugmentedAssignment=function(e,t,n){const s={1:["__iadd__",0],34:["__isub__",33],27:["__imul__",26],14:["__ifloordiv__",13],11:["__itruediv__",10],25:["__imod__",24],30:["__ipow__",29],23:["__imatmul__",22],4:["__iand__",3],7:["__ior__",6],9:["__ixor__",8],18:["__ilshift__",17],32:["__irshift__",31]};let o,c;const m=new a.DiagnosticAddendum,y=e.getTypeOfExpression(t.leftExpression),f=y.type;let T;7===t.operator&&(T=f);const v=e.getTypeOfExpression(t.rightExpression,void 0,(0,d.makeInferenceContext)(T)),b=v.type,_=!!v.isIncomplete||!!y.isIncomplete;return(0,u.isNever)(f)||(0,u.isNever)(b)?c={type:u.NeverType.createNever(),isIncomplete:_}:(o=e.mapSubtypesExpandTypeVars(f,void 0,((a,r)=>e.mapSubtypesExpandTypeVars(b,{conditionFilter:(0,d.getTypeCondition)(a)},((i,o)=>{if((0,u.isAnyOrUnknown)(r)||(0,u.isAnyOrUnknown)(o))return(0,d.preserveUnknown)(r,o);const c=s[t.operator][0];let T=e.getTypeOfMagicMethodCall(r,c,[{type:o,isIncomplete:v.isIncomplete}],t,n);if(T||r===a||(T=e.getTypeOfMagicMethodCall(a,c,[{type:o,isIncomplete:v.isIncomplete}],t,n)),T||o===i||(T=e.getTypeOfMagicMethodCall(a,c,[{type:i,isIncomplete:v.isIncomplete}],t,n)),!T){const a=s[t.operator][1],i=!(0,l.isWithinLoop)(t)&&function(e,t){if(38!==t.nodeType)return!1;const n=e.lookUpSymbolRecursive(t,t.value,!1);if(!n)return!1;const a=(0,p.getScopeForNode)(t);return a===n.scope}(e,t.leftExpression)&&(0,d.getUnionSubtypeCount)(f)*(0,d.getUnionSubtypeCount)(b)<g,c=!(0,u.isUnion)(f);T=h(e,a,{type:r,isIncomplete:y.isIncomplete},{type:o,isIncomplete:v.isIncomplete},t,n,m,{isLiteralMathAllowed:i,isTupleAddAllowed:c})}return T})))),m.isEmpty()&&o&&!(0,u.isNever)(o)||(_||e.addDiagnostic(r.DiagnosticRule.reportOperatorIssue,i.LocMessage.typeNotSupportBinaryOperator().format({operator:(0,l.printOperator)(t.operator),leftType:e.printType(f),rightType:e.printType(b)})+m.getString(),t),o=u.UnknownType.create()),c={type:o,isIncomplete:_}),e.assignTypeToExpression(t.destExpression,c.type,!!c.isIncomplete,t.rightExpression),c},t.getTypeOfUnaryOperation=function(e,t,n,a){if(0!=(256&n))return e.addDiagnostic(r.DiagnosticRule.reportInvalidTypeForm,i.LocMessage.unaryOperationNotAllowed(),t),{type:u.UnknownType.create()};const s=e.getTypeOfExpression(t.expression);let o=e.makeTopLevelTypeVarsConcrete((0,d.transformPossibleRecursiveTypeAlias)(s.type));const p=s.isIncomplete;if((0,u.isNever)(o))return{type:u.NeverType.createNever(),isIncomplete:p};const c={0:"__pos__",33:"__neg__",5:"__invert__"};let m;if(38!==t.operator&&(0,d.isOptionalType)(o)&&(e.addDiagnostic(r.DiagnosticRule.reportOptionalOperand,i.LocMessage.noneOperator().format({operator:(0,l.printOperator)(t.operator)}),t.expression),o=(0,d.removeNoneFromUnion)(o)),!s.isIncomplete){const e=(0,d.getLiteralTypeClassName)(o);"int"===e?0===t.operator?m=o:33===t.operator&&(m=(0,d.mapSubtypes)(o,(e=>{const t=e;return u.ClassType.cloneWithLiteral(t,-t.literalValue)}))):"bool"===e&&38===t.operator&&(m=(0,d.mapSubtypes)(o,(e=>{const t=e;return u.ClassType.cloneWithLiteral(t,!t.literalValue)})))}if(!m)if(38===t.operator)m=e.getBuiltInObject(t,"bool"),m||(m=u.UnknownType.create());else{if((0,u.isAnyOrUnknown)(o))m=o;else{const n=c[t.operator];m=e.getTypeOfMagicMethodCall(o,n,[],t,a)}m||(p||(a?e.addDiagnostic(r.DiagnosticRule.reportOperatorIssue,i.LocMessage.typeNotSupportUnaryOperatorBidirectional().format({operator:(0,l.printOperator)(t.operator),type:e.printType(o),expectedType:e.printType(a.expectedType)}),t):e.addDiagnostic(r.DiagnosticRule.reportOperatorIssue,i.LocMessage.typeNotSupportUnaryOperator().format({operator:(0,l.printOperator)(t.operator),type:e.printType(o)}),t)),m=u.UnknownType.create())}return{type:m,isIncomplete:p}},t.getTypeOfTernaryOperation=function(e,t,n,a){const s=(0,o.getFileInfo)(t);if(0!=(256&n))return e.addDiagnostic(r.DiagnosticRule.reportInvalidTypeForm,i.LocMessage.ternaryNotAllowed(),t),{type:u.UnknownType.create()};e.getTypeOfExpression(t.testExpression);const l=[];let p=!1,d=!1;const m=(0,c.evaluateStaticBoolExpression)(t.testExpression,s.executionEnvironment,s.definedConstants);if(!1!==m&&e.isNodeReachable(t.ifExpression)){const r=e.getTypeOfExpression(t.ifExpression,n,a);l.push(r.type),r.isIncomplete&&(p=!0),r.typeErrors&&(d=!0)}if(!0!==m&&e.isNodeReachable(t.elseExpression)){const r=e.getTypeOfExpression(t.elseExpression,n,a);l.push(r.type),r.isIncomplete&&(p=!0),r.typeErrors&&(d=!0)}return{type:(0,u.combineTypes)(l),isIncomplete:p,typeErrors:d}}},92488:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isParamSpecKwargsArgument=t.isParamSpecArgsArgument=t.getParameterListDetails=t.firstParametersExcludingSelf=t.ParameterSource=t.isTypedKwargs=void 0;const a=n(80944),r=n(8312),s=n(808);var i;t.isTypedKwargs=function(e){return 2===e.category&&(0,r.isClassInstance)(e.type)&&(0,r.isUnpackedClass)(e.type)&&r.ClassType.isTypedDictClass(e.type)&&!!e.type.details.typedDictEntries},function(e){e[e.PositionOnly=0]="PositionOnly",e[e.PositionOrKeyword=1]="PositionOrKeyword",e[e.KeywordOnly=2]="KeywordOnly"}(i||(t.ParameterSource=i={})),t.firstParametersExcludingSelf=function(e){return e.details.parameters.find((e=>!((0,r.isTypeVar)(e.type)&&e.type.details.isSynthesizedSelf)))},t.getParameterListDetails=function(e){const t={firstPositionOrKeywordIndex:0,positionParamCount:0,positionOnlyParamCount:0,params:[],hasUnpackedVariadicTypeVar:!1,hasUnpackedTypedDict:!1,paramSpec:e.details.paramSpec};let n=e.details.parameters.findIndex((e=>(0,r.isPositionOnlySeparator)(e)));if(n<0)for(let t=0;t<e.details.parameters.length;t++){const s=e.details.parameters[t];if(0!==s.category)break;if(!s.name)break;if(!(0,a.isDunderName)(s.name)&&s.name.startsWith("__"))n=t+1;else if(t>0||r.FunctionType.isStaticMethod(e))break}for(let a=0;a<n&&!e.details.parameters[a].hasDefault;a++)t.positionOnlyParamCount++;let o=!1;const l=(a,s,l,p,c)=>{if(a.name){let d;d=void 0!==c?c:1===a.category?i.PositionOnly:o?i.KeywordOnly:n>=0&&s<n?i.PositionOnly:i.PositionOrKeyword,t.params.push({param:a,index:s,type:null!=l?l:r.FunctionType.getEffectiveParameterType(e,s),defaultArgType:p,source:d})}};if(e.details.parameters.forEach(((a,p)=>{var c,d;if(1===a.category){const s=r.FunctionType.getEffectiveParameterType(e,p);if(a.name&&(0,r.isUnpackedClass)(s)&&s.tupleTypeArguments){const e=p<t.positionOnlyParamCount;s.tupleTypeArguments.forEach(((n,s)=>{const o=(0,r.isVariadicTypeVar)(n.type)||n.isUnbounded?1:0;1===o&&(t.argsIndex=t.params.length),(0,r.isVariadicTypeVar)(a.type)&&(t.hasUnpackedVariadicTypeVar=!0),l({category:o,name:`${a.name}[${s.toString()}]`,isNameSynthesized:!0,type:n.type,hasDeclaredType:!0},p,n.type,void 0,i.PositionOnly),0===o&&t.positionParamCount++,s>0&&e&&t.positionOnlyParamCount++})),!o&&(n<0||p>=n)&&(t.firstKeywordOnlyIndex=t.params.length,o=!0)}else a.name&&void 0===t.argsIndex&&(t.argsIndex=t.params.length,(0,r.isVariadicTypeVar)(a.type)&&(t.hasUnpackedVariadicTypeVar=!0)),!o&&(n<0||p>=n)&&(t.firstKeywordOnlyIndex=t.params.length,a.name&&t.firstKeywordOnlyIndex++,o=!0),l(a,p)}else if(2===a.category){o=!0;const n=r.FunctionType.getEffectiveParameterType(e,p);if((0,r.isClassInstance)(n)&&(0,r.isUnpackedClass)(n)&&n.details.typedDictEntries){void 0===t.firstKeywordOnlyIndex&&(t.firstKeywordOnlyIndex=t.params.length);const e=n;n.details.typedDictEntries.knownItems.forEach(((t,n)=>{const a=(0,s.partiallySpecializeType)(t.valueType,e);l({category:0,name:n,type:a,hasDeclaredType:!0,hasDefault:!t.isRequired},p,a)})),n.details.typedDictEntries.extraItems&&(l({category:2,name:"kwargs",type:n.details.typedDictEntries.extraItems.valueType,hasDeclaredType:!0,hasDefault:!1},p,n.details.typedDictEntries.extraItems.valueType),t.kwargsIndex=t.params.length-1),t.hasUnpackedTypedDict=!0,t.unpackedKwargsTypedDictType=n}else a.name&&(void 0===t.kwargsIndex&&(t.kwargsIndex=t.params.length),void 0===t.firstKeywordOnlyIndex&&(t.firstKeywordOnlyIndex=t.params.length),l(a,p))}else 0===a.category&&(a.name&&!o&&t.positionParamCount++,l(a,p,void 0,(null===(c=e.specializedTypes)||void 0===c?void 0:c.parameterDefaultArgs)?null===(d=e.specializedTypes)||void 0===d?void 0:d.parameterDefaultArgs[p]:void 0))})),t.params.length>=2){const e=t.params[t.params.length-2].param,n=t.params[t.params.length-1].param;1===e.category&&(0,r.isTypeVar)(e.type)&&"args"===e.type.paramSpecAccess&&2===n.category&&(0,r.isTypeVar)(n.type)&&"kwargs"===n.type.paramSpecAccess&&(t.paramSpec=r.TypeVarType.cloneForParamSpecAccess(e.type,void 0))}return t.firstPositionOrKeywordIndex=t.params.findIndex((e=>e.source!==i.PositionOnly)),t.firstPositionOrKeywordIndex<0&&(t.firstPositionOrKeywordIndex=t.params.length),t},t.isParamSpecArgsArgument=function(e,t){let n=!0;return(0,s.doForEachSubtype)(t,(t=>{(0,r.isParamSpec)(t)&&"args"===t.paramSpecAccess&&(0,r.isTypeSame)(t,e,{ignoreTypeFlags:!0})||(0,r.isClassInstance)(t)&&t.tupleTypeArguments&&1===t.tupleTypeArguments.length&&t.tupleTypeArguments[0].isUnbounded&&(0,r.isAnyOrUnknown)(t.tupleTypeArguments[0].type)||(0,r.isAnyOrUnknown)(t)||(n=!1)})),n},t.isParamSpecKwargsArgument=function(e,t){let n=!0;return(0,s.doForEachSubtype)(t,(t=>{(0,r.isParamSpec)(t)&&"kwargs"===t.paramSpecAccess&&(0,r.isTypeSame)(t,e,{ignoreTypeFlags:!0})||(0,r.isClassInstance)(t)&&r.ClassType.isBuiltIn(t,"dict")&&t.typeArguments&&2===t.typeArguments.length&&(0,r.isClassInstance)(t.typeArguments[0])&&r.ClassType.isBuiltIn(t.typeArguments[0],"str")&&(0,r.isAnyOrUnknown)(t.typeArguments[1])||(0,r.isAnyOrUnknown)(t)||(n=!1)})),n}},88288:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ParentDirectoryCache=void 0;const a=n(28040);t.ParentDirectoryCache=class{constructor(e){this._importRootGetter=e,this._importChecked=new Map,this._cachedResults=new Map,this._libPathCache=void 0}getImportResult(e,t,n){var a,r,s,i;const o=null===(a=this._cachedResults.get(t))||void 0===a?void 0:a.get(e.key);if(o)return null!=o?o:n;const l=null===(r=this._importChecked.get(t))||void 0===r?void 0:r.get(e.key);return l?l.importPath&&null!==(i=null===(s=this._cachedResults.get(t))||void 0===s?void 0:s.get(l.importPath.key))&&void 0!==i?i:n:void 0}checkValidPath(e,t,n){var a;return!!t.startsWith(n)&&(this._libPathCache=null!==(a=this._libPathCache)&&void 0!==a?a:this._importRootGetter().map((t=>e.realCasePath(t))).filter((e=>e!==n)).filter((e=>e.startsWith(n))),!this._libPathCache.some((e=>t.startsWith(e))))}checked(e,t,n){(0,a.getOrAdd)(this._importChecked,t,(()=>new Map)).set(e.key,n)}add(e){(0,a.getOrAdd)(this._cachedResults,e.importName,(()=>new Map)).set(e.path.key,e.importResult)}reset(){this._importChecked.clear(),this._cachedResults.clear(),this._libPathCache=void 0}}},75108:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ParseTreeCleanerWalker=void 0;const i=s(n(9316)),o=n(78232);class l extends o.ParseTreeWalker{constructor(e){super(),this._parseTree=e}clean(){this.walk(this._parseTree)}visitNode(e){return i.cleanNodeAnalysisInfo(e),super.visitNode(e)}}t.ParseTreeCleanerWalker=l},28340:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.getTokenIndexAtLeft=t.getCallNodeAndActiveParameterIndex=t.getEnclosingParameter=t.CallNodeWalker=t.NameNodeWalker=t.isAssignmentToDefaultsFollowingNamedTuple=t.isDocString=t.getDocString=t.isWithinAssertExpression=t.isWithinLoop=t.isWithinAnnotationComment=t.isWithinTypeAnnotation=t.isWithinDefaultParamInitializer=t.isPartialMatchingExpression=t.isMatchingExpression=t.containsAwaitNode=t.isSuiteEmpty=t.isNodeContainedWithinNodeType=t.getParentAnnotationNode=t.getParentNodeOfType=t.isNodeContainedWithin=t.isRequiredAllowedForAssignmentTarget=t.isClassVarAllowedForAssignmentTarget=t.isFinalAllowedForAssignmentTarget=t.getArgumentsByRuntimeOrder=t.getTypeAnnotationNode=t.getExecutionScopeNode=t.getTypeVarScopeNode=t.getEvaluationScopeNode=t.getEvaluationNodeForAssignmentExpression=t.getEnclosingSuiteOrModule=t.getEnclosingClassOrFunction=t.getEnclosingLambda=t.getEnclosingFunctionEvaluationScope=t.getEnclosingFunction=t.getEnclosingClassOrModule=t.getEnclosingModule=t.getEnclosingClass=t.getEnclosingSuite=t.getDecoratorForName=t.getCallForName=t.printOperator=t.printExpression=t.printArgument=t.getTypeSourceId=t.getClassFullName=t.isCompliantWithNodeRangeRules=t.findNodeByOffset=t.findNodeByPosition=t.getNodeDepth=void 0,t.isSimpleDefault=t.checkDecorator=t.getTypeVarScopesForNode=t.getScopeIdForNode=t.getVariableDocStringNode=t.operatorSupportsChaining=t.isValidLocationForFutureImport=t.isUnannotatedFunction=t.isBlankLine=t.getFullStatementRange=t.getStringValueRange=t.getStringNodeValueRange=t.isLastNameOfDottedName=t.isFirstNameOfDottedName=t.getFirstNameOfDottedName=t.getDottedName=t.getDecoratorName=t.getDottedNameWithGivenNodeAsLastName=t.getFirstAncestorOrSelf=t.getFirstAncestorOrSelfOfKind=t.getAncestorsIncludingSelf=t.isLastNameOfModuleName=t.isFromImportAlias=t.isFromImportName=t.isFromImportModuleName=t.isImportAlias=t.isImportModuleName=t.getTypeAnnotationForParameter=t.isFunctionSuiteEmpty=t.getFileInfoFromNode=t.getModuleNode=t.isWriteAccess=t.printParseNodeType=t.getCommentsAtTokenIndex=t.findTokenAfter=t.getIndexOfTokenOverlapping=t.getTokenOverlapping=t.getTokenAt=t.getTokenAtIndex=t.isWhitespace=t.getTokenAtLeft=void 0;const i=s(n(9316)),o=n(86016),l=n(83181),p=n(96193),c=n(55164),d=n(48256),u=n(79428),m=n(9316),y=n(78232);function g(e,t){if(t<e.start||t>c.TextRange.getEnd(e))return;let n=(0,y.getChildNodes)(e);if(h(e)&&n.length>20){const e=(0,d.getIndexContaining)(n,t);e>=0&&(n=[n[e]])}for(const a of n){if(!a)continue;const n=g(a,t);if(n)return 5===e.nodeType&&n===e.leftExpression?e.destExpression:n}return e}function h(e){return 3!==e.nodeType&&48!==e.nodeType}function f(e,t){let n="";return 1===e.argumentCategory?n="*":2===e.argumentCategory&&(n="**"),e.name&&(n+=e.name.value+"="),n+=T(e.valueExpression,t),n}function T(e,t=0){switch(e.nodeType){case 38:return e.value;case 35:return T(e.leftExpression,t)+"."+e.memberName.value;case 9:{let n=T(e.leftExpression,t);return 35!==e.leftExpression.nodeType&&38!==e.leftExpression.nodeType&&24!==e.leftExpression.nodeType&&9!==e.leftExpression.nodeType&&(n=`(${n})`),n+"("+e.arguments.map((e=>f(e,t))).join(", ")+")"}case 24:return T(e.baseExpression,t)+"["+e.items.map((e=>f(e,t))).join(", ")+(e.trailingComma?",":"")+"]";case 55:{const n=v(e.operator)+T(e.expression,t);return e.parenthesized?`(${n})`:n}case 7:{const n=T(e.leftExpression,t)+" "+v(e.operator)+" "+T(e.rightExpression,t);return e.parenthesized?`(${n})`:n}case 40:{let t=e.value.toString();return t.endsWith("n")&&(t=t.substring(0,t.length-1)),e.isImaginary&&(t+="j"),t}case 48:return 1&t&&e.typeAnnotation?T(e.typeAnnotation,t):e.strings.map((e=>T(e,t))).join(" ");case 49:{let n="";8&e.token.flags&&(n+="r"),16&e.token.flags&&(n+="u"),32&e.token.flags&&(n+="b"),64&e.token.flags&&(n+="f");let a=e.token.escapedValue;if(0==(2&t)){const e=32;a=a.slice(0,e)}return 4&e.token.flags?1&e.token.flags?n+=`'''${a}'''`:n+=`"""${a}"""`:1&e.token.flags?n+=`'${a}'`:n+=`"${a}"`,n}case 27:{let t="f",n="";const a=[...e.middleTokens,...e.fieldExpressions].sort(((e,t)=>e.start-t.start));for(;a.length>0;){const e=a.shift();n+="nodeType"in e?`{${T(e)}}`:e.escapedValue}return 4&e.token.flags?1&e.token.flags?t+=`'''${n}'''`:t+=`"""${n}"""`:1&e.token.flags?t+=`'${n}'`:t+=`"${n}"`,t}case 3:return T(e.leftExpression,t)+" = "+T(e.rightExpression,t);case 4:return T(e.name,t)+" := "+T(e.rightExpression,t);case 54:return T(e.valueExpression,t)+": "+T(e.typeAnnotation,t);case 5:return T(e.leftExpression,t)+" "+v(e.operator)+" "+T(e.rightExpression,t);case 6:{const n="await "+T(e.expression,t);return e.parenthesized?`(${n})`:n}case 51:return T(e.ifExpression,t)+" if "+T(e.testExpression,t)+" else "+T(e.elseExpression,t);case 31:return`[${e.entries.map((e=>T(e,t))).join(", ")}]`;case 56:return"*"+T(e.expression,t);case 52:{const n=e.expressions.map((e=>T(e,t)));return 1===n.length?`(${n[0]}, )`:`(${n.join(", ")})`}case 60:return e.expression?"yield "+T(e.expression,t):"yield";case 61:return"yield from "+T(e.expression,t);case 18:return"...";case 32:{let n="<ListExpression>";if((0,u.isExpressionNode)(e.expression))n=T(e.expression,t);else if(17===e.expression.nodeType){n=`${T(e.expression.keyExpression,t)}: ${T(e.expression.valueExpression,t)}`}return n=n+" "+e.forIfNodes.map((e=>33===e.nodeType?(e.isAsync?"async ":"")+"for "+T(e.targetExpression,t)+` in ${T(e.iterableExpression,t)}`:`if ${T(e.testExpression,t)}`)).join(" "),e.isParenthesized?`(${n})`:n}case 46:{let n="";return e.startValue||e.endValue||e.stepValue?(e.startValue&&(n+=T(e.startValue,t)),e.endValue&&(n+=": "+T(e.endValue,t)),e.stepValue&&(n+=": "+T(e.stepValue,t))):n+=":",n}case 30:return"lambda "+e.parameters.map((e=>{let n="";return 1===e.category?n+="*":2===e.category&&(n+="**"),e.name?n+=e.name.value:0===e.category&&(n+="/"),e.defaultValue&&(n+=" = "+T(e.defaultValue,t)),n})).join(", ")+": "+T(e.expression,t);case 11:if(33===e.constType)return"True";if(15===e.constType)return"False";if(9===e.constType)return"__debug__";if(26===e.constType)return"None";break;case 15:{const n=`${e.entries.map((e=>17===e.nodeType?`${T(e.keyExpression,t)}: ${T(e.valueExpression,t)}`:16===e.nodeType?`**${T(e.expandExpression,t)}`:T(e,t)))}`;return n?`{ ${n} }`:"{}"}case 45:return e.entries.map((e=>T(e,t))).join(", ");case 0:return"<Parse Error>";default:(0,l.assertNever)(e)}return"<Expression>"}function v(e){const t={0:"+",1:"+=",2:"=",3:"&",4:"&=",5:"~",6:"|",7:"|=",8:"^",9:"^=",10:"/",11:"/=",12:"==",13:"//",14:"//=",15:">",16:">=",17:"<<",18:"<<=",19:"<>",20:"<",21:"<=",22:"@",23:"@=",24:"%",25:"%=",26:"*",27:"*=",28:"!=",29:"**",30:"**=",31:">>",32:">>=",33:"-",34:"-=",36:"and",37:"or",38:"not ",39:"is",40:"is not",41:"in",42:"not in"};return t[e]?t[e]:"unknown"}function b(e,t=!1){let n=e.parent;for(;n;){if(10===n.nodeType)return n;if(36===n.nodeType)return;if(28===n.nodeType&&t)return;n=n.parent}}function _(e){let t,n=e.parent;for(;n;){if(28===n.nodeType&&!n.decorators.some((e=>e===t)))return n;if(10===n.nodeType)return;t=n,n=n.parent}}function C(e){let t,n,a=e,r=!1,s=!1;for(;a;){switch(41===a.nodeType&&(t===a.name?r=!0:t===a.defaultValue&&(s=!0)),a.nodeType){case 76:return{node:a,useProxyScope:!0};case 28:if(!t)break;if(a.decorators.some((e=>e===t)))break;if(a.parameters.some((e=>e===t))){if(s)break;if(r&&void 0!==(0,m.getScope)(a))return{node:a}}if(t===a.suite&&void 0!==(0,m.getScope)(a))return{node:a};if(a.typeParameters){const e=a.typeParameters;if(void 0!==(0,m.getScope)(e))return{node:e,useProxyScope:!0}}break;case 30:if(a.parameters.some((e=>e===t))){if(r&&void 0!==(0,m.getScope)(a))return{node:a}}else if((!t||t===a.expression)&&void 0!==(0,m.getScope)(a))return{node:a};break;case 10:if(!t)break;if(a.decorators.some((e=>e===t)))break;if(t===a.suite&&void 0!==(0,m.getScope)(a))return{node:a};if(a.typeParameters){const e=a.typeParameters;if(void 0!==(0,m.getScope)(e))return{node:e,useProxyScope:!0}}break;case 32:if(void 0!==(0,m.getScope)(a)){if(!(t===a.forIfNodes[0]&&33===a.forIfNodes[0].nodeType&&a.forIfNodes[0].iterableExpression===n))return{node:a}}break;case 77:if(t===a.expression&&a.typeParameters){const e=a.typeParameters;if(void 0!==(0,m.getScope)(e))return{node:e}}break;case 36:if(void 0!==(0,m.getScope)(a))return{node:a}}n=t,t=a,a=a.parent}(0,l.fail)("Did not find evaluation scope")}function I(e){let t,n=e;for(;n;){switch(n.nodeType){case 28:case 10:if(!n.decorators.some((e=>e===t)))return n;break;case 77:return n}t=n,n=n.parent}}function k(e,t){let n=e;for(;n;){if(n.nodeType===t)return n;n=n.parent}}function w(e,t){if(38===e.nodeType)return 38===t.nodeType?e.value===t.value:4===t.nodeType&&e.value===t.name.value;if(35===e.nodeType&&35===t.nodeType)return w(e.leftExpression,t.leftExpression)&&e.memberName.value===t.memberName.value;if(24===e.nodeType&&24===t.nodeType){if(!w(e.baseExpression,t.baseExpression))return!1;if(1!==t.items.length||t.trailingComma||t.items[0].name||0!==t.items[0].argumentCategory)return!1;const n=e.items[0].valueExpression;if(40===n.nodeType){const e=t.items[0].valueExpression;return!(40!==e.nodeType||e.isImaginary||!e.isInteger)&&n.value===e.value}if(55===n.nodeType&&33===n.operator&&40===n.expression.nodeType){const e=t.items[0].valueExpression;return!(55!==e.nodeType||33!==e.operator||40!==e.expression.nodeType||e.expression.isImaginary||!e.expression.isInteger)&&n.expression.value===e.expression.value}if(48===n.nodeType){const e=n,a=t.items[0].valueExpression;if(1===e.strings.length&&49===e.strings[0].nodeType&&48===a.nodeType&&1===a.strings.length&&49===a.strings[0].nodeType)return e.strings[0].value===a.strings[0].value}return!1}return!1}function S(e){if(0===e.statements.length||48!==e.statements[0].nodeType)return!1;const t=e.statements[0].strings;return 0!==t.length&&!t.some((e=>27===e.nodeType))}t.getNodeDepth=function(e){let t=0,n=e;for(;n;)t++,n=n.parent;return t},t.findNodeByPosition=function(e,t,n){const a=(0,p.convertPositionToOffset)(t,n);if(void 0!==a)return g(e,a)},t.findNodeByOffset=g,t.isCompliantWithNodeRangeRules=h,t.getClassFullName=function(e,t,n){const a=[n];let r=e;for(;r;)r=b(r),r&&a.push(r.name.value);return a.push(t),a.reverse().join(".")},t.getTypeSourceId=function(e){return e.start},t.printArgument=f,t.printExpression=T,t.printOperator=v,t.getCallForName=function(e){var t,n,a;return 9===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.leftExpression===e?e.parent:35===(null===(n=e.parent)||void 0===n?void 0:n.nodeType)&&e.parent.memberName===e&&9===(null===(a=e.parent.parent)||void 0===a?void 0:a.nodeType)&&e.parent.parent.leftExpression===e.parent?e.parent.parent:void 0},t.getDecoratorForName=function(e){var t,n,a;return 13===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.expression===e?e.parent:35===(null===(n=e.parent)||void 0===n?void 0:n.nodeType)&&e.parent.memberName===e&&13===(null===(a=e.parent.parent)||void 0===a?void 0:a.nodeType)&&e.parent.parent.expression===e.parent?e.parent.parent:void 0},t.getEnclosingSuite=function(e){let t=e.parent;for(;t;){if(50===t.nodeType)return t;t=t.parent}},t.getEnclosingClass=b,t.getEnclosingModule=function(e){let t=e.parent;for(;t;){if(36===t.nodeType)return t;t=t.parent}(0,l.fail)("Module node not found")},t.getEnclosingClassOrModule=function(e,t=!1){let n=e.parent;for(;n;){if(10===n.nodeType)return n;if(36===n.nodeType)return n;if(28===n.nodeType&&t)return;n=n.parent}},t.getEnclosingFunction=_,t.getEnclosingFunctionEvaluationScope=function(e){let t=C(e).node;for(;t;){if(28===t.nodeType)return t;if(10===t.nodeType||!t.parent)return;t=C(t.parent).node}},t.getEnclosingLambda=function(e){let t=e.parent;for(;t;){if(30===t.nodeType)return t;if(50===t.nodeType)return;t=t.parent}},t.getEnclosingClassOrFunction=function(e){let t=e.parent;for(;t;){if(28===t.nodeType)return t;if(10===t.nodeType)return t;t=t.parent}},t.getEnclosingSuiteOrModule=function(e,t=!1,n=!0){let a=e.parent;for(;a;){if(50===a.nodeType)return a;if(36===a.nodeType)return a;if(30===a.nodeType&&n)return;if(28===a.nodeType&&t)return;a=a.parent}},t.getEvaluationNodeForAssignmentExpression=function(e){let t=!1,n=C(e).node;for(;void 0!==n;)switch(n.nodeType){case 28:case 30:case 36:return n;case 10:return t?void 0:n;case 32:t=!0,n=C(n.parent).node;break;default:return}},t.getEvaluationScopeNode=C,t.getTypeVarScopeNode=I,t.getExecutionScopeNode=function(e){let t=C(e).node;for(;10===t.nodeType||32===t.nodeType;)t=C(t.parent).node;return t},t.getTypeAnnotationNode=function(e){let t=e,n=e.parent;for(;n;){if(54===n.nodeType){if(n.typeAnnotation===t)return n;break}t=n,n=n.parent}},t.getArgumentsByRuntimeOrder=function(e){const t=e.arguments.filter((e=>!e.name&&2!==e.argumentCategory)),n=e.arguments.filter((e=>!!e.name||2===e.argumentCategory));return t.concat(n)},t.isFinalAllowedForAssignmentTarget=function(e){if(38===e.nodeType)return!0;if(35===e.nodeType){if(38!==e.leftExpression.nodeType)return!1;if(!b(e))return!1;const t=_(e);return!!t&&"__init__"===t.name.value}return!1},t.isClassVarAllowedForAssignmentTarget=function(e){return!!b(e,!0)},t.isRequiredAllowedForAssignmentTarget=function(e){return!!b(e,!0)},t.isNodeContainedWithin=function(e,t){let n=e;for(;n;){if(n===t)return!0;n=n.parent}return!1},t.getParentNodeOfType=k,t.getParentAnnotationNode=function(e){let t,n=e;for(;n;){if(28===n.nodeType)return t===n.returnTypeAnnotation?t:void 0;if(41===n.nodeType)return t===n.typeAnnotation||t===n.typeAnnotationComment?t:void 0;if(3===n.nodeType)return t===n.typeAnnotationComment?t:void 0;if(54===n.nodeType)return t===n.typeAnnotation?t:void 0;if(62===n.nodeType)return t===n.returnTypeAnnotation||n.paramTypeAnnotations.some((e=>e===t))?((0,l.assert)(!t||(0,u.isExpressionNode)(t)),t):void 0;t=n,n=n.parent}},t.isNodeContainedWithinNodeType=function(e,t){return void 0!==k(e,t)},t.isSuiteEmpty=function(e){let t=!1;for(const n of e.statements){if(47!==n.nodeType)return!1;for(const e of n.statements)if(18===e.nodeType)t=!0;else if(48!==e.nodeType)return!1}return t},t.containsAwaitNode=function(e){let t=!1;class n extends y.ParseTreeWalker{visitAwait(e){return t=!0,!1}}return(new n).walk(e),t},t.isMatchingExpression=w,t.isPartialMatchingExpression=function e(t,n){return 35===t.nodeType?w(t.leftExpression,n)||e(t.leftExpression,n):24===t.nodeType&&(w(t.baseExpression,n)||e(t.baseExpression,n))},t.isWithinDefaultParamInitializer=function(e){let t,n=e;for(;n;){if(41===n.nodeType&&t===n.defaultValue)return!0;if(30===n.nodeType||28===n.nodeType||10===n.nodeType||36===n.nodeType)return!1;t=n,n=n.parent}return!1},t.isWithinTypeAnnotation=function(e,t){let n,a=e,r=!1;for(;a;){if(41===a.nodeType&&(n===a.typeAnnotation||n===a.typeAnnotationComment))return r||!t;if(28===a.nodeType&&n===a.returnTypeAnnotation)return r||!t;if(28===a.nodeType&&n===a.functionAnnotationComment)return!0;if(54===a.nodeType&&n===a.typeAnnotation)return r||!t;if(3===a.nodeType&&n===a.typeAnnotationComment)return!0;if(48===a.nodeType&&n===a.typeAnnotation&&(r=!0),30===a.nodeType||28===a.nodeType||10===a.nodeType||36===a.nodeType)return!1;n=a,a=a.parent}return!1},t.isWithinAnnotationComment=function(e){let t,n=e;for(;n;){if(28===n.nodeType&&t===n.functionAnnotationComment)return!0;if(3===n.nodeType&&t===n.typeAnnotationComment)return!0;if(30===n.nodeType||28===n.nodeType||10===n.nodeType||36===n.nodeType)return!1;t=n,n=n.parent}return!1},t.isWithinLoop=function(e){let t=e;for(;t;){switch(t.nodeType){case 26:case 57:return!0}t=t.parent}return!1},t.isWithinAssertExpression=function(e){let t,n=e;for(;n;){if(2===n.nodeType)return n.testExpression===t;t=n,n=n.parent}return!1},t.getDocString=function(e){if(0===e.length)return;if(47!==e[0].nodeType)return;if(!S(e[0]))return;const t=e[0].statements[0].strings;return 1===t.length?t[0].value:t.map((e=>e.value)).join("")},t.isDocString=S,t.isAssignmentToDefaultsFollowingNamedTuple=function(e){var t,n;if(9!==e.nodeType||!e.parent||3!==e.parent.nodeType||38!==e.parent.leftExpression.nodeType||!e.parent.parent||47!==e.parent.parent.nodeType)return!1;const a=e.parent.leftExpression.value,r=e.parent.parent;if(r.statements[0]!==e.parent||!r.parent||36!==r.parent.nodeType&&50!==r.parent.nodeType)return!1;const s=r.parent;let i=s.statements.findIndex((e=>e===r));if(i<0)return!1;for(i++;i<s.statements.length;){const e=s.statements[i];if(47!==e.nodeType)break;if(48!==(null===(t=e.statements[0])||void 0===t?void 0:t.nodeType)){if(3===(null===(n=e.statements[0])||void 0===n?void 0:n.nodeType)){const t=e.statements[0];if(35===t.leftExpression.nodeType&&"__defaults__"===t.leftExpression.memberName.value){const e=t.leftExpression.leftExpression;if(35===e.nodeType&&"__new__"===e.memberName.value&&38===e.leftExpression.nodeType&&e.leftExpression.value===a)return!0}}break}i++}return!1};class A extends y.ParseTreeWalker{constructor(e){super(),this._callback=e}visitName(e){return this._callback(e,this._subscriptIndex,this._baseExpression),!0}visitIndex(e){this.walk(e.baseExpression);const t=this._subscriptIndex,n=this._baseExpression;return this._baseExpression=e.baseExpression,e.items.forEach(((e,t)=>{this._subscriptIndex=t,this.walk(e)})),this._subscriptIndex=t,this._baseExpression=n,!1}}t.NameNodeWalker=A;class x extends y.ParseTreeWalker{constructor(e){super(),this._callback=e}visitCall(e){return this._callback(e),!0}}function P(e,t,n=!1,a=!1){const r=e.getItemAtPosition(t);if(r<0)return-1;for(let s=r;s>=0;s--){const r=e.getItemAt(s);if((a||0!==r.length)&&((n||!N(r))&&c.TextRange.getEnd(r)<=t))return s}return-1}function N(e){return 2===e.type||3===e.type||4===e.type}function D(e,t){if(!(t<0))return e.getItemAt(t)}function F(e,t){return D(e,e.getItemAtPosition(t))}function E(e,t){const n=e.getItemAtPosition(t);if(n<0)return-1;const a=e.getItemAt(n);return c.TextRange.overlaps(a,t)?n:-1}function M(e){let t=e;for(;t&&36!==t.nodeType;)t=t.parent;return t}function*O(e){for(;void 0!==e;)yield e,e=e.parent}function z(e,t){return V(e,(e=>e.nodeType===t))}function V(e,t){for(const n of O(e))if(t(n))return n}function U(e){if(38===e.nodeType)return[e];const t=[];return function e(t,n){if(38===t.nodeType)return n.push(t),!0;if(n.push(t.memberName),38===t.leftExpression.nodeType||35===t.leftExpression.nodeType)return e(t.leftExpression,n);return!1}(e,t)?t.reverse():void 0}function R(e){const t=e.quoteMarkLength,n=!(65536&e.flags);return c.TextRange.create(e.start+t,e.length-t-(n?t:0))}function L(e,t,n){const a=e.lines.getItemAt(n);return(0,o.containsOnlyWhitespace)(t,a)}function j(e){let t="";(10===e.nodeType||28===e.nodeType)&&(t=e.name.value);return`${i.getFileInfo(e).fileUri.key}.${e.start.toString()}-${t}`}t.CallNodeWalker=x,t.getEnclosingParameter=function(e){let t=e;for(;t;){if(41===t.nodeType)return t;if(28===t.nodeType)return;t=t.parent}},t.getCallNodeAndActiveParameterIndex=function(e,t,n){let a,r=e;for(;void 0!==r;){if(9===r.nodeType&&d(n,r,t)){a=r;break}r=r.parent}if(!a||!a.arguments)return;const s=c.TextRange.getEnd(a);if(t>s)return;const i=F(n,s-1);if(t===s&&14===(null==i?void 0:i.type))return;let o=!1,l=-1,p=!1;return a.arguments.forEach(((e,a)=>{if(o)return;let r=e.start;const s=n.getItemAtPosition(r);s>=0&&(r=c.TextRange.getEnd(n.getItemAt(s-1)));let i=c.TextRange.getEnd(e);const d=n.getItemAtPosition(i);if(d>=0)for(let e=d;e<n.count;e++){const t=n.getItemAt(e);switch(t.type){case 12:case 14:break;default:continue}i=c.TextRange.getEnd(t);break}t<i&&(l=a,p=t>=r,o=!0)})),o||(l=a.arguments.length+1),{callNode:a,activeIndex:l,activeOrFake:p};function d(e,t,n){const a=t.leftExpression.length>0?c.TextRange.getEnd(t.leftExpression)-1:t.leftExpression.start,r=c.TextRange.getEnd(t);if(n<a||r<n)return!1;if(t.arguments.length>0){const e=t.arguments[0].start,a=c.TextRange.getEnd(t.arguments[t.arguments.length-1]);if(e<=n&&n<a)return!0}const s=e.getItemAtPosition(a);if(s<0||e.count<=s)return!0;const i=e.getItemAt(s+1);return!(13===i.type&&n<c.TextRange.getEnd(i))}},t.getTokenIndexAtLeft=P,t.getTokenAtLeft=function(e,t,n=!1,a=!1){const r=P(e,t,n,a);if(!(r<0))return e.getItemAt(r)},t.isWhitespace=N,t.getTokenAtIndex=D,t.getTokenAt=F,t.getTokenOverlapping=function(e,t){return D(e,E(e,t))},t.getIndexOfTokenOverlapping=E,t.findTokenAfter=function(e,t,n){const a=e.tokens,r=a.getItemAtPosition(t);if(!(r<0))for(let e=r;e<a.length;e++){const t=a.getItemAt(e);if(n(t))return t}},t.getCommentsAtTokenIndex=function(e,t){let n=D(e,t);if(n){for(let a=t-1;a>=0;--a){const t=D(e,a);if(!t||t.start!==n.start)break;n=t}return n.comments}},t.printParseNodeType=function(e){switch(e){case 0:return"Error";case 1:return"Argument";case 2:return"Assert";case 3:return"Assignment";case 4:return"AssignmentExpression";case 5:return"AugmentedAssignment";case 6:return"Await";case 7:return"BinaryOperation";case 8:return"Break";case 9:return"Call";case 10:return"Class";case 11:return"Constant";case 12:return"Continue";case 13:return"Decorator";case 14:return"Del";case 15:return"Dictionary";case 16:return"DictionaryExpandEntry";case 17:return"DictionaryKeyEntry";case 18:return"Ellipsis";case 19:return"If";case 20:return"Import";case 21:return"ImportAs";case 22:return"ImportFrom";case 23:return"ImportFromAs";case 24:return"Index";case 25:return"Except";case 26:return"For";case 27:return"FormatString";case 28:return"Function";case 29:return"Global";case 30:return"Lambda";case 31:return"List";case 32:return"ListComprehension";case 33:return"ListComprehensionFor";case 34:return"ListComprehensionIf";case 35:return"MemberAccess";case 36:return"Module";case 37:return"ModuleName";case 38:return"Name";case 39:return"Nonlocal";case 40:return"Number";case 41:return"Parameter";case 42:return"Pass";case 43:return"Raise";case 44:return"Return";case 45:return"Set";case 46:return"Slice";case 47:return"StatementList";case 48:return"StringList";case 49:return"String";case 50:return"Suite";case 51:return"Ternary";case 52:return"Tuple";case 53:return"Try";case 54:return"TypeAnnotation";case 55:return"UnaryOperation";case 56:return"Unpack";case 57:return"While";case 58:return"With";case 59:return"WithItem";case 60:return"Yield";case 61:return"YieldFrom";case 62:return"FunctionAnnotation";case 63:return"Match";case 64:return"Case";case 65:return"PatternSequence";case 66:return"PatternAs";case 67:return"PatternLiteral";case 68:return"PatternClass";case 69:return"PatternCapture";case 70:return"PatternMapping";case 71:return"PatternMappingKeyEntry";case 72:return"PatternMappingExpandEntry";case 73:return"PatternValue";case 74:return"PatternClassArgument";case 75:return"TypeParameter";case 76:return"TypeParameterList";case 77:return"TypeAlias"}(0,l.assertNever)(e)},t.isWriteAccess=function(e){let t=e,n=t.parent;for(;n;){switch(n.nodeType){case 3:case 5:return t===n.leftExpression;case 4:case 25:return t===n.name;case 14:return!0;case 26:case 33:return t===n.targetExpression;case 21:return t===n.alias||n.module.nameParts.length>0&&t===n.module.nameParts[0];case 23:return t===n.alias||!n.alias&&t===n.name;case 35:if(t!==n.memberName)return!1;break;case 58:return n.withItems.some((e=>e===t));case 54:if(t===n.typeAnnotation)return!1;break;case 28:case 10:case 36:return!1}t=n,n=n.parent}return!1},t.getModuleNode=M,t.getFileInfoFromNode=function(e){const t=M(e);return t?i.getFileInfo(t):void 0},t.isFunctionSuiteEmpty=function(e){let t=!0;return e.suite.statements.forEach((e=>{0!==e.nodeType&&(47===e.nodeType?e.statements.forEach((e=>{18!==e.nodeType&&48!==e.nodeType&&42!==e.nodeType&&(t=!1)})):t=!1)})),t},t.getTypeAnnotationForParameter=function(e,t){if(t>=e.parameters.length)return;const n=e.parameters[t];if(n.typeAnnotation)return n.typeAnnotation;if(n.typeAnnotationComment)return n.typeAnnotationComment;if(!e.functionAnnotationComment||e.functionAnnotationComment.isParamListEllipsis)return;let a=0;const r=e.functionAnnotationComment.paramTypeAnnotations;r.length<e.parameters.length&&(a=1);const s=t-a;return s<0||s>=r.length?void 0:r[s]},t.isImportModuleName=function(e){var t,n;return 21===(null===(n=null===(t=z(e,37))||void 0===t?void 0:t.parent)||void 0===n?void 0:n.nodeType)},t.isImportAlias=function(e){var t;return 21===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.alias===e},t.isFromImportModuleName=function(e){var t,n;return 22===(null===(n=null===(t=z(e,37))||void 0===t?void 0:t.parent)||void 0===n?void 0:n.nodeType)},t.isFromImportName=function(e){var t;return 23===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.name===e},t.isFromImportAlias=function(e){var t;return 23===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&e.parent.alias===e},t.isLastNameOfModuleName=function(e){var t;if(37!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType))return!1;const n=e.parent;return 0!==n.nameParts.length&&n.nameParts[n.nameParts.length-1]===e},t.getAncestorsIncludingSelf=O,t.getFirstAncestorOrSelfOfKind=z,t.getFirstAncestorOrSelf=V,t.getDottedNameWithGivenNodeAsLastName=function(e){var t;return 35!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType)||e.parent.leftExpression===e?e:e.parent},t.getDecoratorName=function(e){return function e(t){var n;return 38===t.nodeType||35===t.nodeType?null===(n=U(t))||void 0===n?void 0:n.map((e=>e.value)).join("."):9===t.nodeType?e(t.leftExpression):void 0}(e.expression)},t.getDottedName=U,t.getFirstNameOfDottedName=function e(t){return 38===t.nodeType?t:38===t.leftExpression.nodeType||35===t.leftExpression.nodeType?e(t.leftExpression):void 0},t.isFirstNameOfDottedName=function(e){var t;return 35!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType)||e.parent.leftExpression===e},t.isLastNameOfDottedName=function(e){var t,n;return 35!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType)||(38===e.parent.leftExpression.nodeType||35===e.parent.leftExpression.nodeType)&&(e.parent.leftExpression!==e&&35!==(null===(n=e.parent.parent)||void 0===n?void 0:n.nodeType))},t.getStringNodeValueRange=function(e){return R(e.token)},t.getStringValueRange=R,t.getFullStatementRange=function(e,t,n){var a;const r=(0,p.convertTextRangeToRange)(e,t.tokenizerOutput.lines),s=null!==(a=function(e,t,n){const a=n.tokens.getItemAtPosition(t);if(a<0)return;let r=a;for(;r>0;r--){const t=n.tokens.getItemAt(r);if((0,p.convertTextRangeToRange)(t,n.lines).end.line!==e.start.line)break}for(let t=a-1;t>r;t--){const a=n.tokens.getItemAt(t);if(3!==a.type&&4!==a.type){if(2===a.type)return;return e.start}}return}(r,e.start,t.tokenizerOutput))&&void 0!==a?a:{line:r.start.line,character:0},i=function(e,t,n){const a=n.tokens.getItemAtPosition(t);if(a<0)return;let r=a;for(;r<n.tokens.count;r++){const t=n.tokens.getItemAt(r),a=(0,p.convertTextRangeToRange)(t,n.lines);if(e.end.line!==a.start.line)break}let s=!1;for(let e=a;e<r;e++){const t=n.tokens.getItemAt(e);if(11===t.type||2===t.type){s=!0;continue}if(!s)continue;return(0,p.convertTextRangeToRange)(t,n.lines).start}return}(r,c.TextRange.getEnd(e),t.tokenizerOutput);if(i)return{start:s,end:i};if(r.end.line===t.tokenizerOutput.lines.count-1)return{start:s,end:r.end};let o=1;if(n&&n.includeTrailingBlankLines)for(let e=o;r.end.line+e<t.tokenizerOutput.lines.count;e++)if(!L(t.tokenizerOutput,t.text,r.end.line+e)){o=e;break}return{start:s,end:{line:r.end.line+o,character:0}}},t.isBlankLine=L,t.isUnannotatedFunction=function(e){return void 0===e.returnTypeAnnotation&&e.parameters.every((e=>void 0===e.typeAnnotation&&void 0===e.typeAnnotationComment))},t.isValidLocationForFutureImport=function(e){const t=M(e);(0,l.assert)(t);let n=!1;for(const a of t.statements){if(47!==a.nodeType)return!1;for(const t of a.statements){if(t===e)return!0;if(48===t.nodeType){if(n)return!1;n=!0}else{if(22!==t.nodeType)return!1;if(0!==t.module.leadingDots||1!==t.module.nameParts.length||"__future__"!==t.module.nameParts[0].value)return!1}}}return!1},t.operatorSupportsChaining=function(e){switch(e){case 12:case 28:case 20:case 21:case 15:case 16:case 39:case 40:case 41:case 42:return!0}return!1},t.getVariableDocStringNode=function(e){var t,n,a,r;let s,i=e;for(;i&&3!==i.nodeType&&77!==i.nodeType;)54!==i.nodeType||s||(s=i),i=i.parent;if(3!==(null==i?void 0:i.nodeType)&&77!==(null==i?void 0:i.nodeType)){if(!s)return;i=s}const o=i.parent;if(47!==(null==o?void 0:o.nodeType))return;const l=o.parent;if(!l||36!==l.nodeType&&50!==l.nodeType)return;const p=l.statements.findIndex((e=>e===o));if(p<0||p===l.statements.length-1)return;const c=l.statements[p+1];if(47!==c.nodeType||!S(c))return;let d=!1;if(36===(null===(t=null==o?void 0:o.parent)||void 0===t?void 0:t.nodeType))d=!0;else if(50===(null===(n=null==o?void 0:o.parent)||void 0===n?void 0:n.nodeType)&&10===(null===(r=null===(a=null==o?void 0:o.parent)||void 0===a?void 0:a.parent)||void 0===r?void 0:r.nodeType))d=!0;else{const e=_(o);e&&"__init__"===e.name.value&&b(e,!0)&&(d=!0)}return d?c.statements[0]:void 0},t.getScopeIdForNode=j,t.getTypeVarScopesForNode=function(e){const t=[];let n=e;for(;n&&(n=I(n),n);)t.push(j(n)),n=n.parent;return t},t.checkDecorator=function(e,t){return 38===e.expression.nodeType&&e.expression.value===t},t.isSimpleDefault=function e(t){switch(t.nodeType){case 40:case 11:case 35:return!0;case 49:return 0==(64&t.token.flags);case 48:return t.strings.every(e);case 55:return e(t.expression);case 7:return e(t.leftExpression)&&e(t.rightExpression);default:return!1}}},78232:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ParseTreeWalker=t.ParseTreeVisitor=t.getChildNodes=void 0;const i=s(n(83181));function o(e){var t,n;switch(e.nodeType){case 0:return[e.child,...null!==(t=e.decorators)&&void 0!==t?t:[]];case 1:return[e.name,e.valueExpression];case 2:return[e.testExpression,e.exceptionExpression];case 4:return[e.name,e.rightExpression];case 3:return[e.leftExpression,e.rightExpression,e.typeAnnotationComment];case 5:case 7:return[e.leftExpression,e.rightExpression];case 6:case 13:case 67:case 73:case 55:case 56:case 60:case 61:return[e.expression];case 8:case 11:case 12:case 18:case 38:case 40:case 42:case 49:return[];case 9:return[e.leftExpression,...e.arguments];case 64:return[e.pattern,e.guardExpression,e.suite];case 10:return[...e.decorators,e.name,e.typeParameters,...e.arguments,e.suite];case 14:case 52:return e.expressions;case 15:case 31:case 45:return e.entries;case 16:return[e.expandExpression];case 17:return[e.keyExpression,e.valueExpression];case 19:return[e.testExpression,e.ifSuite,e.elseSuite];case 20:return e.list;case 21:return[e.module,e.alias];case 22:return[e.module,...e.imports];case 23:return[e.name,e.alias];case 24:return[e.baseExpression,...e.items];case 25:return[e.typeExpression,e.name,e.exceptSuite];case 26:return[e.targetExpression,e.iterableExpression,e.forSuite,e.elseSuite];case 27:return[...e.fieldExpressions,...null!==(n=e.formatExpressions)&&void 0!==n?n:[]];case 28:return[...e.decorators,e.name,e.typeParameters,...e.parameters,e.returnTypeAnnotation,e.functionAnnotationComment,e.suite];case 62:return[...e.paramTypeAnnotations,e.returnTypeAnnotation];case 29:case 39:return e.nameList;case 30:return[...e.parameters,e.expression];case 32:return[e.expression,...e.forIfNodes];case 33:return[e.targetExpression,e.iterableExpression];case 34:return[e.testExpression];case 63:return[e.subjectExpression,...e.cases];case 35:return[e.leftExpression,e.memberName];case 37:return e.nameParts;case 36:case 50:return[...e.statements];case 41:return[e.name,e.typeAnnotation,e.typeAnnotationComment,e.defaultValue];case 66:return[...e.orPatterns,e.target];case 68:return[e.className,...e.arguments];case 74:return[e.name,e.pattern];case 69:case 72:return[e.target];case 71:return[e.keyPattern,e.valuePattern];case 70:case 65:return[...e.entries];case 43:return[e.typeExpression,e.valueExpression,e.tracebackExpression];case 44:return[e.returnExpression];case 46:return[e.startValue,e.endValue,e.stepValue];case 47:return e.statements;case 48:return[e.typeAnnotation,...e.strings];case 51:return[e.ifExpression,e.testExpression,e.elseExpression];case 53:return[e.trySuite,...e.exceptClauses,e.elseSuite,e.finallySuite];case 77:return[e.name,e.typeParameters,e.expression];case 54:return[e.valueExpression,e.typeAnnotation];case 75:return[e.name,e.boundExpression,e.defaultExpression];case 76:return[...e.parameters];case 57:return[e.testExpression,e.whileSuite,e.elseSuite];case 58:return[...e.withItems,e.suite];case 59:return[e.expression,e.target];default:i.assertNever(e,`Unknown node type ${e}`)}}t.getChildNodes=o;class l{constructor(e){this._default=e}visit(e){switch(e.nodeType){case 0:return this.visitError(e);case 1:return this.visitArgument(e);case 2:return this.visitAssert(e);case 4:return this.visitAssignmentExpression(e);case 3:return this.visitAssignment(e);case 5:return this.visitAugmentedAssignment(e);case 6:return this.visitAwait(e);case 7:return this.visitBinaryOperation(e);case 8:return this.visitBreak(e);case 9:return this.visitCall(e);case 64:return this.visitCase(e);case 10:return this.visitClass(e);case 11:return this.visitConstant(e);case 12:return this.visitContinue(e);case 13:return this.visitDecorator(e);case 14:return this.visitDel(e);case 15:return this.visitDictionary(e);case 16:return this.visitDictionaryExpandEntry(e);case 17:return this.visitDictionaryKeyEntry(e);case 18:return this.visitEllipsis(e);case 19:return this.visitIf(e);case 20:return this.visitImport(e);case 21:return this.visitImportAs(e);case 22:return this.visitImportFrom(e);case 23:return this.visitImportFromAs(e);case 24:return this.visitIndex(e);case 25:return this.visitExcept(e);case 26:return this.visitFor(e);case 27:return this.visitFormatString(e);case 28:return this.visitFunction(e);case 62:return this.visitFunctionAnnotation(e);case 29:return this.visitGlobal(e);case 30:return this.visitLambda(e);case 31:return this.visitList(e);case 32:return this.visitListComprehension(e);case 33:return this.visitListComprehensionFor(e);case 34:return this.visitListComprehensionIf(e);case 63:return this.visitMatch(e);case 35:return this.visitMemberAccess(e);case 37:return this.visitModuleName(e);case 36:return this.visitModule(e);case 38:return this.visitName(e);case 39:return this.visitNonlocal(e);case 40:return this.visitNumber(e);case 41:return this.visitParameter(e);case 42:return this.visitPass(e);case 66:return this.visitPatternAs(e);case 68:return this.visitPatternClass(e);case 74:return this.visitPatternClassArgument(e);case 69:return this.visitPatternCapture(e);case 67:return this.visitPatternLiteral(e);case 72:return this.visitPatternMappingExpandEntry(e);case 71:return this.visitPatternMappingKeyEntry(e);case 70:return this.visitPatternMapping(e);case 65:return this.visitPatternSequence(e);case 73:return this.visitPatternValue(e);case 43:return this.visitRaise(e);case 44:return this.visitReturn(e);case 45:return this.visitSet(e);case 46:return this.visitSlice(e);case 47:return this.visitStatementList(e);case 48:return this.visitStringList(e);case 49:return this.visitString(e);case 50:return this.visitSuite(e);case 51:return this.visitTernary(e);case 52:return this.visitTuple(e);case 53:return this.visitTry(e);case 77:return this.visitTypeAlias(e);case 54:return this.visitTypeAnnotation(e);case 75:return this.visitTypeParameter(e);case 76:return this.visitTypeParameterList(e);case 55:return this.visitUnaryOperation(e);case 56:return this.visitUnpack(e);case 57:return this.visitWhile(e);case 58:return this.visitWith(e);case 59:return this.visitWithItem(e);case 60:return this.visitYield(e);case 61:return this.visitYieldFrom(e);default:i.assertNever(e,`Unknown node type ${e}`)}}visitArgument(e){return this._default}visitAssert(e){return this._default}visitAssignment(e){return this._default}visitAssignmentExpression(e){return this._default}visitAugmentedAssignment(e){return this._default}visitAwait(e){return this._default}visitBinaryOperation(e){return this._default}visitBreak(e){return this._default}visitCall(e){return this._default}visitCase(e){return this._default}visitClass(e){return this._default}visitTernary(e){return this._default}visitContinue(e){return this._default}visitConstant(e){return this._default}visitDecorator(e){return this._default}visitDel(e){return this._default}visitDictionary(e){return this._default}visitDictionaryKeyEntry(e){return this._default}visitDictionaryExpandEntry(e){return this._default}visitError(e){return this._default}visitEllipsis(e){return this._default}visitIf(e){return this._default}visitImport(e){return this._default}visitImportAs(e){return this._default}visitImportFrom(e){return this._default}visitImportFromAs(e){return this._default}visitIndex(e){return this._default}visitExcept(e){return this._default}visitFor(e){return this._default}visitFormatString(e){return this._default}visitFunction(e){return this._default}visitFunctionAnnotation(e){return this._default}visitGlobal(e){return this._default}visitLambda(e){return this._default}visitList(e){return this._default}visitListComprehension(e){return this._default}visitListComprehensionFor(e){return this._default}visitListComprehensionIf(e){return this._default}visitMatch(e){return this._default}visitMemberAccess(e){return this._default}visitModule(e){return this._default}visitModuleName(e){return this._default}visitName(e){return this._default}visitNonlocal(e){return this._default}visitNumber(e){return this._default}visitParameter(e){return this._default}visitPass(e){return this._default}visitPatternCapture(e){return this._default}visitPatternClass(e){return this._default}visitPatternClassArgument(e){return this._default}visitPatternAs(e){return this._default}visitPatternLiteral(e){return this._default}visitPatternMappingExpandEntry(e){return this._default}visitPatternSequence(e){return this._default}visitPatternValue(e){return this._default}visitPatternMappingKeyEntry(e){return this._default}visitPatternMapping(e){return this._default}visitRaise(e){return this._default}visitReturn(e){return this._default}visitSet(e){return this._default}visitSlice(e){return this._default}visitStatementList(e){return this._default}visitString(e){return this._default}visitStringList(e){return this._default}visitSuite(e){return this._default}visitTuple(e){return this._default}visitTry(e){return this._default}visitTypeAlias(e){return this._default}visitTypeAnnotation(e){return this._default}visitTypeParameter(e){return this._default}visitTypeParameterList(e){return this._default}visitUnaryOperation(e){return this._default}visitUnpack(e){return this._default}visitWhile(e){return this._default}visitWith(e){return this._default}visitWithItem(e){return this._default}visitYield(e){return this._default}visitYieldFrom(e){return this._default}}t.ParseTreeVisitor=l;t.ParseTreeWalker=class extends l{constructor(){super(!0)}walk(e){const t=this.visitNode(e);t.length>0&&this.walkMultiple(t)}walkMultiple(e){e.forEach((e=>{e&&this.walk(e)}))}visitNode(e){return this.visit(e)?o(e):[]}}},3573:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getPatternSubtypeNarrowingCallback=t.validateClassPattern=t.assignTypeToPatternTargets=t.checkForUnusedPattern=t.narrowTypeBasedOnPattern=void 0;const a=n(28040),r=n(83181),s=n(72484),i=n(97652),o=n(95960),l=n(99868),p=n(28340),c=n(45468),d=n(46048),u=n(8312),m=n(808),y=n(97632),g=["builtins.bool","builtins.bytearray","builtins.bytes","builtins.dict","builtins.float","builtins.frozenset","builtins.int","builtins.list","builtins.set","builtins.str","builtins.tuple"];function h(e,t,n,r){switch(n.nodeType){case 65:return function(e,t,n,r){t=(0,m.transformPossibleRecursiveTypeAlias)(t);let s=_(e,n,t);return s=s.filter((t=>{var s;if(t.isDefiniteNoMatch)return!r;let i=!0,o=!0;const l=[];let p=t.isTuple;!r&&t.isIndeterminateLength&&(p=!1),t.isIndeterminateLength&&(1===n.entries.length&&0===n.starEntryIndex||(o=!1));let c=0;if(n.entries.forEach(((s,d)=>{const y=C(e,n,t,d,n.entries.length,n.starEntryIndex,!0),g=h(e,y,s,r);r?d===n.starEntryIndex?(0,u.isClassInstance)(g)&&g.tupleTypeArguments&&!(0,m.isUnboundedTupleClass)(g)&&g.tupleTypeArguments?(0,a.appendArray)(l,g.tupleTypeArguments.map((e=>e.type))):(l.push(g),p=!1):(l.push(g),(0,u.isNever)(g)&&(i=!1)):(t.isPotentialNoMatch&&(o=!1),(0,u.isNever)(g)?l.push(y):(o=!1,c++,l.push(g)),d===n.starEntryIndex&&(p=!1))})),0===n.entries.length&&t.entryTypes.length>0&&l.push((0,u.combineTypes)(t.entryTypes)),!r){if(o)return!1;if(p&&1===c){const a=e.getBuiltInType(n,"tuple");a&&(0,u.isInstantiableClass)(a)&&(t.subtype=u.ClassType.cloneAsInstance((0,m.specializeTupleClass)(a,l.map((e=>({type:e,isUnbounded:!1}))))))}return!0}if(i){if(p){const a=e.getBuiltInType(n,"tuple");a&&(0,u.isInstantiableClass)(a)&&(t.subtype=u.ClassType.cloneAsInstance((0,m.specializeTupleClass)(a,l.map((e=>({type:e,isUnbounded:!1}))))))}if(t.isPotentialNoMatch&&!t.isTuple){const a=e.getTypingType(n,"Sequence");if(a&&(0,u.isInstantiableClass)(a)){let n=e.stripLiteralValue((0,u.combineTypes)(l));n=null!==(s=(0,m.containsAnyOrUnknown)(n,!1))&&void 0!==s?s:n,t.subtype=u.ClassType.cloneAsInstance(u.ClassType.cloneForSpecialization(a,[n],!0))}}}return i})),(0,u.combineTypes)(s.map((e=>e.subtype)))}(e,t,n,r);case 67:return function(e,t,n,a){const r=e.getTypeOfExpression(n.expression).type;if(!a)return e.mapSubtypesExpandTypeVars(t,void 0,((t,n)=>{if(!((0,u.isClassInstance)(r)&&(0,m.isLiteralType)(r)&&(0,u.isClassInstance)(t)&&(0,m.isLiteralType)(t)&&e.assignType(r,t)||(0,m.isNoneInstance)(t)&&(0,m.isNoneInstance)(r)))return(0,u.isClassInstance)(t)&&u.ClassType.isBuiltIn(t,"bool")&&void 0===t.literalValue&&(0,u.isClassInstance)(r)&&u.ClassType.isBuiltIn(r,"bool")&&void 0!==r.literalValue?u.ClassType.cloneWithLiteral(r,!r.literalValue):t}));return e.mapSubtypesExpandTypeVars(t,void 0,((t,n)=>e.assignType(t,r)?r:(0,u.isClassInstance)(r)&&(0,m.isLiteralType)(r)&&(0,u.isClassInstance)(t)&&!(0,m.isLiteralType)(t)&&e.assignType(u.ClassType.cloneWithLiteral(r,void 0),t)?t:void 0))}(e,t,n,r);case 68:return function(e,t,n,a){let r=e.getTypeOfExpression(n.className,2).type;(0,u.isClass)(r)&&!r.typeAliasInfo&&(r=u.ClassType.cloneRemoveTypePromotions(r),r=(0,m.specializeClassType)(r));let s=[];n.arguments.some((e=>!e.name))&&(0,u.isInstantiableClass)(r)&&(s=f(e,r));if(!a){if(!(0,u.isInstantiableClass)(r))return t;let i=r;i.details.typeParameters.length>0&&(i=u.ClassType.cloneForSpecialization(i,void 0,!1));const o=(0,m.convertToInstance)(i),l=(0,m.isMetaclassInstance)(o);return e.mapSubtypesExpandTypeVars(t,{expandCallback:t=>e.expandPromotionTypes(n,t)},((t,r)=>{var p;if(l&&(0,u.isInstantiableClass)(t)){const n=null!==(p=t.details.effectiveMetaclass)&&void 0!==p?p:u.UnknownType.create();if((0,u.isInstantiableClass)(i)&&e.assignType(i,n))return;return t}if(!(0,m.isNoneInstance)(t)&&!(0,u.isClassInstance)(t))return r;if(!((0,m.isNoneInstance)(t)&&(0,u.isInstantiableClass)(i)&&u.ClassType.isBuiltIn(i,"NoneType"))){if(!e.assignType(o,t))return t;if(0===n.arguments.length){if((0,u.isClass)(o)&&(0,u.isClass)(t)){if(u.ClassType.isDerivedFrom(t,o))return;if(u.ClassType.isBuiltIn(o,"str")&&u.ClassType.isBuiltIn(t,"LiteralString"))return}return t}if(!e.assignType(t,o)&&(0,u.isClass)(t)&&!u.ClassType.isFinal(t)&&!u.ClassType.isProtocolClass(o))return t;for(let i=0;i<n.arguments.length;i++){const o=v(e,n.arguments[i],i,s,t,a);if(!(0,u.isNever)(o))return r}}}))}if(!u.TypeBase.isInstantiable(r)&&!(0,u.isNever)(r))return e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,o.LocAddendum.typeNotClass().format({type:e.printType(r)}),n.className),u.NeverType.createNever();(0,u.isInstantiableClass)(r)&&u.ClassType.isProtocolClass(r)&&!u.ClassType.isRuntimeCheckable(r)&&e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,o.LocAddendum.protocolRequiresRuntimeCheckable(),n.className);return e.mapSubtypesExpandTypeVars(r,void 0,((r,s)=>{if((0,u.isAnyOrUnknown)(r))return s;if((0,u.isInstantiableClass)(r)){const i=(0,m.convertToInstance)(r),o=(0,m.isMetaclassInstance)(i);return e.mapSubtypesExpandTypeVars(t,void 0,(t=>{var i;if((0,u.isAnyOrUnknown)(t))return(0,m.convertToInstance)(s);if(o&&(0,u.isInstantiableClass)(t)){const n=null!==(i=t.details.effectiveMetaclass)&&void 0!==i?i:u.UnknownType.create();return e.assignType(r,n)||e.assignType(n,r)?t:void 0}if((0,m.isNoneInstance)(t)&&(0,u.isInstantiableClass)(r)&&u.ClassType.isBuiltIn(r,"NoneType"))return t;if((0,u.isInstantiableClass)(r)&&u.ClassType.isBuiltIn(r,"Callable")){const n=(0,m.getUnknownTypeForCallable)();if(e.assignType(n,t))return t;const a=(0,m.convertToInstance)(t);return e.assignType(a,n)?n:void 0}if((0,u.isClassInstance)(t)){let i;if(e.assignType(u.ClassType.cloneAsInstance(r),t))i=t;else{if(!e.assignType(t,u.ClassType.cloneAsInstance(r)))return;if(i=(0,m.addConditionToType)((0,m.convertToInstance)(s),(0,m.getTypeCondition)(t)),(0,u.isInstantiableClass)(s)&&(0,u.isClassInstance)(t)&&(u.ClassType.isSpecialBuiltIn(s)||s.details.typeParameters.length>0)){const n=new y.TypeVarContext((0,m.getTypeVarScopeId)(s)),a=u.ClassType.cloneForSpecialization(s,void 0,!1),r=u.ClassType.cloneAsInstance(a);(0,l.populateTypeVarContextBasedOnExpectedType)(e,r,t,n,void 0,void 0)&&(i=(0,m.applySolvedTypeVars)(r,n,{unknownIfNotFound:!0}))}}let o=[];n.arguments.some((e=>!e.name))&&(o=f(e,r));let p=!0;if(n.arguments.forEach(((t,n)=>{const r=v(e,t,n,o,i,a);(0,u.isNever)(r)&&(p=!1)})),p)return i}}))}}))}(e,t,n,r);case 66:return function(e,t,n,a){let r=t;if(!a)return n.orPatterns.forEach((t=>{r=h(e,r,t,!1)})),r;const s=n.orPatterns.map((t=>{const n=h(e,r,t,!0);return r=h(e,r,t,!1),n}));return(0,u.combineTypes)(s)}(e,t,n,r);case 70:return function(e,t,n,a){if(t=(0,m.transformPossibleRecursiveTypeAlias)(t),!a){if(1!==n.entries.length||71!==n.entries[0].nodeType)return t;const a=n.entries[0].keyPattern,r=n.entries[0].valuePattern;if(67!==a.nodeType||66!==r.nodeType||!r.orPatterns.every((e=>67===e.nodeType)))return t;const s=e.getTypeOfExpression(a.expression).type;if(!(0,u.isClassInstance)(s)||!u.ClassType.isBuiltIn(s,"str")||void 0===s.literalValue)return t;const i=s.literalValue,o=r.orPatterns.map((t=>e.getTypeOfExpression(t.expression).type));return(0,m.mapSubtypes)(t,(t=>{if((0,u.isClassInstance)(t)&&u.ClassType.isTypedDictClass(t)){const n=(0,c.getTypedDictMembersForClass)(e,t,!0).knownItems.get(i);if(n&&(n.isRequired||n.isProvided)&&(0,u.isClassInstance)(n.valueType)){const e=n.valueType;if(o.some((t=>(0,u.isClassInstance)(t)&&u.ClassType.isSameGenericClass(t,e)&&t.literalValue===e.literalValue)))return}}return t}))}let r=b(e,t,n);return r=r.filter((t=>{let r=!0;return n.entries.forEach((s=>{if(t.typedDict){if(71===s.nodeType){const i=h(e,e.getBuiltInObject(n,"str"),s.keyPattern,a);(0,u.isNever)(i)&&(r=!1);const o=(0,m.mapSubtypes)(i,(n=>{var a;if((0,u.isAnyOrUnknown)(n))return n;if((0,u.isClassInstance)(n)&&u.ClassType.isBuiltIn(n,"str")){if(!(0,m.isLiteralType)(n))return u.UnknownType.create();const r=(0,c.getTypedDictMembersForClass)(e,t.typedDict).knownItems.get(n.literalValue);if(r){const i=h(e,r.valueType,s.valuePattern,!0);if(!(0,u.isNever)(i)){if(!r.isRequired&&!r.isProvided&&(0,u.isTypeSame)(t.subtype,t.typedDict)){const e=new Map(null!==(a=t.typedDict.typedDictNarrowedEntries)&&void 0!==a?a:[]);e.set(n.literalValue,{valueType:r.valueType,isReadOnly:r.isReadOnly,isRequired:!1,isProvided:!0}),t.subtype=u.ClassType.cloneAsInstance(u.ClassType.cloneForNarrowedTypedDictEntries(u.ClassType.cloneAsInstantiable(t.typedDict),e)),t.typedDict=t.subtype}return i}}}}));(0,u.isNever)(o)&&(r=!1)}}else if(t.dictTypeArgs&&71===s.nodeType){const n=h(e,t.dictTypeArgs.key,s.keyPattern,a),i=h(e,t.dictTypeArgs.value,s.valuePattern,a);((0,u.isNever)(n)||(0,u.isNever)(i))&&(r=!1)}})),r})),(0,u.combineTypes)(r.map((e=>e.subtype)))}(e,t,n,r);case 73:return function(e,t,n,a){const r=e.getTypeOfExpression(n.expression).type,s=[];return e.mapSubtypesExpandTypeVars(r,void 0,((r,i)=>{s.push(e.mapSubtypesExpandTypeVars(t,{conditionFilter:(0,m.getTypeCondition)(r)},(t=>{if(!a){if((0,u.isClassInstance)(t)&&u.ClassType.isEnumClass(t)&&!(0,m.isLiteralType)(t)&&(0,u.isClassInstance)(r)&&(0,u.isSameWithoutLiteralValue)(t,r)&&(0,m.isLiteralType)(r)){const n=(0,d.enumerateLiteralsForType)(e,t);if(n)return(0,u.combineTypes)(n.filter((e=>!u.ClassType.isLiteralValueSame(r,e))))}else if((0,u.isClassInstance)(t)&&(0,u.isClassInstance)(r)&&(0,m.isLiteralType)(t)&&u.ClassType.isLiteralValueSame(r,t))return;return t}if((0,u.isNever)(r)||(0,u.isNever)(t))return u.NeverType.createNever();if((0,u.isAnyOrUnknown)(r)||(0,u.isAnyOrUnknown)(t))return(0,u.isUnknown)(r)||(0,u.isUnknown)(t)?(0,m.preserveUnknown)(r,t):u.AnyType.create();if((0,u.isClassInstance)(t)&&(0,m.isLiteralType)(t)&&(0,u.isClassInstance)(r)&&(0,m.isLiteralType)(r))return u.ClassType.isLiteralValueSame(r,t)?i:void 0;return e.useSpeculativeMode(n.expression,(()=>e.getTypeOfMagicMethodCall(r,"__eq__",[{type:t}],n.expression,void 0)))?i:void 0})))})),(0,u.combineTypes)(s)}(e,t,n,r);case 69:return r?t:u.NeverType.createNever();case 0:return t}}function f(e,t){const n=(0,m.lookUpClassMember)(t,"__match_args__");if(n){const t=e.getTypeOfMember(n);if((0,u.isClassInstance)(t)&&(0,m.isTupleClass)(t)&&!(0,m.isUnboundedTupleClass)(t)&&t.tupleTypeArguments){const e=t.tupleTypeArguments;if(e.every((e=>(0,u.isClassInstance)(e.type)&&u.ClassType.isBuiltIn(e.type,"str")&&(0,m.isLiteralType)(e.type))))return e.map((e=>e.type.literalValue))}}return[]}function T(e){if(g.some((t=>e.details.fullName===t)))return!0;if((0,m.lookUpClassMember)(e,"__match_args__"))return!1;for(const t of e.details.mro)if((0,u.isClass)(t)&&g.some((e=>t.details.fullName===e)))return!0;return!1}function v(e,t,n,a,r,s){var i;let o;if(t.name?o=t.name.value:n<a.length&&(o=a[n]),(0,u.isAnyOrUnknown)(r))return r;if(!(0,u.isClass)(r))return u.UnknownType.create();let l,p=!1,c=r;if(!t.name&&(0,u.isClass)(r)&&0===n&&(T(r)?p=!0:0===a.length&&r.details.mro.forEach((e=>{(0,u.isClass)(e)&&T(e)&&(c=e,p=!0)}))),p)l=u.ClassType.cloneAsInstance(c);else if(o&&(l=null===(i=e.useSpeculativeMode(t,(()=>e.getTypeOfBoundMember(t,u.ClassType.cloneAsInstance(r),o))))||void 0===i?void 0:i.type),!l){if(!s)return r;if(u.ClassType.isFinal(r))return u.NeverType.createNever();l=u.UnknownType.create()}return h(e,l,t.pattern,s)}function b(e,t,n){const a=[];return(0,m.doForEachSubtype)(t,(r=>{const s=e.makeTopLevelTypeVarsConcrete(r);if((0,u.isAnyOrUnknown)(s))a.push({subtype:r,dictTypeArgs:{key:s,value:s}});else if((0,u.isClassInstance)(s)){if(u.ClassType.isTypedDictClass(s))return void a.push({subtype:r,typedDict:s});let i;for(const e of s.details.mro)if((0,u.isInstantiableClass)(e)&&u.ClassType.isBuiltIn(e,"Mapping")){i=e;break}if(i){const e=(0,m.partiallySpecializeType)(i,s);return void(e.typeArguments&&e.typeArguments.length>=2&&a.push({subtype:r,dictTypeArgs:{key:e.typeArguments[0],value:e.typeArguments[1]}}))}const o=e.getTypingType(n,"Mapping");if(o&&(0,u.isInstantiableClass)(o)){const n=u.ClassType.cloneAsInstance(o);e.assignType(t,n)&&a.push({subtype:r,dictTypeArgs:{key:u.UnknownType.create(),value:u.UnknownType.create()}})}}})),a}function _(e,t,n){const a=t.entries.length,r=t.starEntryIndex,s=[];return(0,m.doForEachSubtype)(n,(n=>{var i;const o=e.makeTopLevelTypeVarsConcrete(n);let c,d=!1;if((0,u.isClassInstance)(o)){for(const e of o.details.mro){if(!(0,u.isInstantiableClass)(e))break;if(u.ClassType.isBuiltIn(e,"str")||u.ClassType.isBuiltIn(e,"bytes")||u.ClassType.isBuiltIn(e,"bytearray"))return void s.push({subtype:n,entryTypes:[],isIndeterminateLength:!0,isDefiniteNoMatch:!0});if(u.ClassType.isBuiltIn(e,"Sequence")){c=e;break}if((0,m.isTupleClass)(e)){c=e;break}}if(c){const l=(0,m.partiallySpecializeType)(c,o);if((0,m.isTupleClass)(l)){const o=null!==(i=l.tupleTypeArguments)&&void 0!==i?i:[{type:u.UnknownType.create(),isUnbounded:!0}],p=o.findIndex((e=>e.isUnbounded||(0,u.isUnpackedVariadicTypeVar)(e.type)));if(p>=0){for(;o.length<a;)o.splice(p,0,o[p]);o.length>a&&void 0===r&&o.splice(p,1)}if(void 0!==r&&o.length>=2&&o.length>a){const e=o.length-a+1,t=o.splice(r,e);o.splice(r,0,{type:(0,u.combineTypes)(t.map((e=>e.type))),isUnbounded:t.every((e=>e.isUnbounded||(0,u.isUnpackedVariadicTypeVar)(e.type)))})}if(o.length===a){let i=!1,l=p>=0;void 0!==r&&1===a&&(l=!1);for(let n=0;n<a;n++){const a=t.entries[n],r=o[n].type,s=h(e,r,a,!0);(0,u.isNever)(s)&&(i=!0)}s.push({subtype:n,entryTypes:i?[]:o.map((e=>e.type)),isIndeterminateLength:!1,isTuple:!0,isDefiniteNoMatch:i,isPotentialNoMatch:l}),d=!0}if(void 0!==r){let i=!1;if(o.length===a-1?(i=!0,o.splice(r,0,{type:u.AnyType.create(),isUnbounded:!0})):o.length===a&&o[r].isUnbounded&&(i=!0),i){let i=!1;for(let n=0;n<a;n++){if(n===r)continue;const a=t.entries[n],s=o[n].type,l=h(e,s,a,!0);(0,u.isNever)(l)&&(i=!0)}s.push({subtype:n,entryTypes:i?[]:o.map((e=>e.type)),isIndeterminateLength:!1,isTuple:!0,isDefiniteNoMatch:i}),d=!0}}}else s.push({subtype:n,entryTypes:[l.typeArguments&&l.typeArguments.length>0?l.typeArguments[0]:u.UnknownType.create()],isIndeterminateLength:!0,isDefiniteNoMatch:!1}),d=!0}}if(!d){const a=e.getTypingType(t,"Sequence");if(a&&(0,u.isInstantiableClass)(a)){const r=new y.TypeVarContext((0,m.getTypeVarScopeId)(a));if((0,l.populateTypeVarContextBasedOnExpectedType)(e,u.ClassType.cloneAsInstance(a),n,r,(0,p.getTypeVarScopesForNode)(t),t.start)){const e=(0,m.applySolvedTypeVars)(u.ClassType.cloneAsInstantiable(a),r);if(e.typeArguments&&e.typeArguments.length>0)return void s.push({subtype:n,entryTypes:[e.typeArguments[0]],isIndeterminateLength:!0,isDefiniteNoMatch:!1,isPotentialNoMatch:!0})}if(e.assignType(n,u.ClassType.cloneForSpecialization(u.ClassType.cloneAsInstance(a),[u.UnknownType.create()],!0)))return void s.push({subtype:n,entryTypes:[u.UnknownType.create()],isIndeterminateLength:!0,isDefiniteNoMatch:!1,isPotentialNoMatch:!0})}s.push({subtype:n,entryTypes:[],isIndeterminateLength:!0,isDefiniteNoMatch:!0})}})),s}function C(e,t,n,a,s,i,o){if(n.isIndeterminateLength){let r=n.entryTypes[0];return o||a!==i||(0,u.isNever)(r)||(r=I(e,t,r)),r}if(void 0===i||a<i)return n.entryTypes[a];if(a===i){const a=n.entryTypes.slice(i,i+n.entryTypes.length-s+1).map((t=>e.stripLiteralValue(t)));let r=(0,u.combineTypes)(a);return o||(r=I(e,t,r)),r}const l=n.entryTypes.length-(s-a);return(0,r.assert)(l>=0&&l<n.entryTypes.length),n.entryTypes[l]}function I(e,t,n){var a;if((0,u.isNever)(n))return n;const r=(0,m.convertToInstance)(e.getBuiltInObject(t,"list"));return r&&(0,u.isClassInstance)(r)?(n=null!==(a=(0,m.containsAnyOrUnknown)(n,!1))&&void 0!==a?a:n,u.ClassType.cloneForSpecialization(r,[n],!0)):u.UnknownType.create()}function k(e,t,n){e.addDiagnostic(i.DiagnosticRule.reportUnnecessaryComparison,o.LocMessage.patternNeverMatches().format({type:e.printType(n)}),t)}t.narrowTypeBasedOnPattern=h,t.checkForUnusedPattern=function(e,t,n){if((0,u.isNever)(n))k(e,t,n);else if(66===t.nodeType&&t.orPatterns.length>1)t.orPatterns.forEach((t=>{const a=h(e,n,t,!0);(0,u.isNever)(a)&&k(e,t,n),n=h(e,n,t,!1)}));else{const a=h(e,n,t,!0);(0,u.isNever)(a)&&k(e,t,n)}},t.assignTypeToPatternTargets=function e(t,n,a,r){const l=h(t,n,r,!0);switch(r.nodeType){case 65:{const n=_(t,r,l).filter((e=>!e.isDefiniteNoMatch));r.entries.forEach(((s,i)=>{const o=(0,u.combineTypes)(n.map((e=>C(t,r,e,i,r.entries.length,r.starEntryIndex,!1))));e(t,o,a,s)}));break}case 66:{r.target&&t.assignTypeToExpression(r.target,l,a,r.target);let n=l;r.orPatterns.forEach((r=>{e(t,n,a,r),n=h(t,n,r,!1)}));break}case 69:if(r.isWildcard){if(!a)if((0,u.isUnknown)(l))t.addDiagnostic(i.DiagnosticRule.reportUnknownVariableType,o.LocMessage.wildcardPatternTypeUnknown(),r.target);else if((0,m.isPartlyUnknown)(l)){const e=new s.DiagnosticAddendum;e.addMessage(o.LocAddendum.typeOfSymbol().format({name:"_",type:t.printType(l,{expandTypeAlias:!0})})),t.addDiagnostic(i.DiagnosticRule.reportUnknownVariableType,o.LocMessage.wildcardPatternTypePartiallyUnknown()+e.getString(),r.target)}}else t.assignTypeToExpression(r.target,l,a,r.target);break;case 70:{const n=b(t,l,r);r.entries.forEach((s=>{const i=[],o=[];n.forEach((e=>{if(e.typedDict)if(71===s.nodeType){const n=h(t,t.getBuiltInObject(r,"str"),s.keyPattern,!0);i.push(n),(0,m.doForEachSubtype)(n,(n=>{if((0,u.isClassInstance)(n)&&u.ClassType.isBuiltIn(n,"str")&&(0,m.isLiteralType)(n)){const a=(0,c.getTypedDictMembersForClass)(t,e.typedDict).knownItems.get(n.literalValue);o.push(a?a.valueType:u.UnknownType.create())}else o.push(u.UnknownType.create())}))}else 72===s.nodeType&&(i.push(t.getBuiltInObject(r,"str")),o.push(u.UnknownType.create()));else if(e.dictTypeArgs)if(71===s.nodeType){const n=h(t,e.dictTypeArgs.key,s.keyPattern,!0);i.push(n),o.push(h(t,e.dictTypeArgs.value,s.valuePattern,!0))}else 72===s.nodeType&&(i.push(e.dictTypeArgs.key),o.push(e.dictTypeArgs.value))}));const l=(0,u.combineTypes)(i),p=(0,u.combineTypes)(o);if(71===s.nodeType)e(t,l,a,s.keyPattern),e(t,p,a,s.valuePattern);else if(72===s.nodeType){const e=t.getBuiltInType(r,"dict"),n=t.getBuiltInObject(r,"str"),i=e&&(0,u.isInstantiableClass)(e)&&(0,u.isClassInstance)(n)?u.ClassType.cloneAsInstance(u.ClassType.cloneForSpecialization(e,[l,p],!0)):u.UnknownType.create();t.assignTypeToExpression(s.target,i,a,s.target)}}));break}case 68:{const n=r.arguments.map((e=>[]));t.mapSubtypesExpandTypeVars(l,void 0,(e=>{(0,u.isClassInstance)(e)?(0,m.doForEachSubtype)(l,(a=>{const s=t.makeTopLevelTypeVarsConcrete(a);if((0,u.isAnyOrUnknown)(s))r.arguments.forEach(((e,t)=>{n[t].push(s)}));else if((0,u.isClassInstance)(s)){let a=[];r.arguments.some((e=>!e.name))&&(a=f(t,u.ClassType.cloneAsInstantiable(e))),r.arguments.forEach(((r,s)=>{const i=v(t,r,s,a,u.ClassType.cloneAsInstantiable(e),!0);n[s].push(i)}))}})):r.arguments.forEach(((e,t)=>{n[t].push(u.UnknownType.create())}))})),r.arguments.forEach(((r,s)=>{e(t,(0,u.combineTypes)(n[s]),a,r.pattern)}));break}}return l},t.validateClassPattern=function(e,t){let n=e.getTypeOfExpression(t.className,2).type;if(n.specialForm&&(n=n.specialForm),!(0,u.isAnyOrUnknown)(n))if(n.typeAliasInfo&&(0,u.isInstantiableClass)(n)&&n.typeArguments&&n.isTypeArgumentExplicit)e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,o.LocMessage.classPatternTypeAlias().format({type:e.printType(n)}),t.className);else if((0,u.isInstantiableClass)(n)){const a=T(n);a&&1===t.arguments.length&&t.arguments[0].name&&e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,o.LocMessage.classPatternBuiltInArgPositional(),t.arguments[0].name);let r=t.arguments.findIndex((e=>void 0!==e.name));r<0&&(r=t.arguments.length);let s=1;if(!a){let a=[];t.arguments.some((e=>!e.name))&&(a=f(e,n)),s=a.length}r>s&&e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,o.LocMessage.classPatternPositionalArgCount().format({type:n.details.name,expected:s,received:r}),t.arguments[s])}else(0,u.isNever)(n)||e.addDiagnostic(i.DiagnosticRule.reportGeneralTypeIssues,o.LocAddendum.typeNotClass().format({type:e.printType(n)}),t.className)},t.getPatternSubtypeNarrowingCallback=function(e,t,n){if(24===n.nodeType&&1===n.items.length&&!n.trailingComma&&0===n.items[0].argumentCategory&&(0,p.isMatchingExpression)(t,n.baseExpression)){const t=e.getTypeOfExpression(n.items[0].valueExpression),a=t.type;if((0,u.isClassInstance)(a)&&(0,m.isLiteralType)(a)&&u.ClassType.isBuiltIn(a,["int","str"])){const r=e.getTypeOfExpression(n.baseExpression,2),s=r.type;return n=>{let i=!0;const o=[];if((0,m.doForEachSubtype)(n,(t=>{t=e.makeTopLevelTypeVarsConcrete(t),(0,u.isClassInstance)(t)&&void 0!==t.literalValue?u.ClassType.isBuiltIn(a,"str")?o.push((0,d.narrowTypeForDiscriminatedDictEntryComparison)(e,s,a,t,!0)):o.push((0,d.narrowTypeForDiscriminatedTupleComparison)(e,s,a,t,!0)):(0,u.isNever)(t)||(i=!1)})),i)return{type:(0,u.combineTypes)(o),isIncomplete:t.isIncomplete||r.isIncomplete}}}}if(52===n.nodeType){const a=n.expressions.findIndex((e=>(0,p.isMatchingExpression)(t,e)));if(a>=0){const t=e.getTypeOfExpression(n.expressions[a]);return e=>{let n=!0;const r=[];return(0,m.doForEachSubtype)(e,(t=>{(0,u.isClassInstance)(t)&&u.ClassType.isBuiltIn(t,"tuple")&&t.tupleTypeArguments&&a<t.tupleTypeArguments.length&&t.tupleTypeArguments.every((e=>!e.isUnbounded))?r.push(t.tupleTypeArguments[a].type):(0,u.isNever)(e)?r.push(e):n=!1})),n?{type:(0,u.combineTypes)(r),isIncomplete:t.isIncomplete}:void 0}}}if(35===n.nodeType&&(0,p.isMatchingExpression)(t,n.leftExpression)){const t=e.getTypeOfExpression(n.leftExpression,2).type;return a=>{if((0,u.isNever)(a))return{type:u.NeverType.createNever()};if(!(0,m.isLiteralTypeOrUnion)(a))return;return{type:(0,m.mapSubtypes)(a,(a=>((0,r.assert)((0,u.isClassInstance)(a)&&void 0!==a.literalValue),(0,d.narrowTypeForDiscriminatedLiteralFieldComparison)(e,t,n.memberName.value,a,!0))))}}}}},4732:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Program=void 0;const i=n(65872),o=n(15684),l=n(64704),p=n(55484),c=n(57508),d=s(n(83181)),u=n(83181),m=n(10996),y=n(96193),g=n(37636);n(58484);const h=n(55164),f=n(6216),T=n(55084),v=n(80636),b=s(n(9316)),_=n(80232),C=n(53748),I=n(28340),k=n(41500),w=n(80068),S=n(408),A=n(76392),x=n(74068),P=n(27124),N=n(10983);class D{constructor(){this._isEditMode=!1,this._mutatedFiles=[]}get isEditMode(){return this._isEditMode}addMutatedFiles(e){this._mutatedFiles.push(e)}enable(){this._isEditMode=!0,this._mutatedFiles=[]}disable(){this._isEditMode=!1;const e=this._mutatedFiles;return this._mutatedFiles=[],e}}class F{constructor(e,t,n,a,r,s){var i;this.serviceProvider=n,this._disableChecker=r,this._sourceFileList=[],this._sourceFileMap=new Map,this._parsedFileCount=0,this._editModeTracker=new D,this._lookUpImport=(e,t)=>{var n;let a;if(T.Uri.is(e))a=this.getSourceFileInfo(e);else{const t=this._importResolver.resolveImport(e.importingFileUri,this._configOptions.findExecEnvironment(e.importingFileUri),{leadingDots:0,nameParts:e.nameParts,importedSymbols:void 0});if(t.isImportFound&&!t.isNativeLib&&t.resolvedUris.length>0){const e=t.resolvedUris[t.resolvedUris.length-1];e.isEmpty()||(a=this.getSourceFileInfo(e),a||(this.addTrackedFile(e),a=this.getSourceFileInfo(e)))}}if(!a)return;if(null==t?void 0:t.skipParsing)return{symbolTable:new Map,dunderAllNames:void 0,usesUnsupportedDunderAllForm:!1,get docString(){},isInPyTypedPackage:!1};a.sourceFile.isBindingRequired()&&f.timingStats.typeCheckerTime.subtractFromTime((()=>{this._bindFile(a,void 0,null==t?void 0:t.skipFileNeededCheck)}));const r=a.sourceFile.getModuleSymbolTable();if(!r)return;const s=a.sourceFile.getParserOutput(),i=s.parseTree,o=b.getFileInfo(i),l=b.getDunderAllInfo(s.parseTree);return{symbolTable:r,dunderAllNames:null==l?void 0:l.names,usesUnsupportedDunderAllForm:null!==(n=null==l?void 0:l.usesUnsupportedDunderAllForm)&&void 0!==n&&n,get docString(){return(0,I.getDocString)(i.statements)},isInPyTypedPackage:o.isInPyTypedPackage}},this._console=n.tryGet(g.ServiceKeys.console)||new c.StandardConsole,this._logTracker=null!=a?a:new m.LogTracker(this._console,"FG"),this._importResolver=e,this._configOptions=t,this._sourceFileFactory=n.sourceFileFactory(),this._cacheManager=null!==(i=n.tryGet(g.ServiceKeys.cacheManager))&&void 0!==i?i:new _.CacheManager,this._cacheManager.registerCacheOwner(this),this._createNewEvaluator(),this._id=null!=s?s:`Prog_${F._nextId}`,F._nextId+=1}get id(){return this._id}get console(){return this._console}get rootPath(){return this._configOptions.projectRoot}get evaluator(){return this._evaluator}get configOptions(){return this._configOptions}get importResolver(){return this._importResolver}get fileSystem(){return this._importResolver.fileSystem}dispose(){this._cacheManager.unregisterCacheOwner(this)}enterEditMode(){this._editModeTracker.enable()}exitEditMode(){const e=this._editModeTracker.disable(),t=new Set,n=[];if(e.forEach((e=>{e.isCreatedInEditMode&&t.add(e);const a=e.restore();if(a){const t=o.TextDocument.create(e.sourceFile.getUri().toString(),"python",1,e.sourceFile.getFileContent()||"");n.push({fileUri:e.sourceFile.getUri(),range:{start:{line:0,character:0},end:{line:t.lineCount,character:0}},replacementText:a})}})),t.size>0)for(let e=this._sourceFileList.length-1;e>=0;e--){const n=this._sourceFileList[e];t.has(n)&&(n.sourceFile.prepareForClose(),this._removeSourceFileFromListAndMap(n.sourceFile.getUri(),e))}return e.length>0&&this._createNewEvaluator(),n}setConfigOptions(e){this._configOptions=e,this._importResolver.setConfigOptions(e),this._createNewEvaluator()}setImportResolver(e){this._importResolver=e,this._createNewEvaluator()}setTrackedFiles(e){if(this._sourceFileList.length>0){const t=new Map;e.forEach((e=>{t.set(e.key,e)})),this._sourceFileList.forEach((e=>{const n=e.sourceFile.getUri();t.has(n.key)||(e.isTracked=!1)}))}return this.addTrackedFiles(e),this._removeUnneededFiles()}setPreCheckCallback(e){this._preCheckCallback=e}setAllowedThirdPartyImports(e){this._allowedThirdPartyImports=e}addTrackedFiles(e,t=!1,n=!1){e.forEach((e=>{this.addTrackedFile(e,t,n)}))}addInterimFile(e){let t=this.getSourceFileInfo(e);return t||(t=this._createInterimFileInfo(e),this._addToSourceFileListAndMap(t)),t}addTrackedFile(e,t=!1,n=!1){let a=this.getSourceFileInfo(e);const r=this._getModuleImportInfoForFile(e).moduleName;if(a)return a.sourceFile.setModuleName(r),a.isTracked=!0,a.sourceFile;const s=this._sourceFileFactory.createSourceFile(this.serviceProvider,e,r,t,n,this._editModeTracker,this._console,this._logTracker);return a=new w.SourceFileInfo(s,!1,t,n,this._editModeTracker,{isTracked:!0}),this._addToSourceFileListAndMap(a),s}setFileOpened(e,t,n,a){var r,s;let i=this.getSourceFileInfo(e);if(i)i.isOpenByClient=!0,i.diagnosticsVersion=0;else{const t=this._getModuleImportInfoForFile(e),n=this._sourceFileFactory.createSourceFile(this.serviceProvider,e,t.moduleName,!1,t.isThirdPartyPyTypedPresent,this._editModeTracker,this._console,this._logTracker,null!==(r=null==a?void 0:a.ipythonMode)&&void 0!==r?r:k.IPythonMode.None),o=null==a?void 0:a.chainedFileUri;i=new w.SourceFileInfo(n,!1,!1,!1,this._editModeTracker,{isTracked:null!==(s=null==a?void 0:a.isTracked)&&void 0!==s&&s,chainedSourceFile:o?this.getSourceFileInfo(o):void 0,isOpenByClient:!0}),this._addToSourceFileListAndMap(i)}(0,S.verifyNoCyclesInChainedFiles)(this,i),i.sourceFile.setClientVersion(t,n)}getChainedUri(e){var t;const n=this.getSourceFileInfo(e);return null===(t=null==n?void 0:n.chainedSourceFile)||void 0===t?void 0:t.sourceFile.getUri()}updateChainedUri(e,t){const n=this.getSourceFileInfo(e);n&&(n.chainedSourceFile=t?this.getSourceFileInfo(t):void 0,n.sourceFile.markDirty(),this._markFileDirtyRecursive(n,new Set),(0,S.verifyNoCyclesInChainedFiles)(this,n))}setFileClosed(e,t){const n=this.getSourceFileInfo(e);return n&&(n.isOpenByClient=!1,n.isTracked=null!=t?t:n.isTracked,n.sourceFile.setClientVersion(null,""),n.sourceFile.didContentsChangeOnDisk()&&(n.sourceFile.markDirty(),this._markFileDirtyRecursive(n,new Set))),this._removeUnneededFiles()}markAllFilesDirty(e){const t=new Set;this._sourceFileList.forEach((n=>{e?n.sourceFile.markDirty():n.sourceFile.didContentsChangeOnDisk()&&(n.sourceFile.markDirty(),this._markFileDirtyRecursive(n,t))})),t.size>0&&this._createNewEvaluator()}markFilesDirty(e,t){const n=new Set;e.forEach((e=>{const a=this.getSourceFileInfo(e);if(a){const r=e.fileName;if("builtins.pyi"===r||"__builtins__.pyi"===r)return void this.markAllFilesDirty(t);(t||!a.isOpenByClient&&a.sourceFile.didContentsChangeOnDisk())&&(a.sourceFile.markDirty(),this._markFileDirtyRecursive(a,n))}})),n.size>0&&this._createNewEvaluator()}getFileCount(e=!0){return e?this._sourceFileList.filter((e=>(0,S.isUserCode)(e))).length:this._sourceFileList.length}getUserFileCount(){return this._sourceFileList.filter((e=>(0,S.isUserCode)(e))).length}getUserFiles(){return this._sourceFileList.filter((e=>(0,S.isUserCode)(e)))}getOpened(){return this._sourceFileList.filter((e=>e.isOpenByClient))}getFilesToAnalyzeCount(){let e=0;return this._disableChecker||this._sourceFileList.forEach((t=>{t.sourceFile.isCheckingRequired()&&this._shouldCheckFile(t)&&e++})),e}isCheckingOnlyOpenFiles(){return this._configOptions.checkOnlyOpenFiles||!1}functionSignatureDisplay(){return this._configOptions.functionSignatureDisplay}containsSourceFileIn(e){for(const t of this._sourceFileMap.values())if(t.sourceFile.getUri().startsWith(e))return!0;return!1}owns(e){const t=this.getSourceFileInfo(e);return t?t.isTracked:(0,p.matchFileSpecs)(this._configOptions,e)}getSourceFile(e){const t=this.getSourceFileInfo(e);if(t)return t.sourceFile}getBoundSourceFile(e){var t;return null===(t=this.getBoundSourceFileInfo(e))||void 0===t?void 0:t.sourceFile}getSourceFileInfoList(){return this._sourceFileList}getSourceFileInfo(e){if(!e.isEmpty())return this._sourceFileMap.get(e.key)}getBoundSourceFileInfo(e,t,n){const a=this.getSourceFileInfo(e);if(a)return this._bindFile(a,t,n),a}analyze(e,t=i.CancellationToken.None){return this._runEvaluatorWithCancellationToken(t,(()=>{const n=new f.Duration,a=this._sourceFileList.filter((e=>e.isOpenByClient&&e.sourceFile.isCheckingRequired()));if(a.length>0){const r=e?e.openFilesTimeInMs:Number.MAX_VALUE;for(const e of a)if(this._checkTypes(e,t)&&n.getDurationInMilliseconds()>r)return!0;if(void 0!==e)return!0}if(!this._configOptions.checkOnlyOpenFiles){const a=e?e.noOpenFilesTimeInMs:Number.MAX_VALUE;for(const e of this._sourceFileList)if((0,S.isUserCode)(e)&&this._checkTypes(e,t)&&n.getDurationInMilliseconds()>a)return!0}return!1}))}analyzeFile(e,t=i.CancellationToken.None){return this._runEvaluatorWithCancellationToken(t,(()=>{const n=this.getSourceFileInfo(e);return!(!n||!this._checkTypes(n,t))}))}run(e,t){return this._runEvaluatorWithCancellationToken(t,(()=>e(this)))}runEditMode(e,t){if(this._editModeTracker.isEditMode)return this._runEvaluatorWithCancellationToken(t,(()=>e(this)))}getSourceMapper(e,t,n,a){const r=this.getSourceFileInfo(e),s=this._configOptions.findExecEnvironment(e);return this._createSourceMapper(s,t,r,n,a)}getParserOutput(e){var t;return null===(t=this.getBoundSourceFileInfo(e,void 0,!0))||void 0===t?void 0:t.sourceFile.getParserOutput()}getParseResults(e){var t;return null===(t=this.getBoundSourceFileInfo(e,void 0,!0))||void 0===t?void 0:t.sourceFile.getParseResults()}handleMemoryHighUsage(){this._handleMemoryHighUsage()}printDetailedAnalysisTimes(){const e=this._sourceFileList.filter((e=>void 0!==e.sourceFile.getCheckTime())).sort(((e,t)=>t.sourceFile.getCheckTime()-e.sourceFile.getCheckTime()));this._console.info(""),this._console.info("Analysis time by file"),e.forEach((e=>{const t=e.sourceFile.getCheckTime();this._console.info(`${t}ms: ${e.sourceFile.getUri()}`)}))}printDependencies(e,t){const n=this._importResolver.fileSystem,a=this._sourceFileList.filter((e=>!e.isTypeshedFile)).sort(((e,t)=>n.getOriginalUri(e.sourceFile.getUri())<n.getOriginalUri(t.sourceFile.getUri())?1:-1)),r=[];a.forEach((a=>{this._console.info("");const s=n.getOriginalUri(a.sourceFile.getUri());let i=s.toString();const o=e.getRelativePathComponents(s);o&&(i=o.join("/")),this._console.info(`${i}`),this._console.info(` Imports     ${a.imports.length} file`+(1===a.imports.length?"":"s")),t&&a.imports.forEach((e=>{this._console.info(`    ${n.getOriginalUri(e.sourceFile.getUri())}`)})),this._console.info(` Imported by ${a.importedBy.length} file`+(1===a.importedBy.length?"":"s")),t&&a.importedBy.forEach((e=>{this._console.info(`    ${n.getOriginalUri(e.sourceFile.getUri())}`)})),0===a.importedBy.length&&r.push(a.sourceFile)})),r.length>0&&(this._console.info(""),this._console.info(`${r.length} file${1===r.length?"":"s"} not explicitly imported`),r.forEach((e=>{this._console.info(`    ${n.getOriginalUri(e.getUri())}`)})))}writeTypeStub(e,t,n,a){for(const r of this._sourceFileList){(0,l.throwIfCancellationRequested)(a);const s=r.sourceFile.getUri(),i=e.getRelativePath(s);if(void 0!==i){let e=n.resolvePaths(i);e=t?e.getDirectory().initPyiUri:e.replaceExtension(".pyi");const s=e.getDirectory();try{(0,v.makeDirectories)(this.fileSystem,s,n)}catch(e){throw new Error(`Could not create directory for '${s}'`)}this._bindFile(r),this._runEvaluatorWithCancellationToken(a,(()=>{new N.TypeStubWriter(e,r.sourceFile,this._evaluator).write()})),this._handleMemoryHighUsage()}}}getTypeOfSymbol(e){this._handleMemoryHighUsage();return(this._evaluator||this._createNewEvaluator()).getEffectiveTypeOfSymbol(e)}printType(e,t){this._handleMemoryHighUsage();return(this._evaluator||this._createNewEvaluator()).printType(e,t)}getTextOnRange(e,t,n){const a=this.getSourceFileInfo(e);if(!a)return;const r=a.sourceFile,s=r.getOpenFileContents();return void 0!==s?this._runEvaluatorWithCancellationToken(n,(()=>{this._parseFile(a);const e=r.getParseResults(),n=(0,y.convertRangeToTextRange)(t,e.tokenizerOutput.lines);if(n)return s.substr(n.start,n.length)})):void 0}getDiagnostics(e,t=!0){const n=this._removeUnneededFiles();return this._sourceFileList.forEach((a=>{if(this._shouldCheckFile(a)){let r=a.sourceFile.getDiagnostics(e,t?a.diagnosticsVersion:void 0);void 0!==r&&(e.disableTaggedHints&&(r=r.filter((e=>4!==e.category&&3!==e.category&&5!==e.category))),n.push({fileUri:a.sourceFile.getUri(),version:a.sourceFile.getClientVersion(),diagnostics:r}),a.diagnosticsVersion=a.sourceFile.getDiagnosticVersion())}else!a.isOpenByClient&&e.checkOnlyOpenFiles&&void 0!==a.diagnosticsVersion&&(n.push({fileUri:a.sourceFile.getUri(),version:a.sourceFile.getClientVersion(),diagnostics:[]}),a.diagnosticsVersion=void 0)})),n}getDiagnosticsForRange(e,t){const n=this.getSourceFile(e);if(!n)return[];const a=n.getDiagnostics(this._configOptions);return a?a.filter((e=>(0,h.doRangesIntersect)(e.range,t))):[]}clone(){var e,t;const n=new F(this._importResolver,this._configOptions,this.serviceProvider,new m.LogTracker(this._console,"Cloned")),a=this.getUserFiles();n.setTrackedFiles(a.map((e=>e.sourceFile.getUri()))),n.markAllFilesDirty(!0);for(const a of this.getOpened()){const r=a.sourceFile.getClientVersion();void 0!==r&&n.setFileOpened(a.sourceFile.getUri(),r,null!==(e=a.sourceFile.getOpenFileContents())&&void 0!==e?e:"",{chainedFileUri:null===(t=a.chainedSourceFile)||void 0===t?void 0:t.sourceFile.getUri(),ipythonMode:a.sourceFile.getIPythonMode(),isTracked:a.isTracked})}return n}getCacheUsage(){const e=this._evaluator.getTypeCacheEntryCount()/75e4,t=this._parsedFileCount/1e3;return Math.max(e,t)}emptyCache(){var e;this._createNewEvaluator(),this._discardCachedParseResults(),this._parsedFileCount=0,null===(e=this.serviceProvider.tryGet(g.ServiceKeys.stateMutationListeners))||void 0===e||e.forEach((e=>{var t;return null===(t=e.onClearCache)||void 0===t?void 0:t.call(e)}))}_handleMemoryHighUsage(){const e=this._cacheManager.getCacheUsage(),t=this._cacheManager.getUsedHeapRatio(this._configOptions.verboseOutput?this._console:void 0);if(e>.75||t>.9){const e=15099494.4;(this._evaluator.getTypeCacheEntryCount()>e||t>.9)&&this._cacheManager.emptyCache(this._console)}}_discardCachedParseResults(){for(const e of this._sourceFileList)e.sourceFile.dropParseAndBindInfo()}_runEvaluatorWithCancellationToken(e,t){try{return e?this._evaluator.runWithCancellationToken(e,t):t()}catch(e){throw l.OperationCanceledException.is(e)&&!e.isTypeCacheInvalid||this._createNewEvaluator(),e}}_removeUnneededFiles(){const e=[];for(let t=0;t<this._sourceFileList.length;){const n=this._sourceFileList[t];this._isFileNeeded(n)?(this._shouldCheckFile(n)||void 0===n.diagnosticsVersion||(e.push({fileUri:n.sourceFile.getUri(),version:n.sourceFile.getClientVersion(),diagnostics:[]}),n.diagnosticsVersion=void 0),t++):(void 0!==n.diagnosticsVersion&&e.push({fileUri:n.sourceFile.getUri(),version:n.sourceFile.getClientVersion(),diagnostics:[]}),n.sourceFile.prepareForClose(),this._removeSourceFileFromListAndMap(n.sourceFile.getUri(),t),n.imports.forEach((a=>{const r=a.importedBy.findIndex((e=>e===n));if(!(r<0||(a.mutate((e=>e.importedBy.splice(r,1))),this._isFileNeeded(a)))){const n=this._sourceFileList.findIndex((e=>e===a));n>=0&&n<t&&(void 0!==a.diagnosticsVersion&&e.push({fileUri:a.sourceFile.getUri(),version:a.sourceFile.getClientVersion(),diagnostics:[]}),a.sourceFile.prepareForClose(),this._removeSourceFileFromListAndMap(a.sourceFile.getUri(),n),t--)}})),n.shadowedBy.forEach((e=>{e.mutate((e=>e.shadows=e.shadows.filter((e=>e!==n))))})),n.mutate((e=>e.shadowedBy=[])))}return e}_isFileNeeded(e,t){return!e.sourceFile.isFileDeleted()&&(!!(t||e.isTracked||e.isOpenByClient)||(e.shadows.length>0||0!==e.importedBy.length&&this._isImportNeededRecursive(e,new Set)))}_isImportNeededRecursive(e,t){if(e.isTracked||e.isOpenByClient||e.shadows.length>0)return!0;const n=e.sourceFile.getUri();if(t.has(n.key))return!1;t.add(n.key);for(const n of e.importedBy)if(this._isImportNeededRecursive(n,t))return!0;return!1}_createSourceMapper(e,t,n,a,r){return new A.SourceMapper(this._importResolver,e,this._evaluator,((e,t)=>{let n=this.getSourceFileInfo(e);if(!n){if(!this.fileSystem.existsSync(e))return;n=this.addInterimFile(e)}return this._addShadowedFile(n,t),this.getBoundSourceFile(t)}),(e=>{let t=this.getBoundSourceFileInfo(e);if(!t){if(!this.fileSystem.existsSync(e))return;t=this.addInterimFile(e),this._parseFile(t,void 0,!0)}return t}),null!=a&&a,null!=r&&r,n,t)}_isImportAllowed(e,t,n){if(t.isNativeLib)return!1;let a=this._configOptions.useLibraryCodeForTypes||1===t.importType&&!!t.pyTypedInfo||2===t.importType&&e.isThirdPartyPyTypedPresent;return!((1===t.importType||e.isThirdPartyImport&&2===t.importType)&&(this._allowedThirdPartyImports?(t.isRelative||this._allowedThirdPartyImports.some((e=>t.importName===e||!!t.importName.startsWith(e+"."))))&&(a=!0):(e.isThirdPartyImport&&this._configOptions.useLibraryCodeForTypes||t.isNamespacePackage&&Array.from(t.filteredImplicitImports.values()).some((e=>!!e.pyTypedInfo)))&&(a=!0),!n))||a}_getSourceFileInfoFromKey(e){return this._sourceFileMap.get(e)}_updateSourceFileImports(e,t){const n=[],a=e.sourceFile.getImports(),r=t=>{let n=!1,a=!1;return 1===t.importType?(n=!0,t.pyTypedInfo&&(a=!0)):e.isThirdPartyImport&&2===t.importType&&(n=!0,e.isThirdPartyPyTypedPresent&&(a=!0)),{isThirdPartyImport:n,isPyTypedPresent:a}},s=new Map;if(e.chainedSourceFile)if(e.chainedSourceFile.sourceFile.isFileDeleted())e.chainedSourceFile=void 0;else{const t=e.chainedSourceFile.sourceFile.getUri();s.set(t.key,{path:t,isTypeshedFile:!1,isThirdPartyImport:!1,isPyTypedPresent:!1})}a.forEach((n=>{if(n.isImportFound){if(this._isImportAllowed(e,n,n.isStubFile)&&n.resolvedUris.length>0){const e=n.resolvedUris[n.resolvedUris.length-1];if(!e.isEmpty()){const t=r(n);s.set(e.key,{path:e,isTypeshedFile:!!n.isStdlibTypeshedFile||!!n.isThirdPartyTypeshedFile,isThirdPartyImport:t.isThirdPartyImport,isPyTypedPresent:t.isPyTypedPresent})}}n.filteredImplicitImports.forEach((t=>{if(this._isImportAllowed(e,n,t.isStubFile)&&!t.isNativeLib){const e=r(n);s.set(t.uri.key,{path:t.uri,isTypeshedFile:!!n.isStdlibTypeshedFile||!!n.isThirdPartyTypeshedFile,isThirdPartyImport:e.isThirdPartyImport,isPyTypedPresent:e.isPyTypedPresent})}})),n.nonStubImportResult&&!n.nonStubImportResult.isImportFound&&(e.sourceFile.isStubFile()||n.isStdlibTypeshedFile||t.verboseOutput&&(this._console.info(`Could not resolve source for '${n.importName}' in file '${e.sourceFile.getUri().toUserVisibleString()}'`),n.nonStubImportResult.importFailureInfo&&n.nonStubImportResult.importFailureInfo.forEach((e=>{this._console.info(`  ${e}`)}))))}else t.verboseOutput&&(this._console.info(`Could not import '${n.importName}' in file '${e.sourceFile.getUri().toUserVisibleString()}'`),n.importFailureInfo&&n.importFailureInfo.forEach((e=>{this._console.info(`  ${e}`)})))}));const i=new Map;e.imports.forEach((t=>{const n=t.sourceFile.getUri();s.has(n.key)?i.set(n.key,t):t.mutate((t=>{t.importedBy=t.importedBy.filter((t=>!t.sourceFile.getUri().equals(e.sourceFile.getUri())))}))})),s.forEach(((t,a)=>{if(!i.has(a)){let r=this.getSourceFileInfo(t.path);if(!r){const e=this._getModuleImportInfoForFile(t.path),a=this._sourceFileFactory.createSourceFile(this.serviceProvider,t.path,e.moduleName,t.isThirdPartyImport,t.isPyTypedPresent,this._editModeTracker,this._console,this._logTracker);r=new w.SourceFileInfo(a,t.isTypeshedFile,t.isThirdPartyImport,t.isPyTypedPresent,this._editModeTracker),this._addToSourceFileListAndMap(r),n.push(r)}r.mutate((t=>t.importedBy.push(e))),i.set(a,r)}})),e.mutate((e=>e.imports=[])),s.forEach(((t,n)=>{this._getSourceFileInfoFromKey(n)&&e.mutate((e=>e.imports.push(this._getSourceFileInfoFromKey(n))))})),e.builtinsImport=void 0;const o=e.sourceFile.getBuiltinsImport();if(o&&o.isImportFound){const t=o.resolvedUris[o.resolvedUris.length-1];e.builtinsImport=this.getSourceFileInfo(t)}return n}_removeSourceFileFromListAndMap(e,t){this._sourceFileMap.delete(e.key),this._sourceFileList.splice(t,1)}_addToSourceFileListAndMap(e){const t=e.sourceFile.getUri();(0,u.assert)(!this._sourceFileMap.has(t.key)),(0,u.assert)(!e.sourceFile.getUri().isEmpty()),this._sourceFileList.push(e),this._sourceFileMap.set(t.key,e)}static _getPrintTypeFlags(e){let t=0;return e.diagnosticRuleSet.printUnknownAsAny&&(t|=1),e.diagnosticRuleSet.omitConditionalConstraint&&(t|=64),e.diagnosticRuleSet.omitTypeArgsIfUnknown&&(t|=2),e.diagnosticRuleSet.omitUnannotatedParamType&&(t|=4),e.diagnosticRuleSet.pep604Printing&&(t|=8),t}_getModuleImportInfoForFile(e){return this._importResolver.getModuleNameForImport(e,this._configOptions.getDefaultExecEnvironment(),!0,!0)}_addShadowedFile(e,t){let n=this.getSourceFileInfo(t);return n||(n=this.addInterimFile(t)),n.shadows.includes(e)||n.mutate((t=>t.shadows.push(e))),e.shadowedBy.includes(n)||e.mutate((e=>e.shadowedBy.push(n))),n.sourceFile}_createInterimFileInfo(e){const t=this._getModuleImportInfoForFile(e),n=this._sourceFileFactory.createSourceFile(this.serviceProvider,e,t.moduleName,!1,!1,this._editModeTracker,this._console,this._logTracker);return new w.SourceFileInfo(n,!1,!1,!1,this._editModeTracker)}_createNewEvaluator(){return this._evaluator&&this._evaluator.disposeEvaluator(),this._evaluator=(0,P.createTypeEvaluatorWithTracker)(this._lookUpImport,{printTypeFlags:F._getPrintTypeFlags(this._configOptions),logCalls:this._configOptions.logTypeEvaluationTime,minimumLoggingThreshold:this._configOptions.typeEvaluationTimeThreshold,evaluateUnknownImportsAsAny:!!this._configOptions.evaluateUnknownImportsAsAny,verifyTypeCacheEvaluatorFlags:!!this._configOptions.internalTestMode},this._logTracker,this._configOptions.logTypeEvaluationTime?(0,x.createTracePrinter)(this._importResolver.getImportRoots(this._configOptions.findExecEnvironment(this._configOptions.projectRoot))):void 0),this._evaluator}_parseFile(e,t,n){if(this._isFileNeeded(e,n)&&e.sourceFile.isParseRequired()&&(e.sourceFile.parse(this._configOptions,this._importResolver,t)&&(this._parsedFileCount++,this._updateSourceFileImports(e,this._configOptions)),e.sourceFile.isFileDeleted())){e.isTracked=!1;const t=new Set;this._markFileDirtyRecursive(e,t),this._importResolver.invalidateCache()}}_getImplicitImports(e){var t;if(e.builtinsImport===e)return;return null!==(t=(e=>{if(e&&!e.sourceFile.isFileDeleted())return e})(e.chainedSourceFile))&&void 0!==t?t:e.builtinsImport}_bindImplicitImports(e,t){var n,a;const r=[],s=new Set;let i=this._getImplicitImports(e);for(;i;){const e=i.sourceFile.getUri();s.has(e.key)&&d.fail(null!==(a=null===(n=this.serviceProvider.tryGet(g.ServiceKeys.debugInfoInspector))||void 0===n?void 0:n.getCycleDetail(this,i))&&void 0!==a?a:"Found a cycle in implicit imports files"),s.add(e.key),r.push(i),this._parseFile(i,void 0,t),i=this._getImplicitImports(i)}if(0===r.length)return;let o=r.pop();for(;o;)this._bindFile(o,void 0,t,!0),o=r.pop()}_bindFile(e,t,n,a){var r;if(!this._isFileNeeded(e,n)||!e.sourceFile.isBindingRequired())return!e.sourceFile.isBindingRequired();this._parseFile(e,t,n);const s=t=>{if(!t||t===e)return;if(t.sourceFile.isFileDeleted())return;const n=t.sourceFile.getParserOutput();if(!n)return;return b.getScope(n.parseTree)};let i;e.builtinsImport&&e.builtinsImport!==e&&(a||this._bindImplicitImports(e),i=null!==(r=s(e.chainedSourceFile))&&void 0!==r?r:s(e.builtinsImport));let o=e.sourceFile.getParserOutput().futureImports;return e.chainedSourceFile&&(o=this._getEffectiveFutureImports(o,e.chainedSourceFile)),e.effectiveFutureImports=o.size>0?o:void 0,e.sourceFile.bind(this._configOptions,this._lookUpImport,i,o),!0}_getEffectiveFutureImports(e,t){var n;const a=new Set(e);return null===(n=t.effectiveFutureImports)||void 0===n||n.forEach((e=>{a.add(e)})),a}_shouldCheckFile(e){return!!e.isOpenByClient||!(this._configOptions.checkOnlyOpenFiles||!e.isTracked)}_checkTypes(e,t,n){return this._logTracker.log(`analyzing: ${e.sourceFile.getUri()}`,(a=>{if(!this._isFileNeeded(e))return a.suppress(),!1;if(!e.sourceFile.isCheckingRequired())return a.suppress(),!1;if(!this._shouldCheckFile(e))return a.suppress(),!1;const r=this._bindFile(e,void 0,e.sourceFile.isBindingRequired());if(!this._disableChecker){const a=this._checkDependentFiles(e,n,t);if(this._preCheckCallback){const t=e.sourceFile.getParserOutput();t&&this._preCheckCallback(t,this._evaluator)}if(r){const n=this._configOptions.findExecEnvironment(e.sourceFile.getUri());e.sourceFile.check(this.configOptions,this._importResolver,this._evaluator,this._createSourceMapper(n,t,e),a)}}if(this._handleMemoryHighUsage(),"none"!==this._configOptions.diagnosticRuleSet.reportImportCycles&&!this._allowedThirdPartyImports&&e.sourceFile.getIPythonMode()!==k.IPythonMode.CellDocs){const t=new Map;this._getImportsRecursive(e,t,0),t.forEach((e=>{f.timingStats.cycleDetectionTime.timeOperation((()=>{const t=new Map;this._detectAndReportImportCycles(e,t)||t.forEach((e=>{e.sourceFile.setNoCircularDependencyConfirmed()}))}))}))}return!0}))}_checkDependentFiles(e,t,n){if(e.sourceFile.getIPythonMode()!==k.IPythonMode.CellDocs)return;const a=!t,r=(t=null!=t?t:(0,S.createChainedByList)(this,e)).findIndex((t=>t===e));if(r<0)return;const s=r+1;if(s>=t.length)return;if(a){const e=this._cacheManager.pauseTracking();try{for(let e=t.length-1;e>=s;e--)this._checkTypes(t[e],n,t)}finally{e.dispose()}}const i=[];for(let e=s;e<t.length;e++){const n=t[e],a=null==n?void 0:n.sourceFile.getParserOutput();if(!a)continue;const r=b.getFileInfo(a.parseTree);r&&r.accessedSymbolSet&&i.push(a)}return i}_getImportsRecursive(e,t,n){const a=e.sourceFile.getUri();if(!t.has(a.key))if(n>256)e.sourceFile.setHitMaxImportDepth(256);else{t.set(a.key,e),(0,S.isUserCode)(e)&&this._parseFile(e);for(const a of e.imports)this._getImportsRecursive(a,t,n+1)}}_detectAndReportImportCycles(e,t,n=[],a=new Map){if(e.sourceFile.isStubFile()||e.isThirdPartyImport)return!1;if(e.sourceFile.isNoCircularDependencyConfirmed())return!1;const r=e.sourceFile.getUri();t.set(r.key,e);let s=!1;if(a.has(r.key))s=!0,n.length>1&&e===n[0]&&this._logImportCycle(n);else{if(a.has(r.key))return!1;a.set(r.key,!0),n.push(e);for(const r of e.imports)this._detectAndReportImportCycles(r,t,n,a)&&(s=!0);a.set(r.key,!1),n.pop()}return s}_logImportCycle(e){const t=new C.CircularDependency;e.forEach((e=>{t.appendPath(e.sourceFile.getUri())})),t.normalizeOrder();const n=t.getPaths()[0],a=this.getSourceFileInfo(n);(0,u.assert)(void 0!==a),a.sourceFile.addCircularDependency(this.configOptions,t)}_markFileDirtyRecursive(e,t,n=!1){const a=e.sourceFile.getUri();if(t.has(a.key))return;e.sourceFile.markReanalysisRequired(n),t.add(a.key),e.importedBy.forEach((n=>{const a=n.chainedSourceFile===e;this._markFileDirtyRecursive(n,t,a)}));let r=!1,s=e.chainedSourceFile;for(;s;){if(s.sourceFile.isCheckingRequired())return;r=!0,s.sourceFile.markReanalysisRequired(!1),s=s.chainedSourceFile}r&&this._createNewEvaluator()}}t.Program=F,F._nextId=0},23260:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.ISourceFileFactory=void 0,function(e){e.is=function(e){return void 0!==e.createSourceFile}}(n||(t.ISourceFileFactory=n={}))},50520:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.assignProperty=t.clonePropertyWithDeleter=t.clonePropertyWithSetter=t.createProperty=t.validatePropertyMethod=void 0;const a=n(72484),r=n(97652),s=n(95960),i=n(9316),o=n(28340),l=n(52328),p=n(8312),c=n(808);function d(e,t,n){const a=p.ClassType.getSymbolTable(t),r=p.FunctionType.createSynthesizedInstance("__get__",256);p.FunctionType.addParameter(r,{category:0,name:"self",type:p.AnyType.create(),hasDeclaredType:!0}),p.FunctionType.addParameter(r,{category:0,name:"obj",type:e.getNoneType(),hasDeclaredType:!0}),p.FunctionType.addParameter(r,{category:0,name:"objtype",type:p.AnyType.create(),hasDeclaredType:!0,hasDefault:!0,defaultType:p.AnyType.create()}),r.details.declaredReturnType=p.FunctionType.isClassMethod(n)?p.FunctionType.getSpecializedReturnType(n):t,r.details.declaration=n.details.declaration,r.details.deprecatedMessage=n.details.deprecatedMessage,r.details.typeVarScopeId=(0,c.getTypeVarScopeId)(n);const s=p.FunctionType.createSynthesizedInstance("__get__",256);p.FunctionType.addParameter(s,{category:0,name:"self",type:p.AnyType.create(),hasDeclaredType:!0});const i=n.details.parameters.length>0?n.details.parameters[0].type:p.AnyType.create();p.FunctionType.addParameter(s,{category:0,name:"obj",type:i,hasDeclaredType:!0}),p.FunctionType.addParameter(s,{category:0,name:"objtype",type:p.AnyType.create(),hasDeclaredType:!0,hasDefault:!0,defaultType:p.AnyType.create()}),s.details.declaredReturnType=p.FunctionType.getSpecializedReturnType(n),s.details.declaration=n.details.declaration,s.details.deprecatedMessage=n.details.deprecatedMessage,s.details.typeVarScopeId=(0,c.getTypeVarScopeId)(n);const o=p.OverloadedFunctionType.create([s,r]),d=l.Symbol.createWithType(4,o);a.set("__get__",d)}function u(e,t,n){const a=p.ClassType.getSymbolTable(t),r=p.FunctionType.createSynthesizedInstance("__set__");p.FunctionType.addParameter(r,{category:0,name:"self",type:p.AnyType.create(),hasDeclaredType:!0});let s=n.details.parameters.length>0?n.details.parameters[0].type:p.AnyType.create();(0,p.isTypeVar)(s)&&s.details.isSynthesizedSelf&&(s=e.makeTopLevelTypeVarsConcrete(s)),p.FunctionType.addParameter(r,{category:0,name:"obj",type:(0,p.combineTypes)([s,e.getNoneType()]),hasDeclaredType:!0}),r.details.declaredReturnType=e.getNoneType(),r.details.typeVarScopeId=(0,c.getTypeVarScopeId)(n),r.details.deprecatedMessage=n.details.deprecatedMessage;let i=p.UnknownType.create();n.details.parameters.length>=2&&0===n.details.parameters[1].category&&n.details.parameters[1].name&&(i=n.details.parameters[1].type),p.FunctionType.addParameter(r,{category:0,name:"value",type:i,hasDeclaredType:!0});const o=l.Symbol.createWithType(4,r);a.set("__set__",o)}function m(e,t,n){const a=p.ClassType.getSymbolTable(t),r=p.FunctionType.createSynthesizedInstance("__delete__");p.FunctionType.addParameter(r,{category:0,name:"self",type:p.AnyType.create(),hasDeclaredType:!0}),r.details.typeVarScopeId=(0,c.getTypeVarScopeId)(n),r.details.deprecatedMessage=n.details.deprecatedMessage;let s=n.details.parameters.length>0?n.details.parameters[0].type:p.AnyType.create();(0,p.isTypeVar)(s)&&s.details.isSynthesizedSelf&&(s=e.makeTopLevelTypeVarsConcrete(s)),p.FunctionType.addParameter(r,{category:0,name:"obj",type:(0,p.combineTypes)([s,e.getNoneType()]),hasDeclaredType:!0}),r.details.declaredReturnType=e.getNoneType();const i=l.Symbol.createWithType(4,r);a.set("__delete__",i)}function y(e,t){const n=t.fgetInfo;n&&(0,p.isFunction)(n.methodType)&&d(e,t,n.methodType);const a=t.fsetInfo;a&&(0,p.isFunction)(a.methodType)&&u(e,t,a.methodType);const r=t.fdelInfo;r&&(0,p.isFunction)(r.methodType)&&m(e,t,r.methodType)}function g(e){const t=p.ClassType.getSymbolTable(e);["getter","setter","deleter"].forEach((n=>{const a=p.FunctionType.createSynthesizedInstance(n);p.FunctionType.addParameter(a,{category:0,name:"self",type:p.AnyType.create(),hasDeclaredType:!0}),p.FunctionType.addParameter(a,{category:0,name:"accessor",type:p.AnyType.create(),hasDeclaredType:!0}),a.details.declaredReturnType=e;const r=l.Symbol.createWithType(4,a);t.set(n,r)}))}t.validatePropertyMethod=function(e,t,n){p.FunctionType.isStaticMethod(t)&&e.addDiagnostic(r.DiagnosticRule.reportGeneralTypeIssues,s.LocMessage.propertyStaticMethod(),n)},t.createProperty=function(e,t,n,a){const r=(0,i.getFileInfo)(t),s=e.getBuiltInType(t,"type"),l=p.ClassType.isBuiltIn(n,"property")?(0,o.getTypeSourceId)(t):n.details.typeSourceId,u=p.ClassType.createInstantiable(n.details.name,(0,o.getClassFullName)(t,r.moduleName,`__property_${a.details.name}`),r.moduleName,r.fileUri,4097,l,void 0,(0,p.isInstantiableClass)(s)?s:p.UnknownType.create());u.details.declaration=n.details.declaration,u.details.typeVarScopeId=n.details.typeVarScopeId;const m=e.getBuiltInType(t,"object");u.details.baseClasses.push((0,p.isInstantiableClass)(m)?m:p.UnknownType.create()),(0,c.computeMroLinearization)(u);const h=p.ClassType.getSymbolTable(u);p.ClassType.getSymbolTable(n).forEach(((e,t)=>{const n=["__get__","__set__","__delete__"];e.isIgnoredForProtocolMatch()||n.some((e=>e===t))||h.set(t,e)}));const f=p.ClassType.cloneAsInstance(u);return u.isAsymmetricDescriptor=!1,y(e,f),f.fgetInfo={methodType:p.FunctionType.cloneWithNewFlags(a,4|a.details.flags),classType:a.details.methodClass},p.FunctionType.isClassMethod(a)&&(u.details.flags|=8388608),d(e,f,a),g(f),f},t.clonePropertyWithSetter=function(e,t,n,l){if(!(0,c.isProperty)(t))return t;const d=t,m=d.details.flags;let h=!!d.isAsymmetricDescriptor;const f=(0,i.getFileInfo)(l);if(l.parameters.length>=2){const t=(0,o.getTypeAnnotationForParameter)(l,1);if(t){const n=e.getGetterTypeFromProperty(d,!1);if(n&&!(0,p.isAnyOrUnknown)(n)){const i=e.getTypeOfAnnotation(t,{associateTypeVarsWithScope:!0});if("none"!==f.diagnosticRuleSet.reportPropertyTypeMismatch){const o=new a.DiagnosticAddendum;e.assignType(n,i,o)||e.addDiagnostic(r.DiagnosticRule.reportPropertyTypeMismatch,s.LocMessage.setterGetterTypeMismatch()+o.getString(),t)}(0,p.isTypeSame)(n,i)||(h=!0)}}}const T=p.ClassType.createInstantiable(d.details.name,d.details.fullName,d.details.moduleName,(0,i.getFileInfo)(l).fileUri,m,d.details.typeSourceId,d.details.declaredMetaclass,d.details.effectiveMetaclass);T.details.declaration=d.details.declaration,T.details.typeVarScopeId=d.details.typeVarScopeId;const v=e.getBuiltInType(l,"object");T.details.baseClasses.push((0,p.isInstantiableClass)(v)?v:p.UnknownType.create()),(0,c.computeMroLinearization)(T),T.fgetInfo=d.fgetInfo,T.fdelInfo=d.fdelInfo,T.isAsymmetricDescriptor=h;const b=p.ClassType.cloneAsInstance(T),_=p.ClassType.getSymbolTable(T);return p.ClassType.getSymbolTable(d).forEach(((e,t)=>{e.isIgnoredForProtocolMatch()||_.set(t,e)})),y(e,b),b.fsetInfo={methodType:p.FunctionType.cloneWithNewFlags(n,4|n.details.flags),classType:n.details.methodClass},u(e,b,n),g(b),b},t.clonePropertyWithDeleter=function(e,t,n,a){var r;if(!(0,c.isProperty)(t))return t;const s=t,o=p.ClassType.createInstantiable(s.details.name,s.details.fullName,s.details.moduleName,(0,i.getFileInfo)(a).fileUri,s.details.flags,s.details.typeSourceId,s.details.declaredMetaclass,s.details.effectiveMetaclass);o.details.declaration=s.details.declaration,o.details.typeVarScopeId=s.details.typeVarScopeId;const l=e.getBuiltInType(a,"object");o.details.baseClasses.push((0,p.isInstantiableClass)(l)?l:p.UnknownType.create()),(0,c.computeMroLinearization)(o),o.fgetInfo=s.fgetInfo,o.fsetInfo=s.fsetInfo;const d=p.ClassType.cloneAsInstance(o);o.isAsymmetricDescriptor=null!==(r=s.isAsymmetricDescriptor)&&void 0!==r&&r;const u=p.ClassType.getSymbolTable(o);return p.ClassType.getSymbolTable(s).forEach(((e,t)=>{e.isIgnoredForProtocolMatch()||u.set(t,e)})),y(e,d),d.fdelInfo={methodType:p.FunctionType.cloneWithNewFlags(n,4|n.details.flags),classType:n.details.methodClass},m(e,d,n),g(d),d},t.assignProperty=function(e,t,n,a,r,i,o,l,d=0){const u=(0,p.isClass)(r)?p.ClassType.cloneAsInstance(r):void 0,m=p.ClassType.cloneAsInstance(a);let y=!0;return[{getFunction:e=>{var t;return null===(t=e.fgetInfo)||void 0===t?void 0:t.methodType},missingDiagMsg:s.LocAddendum.missingGetter,incompatibleDiagMsg:s.LocAddendum.incompatibleGetter},{getFunction:e=>{var t;return null===(t=e.fsetInfo)||void 0===t?void 0:t.methodType},missingDiagMsg:s.LocAddendum.missingSetter,incompatibleDiagMsg:s.LocAddendum.incompatibleSetter},{getFunction:e=>{var t;return null===(t=e.fdelInfo)||void 0===t?void 0:t.methodType},missingDiagMsg:s.LocAddendum.missingDeleter,incompatibleDiagMsg:s.LocAddendum.incompatibleDeleter}].forEach((a=>{let r=a.getFunction(t);if(r&&(0,p.isFunction)(r)){let t=a.getFunction(n);if(!t||!(0,p.isFunction)(t))return null==i||i.addMessage(a.missingDiagMsg()),void(y=!1);e.inferReturnTypeIfNecessary(t),e.inferReturnTypeIfNecessary(r),l&&(r=(0,c.applySolvedTypeVars)(r,l)),r=p.FunctionType.cloneWithNewFlags(r,-5&r.details.flags),t=p.FunctionType.cloneWithNewFlags(t,-5&t.details.flags);const s=e.bindFunctionToClassOrObject(m,r,void 0,void 0,void 0,null==i?void 0:i.createAddendum(),d),g=e.bindFunctionToClassOrObject(u,t,void 0,void 0,void 0,null==i?void 0:i.createAddendum(),d);s&&g&&e.assignType(s,g,i,o,void 0,0,d)||(y=!1)}})),y}},85636:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isProtocolUnsafeOverlap=t.isMethodOnlyProtocol=t.assignModuleToProtocol=t.assignClassToProtocol=void 0;const a=n(83181),r=n(95960),s=n(99868),i=n(50520),o=n(8e4),l=n(8312),p=n(808),c=n(97632),d=[],u=32;function m(e,t,n,d,u,m,y,g){var h;if(0!=(1&y))return(0,l.isTypeSame)(t,n);const f=(0,l.isClass)(n)&&l.TypeBase.isInstantiable(n),T=function(e,t,n){const a=new c.TypeVarContext((0,p.getTypeVarScopeId)(t));return t.details.typeParameters.forEach(((r,i)=>{const o=null==n?void 0:n.getPrimarySignature().getTypeVar(r);if(o)a.setTypeVarType(r,o.narrowBound,o.narrowBoundNoLiterals,o.wideBound);else if(t.typeArguments&&i<t.typeArguments.length){let o=t.typeArguments[i],l=2048,c=(0,p.requiresSpecialization)(o);c&&n&&(o=(0,p.applySolvedTypeVars)(o,n,{useNarrowBoundOnly:!0}),l=0,c=(0,p.requiresSpecialization)(o)),c||(0,s.assignTypeToTypeVar)(e,r,o,void 0,a,l)}})),a}(e,t,u),v=new c.TypeVarContext((0,p.getTypeVarScopeId)(t));let b;if((0,l.isClass)(n)&&(b=(null===(h=n.condition)||void 0===h?void 0:h.some((e=>e.typeVar.details.isSynthesizedSelf)))?(0,p.synthesizeTypeVarForSelfCls)(l.TypeBase.cloneForCondition(n,void 0),!1):n,(0,p.populateTypeVarContextForSelfType)(v,t,b)),(0,l.isClass)(n)&&l.ClassType.isTypedDictClass(n)){const t=e.getTypedDictClassType();t&&(0,l.isInstantiableClass)(t)&&(n=t)}let _=!0;const C=new Set;let I=48&y;if(I|=(0,p.containsLiteralType)(n,!0)?256:0,t.details.mro.forEach((s=>{(0,l.isInstantiableClass)(s)&&l.ClassType.isProtocolClass(s)&&(_||d)&&l.ClassType.getSymbolTable(s).forEach(((c,u)=>{var m;if(!_&&!d)return;if(!c.isClassMember()||c.isIgnoredForProtocolMatch()||C.has(u))return;let y,h,k=!1;if(!f&&"__class_getitem__"===u)return;if("__slots__"===u)return;C.add(u);let w,S=null===(m=e.getDeclaredTypeOfSymbol(c))||void 0===m?void 0:m.type;if(!S)return;let A=!1;if((0,l.isClass)(n)){if(f&&n.details.effectiveMetaclass&&(0,l.isInstantiableClass)(n.details.effectiveMetaclass)&&(y=(0,p.lookUpClassMember)(n.details.effectiveMetaclass,u),y&&(k=!0)),y||(y=(0,p.lookUpClassMember)(n,u)),!y)return null==d||d.addMessage(r.LocAddendum.protocolMemberMissing().format({name:u})),void(_=!1);if(h=y.symbol,l.ClassType.isSameGenericClass(s,t)||(S=(0,p.partiallySpecializeType)(S,s,b)),(0,l.isInstantiableClass)(y.classType)){const t=e.getEffectiveTypeOfSymbol(y.symbol);(0,l.isFunction)(t)&&e.inferReturnTypeIfNecessary(t),w=(0,p.partiallySpecializeType)(t,y.classType,b)}else w=l.UnknownType.create();if(((0,l.isFunction)(w)||(0,l.isOverloadedFunction)(w))&&(k||(0,l.isInstantiableClass)(y.classType))){let t=!y.symbol.isClassMember();if(l.ClassType.isDataClass(n)){l.ClassType.getDataClassEntries(n).some((e=>e.name===u))&&(t=!0)}if(k&&(t=!1),!t){const t=e.bindFunctionToClassOrObject(f&&!k?n:l.ClassType.cloneAsInstance(n),w,k?void 0:y.classType,void 0,k?n:b,null==d?void 0:d.createAddendum(),g);if(!t)return void(_=!1);w=(0,p.removeParamSpecVariadicsFromSignature)(t)}}(l.ClassType.isFrozenDataClass(n)||l.ClassType.isReadOnlyInstanceVariables(n))&&(A=!0)}else{if(h=n.fields.get(u),!h)return null==d||d.addMessage(r.LocAddendum.protocolMemberMissing().format({name:u})),void(_=!1);w=e.getEffectiveTypeOfSymbol(h)}if(S=(0,p.applySolvedTypeVars)(S,v),(0,l.isFunction)(S)||(0,l.isOverloadedFunction)(S)){let r;if((0,l.isClass)(n)?((0,a.assert)(y),(k||(0,l.isInstantiableClass)(y.classType))&&(r=e.bindFunctionToClassOrObject(l.ClassType.cloneAsInstance(n),S,k?void 0:y.classType,void 0,k?n:b,d,g))):r=e.bindFunctionToClassOrObject(l.ClassType.cloneAsInstance(t),S,t,void 0,void 0,d,g),!r)return void(_=!1);S=(0,p.removeParamSpecVariadicsFromSignature)(r)}const x=null==d?void 0:d.createAddendum();if((0,l.isClassInstance)(S)&&l.ClassType.isPropertyClass(S))if((0,l.isClassInstance)(w)&&l.ClassType.isPropertyClass(w)&&!f)(0,i.assignProperty)(e,l.ClassType.cloneAsInstantiable(S),l.ClassType.cloneAsInstantiable(w),s,n,null==x?void 0:x.createAddendum(),T,v,g)||(x&&x.addMessage(r.LocAddendum.memberTypeMismatch().format({name:u})),_=!1);else{let t=e.getGetterTypeFromProperty(S,!0);t&&(t=(0,p.partiallySpecializeType)(t,s)),t&&e.assignType(t,w,null==x?void 0:x.createAddendum(),T,void 0,I,g)||(x&&x.addMessage(r.LocAddendum.memberTypeMismatch().format({name:u})),_=!1),A&&(0,p.lookUpClassMember)(S,"__set__",16)&&(x&&x.addMessage(r.LocAddendum.memberIsWritableInProtocol().format({name:u})),_=!1)}else{const t=c.getDeclarations()[0],n=1===(null==t?void 0:t.type)&&!t.isFinal,a=T.clone();a.addSolveForScope((0,p.getTypeVarScopeId)(S)),e.assignType(S,w,null==x?void 0:x.createAddendum(),a,void 0,n?1|I:I,g)?T.copyFromClone(a):(x&&(n&&x.addMessage(r.LocAddendum.memberIsInvariant().format({name:u})),x.addMessage(r.LocAddendum.memberTypeMismatch().format({name:u}))),_=!1)}const P=c.getTypedDeclarations().some((e=>1===e.type&&!!e.isFinal));P!==h.getTypedDeclarations().some((e=>1===e.type&&!!e.isFinal))&&(P?x&&x.addMessage(r.LocAddendum.memberIsFinalInProtocol().format({name:u})):x&&x.addMessage(r.LocAddendum.memberIsNotFinalInProtocol().format({name:u})),_=!1);const N=(0,o.isEffectivelyClassVar)(c,!1),D=(0,o.isEffectivelyClassVar)(h,!1),F=h.getDeclarations().some((e=>1===e.type));f?N?(null==x||x.addMessage(r.LocAddendum.memberIsClassVarInProtocol().format({name:u})),_=!1):F&&!D&&(k||(null==x||x.addMessage(r.LocAddendum.memberIsNotClassVarInClass().format({name:u})),_=!1)):N!==D&&(N?null==x||x.addMessage(r.LocAddendum.memberIsClassVarInProtocol().format({name:u})):null==x||x.addMessage(r.LocAddendum.memberIsNotClassVarInProtocol().format({name:u})),_=!1);const E=(0,o.getLastTypedDeclarationForSymbol)(c),M=(0,o.getLastTypedDeclarationForSymbol)(h);if(1===(null==E?void 0:E.type)&&1===(null==M?void 0:M.type)){const e=!!E.isConstant;let t=!!M.isConstant;y&&(0,l.isClass)(y.classType)&&(l.ClassType.isReadOnlyInstanceVariables(y.classType)||l.ClassType.isFrozenDataClass(y.classType))&&(t=!0),!e&&t&&(x&&x.addMessage(r.LocAddendum.memberIsWritableInProtocol().format({name:u})),_=!1)}}))})),_&&t.details.typeParameters.length>0){const n=l.ClassType.cloneForSpecialization(t,void 0,!1),a=(0,p.applySolvedTypeVars)(n,T);if(t.typeArguments)e.assignTypeArguments(t,a,d,u,m,y,g)||(_=!1);else if(u&&!u.isLocked())for(const e of t.details.typeParameters){const t=T.getPrimarySignature().getTypeVar(e);t&&u.setTypeVarType(e,null==t?void 0:t.narrowBound,null==t?void 0:t.narrowBoundNoLiterals,null==t?void 0:t.wideBound)}}return _}t.assignClassToProtocol=function(e,t,n,r,s,i,o,p){(0,a.assert)((0,l.isInstantiableClass)(t)&&l.ClassType.isProtocolClass(t));const c=0!=(1&o);if(d.some((e=>(0,l.isTypeSame)(e.srcType,n)&&(0,l.isTypeSame)(e.destType,t))))return!c;if(!c){const e=function(e,t,n,a){const r=t.details.protocolCompatibility,s=null==r?void 0:r.get(e.details.fullName);if(void 0===s)return;const i=s.find((r=>(0,l.isTypeSame)(r.destType,e)&&(0,l.isTypeSame)(r.srcType,t)&&r.flags===n&&function(e,t){if(!e||!t)return e===t;return e.isSame(t)}(a,r.typeVarContext)));return null==i?void 0:i.isCompatible}(t,n,o,s);if(void 0!==e){if(e&&(!s||0===t.details.typeParameters.length))return!0;if(!e&&!r)return!1}}d.push({srcType:n,destType:t});let y=!0;const g=null==s?void 0:s.clone();try{y=m(e,t,n,r,s,i,o,p)}catch(e){throw d.pop(),e}return d.pop(),function(e,t,n,a,r){let s=t.details.protocolCompatibility;s||(s=new Map,t.details.protocolCompatibility=s);let i=s.get(e.details.fullName);i||(i=[],s.set(e.details.fullName,i));i.push({destType:e,srcType:t,flags:n,typeVarContext:a,isCompatible:r}),i.length>u&&i.shift()}(t,n,o,g,y),y},t.assignModuleToProtocol=function(e,t,n,a,r,s,i){return m(e,t,n,a,r,void 0,s,i)},t.isMethodOnlyProtocol=function e(t){if(!l.ClassType.isProtocolClass(t))return!1;for(const n of t.details.baseClasses)if((0,l.isClass)(n)&&l.ClassType.isProtocolClass(n)&&!e(n))return!1;for(const[,e]of l.ClassType.getSymbolTable(t))if(!e.isIgnoredForProtocolMatch()&&e.getDeclarations().some((e=>5!==e.type)))return!1;return!0},t.isProtocolUnsafeOverlap=function(e,t,n){if(e.assignType(t,n))return!1;let a=!0;return t.details.mro.forEach((e=>{a&&(0,l.isInstantiableClass)(e)&&l.ClassType.isProtocolClass(e)&&l.ClassType.getSymbolTable(e).forEach(((e,t)=>{if(!a||!e.isClassMember()||e.isIgnoredForProtocolMatch())return;(0,p.lookUpClassMember)(n,t)||(a=!1)}))})),a}},65940:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getPyTypedInfoForPyTypedFile=t.getPyTypedInfo=void 0;const a=n(80636);function r(e,t){let n=!1;const a=e.statSync(t);if(a.size>0&&a.size<65536){const a=e.readFileSync(t,"utf8");(a.match(/partial\n/)||a.match(/partial\r\n/))&&(n=!0)}return{pyTypedPath:t,isPartiallyTyped:n}}t.getPyTypedInfo=function(e,t){if(!e.existsSync(t)||!(0,a.isDirectory)(e,t))return;const n=t.pytypedUri;return e.existsSync(n)&&(0,a.isFile)(e,n)?r(e,n):void 0},t.getPyTypedInfoForPyTypedFile=r},58700:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.getPathsFromPthFiles=t.isPythonBinary=t.findPythonSearchPaths=t.getTypeshedSubdirectory=t.getTypeShedFallbackPath=t.thirdPartyFolderName=t.stdLibFolderName=void 0;const i=n(86016),o=s(n(93924)),l=n(80636);function p(e,t){const n=[];return e.readdirEntriesSync(t).filter((e=>(e.isFile()||e.isSymbolicLink())&&e.name.endsWith(".pth"))).sort(((e,t)=>(0,i.compareComparableValues)(e.name,t.name))).forEach((a=>{const r=e.realCasePath(t.combinePaths(a.name)),s=(0,l.tryStat)(e,r);if((null==s?void 0:s.isFile())&&s.size>0&&s.size<65536){e.readFileSync(r,"utf8").split(/\r?\n/).forEach((a=>{const r=a.trim();if(r.length>0&&!r.startsWith("#")&&!r.match(/^import\s/)){const a=t.combinePaths(r);e.existsSync(a)&&(0,l.isDirectory)(e,a)&&n.push(e.realCasePath(a))}}))}})),n}function c(e,t){return!e.some((e=>e.key===t.key))&&(e.push(t),!0)}t.stdLibFolderName="stdlib",t.thirdPartyFolderName="stubs",t.getTypeShedFallbackPath=function(e){const t=e.getModulePath();if(!t||t.isEmpty())return;const n=t.combinePaths(o.typeshedFallback);if(e.existsSync(n))return e.realCasePath(n);const a=t.getDirectory().combinePaths(o.typeshedFallback);return e.existsSync(a)?e.realCasePath(a):void 0},t.getTypeshedSubdirectory=function(e,n){return e.combinePaths(n?t.stdLibFolderName:t.thirdPartyFolderName)},t.findPythonSearchPaths=function(e,t,n,a,r,s){if(a.push("Finding python search paths"),void 0!==t.venvPath&&t.venv){const n=t.venv,r=t.venvPath.combinePaths(n),s=[],i=[];if([o.lib,o.lib64,o.libAlternate].forEach((n=>{const p=function(e,t,n,a){if(!e.existsSync(t))return void a.push(`Did not find '${t}'`);a.push(`Found path '${t}'; looking for ${o.sitePackages}`);const r=t.combinePaths(o.sitePackages);if(e.existsSync(r))return a.push(`Found path '${r}'`),r;a.push(`Did not find '${r}', so looking for python subdirectory`);const s=(0,l.getFileSystemEntries)(e,t),i=s.directories.filter((t=>{if(t.fileName.startsWith("python3.")){const n=t.combinePaths(o.sitePackages);return e.existsSync(n)}return!1}));if(n){const e=i.find((e=>e.fileName===`python${n.toMajorMinorString()}`));if(e){const t=e.combinePaths(o.sitePackages);return a.push(`Found path '${t}'`),t}}if(i.length>0){const e=i[0].combinePaths(o.sitePackages);return a.push(`Found path '${e}'`),e}return}(e,r.combinePaths(n),t.defaultPythonVersion,a);p&&(c(s,p),i.push(e.realCasePath(p)))})),i.forEach((t=>{p(e,t).forEach((e=>{c(s,e)}))})),s.length>0)return a.push(`Found the following '${o.sitePackages}' dirs`),s.forEach((e=>{a.push(`  ${e}`)})),s;a.push(`Did not find any '${o.sitePackages}' dirs. Falling back on python interpreter.`)}const i=n.getPythonSearchPaths(t.pythonPath,a);if(r&&s){return i.paths.filter((e=>!e.startsWith(s)||e.startsWith(i.prefix))).map((t=>e.realCasePath(t)))}return i.paths.map((t=>e.realCasePath(t)))},t.isPythonBinary=function(e){return"python"===(e=e.trim())||"python3"===e},t.getPathsFromPthFiles=p},32700:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Scope=void 0;const a=n(83181),r=n(52328);t.Scope=class{constructor(e,t,n){this.symbolTable=new Map,this.notLocalBindings=new Map,this.type=e,this.parent=t,this.proxy=n}getGlobalScope(){let e=this,t=!1;for(;e;){if(4===e.type||5===e.type)return{scope:e,isBeyondExecutionScope:t};2===e.type&&(t=!0),e=e.parent}return(0,a.fail)("failed to find scope"),{scope:this,isBeyondExecutionScope:t}}isIndependentlyExecutable(){return 4===this.type||2===this.type}lookUpSymbol(e){return this.symbolTable.get(e)}lookUpSymbolRecursive(e,t){let n,a=this.symbolTable.get(e);if(!a&&(null==t?void 0:t.useProxyScope)&&this.proxy&&(a=this.proxy.symbolTable.get(e)),a){if((null==t?void 0:t.isOutsideCallerModule)&&a.isExternallyHidden())return;const e=a.getDeclarations();if(0===e.length||e.some((e=>1!==e.type||!e.isDefinedByMemberAccess)))return{symbol:a,isOutsideCallerModule:!!(null==t?void 0:t.isOutsideCallerModule),isBeyondExecutionScope:!!(null==t?void 0:t.isBeyondExecutionScope),scope:this}}let r=(null==t?void 0:t.isBeyondExecutionScope)||this.isIndependentlyExecutable();if(1===this.notLocalBindings.get(e)){const e=this.getGlobalScope();e.scope!==this&&(n=e.scope,e.isBeyondExecutionScope&&(r=!0))}else n=this.parent;if(n)return n.lookUpSymbolRecursive(e,{isOutsideCallerModule:!!(null==t?void 0:t.isOutsideCallerModule)||4===this.type,isBeyondExecutionScope:r})}addSymbol(e,t){const n=new r.Symbol(t);return this.symbolTable.set(e,n),n}getBindingType(e){return this.notLocalBindings.get(e)}setBindingType(e,t){return this.notLocalBindings.set(e,t)}setSlotsNames(e){this.slotsNames=e}getSlotsNames(){return this.slotsNames}}},69160:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isScopeContainedWithin=t.findTopNodeInScope=t.getScopeHierarchy=t.getScopeForNode=t.getBuiltInScope=void 0;const a=n(9316),r=n(28340);t.getBuiltInScope=function(e){let t=e;for(;5!==t.type;)t=t.parent;return t},t.getScopeForNode=function(e){const t=(0,r.getEvaluationScopeNode)(e).node;return(0,a.getScope)(t)},t.getScopeHierarchy=function(e,t){const n=[];let s=e;for(;s;){const e=(0,r.getEvaluationScopeNode)(s).node,i=(0,a.getScope)(e);if(!i)return;if(0!==n.length&&n[n.length-1]===i||n.push(i),i===t)return n;s=e.parent}return t?void 0:n},t.findTopNodeInScope=function(e,t){let n,r=e,s=!1;for(;r;){if((0,a.getScope)(r)===t)s=!0;else if(s)return n;n=r,r=r.parent}},t.isScopeContainedWithin=function(e,t){let n=e;for(;n;){if(n.parent===t)return!0;n=n.parent}return!1}},19016:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.AnalyzerService=t.getNextServiceId=t.pyprojectTomlName=t.configFileNames=void 0;const i=s(n(39496)),o=s(n(72050)),l=n(64704),p=n(55484),c=n(57508),d=n(86016),u=n(48984),m=n(33348),y=n(93924),g=n(11699),h=n(37636),f=n(6216),T=n(55084),v=n(80636),b=n(95156),_=n(29332),C=n(58700),I=n(41500);t.configFileNames=["pyrightconfig.json"],t.pyprojectTomlName="pyproject.toml";const k=(0,g.normalizeSlashes)("/.git/");let w=1;function S(e){return`${e}_${w++}`}t.getNextServiceId=S;class A{constructor(e,t,n){var a,r,s,i,o;this._typeStubTargetIsSingleFile=!1,this._requireTrackedFileUpdate=!0,this._lastUserInteractionTime=Date.now(),this._disposed=!1,this._pendingLibraryChanges={changesOnly:!0},this._instanceName=e,this._executionRootUri=T.Uri.empty(),this._options=n,this._options.serviceId=null!==(a=this._options.serviceId)&&void 0!==a?a:S(e),this._options.console=n.console||new c.StandardConsole,this._serviceProvider=t.clone(),this._options.console&&this._serviceProvider.add(h.ServiceKeys.console,this._options.console),this._options.fileSystem&&this._serviceProvider.add(h.ServiceKeys.fs,this._options.fileSystem),this._options.importResolverFactory=null!==(r=n.importResolverFactory)&&void 0!==r?r:A.createImportResolver,this._options.cancellationProvider=null!==(s=n.cancellationProvider)&&void 0!==s?s:new l.DefaultCancellationProvider,this._options.hostFactory=null!==(i=n.hostFactory)&&void 0!==i?i:()=>new m.NoAccessHost,this._options.configOptions=null!==(o=n.configOptions)&&void 0!==o?o:new p.ConfigOptions(T.Uri.file(process.cwd(),this._serviceProvider));const d=this._options.importResolverFactory(this._serviceProvider,this._options.configOptions,this._options.hostFactory());this._backgroundAnalysisProgram=void 0!==this._options.backgroundAnalysisProgramFactory?this._options.backgroundAnalysisProgramFactory(this._options.serviceId,this._serviceProvider,this._options.configOptions,d,this._options.backgroundAnalysis,this._options.maxAnalysisTime):new b.BackgroundAnalysisProgram(this._options.serviceId,this._serviceProvider,this._options.configOptions,d,this._options.backgroundAnalysis,this._options.maxAnalysisTime,void 0)}get fs(){return this._backgroundAnalysisProgram.importResolver.fileSystem}get serviceProvider(){return this._serviceProvider}get cancellationProvider(){return this._options.cancellationProvider}get librarySearchUrisToWatch(){return this._librarySearchUrisToWatch}get backgroundAnalysisProgram(){return this._backgroundAnalysisProgram}get test_program(){return this._program}get id(){return this._options.serviceId}clone(e,t,n,a){var r;const s=new A(e,this._serviceProvider,{...this._options,serviceId:t,backgroundAnalysis:n,skipScanningUserFiles:!0,fileSystem:a}),i=this.getUserFiles();s.backgroundAnalysisProgram.setTrackedFiles(i),s.backgroundAnalysisProgram.markAllFilesDirty(!0);for(const e of this.backgroundAnalysisProgram.program.getOpened()){const t=e.sourceFile.getClientVersion();void 0!==t&&s.setFileOpened(e.sourceFile.getUri(),t,e.sourceFile.getOpenFileContents(),e.sourceFile.getIPythonMode(),null===(r=e.chainedSourceFile)||void 0===r?void 0:r.sourceFile.getUri())}return s}runEditMode(e,t){let n=[];this._backgroundAnalysisProgram.enterEditMode();try{this._program.runEditMode(e,t)}finally{n=this._backgroundAnalysisProgram.exitEditMode()}return t.isCancellationRequested?[]:n}dispose(){this._disposed||this._backgroundAnalysisProgram.dispose(),this._disposed=!0,this._removeSourceFileWatchers(),this._removeConfigFileWatcher(),this._removeLibraryFileWatcher(),this._clearReloadConfigTimer(),this._clearReanalysisTimer(),this._clearLibraryReanalysisTimer()}static createImportResolver(e,t,n){return new _.ImportResolver(e,t,n)}setCompletionCallback(e){this._onCompletionCallback=e,this._backgroundAnalysisProgram.setCompletionCallback(e)}setOptions(e){this._commandLineOptions=e;const t=this._hostFactory(),n=this._getConfigOptions(t,e);n.pythonPath&&n.ensureDefaultPythonVersion(t,this._console),n.ensureDefaultPythonPlatform(t,this._console),this._backgroundAnalysisProgram.setConfigOptions(n),this._executionRootUri=n.projectRoot,this._applyConfigOptions(t)}hasSourceFile(e){return this.backgroundAnalysisProgram.hasSourceFile(e)}isTracked(e){return this._program.owns(e)}getUserFiles(){return this._program.getUserFiles().map((e=>e.sourceFile.getUri()))}getOpenFiles(){return this._program.getOpened().map((e=>e.sourceFile.getUri()))}setFileOpened(e,t,n,a=I.IPythonMode.None,r){this._backgroundAnalysisProgram.setFileOpened(e,t,n,{isTracked:this.isTracked(e)||a!==I.IPythonMode.None,ipythonMode:a,chainedFileUri:r}),this._scheduleReanalysis(!1)}getChainedUri(e){return this._backgroundAnalysisProgram.getChainedUri(e)}updateChainedUri(e,t){this._backgroundAnalysisProgram.updateChainedUri(e,t),this._scheduleReanalysis(!1)}updateOpenFileContents(e,t,n,a=I.IPythonMode.None){this._backgroundAnalysisProgram.updateOpenFileContents(e,t,n,{isTracked:this.isTracked(e),ipythonMode:a,chainedFileUri:void 0}),this._scheduleReanalysis(!1)}setFileClosed(e,t){this._backgroundAnalysisProgram.setFileClosed(e,t),this._scheduleReanalysis(!1)}addInterimFile(e){this._backgroundAnalysisProgram.addInterimFile(e)}getParserOutput(e){return this._program.getParserOutput(e)}getParseResults(e){return this._program.getParseResults(e)}getSourceFile(e){return this._program.getBoundSourceFile(e)}getTextOnRange(e,t,n){return this._program.getTextOnRange(e,t,n)}run(e,t){return this._program.run(e,t)}printStats(){this._console.info(""),this._console.info("Analysis stats");const e=this._program.getFileCount(!1);this._console.info("Total files parsed and bound: "+e.toString());const t=this._program.getUserFileCount();this._console.info("Total files checked: "+t.toString())}printDetailedAnalysisTimes(){this._program.printDetailedAnalysisTimes()}printDependencies(e){this._program.printDependencies(this._executionRootUri,e)}analyzeFile(e,t){return this._backgroundAnalysisProgram.analyzeFile(e,t)}getDiagnosticsForRange(e,t,n){return this._backgroundAnalysisProgram.getDiagnosticsForRange(e,t,n)}getConfigOptions(){return this._configOptions}getImportResolver(){return this._backgroundAnalysisProgram.importResolver}recordUserInteractionTime(){this._lastUserInteractionTime=Date.now(),this._analyzeTimer&&this._scheduleReanalysis(!1)}test_getConfigOptions(e){return this._getConfigOptions(this._backgroundAnalysisProgram.host,e)}test_getFileNamesFromFileSpecs(){return this._getFileNamesFromFileSpecs()}test_shouldHandleSourceFileWatchChanges(e,t){return this._shouldHandleSourceFileWatchChanges(e,t)}test_shouldHandleLibraryFileWatchChanges(e,t){return this._shouldHandleLibraryFileWatchChanges(e,t)}writeTypeStub(e){var t;const n=this._getTypeStubFolder();this._program.writeTypeStub(null!==(t=this._typeStubTargetUri)&&void 0!==t?t:T.Uri.empty(),this._typeStubTargetIsSingleFile,n,e)}writeTypeStubInBackground(e){var t;const n=this._getTypeStubFolder();return this._backgroundAnalysisProgram.writeTypeStub(null!==(t=this._typeStubTargetUri)&&void 0!==t?t:T.Uri.empty(),this._typeStubTargetIsSingleFile,n,e)}invalidateAndForceReanalysis(e){this._backgroundAnalysisProgram.invalidateAndForceReanalysis(e)}restart(){this._applyConfigOptions(this._hostFactory()),this._backgroundAnalysisProgram.restart()}get _console(){return this._options.console}get _hostFactory(){return this._options.hostFactory}get _importResolverFactory(){return this._options.importResolverFactory}get _program(){return this._backgroundAnalysisProgram.program}get _configOptions(){return this._backgroundAnalysisProgram.configOptions}get _watchForSourceChanges(){var e;return!!(null===(e=this._commandLineOptions)||void 0===e?void 0:e.watchForSourceChanges)}get _watchForLibraryChanges(){var e;return!!(null===(e=this._commandLineOptions)||void 0===e?void 0:e.watchForLibraryChanges)&&!!this._options.libraryReanalysisTimeProvider}get _watchForConfigChanges(){var e;return!!(null===(e=this._commandLineOptions)||void 0===e?void 0:e.watchForConfigChanges)}get _typeCheckingMode(){var e;return null===(e=this._commandLineOptions)||void 0===e?void 0:e.typeCheckingMode}get _verboseOutput(){return!!this._configOptions.verboseOutput}get _typeStubTargetImportName(){var e;return null===(e=this._commandLineOptions)||void 0===e?void 0:e.typeStubTargetImportName}_getConfigOptions(e,t){var n,a,r;const s=t.executionRoot,i=T.Uri.is(s)?s:(0,d.isString)(s)?T.Uri.file(s,this.serviceProvider,!0):T.Uri.defaultWorkspace(this.serviceProvider),o=this.fs.realCasePath(i);let l,c,u=o;t.configFilePath?(l=this.fs.realCasePath((0,g.isRootedDiskPath)(t.configFilePath)?T.Uri.file(t.configFilePath,this.serviceProvider,!0):u.resolvePaths(t.configFilePath)),this.fs.existsSync(l)?l.lastExtension.endsWith(".json")?u=l.getDirectory():(u=l,l=this._findConfigFile(l),l||this._console.info(`Configuration file not found at ${u.toUserVisibleString()}.`)):(this._console.info(`Configuration file not found at ${l.toUserVisibleString()}.`),l=u)):t.executionRoot&&(l=this._findConfigFile(u),l||t.fromVsCodeExtension||(l=this._findConfigFileHereOrUp(u)),l?u=l.getDirectory():(this._console.log("No configuration file found."),l=void 0)),l||(c=this._findPyprojectTomlFile(u),c||t.fromVsCodeExtension||(c=this._findPyprojectTomlFileHereOrUp(u)),c?(u=c.getDirectory(),this._console.log(`pyproject.toml file found at ${u.toUserVisibleString()}.`)):this._console.log("No pyproject.toml file found."));const m=new p.ConfigOptions(u,this._typeCheckingMode),h=["**/node_modules","**/__pycache__","**/.*"];let f;if(t.pythonPath&&(this._console.info(`Setting pythonPath for service "${this._instanceName}": "${t.pythonPath}"`),m.pythonPath=this.fs.realCasePath(T.Uri.file(t.pythonPath,this.serviceProvider,!0))),t.pythonEnvironmentName&&(this._console.info(`Setting environmentName for service "${this._instanceName}": "${t.pythonEnvironmentName}"`),m.pythonEnvironmentName=t.pythonEnvironmentName),m.defaultPythonPlatform=t.pythonPlatform,m.defaultPythonVersion=t.pythonVersion,m.ensureDefaultExtraPaths(this.fs,null!==(n=t.autoSearchPaths)&&void 0!==n&&n,t.extraPaths),t.includeFileSpecs.length>0&&t.includeFileSpecs.forEach((e=>{m.include.push((0,v.getFileSpec)(u,e))})),t.excludeFileSpecs.length>0&&t.excludeFileSpecs.forEach((e=>{m.exclude.push((0,v.getFileSpec)(u,e))})),t.ignoreFileSpecs.length>0&&t.ignoreFileSpecs.forEach((e=>{m.ignore.push((0,v.getFileSpec)(u,e))})),!l&&t.executionRoot&&(0===t.includeFileSpecs.length&&m.include.push((0,v.getFileSpec)(o,".")),0===t.excludeFileSpecs.length&&h.forEach((e=>{m.exclude.push((0,v.getFileSpec)(o,e))}))),this._configFileUri=l||c,m.disableTaggedHints=!!t.disableTaggedHints,l?(this._console.info(`Loading configuration file at ${l.toUserVisibleString()}`),f=this._parseJsonConfigFile(l)):c&&(this._console.info(`Loading pyproject.toml file at ${c.toUserVisibleString()}`),f=this._parsePyprojectTomlFile(c)),f){m.initializeFromJson(f,this._typeCheckingMode,this.serviceProvider,e,t);const n=this._configFileUri.getDirectory();0===m.include.length&&(this._console.info(`No include entries specified; assuming ${n.toUserVisibleString()}`),m.include.push((0,v.getFileSpec)(n,"."))),0===m.exclude.length&&(h.forEach((e=>{this._console.info(`Auto-excluding ${e}`),m.exclude.push((0,v.getFileSpec)(n,e))})),void 0===m.autoExcludeVenv&&(m.autoExcludeVenv=!0))}else m.autoExcludeVenv=!0,m.applyDiagnosticOverrides(t.diagnosticSeverityOverrides);void 0!==t.analyzeUnannotatedFunctions&&(m.diagnosticRuleSet.analyzeUnannotatedFunctions=t.analyzeUnannotatedFunctions),t.includeFileSpecsOverride&&(m.include=[],t.includeFileSpecsOverride.forEach((e=>{m.include.push((0,v.getFileSpec)(T.Uri.file(e,this.serviceProvider,!0),"."))})));const b=(e,n)=>{const a=t.fromVsCodeExtension?"the client settings":"a command-line option";this._console.warn(`The ${e} has been specified in both the config file and ${a}. The value in the config file (${n}) will take precedence`)};if(t.venvPath&&(m.venvPath?b("venvPath",m.venvPath.toUserVisibleString()):m.venvPath=u.resolvePaths(t.venvPath)),t.typeshedPath&&(m.typeshedPath?b("typeshedPath",m.typeshedPath.toUserVisibleString()):m.typeshedPath=u.resolvePaths(t.typeshedPath)),m.typeshedPath&&m.typeshedPath===u&&void 0!==m.defaultPythonVersion){const e=this.getImportResolver().getTypeshedStdlibExcludeList(m.typeshedPath,m.defaultPythonVersion,m.defaultPythonPlatform);this._console.info("Excluding typeshed stdlib stubs according to VERSIONS file:"),e.forEach((e=>{this._console.info(`    ${e}`),m.exclude.push((0,v.getFileSpec)(o,e.getFilePath()))}))}if(m.verboseOutput=null!==(a=t.verboseOutput)&&void 0!==a?a:m.verboseOutput,m.checkOnlyOpenFiles=!!t.checkOnlyOpenFiles,m.autoImportCompletions=!!t.autoImportCompletions,m.indexing=!!t.indexing,m.taskListTokens=t.taskListTokens,m.logTypeEvaluationTime=!!t.logTypeEvaluationTime,m.typeEvaluationTimeThreshold=t.typeEvaluationTimeThreshold,void 0===m.useLibraryCodeForTypes?m.useLibraryCodeForTypes=t.useLibraryCodeForTypes:void 0!==t.useLibraryCodeForTypes&&b("useLibraryCodeForTypes",m.useLibraryCodeForTypes),void 0===m.useLibraryCodeForTypes&&(m.useLibraryCodeForTypes=!0),t.stubPath&&(m.stubPath?b("stubPath",m.stubPath.toUserVisibleString()):m.stubPath=this.fs.realCasePath(u.resolvePaths(t.stubPath))),m.stubPath?this.fs.existsSync(m.stubPath)&&(0,v.isDirectory)(this.fs,m.stubPath)||this._console.warn(`stubPath ${m.stubPath} is not a valid directory.`):m.stubPath=m.projectRoot.resolvePaths(y.defaultStubsDirectory),m.venvPath&&(this.fs.existsSync(m.venvPath)&&(0,v.isDirectory)(this.fs,m.venvPath)||this._console.error(`venvPath ${m.venvPath.toUserVisibleString()} is not a valid directory.`),m.venv=null!==(r=m.venv)&&void 0!==r?r:this._configOptions.venv,m.venv&&m.venvPath)){const t=m.venvPath.resolvePaths(m.venv);if(this.fs.existsSync(t)&&(0,v.isDirectory)(this.fs,t)){const t=[];void 0===(0,C.findPythonSearchPaths)(this.fs,m,e,t)&&(this._console.error(`site-packages directory cannot be located for venvPath ${m.venvPath.toUserVisibleString()} and venv ${m.venv}.`),m.verboseOutput&&t.forEach((e=>{this._console.error(`  ${e}`)})))}else this._console.error(`venv ${m.venv} subdirectory not found in venv path ${m.venvPath.toUserVisibleString()}.`)}return m.venv&&(m.venvPath||this._console.warn("venvPath not specified, so venv settings will be ignored.")),m.typeshedPath&&(this.fs.existsSync(m.typeshedPath)&&(0,v.isDirectory)(this.fs,m.typeshedPath)||this._console.error(`typeshedPath ${m.typeshedPath.toUserVisibleString()} is not a valid directory.`)),m}_getTypeStubFolder(){var e;const t=null!==(e=this._configOptions.stubPath)&&void 0!==e?e:this.fs.realCasePath(this._configOptions.projectRoot.resolvePaths(y.defaultStubsDirectory));if(!this._typeStubTargetUri||!this._typeStubTargetImportName){const e=`Import '${this._typeStubTargetImportName}' could not be resolved`;throw this._console.error(e),new Error(e)}const n=this._typeStubTargetImportName.split(".");if(0===n[0].length){const e=`Import '${this._typeStubTargetImportName}' could not be resolved`;throw this._console.error(e),new Error(e)}try{this.fs.existsSync(t)||this.fs.mkdirSync(t)}catch(e){const n=`Could not create typings directory '${t.toUserVisibleString()}'`;throw this._console.error(n),new Error(n)}const a=t.resolvePaths(n[0]),r=t.resolvePaths(...n);try{this.fs.existsSync(r)||(0,v.makeDirectories)(this.fs,r,t)}catch(e){const t=`Could not create typings subdirectory '${r.toUserVisibleString()}'`;throw this._console.error(t),new Error(t)}return a}_findConfigFileHereOrUp(e){return(0,v.forEachAncestorDirectory)(e,(e=>this._findConfigFile(e)))}_findConfigFile(e){for(const n of t.configFileNames){const t=e.resolvePaths(n);if(this.fs.existsSync(t))return this.fs.realCasePath(t)}}_findPyprojectTomlFileHereOrUp(e){return(0,v.forEachAncestorDirectory)(e,(e=>this._findPyprojectTomlFile(e)))}_findPyprojectTomlFile(e){const n=e.resolvePaths(t.pyprojectTomlName);if(this.fs.existsSync(n))return this.fs.realCasePath(n)}_parseJsonConfigFile(e){return this._attemptParseFile(e,(e=>{const t=[],n=o.parse(e,t,{allowTrailingComma:!0});if(t.length>0)throw new Error("Errors parsing JSON file");return n}))}_parsePyprojectTomlFile(e){return this._attemptParseFile(e,((t,n)=>{try{const e=i.parse(t);if(e&&e.tool&&e.tool.pyright)return e.tool.pyright}catch(e){throw this._console.error(`Pyproject file parse attempt ${n} error: ${JSON.stringify(e)}`),e}this._console.info(`Pyproject file "${e.toUserVisibleString()}" has no "[tool.pyright]" section.`)}))}_attemptParseFile(e,t){let n="",a=0;for(;;){try{n=this.fs.readFileSync(e,"utf8")}catch{return this._console.error(`Config file "${e.toUserVisibleString()}" could not be read.`),void this._reportConfigParseError()}let r=!1;try{return t(n,a+1)}catch(e){r=!0}if(!r)break;if(a++>=5)return this._console.error(`Config file "${e.toUserVisibleString()}" could not be parsed. Verify that format is correct.`),void this._reportConfigParseError()}}_getFileNamesFromFileSpecs(){const e=new Map;return f.timingStats.findFilesTime.timeOperation((()=>{const t=this._matchFiles(this._configOptions.include,this._configOptions.exclude);for(const n of t)e.set(n.key,n)})),this._backgroundAnalysisProgram.program.getOpened().map((e=>e.sourceFile.getUri())).filter((e=>(0,p.matchFileSpecs)(this._program.configOptions,e))).forEach((t=>e.set(t.key,t))),Array.from(e.values())}_updateTrackedFileList(e){if(this._typeStubTargetImportName){const e=this._configOptions.findExecEnvironment(this._executionRootUri),t=(0,_.createImportedModuleDescriptor)(this._typeStubTargetImportName),n=this._backgroundAnalysisProgram.importResolver.resolveImport(T.Uri.empty(),e,t);if(n.isImportFound){const e=[],t=n.resolvedUris[n.resolvedUris.length-1],a=(0,v.isFile)(this.fs,t),r=a&&"__init__"===t.stripAllExtensions().fileName;let s=t;a&&(s=s.getDirectory());for(let e=n.resolvedUris.length-2;e>=0;e--)s=n.resolvedUris[e].isEmpty()?s.getDirectory():n.resolvedUris[e];(0,v.isDirectory)(this.fs,s)?this._typeStubTargetUri=s:(0,v.isFile)(this.fs,s)&&(this._typeStubTargetUri=s.getDirectory()),t?(e.push(t),this._typeStubTargetIsSingleFile=1===n.resolvedUris.length&&!r):this._typeStubTargetIsSingleFile=!1,n.filteredImplicitImports.forEach((t=>{_.ImportResolver.isSupportedImportSourceFile(t.uri)&&e.push(t.uri)})),this._backgroundAnalysisProgram.setAllowedThirdPartyImports([this._typeStubTargetImportName]),this._backgroundAnalysisProgram.setTrackedFiles(e)}else this._console.error(`Import '${this._typeStubTargetImportName}' not found`)}else if(!this._options.skipScanningUserFiles){let t=[];this._console.log("Searching for source files"),t=this._getFileNamesFromFileSpecs(),this._backgroundAnalysisProgram.setConfigOptions(this._configOptions),this._backgroundAnalysisProgram.setTrackedFiles(t),this._backgroundAnalysisProgram.markAllFilesDirty(e),0===t.length?this._console.info("No source files found."):this._console.info(`Found ${t.length} source `+(1===t.length?"file":"files"))}this._requireTrackedFileUpdate=!1}_matchFiles(e,t){const n=[["bin","activate"],["Scripts","activate"],["pyvenv.cfg"],["conda-meta"]],a=[],r=Date.now();let s=!1;const i=(e,i,o)=>{if(!s){.001*(Date.now()-r)>=10&&(this._console.error('Enumeration of workspace source files is taking longer than 10 seconds.\nThis may be because:\n* You have opened your home directory or entire hard drive as a workspace\n* Your workspace contains a very large number of directories and files\n* Your workspace contains a symlink to a directory with many files\n* Your workspace is remote, and file enumeration is slow\nTo reduce this time, open a workspace directory with fewer files or add a pyrightconfig.json configuration file with an "exclude" section to exclude subdirectories from your workspace. For more details, refer to https://github.com/microsoft/pyright/blob/main/docs/configuration.md.'),s=!0)}if(this._configOptions.autoExcludeVenv&&n.some((t=>this.fs.existsSync(e.resolvePaths(...t)))))return v.FileSpec.isInPath(e,t)||t.push((0,v.getFileSpec)(this._configOptions.projectRoot,`${e}/**`)),void this._console.info(`Auto-excluding ${e.toUserVisibleString()}`);const{files:p,directories:c}=(0,v.getFileSystemEntries)(this.fs,e);for(const e of p)v.FileSpec.matchIncludeFileSpec(i,t,e)&&a.push(e);for(const e of c)(e.matchesRegex(i)||o)&&(v.FileSpec.isInPath(e,t)||l(e,i,o))},o=new Set,l=(e,t,n)=>{const a=(0,v.tryRealpath)(this.fs,e);if(a)if(o.has(a.key))this._console.warn(`Skipping recursive symlink "${e}" -> "${a}"`);else{o.add(a.key);try{i(e,t,n)}finally{o.delete(a.key)}}else this._console.warn(`Skipping broken link "${e}"`)};return e.forEach((e=>{if(!v.FileSpec.isInPath(e.wildcardRoot,t)){let t=!1;const n=(0,v.tryStat)(this.fs,e.wildcardRoot);(null==n?void 0:n.isFile())?(a.push(e.wildcardRoot),t=!0):(null==n?void 0:n.isDirectory())&&(l(e.wildcardRoot,e.regExp,e.hasDirectoryWildcard),t=!0),t||this._console.error(`File or directory "${e.wildcardRoot.toUserVisibleString()}" does not exist.`)}})),a}_removeSourceFileWatchers(){this._sourceFileWatcher&&(this._sourceFileWatcher.close(),this._sourceFileWatcher=void 0)}_updateSourceFileWatchers(){if(this._removeSourceFileWatchers(),this._watchForSourceChanges&&this._configOptions.include.length>0){const e=this._configOptions.include.map((e=>e.wildcardRoot));try{this._verboseOutput&&this._console.info(`Adding fs watcher for directories:\n ${e.join("\n")}`);const t=(0,u.ignoredWatchEventFunction)(e.map((e=>e.getFilePath())));this._sourceFileWatcher=this.fs.createFileSystemWatcher(e,((e,n)=>{if(!n)return;if(this._verboseOutput&&this._console.info(`SourceFile: Received fs event '${e}' for path '${n}'`),t(n))return;if(n.endsWith(".tmp")||n.endsWith(".git")||n.includes(k))return;let a=T.Uri.file(n,this.serviceProvider,!0);a=this.fs.realCasePath(a);const r=function(e,t,n,a,r){const s=(0,v.tryStat)(e,r);if("add"===a){if(!s)return;return{event:a,isFile:s.isFile()}}if("change"===a){if(!s){const e=!!n.getSourceFile(r);if(!e&&!n.containsSourceFileIn(r))return;return{event:"unlink",isFile:e}}return{event:a,isFile:s.isFile()}}return void t.warn(`Received unknown file change event: '${a}' for '${r}'`)}(this.fs,this._console,this._program,e,a);if(r&&this._shouldHandleSourceFileWatchChanges(a,r.isFile)){if(r.isFile&&"change"===r.event)return this._backgroundAnalysisProgram.markFilesDirty([a],!1),void this._scheduleReanalysis(!1);this.invalidateAndForceReanalysis(b.InvalidatedReason.SourceWatcherChanged),this._scheduleReanalysis(!0)}}))}catch{this._console.error(`Exception caught when installing fs watcher for:\n ${e.map((e=>e.toUserVisibleString())).join("\n")}`)}}}_shouldHandleSourceFileWatchChanges(e,t){if(t)return!(!(0,v.hasPythonExtension)(e)||function(e){const t=e.fileName,n=t.split(".");if(4===n.length&&n[3]===n[1]&&32===n[2].length)return!0;return!1}(e))&&!(!this.isTracked(e)&&!this._program.getSourceFileInfo(e));if(!(0,p.matchFileSpecs)(this._program.configOptions,e,!1))return!1;const n=e.getDirectory();return!!(n.startsWith(this._configOptions.projectRoot)&&(this.fs.existsSync(n.initPyUri)||this.fs.existsSync(n.initPyiUri))||this._program.containsSourceFileIn(e))}_removeLibraryFileWatcher(){this._libraryFileWatcher&&(this._libraryFileWatcher.close(),this._libraryFileWatcher=void 0)}_updateLibraryFileWatcher(){if(this._removeLibraryFileWatcher(),!this._watchForLibraryChanges)return void(this._librarySearchUrisToWatch=void 0);this._librarySearchUrisToWatch=(0,C.findPythonSearchPaths)(this.fs,this._backgroundAnalysisProgram.configOptions,this._backgroundAnalysisProgram.host,[],!0,this._executionRootUri);const e=this._librarySearchUrisToWatch;if(e&&e.length>0)try{this._verboseOutput&&this._console.info(`Adding fs watcher for library directories:\n ${e.join("\n")}`);const t=(0,u.ignoredWatchEventFunction)(e.map((e=>e.getFilePath())));this._libraryFileWatcher=this.fs.createFileSystemWatcher(e,((n,a)=>{if(!a)return;if(this._verboseOutput&&this._console.info(`LibraryFile: Received fs event '${n}' for path '${a}'`),t(a))return;const r=T.Uri.file(a,this.serviceProvider,!0);if(!this._shouldHandleLibraryFileWatchChanges(r,e))return;const s="change"===n&&this.fs.existsSync(r);this._scheduleLibraryAnalysis(s)}))}catch{this._console.error(`Exception caught when installing fs watcher for:\n ${e.map((e=>e.toUserVisibleString())).join("\n")}`)}}_shouldHandleLibraryFileWatchChanges(e,t){if(this._program.getSourceFileInfo(e))return!0;let n;for(const a of t)e.isChild(a)&&(!n||n.getPathLength()<a.getPathLength())&&(n=a);if(!n)return!0;const a=n.getPathComponents(),r=e.getPathComponents();for(let e=a.length;e<r.length;e++)if(r[e].startsWith("."))return!1;return!0}_clearLibraryReanalysisTimer(){var e,t,n;if(this._libraryReanalysisTimer){clearTimeout(this._libraryReanalysisTimer),this._libraryReanalysisTimer=void 0;const a=null===(e=this._backgroundAnalysisProgram)||void 0===e?void 0:e.libraryUpdated();null===(n=null===(t=this._options.libraryReanalysisTimeProvider)||void 0===t?void 0:t.libraryUpdated)||void 0===n||n.call(t,a)}}_scheduleLibraryAnalysis(e){if(this._disposed)return;this._clearLibraryReanalysisTimer();const t=this._options.libraryReanalysisTimeProvider,n=null==t?void 0:t();n&&(this._pendingLibraryChanges.changesOnly=this._pendingLibraryChanges.changesOnly&&e,this._libraryReanalysisTimer=setTimeout((()=>{var e,n;this._clearLibraryReanalysisTimer(),this.invalidateAndForceReanalysis(this._pendingLibraryChanges.changesOnly?b.InvalidatedReason.LibraryWatcherContentOnlyChanged:b.InvalidatedReason.LibraryWatcherChanged),this._scheduleReanalysis(!1),null===(n=(e=t).libraryReanalysisStarted)||void 0===n||n.call(e),this._pendingLibraryChanges.changesOnly=!0}),n))}_removeConfigFileWatcher(){this._configFileWatcher&&(this._configFileWatcher.close(),this._configFileWatcher=void 0)}_updateConfigFileWatcher(){this._removeConfigFileWatcher(),this._watchForConfigChanges&&(this._configFileUri?this._configFileWatcher=this.fs.createFileSystemWatcher([this._configFileUri],(e=>{this._verboseOutput&&this._console.info(`Received fs event '${e}' for config file`),this._scheduleReloadConfigFile()})):this._executionRootUri&&(this._configFileWatcher=this.fs.createFileSystemWatcher([this._executionRootUri],((e,n)=>{if(n&&("add"===e||"change"===e)){const a=(0,g.getFileName)(n);a&&t.configFileNames.some((e=>e===a))&&(this._verboseOutput&&this._console.info(`Received fs event '${e}' for config file`),this._commandLineOptions&&this.setOptions(this._commandLineOptions))}}))))}_clearReloadConfigTimer(){this._reloadConfigTimer&&(clearTimeout(this._reloadConfigTimer),this._reloadConfigTimer=void 0)}_scheduleReloadConfigFile(){this._clearReloadConfigTimer(),this._reloadConfigTimer=setTimeout((()=>{this._clearReloadConfigTimer(),this._reloadConfigFile()}),100)}_reloadConfigFile(){if(this._updateConfigFileWatcher(),this._configFileUri){this._console.info(`Reloading configuration file at ${this._configFileUri.toUserVisibleString()}`);const e=this._backgroundAnalysisProgram.host,t=this._getConfigOptions(e,this._commandLineOptions);this._backgroundAnalysisProgram.setConfigOptions(t),this._applyConfigOptions(e)}}_applyConfigOptions(e){var t;const n=this._importResolverFactory(this._serviceProvider,this._backgroundAnalysisProgram.configOptions,e);if(this._backgroundAnalysisProgram.setImportResolver(n),(null===(t=this._commandLineOptions)||void 0===t?void 0:t.fromVsCodeExtension)||this._configOptions.verboseOutput){const e=this._configOptions.verboseOutput?c.LogLevel.Info:c.LogLevel.Log;for(const t of this._configOptions.getExecutionEnvironments()){(0,c.log)(this._console,e,`Search paths for ${t.root||"<default>"}`);n.getImportRoots(t,!0).forEach((t=>{(0,c.log)(this._console,e,`  ${t.toUserVisibleString()}`)}))}}this._updateLibraryFileWatcher(),this._updateConfigFileWatcher(),this._updateSourceFileWatchers(),this._updateTrackedFileList(!0),this._scheduleReanalysis(!1)}_clearReanalysisTimer(){this._analyzeTimer&&(clearTimeout(this._analyzeTimer),this._analyzeTimer=void 0)}_scheduleReanalysis(e){var t,n;if(this._disposed||!(null===(t=this._commandLineOptions)||void 0===t?void 0:t.enableAmbientAnalysis))return;e&&(this._requireTrackedFileUpdate=!0),null===(n=this._backgroundAnalysisCancellationSource)||void 0===n||n.cancel(),this._clearReanalysisTimer();const a=Date.now()-this._lastUserInteractionTime,r=Math.max(250-a,20);this._analyzeTimer=setTimeout((()=>{this._analyzeTimer=void 0,this._requireTrackedFileUpdate&&this._updateTrackedFileList(!1),this._backgroundAnalysisCancellationSource=this.cancellationProvider.createCancellationTokenSource();this._backgroundAnalysisProgram.startAnalysis(this._backgroundAnalysisCancellationSource.token)&&this._scheduleReanalysis(!1)}),r)}_reportConfigParseError(){this._onCompletionCallback&&this._onCompletionCallback({diagnostics:[],filesInProgram:0,filesRequiringAnalysis:0,checkingOnlyOpenFiles:!0,fatalErrorOccurred:!1,configParseErrorOccurred:!0,elapsedTime:0})}}t.AnalyzerService=A},41500:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.SourceFile=t.IPythonMode=void 0;const i=n(48696),o=n(64704),l=n(28040),p=n(55484),c=n(57508),d=n(83181),u=n(72484),m=n(97652),y=n(73664),g=n(10996),h=n(11699),f=n(96193),T=n(37636),v=s(n(50356)),b=n(55164),_=n(48256),C=n(6216),I=n(95960),k=n(79428),w=n(87368),S=n(71424),A=s(n(9316)),x=n(4868),P=n(2816),N=s(n(63516)),D=n(75108),F=n(92220),E=52428800;var M;!function(e){e[e.None=0]="None",e[e.CellDocs=1]="CellDocs"}(M||(t.IPythonMode=M={}));class O{constructor(){this.diagnosticVersion=0,this.fileContentsVersion=0,this.lastFileContentLength=void 0,this.lastFileContentHash=void 0,this.analyzedFileContentsVersion=-1,this.parseTreeNeedsCleaning=!1,this.isBindingInProgress=!1,this.parseDiagnostics=[],this.commentDiagnostics=[],this.bindDiagnostics=[],this.checkerDiagnostics=[],this.taskListDiagnostics=[],this.typeIgnoreLines=new Map,this.pyrightIgnoreLines=new Map,this.accumulatedDiagnostics=[],this.circularDependencies=[],this.noCircularDependencyConfirmed=!1,this.isBindingNeeded=!0,this.isCheckingNeeded=!0,this.isFileDeleted=!1}debugPrint(){var e,t,n,a,r,s,i,o,l,p,c,d,u;return`WritableData: \n diagnosticVersion=${this.diagnosticVersion}, \n noCircularDependencyConfirmed=${this.noCircularDependencyConfirmed}, \n isBindingNeeded=${this.isBindingNeeded},\n isBindingInProgress=${this.isBindingInProgress},\n isCheckingNeeded=${this.isCheckingNeeded},\n isFileDeleted=${this.isFileDeleted},\n hitMaxImportDepth=${this.hitMaxImportDepth},\n parseTreeNeedsCleaning=${this.parseTreeNeedsCleaning},\n fileContentsVersion=${this.fileContentsVersion},\n analyzedFileContentsVersion=${this.analyzedFileContentsVersion},\n clientDocumentVersion=${this.clientDocumentVersion},\n lastFileContentLength=${this.lastFileContentLength},\n lastFileContentHash=${this.lastFileContentHash},\n typeIgnoreAll=${this.typeIgnoreAll},\n imports=${null===(e=this.imports)||void 0===e?void 0:e.length},\n builtinsImport=${null===(t=this.builtinsImport)||void 0===t?void 0:t.importName},\n circularDependencies=${null===(n=this.circularDependencies)||void 0===n?void 0:n.length},\n parseDiagnostics=${null===(a=this.parseDiagnostics)||void 0===a?void 0:a.length},\n commentDiagnostics=${null===(r=this.commentDiagnostics)||void 0===r?void 0:r.length},\n bindDiagnostics=${null===(s=this.bindDiagnostics)||void 0===s?void 0:s.length},\n checkerDiagnostics=${null===(i=this.checkerDiagnostics)||void 0===i?void 0:i.length},\n taskListDiagnostics=${null===(o=this.taskListDiagnostics)||void 0===o?void 0:o.length},\n accumulatedDiagnostics=${null===(l=this.accumulatedDiagnostics)||void 0===l?void 0:l.length},\n typeIgnoreLines=${null===(p=this.typeIgnoreLines)||void 0===p?void 0:p.size},\n pyrightIgnoreLines=${null===(c=this.pyrightIgnoreLines)||void 0===c?void 0:c.size},\n checkTime=${this.checkTime},\n clientDocumentContents=${null===(d=this.clientDocumentContents)||void 0===d?void 0:d.length},\n parseResults=${null===(u=this.parserOutput)||void 0===u?void 0:u.parseTree.length}`}}t.SourceFile=class{constructor(e,t,n,a,r,s,o,l,d){this.serviceProvider=e,this._writableData=new O,this._diagnosticRuleSet=(0,p.getBasicDiagnosticRuleSet)(),this._ipythonMode=M.None,this.fileSystem=e.get(T.ServiceKeys.fs),this._console=o||new c.StandardConsole,this._editMode=s,this._uri=t,this._moduleName=n,this._isStubFile=t.hasExtension(".pyi"),this._isThirdPartyImport=a,this._isThirdPartyPyTypedPresent=r;const u=t.fileName;this._isTypingStubFile=this._isStubFile&&(this._uri.pathEndsWith("stdlib/typing.pyi")||"typing_extensions.pyi"===u),this._isTypingExtensionsStubFile=this._isStubFile&&"typing_extensions.pyi"===u,this._isTypeshedStubFile=this._isStubFile&&this._uri.pathEndsWith("stdlib/_typeshed/__init__.pyi"),this._isBuiltInStubFile=!1,this._isStubFile&&(this._uri.pathEndsWith("stdlib/collections/__init__.pyi")||this._uri.pathEndsWith("stdlib/asyncio/futures.pyi")||this._uri.pathEndsWith("stdlib/asyncio/tasks.pyi")||this._uri.pathEndsWith("stdlib/builtins.pyi")||this._uri.pathEndsWith("stdlib/_importlib_modulespec.pyi")||this._uri.pathEndsWith("stdlib/dataclasses.pyi")||this._uri.pathEndsWith("stdlib/abc.pyi")||this._uri.pathEndsWith("stdlib/enum.pyi")||this._uri.pathEndsWith("stdlib/queue.pyi")||this._uri.pathEndsWith("stdlib/types.pyi"))&&(this._isBuiltInStubFile=!0),this._logTracker=null!=l?l:new g.LogTracker(o,i.isMainThread?"FG":"BG"),this._ipythonMode=null!=d?d:M.None}getIPythonMode(){return this._ipythonMode}getUri(){return this._uri}getModuleName(){return this._moduleName?this._moduleName:(0,h.stripFileExtension)(this._uri.fileName)}setModuleName(e){this._moduleName=e}getDiagnosticVersion(){return this._writableData.diagnosticVersion}isStubFile(){return this._isStubFile}isTypingStubFile(){return this._isTypingStubFile}isThirdPartyPyTypedPresent(){return this._isThirdPartyPyTypedPresent}getDiagnostics(e,t){if(this._writableData.diagnosticVersion!==t)return this._writableData.accumulatedDiagnostics}getImports(){return this._writableData.imports||[]}getBuiltinsImport(){return this._writableData.builtinsImport}getModuleSymbolTable(){return this._writableData.moduleSymbolTable}getCheckTime(){return this._writableData.checkTime}restore(){if(this._preEditData){const e=this._writableData.clientDocumentContents;return this._writableData=this._preEditData,this._preEditData=void 0,e}}didContentsChangeOnDisk(){if(this._writableData.clientDocumentContents)return!1;if(void 0===this._writableData.lastFileContentLength)return!1;try{if(!this.fileSystem.existsSync(this._uri))return!0;{const e=this.fileSystem.readFileSync(this._uri,"utf8");if(e.length!==this._writableData.lastFileContentLength)return!0;if(v.hashString(e)!==this._writableData.lastFileContentHash)return!0}}catch(e){return!0}return!1}dropParseAndBindInfo(){this._fireFileDirtyEvent(),this._writableData.parserOutput=void 0,this._writableData.tokenizerLines=void 0,this._writableData.tokenizerOutput=void 0,this._writableData.parsedFileContents=void 0,this._writableData.moduleSymbolTable=void 0,this._writableData.isBindingNeeded=!0}markDirty(){this._writableData.fileContentsVersion++,this._writableData.noCircularDependencyConfirmed=!1,this._writableData.isCheckingNeeded=!0,this._writableData.isBindingNeeded=!0,this._writableData.moduleSymbolTable=void 0,this._fireFileDirtyEvent()}markReanalysisRequired(e){this._writableData.isCheckingNeeded=!0,this._writableData.noCircularDependencyConfirmed=!1,this._writableData.parserOutput&&(this._writableData.parserOutput.containsWildcardImport||void 0!==A.getDunderAllInfo(this._writableData.parserOutput.parseTree)||e)&&(this._writableData.parseTreeNeedsCleaning=!0,this._writableData.isBindingNeeded=!0,this._writableData.moduleSymbolTable=void 0)}getFileContentsVersion(){return this._writableData.fileContentsVersion}getClientVersion(){return this._writableData.clientDocumentVersion}getOpenFileContents(){return this._writableData.clientDocumentContents}getFileContent(){const e=this.getOpenFileContents();if(void 0!==e)return e;try{const e=this.fileSystem.statSync(this._uri);if(e.size>E)throw this._console.error(`File length of "${this._uri}" is ${e.size} which exceeds the maximum supported file size of 52428800`),new Error("File larger than max");return this.fileSystem.readFileSync(this._uri,"utf8")}catch(e){return}}setClientVersion(e,t){if(this._cachePreEditState(),null===e)this._writableData.clientDocumentVersion=void 0,this._writableData.clientDocumentContents=void 0,this._writableData.tokenizerOutput=void 0;else{this._writableData.clientDocumentVersion=e,this._writableData.clientDocumentContents=t;const n=v.hashString(t);t.length===this._writableData.lastFileContentLength&&n===this._writableData.lastFileContentHash||this.markDirty(),this._writableData.lastFileContentLength=t.length,this._writableData.lastFileContentHash=n,this._writableData.isFileDeleted=!1}}prepareForClose(){this._fireFileDirtyEvent()}isFileDeleted(){return this._writableData.isFileDeleted}isParseRequired(){return!this._writableData.parserOutput||this._writableData.analyzedFileContentsVersion!==this._writableData.fileContentsVersion}isBindingRequired(){return!this._writableData.isBindingInProgress&&(!!this.isParseRequired()||this._writableData.isBindingNeeded)}isCheckingRequired(){return this._writableData.isCheckingNeeded}getParseResults(){var e;if(this.isParseRequired())return;(0,d.assert)(void 0!==this._writableData.parserOutput&&void 0!==this._writableData.parsedFileContents);const t=null!==(e=this._writableData.tokenizerOutput)&&void 0!==e?e:this._tokenizeContents(this._writableData.parsedFileContents);return{parserOutput:this._writableData.parserOutput,tokenizerOutput:t,text:this._writableData.parsedFileContents}}getParserOutput(){if(!this.isParseRequired())return(0,d.assert)(void 0!==this._writableData.parserOutput),this._writableData.parserOutput}addCircularDependency(e,t){let n=!1;this._writableData.circularDependencies.length<4&&(this._writableData.circularDependencies.some((e=>e.isEqual(t)))||(this._writableData.circularDependencies.push(t),n=!0)),n&&this._recomputeDiagnostics(e)}setNoCircularDependencyConfirmed(){this._writableData.noCircularDependencyConfirmed=!0}isNoCircularDependencyConfirmed(){return!this.isParseRequired()&&this._writableData.noCircularDependencyConfirmed}setHitMaxImportDepth(e){this._writableData.hitMaxImportDepth=e}parse(e,t,n){return this._logTracker.log(`parsing: ${this._getPathForLogging(this._uri)}`,(a=>{if(!this.isParseRequired())return a.suppress(),!1;const r=this.createDiagnosticSink();let s=this.getOpenFileContents();if(void 0===s)try{const e=C.timingStats.readFileTime.totalTime;C.timingStats.readFileTime.timeOperation((()=>{if(s=null!=n?n:this.getFileContent(),void 0===s)throw new Error("Can't get file content");this._writableData.lastFileContentLength=s.length,this._writableData.lastFileContentHash=v.hashString(s)})),a.add(`fs read ${C.timingStats.readFileTime.totalTime-e}ms`)}catch(e){r.addError("Source file could not be read",(0,b.getEmptyRange)()),s="",this.fileSystem.existsSync(this._uri)||(this._writableData.isFileDeleted=!0)}try{const n=this._parseFile(e,this._uri,s,this._ipythonMode,r);(0,d.assert)(void 0!==n&&void 0!==n.tokenizerOutput),this._writableData.parserOutput=n.parserOutput,this._writableData.tokenizerLines=n.tokenizerOutput.lines,this._writableData.parsedFileContents=s,this._writableData.typeIgnoreLines=n.tokenizerOutput.typeIgnoreLines,this._writableData.typeIgnoreAll=n.tokenizerOutput.typeIgnoreAll,this._writableData.pyrightIgnoreLines=n.tokenizerOutput.pyrightIgnoreLines,void 0!==this._writableData.clientDocumentContents&&(this._writableData.tokenizerOutput=n.tokenizerOutput);const a=e.findExecEnvironment(this._uri);C.timingStats.resolveImportsTime.timeOperation((()=>{const s=this._resolveImports(t,n.parserOutput.importedModules,a);this._writableData.imports=s.imports,this._writableData.builtinsImport=s.builtinsImportResult,this._writableData.parseDiagnostics=r.fetchAndClear(),this._writableData.taskListDiagnostics=[],this._addTaskListDiagnostics(e.taskListTokens,n.tokenizerOutput,this._writableData.taskListDiagnostics)}));const i=void 0!==e.strict.find((e=>this._uri.matchesRegex(e.regExp))),o=[];this._diagnosticRuleSet=N.getFileLevelDirectives(n.tokenizerOutput.tokens,n.tokenizerOutput.lines,e.diagnosticRuleSet,i,o),this._writableData.commentDiagnostics=[],o.forEach((e=>{this._writableData.commentDiagnostics.push(new u.Diagnostic(0,e.message,(0,f.convertTextRangeToRange)(e.range,n.tokenizerOutput.lines)))}))}catch(e){const t=(e.stack?e.stack.toString():void 0)||("string"==typeof e.message?e.message:void 0)||JSON.stringify(e);this._console.error(I.LocMessage.internalParseError().format({file:this.getUri().toUserVisibleString(),message:t})),this._writableData.parsedFileContents="",this._writableData.parserOutput={parseTree:k.ModuleNode.create({start:0,length:0}),importedModules:[],futureImports:new Set,containsWildcardImport:!1,typingSymbolAliases:new Map},this._writableData.tokenizerLines=new _.TextRangeCollection([]),this._writableData.tokenizerOutput={tokens:new _.TextRangeCollection([]),lines:this._writableData.tokenizerLines,typeIgnoreAll:void 0,typeIgnoreLines:new Map,pyrightIgnoreLines:new Map,predominantEndOfLineSequence:"\n",hasPredominantTabSequence:!1,predominantTabSequence:"    ",predominantSingleQuoteCharacter:"'"},this._writableData.imports=void 0,this._writableData.builtinsImport=void 0;const n=this.createDiagnosticSink();n.addError(I.LocMessage.internalParseError().format({file:this.getUri().toUserVisibleString(),message:t}),(0,b.getEmptyRange)()),this._writableData.parseDiagnostics=n.fetchAndClear(),this._writableData.taskListDiagnostics=n.fetchAndClear()}return this._writableData.analyzedFileContentsVersion=this._writableData.fileContentsVersion,this._writableData.isBindingNeeded=!0,this._writableData.isCheckingNeeded=!0,this._writableData.parseTreeNeedsCleaning=!1,this._writableData.hitMaxImportDepth=void 0,this._recomputeDiagnostics(e),!0}))}bind(e,t,n,a){return(0,d.assert)(!this.isParseRequired(),"Bind called before parsing"),(0,d.assert)(this.isBindingRequired(),"Bind called unnecessarily"),(0,d.assert)(!this._writableData.isBindingInProgress,"Bind called while binding in progress"),(0,d.assert)(void 0!==this._writableData.parserOutput,"Parse results not available"),this._logTracker.log(`binding: ${this._getPathForLogging(this._uri)}`,(()=>{try{C.timingStats.bindTime.timeOperation((()=>{this._cleanParseTreeIfRequired();const r=this._buildFileInfo(e,this._writableData.parsedFileContents,t,n,a);A.setFileInfo(this._writableData.parserOutput.parseTree,r);const s=new x.Binder(r,e.indexGenerationMode);if(this._writableData.isBindingInProgress=!0,s.bindModule(this._writableData.parserOutput.parseTree),e.internalTestMode){(new F.TestWalker).walk(this._writableData.parserOutput.parseTree)}this._writableData.bindDiagnostics=r.diagnosticSink.fetchAndClear();const i=A.getScope(this._writableData.parserOutput.parseTree);(0,d.assert)(void 0!==i,"Module scope not returned by binder"),this._writableData.moduleSymbolTable=i.symbolTable}))}catch(e){const t=(e.stack?e.stack.toString():void 0)||("string"==typeof e.message?e.message:void 0)||JSON.stringify(e);this._console.error(I.LocMessage.internalBindError().format({file:this.getUri().toUserVisibleString(),message:t}));const n=this.createDiagnosticSink();n.addError(I.LocMessage.internalBindError().format({file:this.getUri().toUserVisibleString(),message:t}),(0,b.getEmptyRange)()),this._writableData.bindDiagnostics=n.fetchAndClear()}finally{this._writableData.isBindingInProgress=!1}this._writableData.isCheckingNeeded=!0,this._writableData.isBindingNeeded=!1,this._recomputeDiagnostics(e)}))}check(e,t,n,a,r){return(0,d.assert)(!this.isParseRequired(),"Check called before parsing"),(0,d.assert)(!this.isBindingRequired(),`Check called before binding: state=${this._writableData.debugPrint()}`),(0,d.assert)(!this._writableData.isBindingInProgress,"Check called while binding in progress"),(0,d.assert)(this.isCheckingRequired(),"Check called unnecessarily"),(0,d.assert)(void 0!==this._writableData.parserOutput,"Parse results not available"),this._logTracker.log(`checking: ${this._getPathForLogging(this._uri)}`,(()=>{try{C.timingStats.typeCheckerTime.timeOperation((()=>{const e=new C.Duration;new P.Checker(t,n,this._writableData.parserOutput,a,r).check(),this._writableData.isCheckingNeeded=!1;const s=A.getFileInfo(this._writableData.parserOutput.parseTree);this._writableData.checkerDiagnostics=s.diagnosticSink.fetchAndClear(),this._writableData.checkTime=e.getDurationInMilliseconds()}))}catch(e){if(!o.OperationCanceledException.is(e)){const t=(e.stack?e.stack.toString():void 0)||("string"==typeof e.message?e.message:void 0)||JSON.stringify(e);this._console.error(I.LocMessage.internalTypeCheckingError().format({file:this.getUri().toUserVisibleString(),message:t}));const n=this.createDiagnosticSink();n.addError(I.LocMessage.internalTypeCheckingError().format({file:this.getUri().toUserVisibleString(),message:t}),(0,b.getEmptyRange)()),this._writableData.checkerDiagnostics=n.fetchAndClear(),this._writableData.isCheckingNeeded=!1}throw e}finally{this._writableData.circularDependencies=[],this._recomputeDiagnostics(e)}}))}test_enableIPythonMode(e){this._ipythonMode=e?M.CellDocs:M.None}createDiagnosticSink(){return new y.DiagnosticSink}createTextRangeDiagnosticSink(e){return new y.TextRangeDiagnosticSink(e)}_recomputeDiagnostics(e){this._writableData.diagnosticVersion++;let t=!0;this._isThirdPartyImport&&(t=!1);let n=[];(0,l.appendArray)(n,this._writableData.parseDiagnostics),(0,l.appendArray)(n,this._writableData.commentDiagnostics),(0,l.appendArray)(n,this._writableData.bindDiagnostics),(0,l.appendArray)(n,this._writableData.checkerDiagnostics),(0,l.appendArray)(n,this._writableData.taskListDiagnostics);const a=n,r=new Map(this._writableData.typeIgnoreLines),s=new Map(this._writableData.pyrightIgnoreLines);this._diagnosticRuleSet.enableTypeIgnoreComments&&this._writableData.typeIgnoreLines.size>0&&(n=n.filter((e=>{if(3!==e.category&&4!==e.category&&5!==e.category)for(let t=e.range.start.line;t<=e.range.end.line;t++)if(this._writableData.typeIgnoreLines.has(t))return r.delete(t),!1;return!0}))),this._writableData.pyrightIgnoreLines.size>0&&(n=n.filter((e=>{if(3!==e.category&&4!==e.category&&5!==e.category)for(let t=e.range.start.line;t<=e.range.end.line;t++){const n=this._writableData.pyrightIgnoreLines.get(t);if(n){if(!n.rulesList)return s.delete(t),!1;const a=e.getRule();if(!a)return!0;if(n.rulesList.find((e=>e.text===a))){const e=s.get(t);if(null==e?void 0:e.rulesList){const n=e.rulesList.filter((e=>e.text!==a));0===n.length?s.delete(t):s.set(t,{range:e.range,rulesList:n})}return!1}return!0}}return!0})));const i=[];if("none"!==this._diagnosticRuleSet.reportUnnecessaryTypeIgnoreComment&&!this._writableData.isCheckingNeeded){const e=(0,u.convertLevelToCategory)(this._diagnosticRuleSet.reportUnnecessaryTypeIgnoreComment),t=a.filter((e=>0===e.category||1===e.category||2===e.category)),n=e=>a.find((t=>4===t.category&&t.range.start.line<=e.start.line&&t.range.end.line>=e.end.line));if(0===t.length&&void 0!==this._writableData.typeIgnoreAll){const t=this._writableData.typeIgnoreAll.range.start,a=t+this._writableData.typeIgnoreAll.range.length,r=(0,f.convertOffsetsToRange)(t,a,this._writableData.tokenizerLines);!n(r)&&this._diagnosticRuleSet.enableTypeIgnoreComments&&i.push(new u.Diagnostic(e,I.LocMessage.unnecessaryTypeIgnore(),r))}r.forEach((t=>{if(this._writableData.tokenizerLines){const a=t.range.start,r=a+t.range.length,s=(0,f.convertOffsetsToRange)(a,r,this._writableData.tokenizerLines);!n(s)&&this._diagnosticRuleSet.enableTypeIgnoreComments&&i.push(new u.Diagnostic(e,I.LocMessage.unnecessaryTypeIgnore(),s))}})),s.forEach((t=>{if(this._writableData.tokenizerLines)if(t.rulesList)t.rulesList.forEach((t=>{const a=t.range.start,r=a+t.range.length,s=(0,f.convertOffsetsToRange)(a,r,this._writableData.tokenizerLines);n(s)||i.push(new u.Diagnostic(e,I.LocMessage.unnecessaryPyrightIgnoreRule().format({name:t.text}),s))}));else{const a=t.range.start,r=a+t.range.length,s=(0,f.convertOffsetsToRange)(a,r,this._writableData.tokenizerLines);n(s)||i.push(new u.Diagnostic(e,I.LocMessage.unnecessaryPyrightIgnore(),s))}}))}if("none"!==this._diagnosticRuleSet.reportImportCycles&&this._writableData.circularDependencies.length>0){const e=(0,u.convertLevelToCategory)(this._diagnosticRuleSet.reportImportCycles);this._writableData.circularDependencies.forEach((t=>{const a=new u.Diagnostic(e,I.LocMessage.importCycleDetected()+"\n"+t.getPaths().map((e=>"  "+e.toUserVisibleString())).join("\n"),(0,b.getEmptyRange)());a.setRule(m.DiagnosticRule.reportImportCycles),n.push(a)}))}void 0!==this._writableData.hitMaxImportDepth&&n.push(new u.Diagnostic(0,I.LocMessage.importDepthExceeded().format({depth:this._writableData.hitMaxImportDepth}),(0,b.getEmptyRange)())),this._diagnosticRuleSet.enableTypeIgnoreComments&&void 0!==this._writableData.typeIgnoreAll&&(n=n.filter((e=>0!==e.category&&1!==e.category&&2!==e.category))),n=n.concat(i),t||(n=n.filter((e=>3===e.category||4===e.category||5===e.category))),e.ignore.find((e=>this._uri.matchesRegex(e.regExp)))&&(n=[]),this._writableData.accumulatedDiagnostics=n}_cachePreEditState(){this._editMode.isEditMode&&!this._preEditData&&(this._preEditData=this._writableData,this._writableData=new O)}_addTaskListDiagnostics(e,t,n){if(e&&0!==e.length&&n)for(let a=0;a<t.tokens.count;a++){const r=t.tokens.getItemAt(a);if(r.comments&&0!==r.comments.length)for(const a of r.comments)for(const r of e){const e="^[\\s]*"+r.text+"([\\s]*$|[\\W]+)";if(!RegExp(e,"i").test(a.value))continue;let s=a.start;s+=a.value.toLowerCase().indexOf(r.text.toLowerCase());const i=b.TextRange.getEnd(a),o=(0,f.convertOffsetsToRange)(s,i,t.lines);n.push(new u.Diagnostic(6,a.value.trim(),o,r.priority))}}}_buildFileInfo(e,t,n,a,r){(0,d.assert)(void 0!==this._writableData.parserOutput,"Parse results not available");return{importLookup:n,futureImports:r,builtinsScope:a,diagnosticSink:this.createTextRangeDiagnosticSink(this._writableData.tokenizerLines),executionEnvironment:e.findExecEnvironment(this._uri),diagnosticRuleSet:this._diagnosticRuleSet,lines:this._writableData.tokenizerLines,typingSymbolAliases:this._writableData.parserOutput.typingSymbolAliases,definedConstants:e.defineConstant,fileUri:this._uri,moduleName:this.getModuleName(),isStubFile:this._isStubFile,isTypingStubFile:this._isTypingStubFile,isTypingExtensionsStubFile:this._isTypingExtensionsStubFile,isTypeshedStubFile:this._isTypeshedStubFile,isBuiltInStubFile:this._isBuiltInStubFile,isInPyTypedPackage:this._isThirdPartyPyTypedPresent,ipythonMode:this._ipythonMode,accessedSymbolSet:new Set}}_cleanParseTreeIfRequired(){if(this._writableData.parserOutput&&this._writableData.parseTreeNeedsCleaning){new D.ParseTreeCleanerWalker(this._writableData.parserOutput.parseTree).clean(),this._writableData.parseTreeNeedsCleaning=!1}}_resolveImports(e,t,n){const a=[],r=(t,r=!1)=>{const s=e.resolveImport(this._uri,n,{leadingDots:0,nameParts:t,importedSymbols:void 0});if(!r||s.isImportFound)return 0===s.resolvedUris.length||s.resolvedUris[0]!==this._uri?(a.push(s),s):void 0};let s;this._isThirdPartyImport||this._isStubFile||(s=r(["__builtins__"],!0)),s||(s=r(["builtins"]));for(const r of t){const t=e.resolveImport(this._uri,n,{leadingDots:r.leadingDots,nameParts:r.nameParts,importedSymbols:r.importedSymbols});a.push(t),r.nameParts.length===r.nameNode.nameParts.length?A.setImportInfo(r.nameNode,t):((0,d.assert)(r.nameParts.length>0),(0,d.assert)(r.nameParts.length-1<r.nameNode.nameParts.length),A.setImportInfo(r.nameNode.nameParts[r.nameParts.length-1],t))}return{imports:a,builtinsImportResult:s}}_getPathForLogging(e){return(0,g.getPathForLogging)(this.fileSystem,e)}_parseFile(e,t,n,a,r){var s;const i=e.findExecEnvironment(t),o=new w.ParseOptions;o.ipythonMode=a,t.pathEndsWith("pyi")&&(o.isStubFile=!0),o.pythonVersion=i.pythonVersion,o.skipFunctionAndClassBody=null!==(s=e.indexGenerationMode)&&void 0!==s&&s;return(new w.Parser).parseSourceFile(n,o,r)}_tokenizeContents(e){const t=(new S.Tokenizer).tokenize(e);return void 0!==this._writableData.clientDocumentContents&&(this._writableData.tokenizerOutput=t,this._writableData.tokenizerLines=t.lines),t}_fireFileDirtyEvent(){var e;null===(e=this.serviceProvider.tryGet(T.ServiceKeys.stateMutationListeners))||void 0===e||e.forEach((e=>{var t;try{null===(t=e.onFileDirty)||void 0===t||t.call(e,this._uri)}catch(e){const t=this.serviceProvider.tryGet(T.ServiceKeys.console);t&&t.error(`State mutation listener exception: ${e.message}`)}}))}}},80068:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SourceFileInfo=void 0;t.SourceFileInfo=class{constructor(e,t,n,a,r,s={}){this.sourceFile=e,this.isTypeshedFile=t,this.isThirdPartyImport=n,this.isThirdPartyPyTypedPresent=a,this._editModeTracker=r,this.isCreatedInEditMode=this._editModeTracker.isEditMode,this._writableData=this._createWriteableData(s),this._cachePreEditState()}get diagnosticsVersion(){return this._writableData.diagnosticsVersion}get builtinsImport(){return this._writableData.builtinsImport}get chainedSourceFile(){return this._writableData.chainedSourceFile}get effectiveFutureImports(){return this._writableData.effectiveFutureImports}get isTracked(){return this._writableData.isTracked}get isOpenByClient(){return this._writableData.isOpenByClient}get imports(){return this._writableData.imports}get importedBy(){return this._writableData.importedBy}get shadows(){return this._writableData.shadows}get shadowedBy(){return this._writableData.shadowedBy}set diagnosticsVersion(e){this._cachePreEditState(),this._writableData.diagnosticsVersion=e}set builtinsImport(e){this._cachePreEditState(),this._writableData.builtinsImport=e}set chainedSourceFile(e){this._cachePreEditState(),this._writableData.chainedSourceFile=e}set effectiveFutureImports(e){this._cachePreEditState(),this._writableData.effectiveFutureImports=e}set isTracked(e){this._cachePreEditState(),this._writableData.isTracked=e}set isOpenByClient(e){this._cachePreEditState(),this._writableData.isOpenByClient=e}mutate(e){this._cachePreEditState(),e(this._writableData)}restore(){return this._preEditData&&(this._writableData=this._preEditData,this._preEditData=void 0,this.sourceFile.dropParseAndBindInfo()),this.sourceFile.restore()}_cachePreEditState(){this._editModeTracker.isEditMode&&!this._preEditData&&(this._preEditData=this._writableData,this._writableData=this._cloneWriteableData(this._writableData),this._editModeTracker.addMutatedFiles(this))}_createWriteableData(e){var t,n;return{isTracked:null!==(t=e.isTracked)&&void 0!==t&&t,isOpenByClient:null!==(n=e.isOpenByClient)&&void 0!==n&&n,builtinsImport:e.builtinsImport,chainedSourceFile:e.chainedSourceFile,diagnosticsVersion:e.diagnosticsVersion,effectiveFutureImports:e.effectiveFutureImports,imports:[],importedBy:[],shadows:[],shadowedBy:[]}}_cloneWriteableData(e){return{isTracked:e.isTracked,isOpenByClient:e.isOpenByClient,builtinsImport:e.builtinsImport,chainedSourceFile:e.chainedSourceFile,diagnosticsVersion:e.diagnosticsVersion,effectiveFutureImports:e.effectiveFutureImports,imports:e.imports.slice(),importedBy:e.importedBy.slice(),shadows:e.shadows.slice(),shadowedBy:e.shadowedBy.slice()}}}},408:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createChainedByList=t.verifyNoCyclesInChainedFiles=t.collectImportedByCells=t.isUserCode=void 0;const a=n(83181),r=n(37636),s=n(41500);function i(e,t){e.importedBy.forEach((e=>{t.has(e)||(t.add(e),i(e,t))}))}t.isUserCode=function(e){return!!e&&e.isTracked&&!e.isThirdPartyImport&&!e.isTypeshedFile},t.collectImportedByCells=function(e,t){!function(e){for(const t of e.getSourceFileInfoList())t.sourceFile.getIPythonMode()===s.IPythonMode.CellDocs&&(e.getParserOutput(t.sourceFile.getUri()),e.handleMemoryHighUsage())}(e);const n=new Set;return i(t,n),n},t.verifyNoCyclesInChainedFiles=function(e,t){var n,s;let i=t.chainedSourceFile;if(!i)return;const o=new Set([t.sourceFile.getUri().key]);for(;i;){const t=i.sourceFile.getUri().key;o.has(t)&&(0,a.fail)(null!==(s=null===(n=e.serviceProvider.tryGet(r.ServiceKeys.debugInfoInspector))||void 0===n?void 0:n.getCycleDetail(e,i))&&void 0!==s?s:`Found a cycle in implicit imports files for ${t}`),o.add(t),i=i.chainedSourceFile}},t.createChainedByList=function(e,t){var n,s;const i=new Map;for(const t of e.getSourceFileInfoList())t.chainedSourceFile&&i.set(t.chainedSourceFile,t);const o=new Set,l=[t];let p=t;for(;p;)o.has(p)&&(0,a.fail)(null!==(s=null===(n=e.serviceProvider.tryGet(r.ServiceKeys.debugInfoInspector))||void 0===n?void 0:n.getCycleDetail(e,p))&&void 0!==s?s:"detected a cycle in chained files"),o.add(p),p=i.get(p),p&&l.push(p);return l}},76392:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.isStubFile=t.SourceMapper=void 0;const i=s(n(9316)),o=s(n(28340)),l=n(28040),p=n(86016),c=n(83181),d=n(65392),u=n(408),m=n(82020),y=n(808),g=n(8312);function h(e){return".pyi"===e.lastExtension}t.SourceMapper=class{constructor(e,t,n,a,r,s,i,o,l){this._importResolver=e,this._execEnv=t,this._evaluator=n,this._fileBinder=a,this._boundSourceGetter=r,this._mapCompiled=s,this._preferStubs=i,this._fromFile=o,this._cancelToken=l}findModules(e){var t;return(this._isStubThatShouldBeMappedToImplementation(e)?this._getBoundSourceFilesFromStubFile(e):[null===(t=this._boundSourceGetter(e))||void 0===t?void 0:t.sourceFile]).filter(p.isDefined).map((e=>{var t;return null===(t=e.getParserOutput())||void 0===t?void 0:t.parseTree})).filter(p.isDefined)}getModuleNode(e){var t,n;return null===(n=null===(t=this._boundSourceGetter(e))||void 0===t?void 0:t.sourceFile.getParserOutput())||void 0===n?void 0:n.parseTree}findDeclarations(e){return(0,d.isClassDeclaration)(e)?this._findClassOrTypeAliasDeclarations(e):(0,d.isFunctionDeclaration)(e)?this._findFunctionOrTypeAliasDeclarations(e):(0,d.isVariableDeclaration)(e)?this._findVariableDeclarations(e):(0,d.isParameterDeclaration)(e)?this._findParameterDeclarations(e):(0,d.isSpecialBuiltInClassDeclaration)(e)?this._findSpecialBuiltInClassDeclarations(e):[]}findDeclarationsByType(e,t,n=!1){const a=[];return this._addClassTypeDeclarations(e,t,a,new Set,n),a}findClassDeclarationsByType(e,t){return this.findDeclarationsByType(e,t).filter((e=>(0,d.isClassDeclaration)(e))).map((e=>e))}findFunctionDeclarations(e){return this._findFunctionOrTypeAliasDeclarations(e).filter((e=>(0,d.isFunctionDeclaration)(e))).map((e=>e))}isUserCode(e){return(0,u.isUserCode)(this._boundSourceGetter(e))}getNextFileName(e){const t=e.stripExtension();let n=1,a=t.addExtension(`_${n}.py`);for(;this.isUserCode(a)&&n<1e3;)n+=1,a=t.addExtension(`_${n}.py`);return a}_findSpecialBuiltInClassDeclarations(e,t=new Set){if(38===e.node.valueExpression.nodeType){const n=e.node.valueExpression.value;return this._getBoundSourceFilesFromStubFile(e.uri).flatMap((e=>this._findClassDeclarationsByName(e,n,t)))}return[]}_findClassOrTypeAliasDeclarations(e,t=new Set){const n=this._getFullClassName(e.node);return this._getBoundSourceFilesFromStubFile(e.uri).flatMap((e=>this._findClassDeclarationsByName(e,n,t)))}_findFunctionOrTypeAliasDeclarations(e,t=new Set){const n=e.node.name.value,a=this._getBoundSourceFilesFromStubFile(e.uri);if(e.isMethod){const r=o.getEnclosingClass(e.node);if(void 0===r)return[];const s=this._getFullClassName(r);return a.flatMap((e=>this._findMethodDeclarationsByName(e,s,n,t)))}return a.flatMap((e=>this._findFunctionDeclarationsByName(e,n,t)))}_findVariableDeclarations(e,t=new Set){if(38!==e.node.nodeType)return[];const n=e.node.value,a=this._getBoundSourceFilesFromStubFile(e.uri),r=o.getEnclosingClass(e.node);if(r){const e=this._getFullClassName(r);return a.flatMap((a=>this._findFieldDeclarationsByName(a,e,n,t)))}return a.flatMap((e=>this._findVariableDeclarationsByName(e,n,t)))}_findParameterDeclarations(e){const t=[];if(!e.node.name)return t;const n=o.getEnclosingFunction(e.node);if(!n)return t;const a=this._evaluator.getDeclarationsForNameNode(n.name);if(!a)return t;const r=new Set;for(const n of a)for(const a of this._findFunctionOrTypeAliasDeclarations(n,r))(0,l.appendArray)(t,this._lookUpSymbolDeclarations(a.node,e.node.name.value).filter((e=>(0,d.isParameterDeclaration)(e))).map((e=>e)));return t}_findMemberDeclarationsByName(e,t,n,a,r){const s=[],i=this._findClassDeclarationsByName(e,t,r);for(const e of i.filter((e=>(0,d.isClassDeclaration)(e))).map((e=>e))){const t=this._evaluator.getTypeOfClass(e.node);if(!t)continue;const i=(0,y.lookUpClassMember)(t.classType,n);if(i)for(const e of i.symbol.getDeclarations())a(e,r,s)}return s}_findFieldDeclarationsByName(e,t,n,a){let r=[];const s=`@${e.getUri()}/c/${t}/v/${n}`;return a.has(s)||(a.add(s),r=this._findMemberDeclarationsByName(e,t,n,((e,t,n)=>{if((0,d.isVariableDeclaration)(e))if(this._isStubThatShouldBeMappedToImplementation(e.uri))for(const a of this._findVariableDeclarations(e,t))(0,d.isVariableDeclaration)(a)&&n.push(a);else n.push(e)}),a),a.delete(s)),r}_findMethodDeclarationsByName(e,t,n,a){let r=[];const s=`@${e.getUri()}/c/${t}/f/${n}`;return a.has(s)||(a.add(s),r=this._findMemberDeclarationsByName(e,t,n,((e,t,n)=>{(0,d.isFunctionDeclaration)(e)&&(this._isStubThatShouldBeMappedToImplementation(e.uri)?(0,l.appendArray)(n,this._findFunctionOrTypeAliasDeclarations(e,t)):n.push(e))}),a),a.delete(s)),r}_findVariableDeclarationsByName(e,t,n){var a;const r=[],s=`@${e.getUri()}/v/${t}`;if(n.has(s))return r;n.add(s);const i=null===(a=e.getParserOutput())||void 0===a?void 0:a.parseTree;if(!i)return r;const o=this._lookUpSymbolDeclarations(i,t);if(0===o.length)this._addDeclarationsFollowingWildcardImports(i,t,r,n);else for(const e of o)this._addVariableDeclarations(e,r,n);return n.delete(s),r}_findFunctionDeclarationsByName(e,t,n){var a;const r=[],s=`@${e.getUri()}/f/${t}`;if(n.has(s))return r;n.add(s);const i=null===(a=e.getParserOutput())||void 0===a?void 0:a.parseTree;if(!i)return r;const o=this._lookUpSymbolDeclarations(i,t);if(0===o.length)this._addDeclarationsFollowingWildcardImports(i,t,r,n);else for(const e of o)this._addClassOrFunctionDeclarations(e,r,n);return n.delete(s),r}_findClassDeclarationsByName(e,t,n){var a;let r=[];const s=null===(a=e.getParserOutput())||void 0===a?void 0:a.parseTree;if(s){let a=t.split(".");a.length>0&&(r=this._findClassDeclarations(e,a[0],s,n),a=a.slice(1));for(const t of a)r=r.flatMap((a=>this._findClassDeclarations(e,t,a.node,n)))}return r}_findClassDeclarations(e,t,n,a){const r=[],s=`@${e.getUri()}[${n.start}]${t}`;if(a.has(s))return r;a.add(s);const i=this._lookUpSymbolDeclarations(n,t);if(0===i.length&&36===n.nodeType)this._addDeclarationsFollowingWildcardImports(n,t,r,a);else for(const e of i)this._addClassOrFunctionDeclarations(e,r,a);return a.delete(s),r}_addVariableDeclarations(e,t,n){if((0,d.isVariableDeclaration)(e))this._isStubThatShouldBeMappedToImplementation(e.uri)?(0,l.appendArray)(t,this._findVariableDeclarations(e,n)):t.push(e);else if((0,d.isAliasDeclaration)(e)){const a=this._evaluator.resolveAliasDeclaration(e,!0);a&&((0,d.isVariableDeclaration)(a)?this._addVariableDeclarations(a,t,n):((0,d.isClassDeclaration)(a)||(0,d.isFunctionDeclaration)(a))&&this._addClassOrFunctionDeclarations(a,t,n))}}_addClassOrFunctionDeclarations(e,t,n){var a;if((0,d.isClassDeclaration)(e))this._isStubThatShouldBeMappedToImplementation(e.uri)?(0,l.appendArray)(t,this._findClassOrTypeAliasDeclarations(e,n)):t.push(e);else if((0,d.isSpecialBuiltInClassDeclaration)(e))t.push(e);else if((0,d.isFunctionDeclaration)(e))this._isStubThatShouldBeMappedToImplementation(e.uri)?(0,l.appendArray)(t,this._findFunctionOrTypeAliasDeclarations(e,n)):t.push(e);else if((0,d.isAliasDeclaration)(e)){const a=this._handleSpecialBuiltInModule(e),r=this._evaluator.resolveAliasDeclaration(a,!0);r&&!(0,d.isAliasDeclaration)(r)&&this._addClassOrFunctionDeclarations(r,t,n)}else if((0,d.isVariableDeclaration)(e)){this._addVariableDeclarations(e,t,n);const r=null!==(a=e.typeAliasName)&&void 0!==a?a:e.node,s=this._evaluator.getType(r);if(!s)return;if((0,g.isFunction)(s)&&s.details.declaration)this._addClassOrFunctionDeclarations(s.details.declaration,t,n);else if((0,g.isOverloadedFunction)(s))for(const e of s.overloads.map((e=>e.details.declaration)).filter(p.isDefined))this._addClassOrFunctionDeclarations(e,t,n);else(0,g.isInstantiableClass)(s)&&this._addClassTypeDeclarations(e.uri,s,t,n)}}_handleSpecialBuiltInModule(e){if(!e.uri.isEmpty()||!e.node)return e;if("io"!==e.moduleName&&"collections"!==e.moduleName)return e;const t=this._importResolver.getTypeshedStdLibPath(this._execEnv);if(!t)return e;const n=o.getFileInfoFromNode(e.node);if(!n)return e;const a=t.combinePaths(function(){switch(e.node.nodeType){case 21:case 22:return e.node.module;case 23:return e.node.parent.module;default:return(0,c.assertNever)(e.node)}}().nameParts.map((e=>e.value)).join(".")+".pyi"),r=this._getSourceFiles(a,n.fileUri);if(0===r.length)return e;const s={...e};return s.uri=r[0].getUri(),s}_addClassTypeDeclarations(e,t,n,a,r=!1){const s=r&&t.typeAliasInfo?t.typeAliasInfo.fileUri:t.details.fileUri,i=this._getSourceFiles(s,void 0,e),o=r&&t.typeAliasInfo?t.typeAliasInfo.fullName:t.details.fullName,p=r&&t.typeAliasInfo?t.typeAliasInfo.moduleName:t.details.moduleName,c=o.substring(p.length+1);for(const e of i)(0,l.appendArray)(n,this._findClassDeclarationsByName(e,c,a))}_getSourceFiles(e,t,n){const a=[];if(this._isStubThatShouldBeMappedToImplementation(e))(0,l.appendArray)(a,this._getBoundSourceFilesFromStubFile(e,t,n));else{const t=this._boundSourceGetter(e);t&&a.push(t.sourceFile)}return a}_addDeclarationsFollowingWildcardImports(e,t,n,a){var r,s;const o=null===(r=i.getScope(e))||void 0===r?void 0:r.symbolTable;if(o)for(const e of o.values())for(const r of e.getDeclarations()){if(!(0,d.isAliasDeclaration)(r)||r.uri.isEmpty()||22!==r.node.nodeType||!r.node.isWildcardImport)continue;const e=`@${r.uri.key}/l/${t}`;if(a.has(e))continue;a.add(e);const i=this._getSourceFiles(r.uri);for(const e of i){const r=null===(s=e.getParserOutput())||void 0===s?void 0:s.parseTree;if(!r)continue;const i=this._lookUpSymbolDeclarations(r,t);if(0===i.length)this._addDeclarationsFollowingWildcardImports(r,t,n,a);else for(const e of i){const t=this._evaluator.resolveAliasDeclaration(e,!0);t&&((0,d.isFunctionDeclaration)(t)||(0,d.isClassDeclaration)(t)?this._addClassOrFunctionDeclarations(t,n,a):(0,d.isVariableDeclaration)(t)&&this._addVariableDeclarations(t,n,a))}}}}_lookUpSymbolDeclarations(e,t){if(void 0===e)return[];const n=i.getScope(e),a=null==n?void 0:n.lookUpSymbol(t),r=null==a?void 0:a.getDeclarations();return null!=r?r:[]}_getFullClassName(e){const t=[];let n=e;for(;void 0!==n;)t.push(n.name.value),n=o.getEnclosingClass(n);return t.reverse().join(".")}_getBoundSourceFilesFromStubFile(e,t,n){var a;return this._getSourcePathsFromStub(e,null!=n?n:null===(a=this._fromFile)||void 0===a?void 0:a.sourceFile.getUri()).map((n=>this._fileBinder(null!=t?t:e,n))).filter(p.isDefined)}_getSourcePathsFromStub(e,t){let n=this._importResolver.getSourceFilesFromStub(e,this._execEnv,this._mapCompiled);if(n.length>0)return n;const a=this._getStubFileImportTree(e,t);for(let e=0;e<a.length;e++)if(n=this._importResolver.getSourceFilesFromStub(a[e],this._execEnv,this._mapCompiled),n.length>0)return n;return[]}_getStubFileImportTree(e,t){return t&&this._isStubThatShouldBeMappedToImplementation(e)?(0,m.buildImportTree)(t,e,(e=>{const t=this._boundSourceGetter(e);return t?t.importedBy.map((e=>e.sourceFile.getUri())):[]}),this._cancelToken).filter((e=>this._isStubThatShouldBeMappedToImplementation(e))):[e]}_isStubThatShouldBeMappedToImplementation(e){if(this._preferStubs)return!1;return!!h(e)&&this._importResolver.getSourceFilesFromStub(e,this._execEnv,this._mapCompiled).every((t=>t!==e))}},t.isStubFile=h},82020:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.buildImportTree=void 0;const n=1e3;class a{constructor(){this.value=0}}function r(e,t,a,s,i,o){if(i.value>n||o.isCancellationRequested)return[];if(i.value+=1,t.equals(e))return s.length?s:[t];if(s.length>1&&s.find((e=>e.equals(t))))return[];const l=a(t);for(let n=0;n<l.length&&!o.isCancellationRequested;n++){const p=r(e,l[n],a,[...s,t],i,o);if(p.length>0)return p}return[]}t.buildImportTree=function(e,t,n,s){const i=r(e,t,n,[],new a,s);return i.length>0?i:[t]}},21084:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.evaluateStaticBoolLikeExpression=t.evaluateStaticBoolExpression=void 0;const a=n(55484),r=n(61328);function s(e,t,n,c,d){if(4===e.nodeType)return s(e.rightExpression,t,n,c,d);if(55===e.nodeType){if(38===e.operator){const a=i(e.expression,t,n,c,d);if(void 0!==a)return!a}}else if(7===e.nodeType){if(37===e.operator||36===e.operator){const a=s(e.leftExpression,t,n,c,d),r=s(e.rightExpression,t,n,c,d);if(void 0===a||void 0===r)return;return 37===e.operator?a||r:a&&r}if(p(e.leftExpression,d)&&52===e.rightExpression.nodeType){const n=function(e){if(e.expressions.length>=2){if(40===e.expressions[0].nodeType&&!e.expressions[0].isImaginary&&40===e.expressions[1].nodeType&&!e.expressions[1].isImaginary){const t=e.expressions[0],n=e.expressions[1];if("number"!=typeof t.value||"number"!=typeof n.value)return;const a=t.value,s=n.value;let i,o,l;return e.expressions.length>=3&&40===e.expressions[2].nodeType&&!e.expressions[2].isImaginary&&"number"==typeof e.expressions[2].value&&(i=e.expressions[2].value),e.expressions.length>=4&&48===e.expressions[3].nodeType&&1===e.expressions[3].strings.length&&49===e.expressions[3].strings[0].nodeType&&(o=e.expressions[3].strings[0].value),e.expressions.length>=5&&40===e.expressions[4].nodeType&&!e.expressions[4].isImaginary&&"number"==typeof e.expressions[4].value&&(l=e.expressions[4].value),new r.PythonVersion(a,s,i,o,l)}}else if(1===e.expressions.length){const t=e.expressions[0];if("number"==typeof t.value)return new r.PythonVersion(t.value,0)}return}(e.rightExpression);return o(e.operator,t.pythonVersion,n)}if(24===e.leftExpression.nodeType&&p(e.leftExpression.baseExpression,d)&&1===e.leftExpression.items.length&&!e.leftExpression.trailingComma&&!e.leftExpression.items[0].name&&0===e.leftExpression.items[0].argumentCategory&&40===e.leftExpression.items[0].valueExpression.nodeType&&!e.leftExpression.items[0].valueExpression.isImaginary&&0===e.leftExpression.items[0].valueExpression.value&&40===e.rightExpression.nodeType&&e.rightExpression.isInteger&&"number"==typeof e.rightExpression.value)return o(e.operator,new r.PythonVersion(t.pythonVersion.major,0),new r.PythonVersion(e.rightExpression.value,0));if(function(e,t=["sys"]){if(35===e.nodeType&&38===e.leftExpression.nodeType&&"platform"===e.memberName.value&&t.some((t=>t===e.leftExpression.value)))return!0;return!1}(e.leftExpression,d)&&48===e.rightExpression.nodeType){const n=e.rightExpression.strings.map((e=>e.value)).join(""),r=function(e){if(e.pythonPlatform===a.PythonPlatform.Darwin)return"darwin";if(e.pythonPlatform===a.PythonPlatform.Windows)return"win32";if(e.pythonPlatform===a.PythonPlatform.Linux)return"linux";return}(t);return l(e.operator,r,n)}if(function(e){if(35===e.nodeType&&38===e.leftExpression.nodeType&&"os"===e.leftExpression.value&&"name"===e.memberName.value)return!0;return!1}(e.leftExpression)&&48===e.rightExpression.nodeType){const n=e.rightExpression.strings.map((e=>e.value)).join(""),r=function(e){if(e.pythonPlatform===a.PythonPlatform.Darwin)return"posix";if(e.pythonPlatform===a.PythonPlatform.Windows)return"nt";if(e.pythonPlatform===a.PythonPlatform.Linux)return"posix";return}(t);if(void 0!==r)return l(e.operator,r,n)}else if(48===e.rightExpression.nodeType){let t;if(38===e.leftExpression.nodeType?t=n.get(e.leftExpression.value):35===e.leftExpression.nodeType&&(t=n.get(e.leftExpression.memberName.value)),void 0!==t&&"string"==typeof t){const n=e.rightExpression.strings.map((e=>e.value)).join("");return l(e.operator,t,n)}}}else if(11===e.nodeType){if(33===e.constType)return!0;if(15===e.constType)return!1}else if(38===e.nodeType){if("TYPE_CHECKING"===e.value)return!0;const t=n.get(e.value);if(void 0!==t)return!!t}else if(35===e.nodeType){if(c&&"TYPE_CHECKING"===e.memberName.value&&38===e.leftExpression.nodeType&&c.some((t=>t===e.leftExpression.value)))return!0;const t=n.get(e.memberName.value);if(void 0!==t)return!!t}}function i(e,t,n,a,r){return(11!==e.nodeType||26!==e.constType)&&s(e,t,n,a,r)}function o(e,t,n){if(void 0!==t&&void 0!==n){if(20===e)return t.isLessThan(n);if(21===e)return t.isLessOrEqualTo(n);if(15===e)return t.isGreaterThan(n);if(16===e)return t.isGreaterOrEqualTo(n);if(12===e)return t.isEqualTo(n);if(28===e)return!t.isEqualTo(n)}}function l(e,t,n){if(void 0!==t&&void 0!==n){if(12===e)return t===n;if(28===e)return t!==n}}function p(e,t=["sys"]){return!(35!==e.nodeType||38!==e.leftExpression.nodeType||"version_info"!==e.memberName.value||!t.some((t=>t===e.leftExpression.value)))}t.evaluateStaticBoolExpression=s,t.evaluateStaticBoolLikeExpression=i},52328:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Symbol=t.indeterminateSymbolId=void 0;const a=n(61340);let r=1;t.indeterminateSymbolId=0;class s{constructor(e){this.id=r++,this._flags=e}static createWithType(e,t){const n=new s(e);return n._synthesizedType=t,n}isInitiallyUnbound(){return!!(1&this._flags)}setIsExternallyHidden(){this._flags|=2}isExternallyHidden(){return!!(2&this._flags)}setIsIgnoredForProtocolMatch(){this._flags|=64}isIgnoredForProtocolMatch(){return!!(64&this._flags)}setIsClassMember(){this._flags|=4}isClassMember(){return!!(4&this._flags)}setIsInstanceMember(){this._flags|=8}isInstanceMember(){return!!(8&this._flags)}setIsClassVar(){this._flags|=128}isClassVar(){return!!(128&this._flags)}setIsFinalVarInClassBody(){this._flags|=8192}isFinalVarInClassBody(){return!!(8192&this._flags)}setIsInitVar(){this._flags|=1024}isInitVar(){return!!(1024&this._flags)}setIsInDunderAll(){this._flags|=256}isInDunderAll(){return!!(256&this._flags)}setIsPrivateMember(){this._flags|=32}isPrivateMember(){return!!(32&this._flags)}setPrivatePyTypedImport(){this._flags|=512}isPrivatePyTypedImport(){return!!(512&this._flags)}isNamedTupleMemberMember(){return!!(2048&this._flags)}isIgnoredForOverrideChecks(){return!!(4096&this._flags)}addDeclaration(e){if(this._declarations){const t=this._declarations.findIndex((t=>(0,a.areDeclarationsSame)(t,e)));if(t<0)this._declarations.push(e),this._declarations.forEach((e=>{1===e.type&&e.typeAliasName&&delete e.typeAliasName}));else{const n=this._declarations[t];(0,a.hasTypeForDeclaration)(e)?(this._declarations[t]=e,1===n.type&&1===e.type&&!e.inferredTypeSource&&n.inferredTypeSource&&(e.inferredTypeSource=n.inferredTypeSource)):1===e.type&&1===n.type&&(e.isFinal&&(n.isFinal=!0),n.typeAliasName=e.typeAliasName,!n.inferredTypeSource&&e.inferredTypeSource&&(n.inferredTypeSource=e.inferredTypeSource))}}else this._declarations=[e]}hasDeclarations(){return!!this._declarations&&this._declarations.length>0}getDeclarations(){return this._declarations?this._declarations:[]}hasTypedDeclarations(){return!!this._synthesizedType||this.getDeclarations().some((e=>(0,a.hasTypeForDeclaration)(e)))}getTypedDeclarations(){return this.getDeclarations().filter((e=>(0,a.hasTypeForDeclaration)(e)))}getSynthesizedType(){return this._synthesizedType}}t.Symbol=s},80944:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isPublicConstantOrTypeAlias=t.isTypeAliasName=t.isConstantName=t.isSingleDunderName=t.isDunderName=t.isPrivateOrProtectedName=t.isProtectedName=t.isPrivateName=void 0;const n=/^[A-Z0-9_]+$/,a=/^[_]+$/,r=/^_{0,2}[A-Z][A-Za-z0-9_]+$/;function s(e){return e.length>2&&e.startsWith("__")&&!e.endsWith("__")}function i(e){return e.length>1&&e.startsWith("_")&&!e.startsWith("__")}function o(e){return s(e)||i(e)}function l(e){return!!e.match(n)&&!e.match(a)}function p(e){return!!e.match(r)}t.isPrivateName=s,t.isProtectedName=i,t.isPrivateOrProtectedName=o,t.isDunderName=function(e){return e.length>4&&e.startsWith("__")&&e.endsWith("__")},t.isSingleDunderName=function(e){return e.length>2&&e.startsWith("_")&&e.endsWith("_")},t.isConstantName=l,t.isTypeAliasName=p,t.isPublicConstantOrTypeAlias=function(e){return!o(e)&&(l(e)||p(e))}},8e4:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isEffectivelyClassVar=t.isVisibleExternally=t.isTypedDictMemberAccessedThroughIndex=t.getLastTypedDeclarationForSymbol=void 0,t.getLastTypedDeclarationForSymbol=function(e){const t=e.getTypedDeclarations();if(t.length>0)return t[t.length-1]},t.isTypedDictMemberAccessedThroughIndex=function(e){const t=e.getTypedDeclarations();if(t.length>0){if(1===t[t.length-1].type)return!0}return!1},t.isVisibleExternally=function(e){return!e.isExternallyHidden()&&!e.isPrivatePyTypedImport()},t.isEffectivelyClassVar=function(e,t){return!!e.isClassVar()||!!e.isFinalVarInClassBody()&&!t}},92220:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NameTypeWalker=t.TestWalker=void 0;const a=n(78232),r=n(83181),s=n(55164),i=n(28340);class o extends a.ParseTreeWalker{constructor(){super()}visitNode(e){const t=super.visitNode(e);return this._verifyParentChildLinks(e,t),this._verifyChildRanges(e,t),t}_verifyParentChildLinks(e,t){t.forEach((t=>{t&&t.parent!==e&&(0,r.fail)(`Child node ${t.nodeType} does not contain a reference to its parent ${e.nodeType}`)}))}_verifyChildRanges(e,t){let n;const a=(0,i.isCompliantWithNodeRangeRules)(e);t.forEach((t=>{if(t){let i=!1;if(!a)switch(e.nodeType){case 3:t===e.typeAnnotationComment&&(i=!0),3===t.nodeType&&(i=!0);break;case 48:t===e.typeAnnotation&&(i=!0);break;default:(0,r.fail)(`node ${e.nodeType} is not marked as not following range rules.`)}i||((t.start<e.start||s.TextRange.getEnd(t)>s.TextRange.getEnd(e))&&(0,r.fail)(`Child node ${t.nodeType} is not contained within its parent ${e.nodeType}`),n&&t.start<s.TextRange.getEnd(n)&&62!==n.nodeType&&(0,r.fail)("Child node is not after previous child node"),n=t)}}))}}t.TestWalker=o;class l extends a.ParseTreeWalker{constructor(e){super(),this._evaluator=e}visitName(e){var t,n;return 23!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType)&&21!==(null===(n=e.parent)||void 0===n?void 0:n.nodeType)&&this._evaluator.isNodeReachable(e,void 0)&&this._evaluator.getType(e),!0}}t.NameTypeWalker=l},74068:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.createTracePrinter=void 0;const i=n(86016),o=n(83181),l=n(11699),p=n(96193),c=n(55084),d=n(79428),u=s(n(9316)),m=s(n(28340)),y=n(52328),g=n(8312);t.createTracePrinter=function(e){function t(e,t="'"){return e?`${t}${e}${t}`:""}e=e.sort(((e,t)=>e.key.localeCompare(t.key))).reverse();const n=/[\\/]/g;function a(t){if(t){if(c.Uri.is(t)){for(const a of e)if(t.isChild(a)){const e=a.getRelativePath(t);return(0,l.stripFileExtension)(e).replace(n,".")}return t.toUserVisibleString()}if(t.nameParts)return t.nameParts.join(".")}return""}function r(e){var n,a,s,i,l;if(e)switch(e.category){case 2:return`Any ${t(null===(n=e.typeAliasInfo)||void 0===n?void 0:n.fullName)}`;case 6:return g.TypeBase.isInstantiable(e)?`Class '${e.details.name}' (${e.details.moduleName})`:`Object '${e.details.name}' (${e.details.moduleName})`;case 4:return`Function '${e.details.name}' (${e.details.moduleName})`;case 7:return`Module '${e.moduleName}' (${e.moduleName})`;case 3:return`Never ${t(null===(a=e.typeAliasInfo)||void 0===a?void 0:a.fullName)}`;case 5:return`OverloadedFunction [${e.overloads.map((e=>t(r(e),'"'))).join(",")}]`;case 9:return`TypeVar '${e.details.name}' ${t(null===(s=e.typeAliasInfo)||void 0===s?void 0:s.fullName)}`;case 0:return`Unbound ${t(null===(i=e.typeAliasInfo)||void 0===i?void 0:i.fullName)}`;case 8:return`Union [${e.subtypes.map((e=>t(r(e),'"'))).join(",")}]`;case 1:return`Unknown ${t(null===(l=e.typeAliasInfo)||void 0===l?void 0:l.fullName)}`;default:(0,o.assertNever)(e)}return""}function s(e){if(e)switch(e.type){case 8:return`Alias, ${f(e.node)} (${a(e.uri)})`;case 6:return`Class, ${f(e.node)} (${a(e.uri)})`;case 5:return`Function, ${f(e.node)} (${a(e.uri)})`;case 0:return`Intrinsic, ${f(e.node)} ${e.intrinsicType} (${a(e.uri)})`;case 2:return`Parameter, ${f(e.node)} (${a(e.uri)})`;case 3:return`TypeParameter, ${f(e.node)} (${a(e.uri)})`;case 7:return`SpecialBuiltInClass, ${f(e.node)} (${a(e.uri)})`;case 1:return`Variable, ${f(e.node)} (${a(e.uri)})`;case 4:return`TypeAlias, ${f(e.node)} (${a(e.uri)})`;default:(0,o.assertNever)(e)}return""}function h(e){for(;36!==e.nodeType&&e.parent;)e=e.parent;return 36===e.nodeType?u.getFileInfo(e):void 0}function f(e,n=!1){var r;if(!e)return"";let s=n?`(${a(null===(r=h(e))||void 0===r?void 0:r.fileUri)})`:"";const i=h(e);if(null==i?void 0:i.lines){const t=(0,p.convertOffsetToPosition)(e.start,i.lines);s+=` [${t.line+1}:${t.character+1}]`}if((0,d.isExpressionNode)(e))return t(function(e,t=30){return e.length<t?e:e.substring(0,t)+" <shortened> "}(m.printExpression(e)),'"')+` ${s}`;switch(e.nodeType){case 21:return`importAs '${f(e.module)}' ${t(e.alias?f(e.alias):"")} ${s}`;case 22:return`importFrom [${e.imports.map((e=>t(f(e),'"'))).join(",")}]`;case 23:return`ImportFromAs '${f(e.name)}' ${t(e.alias?f(e.alias):"")} ${s}`;case 36:return`module ${s}`;case 10:return`class '${f(e.name)}' ${s}`;case 28:return`function '${f(e.name)}' ${s}`;case 37:return`moduleName '${e.nameParts.map((e=>f(e))).join(".")}' ${s}`;case 1:return`argument '${e.name?f(e.name):"N/A"}' ${s}`;case 41:return`parameter '${e.name?f(e.name):"N/A"}' ${s}`;default:return`${m.printParseNodeType(e.nodeType)} ${s}`}}return{print:function(e){return e?function(e){const t=e;return t&&(0,i.isNumber)(t.nodeType)}(e)?f(e,!0):function(e){const t=e;return t&&(0,i.isNumber)(t.type)&&c.Uri.is(t.uri)&&(0,i.isString)(t.moduleName)}(e)?s(e):e instanceof y.Symbol?(t=e)?t.hasDeclarations()?`symbol ${s(t.getDeclarations()[0])}`:"<symbol>":"":function(e){const t=e;return t&&(0,i.isNumber)(t.category)&&(0,i.isNumber)(t.flags)}(e)?r(e):"":"";var t},printFileOrModuleName:a}}},42676:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.SpeculativeTypeTracker=void 0;const i=n(83181),o=s(n(28340)),l=n(8312);t.SpeculativeTypeTracker=class{constructor(){this._speculativeContextStack=[],this._speculativeTypeCache=new Map,this._activeDependentTypes=[]}enterSpeculativeContext(e,t){this._speculativeContextStack.push({speculativeRootNode:e,entriesToUndo:[],dependentType:null==t?void 0:t.dependentType,allowDiagnostics:null==t?void 0:t.allowDiagnostics}),(null==t?void 0:t.dependentType)&&this._activeDependentTypes.push({speculativeRootNode:e,dependentType:t.dependentType})}leaveSpeculativeContext(){(0,i.assert)(this._speculativeContextStack.length>0);const e=this._speculativeContextStack.pop();(null==e?void 0:e.dependentType)&&((0,i.assert)(this._activeDependentTypes.length>0),this._activeDependentTypes.pop()),e.entriesToUndo.forEach((e=>{e.cache.delete(e.id)}))}isSpeculative(e,t=!1){if(0===this._speculativeContextStack.length)return!1;if(!e)return!0;for(let n=this._speculativeContextStack.length-1;n>=0;n--){const a=this._speculativeContextStack[n];if(o.isNodeContainedWithin(e,a.speculativeRootNode)&&(!t||!a.allowDiagnostics))return!0}return!1}trackEntry(e,t){const n=this._speculativeContextStack.length;n>0&&this._speculativeContextStack[n-1].entriesToUndo.push({cache:e,id:t})}disableSpeculativeMode(){const e=this._speculativeContextStack;return this._speculativeContextStack=[],e}enableSpeculativeMode(e){(0,i.assert)(0===this._speculativeContextStack.length),this._speculativeContextStack=e}addSpeculativeType(e,t,n,a){(0,i.assert)(this._speculativeContextStack.length>0);let r=this._speculativeTypeCache.get(e.id);r?(r=r.filter((e=>(!e.typeResult.isIncomplete||e.incompleteGenerationCount===n)&&(a?!e.expectedType||!(0,l.isTypeSame)(e.expectedType,a):!!e.expectedType))),r.length>=8&&r.slice(1)):r=[];const s={typeResult:t,expectedType:a,incompleteGenerationCount:n};this._activeDependentTypes.length>0&&(s.dependentTypes=Array.from(this._activeDependentTypes)),r.push(s),this._speculativeTypeCache.set(e.id,r)}getSpeculativeType(e,t){if(this._speculativeContextStack.some((t=>o.isNodeContainedWithin(e,t.speculativeRootNode)))){const n=this._speculativeTypeCache.get(e.id);if(n)for(const e of n)if(t){if(e.expectedType&&(0,l.isTypeSame)(t,e.expectedType)&&this._dependentTypesMatch(e))return e}else if(!e.expectedType&&this._dependentTypesMatch(e))return e}}_dependentTypesMatch(e){var t;const n=null!==(t=e.dependentTypes)&&void 0!==t?t:[];return n.length===this._activeDependentTypes.length&&n.every(((e,t)=>{const n=this._activeDependentTypes[t];return e.speculativeRootNode===n.speculativeRootNode&&(0,l.isTypeSame)(e.dependentType,n.dependentType)}))}}},58260:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.getVariableDocString=t.getFunctionOrClassDeclDocString=t.getClassDocString=t.getModuleDocString=t.getModuleDocStringFromUris=t.getModuleDocStringFromModuleNodes=t.getVariableInStubFileDocStrings=t.getPropertyDocStringInherited=t.getOverloadedFunctionDocStringsInherited=t.getFunctionDocStringInherited=void 0;const i=n(65392),o=s(n(28340)),l=n(76392),p=n(8312),c=n(28040),d=n(808);function u(e,t){if(5===e.category){if(0===e.overloads.length)return!1;e=e.overloads[0]}return!!e.details.methodClass&&p.ClassType.isBuiltIn(e.details.methodClass)&&!!e.boundToType&&!p.ClassType.isBuiltIn(e.boundToType)}function m(e,t){const n=[];if(!(0,l.isStubFile)(e.uri))return n;for(const a of t.findDeclarations(e))if((0,i.isVariableDeclaration)(a)&&a.docString)n.push(a.docString);else if((0,i.isClassDeclaration)(a)||(0,i.isFunctionDeclaration)(a)){const e=h(a);e&&n.push(e)}return n}function y(e){for(const t of e)if(t.statements){const e=o.getDocString(t.statements);if(e)return e}}function g(e,t){const n=[];for(const a of e)(0,l.isStubFile)(a)&&(0,c.addIfNotNull)(n,t.getModuleNode(a)),(0,c.appendArray)(n,t.findModules(a));return y(n)}function h(e){var t,n,a;return o.getDocString(null!==(a=null===(n=null===(t=e.node)||void 0===t?void 0:t.suite)||void 0===n?void 0:n.statements)&&void 0!==a?a:[])}function f(e,t,n){if(!(0,p.isOverloadedFunction)(e))return;const a=[];if(e.overloads.some((e=>e.details.docString)))e.overloads.forEach((e=>{e.details.docString&&a.push(e.details.docString)}));else if(t&&(0,l.isStubFile)(t.uri)&&(0,i.isFunctionDeclaration)(t)){const e=v(n.findFunctionDeclarations(t));e&&a.push(e)}return a}function T(e,t){let n=v([e]);if(!n&&(0,l.isStubFile)(e.uri)){n=v(t.findFunctionDeclarations(e))}return n}function v(e){for(const t of e){const e=h(t);if(e)return e}}t.getFunctionDocStringInherited=function(e,t,n,a){let r;if(!u(e)&&t&&(0,i.isFunctionDeclaration)(t)&&(r=function(e,t,n){if(!(0,p.isFunction)(e))return;let a=e.details.docString;!a&&t&&(a=T(t,n));!a&&e.details.declaration&&(a=T(e.details.declaration,n));return a}(e,t,n)),!r&&a){const t=e.details.name,s=(0,d.getClassMemberIterator)(a,t,85);for(const e of s){if(e.symbol.getDeclarations().length>0){const t=e.symbol.getDeclarations().slice(-1)[0];if((0,i.isFunctionDeclaration)(t)&&(r=T(t,n),r))break}}}return r||e.details.docString},t.getOverloadedFunctionDocStringsInherited=function(e,t,n,a,r){var s;let i;if(!u(e))for(const a of t)if(i=f(e,a,n),i&&i.length>0)return i;if(r&&e.overloads.length>0){const t=e.overloads[0].details.name,o=(0,d.getClassMemberIterator)(r,t,85);for(const e of o){const t=e.symbol.getDeclarations().slice(-1)[0],r=null===(s=a.getTypeForDeclaration(t))||void 0===s?void 0:s.type;if(r&&(i=f(r,t,n),i&&i.length>0))break}}return null!=i?i:[]},t.getPropertyDocStringInherited=function(e,t,n){const a=o.getEnclosingClass(e.node.name,!1),r=a?n.getTypeOfClass(a):void 0;if(r)return function(e,t,n,a){var r,s;if(!e||!(0,i.isFunctionDeclaration)(e))return;const o=null===(r=n.getTypeForDeclaration(e))||void 0===r?void 0:r.type;if(!o||!(0,d.isMaybeDescriptorInstance)(o))return;const l=28===e.node.nodeType?e.node.name.value:void 0;if(!l)return;const c=(0,d.getClassIterator)(a,0);for(const[e]of c){if(!(0,p.isInstantiableClass)(e))continue;const a=p.ClassType.getSymbolTable(e).get(l),r=null==a?void 0:a.getDeclarations();if(r)for(const e of r)if((0,i.isFunctionDeclaration)(e)){const a=null===(s=n.getTypeForDeclaration(e))||void 0===s?void 0:s.type;if(a&&(0,d.isMaybeDescriptorInstance)(a)){const n=T(e,t);if(n)return n}}}return}(e,t,n,r.classType)},t.getVariableInStubFileDocStrings=m,t.getModuleDocStringFromModuleNodes=y,t.getModuleDocStringFromUris=g,t.getModuleDocString=function(e,t,n){var a;let r=e.docString;if(!r){r=g([null!==(a=null==t?void 0:t.uri)&&void 0!==a?a:e.fileUri],n)}return r},t.getClassDocString=function(e,t,n){let a=e.details.docString;if(!a&&t&&(0,i.isClassDeclaration)(t)&&(a=v([t]),!a&&t&&(0,l.isStubFile)(t.uri)&&6===t.type))for(const e of n.findDeclarations(t)){if((0,i.isVariableDeclaration)(e)&&e.docString){a=e.docString;break}if((0,i.isClassDeclaration)(e)||(0,i.isFunctionDeclaration)(e)){a=h(e);break}}if(!a&&t){const r=n.findClassDeclarationsByType(t.uri,e);if(r){a=v(r.filter((e=>(0,i.isClassDeclaration)(e))).map((e=>e)))}}return a},t.getFunctionOrClassDeclDocString=h,t.getVariableDocString=function(e,t){if(e)return void 0!==e.docString?e.docString:m(e,t).find((e=>e))}},508:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.createTypeEvaluator=t.maxCodeComplexity=void 0;const i=n(64704),o=n(28040),l=n(83181),p=n(72484),c=n(97652),d=n(96193),u=n(61328),m=n(55164),y=n(55084),g=n(95960),h=n(79428),f=n(87368),T=n(35964),v=s(n(9316)),b=n(94416),_=n(31508),C=n(99868),I=n(90272),k=n(33215),w=n(61340),S=n(91720),A=n(62744),x=n(60092),P=n(37356),N=n(86084),D=n(92488),F=s(n(28340)),E=n(3573),M=n(50520),O=n(85636),z=s(n(69160)),V=n(21084),U=n(52328),R=n(80944),L=n(8e4),j=n(42676),B=n(90549),q=s(n(3388)),W=n(808),G=n(97632),K=n(45468),$=n(8312),H=new Map([["asyncio.futures.Future",u.pythonVersion3_9],["asyncio.tasks.Task",u.pythonVersion3_9],["builtins.dict",u.pythonVersion3_9],["builtins.frozenset",u.pythonVersion3_9],["builtins.list",u.pythonVersion3_9],["builtins._PathLike",u.pythonVersion3_9],["builtins.set",u.pythonVersion3_9],["builtins.tuple",u.pythonVersion3_9],["collections.ChainMap",u.pythonVersion3_9],["collections.Counter",u.pythonVersion3_9],["collections.defaultdict",u.pythonVersion3_9],["collections.DefaultDict",u.pythonVersion3_9],["collections.deque",u.pythonVersion3_9],["collections.OrderedDict",u.pythonVersion3_9],["queue.Queue",u.pythonVersion3_9]]),Z=new Map([["builtins.float",["builtins.int"]],["builtins.complex",["builtins.float","builtins.int"]],["builtins.bytes",["builtins.bytearray","builtins.memoryview"]]]),Y=64;t.maxCodeComplexity=768,t.createTypeEvaluator=function(e,n,a){const r=[],s=new Set,J=new j.SpeculativeTypeTracker,Q=[],X=[];let ee,te,ne,ae,re,se,ie,oe,le,pe,ce,de,ue,me,ye,ge,he,fe=new Set,Te=new Map,ve=new Map,be=new Map,_e=new Map,Ce=[],Ie=!1,ke=0;const we=[];let Se;function Ae(){ee&&(0,i.throwIfCancellationRequested)(ee)}function xe(e){return Se&&Ee(e)?Se.get(e.id):ve.get(e.id)}function Pe(e){const t=xe(e);return!!t&&(!t.typeResult.isIncomplete||t.incompleteGenerationCount===ke)}function Ne(e,t){var a,r;const s=xe(e);if(s&&!s.typeResult.isIncomplete){if(n.verifyTypeCacheEvaluatorFlags&&void 0!==t){const i=s.flags;if(void 0!==i&&t!==i){const s=v.getFileInfo(e),o=(0,d.convertOffsetToPosition)(e.start,s.lines),p=`Type cache flag mismatch for node type ${e.nodeType} (parent ${null!==(r=null===(a=e.parent)||void 0===a?void 0:a.nodeType)&&void 0!==r?r:"none"}): cached flags = ${i}, access flags = ${t}, file = {${s.fileUri} [${o.line+1}:${o.character+1}]}`;n.verifyTypeCacheEvaluatorFlags?(0,l.fail)(p):console.log(p)}}return s.typeResult.type}}function De(e,t,n,a,r=!1){const s=Se&&Ee(e)?Se:ve;if(t.isIncomplete){const n=s.get(e.id);void 0===n||(0,$.isTypeSame)(t.type,n.typeResult.type)||ke++}else ke++;s.set(e.id,{typeResult:t,flags:n,incompleteGenerationCount:ke}),Va(e)&&(J.trackEntry(s,e.id),r&&J.addSpeculativeType(e,t,ke,null==a?void 0:a.expectedType))}function Fe(e,t,n=0){De(e,t,n)}function Ee(e){const t=we.length;if(0===t)return!1;const n=we[t-1];let a=e;for(;a;){if(a===n.functionNode)return!0;a=a.parent}return!1}function Me(e,t){return r.findIndex((n=>n.symbolId===e.id&&n.declaration===t))}function Oe(e,t){const n=Me(e,t);if(n>=0){for(let e=n+1;e<r.length;e++)r[e].isResultValid=!1;return!1}return r.push({symbolId:e.id,declaration:t,isResultValid:!0}),!0}function ze(e){const t=r.pop();return(0,l.assert)(t.symbolId===e.id),t.isResultValid}function Ve(e,t,n){const a=Me(e,t);a>=0&&(r[a].partialType=n)}function Ue(e,t){const n=Me(e,t);if(n>=0)return r[n].partialType}function Re(e){var t,n;je(e);let a=null===(t=wa(e,(()=>{Ca(e)})))||void 0===t?void 0:t.type;if(a&&(0,$.isTypeVar)(a)&&0===a.details.declaredVariance){const t=a,r=F.getParentNodeOfType(e,76);if(10===(null===(n=null==r?void 0:r.parent)||void 0===n?void 0:n.nodeType)){const e=Yn(r.parent);if(e){Qn(e.classType);const n=e.classType.details.typeParameters.find((e=>(0,$.isTypeSame)(e,t,{ignoreTypeFlags:!0})));n&&(a=$.TypeBase.isInstance(a)?$.TypeVarType.cloneAsInstance(n):n)}}}return a&&(a=(0,W.transformPossibleRecursiveTypeAlias)(a)),a}function Le(e){let t=e,n=e;for(;n;)(0,h.isExpressionNode)(n)&&(t=n),n=n.parent;for(Ca(t),n=e;n;){const e=_e.get(n.id);if(e)return{type:e,node:n};if(n===t)break;n=n.parent}}function je(e){var t;if(!Ie){Ie=!0,ae=Ea(e,"object"),re=Fa(e,"type"),oe=Ea(e,"function"),se=function(e,t){return ot(e,t,["types"])}(e,"UnionType"),se&&(0,$.isClass)(se)&&(se.details.flags|=-2147483648),st(e,"Collection"),te=null!==(t=it(e,"NoneType"))&&void 0!==t?t:$.UnknownType.create(),ne=(0,$.isInstantiableClass)(te)?$.ClassType.cloneAsInstance(te):$.UnknownType.create(),le=Fa(e,"tuple"),pe=Fa(e,"bool"),ce=Fa(e,"int"),de=Fa(e,"str"),ue=Fa(e,"dict"),me=st(e,"TypedDict"),ye=st(e,"_TypedDict"),ie=st(e,"Awaitable"),he=st(e,"Mapping"),ge=it(e,"SupportsKeysAndGetItem"),ge||(ge=he);const n=Fa(e,"object");if(n&&(0,$.isInstantiableClass)(n)&&re&&(0,$.isInstantiableClass)(re)){const e=$.ClassType.createInstantiable("Any","typing.Any","typing",y.Uri.empty(),-2147483647,-1,void 0,re);e.details.baseClasses.push(n),(0,W.computeMroLinearization)(e);const t=$.AnyType.createSpecialForm();(0,$.isAny)(t)&&(t.specialForm=e)}}}function Be(e,t=0,n){const a=xe(e);if(a&&(!a.typeResult.isIncomplete||a.incompleteGenerationCount===ke))return a.typeResult;{const t=J.getSpeculativeType(e,null==n?void 0:n.expectedType);if(t&&(!t.typeResult.isIncomplete||t.incompleteGenerationCount===ke))return t.typeResult}let r;Ae(),n&&(n.expectedType=(0,W.transformPossibleRecursiveTypeAlias)(n.expectedType)),je(e);let s=0!=(128&t),i=!0;switch(e.nodeType){case 38:r=function(e,t){const n=v.getFileInfo(e),a=e.value;let r,s,i=!1;const o=0!=(4&t)||n.isStubFile;let p=Ma(e,a,!o,o&&0!=(256&t));if(!p){const n=Ra(e);n&&(p=Ma(n,n.value,!o,o&&0!=(256&t)))}if(p){let d=!o;if(5===p.scope.type&&(d=!1),r=p.symbol,St(n,r,e),!n.diagnosticRuleSet.analyzeUnannotatedFunctions){const t=F.getEnclosingFunction(e);if(t&&F.isUnannotatedFunction(t))return{type:$.AnyType.create(),isIncomplete:!1}}const u=Ka(r,d?e:void 0);let m=(0,W.transformPossibleRecursiveTypeAlias)(u.type);u.isIncomplete&&((0,$.isUnbound)(m)&&(m=$.UnknownType.create(!0)),i=!0),u.isRecursiveDefinition&&pt(e)&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.recursiveDefinition().format({name:a}),e);const y=!!m&&(0,$.isInstantiableClass)(m)&&$.ClassType.isSpecialBuiltIn(m);if(s=m,d&&!y){let n=m,o=!1;if(!p.isBeyondExecutionScope&&r.isInitiallyUnbound()&&(n=$.UnboundType.create(),4===p.scope.type)){(0,l.assert)(p.scope.parent);const e=p.scope.parent.lookUpSymbol(a);if(e){n=Ka(e).type}}if(p.isBeyondExecutionScope){const t=function(e,t,n){const a=t.symbol.getDeclarations();if(!a.every((e=>1===e.type||2===e.type||8===e.type)))return;if(!a.every((e=>2===e.type||z.getScopeForNode(e.node)===t.scope)))return;const r=z.getScopeHierarchy(e,t.scope);if(r&&r.length>=2){const a=z.findTopNodeInScope(e,r[r.length-2]);if(28===(null==a?void 0:a.nodeType)||30===(null==a?void 0:a.nodeType)||10===(null==a?void 0:a.nodeType)){const r=v.getFlowNode(a);if(r&&t.symbol.getDeclarations().every((e=>{if(2===e.type)return!0;const t=v.getFlowNode(e.node);return!!t&&!xr.isFlowNodeReachable(t,r,!0)}))){let r=n;return t.symbol.isInitiallyUnbound()&&(r=$.UnboundType.create()),Aa(e,a,{targetSymbolId:t.symbol.id,typeAtStart:{type:r}})}}}return}(e,p,m);(null==t?void 0:t.type)&&(s=t.type,n=s,o=!!t.isIncomplete)}const c=Aa(e,void 0,{targetSymbolId:r.id,typeAtStart:{type:n,isIncomplete:o},skipConditionalNarrowing:0!=(256&t)});c.type&&(s=c.type),c.isIncomplete&&(i=!0)}if(s=xt(e,s,t),0!=(256&t)&&u.includesVariableDecl&&!s.typeAliasInfo){let a=(0,$.isTypeVar)(s)||(0,W.isTypeAliasPlaceholder)(s);(0,$.isClass)(s)&&!s.includeSubclasses&&!r.hasTypedDeclarations()&&$.ClassType.isValidTypeAliasClass(s)&&(a=!0),a||n.isTypingStubFile||!u.includesIllegalTypeAliasDecl&&$.TypeBase.isInstantiable(s)&&0==(2&t)||(ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.typeAnnotationVariable(),e),s=$.UnknownType.create())}}else"reveal_type"===a||"reveal_locals"===a?s=$.AnyType.create():(ht(c.DiagnosticRule.reportUndefinedVariable,g.LocMessage.symbolIsUndefined().format({name:a}),e),s=$.UnknownType.create());(0,$.isParamSpec)(s)&&32&t&&(mt(g.LocMessage.paramSpecContext(),e),s=$.UnknownType.create());s=function(e,t,n){var a;if(!t.specialForm||t.typeAliasInfo)return t;if(!(0,$.isTypeVar)(t)||t.isVariadicInUnion||0!=(128&n))return t;if(0!=(33554432&n)&&t.details.isParamSpec)return $.TypeBase.cloneAsSpecialForm(t,void 0);const r=7===(null===(a=e.parent)||void 0===a?void 0:a.nodeType)&&6===e.parent.operator;if(r)return $.TypeBase.cloneAsSpecialForm(t,void 0);return $.ClassType.cloneAsInstance(t.specialForm)}(e,s,t),0==(256&t)&&qe(s,e);0!=(128&t)&&0==(1024&t)&&(0,$.isInstantiableClass)(s)&&$.ClassType.isBuiltIn(s,"Generic")&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.genericNotAllowed(),e);(0,$.isTypeVar)(s)&&!s.details.isSynthesized&&(s=At(e,s,t));return{type:s,isIncomplete:i}}(e,t);break;case 35:r=function(e,t){var n;let a=2;if(a|=567556&t,0!=(128&t)){const t=e.memberName.value;"args"!==t&&"kwargs"!==t||(a|=33554432)}const r=Be(e.leftExpression,a);if((0,W.isTypeAliasPlaceholder)(r.type))return{type:$.UnknownType.create(!0),isIncomplete:!0};const s=Pt(e,r,{method:"get"},2|t);if((0,_.isCodeFlowSupportedForReference)(e)){De(e,{...s,isIncomplete:!0},t),De(e.memberName,{...s,isIncomplete:!0},t);let n=s.type,a=!!s.isIncomplete;if((0,$.isUnbound)(n)){const t=Ct(r.type);let s;(0,$.isInstantiableClass)(t)?s=(0,W.lookUpClassMember)(t,e.memberName.value,1):(0,$.isClassInstance)(t)&&(s=(0,W.lookUpObjectMember)(t,e.memberName.value,1)),s&&(n=Ja(s),a=!1)}const i=Aa(e,void 0,{targetSymbolId:U.indeterminateSymbolId,typeAtStart:{type:n,isIncomplete:a},skipConditionalNarrowing:0!=(256&t)});i.type&&(s.type=i.type),i.isIncomplete&&(s.isIncomplete=!0),s.type=xt(e,s.type,t)}r.isIncomplete&&(s.isIncomplete=!0);let i=s.isIncomplete;if((0,$.isInstantiableClass)(s.type)&&!s.type.includeSubclasses||s.type.specialForm){const t=F.getParentNodeOfType(e,1);t&&9===(null===(n=null==t?void 0:t.parent)||void 0===n?void 0:n.nodeType)&&(i=!0)}i||kn(v.getFileInfo(e).diagnosticRuleSet.reportUnknownMemberType,c.DiagnosticRule.reportUnknownMemberType,e.memberName,s.type,e,!1);return De(e.memberName,s,t),s}(e,t);break;case 24:r=function(e,t=0){const n=Be(e.baseExpression,2|t);128&t&&48===e.baseExpression.nodeType&&mt(g.LocMessage.stringNotSubscriptable(),e.baseExpression);if(0==(4&t)){let a=0!=(32768&t);if(a){const t=F.getExecutionScopeNode(e);36===(null==t?void 0:t.nodeType)&&(a=!1)}if(!a){const t=v.getFileInfo(e);if((0,$.isInstantiableClass)(n.type)&&$.ClassType.isBuiltIn(n.type)&&!n.type.aliasName){const a=H.get(n.type.details.fullName);void 0!==a&&t.executionEnvironment.pythonVersion.isLessThan(a)&&!t.isStubFile&&mt(g.LocMessage.classNotRuntimeSubscriptable().format({name:n.type.aliasName||n.type.details.name}),e.baseExpression)}}}const a=Mt(e,n,{method:"get"},t);if((0,_.isCodeFlowSupportedForReference)(e)){let r=!(0,$.isAny)(n.type);if(It(n.type,void 0,(e=>{(0,$.isClassInstance)(e)&&($.ClassType.isBuiltIn(e)||$.ClassType.isTypedDictClass(e))||(r=!1)})),r){De(e,{...a,isIncomplete:!0},t);const r=Aa(e,void 0,{targetSymbolId:U.indeterminateSymbolId,typeAtStart:{type:a.type,isIncomplete:!!n.isIncomplete||!!a.isIncomplete},skipConditionalNarrowing:0!=(256&t)});r.type&&(a.type=r.type),r.isIncomplete&&(a.isIncomplete=!0)}}n.isIncomplete&&(a.isIncomplete=!0);return a}(e,t);break;case 9:r=function(e,t,n){var a;let r;if(0!=(256&t)&&38===e.leftExpression.nodeType&&"type"===e.leftExpression.value){const t=new p.DiagnosticAddendum;t.addMessage(g.LocAddendum.useTypeInstead()),ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.typeCallNotAllowed()+t.getString(),e)}r=30===e.leftExpression.nodeType?function(e,t){(0,l.assert)(30===e.leftExpression.nodeType);const n=$.FunctionType.createSynthesizedInstance("");n.details.declaredReturnType=t?t.expectedType:$.UnknownType.create();let a=!1;e.arguments.forEach(((e,t)=>{const r=Be(e.valueExpression);r.isIncomplete&&(a=!0),$.FunctionType.addParameter(n,{category:0,name:`p${t.toString()}`,type:r.type,hasDeclaredType:!0})}));const r=e.leftExpression.parameters;if(r.length>0){const e=r[r.length-1];0!==e.category||e.name||$.FunctionType.addPositionOnlyParameterSeparator(n)}function s(){return Be(e.leftExpression,2,(0,W.makeInferenceContext)(n))}let i=a||Va(e)||(null==t?void 0:t.isTypeIncomplete)?za(e.leftExpression,s):s();i.typeErrors&&(i=Be(e.leftExpression,2));return i}(e,n):Be(e.leftExpression,2|4&t);const s=F.getArgumentsByRuntimeOrder(e).map((e=>({valueExpression:e.valueExpression,argumentCategory:e.argumentCategory,node:e,name:e.name})));let i={type:$.UnknownType.create()};(null==n?void 0:n.signatureTracker)&&(r.type=(0,W.ensureFunctionSignaturesAreUnique)(r.type,n.signatureTracker,e.leftExpression.start));if((0,W.isTypeAliasPlaceholder)(r.type))i.isIncomplete=!0;else{if(38===e.leftExpression.nodeType&&"super"===e.leftExpression.value)i=function(e){var t;e.arguments.length>2&&mt(g.LocMessage.superCallArgCount(),e.arguments[2]);const n=F.getEnclosingFunctionEvaluationScope(e),a=n?F.getEnclosingClass(n):void 0,r=a?null===(t=Yn(a))||void 0===t?void 0:t.classType:void 0;let s,i;if(e.arguments.length>0){s=Be(e.arguments[0].valueExpression).type;const t=Ct(s);(0,$.isAnyOrUnknown)(t)||(0,$.isInstantiableClass)(t)||ht(c.DiagnosticRule.reportArgumentType,g.LocMessage.superCallFirstArg().format({type:wr(s)}),e.arguments[0].valueExpression)}else if(r){if(s=null!=r?r:$.UnknownType.create(),n){const t=(0,S.getFunctionInfoFromDecorators)(Ar,n,!0);0!=(4&(null==t?void 0:t.flags))&&(mt(g.LocMessage.superCallZeroArgFormStaticMethod(),e.leftExpression),s=$.UnknownType.create())}}else mt(g.LocMessage.superCallZeroArgForm(),e.leftExpression),s=$.UnknownType.create();if(e.arguments.length>1){const t=Ct(Be(e.arguments[1].valueExpression).type);let n=!1;if((0,$.isAnyOrUnknown)(t)||((0,$.isClassInstance)(t)?((0,$.isInstantiableClass)(s)&&((0,W.derivesFromClassRecursive)($.ClassType.cloneAsInstantiable(t),s,!0)||(n=!0)),i=t):(0,$.isInstantiableClass)(t)?((0,$.isInstantiableClass)(s)&&($.ClassType.isBuiltIn(s,"type")||(0,W.derivesFromClassRecursive)(t,s,!0)||(n=!0)),i=t):n=!0),n)return ht(c.DiagnosticRule.reportArgumentType,g.LocMessage.superCallSecondArg().format({type:wr(s)}),e.arguments[1].valueExpression),{type:$.UnknownType.create()}}else if(r){i=$.ClassType.cloneAsInstance(r);const t=F.getEnclosingFunction(e);let n;if(t){const e=aa(t);if(e){const t=e.functionType;($.FunctionType.isClassMethod(t)||$.FunctionType.isConstructorMethod(t)||$.FunctionType.isInstanceMethod(t))&&t.details.parameters.length>0&&t.details.parameters[0].hasDeclaredType&&(n=Ct(t.details.parameters[0].type))}}if(i&&n){const e=(0,W.getTypeCondition)(n);e?i=(0,W.addConditionToType)(i,e):(0,$.isClass)(n)&&(i=n)}}let o=!0;if(e.arguments.length<=1){const t=F.getEnclosingFunction(e);if(t){const e=aa(t);e&&($.FunctionType.isStaticMethod(e.functionType)||$.FunctionType.isConstructorMethod(e.functionType)||$.FunctionType.isClassMethod(e.functionType))&&(o=!1)}}const l=e.parent;if(35===(null==l?void 0:l.nodeType)){const e=l.memberName.value;let t=(0,$.isClass)(s)?s:void 0,n=!1;i&&$.ClassType.isProtocolClass(i)&&t&&!$.ClassType.isSameGenericClass(i,t)&&(n=!0,t=void 0);const a=i?(0,W.lookUpClassMember)(i,e,0,t):void 0;let r;return a&&(0,$.isInstantiableClass)(a.classType)?(r=a.classType,n&&(r=$.ClassType.cloneIncludeSubclasses(r))):r=t&&!(0,$.isAnyOrUnknown)(t)&&!(0,W.derivesFromAnyOrUnknown)(t)&&ae&&(0,$.isClassInstance)(ae)?$.ClassType.cloneAsInstantiable(ae):$.UnknownType.create(),{type:o?(0,W.convertToInstance)(r,!1):r,bindToSelfType:i?$.TypeBase.cloneForCondition((0,W.synthesizeTypeVarForSelfCls)($.ClassType.cloneIncludeSubclasses(i,!1),!1),i.condition):void 0}}if((0,$.isInstantiableClass)(s))if(i){let e;if($.ClassType.isSameGenericClass(i,s))i.details.baseClasses.length>0&&(e=i.details.baseClasses[0]);else{const t=i.details.baseClasses.findIndex((e=>(0,$.isClass)(e)&&$.ClassType.isSameGenericClass(e,s)));t>=0&&t<i.details.baseClasses.length-1&&(e=i.details.baseClasses[t+1])}if(e)return(0,$.isInstantiableClass)(e)&&(e=(0,W.specializeForBaseClass)(i,e)),{type:o?(0,W.convertToInstance)(e):e};if(ae&&(0,$.isClassInstance)(ae)&&re&&(0,$.isInstantiableClass)(re))return{type:o?ae:(0,W.convertToInstance)(re)}}else{if(s.details.mro.some((e=>(0,$.isAnyOrUnknown)(e))))return{type:$.UnknownType.create()};const e=s.details.baseClasses;if(e.length>0){const t=e[0];if((0,$.isInstantiableClass)(t))return{type:o?$.ClassType.cloneAsInstance(t):t}}}return{type:$.UnknownType.create()}}(e);else if((0,$.isAnyOrUnknown)(r.type)&&38===e.leftExpression.nodeType&&"reveal_type"===e.leftExpression.value)i=qt(e,n);else if((0,$.isFunction)(r.type)&&"reveal_type"===r.type.details.builtInName)i=qt(e,n);else if((0,$.isFunction)(r.type)&&"assert_type"===r.type.details.builtInName)i=function(e,t){if(2!==e.arguments.length||0!==e.arguments[0].argumentCategory||void 0!==e.arguments[0].name||0!==e.arguments[0].argumentCategory||void 0!==e.arguments[1].name)return mt(g.LocMessage.assertTypeArgs(),e),{type:$.UnknownType.create()};const n=Be(e.arguments[0].valueExpression,void 0,t);if(n.isIncomplete)return{type:$.UnknownType.create(!0),isIncomplete:!0};const a=(0,W.convertToInstance)(Na(e.arguments[1]).type);if(!(0,$.isTypeSame)(a,n.type,{treatAnySameAsUnknown:!0,ignorePseudoGeneric:!0})){const t=kr(n.type,a,{expandTypeAlias:!0});ht(c.DiagnosticRule.reportAssertTypeFailure,g.LocMessage.assertTypeTypeMismatch().format({expected:t.destType,received:t.sourceType}),e.arguments[0].valueExpression)}return{type:n.type}}(e,n);else if((0,$.isAnyOrUnknown)(r.type)&&38===e.leftExpression.nodeType&&"reveal_locals"===e.leftExpression.value)0===e.arguments.length?i.type=function(e){let t,n=e;for(;n&&(t=z.getScopeForNode(n),!t||1===t.type);)n=n.parent;const a=[];t&&t.symbolTable.forEach(((e,t)=>{if(!e.isIgnoredForProtocolMatch()){const n=Ga(e);a.push(g.LocAddendum.typeOfSymbol().format({name:t,type:wr(n,{expandTypeAlias:!0})}))}}));a.length>0?ut(a.join("\n"),e):ut(g.LocMessage.revealLocalsNone(),e);return rt()}(e):mt(g.LocMessage.revealLocalsArgs(),e);else{const t=Zt(e,s,r,void 0,!1,n);i.type=null!==(a=t.returnType)&&void 0!==a?a:$.UnknownType.create(),t.argumentErrors?i.typeErrors=!0:i.overloadsUsedForCall=t.overloadsUsedForCall,t.isTypeIncomplete&&(i.isIncomplete=!0)}r.isIncomplete&&(i.isIncomplete=!0)}if(!Va(e)&&!r.isIncomplete){(0,$.isInstantiableClass)(r.type)&&$.ClassType.isBuiltIn(r.type,"TypeVar")&&v.getFileInfo(e).isTypingStubFile||s.forEach((e=>{e.valueExpression&&48!==e.valueExpression.nodeType&&!Pe(e.valueExpression)&&Be(e.valueExpression)}))}0!=(256&t)&&(ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.typeAnnotationCall(),e),i={type:$.UnknownType.create()});return i}(e,t,n);break;case 52:r=function(e,t,n){var a;if(0!=(256&t)&&1!==(null===(a=e.parent)||void 0===a?void 0:a.nodeType)){const t=new p.DiagnosticAddendum;return t.addMessage(g.LocAddendum.useTupleInstead()),ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.tupleInAnnotation()+t.getString(),e),{type:$.UnknownType.create()}}if(0!=(128&t)&&0===e.expressions.length&&!n)return{type:zt([]),isEmptyTupleShorthand:!0};let r,s=null==n?void 0:n.expectedType,i=n&&(0,$.isAny)(n.expectedType);if(n&&(0,$.isUnion)(n.expectedType)){let t;(0,W.doForEachSubtype)(n.expectedType,(n=>{if((0,$.isAny)(n)&&(i=!0),!t){const a=za(e,(()=>jt(e,(0,W.makeInferenceContext)(n))));a&&nr(n,a.type)&&(t=n)}}),!0),s=t}if(s){const t=jt(e,(0,W.makeInferenceContext)(s,!1,null==n?void 0:n.signatureTracker));if(t&&!t.typeErrors)return t;r=null==t?void 0:t.expectedTypeDiagAddendum}const o=function(e){const t=e.expressions.map((e=>Be(e))),n=t.some((e=>e.isIncomplete)),a=zt(Bt(t));if(n&&(0,W.getContainerDepth)(a)>8)return{type:$.UnknownType.create()};return{type:a,isIncomplete:n}}(e);i&&(o.type=$.AnyType.create());return{...o,expectedTypeDiagAddendum:r}}(e,t,n);break;case 11:r=function(e,t){let n;26===e.constType?n=0!=(128&t)?te:ne:33!==e.constType&&15!==e.constType&&9!==e.constType||(n=Ea(e,"bool"),n&&(0,$.isClassInstance)(n)&&(33===e.constType?n=$.ClassType.cloneWithLiteral(n,!0):15===e.constType&&(n=$.ClassType.cloneWithLiteral(n,!1))));return{type:null!=n?n:$.UnknownType.create()}}(e,t);break;case 48:{const n=0!=(8&t)&&!function(e){if(e.parent&&24===e.parent.nodeType){const t=Be(e.parent.baseExpression).type;if(t&&(0,$.isInstantiableClass)(t)&&$.ClassType.isSpecialBuiltIn(t,"Literal"))return!0}return!1}(e);n&&(s=!1),r=function(e,t,n){let a;if(n){let n=132|t;if(0==(4194304&t)&&(n|=524288),e.typeAnnotation)a=Be(e.typeAnnotation,n);else if(!e.typeAnnotation&&1===e.strings.length){const t=e.strings[0].token.flags;if(32&t)ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.annotationBytesString(),e),a={type:$.UnknownType.create()};else if(8&t)ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.annotationRawString(),e),a={type:$.UnknownType.create()};else if(64&t)ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.annotationFormatString(),e),a={type:$.UnknownType.create()};else{const t=function(e){const t=v.getFileInfo(e),n=new f.Parser,a=e.strings[0].value;let r=e.strings[0].start;49===e.strings[0].nodeType&&(r+=e.strings[0].token.prefixLength+e.strings[0].token.quoteMarkLength);const s=" ".repeat(r)+a,i=new f.ParseOptions;i.isStubFile=t.isStubFile,i.pythonVersion=t.executionEnvironment.pythonVersion,i.reportErrorsForParsedStringContents=!0;const o=n.parseTextExpression(s,r,a.length,i,void 0,void 0,t.typingSymbolAliases);if(o.parseTree&&62!==o.parseTree.nodeType)return o.diagnostics.forEach((t=>{mt(t.message,e)})),o.parseTree.parent=e,o.parseTree;return}(e);t&&(a=Be(t,n))}}a||(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.expectedTypeNotString(),e),a={type:$.UnknownType.create()})}else{let t=!0,n=!1;e.strings.forEach((e=>{const a=We(e);a.isIncomplete&&(n=!0);let r=!1;(0,$.isClassInstance)(a.type)&&($.ClassType.isBuiltIn(a.type,"str")&&void 0!==a.type.literalValue||$.ClassType.isBuiltIn(null==a?void 0:a.type,"LiteralString"))&&(r=!0),r||(t=!1)}));const r=0!=(32&e.strings[0].token.flags);if(e.strings.some((e=>27===e.nodeType))){if(t){const t=st(e,"LiteralString");t&&(0,$.isInstantiableClass)(t)&&(a={type:$.ClassType.cloneAsInstance(t)})}a||(a={type:Ea(e,r?"bytes":"str"),isIncomplete:n})}else a={type:Nn(e,r?"bytes":"str",e.strings.map((e=>e.value)).join("")),isIncomplete:n}}return a}(e,t,n);break}case 40:r=function(e,t){t=e.isImaginary?{type:Ea(e,"complex")}:e.isInteger?{type:Nn(e,"int",e.value)}:{type:Ea(e,"float")};return t}(e,r);break;case 18:r=function(e,t,n){var a,r;if(0!=(1&e))t={type:$.AnyType.create(!0)};else{t={type:null!==(r=null!==(a=Ea(n,"EllipsisType"))&&void 0!==a?a:Ea(n,"ellipsis"))&&void 0!==r?r:$.AnyType.create()}}return t}(t,r,e);break;case 55:r=(0,N.getTypeOfUnaryOperation)(Ar,e,t,n);break;case 7:{let a=t;s&&6!==e.operator&&(a&=-129),r=(0,N.getTypeOfBinaryOperation)(Ar,e,a,n);break}case 5:r=(0,N.getTypeOfAugmentedAssignment)(Ar,e,n);break;case 31:case 45:r=function(e,t,n){var a;if(0!=(256&t)&&31===e.nodeType&&1!==(null===(a=e.parent)||void 0===a?void 0:a.nodeType)){const t=new p.DiagnosticAddendum;t.addMessage(g.LocAddendum.useListInstead()),ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.listInAnnotation()+t.getString(),e)}let r,s=null==n?void 0:n.expectedType;if(n&&(0,$.isUnion)(n.expectedType)){let t,a;(0,W.doForEachSubtype)(n.expectedType,(n=>{if(a&&!a.typeErrors)return;const r=za(e,(()=>vn(e,(0,W.makeInferenceContext)(n))));r&&nr(n,r.type)&&(!a||a.typeErrors&&!r.typeErrors)&&(t=n,a=r)}),!0),s=t}if(s){const t=vn(e,(0,W.makeInferenceContext)(s));if(t&&!t.typeErrors)return t;r=null==t?void 0:t.expectedTypeDiagAddendum}const i=function(e,t){const n=31===e.nodeType?"list":"set",a=45===e.nodeType;let r=!1,s=!1,i=!1,o=[];e.entries.forEach(((e,t)=>{let n;n=32!==e.nodeType||e.isGenerator?Be(e):Sn(e),n.isIncomplete&&(s=!0),n.typeErrors&&(i=!0),t<Y&&o.push(n.type),!a||n.isIncomplete||n.typeErrors||_n(e,n.type,!1)})),o=o.map((e=>Ge(e)));let l=t?$.AnyType.create():$.UnknownType.create();if(o.length>0){const a=v.getFileInfo(e);l="list"===n&&a.diagnosticRuleSet.strictListInference||"set"===n&&a.diagnosticRuleSet.strictSetInference||t?(0,$.combineTypes)(o,B.maxSubtypesForInferredType):(0,W.areTypesSame)(o,{ignorePseudoGeneric:!0})?o[0]:l}else r=!0;const p=Fa(e,n),c=(0,$.isInstantiableClass)(p)?$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(p,[l],!0,void 0,void 0,r)):$.UnknownType.create();if(s&&(0,W.getContainerDepth)(c)>8)return{type:$.UnknownType.create()};return{type:c,isIncomplete:s,typeErrors:i}}(e,void 0!==n);return{...i,expectedTypeDiagAddendum:r}}(e,t,n);break;case 46:r=function(e){Va(e)||(e.startValue&&Be(e.startValue),e.endValue&&Be(e.endValue),e.stepValue&&Be(e.stepValue));return{type:Ea(e,"slice")}}(e);break;case 6:r=function(e,t,n){if(0!=(256&t))return mt(g.LocMessage.awaitNotAllowed(),e),{type:$.UnknownType.create()};const a=n?ca(e,n.expectedType,!1,!1):void 0,r=Be(e.expression,t,(0,W.makeInferenceContext)(a)),s={type:tt(r.type,e.expression),isIncomplete:r.isIncomplete,typeErrors:r.typeErrors};r.isIncomplete&&(s.isIncomplete=!0);return s}(e,t,n);break;case 51:r=(0,N.getTypeOfTernaryOperation)(Ar,e,t,n);break;case 32:r=function(e,t){let n=!1,a=!1,r=e.forIfNodes.some(((e,t)=>!(33!==e.nodeType||!e.isAsync)||t>0&&F.containsAwaitNode(e))),s=$.UnknownType.create();F.containsAwaitNode(e.expression)&&(r=!0);const i=st(e,r?"AsyncGenerator":"Generator"),o=bn(e,i,t),l=Sn(e,o);l.isIncomplete&&(n=!0);l.typeErrors&&(a=!0);let p=l.type;o&&(0,W.containsLiteralType)(o)||(p=Ge(p));i&&(0,$.isInstantiableClass)(i)&&(s=$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(i,r?[p,rt()]:[p,rt(),rt()],!0)));return{type:s,isIncomplete:n,typeErrors:a}}(e,n);break;case 15:r=function(e,t,n){var a;if(0!=(256&t)&&1!==(null===(a=e.parent)||void 0===a?void 0:a.nodeType)){const t=new p.DiagnosticAddendum;t.addMessage(g.LocAddendum.useDictInstead()),ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.dictInAnnotation()+t.getString(),e)}let r=null==n?void 0:n.expectedType;if(n&&(0,$.isUnion)(n.expectedType)){let t,a;(0,W.doForEachSubtype)(n.expectedType,(n=>{if(a&&!a.typeErrors)return;const r=za(e,(()=>fn(e,(0,W.makeInferenceContext)(n))));r&&nr(n,r.type)&&(!a||a.typeErrors&&!r.typeErrors)&&(t=n,a=r)}),!0),r=t}let s;if(r){s=new p.DiagnosticAddendum;const t=fn(e,(0,W.makeInferenceContext)(r),s);if(t)return t}const i=function(e,t){const n=t?$.AnyType.create():$.UnknownType.create();let a=n,r=n;const s=[],i=[];let o=!1,l=!1,p=!1;const c=Tn(e,s,i,t,!1);c.isIncomplete&&(l=!0);c.typeErrors&&(p=!0);const d=s.map((e=>Ge(e.type))),u=i.map((e=>Ge(e.type)));a=d.length>0?(0,$.combineTypes)(d):n,u.length>0?r=v.getFileInfo(e).diagnosticRuleSet.strictDictionaryInference||t?(0,$.combineTypes)(u):(0,W.areTypesSame)(u,{ignorePseudoGeneric:!0})?u[0]:n:(r=n,o=!0);const m=Fa(e,"dict"),y=(0,$.isInstantiableClass)(m)?$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(m,[a,r],!0,void 0,void 0,o)):$.UnknownType.create();if(l&&(0,W.getContainerDepth)(y)>8)return{type:$.UnknownType.create()};return{type:y,isIncomplete:l,typeErrors:p}}(e,!!n);return{...i,expectedTypeDiagAddendum:s}}(e,t,n);break;case 30:r=function(e,t){let n=[];t&&(0,W.mapSubtypes)(t.expectedType,(e=>{if((0,$.isFunction)(e)&&n.push(e),(0,$.isClassInstance)(e)){const t=Je(e,"__call__");t&&(0,$.isFunction)(t)&&n.push(t)}}));if(n.length<=1)return In(e,n.length>0?n[0]:void 0,t,!1);n=(0,W.sortTypes)(n);for(const a of n){if(!In(e,a,t,!0).typeErrors)return In(e,a,t,!1)}return In(e,n[0],t,!0)}(e,n);break;case 3:r=Be(e.rightExpression,t,n),kt(e.leftExpression,r.type,!!r.isIncomplete,e.rightExpression,!0,!0);break;case 4:0!=(256&t)&&mt(g.LocMessage.walrusNotAllowed(),e),r=Be(e.rightExpression,t,n),kt(e.name,r.type,!!r.isIncomplete,e.rightExpression,!0),i=!1;break;case 60:r=function(e){let t,n,a=!1;const r=F.getEnclosingFunction(e);if(r){const e=aa(r);if(e){const a=$.FunctionType.getSpecializedReturnType(e.functionType);if(a){t=(0,W.getGeneratorYieldType)(a,!!r.isAsync);const e=(0,W.getGeneratorTypeArgs)(a);e&&e.length>=2&&(n=e[1])}}}if(e.expression){Be(e.expression,void 0,(0,W.makeInferenceContext)(t)).isIncomplete&&(a=!0)}return{type:n||$.UnknownType.create(),isIncomplete:a}}(e);break;case 61:r=function(e){const t=Be(e.expression),n=t.type,a=(0,W.mapSubtypes)(n,(n=>{var a,r;let s=(0,W.getGeneratorTypeArgs)(n);if(s)return s.length>=2?s[2]:$.UnknownType.create();if((0,$.isClassInstance)(n)&&$.ClassType.isBuiltIn(n,"Coroutine"))return $.UnknownType.create();const i=null!==(r=null===(a=at(t,!1,e))||void 0===a?void 0:a.type)&&void 0!==r?r:$.UnknownType.create();return s=(0,W.getGeneratorTypeArgs)(i),s&&s.length>=2?s[2]:$.UnknownType.create()}));return{type:a}}(e);break;case 56:r=function(e,t,n){var a;let r,s;if(n){const t=Fa(e,"Iterable");t&&(0,$.isInstantiableClass)(t)&&(s=$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(t,[n.expectedType],!0)))}const i=Be(e.expression,t,(0,W.makeInferenceContext)(s)),o=i.type;if(0==(64&t)&&(0,$.isVariadicTypeVar)(o)&&!o.isVariadicUnpacked)r={type:$.TypeVarType.cloneForUnpacked(o)};else if(0!=(2097152&t)&&(0,$.isInstantiableClass)(o)&&$.ClassType.isBuiltIn(o,"tuple"))r={type:$.ClassType.cloneForUnpacked(o)};else if(0!=(256&t))mt(g.LocMessage.unpackInAnnotation(),e,e.starToken),r={type:$.UnknownType.create()};else{const t=null!==(a=nt(i,!1,e))&&void 0!==a?a:{type:$.UnknownType.create(!!i.isIncomplete),isIncomplete:i.isIncomplete};r={type:t.type,typeErrors:i.typeErrors,unpackedType:o,isIncomplete:t.isIncomplete}}return r}(e,t,n);break;case 54:r=Be(e.typeAnnotation,33256);break;case 49:case 27:r=We(e);break;case 0:Oa(e,(()=>{e.child&&Be(e.child)})),r={type:$.UnknownType.create()};break;default:(0,l.assertNever)(e,`Illegal node type: ${e.nodeType}`)}if(r||(0,l.fail)(`Unhandled expression type '${F.printExpression(e)}'`),s&&function(e,t,n){var a;if(e.isIncomplete)return;64&t&&(0,$.isVariadicTypeVar)(e.type)&&!e.type.isVariadicInUnion&&(mt(g.LocMessage.typeVarTupleContext(),n),e.type=$.UnknownType.create());if(!(0,W.isEffectivelyInstantiable)(e.type)){const t=(0,$.isClassInstance)(e.type)&&$.ClassType.isTupleClass(e.type)&&0===(null===(a=e.type.tupleTypeArguments)||void 0===a?void 0:a.length),r=(0,$.isClassInstance)(e.type)&&$.ClassType.isBuiltIn(e.type,["EllipsisType","ellipsis"]);t||r||(Tt(e.type,n),e.type=$.UnknownType.create(),e.typeErrors=!0)}}(r,t,e),(0,$.isInstantiableClass)(r.type)&&r.type.includePromotions&&!r.type.includeSubclasses&&$.ClassType.isBuiltIn(r.type,"bytes")&&v.getFileInfo(e).diagnosticRuleSet.disableBytesTypePromotions&&(r={...r,type:$.ClassType.cloneRemoveTypePromotions(r.type)}),De(e,r,t,n,i),n&&!(0,$.isAnyOrUnknown)(n.expectedType)&&!(0,$.isNever)(n.expectedType)&&(_e.set(e.id,n.expectedType),n.signatureTracker&&(0,$.isFunction)(r.type)&&(r.type=(0,W.ensureFunctionSignaturesAreUnique)(r.type,n.signatureTracker,e.start)),!r.isIncomplete&&!r.expectedTypeDiagAddendum)){const t=new p.DiagnosticAddendum;nr(n.expectedType,r.type,t,void 0,void 0,1024)||(r.typeErrors=!0,r.expectedTypeDiagAddendum=t,t.addTextRange(e))}return r}function qe(e,t){let n=!1,a="";if((0,$.isInstantiableClass)(e)&&!e.includeSubclasses?(n=$.ClassType.isTypeCheckOnly(e),a=e.details.name):(0,$.isFunction)(e)&&(n=$.FunctionType.isTypeCheckOnly(e),a=e.details.name),n){v.getFileInfo(t).isStubFile||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeCheckOnly().format({name:a}),t)}}function We(e){const t=0!=(32&e.token.flags);let n,a=!1;if(27===e.nodeType){let r=!0;if(e.fieldExpressions.forEach((e=>{const t=Be(e),n=t.type;t.isIncomplete&&(a=!0),(0,W.doForEachSubtype)(n,(e=>{(0,$.isClassInstance)(e)&&($.ClassType.isBuiltIn(e,"LiteralString")||$.ClassType.isBuiltIn(e,"str")&&void 0!==e.literalValue)||(r=!1)}))})),!t&&r){const t=st(e,"LiteralString");t&&(0,$.isInstantiableClass)(t)&&(n={type:$.ClassType.cloneAsInstance(t),isIncomplete:a})}n||(n={type:Ea(e,t?"bytes":"str"),isIncomplete:a},(0,$.isClass)(n.type)&&n.type.includePromotions&&(n.type=$.ClassType.cloneRemoveTypePromotions(n.type)))}else n={type:Nn(e,t?"bytes":"str",e.value),isIncomplete:a};return n}function Ge(e){var t,n,a;return(0,$.isUnion)(e)&&e.subtypes.length>0&&((null===(t=e.literalInstances.literalStrMap)||void 0===t?void 0:t.size)===e.subtypes.length||(null===(n=e.literalInstances.literalIntMap)||void 0===n?void 0:n.size)===e.subtypes.length||(null===(a=e.literalInstances.literalEnumMap)||void 0===a?void 0:a.size)===e.subtypes.length)?Ge(e.subtypes[0]):(0,W.mapSubtypes)(e,(e=>{if((0,$.isClass)(e)){if(void 0!==e.literalValue)return $.ClassType.cloneWithLiteral(e,void 0);if($.ClassType.isBuiltIn(e,"LiteralString")&&de&&(0,$.isInstantiableClass)(de)){let t=$.ClassType.cloneAsInstance(de);return e.condition&&(t=$.TypeBase.cloneForCondition(t,(0,W.getTypeCondition)(e))),t}}return e}))}function Ke(e,t){return $e(e,{associateTypeVarsWithScope:!0,allowTypeVarTuple:1===t,allowUnpackedTypedDict:2===t,allowUnpackedTuple:1===t})}function $e(e,t){var n,a,r;const s=v.getFileInfo(e);if(s.isTypingStubFile||s.isTypingExtensionsStubFile){const t=function(e){if(!e.parent||54!==e.parent.nodeType)return;if(38!==e.parent.valueExpression.nodeType)return;const t=e.parent.valueExpression,n=t.value,a=new Map([["Tuple",{alias:"tuple",module:"builtins"}],["Generic",{alias:"",module:"builtins",isSpecialForm:!0}],["Protocol",{alias:"",module:"builtins",isSpecialForm:!0}],["Callable",{alias:"",module:"builtins",isSpecialForm:!0}],["Type",{alias:"type",module:"builtins"}],["ClassVar",{alias:"",module:"builtins",isSpecialForm:!0}],["Final",{alias:"",module:"builtins",isSpecialForm:!0}],["Literal",{alias:"",module:"builtins",isSpecialForm:!0}],["TypedDict",{alias:"_TypedDict",module:"self"}],["Union",{alias:"",module:"builtins",isSpecialForm:!0}],["Optional",{alias:"",module:"builtins",isSpecialForm:!0}],["Annotated",{alias:"",module:"builtins",isSpecialForm:!0}],["TypeAlias",{alias:"",module:"builtins",isSpecialForm:!0}],["Concatenate",{alias:"",module:"builtins",isSpecialForm:!0}],["TypeGuard",{alias:"",module:"builtins",isSpecialForm:!0,typeParamVariance:3}],["Unpack",{alias:"",module:"builtins",isSpecialForm:!0}],["Required",{alias:"",module:"builtins",isSpecialForm:!0}],["NotRequired",{alias:"",module:"builtins",isSpecialForm:!0}],["Self",{alias:"",module:"builtins",isSpecialForm:!0}],["NoReturn",{alias:"",module:"builtins",isSpecialForm:!0}],["Never",{alias:"",module:"builtins",isSpecialForm:!0}],["LiteralString",{alias:"",module:"builtins",isSpecialForm:!0}],["ReadOnly",{alias:"",module:"builtins",isSpecialForm:!0}],["TypeIs",{alias:"",module:"builtins",isSpecialForm:!0,typeParamVariance:2}]]).get(n);if(a){const t=Ne(e,0);if(t)return(0,l.assert)((0,$.isInstantiableClass)(t)),t;const r=qn(e,n,a);return"LiteralString"===n&&(r.details.baseClasses.push(null!=de?de:$.AnyType.create()),(0,W.computeMroLinearization)(r)),De(e,{type:r},0),r}return}(e);if(t)return t}let i=393;(null==t?void 0:t.isVariableAnnotation)&&(i|=32768),(null==t?void 0:t.allowFinal)||(i|=16),(null==t?void 0:t.allowClassVar)||(i|=131072),(null==t?void 0:t.allowTypeVarTuple)?i|=2097152:i|=64,(null==t?void 0:t.allowParamSpec)||(i|=32),(null==t?void 0:t.associateTypeVarsWithScope)&&(i|=8192),(null==t?void 0:t.allowUnpackedTypedDict)&&(i|=8388608),(null==t?void 0:t.allowUnpackedTuple)&&(i|=2097152),(null==t?void 0:t.notParsedByInterpreter)&&(i|=524288),(null==t?void 0:t.allowRequired)&&(i|=1048576),(0,T.isAnnotationEvaluationPostponed)(s)&&(i|=4),3===(null===(n=null==e?void 0:e.parent)||void 0===n?void 0:n.nodeType)&&e.parent.typeAnnotationComment===e?i|=524292:62===(null===(a=null==e?void 0:e.parent)||void 0===a?void 0:a.nodeType)?(e.parent.returnTypeAnnotation===e||e.parent.paramTypeAnnotations.some((t=>t===e)))&&(i|=524292):41===(null===(r=null==e?void 0:e.parent)||void 0===r?void 0:r.nodeType)&&e.parent.typeAnnotationComment===e&&(i|=524292);const o=Be(e,i).type;return(0,$.isModule)(o)&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.moduleAsType(),e),(0,W.convertToInstance)(o)}function He(e,t=0){if(e=Ct(e),t>$.maxTypeRecursionCount)return!0;switch(t++,e.category){case 0:case 1:case 2:case 3:return!0;case 8:return void 0!==(0,$.findSubtype)(e,(e=>He(e,t)));case 4:case 5:case 7:case 9:return!1;case 6:{if($.TypeBase.isInstantiable(e))return!1;if((0,W.isTupleClass)(e)&&e.tupleTypeArguments)return(0,W.isUnboundedTupleClass)(e)||0===e.tupleTypeArguments.length;const t=e.details.mro.find((e=>!(0,$.isClass)(e)||(0,W.isTupleClass)(e)));if(t&&(0,$.isClass)(t)&&t.tupleTypeArguments)return(0,W.isUnboundedTupleClass)(t)||0===t.tupleTypeArguments.length;if($.ClassType.isBuiltIn(e,"bool")&&void 0!==e.literalValue)return!1===e.literalValue;if($.ClassType.isProtocolClass(e))return!0;if((0,W.lookUpObjectMember)(e,"__len__"))return!0;const n=(0,W.lookUpObjectMember)(e,"__bool__");if(n){const e=Ja(n);if((0,$.isFunction)(e)&&e.details.declaredReturnType){const t=e.details.declaredReturnType;if((0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"bool")&&!0===t.literalValue)return!1}return!0}return $.ClassType.isBuiltIn(e,"object")}}}function Ze(e,t=0){if(e=Ct(e),t>$.maxTypeRecursionCount)return!0;switch(t++,e.category){case 1:case 4:case 5:case 7:case 9:case 3:case 2:return!0;case 8:return void 0!==(0,$.findSubtype)(e,(e=>Ze(e,t)));case 0:return!1;case 6:{if($.TypeBase.isInstantiable(e))return!0;if((0,W.isNoneInstance)(e))return!1;if((0,W.isTupleClass)(e)&&e.tupleTypeArguments&&0===e.tupleTypeArguments.length)return!1;if(!1===e.literalValue||0===e.literalValue||e.literalValue===BigInt(0)||""===e.literalValue)return!1;if($.ClassType.isProtocolClass(e))return!0;const t=(0,W.lookUpObjectMember)(e,"__bool__");if(t){const e=Ja(t);if((0,$.isFunction)(e)&&e.details.declaredReturnType){const t=e.details.declaredReturnType;if((0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"bool")&&!1===t.literalValue)return!1}}return!0}}}function Ye(e,t,n,a={method:"get"},r=void 0,s=0,i,o=0){if($.ClassType.isPartiallyEvaluated(t))return e&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.classDefinitionCycle().format({name:t.details.name}),e),{type:$.UnknownType.create()};(0,$.isInstantiableClass)(t)&&!t.includeSubclasses&&t.details.typeParameters.length>0&&0==(512&s)&&(t=(0,W.specializeWithDefaultTypeArgs)(t));const l=$.TypeBase.isInstantiable(t),d=t.details.effectiveMetaclass;let u,m,y=l&&0!=(16&s);if("get"===a.method&&l&&d&&(0,$.isInstantiableClass)(d)&&!$.ClassType.isBuiltIn(d,"type")&&!$.ClassType.isSameGenericClass(d,t)){const r=Nt(e,d,n,a,void 0,512|s,t,o);if(r){const e=(0,$.isClassInstance)(r.type)&&$.ClassType.isPropertyClass(r.type);((0,W.isDescriptorInstance)(r.type,!0)||e)&&(y=!0)}}if(!y){let c=s;l?(c|=1552,c&=-33):c|=128,m=r?new p.DiagnosticAddendum:void 0,u=Nt(e,t,n,a,m,c,i,o)}if(!u&&d&&(0,$.isInstantiableClass)(d)){let i=s;l||(i|=552,i&=-17);const c=r?new p.DiagnosticAddendum:void 0;u=Nt(e,$.ClassType.cloneAsInstance(d),n,a,c,i,l?t:$.ClassType.cloneAsInstantiable(t),o),(null==u?void 0:u.isDescriptorError)&&(m=c)}if(u)return u.isDescriptorError&&r&&m&&r.addAddendum(m),{type:u.type,classType:u.classType,isIncomplete:!!u.isTypeIncomplete,isAsymmetricAccessor:u.isAsymmetricAccessor,narrowedTypeForSet:u.narrowedTypeForSet,memberAccessDeprecationInfo:u.memberAccessDeprecationInfo,typeErrors:u.isDescriptorError};if((0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"type")&&t.includeSubclasses&&0==(8&s)){const e=t.typeArguments&&t.typeArguments.length>=1?t.typeArguments[0]:$.UnknownType.create();if((0,$.isAnyOrUnknown)(e))return{type:e,classType:$.UnknownType.create()}}r&&m&&r.addAddendum(m)}function Je(e,t,n,a,r=0){if(r>$.maxTypeRecursionCount)return;const s=Ye(void 0,e,t,void 0,a,528,n,++r);return s&&!s.typeErrors?(0,$.isFunction)(s.type)||(0,$.isOverloadedFunction)(s.type)?s.type:(0,$.isClassInstance)(s.type)?Je(s.type,"__call__",null!=n?n:$.ClassType.cloneAsInstance(e),a,r):(0,$.isAnyOrUnknown)(s.type)?(0,W.getUnknownTypeForCallable)():void 0:void 0}function Qe(e){var t,n;const a=e.details.parameters.findIndex((e=>2===e.category));if(a<0)return e;(0,l.assert)(a===e.details.parameters.length-1);const r=$.FunctionType.getEffectiveParameterType(e,a);if(!(0,$.isClassInstance)(r)||!$.ClassType.isTypedDictClass(r)||!r.isUnpacked)return e;const s=null!==(t=r.typedDictNarrowedEntries)&&void 0!==t?t:null===(n=r.details.typedDictEntries)||void 0===n?void 0:n.knownItems;if(!s)return e;const i=$.FunctionType.clone(e);i.details.parameters.splice(a),i.specializedTypes&&i.specializedTypes.parameterTypes.splice(a);return e.details.parameters.findIndex((e=>1===e.category))<0&&$.FunctionType.addKeywordOnlyParameterSeparator(i),s.forEach(((e,t)=>{$.FunctionType.addParameter(i,{category:0,name:t,hasDeclaredType:!0,type:e.valueType,hasDefault:!e.isRequired,defaultType:e.valueType})})),i}function Xe(e){if(54===e.nodeType&&38===e.valueExpression.nodeType){const t=Ma(e,e.valueExpression.value,!1);if(t){return void 0!==t.symbol.getDeclarations().find((e=>vr(e)))}}return!1}function et(e,t){var n,a;let r,s,i,o=!0,l=!1;switch(e.nodeType){case 38:{const t=Ma(e,e.value,!0);if(t&&(r=t.symbol,!(null===(n=$a(r,e))||void 0===n?void 0:n.type)&&3===t.scope.type)){const t=F.getEnclosingClassOrFunction(e);if(t&&10===t.nodeType){const n=Yn(t);if(n){const t=(0,W.lookUpClassMember)(n.classType,e.value,80);t&&(r=t.symbol)}}}break}case 54:return et(e.valueExpression,t);case 35:{const t=Ct(Be(e.leftExpression,2).type);let n;(0,$.isClassInstance)(t)?(n=(0,W.lookUpObjectMember)(t,e.memberName.value,64),s=t,i=null==n?void 0:n.classType,(null==n?void 0:n.isInstanceMember)&&(o=!1),l=!0):(0,$.isInstantiableClass)(t)&&(n=(0,W.lookUpClassMember)(t,e.memberName.value,80),s=t,i=null==n?void 0:n.classType),n&&(r=n.symbol);break}case 24:{const n=Ct(Be(e.baseExpression,2).type);if(n&&(0,$.isClassInstance)(n)){const a=Je(n,"__setitem__");if(a&&(0,$.isFunction)(a)&&a.details.parameters.length>=2){const e=$.FunctionType.getEffectiveParameterType(a,1);if(!(0,$.isAnyOrUnknown)(e))return e}else if($.ClassType.isTypedDictClass(n)){const a=(0,K.getTypeOfIndexedTypedDict)(Ar,e,n,t||{method:"get"});if(a)return a.type}}break}}if(r){let e=null===(a=$a(r))||void 0===a?void 0:a.type;if(e){if(l&&(0,$.isClassInstance)(e)){const t=Je(e,"__set__");if(t&&(0,$.isFunction)(t)&&t.details.parameters.length>=2&&(e=t.details.parameters[1].type,(0,$.isAnyOrUnknown)(e)))return}return s&&(i&&(0,$.isInstantiableClass)(i)&&(e=(0,W.partiallySpecializeType)(e,i)),((0,$.isFunction)(e)||(0,$.isOverloadedFunction)(e))&&o&&(e=gr(s,e))),e}}}function tt(e,t){if(!ie||!(0,$.isInstantiableClass)(ie)||1!==ie.details.typeParameters.length)return $.UnknownType.create();const n=$.ClassType.cloneAsInstance(ie);return(0,W.mapSubtypes)(e,(e=>{if(e=Ct(e),(0,$.isAnyOrUnknown)(e))return e;const a=t?new p.DiagnosticAddendum:void 0;if((0,$.isClassInstance)(e)){const t=new G.TypeVarContext((0,W.getTypeVarScopeId)(n));if(nr(n,e,a,t)){const e=(0,W.applySolvedTypeVars)(n,t);return(0,$.isClass)(e)&&e.typeArguments&&e.typeArguments.length>0?e.typeArguments[0]:$.UnknownType.create()}}return t&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeNotAwaitable().format({type:wr(e)})+(null==a?void 0:a.getString()),t),$.UnknownType.create()}))}function nt(e,t,n,a=!0){const r=t?"__aiter__":"__iter__",s=t?"__anext__":"__next__";let i=!0,o=(0,W.transformPossibleRecursiveTypeAlias)(e.type);o=Ct(o),o=(0,$.removeUnbound)(o),(0,W.isOptionalType)(o)&&a&&(e.isIncomplete||ht(c.DiagnosticRule.reportOptionalIterable,g.LocMessage.noneNotIterable(),n),o=(0,W.removeNoneFromUnion)(o));const l=(0,W.mapSubtypes)(o,(o=>{if(o=Ct(o),(0,$.isAnyOrUnknown)(o))return o;const l=new p.DiagnosticAddendum;if((0,$.isClass)(o)){if($.TypeBase.isInstance(o)&&(0,W.isTupleClass)(o)&&o.tupleTypeArguments&&0===o.tupleTypeArguments.length)return $.NeverType.createNever();const e=hn(o,r,[],n);if(e){const a=new p.DiagnosticAddendum,i=It(e,void 0,(e=>{if((0,$.isAnyOrUnknown)(e))return e;if((0,$.isClassInstance)(e)){let r=hn(e,s,[],n);if(r)return r=(0,W.mapSubtypes)(r,(e=>(0,$.isTypeVar)(e)&&(0,$.isUnpackedVariadicTypeVar)(e)?null!=ae?ae:$.UnknownType.create():e)),t?tt(r,n):r;a.addMessage(g.LocMessage.methodNotDefinedOnType().format({name:s,type:wr(e)}))}else a.addMessage(g.LocMessage.methodReturnsNonObject().format({name:r}))}));if(a.isEmpty())return i;l.addAddendum(a)}else{if(!t&&(0,$.isClassInstance)(o)){const e=hn(o,"__getitem__",[{type:ce&&(0,$.isInstantiableClass)(ce)?$.ClassType.cloneAsInstance(ce):$.UnknownType.create()}],n);if(e)return e}l.addMessage(g.LocMessage.methodNotDefined().format({name:r}))}}!e.isIncomplete&&a&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeNotIterable().format({type:wr(o)})+l.getString(),n),i=!1}));return i?{type:l,isIncomplete:e.isIncomplete}:void 0}function at(e,t,n,a=!0){const r=t?"__aiter__":"__iter__";let s=!0,i=Ct(e.type);(0,W.isOptionalType)(i)&&(!e.isIncomplete&&a&&ht(c.DiagnosticRule.reportOptionalIterable,g.LocMessage.noneNotIterable(),n),i=(0,W.removeNoneFromUnion)(i));const o=(0,W.mapSubtypes)(i,(e=>{if((0,$.isAnyOrUnknown)(e))return e;if((0,$.isClass)(e)){const t=hn(e,r,[],n);if(t)return Ct(t)}a&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeNotIterable().format({type:wr(e)}),n),s=!1}));return s?{type:o,isIncomplete:e.isIncomplete}:void 0}function rt(){return null!=ne?ne:$.UnknownType.create()}function st(e,t){var n;return null!==(n=ot(e,t,["typing"]))&&void 0!==n?n:ot(e,t,["typing_extensions"])}function it(e,t){return ot(e,t,["_typeshed"])}function ot(t,n,a){const r=v.getFileInfo(t),s=e({nameParts:a,importingFileUri:r.fileUri});if(!s)return;const i=s.symbolTable.get(n);return i?Ga(i):void 0}function lt(e){const n=28===e.nodeType?e:F.getExecutionScopeNode(e);if(v.getCodeFlowComplexity(n)>t.maxCodeComplexity){let t=n;28===n.nodeType?t=n.name:36===n.nodeType&&(t={start:0,length:0});const a=v.getFileInfo(e);return ft(a,a.diagnosticRuleSet.reportGeneralTypeIssues,c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.codeTooComplexToAnalyze(),t),!0}return!1}function pt(e,t){if(lt(e))return!0;const n=v.getFlowNode(e);if(!n)return!!e.parent&&pt(e.parent,t);const a=t?v.getFlowNode(t):void 0;return xr.isFlowNodeReachable(n,a)}function ct(e){const t=v.getAfterFlowNode(e);return!!t&&(!!lt(e)||!!xr.isFlowNodeReachable(t)&&!!function(e,t){const n=Sa(e.id,void 0);if(lt(e))return!0;const a=n.getTypeFromCodeFlow(t,void 0,{typeAtStart:{type:$.UnboundType.create()}});return void 0!==a.type&&!(0,$.isNever)(a.type)}(e,t))}function dt(e,t,n=!0){if(lt(e))return!0;const a=v.getFlowNode(e),r=v.getFlowNode(t);return!(!a||!r)&&(a===r?n:xr.isFlowNodeReachable(r,a,!0))}function ut(e,t,n){return yt("information",e,t,n)}function mt(e,t,n){return yt("error",e,t,n)}function yt(e,t,n,a){if(!gt(n)&&pt(n)){return v.getFileInfo(n).diagnosticSink.addDiagnosticWithTextRange(e,t,a||n)}}function gt(e){return Q.some((t=>F.isNodeContainedWithin(e,t)))||J.isSpeculative(e,!0)}function ht(e,t,n,a){const r=v.getFileInfo(n).diagnosticRuleSet[e];if("none"===r)return;const s=F.getEnclosingFunction(n);if(s){if(!v.getFileInfo(n).diagnosticRuleSet.analyzeUnannotatedFunctions&&F.isUnannotatedFunction(s)&&F.isNodeContainedWithin(n,s.suite))return;const e=F.getEnclosingClass(s,!0);if(0!=(524288&(0,S.getFunctionInfoFromDecorators)(Ar,s,!!e).flags))return}const i=yt(r,t,n,a);return i&&i.setRule(e),i}function ft(e,t,n,a,r){if("none"===t)return;const s=e.diagnosticSink.addDiagnosticWithTextRange(t,a,r);return n&&s.setRule(n),s}function Tt(e,t){const n=new p.DiagnosticAddendum;(0,$.isUnion)(e)&&(0,W.doForEachSubtype)(e,(e=>{(0,W.isEffectivelyInstantiable)(e)||n.addMessage(g.LocAddendum.typeNotClass().format({type:wr(e)}))})),ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeExpectedClass().format({type:wr(e)})+n.getString(),t)}function vt(e,t,n,a,r,s=!1,i){var o,l,d;const u=e.value,m=Ma(e,u,!1);if(!m)return;const y=m.symbol.getDeclarations();let h=null===(o=$a(m.symbol))||void 0===o?void 0:o.type;const f=v.getFileInfo(e);if(void 0===h&&3===m.scope.type){const t=F.getEnclosingClass(e);if(t){const n=Yn(t);if(n){const t=(0,W.lookUpClassMember)(n.classType,e.value,1);(null==t?void 0:t.isTypeDeclared)&&(h=Ja(t))}}}let T=t;const b=!!h&&(0,$.isClassInstance)(h)&&$.ClassType.isBuiltIn(h,"TypeAlias");if(h&&!b){let a=new p.DiagnosticAddendum;nr(h,t,a)?T=dr(e,h,t):(i&&(a=i),n||ht(c.DiagnosticRule.reportAssignmentType,g.LocMessage.typeAssignmentMismatch().format(kr(t,h))+a.getString(),null!=r?r:e,null!==(d=null!==(l=a.getEffectiveTextRange())&&void 0!==l?l:r)&&void 0!==d?d:e),T=h)}else{const t=z.getScopeForNode(e);3===(null==t?void 0:t.type)&&(!$.TypeBase.isInstance(T)||(0,R.isConstantName)(u)||fr(m.symbol)||(T=Ge(T)))}const _=y.findIndex((e=>1===e.type)),C=_>=0?y[_]:void 0,I=y.find(((e,t)=>_<t&&1!==e.type));C&&1===C.type&&(C.isConstant?(e!==(0,w.getNameNodeForDeclaration)(y[0])||I)&&ht(c.DiagnosticRule.reportConstantRedefinition,g.LocMessage.constantRedefinition().format({name:u}),e):Tr(C)&&!s&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.finalReassigned().format({name:u}),e)),n||kn(f.diagnosticRuleSet.reportUnknownVariableType,c.DiagnosticRule.reportUnknownVariableType,e,T,e,a),De(e,{type:T,isIncomplete:n},0)}function bt(e,t,n,a,r){var i;const o=Be(e.leftExpression,2),l=Ct(o.type);if(38===e.leftExpression.nodeType){const r=F.getEnclosingClass(e);if(r){const s=Yn(r);if(s&&(0,$.isInstantiableClass)(s.classType)&&((0,$.isClassInstance)(l)?$.ClassType.isSameGenericClass(l,s.classType)&&_t(e,t,n,!0,a):(0,$.isInstantiableClass)(l)&&$.ClassType.isSameGenericClass(l,s.classType)&&_t(e,t,n,!1,a),$.ClassType.isProtocolClass(s.classType))){const t=$.ClassType.getSymbolTable(s.classType).get(e.memberName.value);if(t){0===t.getDeclarations().filter((e=>!F.getEnclosingFunction(e.node))).length&&mt(g.LocMessage.assignmentInProtocol(),e.memberName)}}}}const p=Pt(e,o,{method:"set",setType:{type:t,isIncomplete:n},setErrorNode:a,setExpectedTypeDiag:r},0);var c;p.isAsymmetricAccessor&&(c=e,Va(void 0)||s.add(c.id));const d={type:null!==(i=p.narrowedTypeForSet)&&void 0!==i?i:t,isIncomplete:n,memberAccessDeprecationInfo:p.memberAccessDeprecationInfo};De(e.memberName,d,0),De(e,d,0)}function _t(e,t,n,a,r){var s;const i=e.memberName.value,o=v.getFileInfo(e),p=F.getEnclosingClass(e);if(!p)return;const d=Yn(p);if(d&&(0,$.isInstantiableClass)(d.classType)){let p=(0,W.lookUpClassMember)(d.classType,i,a?0:16);const u=$.ClassType.getSymbolTable(d.classType);if(p){const n=(0,$.isInstantiableClass)(p.classType)?p.classType:void 0,m=n&&$.ClassType.isSameGenericClass(d.classType,n);if(m&&a&&n){const t=$.ClassType.getInheritedSlotsNames(n);if(t&&n.details.localSlotsNames&&n.details.localSlotsNames.length>0&&!t.some((e=>e===i))){const t=(0,W.lookUpClassMember)(n,i,16);let a=!1;if(t){const e=Ga(t.symbol);((0,$.isAnyOrUnknown)(e)||(0,$.isUnbound)(e)||(0,W.isMaybeDescriptorInstance)(e))&&(a=!0)}a||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.slotsAttributeError().format({name:i}),e.memberName)}}if(m&&p.isInstanceMember===a){const t=u.get(i);(0,l.assert)(void 0!==t);const n=t.getDeclarations();n.length>0&&1===n[0].type&&r&&e.memberName!==n[0].node&&n[0].isConstant&&ht(c.DiagnosticRule.reportConstantRedefinition,g.LocMessage.constantRedefinition().format({name:e.memberName.value}),e.memberName)}else{const n=null===(s=$a(p.symbol))||void 0===s?void 0:s.type;if(n&&!(0,W.isProperty)(n)&&!p.isInstanceMember&&a){St(o,p.symbol,e.memberName);const n=Ja(p);t=(0,$.combineTypes)([t,n])}}}p=(0,W.lookUpClassMember)(d.classType,i,64),p||!r||n||kn(o.diagnosticRuleSet.reportUnknownMemberType,c.DiagnosticRule.reportUnknownMemberType,e.memberName,t,e,!0)}}function Ct(e,t=!1,n){return(0,W.mapSubtypes)(e,(e=>{var a,r;if((0,$.isParamSpec)(e)){if("args"===e.paramSpecAccess)return ae&&(0,$.isClassInstance)(ae)?zt([{type:ae,isUnbounded:!0}]):$.UnknownType.create();if("kwargs"===e.paramSpecAccess)return ue&&(0,$.isInstantiableClass)(ue)&&de&&(0,$.isInstantiableClass)(de)&&ae&&(0,$.isClassInstance)(ae)?$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(ue,[(0,W.convertToInstance)(de),ae],!0)):$.UnknownType.create()}if(t&&(0,$.isFunction)(e)&&0===e.details.parameters.length&&e.details.paramSpec)return $.FunctionType.cloneForParamSpec(e,(0,W.getUnknownTypeForCallable)());if((0,$.isTypeVar)(e)&&e.details.isVariadic){if(e.isVariadicInUnion){if($.TypeBase.isInstantiable(e)){if(re&&(0,$.isInstantiableClass)(re))return re}else if(ae)return ae;return $.AnyType.create()}return zt([{type:null!=ae?ae:$.UnknownType.create(),isUnbounded:!0}],!0)}if((0,$.isTypeVar)(e)){if(e.details.recursiveTypeAliasName)return e;if(e.details.constraints.length>0){const t=[];return e.details.constraints.forEach(((a,r)=>{if(n){const t=$.TypeVarType.getNameWithScope(e),a=n.find((e=>e.typeVar.nameWithScope===t));if(a&&a.constraintIndex!==r)return}$.TypeBase.isInstantiable(e)&&(a=(0,W.convertToInstantiable)(a)),t.push((0,W.addConditionToType)(a,[{typeVar:e,constraintIndex:r}]))})),(0,$.combineTypes)(t)}if(e.details.isExemptFromBoundCheck)return $.AnyType.create();let t=null!==(r=null!==(a=e.details.boundType)&&void 0!==a?a:ae)&&void 0!==r?r:$.UnknownType.create();return t=$.TypeBase.isInstantiable(e)?(0,W.convertToInstantiable)(t):t,(0,W.addConditionToType)(t,[{typeVar:e,constraintIndex:0}])}return e}))}function It(e,t,n,a=0){const r=[];let s=!1;function i(e,i){let o=(0,$.isUnion)(e)?e:Ct(e);o=(0,W.transformPossibleRecursiveTypeAlias)(o),(null==t?void 0:t.expandCallback)&&(o=t.expandCallback(o)),(0,W.doForEachSubtype)(o,((o,l,p)=>{var c;if(null==t?void 0:t.conditionFilter){const e=function(e,t,n){if(n>$.maxTypeRecursionCount)return e;if(n++,!$.TypeCondition.isCompatible((0,W.getTypeCondition)(e),t))return;if((0,$.isClass)(e)&&e.typeArguments&&!e.tupleTypeArguments){Qn(e);let a=!1;const r=e.typeArguments.map(((r,s)=>{if(s>=e.details.typeParameters.length)return r;if(3!==$.TypeVarType.getVariance(e.details.typeParameters[s]))return r;const i=It(r,{conditionFilter:t},(e=>e),n);return i!==r&&(a=!0),i}));if(a)return $.ClassType.cloneForSpecialization(e,r,!0)}return e}(o,t.conditionFilter,a);if(!e)return;o=e}let d=n(o,e,i&&l===p.length-1);if(d!==e&&(s=!0),d){const e=null===(c=(0,W.getTypeCondition)(o))||void 0===c?void 0:c.filter((e=>e.typeVar.details.constraints.length>0));e&&e.length>0&&(d=(0,W.addConditionToType)(d,e)),0!==r.length&&(0,$.isTypeSame)(d,r[r.length-1])||r.push(d)}}),null==t?void 0:t.sortSubtypes)}if((0,$.isUnion)(e)){((null==t?void 0:t.sortSubtypes)?(0,W.sortTypes)(e.subtypes):e.subtypes).forEach(((t,n)=>{i(t,n===e.subtypes.length-1)}))}else i(e,!0);if(!s)return e;const o=(0,$.combineTypes)(r);return 8===o.category&&$.UnionType.addTypeAliasSource(o,e),o}function kt(e,t,n,a,r=!1,s=!1,i){if((0,$.isTypeVar)(t)&&a&&9===a.nodeType){const n=Be(a.leftExpression,2).type;if((0,$.isInstantiableClass)(n)&&($.ClassType.isBuiltIn(n,"TypeVar")||$.ClassType.isBuiltIn(n,"TypeVarTuple")||$.ClassType.isBuiltIn(n,"ParamSpec"))){const n=54===e.nodeType?e.valueExpression:e;38===n.nodeType&&n.value===t.details.name||mt(t.details.isParamSpec?g.LocMessage.paramSpecAssignedName().format({name:$.TypeVarType.getReadableName(t)}):g.LocMessage.typeVarAssignedName().format({name:$.TypeVarType.getReadableName(t)}),n)}}switch(t=(0,$.removeUnbound)(t),e.nodeType){case 38:vt(e,t,n,r,a,s,i);break;case 35:bt(e,t,n,a,i);break;case 24:{const r=Be(e.baseExpression,2);Mt(e,r,{method:"set",setType:{type:t,isIncomplete:n},setErrorNode:a,setExpectedTypeDiag:i},0),De(e,{type:t,isIncomplete:n},0);break}case 31:case 52:!function(e,t,n,a){const r=31===e.nodeType?e.entries:e.expressions,s=new Array(r.length);for(let e=0;e<r.length;e++)s[e]=[];const i=r.findIndex((e=>56===e.nodeType)),o=r.findIndex((e=>56===e.nodeType));t=Ct(t);const l=new p.DiagnosticAddendum;(0,W.doForEachSubtype)(t,(t=>{var p,c;const d=(0,W.getSpecializedTupleType)(t);if(d&&d.tupleTypeArguments){const n=d.tupleTypeArguments.map((e=>(0,W.addConditionToType)(e.type,(0,W.getTypeCondition)(t),!0))),a=d.tupleTypeArguments.findIndex((e=>e.isUnbounded));if(a>=0&&n.length<s.length){const e=n.length>0?n[a]:$.AnyType.create();for(;n.length<s.length;)n.splice(a,0,e)}if(i>=0)if(n.length>s.length){const t=n.splice(i,n.length-s.length+1);let a=(0,$.combineTypes)(t);31===e.nodeType&&(a=Ge(a)),n.splice(i,0,a)}else n.length===s.length-1&&n.splice(i,0,$.NeverType.createNever());if(n.forEach(((e,t)=>{t<s.length&&s[t].push(e)})),n.length!==r.length){const a=l.createAddendum();a.addMessage((31===e.nodeType?g.LocAddendum.listAssignmentMismatch():g.LocAddendum.tupleAssignmentMismatch()).format({type:wr(t)})),a.createAddendum().addMessage((o>=0?g.LocAddendum.tupleSizeMismatchIndeterminateDest():g.LocAddendum.tupleSizeMismatch()).format({expected:o>=0?r.length-1:r.length,received:n.length}))}}else{const e=null!==(c=null===(p=nt({type:t,isIncomplete:n},!1,a))||void 0===p?void 0:p.type)&&void 0!==c?c:$.UnknownType.create();for(let n=0;n<r.length;n++)s[n].push((0,W.addConditionToType)(e,(0,W.getTypeCondition)(t)))}})),l.isEmpty()||ht(c.DiagnosticRule.reportAssignmentType,(31===e.nodeType?g.LocMessage.listAssignmentMismatch():g.LocMessage.tupleAssignmentMismatch()).format({type:wr(t)})+l.getString(),e),r.forEach(((e,t)=>{const r=s[t];kt(e,0===r.length?$.UnknownType.create():(0,$.combineTypes)(r),n,a,!0)})),De(e,{type:t,isIncomplete:n},0)}(e,t,n,a);break;case 54:{const o=$e(e.typeAnnotation,{isVariableAnnotation:!0,allowFinal:F.isFinalAllowedForAssignmentTarget(e.valueExpression),allowClassVar:F.isClassVarAllowedForAssignmentTarget(e.valueExpression)});if(!((0,$.isClassInstance)(o)&&($.ClassType.isBuiltIn(o,"Final")||$.ClassType.isBuiltIn(o,"ClassVar")))){(0,$.isClassInstance)(o)&&$.ClassType.isBuiltIn(o,"TypeAlias")||nr(o,t)&&((0,$.isClassInstance)(t)&&$.ClassType.isEnumClass(t)||(t=dr(e,o,t)))}kt(e.valueExpression,t,n,a,r,s,i);break}case 56:38===e.expression.nodeType&&vt(e.expression,Ea(e.expression,"list",[t]),!1,r,a);break;case 0:e.child&&Oa(e.child,(()=>{Be(e.child)}));break;default:mt(g.LocMessage.assignmentTargetExpr(),e)}}function wt(e){switch(e.nodeType){case 38:Be(e);break;case 35:{const t=Be(e.leftExpression,2),n=Pt(e,t,{method:"del"},0),a={type:n.type,memberAccessDeprecationInfo:n.memberAccessDeprecationInfo};De(e.memberName,a,0),De(e,a,0);break}case 24:{const t=Be(e.baseExpression,2);Mt(e,t,{method:"del"},0),De(e,{type:$.UnboundType.create()},0);break}case 52:e.expressions.forEach((e=>{wt(e)}));break;case 0:e.child&&Oa(e.child,(()=>{Be(e.child)}));break;default:ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.delTargetExpr(),e)}}function St(e,t,n){Va(n)||e.accessedSymbolSet.add(t.id)}function At(e,t,n){var a;if($.TypeBase.isInstantiable(t)&&!t.scopeId&&!(0,W.isTypeAliasPlaceholder)(t)){const r=function(e,t){var n;let a=e,r=0;(0,l.assert)($.TypeBase.isInstantiable(t));for(;a&&(a=F.getTypeVarScopeNode(a),a);){let e,s=!1;if(10===a.nodeType){const t=Yn(a);t&&!$.ClassType.isPartiallyEvaluated(t.classType)&&(e=t.classType.details.typeParameters),s=!!a.typeParameters,r++}else if(28===a.nodeType){const r=ra(a);if(r){const a=r.details;if(e=a.typeParameters,null===(n=a.rescopedTypeParameters)||void 0===n?void 0:n.some((e=>e.details.name===t.details.name)))return{type:t,isRescoped:!0,foundInterveningClass:!1}}s=!!a.typeParameters}else 77===a.nodeType&&(s=!!a.typeParameters);if(e){const n=e.find((e=>e.details.name===t.details.name));if(void 0!==(null==n?void 0:n.scopeId)&&void 0!==n.scopeName&&void 0!==n.scopeType)return{type:t=$.TypeVarType.cloneForScopeId(t,n.scopeId,n.scopeName,n.scopeType),isRescoped:!1,foundInterveningClass:r>1&&!s}}a=a.parent}a=e;for(;a;){let n,r;if(77===a.nodeType?(n=Ne(a.name,0),r=a):3===a.nodeType&&(n=Ne(a.leftExpression,0)),n&&n&&(0,$.isTypeVar)(n)&&n.details.recursiveTypeAliasScopeId&&n.details.recursiveTypeAliasName){if(r&&!t.details.isTypeParamSyntax)ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeParameterNotDeclared().format({name:t.details.name,container:r.name.value}),e);else{const e=n.details.recursiveTypeParameters;if(e&&!e.some((e=>e.details.name===t.details.name)))return{type:t,isRescoped:!1,foundInterveningClass:!1}}return{type:$.TypeVarType.cloneForScopeId(t,n.details.recursiveTypeAliasScopeId,n.details.recursiveTypeAliasName,2),isRescoped:!1,foundInterveningClass:!1}}a=a.parent}return{type:t,isRescoped:!1,foundInterveningClass:!1}}(e,t);if(t=r.type,0!=(2048&n)&&void 0!==t.scopeId){if(!t.details.isSynthesized&&!t.details.isParamSpec){if(t.details.isTypeParamSyntax)return t;const n=F.getTypeVarScopeNode(e);if(n&&n.typeParameters&&!n.typeParameters.parameters.some((t=>t.name===e)))return t;ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarUsedByOuterScope().format({name:t.details.name}),e)}}else if(0!=(8192&n)){if(void 0===t.scopeId)if(r.foundInterveningClass)ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarUsedByOuterScope().format({name:t.details.name}),e);else{let n=F.getEnclosingClassOrFunction(e);if(n&&35===(null===(a=e.parent)||void 0===a?void 0:a.nodeType)&&e.parent.leftExpression===e){const a=e.parent.memberName.value;if("args"===a||"kwargs"===a){const a=F.getEnclosingClassOrFunction(n);28===(null==a?void 0:a.nodeType)?r.isRescoped?ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramSpecScopedToReturnType().format({name:t.details.name}),e):n=a:r.type.scopeId||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramSpecNotUsedByOuterScope().format({name:t.details.name}),e)}}n?(n.typeParameters&&!n.typeParameters.parameters.some((e=>e.name.value===t.details.name))&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeParameterNotDeclared().format({name:t.details.name,container:n.name.value}),e),t=$.TypeVarType.cloneForScopeId(t,F.getScopeIdForNode(n),n.name.value,28===n.nodeType?1:0)):(0,l.fail)("AssociateTypeVarsWithCurrentScope flag was set but enclosing scope not found")}}else if(0==(4096&n)&&(void 0===t.scopeId||r.foundInterveningClass)&&!t.details.isSynthesized){let n;n=r.isRescoped?(0,$.isParamSpec)(t)?g.LocMessage.paramSpecScopedToReturnType():g.LocMessage.typeVarScopedToReturnType():(0,$.isParamSpec)(t)?g.LocMessage.paramSpecNotUsedByOuterScope():g.LocMessage.typeVarNotUsedByOuterScope(),ht(c.DiagnosticRule.reportGeneralTypeIssues,n.format({name:t.details.name}),e)}}return(0,$.isUnpackedVariadicTypeVar)(t)&&(t=$.TypeVarType.cloneForPacked(t)),t}function xt(e,t,n){var a;if(0!=(2&n))return t;if((0,$.isInstantiableClass)(t)&&(0!=(128&n)&&0==(512&n)&&!t.typeAliasInfo&&(0,W.requiresTypeArguments)(t)&&(t.typeArguments&&t.isTypeArgumentExplicit||ht(c.DiagnosticRule.reportMissingTypeArgument,g.LocMessage.typeArgsMissingForClass().format({name:t.aliasName||t.details.name}),e)),t.typeArguments||(t=null===(a=xa(t,void 0,n,e))||void 0===a?void 0:a.type)),0!=(128&n)&&t.typeAliasInfo&&t.typeAliasInfo.typeParameters&&t.typeAliasInfo.typeParameters.length>0&&!t.typeAliasInfo.typeArguments){let n=!1;const a=[],r=new G.TypeVarContext(t.typeAliasInfo.typeVarScopeId);t.typeAliasInfo.typeParameters.forEach((e=>{let t;e.details.isDefaultExplicit||(n=!0),t=e.details.isDefaultExplicit||e.details.isParamSpec?(0,W.applySolvedTypeVars)(e,r,{unknownIfNotFound:!0}):e.details.isVariadic&&le&&(0,$.isInstantiableClass)(le)?zt([{type:$.UnknownType.create(),isUnbounded:!0}],!0):$.UnknownType.create(),a.push(t),r.setTypeVarType(e,t)})),n&&ht(c.DiagnosticRule.reportMissingTypeArgument,g.LocMessage.typeArgsMissingForAlias().format({name:t.typeAliasInfo.name}),e),t=$.TypeBase.cloneForTypeAlias((0,W.applySolvedTypeVars)(t,r,{unknownIfNotFound:!0}),t.typeAliasInfo.name,t.typeAliasInfo.fullName,t.typeAliasInfo.moduleName,t.typeAliasInfo.fileUri,t.typeAliasInfo.typeVarScopeId,t.typeAliasInfo.isPep695Syntax,t.typeAliasInfo.typeParameters,a)}return t}function Pt(e,t,a,r){var s;let i=(0,W.transformPossibleRecursiveTypeAlias)(t.type);const o=e.memberName.value;let d=new p.DiagnosticAddendum;const m=v.getFileInfo(e);let y,h,f,T=!1,b=!!t.isIncomplete;let _;if(t.isIncomplete&&(0,$.isUnbound)(i))return{type:$.UnknownType.create(!0),isIncomplete:!0};switch(i.specialForm&&(i=i.specialForm),(0,$.isParamSpec)(i)&&i.paramSpecAccess&&(i=Ct(i)),i.category){case 2:case 1:case 3:y=i;break;case 0:break;case 9:if(i.details.isParamSpec){if("args"===o||"kwargs"===o){const t="args"===o,n=F.getEnclosingParameter(e),a=t?1:2;if(!n||n.category!==a){mt(t?g.LocMessage.paramSpecArgsUsage():g.LocMessage.paramSpecKwargsUsage(),e),y=$.UnknownType.create(b);break}y=$.TypeVarType.cloneForParamSpecAccess(i,o);break}b||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramSpecUnknownMember().format({name:o}),e),y=$.UnknownType.create(b);break}if(0!=(256&r)){b||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarNoMember().format({type:wr(i),name:o}),e.leftExpression),y=$.UnknownType.create(b);break}if(i.details.recursiveTypeAliasName){y=$.UnknownType.create(!0),b=!0;break}if(i.details.isVariadic)break;return Pt(e,{type:Ct(i),bindToSelfType:$.TypeBase.isInstantiable(i)?(0,W.convertToInstance)(i):i,isIncomplete:b},a,0);case 6:{let n;"get"===a.method&&(n=(0,A.getTypeOfEnumMember)(Ar,e,i,o,b)),n||(n=Ye(e.memberName,i,o,a,d,void 0,t.bindToSelfType)),n&&(n.typeErrors?T=!0:y=(0,W.addConditionToType)(n.type,(0,W.getTypeCondition)(i),!0),n.isAsymmetricAccessor&&(f=!0),n.isIncomplete&&(b=!0),n.narrowedTypeForSet&&(h=(0,W.addConditionToType)(n.narrowedTypeForSet,(0,W.getTypeCondition)(i),!0)),n.memberAccessDeprecationInfo&&(_=n.memberAccessDeprecationInfo));break}case 7:{const t=$.ModuleType.getField(i,o);if(t&&!t.isExternallyHidden())"get"===a.method&&St(m,t,e.memberName),y=Ka(t,void 0,!0).type,(0,$.isTypeVar)(y)&&(y=At(e,y,r)),(0,$.isUnbound)(y)&&(y=$.UnknownType.create(!0)),t.isPrivateMember()&&ht(c.DiagnosticRule.reportPrivateUsage,g.LocMessage.privateUsedOutsideOfModule().format({name:o}),e.memberName),t.isPrivatePyTypedImport()&&ht(c.DiagnosticRule.reportPrivateImportUsage,g.LocMessage.privateImportFromPyTypedModule().format({name:o,module:i.moduleName}),e.memberName);else{if("get"===a.method){const e=$.ModuleType.getField(i,"__getattr__");if(e){if(m.executionEnvironment.pythonVersion.isGreaterOrEqualTo(u.pythonVersion3_7)||e.getDeclarations().some((e=>e.uri.hasExtension(".pyi")))){const t=Ka(e);(0,$.isFunction)(t.type)&&(y=Za(t.type),t.isIncomplete&&(b=!0))}}}!y&&i.notPresentFieldType&&(y=i.notPresentFieldType),y||(b||ht(c.DiagnosticRule.reportAttributeAccessIssue,g.LocMessage.moduleUnknownMember().format({memberName:o,moduleName:i.moduleName}),e.memberName),y=n.evaluateUnknownImportsAsAny?$.AnyType.create():$.UnknownType.create())}break}case 8:y=(0,W.mapSubtypes)(i,(n=>{if((0,$.isUnbound)(n))return;if((0,W.isNoneInstance)(n)&&ne&&(0,$.isClassInstance)(ne)){const t=Ye(e.memberName,ne,o,a,d);return t&&!t.typeErrors?(y=(0,W.addConditionToType)(t.type,(0,W.getTypeCondition)(i)),t.isIncomplete&&(b=!0),y):void(b||ht(c.DiagnosticRule.reportOptionalMemberAccess,g.LocMessage.noneUnknownMember().format({name:o}),e.memberName))}const r=Pt(e,{type:n,isIncomplete:t.isIncomplete},a,0);return r.isIncomplete&&(b=!0),r.memberAccessDeprecationInfo&&(_=r.memberAccessDeprecationInfo),r.typeErrors&&(T=!0),r.type}));break;case 4:case 5:if("__self__"===o){const e=(0,$.isFunction)(i)?i:i.overloads[0];void 0!==e.preBoundFlags&&0==(4&e.preBoundFlags)&&(y=e.boundToType)}else y=Pt(e,{type:null!=oe?oe:$.AnyType.create()},a,r).type;break;default:(0,l.assertNever)(i)}if(!y){const n=(0,$.isFunction)(i)||(0,$.isOverloadedFunction)(i)||(0,$.isClassInstance)(i)&&$.ClassType.isBuiltIn(i,"function");if(!t.isIncomplete){let t=g.LocMessage.memberAccess();if("set"===a.method?t=g.LocMessage.memberSet():"del"===a.method&&(t=g.LocMessage.memberDelete()),a.setExpectedTypeDiag&&(d=a.setExpectedTypeDiag),(0,$.isClass)(i)&&i.details.typedDictEntries){if(i.details.typedDictEntries.knownItems.get(o)){const e=new p.DiagnosticAddendum;e.addMessage(g.LocAddendum.typedDictKeyAccess().format({name:o})),d.addAddendum(e)}}ht(n?c.DiagnosticRule.reportFunctionMemberAccess:c.DiagnosticRule.reportAttributeAccessIssue,t.format({name:o,type:wr(i)})+d.getString(),e.memberName,null!==(s=d.getEffectiveTextRange())&&void 0!==s?s:e.memberName)}y=n?$.AnyType.create():$.UnknownType.create()}return 0==(256&r)&&qe(y,e.memberName),{type:y,isIncomplete:b,isAsymmetricAccessor:f,narrowedTypeForSet:h,isRequired:!1,isNotRequired:!1,memberAccessDeprecationInfo:_,typeErrors:T}}function Nt(e,t,n,a,r,s,i,o=0){var p,c,d;const u=$.TypeBase.isInstance(t);let m,y=(0,W.lookUpClassMember)(t,n,64|s);if(y||(y=(0,W.lookUpClassMember)(t,n,s)),!y){if(0==(512&s)&&e){const r=function(e,t,n,a,r){var s,i,o,p,c;const d=n=>{var a;return null===(a=Ye(e,t,n,void 0,void 0,540,r))||void 0===a?void 0:a.type};let u;"get"===n.method?u=null!==(s=d("__getattribute__"))&&void 0!==s?s:d("__getattr__"):"set"===n.method?u=d("__setattr__"):((0,l.assert)("del"===n.method),u=d("__delattr__"));if(!u)return;const m=[];m.push({argumentCategory:0,typeResult:{type:de&&(0,$.isInstantiableClass)(de)?$.ClassType.cloneWithLiteral($.ClassType.cloneAsInstance(de),a):$.AnyType.create()}}),"set"===n.method&&m.push({argumentCategory:0,typeResult:{type:null!==(o=null===(i=n.setType)||void 0===i?void 0:i.type)&&void 0!==o?o:$.UnknownType.create(),isIncomplete:!!(null===(p=n.setType)||void 0===p?void 0:p.isIncomplete)}});if(!(0,$.isFunction)(u)&&!(0,$.isOverloadedFunction)(u))return(0,$.isAnyOrUnknown)(u)?{type:u}:void 0;const y=new G.TypeVarContext((0,W.getTypeVarScopeId)(u)),g=Zt(e,m,{type:u},y,!0);let h=!1;"set"===n.method&&(h=function(e){var t;if(void 0!==e.isAsymmetricAttributeAccessor)return e.isAsymmetricAttributeAccessor;let n=!1;const a=(0,W.lookUpClassMember)(e,"__getattr__",2),r=(0,W.lookUpClassMember)(e,"__setattr__",2);if(a&&r){const e=Ga(a.symbol),s=Ga(r.symbol);if((0,$.isFunction)(e)&&(0,$.isFunction)(s)&&s.details.parameters.length>=3&&e.details.declaredReturnType){const a=$.FunctionType.getEffectiveParameterType(s,2),r=null!==(t=$.FunctionType.getSpecializedReturnType(e))&&void 0!==t?t:$.UnknownType.create();(0,$.isTypeSame)(a,r)||(n=!0)}}else n=!1;return e.isAsymmetricAttributeAccessor=n,n}(t));return{type:null!==(c=g.returnType)&&void 0!==c?c:$.UnknownType.create(),typeErrors:g.argumentErrors,isAsymmetricAccessor:h}}(e,t,a,n,i);if(r)return{symbol:void 0,type:r.type,isTypeIncomplete:!1,isDescriptorError:!1,isClassMember:!1,isClassVar:!1,isAsymmetricAccessor:!!r.isAsymmetricAccessor}}return void(null==r||r.addMessage(g.LocAddendum.memberUnknown().format({name:n})))}let h,f=!1;if(y.symbol.isInitVar())return void(null==r||r.addMessage(g.LocAddendum.memberIsInitVar().format({name:n})));if("get"!==a.method&&e){const r=F.getEnclosingClass(e);if(r){const o=null===(p=Yn(r))||void 0===p?void 0:p.classType;if(o&&(0,$.isInstantiableClass)(o)&&$.ClassType.isSameGenericClass(o,t)){if(m=null===(c=$a(y.symbol))||void 0===c?void 0:c.type,m&&(0,$.isInstantiableClass)(y.classType)&&(m=(0,W.partiallySpecializeType)(m,y.classType)),"set"===a.method&&(0,L.isEffectivelyClassVar)(y.symbol,$.ClassType.isDataClass(o))&&u){const a=Qa(e,y,(null!=i?i:"__new__"===n)?void 0:t,s);a&&(0,W.isDescriptorInstance)(a.type,!0)&&(m=a.type,s&=128)}m||(m=$.UnknownType.create())}}}if(!m){let a;i?a=(0,W.convertToInstantiable)(i):"__new__"!==n&&(a=t);const r=Qa(e,y,a,s);m=null!==(d=null==r?void 0:r.type)&&void 0!==d?d:$.UnknownType.create(),(null==r?void 0:r.isIncomplete)&&(f=!0)}if((0,$.isClass)(y.classType)&&$.ClassType.isTypedDictClass(y.classType)){const e=y.symbol.getTypedDeclarations();if(e.length>0&&1===e[0].type)return void(null==r||r.addMessage(g.LocAddendum.memberUnknown().format({name:n})))}"get"===a.method&&(e&&(0,$.isInstantiableClass)(y.classType)&&$.ClassType.isSameGenericClass(y.classType,t)&&St(v.getFileInfo(e),y.symbol,e),"__init_subclass__"!==n&&"__class_getitem__"!==n||(0,$.isFunction)(m)&&!$.FunctionType.isClassMethod(m)&&(m=$.FunctionType.cloneWithNewFlags(m,2|m.details.flags)));let T,b=!1,_=!1,C=!1;return m=(0,W.mapSubtypes)(m,(l=>{const p=Ct(l),c=!y||y.isClassMember;let d;if((0,$.isClass)(p)&&c&&e){const o=function(e,t,n,a,r,s,i,o,l,p){var c,d,u,m,y,h,f;const T=$.TypeBase.isInstance(a);let v;v="get"===l.method?"__get__":"set"===l.method?"__set__":"__delete__";const b=Ye(i,t,v,void 0,null==p?void 0:p.createAddendum(),528);if(!b||b.typeErrors){if($.ClassType.isPropertyClass(t)&&"get"!==l.method){const e="set"===l.method?g.LocAddendum.propertyMissingSetter():g.LocAddendum.propertyMissingDeleter();return null==p||p.addMessage(e.format({name:o})),{type:$.AnyType.create(),typeErrors:!0}}return{type:e}}const _=b.classType;let C=b.type;if(b.typeErrors||!_)return{type:$.UnknownType.create(),typeErrors:!0};if(!(0,$.isFunction)(C)&&!(0,$.isOverloadedFunction)(C))return(0,$.isAnyOrUnknown)(C)?{type:C}:{type:e,typeErrors:!0};if($.ClassType.isPropertyClass(t)&&n&&(0,$.isInstantiableClass)(n.classType)&&C){if(0!=(16&s)&&$.ClassType.isProtocolClass(a))return null==p||p.addMessage(g.LocAddendum.propertyAccessFromProtocolClass()),{type:e,typeErrors:!0};let i;if(Ha(C),i="get"===l.method?null===(c=t.fgetInfo)||void 0===c?void 0:c.classType:"set"===l.method?null===(d=t.fsetInfo)||void 0===d?void 0:d.classType:null===(u=t.fdelInfo)||void 0===u?void 0:u.classType,i){const e=new G.TypeVarContext((0,W.getTypeVarScopeId)(i));i=(0,W.selfSpecializeClass)(i),nr($.ClassType.cloneAsInstance(i),$.ClassType.cloneAsInstance(n.classType),void 0,e),i=(0,W.applySolvedTypeVars)(i,e);const t=(0,W.partiallySpecializeType)(C,i,r?(0,W.convertToInstantiable)(r):a);((0,$.isFunction)(t)||(0,$.isOverloadedFunction)(t))&&(C=t)}}let I=!1;"set"===l.method&&(0,$.isClass)(_)&&function(e){var t;if(void 0!==e.isAsymmetricDescriptor)return e.isAsymmetricDescriptor;let n=!1;const a=(0,W.lookUpClassMember)(e,"__get__",2),r=(0,W.lookUpClassMember)(e,"__set__",2);if(a&&r){const e=Ga(a.symbol),s=Ga(r.symbol);if((0,$.isFunction)(e)&&(0,$.isFunction)(s)&&s.details.parameters.length>=3&&e.details.declaredReturnType){const a=$.FunctionType.getEffectiveParameterType(s,2),r=null!==(t=$.FunctionType.getSpecializedReturnType(e))&&void 0!==t?t:$.UnknownType.create();(0,$.isTypeSame)(a,r)||(n=!0)}}else n=!1;return e.isAsymmetricDescriptor=n,n}(_)&&(I=!0);if(!C)return null==p||p.addMessage(g.LocAddendum.descriptorAccessBindingFailed().format({name:v,className:wr((0,W.convertToInstance)(_))})),{type:$.UnknownType.create(),typeErrors:!0,isDescriptorApplied:!0,isAsymmetricAccessor:I};const k=[];let w;w=$.ClassType.isClassProperty(t)?T?$.ClassType.cloneAsInstantiable(a):a:T?null!=r?r:$.ClassType.cloneAsInstance(a):rt();if(k.push({argumentCategory:0,typeResult:{type:w}}),"get"===l.method){let e;e=r?(0,W.convertToInstantiable)(r):T?$.ClassType.cloneAsInstantiable(a):a,k.push({argumentCategory:0,typeResult:{type:e}})}else"set"===l.method&&k.push({argumentCategory:0,typeResult:{type:null!==(y=null===(m=l.setType)||void 0===m?void 0:m.type)&&void 0!==y?y:$.UnknownType.create(),isIncomplete:!!(null===(h=l.setType)||void 0===h?void 0:h.isIncomplete)}});const S=Oa(i,(()=>Zt(i,k,{type:C},void 0,!0)));let A;if(S.overloadsUsedForCall&&S.overloadsUsedForCall.length>=1){const e=S.overloadsUsedForCall[0];e.details.deprecatedMessage&&(A={deprecationMessage:e.details.deprecatedMessage,accessType:$.ClassType.isPropertyClass(t)?"property":"descriptor",accessMethod:l.method})}if(!S.argumentErrors)return{type:"get"===l.method?null!==(f=S.returnType)&&void 0!==f?f:$.UnknownType.create():$.AnyType.create(),isDescriptorApplied:!0,isAsymmetricAccessor:I,memberAccessDeprecationInfo:A};if("set"===l.method)if(l.setType&&(0,$.isFunction)(C)&&C.details.parameters.length>=2&&!l.setType.isIncomplete){const e=$.FunctionType.getEffectiveParameterType(C,1);null==p||p.addMessage(g.LocAddendum.typeIncompatible().format({destType:wr(e),sourceType:wr(l.setType.type)}))}else(0,$.isOverloadedFunction)(C)&&(null==p||p.addMessage(g.LocMessage.noOverload().format({name:v})));else null==p||p.addMessage(g.LocAddendum.descriptorAccessCallFailed().format({name:v,className:wr((0,W.convertToInstance)(_))}));return{type:$.UnknownType.create(),typeErrors:!0,isDescriptorApplied:!0,isAsymmetricAccessor:I,memberAccessDeprecationInfo:A}}(l,p,y,t,i,s,e,n,a,r);o.isAsymmetricAccessor&&(_=!0),o.memberAccessDeprecationInfo&&(T=o.memberAccessDeprecationInfo),o.typeErrors&&(b=!0),o.isDescriptorApplied&&(C=!0),d=o.type}else if((0,$.isFunction)(p)||(0,$.isOverloadedFunction)(p)){const e=function(e,t,n,a,r,s,i,o,l,p=0){if("set"===o.method){const e=(0,$.isFunction)(t)?t:$.OverloadedFunctionType.getImplementation(t);if(e&&$.FunctionType.isFinal(e)&&n&&(0,$.isClass)(n.classType))return null==l||l.addMessage(g.LocMessage.finalMethodOverride().format({name:i,className:n.classType.details.name})),{type:$.UnknownType.create(),typeErrors:!0}}if($.TypeBase.isInstance(a)&&(!n||n.isInstanceMember))return{type:e};const c=gr(a,t,n&&(0,$.isInstantiableClass)(n.classType)?n.classType:void 0,0!=(256&s),r&&(0,$.isClass)(r)?$.ClassType.cloneIncludeSubclasses(r):r,l,p);return{type:null!=c?c:$.UnknownType.create(),typeErrors:!c}}(l,p,y,t,i,s,n,a,r,o);d=e.type,e.typeErrors&&(b=!0)}else d=l;if("get"===a.method)return d;!C&&y&&(0,L.isEffectivelyClassVar)(y.symbol,$.ClassType.isDataClass(t))&&0!=(128&s)&&(null==r||r.addMessage(g.LocAddendum.memberSetClassVar().format({name:n})),b=!0);const u=null==y?void 0:y.symbol.getDeclarations().find((e=>Tr(e)));if(u&&e&&!F.isNodeContainedWithin(e,u.node)){const t=F.getEnclosingFunction(e);t&&"__init__"===t.name.value||(null==r||r.addMessage(g.LocMessage.finalReassigned().format({name:n})),b=!0)}return(null==y?void 0:y.isInstanceMember)&&(0,$.isClass)(y.classType)&&$.ClassType.isReadOnlyInstanceVariables(y.classType)&&(null==r||r.addMessage(g.LocAddendum.readOnlyAttribute().format({name:n})),b=!0),d})),!b&&"set"===a.method&&a.setType&&(e&&y.symbol.hasTypedDeclarations()&&(h=C?a.setType.type:dr(e,m,a.setType.type)),nr(m,a.setType.type,null==r?void 0:r.createAddendum())||(a.setType.isIncomplete||null==r||r.addMessage(g.LocAddendum.memberAssignment().format({type:wr(a.setType.type),name:n,classType:Ir(t)})),h=m,b=!0),(0,$.isInstantiableClass)(y.classType)&&$.ClassType.isFrozenDataClass(y.classType)&&u&&(null==r||r.addMessage(g.LocAddendum.dataClassFrozen().format({name:wr($.ClassType.cloneAsInstance(y.classType))})),b=!0)),{symbol:y.symbol,type:m,isTypeIncomplete:f,isDescriptorError:b,isClassMember:!y.isInstanceMember,isClassVar:y.isClassVar,classType:y.classType,isAsymmetricAccessor:_,narrowedTypeForSet:h,memberAccessDeprecationInfo:T}}function Dt(e,t,n){const a=t.findIndex((e=>(0,$.isVariadicTypeVar)(e)));let r,s=e.findIndex((e=>!!((0,$.isUnpackedClass)(e.type)&&e.type.tupleTypeArguments&&1===e.type.tupleTypeArguments.length&&e.type.tupleTypeArguments[0].isUnbounded)&&(r=e.type.tupleTypeArguments[0].type,!0)));if(r&&s>=0&&a>=0&&e.length<t.length){for(;a>s;)e=[...e.slice(0,s),{node:e[s].node,type:r},...e.slice(s)],s++;for(;e.length<t.length;)e=[...e.slice(0,s+1),{node:e[s].node,type:r},...e.slice(s+1)]}if(a>=0){const r=t[a];let s=t.length;for(;s>0;){const e=t[s-1];if(!e.details.isParamSpec||!e.details.isDefaultExplicit)break;s--}if(a<e.length){let t=a+1+e.length-s;for(;t>a&&e[t-1].typeList;)t--;const n=e.slice(a,t);if(1===n.length&&(0,$.isVariadicTypeVar)(n[0].type))Ft(n[0].type,n[0].node);else{n.forEach(((e,t)=>{An(e,{allowEmptyTuple:0===t,allowVariadicTypeVar:!0,allowUnpackedTuples:!0})}));const r=[];1===n.length&&n[0].isEmptyTupleShorthand||n.forEach((e=>{(0,$.isUnpackedClass)(e.type)&&e.type.tupleTypeArguments?(0,o.appendArray)(r,e.type.tupleTypeArguments):r.push({type:(0,W.convertToInstance)(e.type),isUnbounded:!1})}));const s=zt(r,!0);e=[...e.slice(0,a),{node:e[a].node,type:s},...e.slice(t,e.length)]}}else r.details.isDefaultExplicit||e.push({node:n,type:zt([],!0)})}return e}function Ft(e,t){return!!e.isVariadicUnpacked||(mt(g.LocMessage.unpackedTypeVarTupleExpected().format({name1:e.details.name,name2:e.details.name}),t),!1)}function Et(e,t,n){var a,r,s;if(!(null===(a=t.typeAliasInfo)||void 0===a?void 0:a.typeParameters)||0===t.typeAliasInfo.typeParameters.length&&t.typeAliasInfo.typeArguments)return;if(!$.TypeBase.isInstantiable(t))return;if(t.typeAliasInfo.typeArguments)return;const i=t.typeAliasInfo.typeParameters;let o=Dt(Lt(e,n),i,e);1===i.length&&i[0].details.isParamSpec&&o&&o.every((e=>!(0,W.isEllipsisType)(e.type)&&!e.typeList&&!(0,$.isParamSpec)(e.type)))&&(o=[{type:$.UnknownType.create(),node:o[0].node,typeList:o}]);let l=i.length;const c=i.findIndex((e=>!!e.details.isDefaultExplicit));if(c>=0&&(l=c),o.length>i.length?mt(g.LocMessage.typeArgsTooMany().format({name:wr(t),expected:i.length,received:o.length}),o[i.length].node):o.length<l&&mt(g.LocMessage.typeArgsTooFew().format({name:wr(t),expected:i.length,received:o.length}),e.items[e.items.length-1]),(0,$.isInstantiableClass)(t)&&"mypy_extensions.FlexibleAlias"===t.details.fullName&&o.length>=1)return{node:e,type:o[0].type};const d=new G.TypeVarContext(t.typeAliasInfo.typeVarScopeId),u=new p.DiagnosticAddendum;i.forEach(((e,a)=>{if(e.details.isParamSpec&&a<o.length){const t=o[a].type,n=o[a].typeList;if(n){const t=$.FunctionType.createSynthesizedInstance("",65536);n.forEach(((e,n)=>{$.FunctionType.addParameter(t,{category:0,name:`__p${n}`,isNameSynthesized:!0,type:(0,W.convertToInstance)(e.type),hasDeclaredType:!0})})),n.length>0&&$.FunctionType.addPositionOnlyParameterSeparator(t),(0,C.assignTypeToTypeVar)(Ar,e,t,u,d,256)}else if((0,$.isParamSpec)(t))(0,C.assignTypeToTypeVar)(Ar,e,(0,W.convertToInstance)(t),u,d,256);else if((0,$.isInstantiableClass)(t)&&$.ClassType.isBuiltIn(t,"Concatenate")){const n=t.typeArguments,a=$.FunctionType.createInstance("","","",0);n&&n.length>0&&n.forEach(((e,t)=>{t===n.length-1?($.FunctionType.addPositionOnlyParameterSeparator(a),(0,$.isParamSpec)(e)?a.details.paramSpec=e:(0,W.isEllipsisType)(e)&&($.FunctionType.addDefaultParameters(a),a.details.flags|=32768)):$.FunctionType.addParameter(a,{category:0,name:`__p${t}`,isNameSynthesized:!0,hasDeclaredType:!0,type:e})})),(0,C.assignTypeToTypeVar)(Ar,e,a,u,d,256)}else if((0,W.isEllipsisType)(t)){const t=$.FunctionType.createSynthesizedInstance("",98304);$.FunctionType.addDefaultParameters(t),(0,C.assignTypeToTypeVar)(Ar,e,t,u,d)}else mt(g.LocMessage.typeArgListExpected(),o[a].node)}else{let r;if(a<o.length&&o[a].typeList&&mt(g.LocMessage.typeArgListNotAllowed(),o[a].node),r=a<o.length?(0,W.convertToInstance)(o[a].type):e.details.isDefaultExplicit?(0,W.applySolvedTypeVars)(e,d,{unknownIfNotFound:!0}):$.UnknownType.create(),0!=(16384&n)){const e=function(e){if(!e.typeAliasInfo||!e.typeAliasInfo.typeParameters)return;if(e.typeAliasInfo.usageVariance)return e.typeAliasInfo.usageVariance;const t=e.typeAliasInfo.typeParameters,n=t.map((()=>1));return e.typeAliasInfo.usageVariance=n,Ot(e,t,n),n}(t);if(e&&a<e.length){const t=e[a];if(!(0,W.isVarianceOfTypeArgumentCompatible)(r,t)){const e=u.createAddendum();e.addMessage(g.LocAddendum.varianceMismatchForTypeAlias().format({typeVarName:wr(r),typeAliasParam:wr(i[a])})),e.addTextRange(o[a].node)}}}if((0,$.isUnpacked)(r)&&!(0,$.isVariadicTypeVar)(e)){const e=u.createAddendum();e.addMessage(g.LocMessage.unpackedArgInTypeArgument()),e.addTextRange(o[a].node),r=$.UnknownType.create()}(0,C.assignTypeToTypeVar)(Ar,e,r,u,d,256)}})),u.isEmpty()||mt(g.LocMessage.typeNotSpecializable().format({type:wr(t)})+u.getString(),e,null!==(r=u.getEffectiveTextRange())&&void 0!==r?r:e);const m=d.getPrimarySignature(),y=[];null===(s=t.typeAliasInfo.typeParameters)||void 0===s||s.forEach((e=>{let t;if((0,$.isParamSpec)(e)){const n=m.getParamSpecType(e);t=n?(0,W.convertParamSpecValueToType)(n):$.UnknownType.create(),t||(t=(0,W.getUnknownTypeForParamSpec)(),m.setTypeVarType(e,t))}else t=m.getTypeVarType(e),t||(t=$.UnknownType.create(),m.setTypeVarType(e,t));y.push(t)}));return{type:$.TypeBase.cloneForTypeAlias((0,W.applySolvedTypeVars)(t,d),t.typeAliasInfo.name,t.typeAliasInfo.fullName,t.typeAliasInfo.moduleName,t.typeAliasInfo.fileUri,t.typeAliasInfo.typeVarScopeId,t.typeAliasInfo.isPep695Syntax,t.typeAliasInfo.typeParameters,y),node:e}}function Mt(e,t,n,a){const r=Et(e,t.type,a);if(r)return r;if((0,$.isTypeVar)(t.type)&&(0,W.isTypeAliasPlaceholder)(t.type)){const n=Lt(e,a).map((e=>(0,W.convertToInstance)(e.type)));return{type:$.TypeBase.cloneForTypeAlias(t.type,t.type.details.recursiveTypeAliasName,"","",y.Uri.empty(),t.type.details.recursiveTypeAliasScopeId,!!t.type.details.recursiveTypeAliasIsPep695Syntax,t.type.details.recursiveTypeParameters,n)}}let s=t.isIncomplete,i=!1,o=!1,l=!1;const p=It(t.type,void 0,((t,r)=>{var p;const d=(0,$.isTypeVar)(r)?r:void 0;if((0,$.isAnyOrUnknown)(t))return t;if(128&a&&(0,$.isTypeVar)(r))return ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarNotSubscriptable().format({type:wr(r)}),e.baseExpression),Lt(e,a),$.UnknownType.create();if((0,$.isInstantiableClass)(t)){if(t.details.effectiveMetaclass&&(0,$.isInstantiableClass)(t.details.effectiveMetaclass)&&!$.ClassType.isBuiltIn(t.details.effectiveMetaclass,["type","_InitVarMeta"])&&0==(128&a)){const r=Je(t,Vt(n));if(0!=(256&a)&&ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeArgsExpectingNone().format({name:wr($.ClassType.cloneAsInstance(t))}),e),r)return Ut(e,t,d,n).type}if("set"===n.method?ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.genericClassAssigned(),e.baseExpression):"del"===n.method&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.genericClassDeleted(),e.baseExpression),$.ClassType.isSpecialBuiltIn(t,"Literal"))return function(e,t,n){if(0===t.items.length)return mt(g.LocMessage.literalEmptyArgs(),t.baseExpression),$.UnknownType.create();const a=[];for(const r of t.items){let s;const i=r.valueExpression;if(0!==r.argumentCategory)mt(g.LocMessage.unpackedArgInTypeArgument(),i),s=$.UnknownType.create();else if(r.name)mt(g.LocMessage.keywordArgInTypeArgument(),i),s=$.UnknownType.create();else if(48===i.nodeType){const n=0!=(32&i.strings[0].token.flags),a=i.strings.map((e=>e.value)).join("");s=Dn(t,e,n?"bytes":"str",a),i.strings.forEach((e=>{0!=(512&e.token.flags)&&ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.literalNamedUnicodeEscape(),e)}))}else 40===i.nodeType?!i.isImaginary&&i.isInteger&&(s=Dn(t,e,"int",i.value)):11===i.nodeType?33===i.constType?s=Dn(t,e,"bool",!0):15===i.constType?s=Dn(t,e,"bool",!1):26===i.constType&&(s=null!=te?te:$.UnknownType.create()):55===i.nodeType&&(33!==i.operator&&0!==i.operator||40===i.expression.nodeType&&!i.expression.isImaginary&&i.expression.isInteger&&(s=Dn(t,e,"int",33===i.operator?-i.expression.value:i.expression.value)));if(!s){const e=Be(i,4&n);if((0,$.isClassInstance)(e.type)&&$.ClassType.isEnumClass(e.type)&&void 0!==e.type.literalValue)s=$.ClassType.cloneAsInstantiable(e.type);else{let t=!0;(0,W.doForEachSubtype)(e.type,(e=>{(0,$.isInstantiableClass)(e)&&void 0!==e.literalValue||(0,W.isNoneTypeClass)(e)||(t=!1)})),t&&(s=e.type)}}s||(mt(g.LocMessage.literalUnsupportedType(),r),s=$.UnknownType.create()),a.push(s)}return(0,$.combineTypes)(a)}(t,e,a);if($.ClassType.isBuiltIn(t,"InitVar")){const t=Lt(e,a);return 0!=(256&a)&&0==(32768&a)&&mt(g.LocMessage.initVarNotAllowed(),e.baseExpression),1===t.length?t[0].type:(mt(g.LocMessage.typeArgsMismatchOne().format({received:t.length}),e.baseExpression),$.UnknownType.create())}if($.ClassType.isEnumClass(t))return $.ClassType.cloneAsInstance(t);const r=(0,$.isInstantiableClass)(t)&&$.ClassType.isBuiltIn(t,"Annotated"),s=(0,$.isInstantiableClass)(t)&&$.ClassType.hasCustomClassGetItem(t),u=(null===(p=t.details.typeParameters)||void 0===p?void 0:p.length)>0||$.ClassType.isSpecialBuiltIn(t)||$.ClassType.isBuiltIn(t,"type")||$.ClassType.isPartiallyEvaluated(t),m=(0,$.isInstantiableClass)(t)&&$.ClassType.isBuiltIn(t,"Final"),y=(0,$.isInstantiableClass)(t)&&$.ClassType.isBuiltIn(t,"ClassVar"),h=v.getFileInfo(e).diagnosticRuleSet.enableExperimentalFeatures&&$.ClassType.isBuiltIn(t,"dict")&&!$.ClassType.isBuiltIn(t,"Dict");let f=Lt(e,a,{isAnnotatedClass:r,hasCustomClassGetItem:s||!u,isFinalAnnotation:m,isClassVarAnnotation:y,supportsTypedDictTypeArg:h});if(r||(f=Dt(f,t.details.typeParameters,e)),s)return t;if(t.typeArguments)return ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.classAlreadySpecialized().format({type:wr((0,W.convertToInstance)(t),{expandTypeAlias:!0})}),e.baseExpression),t;const T=xa(t,f,a,e);return T.isRequired?i=!0:T.isNotRequired&&(o=!0),T.isReadOnly&&(l=!0),T.type}if((0,W.isNoneInstance)(t))return s||ht(c.DiagnosticRule.reportOptionalSubscript,g.LocMessage.noneNotSubscriptable(),e.baseExpression),$.UnknownType.create();if((0,$.isClassInstance)(t)){const a=Ut(e,t,d,n);return a.isIncomplete&&(s=!0),a.type}return(0,$.isNever)(t)?$.NeverType.createNever():((0,$.isUnbound)(t)||s||ht(c.DiagnosticRule.reportIndexIssue,g.LocMessage.typeNotSubscriptable().format({type:wr(t)}),e.baseExpression),$.UnknownType.create())}));return t.isIncomplete||e.items.forEach((e=>{Pe(e.valueExpression)||Be(e.valueExpression,4&a)})),{type:p,isIncomplete:s,isReadOnly:l,isRequired:i,isNotRequired:o}}function Ot(e,t,n,a=0){function r(e,r){(0,W.doForEachSubtype)(e,(e=>{const s=t.findIndex((t=>(0,$.isTypeSame)(t,e)));s>=0?n[s]=(0,W.combineVariances)(n[s],r):Ot(e,t,n,a)}))}a>$.maxTypeRecursionCount||(a++,(0,W.doForEachSubtype)(e,(e=>{if(4===e.category){if(e.specializedTypes){e.specializedTypes.parameterTypes.forEach((e=>{r(e,4)}));const t=e.specializedTypes.returnType;t&&r(t,3)}}else 6===e.category&&e.typeArguments&&(Qn(e),e.typeArguments.forEach(((t,n)=>{var a;if((0,W.isTupleClass)(e))r(t,3);else if(n<e.details.typeParameters.length){const s=e.details.typeParameters[n];(0,$.isUnpackedClass)(t)&&t.tupleTypeArguments?t.tupleTypeArguments.forEach((e=>{r(e.type,2)})):r(t,null!==(a=s.computedVariance)&&void 0!==a?a:s.details.declaredVariance)}})))})))}function zt(e,t=!1){return le&&(0,$.isInstantiableClass)(le)?(0,W.convertToInstance)((0,W.specializeTupleClass)(le,e,!0,t)):$.UnknownType.create()}function Vt(e){return"get"===e.method?"__getitem__":"set"===e.method?"__setitem__":((0,l.assert)("del"===e.method),"__delitem__")}function Ut(e,t,n,a){var r,s,i,o;if((0,$.isClassInstance)(t)&&$.ClassType.isTypedDictClass(t)){const n=(0,K.getTypeOfIndexedTypedDict)(Ar,e,t,a);if(n)return n}const l=Vt(a),p=Je(t,l,n);if(!p)return ht(c.DiagnosticRule.reportIndexIssue,g.LocMessage.methodNotDefinedOnType().format({name:l,type:wr(t)}),e.baseExpression),{type:$.UnknownType.create()};if(1===e.items.length&&!e.trailingComma&&!e.items[0].name&&0===e.items[0].argumentCategory&&(0,$.isClassInstance)(t)){const n=e.items[0].valueExpression,a=Be(n).type;if((0,$.isClassInstance)(a)&&$.ClassType.isBuiltIn(a,"int")&&(0,W.isLiteralType)(a)&&"number"==typeof a.literalValue){const e=a.literalValue,n=(0,W.getSpecializedTupleType)(t);if(n&&n.tupleTypeArguments&&(0,W.isTupleIndexUnambiguous)(n,e)){if(e>=0&&e<n.tupleTypeArguments.length)return{type:n.tupleTypeArguments[e].type};if(e<0&&n.tupleTypeArguments.length+e>=0)return{type:n.tupleTypeArguments[n.tupleTypeArguments.length+e].type}}}else if((0,$.isClassInstance)(a)&&$.ClassType.isBuiltIn(a,"slice")){const e=(0,W.getSpecializedTupleType)(t);if(e&&46===n.nodeType){const t=function(e,t){if(t.stepValue||!e.tupleTypeArguments)return;const n=e.tupleTypeArguments,a=Rt(t.startValue,0,n),r=Rt(t.endValue,n.length,n);if(void 0===a||void 0===r||r<a)return;return zt(n.slice(a,r))}(e,n);if(t)return{type:t}}}}const d=e.items.filter((e=>0===e.argumentCategory&&!e.name)),u=e.items.filter((e=>1===e.argumentCategory)),m=e.items.filter((e=>0===e.argumentCategory&&!!e.name)),y=e.items.filter((e=>2===e.argumentCategory));let h,f=!1;if(1!==d.length||0!==u.length||e.trailingComma)if(0===d.length&&0===u.length)h=zt([]);else{const e=[];d.forEach((t=>{const n=Be(t.valueExpression);e.push({type:n.type,isUnbounded:!1}),n.isIncomplete&&(f=!0)})),u.forEach((t=>{var n,a;const r=Be(t.valueExpression);r.isIncomplete&&(f=!0);const s=null!==(a=null===(n=nt(r,!1,t.valueExpression))||void 0===n?void 0:n.type)&&void 0!==a?a:$.UnknownType.create();e.push({type:s,isUnbounded:!0})})),h=zt(e)}else{const e=Be(d[0].valueExpression);h=e.type,e.isIncomplete&&(f=!0)}let T,v=[{argumentCategory:0,typeResult:{type:h,isIncomplete:f}}];if("set"===a.method){let e=null!==(s=null===(r=a.setType)||void 0===r?void 0:r.type)&&void 0!==s?s:$.AnyType.create();if((0,$.isTypeVar)(e)&&e.details.constraints.length>0){e=Ct(e,void 0,(0,$.isClassInstance)(t)?t.condition:void 0)}v.push({argumentCategory:0,typeResult:{type:e,isIncomplete:!!(null===(i=a.setType)||void 0===i?void 0:i.isIncomplete)}})}return m.forEach((e=>{v.push({argumentCategory:0,valueExpression:e.valueExpression,node:e,name:e.name})})),y.forEach((e=>{v.push({argumentCategory:2,valueExpression:e.valueExpression,node:e})})),0===m.length&&0===y.length&&1===d.length&&za(e,(()=>{if(T=Zt(e,v,{type:p},void 0,!0),T.argumentErrors&&(0,$.isClassInstance)(h)){const t=[...v];t[0]={...t[0]};if(Je(h,"__index__")){const n=Ea(e,"int");(0,$.isClassInstance)(n)&&(t[0].typeResult={type:n})}T=Zt(e,t,{type:p}),T.argumentErrors||(v=t)}})),T=Zt(e,v,{type:p},void 0,!0),{type:null!==(o=T.returnType)&&void 0!==o?o:$.UnknownType.create(),isIncomplete:!!T.isTypeIncomplete}}function Rt(e,t,n){let a=t;if(e){const t=Be(e).type;if(!(0,$.isClassInstance)(t)||!$.ClassType.isBuiltIn(t,"int")||!(0,W.isLiteralType)(t))return;a=t.literalValue;const r=n.findIndex((e=>e.isUnbounded||(0,$.isVariadicTypeVar)(e.type)));if(a<0){if(a=n.length+a,a<0)return;if(r>=0&&a<=r)return}else{if(a>n.length)return;if(r>=0&&a>r)return}}return a}function Lt(e,t,n){const a=[];let r=t;(null==n?void 0:n.isFinalAnnotation)||(null==n?void 0:n.isClassVarAnnotation)?r|=131088:(r&=-1065059,(null==n?void 0:n.isAnnotatedClass)||(r|=131088),r|=136314880);const s=(t,a)=>{let s;return(null==n?void 0:n.hasCustomClassGetItem)?(r=131170,s={...Be(t,r),node:t}):(null==n?void 0:n.isAnnotatedClass)&&a>0?(r=131170,(0,T.isAnnotationEvaluationPostponed)(v.getFileInfo(e))&&(r|=4),s={...Be(t,r),node:t}):s=function(e,t,n){let a,r=137|t;const s=v.getFileInfo(e);s.isStubFile&&(r|=4);if(31===e.nodeType)a={type:$.UnknownType.create(),typeList:e.entries.map((e=>({...Be(e,r),node:e}))),node:e},Fe(e,{type:$.UnknownType.create()});else if(15===e.nodeType&&n){const t=me&&(0,$.isInstantiableClass)(me)?(0,K.createTypedDictTypeInlined)(Ar,e,me):void 0;a={type:de&&(0,$.isInstantiableClass)(de)?de:$.UnknownType.create(),inlinedTypeDict:t,node:e}}else a={...Be(e,r),node:e},15===e.nodeType&&mt(g.LocMessage.dictInAnnotation(),e),0!=(131072&t)&&(0,$.isClass)(a.type)&&$.ClassType.isBuiltIn(a.type,"ClassVar")&&mt(g.LocMessage.classVarNotAllowed(),e);return a}(t,r,!!(null==n?void 0:n.supportsTypedDictTypeArg)&&0===a),s};return 1===e.items.length&&!e.trailingComma&&!e.items[0].name&&52===e.items[0].valueExpression.nodeType&&e.items[0].valueExpression.expressions.length>0?(e.items[0].valueExpression.expressions.forEach(((e,t)=>{a.push(s(e,t))})),Fe(e.items[0].valueExpression,{type:$.UnknownType.create()})):e.items.forEach(((e,t)=>{const r=s(e.valueExpression,t);0!==e.argumentCategory&&1===e.argumentCategory&&((null==n?void 0:n.isAnnotatedClass)&&0!==t||((0,$.isVariadicTypeVar)(r.type)&&!r.type.isVariadicUnpacked?r.type=$.TypeVarType.cloneForUnpacked(r.type):(0,$.isInstantiableClass)(r.type)&&!r.type.includeSubclasses&&(0,W.isTupleClass)(r.type)?r.type=$.ClassType.cloneForUnpacked(r.type):mt(g.LocMessage.unpackNotAllowed(),e.valueExpression))),e.name&&mt(g.LocMessage.keywordArgInTypeArgument(),e.valueExpression),a.push(r)})),a}function jt(e,t){if(t.expectedType=(0,W.transformPossibleRecursiveTypeAlias)(t.expectedType),!(0,$.isClassInstance)(t.expectedType))return;if(!le||!(0,$.isInstantiableClass)(le))return;let n=[];if((0,W.isTupleClass)(t.expectedType)&&t.expectedType.tupleTypeArguments){n=t.expectedType.tupleTypeArguments.map((e=>(0,W.transformPossibleRecursiveTypeAlias)(e.type)));const a=t.expectedType.tupleTypeArguments.findIndex((e=>e.isUnbounded));if(a>=0)if(n.length>e.expressions.length)n.splice(a,1);else for(;n.length<e.expressions.length;)n.splice(a,0,n[a])}else{const a=new G.TypeVarContext((0,W.getTypeVarScopeId)(le));if(!(0,C.populateTypeVarContextBasedOnExpectedType)(Ar,$.ClassType.cloneAsInstance(le),t.expectedType,a,F.getTypeVarScopesForNode(e),e.start))return;const r=(0,W.applySolvedTypeVars)(le,a);if(!r.typeArguments||1!==r.typeArguments.length)return;const s=(0,W.transformPossibleRecursiveTypeAlias)(r.typeArguments[0]);for(let t=0;t<e.expressions.length;t++)n.push(s)}const a=e.expressions.map(((e,a)=>Be(e,void 0,(0,W.makeInferenceContext)(a<n.length?n[a]:void 0,t.isTypeIncomplete,t.signatureTracker)))),r=a.some((e=>e.isIncomplete)),s=zt(Bt(a));let i;return a.some((e=>e.expectedTypeDiagAddendum))&&(i=new p.DiagnosticAddendum,a.forEach((e=>{e.expectedTypeDiagAddendum&&i.addAddendum(e.expectedTypeDiagAddendum)}))),{type:s,expectedTypeDiagAddendum:i,isIncomplete:r}}function Bt(e){const t=[];for(const n of e){let e;if(n.unpackedType?e=n.unpackedType:(0,$.isUnpacked)(n.type)&&(e=n.type),e&&(0,$.isClassInstance)(e)&&e.tupleTypeArguments){const n=e.tupleTypeArguments;n?(0,o.appendArray)(t,n):t.push({type:$.UnknownType.create(),isUnbounded:!0})}else(0,$.isNever)(n.type)&&n.isIncomplete&&!n.unpackedType?t.push({type:$.UnknownType.create(!0),isUnbounded:!1}):t.push({type:n.type,isUnbounded:!!n.unpackedType})}if(t.filter((e=>e.isUnbounded)).length>1){const e=t.findIndex((e=>e.isUnbounded)),n=t.splice(e);t.push({type:(0,$.combineTypes)(n.map((e=>e.type))),isUnbounded:!0})}return t}function qt(e,t){let n,a,r,s,i;if(e.arguments.forEach(((e,t)=>{if(0===t)0!==e.argumentCategory||e.name||(n=e.valueExpression);else if(0===e.argumentCategory&&e.name)if("expected_text"===e.name.value){s=e.valueExpression;const t=Be(e.valueExpression).type;(0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"str")&&"string"==typeof t.literalValue?i=t.literalValue:mt(g.LocMessage.revealTypeExpectedTextArg(),e.valueExpression)}else"expected_type"===e.name.value&&(a=e.valueExpression,r=(0,W.convertToInstance)(Na(e).type));else n=void 0})),!n)return mt(g.LocMessage.revealTypeArgs(),e),{type:$.UnknownType.create()};const o=Be(n,void 0,t),l=o.type,p=F.printExpression(n),c=wr(l,{expandTypeAlias:!0});if(void 0!==i&&i!==c&&mt(g.LocMessage.revealTypeExpectedTextMismatch().format({expected:i,received:c}),null!=s?s:n),r&&!(0,$.isTypeSame)(r,l,{ignorePseudoGeneric:!0})){const e=wr(r);mt(g.LocMessage.revealTypeExpectedTypeMismatch().format({expected:e,received:c}),null!=a?a:n)}return ut(g.LocAddendum.typeOfSymbol().format({name:p,type:c}),e.arguments[0]),{type:l,isIncomplete:o.isIncomplete}}function Wt(e,t,n,a,r,s){var i,o;const l=[],p=[];let c=!1,d=[],u=!1;for(let r=0;r<t.length;r++){let m;const y=t[r],g=y.some((e=>void 0!==e));let h=[],f=!1;u=!1;for(let t=0;t<n.length;t++){const r=n[t].overload;let T=n[t];g&&(T={...n[t]},T.argParams=T.argParams.map(((e,t)=>{if(!y[t])return e;const n={...e};return n.argType=y[t],n})));const v=null!==(i=null==a?void 0:a.clone())&&void 0!==i?i:new G.TypeVarContext((0,W.getTypeVarScopeId)(r));v.addSolveForScope((0,W.getTypeVarScopeIds)(r)),v.unlock();const b=za(e,(()=>Xt(e,T,v,!0,s)));if(b.isTypeIncomplete&&(c=!0),!b.argumentErrors&&b.returnType){d.push(r),m=r;const e={overload:m,matchResults:T,typeVarContext:v,returnType:b.returnType,argResults:null!==(o=b.argResults)&&void 0!==o?o:[]};if(p.push(e),!b.anyOrUnknownArgument){l.push(b.returnType),u=!0;break}h.push(e),(0,W.isIncompleteUnknown)(b.anyOrUnknownArgument)&&(f=!0)}}if(!u&&h.length>0)if(h=Gt(h),1===h.length)d=[h[0].overload],l.push(h[0].returnType);else{let e=[],t=!1;h.forEach((n=>{let a=!1;for(let r=0;r<e.length;r++){if(nr(e[r],n.returnType)){const n=(0,W.containsAnyOrUnknown)(e[r],!1);n?(0,$.isAny)(n)&&(t=!0):a=!0;break}if(nr(n.returnType,e[r])){const a=(0,W.containsAnyOrUnknown)(n.returnType,!1);a?(0,$.isAny)(a)&&(t=!0):e[r]=$.NeverType.createNever();break}}a||e.push(n.returnType)})),e=e.filter((e=>!(0,$.isNever)(e)));const n=(0,$.combineTypes)(e);let a=n;e.length>1&&(a=t?$.AnyType.create():$.UnknownType.createPossibleType(n,f)),l.push(a)}if(!m)return{argumentErrors:!0,isTypeIncomplete:c,overloadsUsedForCall:d}}a&&u&&a.copyFromClone(p[p.length-1].typeVarContext);const m=null!=a?a:p[0].typeVarContext;m.unlock(),m.addSolveForScope((0,W.getTypeVarScopeId)(p[0].overload));const y=Xt(e,p[0].matchResults,m,r,s);return y.isTypeIncomplete&&(c=!0),{argumentErrors:y.argumentErrors,anyOrUnknownArgument:y.anyOrUnknownArgument,returnType:(0,$.combineTypes)(l),isTypeIncomplete:c,specializedInitSelfType:y.specializedInitSelfType,overloadsUsedForCall:d}}function Gt(e){if(e.length<2)return e;if(e[0].matchResults.relevance!==e[e.length-1].matchResults.relevance&&(e=e.filter((t=>t.matchResults.relevance===e[0].matchResults.relevance))).length<2)return e;if((0,W.areTypesSame)(e.map((e=>e.returnType)),{treatAnySameAsUnknown:!0}))return[e[0]];const t=e[0].argResults;if(!t)return e;let n=!1;for(let a=0;a<t.length;a++)if((0,$.isAnyOrUnknown)(t[a].argType)){const t=e.map((e=>a<e.matchResults.argParams.length?e.matchResults.argParams[a].paramType:$.UnknownType.create()));(0,W.areTypesSame)(t,{treatAnySameAsUnknown:!0})||(n=!0)}return n||e.some((e=>e.argResults.length!==t.length))?e:[e[0]]}function Kt(e){return e.sort(((e,t)=>e.relevance!==t.relevance?t.relevance-e.relevance:e.overloadIndex-t.overloadIndex))}function $t(e,t,n,a,r,s){let i,o=[],l=!!n.isIncomplete;if(za(e,(()=>{let a=0;$.OverloadedFunctionType.getOverloads(n.type).forEach((r=>{const s=Qt(e,t,{type:r,isIncomplete:n.isIncomplete},a);s.argumentErrors||o.push(s),a++}))})),o=Kt(o),0===o.length){if(!gt(e)){const a=n.type.overloads[0].details.name||"<anonymous function>",r=new p.DiagnosticAddendum,s=t.map((e=>{const t=wr(Pa(e).type);return 1===e.argumentCategory?`*${t}`:2===e.argumentCategory?`**${t}`:t}));r.addMessage(g.LocAddendum.argumentTypes().format({types:s.join(", ")})),ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.noOverload().format({name:a})+r.getString(),e)}return{argumentErrors:!0,isTypeIncomplete:l,overloadsUsedForCall:[]}}function d(t,n){const r=o.reduce(((e,t)=>t.argumentMatchScore===e.argumentMatchScore?t.overloadIndex>e.overloadIndex?t:e:t.argumentMatchScore<e.argumentMatchScore?t:e));if(n){const t=r.overload.details.name||"<anonymous function>",n=ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.noOverload().format({name:t}),e),a=r.overload.details.declaration;n&&a&&n.addRelatedInfo(g.LocAddendum.overloadIndex().format({index:r.overloadIndex+1}),a.uri,a.range)}const i=null!=a?a:new G.TypeVarContext;return i.addSolveForScope((0,W.getTypeVarScopeIds)(r.overload)),i.unlock(),Xt(e,r,i,t,s)}if(1===o.length)return d(!1,!1);let u=[t.map((e=>{}))];for(;;){const n=Wt(e,u,o,a,r,s);if(n.isTypeIncomplete&&(l=!0),!n.argumentErrors)return n;if(i||za(e,(()=>{i=t.map((e=>{if(e.typeResult)return e.typeResult.type;if(e.valueExpression){const t=e.valueExpression;return za(t,(()=>Be(t).type))}return $.AnyType.create()}))})),u=Ht(i,u),!u||u.length>64)break}if(!gt(e)&&!l){const e=d(!0,!0);return e.returnType=$.UnknownType.create(),{...e,argumentErrors:!0}}return{argumentErrors:!0,isTypeIncomplete:l,overloadsUsedForCall:[]}}function Ht(e,t){let n,a=e.length-1;for(;a>=0&&!t[0][a];)a--;if(a++,a>=e.length)return;for(;a<e.length;){const t=e[a];if((0,$.isUnion)(t)){n=Ct(t);break}if((0,$.isTypeVar)(t)&&t.details.constraints.length>1){n=Ct(t);break}a++}if(!n)return;const r=[];return t.forEach((e=>{(0,W.doForEachSubtype)(n,(t=>{const n=[...e];n[a]=t,r.push(n)}))})),r}function Zt(e,t,n,a,r=!1,s,i=0){let l,d=!1,u=!1;const m=[];if(i>$.maxTypeRecursionCount)return{returnType:$.UnknownType.create(),argumentErrors:!0,overloadsUsedForCall:m};if(i++,n.type.specialForm){const t=9===e.nodeType?e.leftExpression:e;return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.objectNotCallable().format({type:wr(n.type.specialForm,{expandTypeAlias:!0})}),t),{returnType:$.UnknownType.create(),argumentErrors:!0,overloadsUsedForCall:m}}let y=It(n.type,{sortSubtypes:!0},((y,h,f)=>za(f?void 0:e,(()=>{const f=function(e,t,n,a,r,s,i,o,l){switch(n.category){case 3:case 1:case 2:return r||t.forEach((e=>{e.valueExpression&&!Va(e.valueExpression)&&Pa(e)})),{returnType:n};case 4:return function(e,t,n,a,r,s,i){var o;if($.TypeBase.isInstantiable(n))return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.callableNotInstantiable().format({type:wr(n)}),e),{returnType:void 0,argumentErrors:!0};let l=r;l||(l=new G.TypeVarContext((0,W.getTypeVarScopeIds)(n)));if("namedtuple"===n.details.builtInName){ht(c.DiagnosticRule.reportUntypedNamedTuple,g.LocMessage.namedTupleNoTypes(),e);const a={returnType:(0,P.createNamedTupleType)(Ar,e,t,!1)};return an(e,t,{type:n},l,s),a}if("NewType"===n.details.builtInName)return{returnType:yn(e,t)};const p=an(e,t,{type:n,isIncomplete:a},l,s,i);let d=!!p.isTypeIncomplete,u=p.returnType,m=!!p.argumentErrors;if(!m){const a=(0,x.applyFunctionTransform)(Ar,e,t,n,{argumentErrors:!!p.argumentErrors,returnType:null!==(o=p.returnType)&&void 0!==o?o:$.UnknownType.create(d),isTypeIncomplete:d});u=a.returnType,a.isTypeIncomplete&&(d=!0),a.argumentErrors&&(m=!0)}"__import__"===n.details.builtInName&&(u=$.AnyType.create());return{returnType:u,isTypeIncomplete:d,argumentErrors:m,overloadsUsedForCall:p.overloadsUsedForCall,specializedInitSelfType:p.specializedInitSelfType}}(e,t,n,r,s,i,o);case 5:return function(e,t,n,a,r,s,i){var o,l;if("cast"===n.overloads[0].details.builtInName&&2===t.length)return{returnType:Jt(t,e)};const p=$t(e,t,{type:n,isIncomplete:a},r,s,i);let c=null!==(o=p.returnType)&&void 0!==o?o:$.UnknownType.create(),d=!!p.isTypeIncomplete,u=!!p.argumentErrors;if(!u){const a=(0,x.applyFunctionTransform)(Ar,e,t,n,{argumentErrors:!!p.argumentErrors,returnType:null!==(l=p.returnType)&&void 0!==l?l:$.UnknownType.create(d),isTypeIncomplete:d});c=a.returnType,a.isTypeIncomplete&&(d=!0),a.argumentErrors&&(u=!0)}return{returnType:c,isTypeIncomplete:d,argumentErrors:u,overloadsUsedForCall:p.overloadsUsedForCall,specializedInitSelfType:p.specializedInitSelfType}}(e,t,n,r,s,i,o);case 6:return(0,W.isNoneInstance)(n)?(ht(c.DiagnosticRule.reportOptionalCall,g.LocMessage.noneNotCallable(),e),{argumentErrors:!0}):$.TypeBase.isInstantiable(n)?function(e,t,n,a,r,s){var i,o;if(void 0!==n.literalValue)return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.literalNotCallable(),e),{returnType:$.UnknownType.create(),argumentErrors:!0};if($.ClassType.isBuiltIn(n)){const a=null!==(i=n.aliasName)&&void 0!==i?i:n.details.name;if((0,W.isInstantiableMetaclass)(n)){if(n.typeArguments&&n.isTypeArgumentExplicit)return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.objectNotCallable().format({type:wr(n)}),e),{returnType:$.UnknownType.create(),argumentErrors:!0};if((0,I.validateConstructorArguments)(Ar,e,t,n,r,s),"type"===n.details.name&&1===t.length){const e=Pa(t[0]).type,n=(0,W.mapSubtypes)(e,(e=>{var t;return(0,$.isInstantiableClass)(e)?null!==(t=e.details.effectiveMetaclass)&&void 0!==t?t:$.AnyType.create():(0,$.isClassInstance)(e)||(0,$.isTypeVar)(e)&&$.TypeBase.isInstance(e)||(0,W.isNoneInstance)(e)?(0,W.convertToInstantiable)(Ge(e)):(0,$.isFunction)(e)&&$.TypeBase.isInstance(e)?$.FunctionType.cloneAsInstantiable(e):$.AnyType.create()}));return{returnType:n}}return t.length>=2?{returnType:gn(e,t,n)||$.AnyType.create()}:{returnType:$.AnyType.create()}}if("TypeVar"===a)return{returnType:on(e,n,t)};if("TypeVarTuple"===a)return{returnType:pn(e,n,t)};if("ParamSpec"===a)return{returnType:dn(e,n,t)};if("TypeAliasType"===a){const n=function(e,t){if(9!==e.nodeType||!e.parent||t.length<2)return;if(3!==e.parent.nodeType||e.parent.rightExpression!==e||38!==e.parent.leftExpression.nodeType)return void ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasTypeMustBeAssigned(),e);const n=e.parent.leftExpression,a=t[0];if(!a.valueExpression||48!==a.valueExpression.nodeType)return void ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasTypeNameArg(),a.valueExpression||e);a.valueExpression.strings.map((e=>e.value)).join("")!==n.value&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasTypeNameMismatch(),a.valueExpression);let r,s,i;for(let e=1;e<t.length;e++){const n=t[e].name,a=n?n.value:void 0;if(a)if("type_params"!==a||s){if("value"!==a||r)return;r=t[e].valueExpression}else s=t[e].valueExpression;else{if(1!==e)return;r=t[e].valueExpression}}if(!r)return;if(s){if(52!==s.nodeType)return void mt(g.LocMessage.typeAliasTypeParamInvalid(),s);i=[];let e=!0;if(s.expressions.map((t=>{let a=Be(t,4224).type;(0,$.isTypeVar)(a)?(a.scopeId||a.isVariadicUnpacked?e=!1:a=$.TypeVarType.cloneForScopeId(a,F.getScopeIdForNode(n),n.value,2),i.push(a)):e=!1})),!e)return void ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasTypeParamInvalid(),s)}return $n(n,n,r,!0,void 0,(()=>i))}(e,t);if(n)return{returnType:n}}if("NamedTuple"===a){const a={returnType:(0,P.createNamedTupleType)(Ar,e,t,!0)},s=(0,I.getBoundInitMethod)(Ar,e,$.ClassType.cloneAsInstance(n),void 0,0);return s&&(0,$.isOverloadedFunction)(s.type)&&$t(e,t,{type:s.type},void 0,r,void 0),a}if("NewType"===a)return{returnType:yn(e,t)};if($.ClassType.isSpecialFormClass(n))return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.typeNotIntantiable().format({type:a}),e),{returnType:$.UnknownType.create(),argumentErrors:!0};if("TypedDict"===a)return{returnType:(0,K.createTypedDictType)(Ar,e,n,t)};if("auto"===a&&0===t.length)return{returnType:(0,A.getEnumAutoValueType)(Ar,e)}}if((0,$.isClass)(n)&&n.details.effectiveMetaclass&&(0,$.isClass)(n.details.effectiveMetaclass)&&(0,A.isEnumMetaclass)(n.details.effectiveMetaclass)&&!(0,A.isEnumClassWithMembers)(Ar,n))return{returnType:null!==(o=(0,A.createEnumType)(Ar,e,n,t))&&void 0!==o?o:(0,W.convertToInstance)(a)};if($.ClassType.supportsAbstractMethods(n)){const t=yr(n);if(t.length>0&&!n.includeSubclasses&&!(0,$.isTypeVar)(a)){const a=new p.DiagnosticAddendum,r=2;t.forEach(((e,n)=>{if(n===r)a.addMessage(g.LocAddendum.memberIsAbstractMore().format({count:t.length-r}));else if(n<r&&(0,$.isInstantiableClass)(e.classType)){const t=e.classType.details.name;a.addMessage(g.LocAddendum.memberIsAbstract().format({type:t,name:e.symbolName}))}})),ht(c.DiagnosticRule.reportAbstractUsage,g.LocMessage.instantiateAbstract().format({type:n.details.name})+a.getString(),e)}}$.ClassType.isProtocolClass(n)&&!n.includeSubclasses&&ht(c.DiagnosticRule.reportAbstractUsage,g.LocMessage.instantiateProtocol().format({type:n.details.name}),e);const l=(0,I.validateConstructorArguments)(Ar,e,t,n,r,s),d=l.overloadsUsedForCall,u=l.argumentErrors,m=l.isTypeIncomplete;let y=l.returnType;(0,$.isTypeVar)(a)&&(y=(0,W.convertToInstance)(a));if(y&&(0,$.isClassInstance)(y)&&y.details.mro.some((e=>(0,$.isInstantiableClass)(e)&&$.ClassType.isBuiltIn(e,"type")))){let a="__class_"+y.details.name;if(3===t.length){const e=Pa(t[0]).type;(0,$.isClassInstance)(e)&&$.ClassType.isBuiltIn(e,"str")&&"string"==typeof e.literalValue&&(a=e.literalValue)}const r=$.ClassType.createInstantiable(a,"","",v.getFileInfo(e).fileUri,0,F.getTypeSourceId(e),$.ClassType.cloneAsInstantiable(y),$.ClassType.cloneAsInstantiable(y));r.details.baseClasses.push(Fa(e,"object")),r.details.effectiveMetaclass=n,r.details.declaration=y.details.declaration,(0,W.computeMroLinearization)(r),y=r}return{returnType:y,overloadsUsedForCall:d,argumentErrors:u,isTypeIncomplete:m}}(e,t,n,a,i,o):function(e,t,n,a,r,s,i,o){var l;const d=new p.DiagnosticAddendum,u=Ye(e,n,"__call__",void 0,d,528,void 0,o),m=null==u?void 0:u.type;if(!m||u.typeErrors)return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.objectNotCallable().format({type:wr(n)})+d.getString(),e),{returnType:$.UnknownType.create(),argumentErrors:!0};const y=Zt(e,t,{type:m},r,s,i,o);let h=null!==(l=y.returnType)&&void 0!==l?l:$.UnknownType.create();(0,$.isTypeVar)(a)&&$.TypeBase.isInstantiable(a)&&(0,$.isClass)(n)&&$.ClassType.isBuiltIn(n,"type")&&(h=(0,W.convertToInstance)(a));return{returnType:h,argumentErrors:y.argumentErrors,overloadsUsedForCall:y.overloadsUsedForCall}}(e,t,n,a,s,i,o,l);case 9:return Zt(e,t,{type:(0,W.transformPossibleRecursiveTypeAlias)(n),isIncomplete:r},s,i,o,l);case 7:return ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.moduleNotCallable(),e),{argumentErrors:!0}}return{argumentErrors:!0}}(e,t,y,h,!!n.isIncomplete,a,r,s,i);return f.argumentErrors&&(d=!0),f.isTypeIncomplete&&(u=!0),f.overloadsUsedForCall&&(0,o.appendArray)(m,f.overloadsUsedForCall),l=f.specializedInitSelfType,f.returnType}),{allowDiagnostics:!0})));return d&&(0,$.isNever)(y)&&!y.isNoReturn&&(y=$.UnknownType.create()),{argumentErrors:d,returnType:y,isTypeIncomplete:u,specializedInitSelfType:l,overloadsUsedForCall:m}}function Yt(e,t){const n=$.ClassType.isProtocolClass(e),a=$.ClassType.getSymbolTable(e).get(t);if(!a)return;if(!a.isClassMember()&&!a.isNamedTupleMemberMember())return;const r=(0,L.getLastTypedDeclarationForSymbol)(a);if(!r)return;if(n&&1===r.type){if(!a.getDeclarations().some((e=>1===e.type&&!!e.inferredTypeSource)))return{symbol:a,symbolName:t,classType:e,hasImplementation:!1}}if(5!==r.type)return;let s=!1;const i=(0,S.getFunctionInfoFromDecorators)(Ar,r.node,!0);0!=(8&i.flags)&&(s=!0);const o=v.getFileInfo(r.node).isStubFile,l=a.getDeclarations()[0];let p;if(l!==r&&5===l.type&&(p=(0,S.getFunctionInfoFromDecorators)(Ar,l.node,!0),0!=(8&p.flags)&&(s=!0),n&&0!=(256&i.flags))){if(n&&!s&&o)return;return{symbol:a,symbolName:t,classType:e,hasImplementation:!1}}if(!n&&!s)return;const c=!F.isSuiteEmpty(r.node.suite)&&!ua(r);return!n||s||!c&&!o?{symbol:a,symbolName:t,classType:e,hasImplementation:c}:void 0}function Jt(e,t){const n=Na(e[0],{enforceTypeAnnotationRules:!0}).type;let a=Pa(e[1]).type;return a.specialForm&&(a=a.specialForm),$.TypeBase.isInstantiable(n)&&!(0,$.isUnknown)(n)&&(0,$.isTypeSame)((0,W.convertToInstance)(n),a,{ignorePseudoGeneric:!0})&&ht(c.DiagnosticRule.reportUnnecessaryCast,g.LocMessage.unnecessaryCast().format({type:wr(a)}),t),(0,W.convertToInstance)(n)}function Qt(e,t,n,a){var r,s,i,o,d,u,m,y,h,f;const T=(0,D.getParameterListDetails)(n.type);let v=0,b=!1,_=!1,C=!!n.isIncomplete,I=!1;t=function(e){var t;const n=[];for(const a of e){if(1===a.argumentCategory){const e=Pa(a).type,r=(0,W.combineSameSizedTuples)(Ct(e),le);if((0,$.isClassInstance)(r)&&(0,W.isTupleClass)(r)){const e=null!==(t=r.tupleTypeArguments)&&void 0!==t?t:[];if(1!==e.length||!e[0].isUnbounded){for(const t of e)t.isUnbounded?n.push({...a,argumentCategory:1,valueExpression:void 0,typeResult:{type:zt([t])}}):n.push({...a,argumentCategory:0,valueExpression:void 0,typeResult:{type:t.type}});continue}}}n.push(a)}return n}(t);const k=new Map;T.params.forEach((e=>{(0,l.assert)(void 0!==e,"paramInfo is undefined for param name map");const t=e.param;t.name&&0===t.category&&k.set(t.name,{argsNeeded:0!==t.category||t.hasDefault?0:1,argsReceived:0,isPositionalOnly:e.source===D.ParameterSource.PositionOnly})}));let w=T.positionOnlyParamCount,S=null!==(r=T.firstKeywordOnlyIndex)&&void 0!==r?r:T.params.length;const A=T.argsIndex,x=T.kwargsIndex;let P,N,F=!1;if(void 0!==A&&void 0!==x){(0,l.assert)(T.params[A],"varArgListParamIndex params entry is undefined");const e=T.params[A].param;(0,l.assert)(T.params[x],"varArgDictParamIndex params entry is undefined");const t=T.params[x].param;if((0,$.isParamSpec)(e.type)&&"args"===e.type.paramSpecAccess&&(0,$.isParamSpec)(t.type)&&"kwargs"===t.type.paramSpecAccess&&e.type.details.name===t.type.details.name){F=!0;const t=e.type.scopeId;(null===(s=(0,W.getTypeVarScopeIds)(n.type))||void 0===s?void 0:s.some((e=>e===t)))?(P=[],N=$.TypeVarType.cloneForParamSpecAccess(e.type,void 0)):w=A}}else if(n.type.details.paramSpec){const e=n.type.details.paramSpec.scopeId;(null===(i=(0,W.getTypeVarScopeIds)(n.type))||void 0===i?void 0:i.some((t=>t===e)))&&(F=!0,P=[],N=$.TypeVarType.cloneForParamSpecAccess(n.type.details.paramSpec,void 0))}t.some((e=>1===e.argumentCategory))&&t.forEach((e=>{if(e.name){const t=T.params.findIndex((t=>((0,l.assert)(t,"paramInfo entry is undefined fork kwargs check"),t.param.name===e.name.value&&0===t.param.category)));t>=0&&t>=w&&(S<0||t<S)&&(S=t)}})),S<0&&(S=T.params.length);let E=t.findIndex((e=>2===e.argumentCategory||void 0!==e.name));E<0&&(E=t.length);let M,O=[];function z(e,t){e.active&&(M=t)}const V=void 0!==t.find((e=>1===e.argumentCategory));let U=0;for(;v<E;){if(v<w&&t[v].name){const e=t[v].name;e&&(ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.argPositional(),e),_=!0)}const n=E-v,a=S-U-1;if(U>=S){if(P)for(;v<E;)P.push(t[v]),v++;else{let n=!1;if(V&&1===t[v].argumentCategory){const e=Pa(t[v]).type;(0,$.isClassInstance)(e)&&(0,W.isTupleClass)(e)&&!(0,W.isUnboundedTupleClass)(e)&&void 0!==e.tupleTypeArguments&&e.tupleTypeArguments.length>0&&(n=!0)}else n=!0;n&&(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,1===S?g.LocMessage.argPositionalExpectedOne():g.LocMessage.argPositionalExpectedCount().format({expected:S}),null!==(o=t[v].valueExpression)&&void 0!==o?o:e),_=!0)}break}if(U>=T.params.length)break;(0,l.assert)(T.params[U],"paramIndex params entry is undefined");const r=T.params[U].type,s=T.params[U].param.name,i=1===T.params[U].param.category&&(0,$.isVariadicTypeVar)(r);if(1===t[v].argumentCategory){let o=!1;const l=Pa(t[v]);let p,y=!1;U<S&&(0,$.isTypeVar)(l.type)&&"args"===l.type.paramSpecAccess&&1!==T.params[U].param.category&&(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,1===S?g.LocMessage.argPositionalExpectedOne():g.LocMessage.argPositionalExpectedCount().format({expected:S}),null!==(d=t[v].valueExpression)&&void 0!==d?d:e),_=!0);const h=l.type;i&&(0,$.isUnpackedVariadicTypeVar)(h)?(p=h,o=!0,y=!0,I=!0):(0,$.isClassInstance)(h)&&(0,W.isTupleClass)(h)&&h.tupleTypeArguments&&1===h.tupleTypeArguments.length&&(0,$.isUnpackedVariadicTypeVar)(h.tupleTypeArguments[0].type)?(p=h.tupleTypeArguments[0].type,o=!0,y=!0,I=!0):i&&(0,$.isClassInstance)(h)&&(0,W.isTupleClass)(h)?(o=!0,y=!0,n<a&&(I=!0),p=$.ClassType.cloneForUnpacked(h)):(0,$.isParamSpec)(h)&&"args"===h.paramSpecAccess?p=void 0:(p=null===(u=nt({type:h,isIncomplete:l.isIncomplete},!1,e,!1))||void 0===u?void 0:u.type,1!==T.params[U].param.category&&(b=!0));const f=p?{argumentCategory:0,typeResult:{type:p,isIncomplete:l.isIncomplete}}:{...t[v]};l.isIncomplete&&(C=!0),i&&!o?(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.unpackedArgWithVariadicParam(),t[v].valueExpression||e),_=!0):(P&&P.push(t[v]),f&&O.push({paramCategory:T.params[U].param.category,paramType:r,requiresTypeVarMatching:(0,W.requiresSpecialization)(r),argument:f,errorNode:null!==(m=t[v].valueExpression)&&void 0!==m?m:e,paramName:s,isParamNameSynthesized:T.params[U].param.isNameSynthesized,mapsToVarArgList:i&&n>a})),z(t[v],T.params[U].param),s&&0===T.params[U].param.category&&k.has(s)&&k.get(s).argsReceived++,(y||1===T.params[U].param.category)&&v++,(I||1!==T.params[U].param.category)&&U++}else if(1===T.params[U].param.category)if(z(t[v],T.params[U].param),P)P.push(t[v]),v++;else{let s=T.params[U].param.category,i=r;const o=T.params[U].param.name;(0,$.isUnpackedClass)(r)&&r.tupleTypeArguments&&r.tupleTypeArguments.length>0&&(i=r.tupleTypeArguments[0].type),s=(0,$.isVariadicTypeVar)(i)?1:0,n<=a?(n<a&&(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,1===n?g.LocMessage.argMorePositionalExpectedOne():g.LocMessage.argMorePositionalExpectedCount().format({expected:n}),t[v].valueExpression||e),_=!0),U++):(O.push({paramCategory:s,paramType:i,requiresTypeVarMatching:(0,W.requiresSpecialization)(r),argument:t[v],errorNode:t[v].valueExpression||e,paramName:o,isParamNameSynthesized:T.params[U].param.isNameSynthesized,mapsToVarArgList:!0}),v++)}else{const n=T.params[U].param.name;O.push({paramCategory:T.params[U].param.category,paramType:r,requiresTypeVarMatching:(0,W.requiresSpecialization)(r),argument:t[v],errorNode:t[v].valueExpression||e,paramName:n,isParamNameSynthesized:T.params[U].param.isNameSynthesized}),z(t[v],T.params[U].param),n&&k.has(n)&&k.get(n).argsReceived++,v++,U++}}let R=!1;if(w>=0&&U<w&&U<T.params.length&&1===T.params[U].param.category&&!(0,$.isParamSpec)(T.params[U].param.type)&&(U++,R=!0),w>=0&&U<w&&(!V||F)){const n=T.params.findIndex((e=>e.param.hasDefault));let a=(n>=0&&n<w?n:w)-E;R&&a--;const r=T.params.findIndex((e=>1===e.param.category&&!(0,$.isParamSpec)(e.param.type)));r>=U&&r<w&&a--,a>0&&(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,1===a?g.LocMessage.argMorePositionalExpectedOne():g.LocMessage.argMorePositionalExpectedCount().format({expected:a}),t.length>E&&t[E].valueExpression||e),_=!0)}if(!_){let a;for(;v<t.length;){if(2===t[v].argumentCategory){const r=Pa(t[v],(0,W.makeInferenceContext)(T.unpackedKwargsTypedDictType)).type;if((0,$.isAnyOrUnknown)(r))a=r;else if((0,$.isClassInstance)(r)&&$.ClassType.isTypedDictClass(r)){const n=(0,K.getTypedDictMembersForClass)(Ar,r),a=new p.DiagnosticAddendum;n.knownItems.forEach(((n,r)=>{const s=k.get(r);if(s&&!s.isPositionalOnly)if(s.argsReceived>0)a.addMessage(g.LocMessage.paramAlreadyAssigned().format({name:r}));else{s.argsReceived++;const a=T.params.findIndex((e=>e.param.name===r));(0,l.assert)(a>=0);const i=T.params[a].type;O.push({paramCategory:0,paramType:i,requiresTypeVarMatching:(0,W.requiresSpecialization)(i),argument:{argumentCategory:0,typeResult:{type:n.valueType}},errorNode:t[v].valueExpression||e,paramName:r})}else if(void 0!==T.kwargsIndex){const a=T.params[T.kwargsIndex].type;O.push({paramCategory:2,paramType:a,requiresTypeVarMatching:(0,W.requiresSpecialization)(a),argument:{argumentCategory:0,typeResult:{type:n.valueType}},errorNode:t[v].valueExpression||e,paramName:r}),k.set(r,{argsNeeded:1,argsReceived:1,isPositionalOnly:!1})}else T.hasUnpackedTypedDict||a.addMessage(g.LocMessage.paramNameMissing().format({name:r}))})),a.isEmpty()||(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.unpackedTypedDictArgument()+a.getString(),t[v].valueExpression||e),_=!0)}else if(n.type.details.paramSpec&&(0,D.isParamSpecKwargsArgument)(n.type.details.paramSpec,r))a=$.AnyType.create(),P||O.push({paramCategory:2,paramType:n.type.details.paramSpec,requiresTypeVarMatching:!1,argument:t[v],argType:(0,$.isParamSpec)(r)?void 0:$.AnyType.create(),errorNode:t[v].valueExpression||e});else{const n=Ea(e,"str");if(ge&&(0,$.isInstantiableClass)(ge)&&n&&(0,$.isClassInstance)(n)){const s=new G.TypeVarContext((0,W.getTypeVarScopeId)(ge));let i=!1;if((0,$.isTypeVar)(r))i=!0;else if(nr($.ClassType.cloneAsInstance(ge),r,void 0,s)){const e=(0,W.applySolvedTypeVars)(ge,s).typeArguments;e&&e.length>=2?(nr(n,e[0])&&(i=!0),a=e[1]):(i=!0,a=$.UnknownType.create())}if(void 0!==T.kwargsIndex&&a){const n=T.params[T.kwargsIndex].type;O.push({paramCategory:0,paramType:n,requiresTypeVarMatching:(0,W.requiresSpecialization)(n),argType:a,argument:t[v],errorNode:t[v].valueExpression||e,paramName:T.params[T.kwargsIndex].param.name})}i||(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.unpackedDictArgumentNotMapping(),t[v].valueExpression||e),_=!0)}}P&&P.push(t[v])}else{const a=t[v].name;if(a){const n=a.value,r=k.get(n);if(r&&!r.isPositionalOnly)if(r.argsReceived>0)gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.paramAlreadyAssigned().format({name:n}),a),_=!0;else{r.argsReceived++;const a=T.params.findIndex((e=>e.param.name===n));(0,l.assert)(a>=0);const s=T.params[a].type;O.push({paramCategory:0,paramType:s,requiresTypeVarMatching:(0,W.requiresSpecialization)(s),argument:t[v],errorNode:null!==(y=t[v].valueExpression)&&void 0!==y?y:e,paramName:n}),z(t[v],T.params[a].param)}else if(P)P.push(t[v]);else if(void 0!==T.kwargsIndex){const a=T.params[T.kwargsIndex].type;O.push({paramCategory:2,paramType:a,requiresTypeVarMatching:(0,W.requiresSpecialization)(a),argument:t[v],errorNode:null!==(h=t[v].valueExpression)&&void 0!==h?h:e,paramName:n}),k.set(n,{argsNeeded:1,argsReceived:1,isPositionalOnly:!1}),(0,l.assert)(T.params[T.kwargsIndex],"paramDetails.kwargsIndex params entry is undefined"),z(t[v],T.params[T.kwargsIndex].param)}else gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.paramNameMissing().format({name:a.value}),a),_=!0}else if(0===t[v].argumentCategory)P?P.push(t[v]):(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,1===S?g.LocMessage.argPositionalExpectedOne():g.LocMessage.argPositionalExpectedCount().format({expected:S}),t[v].valueExpression||e),_=!0);else if(1===t[v].argumentCategory&&n.type.details.paramSpec){const a=Pa(t[v]),r=a.type;a.isIncomplete&&(C=!0),(0,D.isParamSpecArgsArgument)(n.type.details.paramSpec,r)&&O.push({paramCategory:1,paramType:n.type.details.paramSpec,requiresTypeVarMatching:!1,argument:t[v],argType:(0,$.isParamSpec)(r)?void 0:$.AnyType.create(),errorNode:null!==(f=t[v].valueExpression)&&void 0!==f?f:e})}}v++}if(!a||V&&void 0===T.argsIndex||T.params.forEach(((n,r)=>{var s,i;const o=n.param;if(r>=T.firstPositionOrKeywordIndex&&0===o.category&&o.name&&k.has(o.name)&&0===k.get(o.name).argsReceived){const n=T.params[r].type;O.push({paramCategory:0,paramType:n,requiresTypeVarMatching:(0,W.requiresSpecialization)(n),argument:{argumentCategory:0,typeResult:{type:a}},errorNode:null!==(i=null===(s=t.find((e=>2===e.argumentCategory)))||void 0===s?void 0:s.valueExpression)&&void 0!==i?i:e,paramName:o.name,isParamNameSynthesized:o.isNameSynthesized}),k.get(o.name).argsReceived=1}})),!a&&!$.FunctionType.isDefaultParameterCheckDisabled(n.type)){const t=Array.from(k.keys()).filter((e=>{const t=k.get(e);return!t||t.argsReceived<t.argsNeeded}));if(t.length>0){if(!gt(e)){const n=t.map((e=>`"${e}"`)).join(", ");gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,1===t.length?g.LocMessage.argMissingForParam().format({name:n}):g.LocMessage.argMissingForParams().format({names:n}),e)}_=!0}T.params.forEach((t=>{var n;const a=t.param;if(0===a.category&&a.name){const r=k.get(a.name);if(0===r.argsNeeded&&0===r.argsReceived){const r=null!==(n=t.defaultArgType)&&void 0!==n?n:a.defaultType;r&&!(0,W.isEllipsisType)(r)&&(0,W.requiresSpecialization)(a.type)&&O.push({paramCategory:a.category,paramType:t.type,requiresTypeVarMatching:!0,argument:{argumentCategory:0,typeResult:{type:r}},isDefaultArg:!0,errorNode:e,paramName:a.name,isParamNameSynthesized:a.isNameSynthesized})}}}))}}if((!_||!Va(void 0))&&((0,l.assert)(void 0===T.argsIndex||T.argsIndex<T.params.length,"paramDetails.argsIndex params entry is invalid"),void 0!==T.argsIndex&&T.argsIndex>=0&&T.params[T.argsIndex].param.hasDeclaredType&&!I)){const t=T.params[T.argsIndex].type,n=O.filter((e=>e.mapsToVarArgList));if((0,$.isVariadicTypeVar)(t)&&!t.isVariadicInUnion){const a=n.map((t=>{var n;const a=Pa(t.argument).type;return((0,$.isUnpackedVariadicTypeVar)(a)||(0,$.isClassInstance)(a)&&(0,W.isTupleClass)(a)&&a.tupleTypeArguments&&1===a.tupleTypeArguments.length&&(0,$.isUnpackedVariadicTypeVar)(a.tupleTypeArguments[0].type))&&1!==t.argument.argumentCategory&&!t.mapsToVarArgList&&(gt(e)||C||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.typeVarTupleMustBeUnpacked(),null!==(n=t.argument.valueExpression)&&void 0!==n?n:e),_=!0),{type:a,isUnbounded:1===t.argument.argumentCategory}}));let r;r=1!==a.length||a[0].isUnbounded||!(0,$.isUnpackedClass)(a[0].type)&&!(0,$.isVariadicTypeVar)(a[0].type)?zt(a,!0):a[0].type;const s={paramCategory:1,paramType:t,requiresTypeVarMatching:!0,argument:{argumentCategory:0,typeResult:{type:r}},errorNode:e,paramName:T.params[T.argsIndex].param.name,isParamNameSynthesized:T.params[T.argsIndex].param.isNameSynthesized,mapsToVarArgList:!0};O=[...O.filter((e=>!e.mapsToVarArgList)),s]}}let L=0;return b&&L--,["isinstance","issubclass"].some((e=>e===n.type.details.builtInName))&&2===O.length&&(O[1].isinstanceParam=!0),{overload:n.type,overloadIndex:a,argumentErrors:_,isTypeIncomplete:C,argParams:O,paramSpecTarget:N,paramSpecArgList:P,activeParam:M,relevance:L,argumentMatchScore:0}}function Xt(e,t,n,a=!1,r){var s,i;const o=t.overload,l=null!==(s=null==r?void 0:r.signatureTracker)&&void 0!==s?s:new W.UniqueSignatureTracker;if(t.overload=(0,W.ensureFunctionSignaturesAreUnique)(t.overload,l,e.start),!r||(0,$.isAnyOrUnknown)(r.expectedType)||(0,$.isNever)(r.expectedType)||!o.details.declaredReturnType||!(0,W.requiresSpecialization)(null!==(i=$.FunctionType.getSpecializedReturnType(o))&&void 0!==i?i:$.UnknownType.create()))return en(e,t,n,l,a);const p=Za(o);let c=r.expectedType,d=2048;if((0,W.containsLiteralType)(c,!0)&&(d|=256),(0,$.isUnion)(r.expectedType)&&za(e,(()=>{const r=n.clone();nr(p,c,void 0,r,void 0,d);const s=en(e,t,r,l,a);(null==s?void 0:s.argumentErrors)&&(c=void 0)})),c){const t=F.getTypeVarScopesForNode(e);if((0,$.isClassInstance)(p)){if((0,$.isUnion)(c)){const e=(0,W.mapSubtypes)(c,(e=>{if((0,$.isClassInstance)(e)&&0!==e.details.typeParameters.length)return $.ClassType.isProtocolClass(e)||e.details.mro.some((e=>(0,$.isClassInstance)(e)&&e.details.typeParameters.length>0&&$.ClassType.isSameGenericClass(p,e)))?e:void 0}),!0);(0,$.isClassInstance)(e)&&(c=e)}if((0,$.isClassInstance)(c)&&!(0,$.isTypeSame)(p,c)){const n=new G.TypeVarContext((0,W.getTypeVarScopeId)(p));if((0,C.populateTypeVarContextBasedOnExpectedType)(Ar,p,c,n,t,e.start)){const e=$.ClassType.cloneForSpecialization(p,void 0,!1);c=(0,W.applySolvedTypeVars)(e,n,{unknownIfNotFound:!0}),d|=4096}}}else(0,$.isFunction)(p)&&(0,$.isUnion)(c)&&(c=(0,W.mapSubtypes)(c,(e=>(0,W.isCallableType)(e)?e:void 0)));c=(0,W.transformExpectedType)(c,t,e.start),nr(p,c,void 0,n,void 0,d)}return en(e,t,n,l,a)}function en(e,t,n,a,r=!1){const s=t.overload;let i,l,p=t.isTypeIncomplete,d=!1,u=0;const m=(0,W.getTypeCondition)(s);if(s.boundToType&&!s.boundToType.includeSubclasses&&s.details.methodClass){const t=Yt(s.details.methodClass,s.details.name);t&&!t.hasImplementation&&ht(c.DiagnosticRule.reportAbstractUsage,g.LocMessage.abstractMethodInvocation().format({method:s.details.name}),9===e.nodeType?e.leftExpression:e)}if(s.boundTypeVarScopeId&&(void 0!==s.preBoundFlags&&s.boundToType&&(0,W.requiresSpecialization)(s.boundToType)&&6&s.preBoundFlags&&n.addSolveForScope(s.boundTypeVarScopeId),"__init__"===s.details.name&&s.strippedFirstParamType&&s.boundToType&&(0,$.isClassInstance)(s.strippedFirstParamType)&&(0,$.isClassInstance)(s.boundToType)&&$.ClassType.isSameGenericClass(s.strippedFirstParamType,s.boundToType)&&s.strippedFirstParamType.typeArguments)){const e=s.strippedFirstParamType.details.typeParameters;i=s.strippedFirstParamType,s.strippedFirstParamType.typeArguments.forEach(((t,a)=>{if(a<e.length){const r=e[a];(0,$.isTypeSame)(r,t,{ignorePseudoGeneric:!0})||n.setTypeVarType(e[a],t)}}))}["cast","isinstance","issubclass"].some((e=>e===s.details.builtInName))&&(r=!0);const y=t.argParams.filter((e=>e.requiresTypeVarMatching)).length;if(y>0){let i=Math.min(y,2);for(let o=0;o<i;o++)za(e,(()=>{t.argParams.forEach((e=>{if(!e.requiresTypeVarMatching)return;const l=sn(e,n,a,{type:s,isIncomplete:t.isTypeIncomplete},{skipUnknownArgCheck:r,skipOverloadArg:0===o,skipBareTypeVarExpectedType:0===o,useNarrowBoundOnly:i>1&&0===o,conditionFilter:m});l.isTypeIncomplete&&(p=!0),0===o&&(l.skippedOverloadArg||l.skippedBareTypeVarExpectedType)&&i++}))}));n.lock()}let h=!1,f=!1,T=[];const v=[];t.argParams.forEach(((e,i)=>{var o;const c=sn(e,n,a,{type:s,isIncomplete:t.isTypeIncomplete},{skipUnknownArgCheck:r,conditionFilter:m});v.push(c),c.isCompatible||(d=!0,u+=t.argParams.length-i+1),c.isTypeIncomplete&&(p=!0),c.condition&&(T=null!==(o=$.TypeCondition.combine(T,c.condition))&&void 0!==o?o:[]),(0,$.isAnyOrUnknown)(c.argType)&&(l=l?(0,W.preserveUnknown)(c.argType,l):c.argType),s.details.paramSpec&&(1===e.argument.argumentCategory&&(0,D.isParamSpecArgsArgument)(s.details.paramSpec,c.argType)&&(h=!0),2===e.argument.argumentCategory&&(0,D.isParamSpecKwargsArgument)(s.details.paramSpec,c.argType)&&(f=!0))}));let b=[];if(t.paramSpecArgList&&t.paramSpecTarget){const r=function(e,t,n,a,r){const s=a.getSignatureContexts();if(1===s.length)return rn(e,t,n,s[0],r);const i=[],l=[];s.forEach((a=>{za(e,(()=>{const s=rn(e,t,n,a,r);s.argumentErrors||i.push(a),(0,o.appendArray)(l,s.typeVarContexts)}))})),i.length>0&&a.copySignatureContexts(i);const p=rn(e,t,n,i.length>0?i[0]:s[0],r);return{argumentErrors:p.argumentErrors,typeVarContexts:l}}(e,t.paramSpecArgList,t.paramSpecTarget,n,a);r.argumentErrors&&(d=!0,u+=1),b=r.typeVarContexts}else s.details.paramSpec&&(h&&f||(p||ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.paramSpecArgsMissing().format({type:wr(s.details.paramSpec)}),e),d=!0,u+=1));let _=Za(s,t.argParams);T.length>0&&(_=$.TypeBase.cloneForCondition(_,T));let C=!0,I=e;for(;I;){const e=F.getTypeVarScopeNode(I);if(!e)break;const t=F.getScopeIdForNode(e);n.hasSolveForScope(t)&&(C=!1),I=e.parent}((0,$.isFunction)(_)||(0,$.isOverloadedFunction)(_))&&(C=!1);const k=!F.getTypeVarScopesForNode(e).some((e=>n.hasSolveForScope(e)))&&!s.details.rescopedTypeParameters;let w=(0,W.applySolvedTypeVars)(_,n,{unknownIfNotFound:k,unknownExemptTypeVars:tn(s,_),eliminateUnsolvedInUnions:C,applyInScopePlaceholders:!0});if(w=(0,W.addConditionToType)(w,m),b.length>0&&b.forEach((e=>{e&&(w=(0,W.applySolvedTypeVars)(w,e))})),(0,$.isUnpackedClass)(w)&&(w=$.ClassType.cloneForUnpacked(w,!1)),(0,$.isClassInstance)(w)&&$.ClassType.isBuiltIn(w,["TypeGuard","TypeIs"])&&w.typeArguments&&w.typeArguments.length>0&&pe&&(0,$.isInstantiableClass)(pe)){let e=w.typeArguments[0];if(v.length>0){const t=v[0].argType;(0,$.isTypeVar)(t)&&!t.details.isParamSpec&&0===t.details.constraints.length&&(e=(0,W.addConditionToType)(e,[{typeVar:t,constraintIndex:0}]))}const t=$.ClassType.isBuiltIn(w,"TypeIs");w=$.ClassType.cloneAsInstance($.ClassType.cloneForTypeGuard(pe,e,t))}const S=F.getTypeVarScopesForNode(e);return w=nn(s,w,S,a.getTrackedSignatures()),i&&(i=(0,W.applySolvedTypeVars)(i,n)),t.argumentMatchScore=u,{argumentErrors:d,argResults:v,anyOrUnknownArgument:l,returnType:w,isTypeIncomplete:p,activeParam:t.activeParam,specializedInitSelfType:i,overloadsUsedForCall:d?[]:[s]}}function tn(e,t){if((0,$.isFunction)(t)&&!t.details.name){if(t.details.typeVarScopeId&&e.details.typeVarScopeId){let n=(0,W.getTypeVarArgumentsRecursive)(t);return e.details.parameters.forEach(((e,t)=>{if(e.hasDeclaredType){const t=(0,W.getTypeVarArgumentsRecursive)(e.type);n=n.filter((e=>!t.some((t=>(0,$.isTypeSame)(e,t)))))}})),n}}return[]}function nn(e,t,n,a){if((0,$.isFunction)(t)&&!t.details.name&&e.details.typeVarScopeId){const r=(0,W.getTypeVarArgumentsRecursive)(t).filter((e=>!n.some((t=>e.scopeId===t))));if(r.length>0)return $.FunctionType.cloneWithNewTypeVarScopeId(t,e.details.typeVarScopeId,r,a)}return t}function an(e,t,n,a,r=!1,s){var i;const o=null!==(i=null==s?void 0:s.signatureTracker)&&void 0!==i?i:new W.UniqueSignatureTracker;n.type=(0,W.ensureFunctionSignaturesAreUnique)(n.type,o,e.start);const l=Qt(e,t,n,0);return l.argumentErrors?(t.forEach((e=>{e.valueExpression&&!Va(e.valueExpression)&&Be(e.valueExpression)})),{argumentErrors:!0,activeParam:l.activeParam,overloadsUsedForCall:[]}):Xt(e,l,a,r,(0,W.makeInferenceContext)(null==s?void 0:s.expectedType,null==s?void 0:s.isTypeIncomplete,o))}function rn(e,t,n,a,r){var s;let i=a.getParamSpecType(n);i||(i=(0,W.convertTypeToParamSpecValue)(n));const o=Qt(e,t,{type:i},0),l=o.overload,p=new G.TypeVarContext((0,W.getTypeVarScopeIds)(i));if(o.argumentErrors)return t.forEach((e=>{e.valueExpression&&!Va(e.valueExpression)&&Be(e.valueExpression)})),{argumentErrors:!0,typeVarContexts:[p]};if(l.details.paramSpec&&0===l.details.parameters.length&&(0,$.isTypeSame)(l.details.paramSpec,n)){let a,r=!1,i=!1,o=!1;for(const e of t){const t=null===(s=Pa(e))||void 0===s?void 0:s.type,l=t&&((0,$.isTypeSame)(t,n,{ignoreTypeFlags:!0})||(0,$.isAnyOrUnknown)(t));1===e.argumentCategory&&!r&&l?r=!0:2===e.argumentCategory&&!i&&l?i=!0:(a=null!=a?a:e.valueExpression,o=!0)}return r&&i||(o=!0),o&&ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.paramSpecArgsMissing().format({type:wr(l.details.paramSpec)}),null!=a?a:e),{argumentErrors:o,typeVarContexts:[p]}}return{argumentErrors:!!en(e,o,p,r).argumentErrors,typeVarContexts:[p]}}function sn(e,t,n,a,r){var s;let i,o,l=!!(null==a?void 0:a.isIncomplete),d=!0;const u=null==a?void 0:a.type.details.name;let m=!1,y=!1;if(e.argument.valueExpression){let b,_=!0;if((0,W.doForEachSubtype)(e.paramType,(e=>{(0,$.isTypeVar)(e)&&e.scopeId===(null==a?void 0:a.type.details.typeVarScopeId)||(_=!1)})),r.skipBareTypeVarExpectedType&&_)m=!0,(0,$.isUnion)(e.paramType)&&(y=!0);else{b=e.paramType;(0,$.isFunction)(e.paramType)&&!!e.paramType.details.paramSpec&&t.getSignatureContexts().length>1||(b=(0,W.applySolvedTypeVars)(b,t,{useNarrowBoundOnly:!!r.useNarrowBoundOnly}))}if(b&&(0,$.isUnknown)(b)&&(b=void 0),e.argType)i=e.argType;else{const C=e.isinstanceParam?632:18,k=Be(e.argument.valueExpression,C,(0,W.makeInferenceContext)(b,!!(null==a?void 0:a.isIncomplete),n));if(i=k.type,i=(0,W.ensureFunctionSignaturesAreUnique)(i,n,e.argument.valueExpression.start),k.isIncomplete&&(l=!0),k.typeErrors)d=!1;else if(b&&(0,W.requiresSpecialization)(b)){const w=t.clone();nr(b,i,void 0,w)?t.copyFromClone(w):d=!1}o=k.expectedTypeDiagAddendum}e.argument&&e.argument.name&&!Va(e.errorNode)&&De(e.argument.name,{type:null!=b?b:i,isIncomplete:l},0)}else{if(e.argType)i=e.argType;else{const S=Pa(e.argument);i=S.type,S.isIncomplete&&(l=!0)}e.isDefaultArg&&(i=(0,W.applySolvedTypeVars)(i,t))}2===e.paramCategory&&(0,$.isTypeVar)(e.paramType)&&(i=Ge(i)),r.conditionFilter&&(i=It(i,{conditionFilter:r.conditionFilter},(e=>e)));const h=i.condition;let f=new p.DiagnosticAddendum;if((0,$.isParamSpec)(e.paramType)){if(void 0!==e.paramType.paramSpecAccess)return{isCompatible:d,argType:i,isTypeIncomplete:l,condition:h};if((0,$.isParamSpec)(i)&&void 0!==i.paramSpecAccess)return{isCompatible:d,argType:i,isTypeIncomplete:l,condition:h}}if(r.skipOverloadArg){if((0,$.isOverloadedFunction)(i))return{isCompatible:d,argType:i,isTypeIncomplete:l,skippedOverloadArg:!0,skippedBareTypeVarExpectedType:m,condition:h};const A=Ct(e.paramType);if((0,$.isFunction)(A)||(0,$.isOverloadedFunction)(A)){if((0,$.isInstantiableClass)(i)){if((0,I.createFunctionFromConstructor)(Ar,i))return{isCompatible:d,argType:i,isTypeIncomplete:l,skippedOverloadArg:!0,skippedBareTypeVarExpectedType:m,condition:h}}if((0,$.isClassInstance)(i)){const x=(0,W.lookUpObjectMember)(i,"__call__",16);if(x){const P=Ja(x);if((0,$.isOverloadedFunction)(P))return{isCompatible:d,argType:i,isTypeIncomplete:l,skippedOverloadArg:!0,skippedBareTypeVarExpectedType:m,condition:h}}}}}let T=y?8:0;if(e.isinstanceParam&&(T|=32768),!nr(e.paramType,i,f.createAddendum(),t,void 0,T)){if("none"!==v.getFileInfo(e.errorNode).diagnosticRuleSet.reportArgumentType&&!gt(e.errorNode)&&!l){const N=wr(i),D=wr(e.paramType);let F;F=e.paramName&&!e.isParamNameSynthesized?u?g.LocMessage.argAssignmentParamFunction().format({argType:N,paramType:D,functionName:u,paramName:e.paramName}):g.LocMessage.argAssignmentParam().format({argType:N,paramType:D,paramName:e.paramName}):u?g.LocMessage.argAssignmentFunction().format({argType:N,paramType:D,functionName:u}):g.LocMessage.argAssignment().format({argType:N,paramType:D}),o&&(f=o),ht(c.DiagnosticRule.reportArgumentType,F+f.getString(),e.errorNode,null!==(s=f.getEffectiveTextRange())&&void 0!==s?s:e.errorNode)}return{isCompatible:!1,argType:i,isTypeIncomplete:l,skippedBareTypeVarExpectedType:m,condition:h}}if(!r.skipUnknownArgCheck){const E=(0,$.removeUnbound)(i);function M(){const t=new p.DiagnosticAddendum;return e.paramName&&t.addMessage((u?g.LocAddendum.argParamFunction().format({paramName:e.paramName,functionName:u}):g.LocAddendum.argParam().format({paramName:e.paramName}))+t.getString()),t}if("none"!==v.getFileInfo(e.errorNode).diagnosticRuleSet.reportUnknownArgumentType&&!(0,$.isAny)(e.paramType)&&!l)if((0,$.isUnknown)(E)){const O=M();ht(c.DiagnosticRule.reportUnknownArgumentType,g.LocMessage.argTypeUnknown()+O.getString(),e.errorNode)}else if((0,W.isPartlyUnknown)(E)&&!(0,W.isPartlyUnknown)(e.paramType)){const z=M();z.addMessage(g.LocAddendum.argumentType().format({type:wr(E,{expandTypeAlias:!0})})),ht(c.DiagnosticRule.reportUnknownArgumentType,g.LocMessage.argTypePartiallyUnknown()+z.getString(),e.errorNode)}}return{isCompatible:d,argType:i,isTypeIncomplete:l,skippedBareTypeVarExpectedType:m,condition:h}}function on(e,t,n){var a,r,s,i,o,l,p;let d,m,y="";if(0===n.length)return void mt(g.LocMessage.typeVarFirstArg(),e);const h=n[0];h.valueExpression&&48===h.valueExpression.nodeType?y=h.valueExpression.strings.map((e=>e.value)).join(""):mt(g.LocMessage.typeVarFirstArg(),h.valueExpression||e);const f=$.TypeBase.cloneAsSpecialForm($.TypeVarType.createInstantiable(y,!1),$.ClassType.cloneAsInstance(t)),T=new Map;for(let c=1;c<n.length;c++){const y=n[c].name,h=y?y.value:void 0;if(h){if(T.get(h)&&mt(g.LocMessage.duplicateParam().format({name:h}),n[c].valueExpression||e),"bound"===h)if(f.details.constraints.length>0)mt(g.LocMessage.typeVarBoundAndConstrained(),n[c].valueExpression||e);else{const t=null!==(r=null===(a=n[c].typeResult)||void 0===a?void 0:a.type)&&void 0!==r?r:Da(n[c].valueExpression,{disallowProtocolAndTypedDict:!0}).type;(0,W.requiresSpecialization)(t,{ignorePseudoGeneric:!0,ignoreImplicitTypeArgs:!0})&&mt(g.LocMessage.typeVarBoundGeneric(),n[c].valueExpression||e),f.details.boundType=(0,W.convertToInstance)(t)}else if("covariant"===h)n[c].valueExpression&&mn(n[c].valueExpression)&&(4===f.details.declaredVariance||0===f.details.declaredVariance?mt(g.LocMessage.typeVarVariance(),n[c].valueExpression):f.details.declaredVariance=3);else if("contravariant"===h)n[c].valueExpression&&mn(n[c].valueExpression)&&(3===f.details.declaredVariance||0===f.details.declaredVariance?mt(g.LocMessage.typeVarVariance(),n[c].valueExpression):f.details.declaredVariance=4);else if("infer_variance"===h)n[c].valueExpression&&mn(n[c].valueExpression)&&(3===f.details.declaredVariance||4===f.details.declaredVariance?mt(g.LocMessage.typeVarVariance(),n[c].valueExpression):f.details.declaredVariance=0);else if("default"===h){m=n[c].valueExpression;const a=null!==(i=null===(s=n[c].typeResult)||void 0===s?void 0:s.type)&&void 0!==i?i:Da(m,{allowTypeVarsWithoutScopeId:!0}).type;f.details.defaultType=(0,W.convertToInstance)(a),f.details.isDefaultExplicit=!0;const r=v.getFileInfo(e);!r.isStubFile&&r.executionEnvironment.pythonVersion.isLessThan(u.pythonVersion3_13)&&"typing_extensions"!==t.details.moduleName&&mt(g.LocMessage.typeVarDefaultIllegal(),m)}else mt(g.LocMessage.typeVarUnknownParam().format({name:h}),(null===(o=n[c].node)||void 0===o?void 0:o.name)||n[c].valueExpression||e);T.set(h,h)}else if(f.details.boundType)mt(g.LocMessage.typeVarBoundAndConstrained(),n[c].valueExpression||e);else{const t=null!==(p=null===(l=n[c].typeResult)||void 0===l?void 0:l.type)&&void 0!==p?p:Da(n[c].valueExpression).type;(0,W.requiresSpecialization)(t,{ignorePseudoGeneric:!0})&&mt(g.LocMessage.typeVarConstraintGeneric(),n[c].valueExpression||e),$.TypeVarType.addConstraint(f,(0,W.convertToInstance)(t)),void 0===d&&(d=n[c])}}return 1===f.details.constraints.length&&d&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarSingleConstraint(),d.valueExpression||e),f.details.isDefaultExplicit&&m&&ln(f,m),f}function ln(e,t){(0,l.assert)(e.details.isDefaultExplicit);const n=new G.TypeVarContext(e.scopeId),a=Ct((0,W.applySolvedTypeVars)(e.details.defaultType,n,{unknownIfNotFound:!0}));if(e.details.boundType)nr(e.details.boundType,a)||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarDefaultBoundMismatch(),t);else if(e.details.constraints.length>0){let n=!0;if((0,$.isTypeVar)(e.details.defaultType)&&e.details.defaultType.details.constraints.length>0)for(const t of e.details.defaultType.details.constraints)e.details.constraints.some((e=>(0,$.isTypeSame)(e,t)))||(n=!1);else e.details.constraints.some((e=>(0,$.isTypeSame)(e,a,{ignoreConditions:!0})))||(n=!1);n||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarDefaultConstraintMismatch(),t)}}function pn(e,t,n){var a,r;let s="";if(0===n.length)return void mt(g.LocMessage.typeVarFirstArg(),e);const i=n[0];i.valueExpression&&48===i.valueExpression.nodeType?s=i.valueExpression.strings.map((e=>e.value)).join(""):mt(g.LocMessage.typeVarFirstArg(),i.valueExpression||e);const o=$.TypeBase.cloneAsSpecialForm($.TypeVarType.createInstantiable(s,!1),$.ClassType.cloneAsInstance(t));o.details.isVariadic=!0,o.details.defaultType=zt([{type:$.UnknownType.create(),isUnbounded:!0}]);for(let s=1;s<n.length;s++){const i=n[s].name,l=i?i.value:void 0;if(l)if("default"===l){const a=n[s].valueExpression;if(a){const e=cn(a,!1);e&&(o.details.defaultType=e,o.details.isDefaultExplicit=!0)}const r=v.getFileInfo(e);!r.isStubFile&&r.executionEnvironment.pythonVersion.isLessThan(u.pythonVersion3_13)&&"typing_extensions"!==t.details.moduleName&&mt(g.LocMessage.typeVarDefaultIllegal(),a)}else mt(g.LocMessage.typeVarTupleUnknownParam().format({name:(null===(a=n[s].name)||void 0===a?void 0:a.value)||"?"}),(null===(r=n[s].node)||void 0===r?void 0:r.name)||n[s].valueExpression||e);else mt(g.LocMessage.typeVarTupleConstraints(),n[s].valueExpression||e)}return o}function cn(e,t){const n=Da(e,{allowUnpackedTuple:!0,allowTypeVarsWithoutScopeId:!0,allowForwardReference:t}).type,a=(0,$.isClass)(n)&&(0,W.isTupleClass)(n)&&n.isUnpacked,r=(0,$.isUnpackedVariadicTypeVar)(n);if(a||r)return(0,W.convertToInstance)(n);ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarTupleDefaultNotUnpacked(),e)}function dn(e,t,n){if(0===n.length)return void mt(g.LocMessage.paramSpecFirstArg(),e);const a=n[0];let r="";a.valueExpression&&48===a.valueExpression.nodeType?r=a.valueExpression.strings.map((e=>e.value)).join(""):mt(g.LocMessage.paramSpecFirstArg(),a.valueExpression||e);const s=$.TypeBase.cloneAsSpecialForm($.TypeVarType.createInstantiable(r,!0),$.ClassType.cloneAsInstance(t));s.details.defaultType=(0,W.getUnknownTypeForParamSpec)();for(let a=1;a<n.length;a++){const r=n[a].name,i=r?r.value:void 0;if(!i){mt(g.LocMessage.paramSpecUnknownArg(),n[a].valueExpression||e);break}if("default"===i){const r=n[a].valueExpression;if(r){const e=un(r,!1);e&&(s.details.defaultType=e,s.details.isDefaultExplicit=!0)}const i=v.getFileInfo(e);!i.isStubFile&&i.executionEnvironment.pythonVersion.isLessThan(u.pythonVersion3_13)&&"typing_extensions"!==t.details.moduleName&&mt(g.LocMessage.typeVarDefaultIllegal(),r)}else mt(g.LocMessage.paramSpecUnknownParam().format({name:i}),r||n[a].valueExpression||e)}return s}function un(e,t){const n=$.FunctionType.createSynthesizedInstance("",98304);if(18===e.nodeType)return $.FunctionType.addDefaultParameters(n),n;if(31===e.nodeType)return e.entries.forEach(((e,a)=>{const r=Da(e,{allowTypeVarsWithoutScopeId:!0,allowForwardReference:t});$.FunctionType.addParameter(n,{category:0,name:`__p${a}`,isNameSynthesized:!0,hasDeclaredType:!0,type:(0,W.convertToInstance)(r.type)})})),e.entries.length>0&&$.FunctionType.addPositionOnlyParameterSeparator(n),De(e,{type:$.AnyType.create()},void 0),n;{const t=Da(e,{allowParamSpec:!0,allowTypeVarsWithoutScopeId:!0});if(t.typeErrors)return;if((0,$.isParamSpec)(t.type))return n.details.paramSpec=t.type,n;if((0,$.isClassInstance)(t.type)&&$.ClassType.isBuiltIn(t.type,["EllipsisType","ellipsis"]))return $.FunctionType.addDefaultParameters(n),n}ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramSpecDefaultNotTuple(),e)}function mn(e){if(11===e.nodeType){if(15===e.constType)return!1;if(33===e.constType)return!0}return ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.expectedBoolLiteral(),e),!1}function yn(e,t){var n,a,r;const s=v.getFileInfo(e);let i="";if(2!==t.length)return void ht(c.DiagnosticRule.reportCallIssue,g.LocMessage.newTypeParamCount(),e);const o=t[0];if(0===o.argumentCategory&&o.valueExpression&&48===o.valueExpression.nodeType&&(i=o.valueExpression.strings.map((e=>e.value)).join("")),!i)return void ht(c.DiagnosticRule.reportArgumentType,g.LocMessage.newTypeBadName(),null!==(n=t[0].node)&&void 0!==n?n:e);if(3===(null===(a=e.parent)||void 0===a?void 0:a.nodeType)&&38===e.parent.leftExpression.nodeType&&e.parent.leftExpression.value!==i)return void ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.newTypeNameMismatch(),e.parent.leftExpression);let l=Na(t[1]).type,p=!1;if((0,$.isAnyOrUnknown)(l)&&(ae&&(0,$.isClassInstance)(ae)&&(l=$.ClassType.cloneAsInstantiable(ae)),ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.newTypeAnyOrUnknown(),null!==(r=t[1].node)&&void 0!==r?r:e),p=!0),l.specialForm&&(0,$.isInstantiableClass)(l.specialForm)&&$.ClassType.isBuiltIn(l.specialForm,"Annotated"))return void ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.newTypeNotAClass(),t[1].node||e);if(!(0,$.isInstantiableClass)(l))return void ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.newTypeNotAClass(),t[1].node||e);$.ClassType.isProtocolClass(l)||$.ClassType.isTypedDictClass(l)?ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.newTypeProtocolClass(),t[1].node||e):void 0!==l.literalValue&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.newTypeLiteral(),t[1].node||e);let d=-4&l.details.flags;d|=1610620928;const u=$.ClassType.createInstantiable(i,F.getClassFullName(e,s.moduleName,i),s.moduleName,s.fileUri,d,F.getTypeSourceId(e),void 0,l.details.effectiveMetaclass);if(u.details.baseClasses.push(p?$.AnyType.create():l),(0,W.computeMroLinearization)(u),!p){const e=$.FunctionType.createSynthesizedInstance("__init__");$.FunctionType.addParameter(e,{category:0,name:"self",type:$.ClassType.cloneAsInstance(u),hasDeclaredType:!0}),$.FunctionType.addParameter(e,{category:0,name:"_x",type:$.ClassType.cloneAsInstance(l),hasDeclaredType:!0}),e.details.declaredReturnType=rt(),$.ClassType.getSymbolTable(u).set("__init__",U.Symbol.createWithType(4,e));const t=$.FunctionType.createSynthesizedInstance("__new__",1);$.FunctionType.addParameter(t,{category:0,name:"cls",type:u,hasDeclaredType:!0}),$.FunctionType.addDefaultParameters(t),t.details.declaredReturnType=$.ClassType.cloneAsInstance(u),t.details.constructorTypeVarScopeId=u.details.typeVarScopeId,$.ClassType.getSymbolTable(u).set("__new__",U.Symbol.createWithType(4,t))}return u}function gn(e,t,n){const a=v.getFileInfo(e),r=Pa(t[0]).type;if(!(0,$.isClassInstance)(r)||!$.ClassType.isBuiltIn(r,"str"))return;const s=r.literalValue||"_",i=Pa(t[1]).type;if(!(0,$.isClassInstance)(i)||!(0,W.isTupleClass)(i)||void 0===i.tupleTypeArguments)return;const o=$.ClassType.createInstantiable(s,F.getClassFullName(e,a.moduleName,s),a.moduleName,a.fileUri,1073741824,F.getTypeSourceId(e),n,i.details.effectiveMetaclass);return i.tupleTypeArguments.forEach((n=>{const a=Ct(n.type);(0,W.isEffectivelyInstantiable)(a)?o.details.baseClasses.push(a):Tt(n.type,t[1].valueExpression||e)})),(0,W.computeMroLinearization)(o)||mt(g.LocMessage.methodOrdering(),e),o}function hn(e,t,n,a,r,s){let i=!0;const o=e=>{let o;const p=Ct(e);if((0,$.isClass)(p)&&(o=Je(p,t,e,s)),o){const e=n.map((e=>({argumentCategory:0,typeResult:e})));let t;return t=za(a,(()=>((0,l.assert)(void 0!==o),Zt(a,e,{type:o},void 0,!0,r)))),t.argumentErrors&&r&&(t=za(a,(()=>((0,l.assert)(void 0!==o),Zt(a,e,{type:o},void 0,!0))))),t.argumentErrors&&(i=!1),t.returnType}i=!1},p=(0,W.mapSubtypes)(e,(e=>(0,$.isAnyOrUnknown)(e)?e:(0,$.isClassInstance)(e)||(0,$.isInstantiableClass)(e)||(0,$.isTypeVar)(e)?o(e):(0,W.isNoneInstance)(e)&&ae&&(0,$.isClassInstance)(ae)?o(ae):(0,W.isNoneTypeClass)(e)&&re&&(0,$.isInstantiableClass)(re)?o($.ClassType.cloneAsInstance(re)):void(i=!1)));if(i)return p}function fn(e,t,n){t.expectedType=(0,W.transformPossibleRecursiveTypeAlias)(t.expectedType);let a=Ct(t.expectedType);if(!(0,$.isClassInstance)(a))return;const r=[],s=[];let i,o,l=!1,p=!1;if($.ClassType.isTypedDictClass(a)){a=$.TypeBase.cloneForCondition(a,void 0);const t=Tn(e,r,s,!0,!0,void 0,void 0,(0,K.getTypedDictMembersForClass)(Ar,a),n);t.isIncomplete&&(l=!0),t.typeErrors&&(p=!0);const i=(0,K.assignToTypedDict)(Ar,a,r,s,(null==n?void 0:n.isEmpty())?n:void 0);return i?{type:i,isIncomplete:l}:void 0}if((0,$.isAnyOrUnknown)(t.expectedType))i=t.expectedType,o=t.expectedType;else{const n=Ea(e,"dict");if(!(0,$.isClassInstance)(n))return;const a=new G.TypeVarContext((0,W.getTypeVarScopeId)(n));if(!(0,C.populateTypeVarContextBasedOnExpectedType)(Ar,n,t.expectedType,a,F.getTypeVarScopesForNode(e),e.start))return;const r=(0,W.applySolvedTypeVars)($.ClassType.cloneAsInstantiable(n),a);if(!r.typeArguments||2!==r.typeArguments.length)return;i=r.typeArguments[0],o=r.typeArguments[1]}let c=!1;if((0,$.isClassInstance)(t.expectedType)&&t.expectedType.details.typeParameters.length>=2){const e=t.expectedType.details.typeParameters[1];2===$.TypeVarType.getVariance(e)&&(c=!0)}const d=Tn(e,r,s,!0,c,i,o,void 0,n);d.isIncomplete&&(l=!0),d.typeErrors&&(p=!0);const u=Cn((0,W.makeInferenceContext)(i),r.map((e=>e.type)),!1),m=Cn((0,W.makeInferenceContext)(o),s.map((e=>e.type)),!c);if(!u||!m)return;return{type:Ea(e,"dict",[u,m]),isIncomplete:l,typeErrors:p}}function Tn(e,t,n,a,r,s,i,o,l){let p=!1,d=!1;return e.entries.forEach(((e,u)=>{var m,y,h,f;let T=!0;if(17===e.nodeType){const c=Be(e.keyExpression,void 0,(0,W.makeInferenceContext)(null!=s?s:a?$.NeverType.createNever():void 0));c.isIncomplete&&(p=!0),c.typeErrors&&(d=!0);const m=c.type;let y,g;if(c.isIncomplete||c.typeErrors||_n(e.keyExpression,m,!0),l&&c.expectedTypeDiagAddendum&&l.addAddendum(c.expectedTypeDiagAddendum),o&&(0,$.isClassInstance)(m)&&$.ClassType.isBuiltIn(m,"str")&&(0,W.isLiteralType)(m)&&o.knownItems.has(m.literalValue)){const t=o.knownItems.get(m.literalValue).valueType;g=(0,W.makeInferenceContext)(t),y=Be(e.valueExpression,void 0,g)}else{const t=null!=i?i:a?$.NeverType.createNever():void 0;g=(0,W.makeInferenceContext)(t),y=Be(e.valueExpression,void 0,g)}if(g&&!y.typeErrors){const e=Cn(g,[y.type],!r);e&&(y={...y,type:e})}l&&y.expectedTypeDiagAddendum&&l.addAddendum(y.expectedTypeDiagAddendum);const h=y.type;if(y.isIncomplete&&(p=!0),y.typeErrors&&(d=!0),a||u<Y){if((0,$.isClass)(m)&&(0,W.isLiteralType)(m)){const e=t.findIndex((e=>(0,$.isTypeSame)(m,e.type)));e>=0&&(t.splice(e,1),n.splice(e,1))}t.push({node:e.keyExpression,type:m}),n.push({node:e.valueExpression,type:h})}T=!1}else if(16===e.nodeType){let l;s&&i&&ge&&(0,$.isInstantiableClass)(ge)&&(l=$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(ge,[s,i],!0)));const f=(0,W.makeInferenceContext)(l);let v=Be(e.expandExpression,void 0,f);if(f&&!v.typeErrors){const e=Cn(f,[v.type],!r);e&&(v={...v,type:e})}v.isIncomplete&&(p=!0),v.typeErrors&&(d=!0);const b=v.type;if((0,$.isAnyOrUnknown)(b))T=!1;else if((0,$.isClassInstance)(b)&&$.ClassType.isTypedDictClass(b)){if(de&&(0,$.isInstantiableClass)(de)){const a=$.ClassType.cloneAsInstance(de),r=(0,K.getTypedDictMembersForClass)(Ar,b,!0);r.knownItems.forEach(((r,s)=>{(r.isRequired||r.isProvided)&&(t.push({node:e,type:$.ClassType.cloneWithLiteral(a,s)}),n.push({node:e,type:r.valueType}))})),o||(t.push({node:e,type:$.ClassType.cloneAsInstance(a)}),n.push({node:e,type:null!==(h=null!==(y=null===(m=r.extraItems)||void 0===m?void 0:m.valueType)&&void 0!==y?y:ae)&&void 0!==h?h:$.UnknownType.create()})),T=!1}}else if(ge&&(0,$.isInstantiableClass)(ge)){const r=new G.TypeVarContext((0,W.getTypeVarScopeId)(ge));if(ge=(0,W.selfSpecializeClass)(ge),nr($.ClassType.cloneAsInstance(ge),b,void 0,r,void 0,256)){const s=(0,W.applySolvedTypeVars)(ge,r).typeArguments;s&&s.length>=2&&((a||u<Y)&&(t.push({node:e,type:s[0]}),n.push({node:e,type:s[1]})),T=!1)}else ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.dictUnpackIsNotMapping(),e)}}else if(32===e.nodeType){const r=Sn(e,i,s),o=r.type;if(r.isIncomplete&&(p=!0),r.typeErrors&&(d=!0),(0,$.isClassInstance)(o)&&(0,W.isTupleClass)(o)){const r=null===(f=o.tupleTypeArguments)||void 0===f?void 0:f.map((e=>e.type));r&&2===r.length&&((a||u<Y)&&(t.push({node:e,type:r[0]}),n.push({node:e,type:r[1]})),T=!1)}}T&&(a||u<Y)&&(t.push({node:e,type:$.UnknownType.create()}),n.push({node:e,type:$.UnknownType.create()}))})),{type:$.AnyType.create(),isIncomplete:p,typeErrors:d}}function vn(e,t){const n=31===e.nodeType?"list":"set";t.expectedType=(0,W.transformPossibleRecursiveTypeAlias)(t.expectedType);let a=!1,r=!1;const s=45===e.nodeType,i=bn(e,Fa(e,n),t);if(!i)return;const o=[],l=new p.DiagnosticAddendum;e.entries.forEach((e=>{let t;t=32===e.nodeType?Sn(e,i):Be(e,void 0,(0,W.makeInferenceContext)(i)),o.push(t.type),t.isIncomplete&&(a=!0),t.typeErrors&&(r=!0),t.expectedTypeDiagAddendum&&l.addAddendum(t.expectedTypeDiagAddendum),!s||t.isIncomplete||t.typeErrors||_n(e,t.type,!1)}));let c=!1;(0,$.isClassInstance)(t.expectedType)&&(Qn(t.expectedType),t.expectedType.details.typeParameters.some((e=>2===$.TypeVarType.getVariance(e)))&&(c=!0));const d=Cn((0,W.makeInferenceContext)(i),o,!c);if(!d)return{type:$.UnknownType.create(),isIncomplete:a,typeErrors:!0,expectedTypeDiagAddendum:l};return{type:Ea(e,n,[d]),isIncomplete:a,typeErrors:r,expectedTypeDiagAddendum:l}}function bn(e,t,n){if(!n)return;if(!t||!(0,$.isInstantiableClass)(t))return;if((0,$.isAnyOrUnknown)(n.expectedType))return n.expectedType;if(!(0,$.isClassInstance)(n.expectedType))return;const a=new G.TypeVarContext((0,W.getTypeVarScopeId)(t));if(!(0,C.populateTypeVarContextBasedOnExpectedType)(Ar,$.ClassType.cloneAsInstance(t),n.expectedType,a,F.getTypeVarScopesForNode(e),e.start))return;const r=(0,W.applySolvedTypeVars)(t,a);return r.typeArguments?r.typeArguments[0]:void 0}function _n(e,t,n){if(!function(e){let t=!0;return(0,W.doForEachSubtype)(Ct(e),(e=>{if((0,$.isClassInstance)(e)){let n=!0;if(void 0!==e.details.isInstanceHashable)n=e.details.isInstanceHashable;else{const t=(0,W.lookUpObjectMember)(e,"__hash__",4);if(t&&t.isTypeDeclared){const e=t.symbol.getTypedDeclarations(),a=t.symbol.getSynthesizedType();a?n=!(0,W.isNoneInstance)(a):e.every((e=>1===e.type))&&(n=!1)}e.details.isInstanceHashable=n}n||(t=!1)}})),t}(t)){const a=new p.DiagnosticAddendum;a.addMessage(g.LocAddendum.unhashableType().format({type:wr(t)}));const r=n?g.LocMessage.unhashableDictKey():g.LocMessage.unhashableSetEntry();ht(c.DiagnosticRule.reportUnhashable,r+a.getString(),e)}}function Cn(e,t,n){if((0,$.isAny)(e.expectedType))return e.expectedType;const a=new G.TypeVarContext((0,W.getTypeVarScopeId)(e.expectedType)),r=e.expectedType;let s=!0;if(t.forEach((e=>{s&&!nr(r,e,void 0,a)&&(s=!1)})),s){if(n&&t.length>0){const n=(0,$.combineTypes)(t);return(0,W.containsLiteralType)(e.expectedType)?n:Ge(n)}return(0,W.mapSubtypes)((0,W.applySolvedTypeVars)(e.expectedType,a,{applyInScopePlaceholders:!0}),(e=>{if(1!==t.length)return e;const n=t[0];return(0,$.isTypeSame)(e,n,{ignoreTypedDictNarrowEntries:!0})&&(0,$.isClass)(e)&&(0,$.isClass)(n)&&$.ClassType.isTypedDictClass(n)?$.ClassType.cloneForNarrowedTypedDictEntries(e,n.typedDictNarrowedEntries):e}))}}function In(e,t,n,a){let r,s,i=!!(null==n?void 0:n.isTypeIncomplete),o=!0;if(t){const n=F.getTypeVarScopesForNode(e);t=(0,W.transformExpectedType)(t,n,e.start),s=(0,D.getParameterListDetails)(t),r=Za(t)}let l=$.FunctionType.createInstance("","","",131072);l.details.typeVarScopeId=F.getScopeIdForNode(e),De(e,{type:l,isIncomplete:!0},0);let p=!1;e.parameters.forEach(((t,a)=>{let r;if(s&&!p)if(a<s.params.length){const e=s.params[a];e.param.category===t.category&&!t.name==!e.param.name?r=e.type:p=!0}else t.defaultValue&&(r=Be(t.defaultValue,void 0,n).type);else t.defaultValue&&(r=la(t.defaultValue));if(t.name&&De(t.name,{type:pa(e,t.category,null!=r?r:$.UnknownType.create())},0),t.defaultValue&&Be(t.defaultValue,1),a>=0){let e=!1;0===t.category&&t.name?(0,R.isPrivateName)(t.name.value)&&(e=!0):o=!1,o&&!e&&l.details.parameters.length>0&&$.FunctionType.addPositionOnlyParameterSeparator(l),e||(o=!1)}const i={category:t.category,name:t.name?t.name.value:void 0,hasDefault:!!t.defaultValue,defaultValueExpression:t.defaultValue,hasDeclaredType:!0,type:null!=r?r:$.UnknownType.create()};$.FunctionType.addParameter(l,i)})),o&&l.details.parameters.length>0&&$.FunctionType.addPositionOnlyParameterSeparator(l);let c=!1;return za(a||Va(e)||(null==n?void 0:n.isTypeIncomplete)?e.expression:void 0,(()=>{const t=Be(e.expression,void 0,(0,W.makeInferenceContext)(r));if(l.inferredReturnType=t.type,t.isIncomplete&&(i=!0),t.typeErrors)c=!0;else if(r&&(0,W.requiresSpecialization)(r)){const e=new G.TypeVarContext((0,W.getTypeVarScopeId)(l));nr(r,t.type,void 0,e)&&(l=(0,W.applySolvedTypeVars)(l,e,{applyInScopePlaceholders:!0}))}}),{dependentType:null==n?void 0:n.expectedType,allowDiagnostics:!a&&!gt(e)&&!(null==n?void 0:n.isTypeIncomplete)}),l.details.flags&=-131073,t&&!nr(t,l)&&(c=!0),{type:l,isIncomplete:i,typeErrors:c}}function kn(e,t,n,a,r,s){if("none"===e)return;const i=n.value,o=(0,$.removeUnbound)(a);if((0,$.isUnknown)(o))ht(t,g.LocMessage.typeUnknown().format({name:i}),r);else if((0,W.isPartlyUnknown)(o)&&(!s||!(0,$.isClassInstance)(a)||!a.isEmptyContainer)){const e=new p.DiagnosticAddendum;e.addMessage(g.LocAddendum.typeOfSymbol().format({name:i,type:wr(o,{expandTypeAlias:!0})})),ht(t,g.LocMessage.typePartiallyUnknown().format({name:i})+e.getString(),r)}}function wn(e){var t;let n=!1;if(33===e.nodeType){const a=Be(e.iterableExpression);a.isIncomplete&&(n=!0);const r=null!==(t=nt({type:Ge(a.type),isIncomplete:a.isIncomplete},!!e.isAsync,e.iterableExpression))&&void 0!==t?t:{type:$.UnknownType.create(),isIncomplete:a.isIncomplete};kt(e.targetExpression,r.type,!!r.isIncomplete,e.iterableExpression)}else(0,l.assert)(34===e.nodeType),Va(e.testExpression)||Be(e.testExpression);return n}function Sn(e,t,n){let a=!1,r=!1;for(const t of e.forIfNodes)wn(t)&&(a=!0);let s=$.UnknownType.create();if(17===e.expression.nodeType){const i=Be(e.expression.keyExpression,void 0,(0,W.makeInferenceContext)(n));i.isIncomplete&&(a=!0),i.typeErrors&&(r=!0);let o=i.type;n&&(0,W.containsLiteralType)(n)||(o=Ge(o));const l=Be(e.expression.valueExpression,void 0,(0,W.makeInferenceContext)(t));l.isIncomplete&&(a=!0),l.typeErrors&&(r=!0);let p=l.type;t&&(0,W.containsLiteralType)(t)||(p=Ge(p)),s=zt([{type:o,isUnbounded:!1},{type:p,isUnbounded:!1}])}else if(16===e.expression.nodeType)Be(e.expression.expandExpression,void 0,(0,W.makeInferenceContext)(t));else if((0,h.isExpressionNode)(e)){const n=Be(e.expression,void 0,(0,W.makeInferenceContext)(t));n.isIncomplete&&(a=!0),n.typeErrors&&(r=!0),s=n.type}return{type:s,isIncomplete:a,typeErrors:r}}function An(e,t){if(e.typeList){if(!(null==t?void 0:t.allowTypeArgList))return mt(g.LocMessage.typeArgListNotAllowed(),e.node),!1;e.typeList.forEach((e=>{An(e)}))}if((0,W.isEllipsisType)(e.type)&&!(null==t?void 0:t.allowTypeArgList))return mt(g.LocMessage.ellipsisContext(),e.node),!1;if((0,$.isModule)(e.type))return mt(g.LocMessage.moduleAsType(),e.node),!1;if((0,$.isParamSpec)(e.type)&&!(null==t?void 0:t.allowParamSpec))return mt(g.LocMessage.paramSpecContext(),e.node),!1;if((0,$.isVariadicTypeVar)(e.type)&&!e.type.isVariadicInUnion){if(!(null==t?void 0:t.allowVariadicTypeVar))return mt(g.LocMessage.typeVarTupleContext(),e.node),!1;Ft(e.type,e.node)}return!(null==t?void 0:t.allowEmptyTuple)&&e.isEmptyTupleShorthand?(mt(g.LocMessage.zeroLengthTupleNotAllowed(),e.node),!1):!((0,$.isUnpackedClass)(e.type)&&!(null==t?void 0:t.allowUnpackedTuples))||(mt(g.LocMessage.unpackedArgInTypeArgument(),e.node),!1)}function xn(e,t,n){const a=$.FunctionType.createInstantiable(0);if(a.specialForm=e,a.details.declaredReturnType=$.UnknownType.create(),a.details.typeVarScopeId=F.getScopeIdForNode(n),t&&t.length>0){if(a.isCallableWithTypeArgs=!0,t[0].typeList){const e=t[0].typeList;let n=!1,r=!1;const s=e=>{n&&(r||(mt(g.LocMessage.variadicTypeArgsTooMany(),e.node),r=!0)),n=!0};e.forEach(((e,t)=>{var n;let r=e.type,i=0;const o=`__p${t.toString()}`;(0,$.isVariadicTypeVar)(r)?(Ft(r,e.node),i=1,s(e)):An(e,{allowUnpackedTuples:!0})?(0,$.isUnpackedClass)(r)&&(i=1,(null===(n=r.tupleTypeArguments)||void 0===n?void 0:n.some((e=>(0,$.isVariadicTypeVar)(e.type)||e.isUnbounded)))&&s(e)):r=$.UnknownType.create(),$.FunctionType.addParameter(a,{category:i,name:o,isNameSynthesized:!0,type:(0,W.convertToInstance)(r),hasDeclaredType:!0})})),e.length>0&&$.FunctionType.addPositionOnlyParameterSeparator(a)}else if((0,W.isEllipsisType)(t[0].type))$.FunctionType.addDefaultParameters(a),a.details.flags|=32768;else if((0,$.isParamSpec)(t[0].type))a.details.paramSpec=t[0].type;else if((0,$.isInstantiableClass)(t[0].type)&&$.ClassType.isBuiltIn(t[0].type,"Concatenate")){const e=t[0].type.typeArguments;e&&e.length>0&&e.forEach(((t,n)=>{n===e.length-1?($.FunctionType.addPositionOnlyParameterSeparator(a),(0,$.isParamSpec)(t)?a.details.paramSpec=t:(0,W.isEllipsisType)(t)&&($.FunctionType.addDefaultParameters(a),a.details.flags|=32768)):$.FunctionType.addParameter(a,{category:0,name:`__p${n}`,isNameSynthesized:!0,hasDeclaredType:!0,type:t})}))}else mt(g.LocMessage.callableFirstArg(),t[0].node);if(t.length>1){let e=t[1].type;An(t[1])||(e=$.UnknownType.create()),a.details.declaredReturnType=(0,W.convertToInstance)(e)}else ht(c.DiagnosticRule.reportMissingTypeArgument,g.LocMessage.callableSecondArg(),n),a.details.declaredReturnType=$.UnknownType.create();t.length>2&&mt(g.LocMessage.callableExtraArgs(),t[2].node)}else $.FunctionType.addDefaultParameters(a,!0),a.details.flags|=32768;return a}function Pn(e,t,n,a){if(!n)return 0!=(256&a)?(mt(g.LocMessage.optionalExtraArgs(),t),$.UnknownType.create()):e;if(n.length>1)return mt(g.LocMessage.optionalExtraArgs(),t),$.UnknownType.create();let r=n[0].type;An(n[0])?(0,W.isEffectivelyInstantiable)(r)||(Tt(r,n[0].node),r=$.UnknownType.create()):r=$.UnknownType.create();let s=(0,$.combineTypes)([r,null!=te?te:$.UnknownType.create()]);return se&&(0,$.isInstantiableClass)(se)&&(s=$.TypeBase.cloneAsSpecialForm(s,$.ClassType.cloneAsInstance(se))),s}function Nn(e,t,n){const a=Ea(e,t);return(0,$.isClassInstance)(a)?$.ClassType.cloneWithLiteral($.ClassType.cloneRemoveTypePromotions(a),n):$.UnknownType.create()}function Dn(e,t,n,a){const r=Fa(e,n);if((0,$.isInstantiableClass)(r)){const e=$.ClassType.cloneWithLiteral(r,a);return e.specialForm=t,e}return $.UnknownType.create()}function Fn(e,t,n,a){var r;if(131072&a)return mt(g.LocMessage.classVarNotAllowed(),t),$.AnyType.create();if(!n)return e;if(0===n.length)return mt(g.LocMessage.classVarFirstArgMissing(),t),$.UnknownType.create();if(n.length>1)return mt(g.LocMessage.classVarTooManyArgs(),n[1].node),$.UnknownType.create();const s=n[0].type;return(0,W.requiresSpecialization)(s,{ignorePseudoGeneric:!0,ignoreSelf:!0})&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.classVarWithTypeVar(),null!==(r=n[0].node)&&void 0!==r?r:t),s}function En(e,t,n,a){if(!n)return 0!=(256&a)&&mt(g.LocMessage.typeGuardArgCount(),t),e;if(1!==n.length)return mt(g.LocMessage.typeGuardArgCount(),t),$.UnknownType.create();const r=n.map((e=>(0,W.convertToInstance)(An(e)?e.type:$.UnknownType.create())));return $.ClassType.cloneForSpecialization(e,r,!0)}function Mn(e,t,n,a){var r;n&&ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeArgsExpectingNone().format({name:e.details.name}),null!==(r=n[0].node)&&void 0!==r?r:t);let s=F.getEnclosingClass(t);s&&!F.isNodeContainedWithin(t,s.suite)&&(s=void 0);const i=s?Yn(s):void 0;if(!i)return 0!=(384&a)&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.selfTypeContext(),t),$.UnknownType.create();if((0,W.isInstantiableMetaclass)(i.classType))return ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.selfTypeMetaclass(),t),$.UnknownType.create();const o=F.getEnclosingFunction(t);if(o){const e=(0,S.getFunctionInfoFromDecorators)(Ar,o,!0);if(!!!F.getEnclosingFunction(o)){if(4&e.flags)return ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.selfTypeContext(),t),$.UnknownType.create();if(o.parameters.length>0){const e=F.getTypeAnnotationForParameter(o,0);if(e&&!F.isNodeContainedWithin(t,e)){const n=$e(e,{associateTypeVarsWithScope:!0});(0,$.isTypeVar)(n)&&n.details.isSynthesizedSelf||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.selfTypeWithTypedSelfOrCls(),t)}}}}return(0,W.synthesizeTypeVarForSelfCls)(i.classType,!0)}function On(e,t,n,a){if(!n&&0==(256&a))return{type:e};if(!n||1!==n.length)return mt("ReadOnly"===e.details.name?g.LocMessage.readOnlyArgCount():"Required"===e.details.name?g.LocMessage.requiredArgCount():g.LocMessage.notRequiredArgCount(),t),{type:e};const r=n[0].type,s=F.getEnclosingClass(t,!0),i=s?Yn(s):void 0;let o=!1;i&&(0,$.isInstantiableClass)(i.classType)&&$.ClassType.isTypedDictClass(i.classType)&&F.isNodeContainedWithinNodeType(t,54)&&(o=!0),0!=(1048576&a)&&(o=!0);let l=n[0].isReadOnly,p=n[0].isRequired,c=n[0].isNotRequired;return"ReadOnly"===e.details.name?(n[0].isReadOnly&&(o=!1),l=!0):((n[0].isRequired||n[0].isNotRequired)&&(o=!1),p="Required"===e.details.name,c="NotRequired"===e.details.name),o?{type:r,isReadOnly:l,isRequired:p,isNotRequired:c}:(mt("ReadOnly"===e.details.name?g.LocMessage.readOnlyNotInTypedDict():"Required"===e.details.name?g.LocMessage.requiredNotInTypedDict():g.LocMessage.notRequiredNotInTypedDict(),t),{type:$.ClassType.cloneForSpecialization(e,[(0,W.convertToInstance)(r)],!!n)})}function zn(e,t,n,a){if(!n&&0==(256&a))return e;if(!n||1!==n.length)return mt(g.LocMessage.unpackArgCount(),t),$.UnknownType.create();let r=n[0].type;return(0,$.isUnion)(r)&&1===r.subtypes.length&&(r=r.subtypes[0]),0!=(2097152&a)?(0,$.isInstantiableClass)(r)&&!r.includeSubclasses&&(0,W.isTupleClass)(r)?$.ClassType.cloneForUnpacked(r):(0,$.isVariadicTypeVar)(r)&&!r.isVariadicUnpacked?$.TypeVarType.cloneForUnpacked(r):(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.unpackExpectedTypeVarTuple(),t),$.UnknownType.create()):0!=(8388608&a)?(0,$.isInstantiableClass)(r)&&$.ClassType.isTypedDictClass(r)?$.ClassType.cloneForUnpacked(r):(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.unpackExpectedTypedDict(),t),$.UnknownType.create()):(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.unpackNotAllowed(),t),$.UnknownType.create())}function Vn(e,t,n,a){return 16&a?(mt(g.LocMessage.finalContext(),t),e):n&&0!==n.length?(n.length>1&&mt(g.LocMessage.finalTooManyArgs(),t),$.TypeBase.cloneAsSpecialForm(n[0].type,e)):e}function Un(e,t,n,a){return 0==(134217728&a)?(mt(g.LocMessage.concatenateContext(),t),$.AnyType.create()):(n&&0!==n.length?n.forEach(((e,t)=>{t===n.length-1?(0,$.isParamSpec)(e.type)||(0,W.isEllipsisType)(e.type)||mt(g.LocMessage.concatenateParamSpecMissing(),e.node):(0,$.isParamSpec)(e.type)?mt(g.LocMessage.paramSpecContext(),e.node):(0,$.isUnpackedVariadicTypeVar)(e.type)?mt(g.LocMessage.typeVarTupleContext(),e.node):(0,$.isUnpackedClass)(e.type)&&mt(g.LocMessage.unpackedArgInTypeArgument(),e.node)})):mt(g.LocMessage.concatenateTypeArgsMissing(),t),Rn(e,n,void 0,!0))}function Rn(e,t,n,a=!1,r=!0){const s=$.ClassType.isTupleClass(e);if(t)if(s&&1===t.length&&t[0].isEmptyTupleShorthand)t=[];else{let e=!1;const r=t=>{e&&(i||(mt(g.LocMessage.variadicTypeArgsTooMany(),t.node),i=!0)),e=!0};let i=!1;t.forEach(((e,i)=>{var o;(0,l.assert)(void 0!==t),(0,W.isEllipsisType)(e.type)?s?2!==t.length||1!==i?mt(g.LocMessage.ellipsisSecondArg(),e.node):(0,$.isVariadicTypeVar)(t[0].type)&&!t[0].type.isVariadicInUnion?mt(g.LocMessage.typeVarTupleContext(),t[0].node):(0,$.isUnpackedClass)(t[0].type)&&mt(g.LocMessage.ellipsisAfterUnpacked(),e.node):a||mt(g.LocMessage.ellipsisContext(),e.node):(0,$.isParamSpec)(e.type)&&a||(void 0===n&&(0,$.isVariadicTypeVar)(e.type)?(e.type.isVariadicInUnion||r(e),Ft(e.type,e.node)):void 0===n&&(0,$.isUnpackedClass)(e.type)?((null===(o=e.type.tupleTypeArguments)||void 0===o?void 0:o.some((e=>(0,$.isVariadicTypeVar)(e.type)||e.isUnbounded)))&&r(e),An(e,{allowUnpackedTuples:!0})):An(e))}))}let i,p=t?t.map((e=>(0,W.convertToInstance)(e.type))):[];if(void 0!==n)if(t&&p.length>n)mt(g.LocMessage.typeArgsTooMany().format({name:e.aliasName||e.details.name,expected:n,received:p.length}),t[n].node),p=p.slice(0,n);else if(p.length<n)for(;p.length<n;)p.push($.UnknownType.create());if(s){const n=[];t?t.forEach(((e,t)=>{1===t&&(0,W.isEllipsisType)(p[t])?1!==n.length||n[0].isUnbounded||(n[0]={type:n[0].type,isUnbounded:!0}):(0,$.isUnpackedClass)(e.type)&&e.type.tupleTypeArguments?(0,o.appendArray)(n,e.type.tupleTypeArguments):n.push({type:p[t],isUnbounded:!1})})):n.push({type:$.UnknownType.create(),isUnbounded:!0}),i=(0,W.specializeTupleClass)(e,n,void 0!==t)}else i=$.ClassType.cloneForSpecialization(e,p,void 0!==t);return r&&(i=$.TypeBase.cloneAsSpecialForm(i,e)),i}function Ln(e,t,n,a){const r=v.getFileInfo(t),s=[];let i=!1;if(!n)return 0!=(256&a)?(mt(g.LocMessage.unionTypeArgCount(),t),$.NeverType.createNever()):e;for(const e of n){let n=e.type;An(e,{allowVariadicTypeVar:!0,allowUnpackedTuples:!0})?(0,W.isEffectivelyInstantiable)(n)||(Tt(n,e.node),n=$.UnknownType.create()):n=$.UnknownType.create(),(0,$.isUnpackedClass)(e.type)&&e.type.tupleTypeArguments?r.diagnosticRuleSet.enableExperimentalFeatures?(e.type.tupleTypeArguments.forEach((e=>{s.push((0,W.convertToInstantiable)(e.type))})),i=!0):(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.unionUnpackedTuple(),t),s.push($.UnknownType.create())):((0,$.isTypeVar)(n)&&(0,$.isUnpackedVariadicTypeVar)(n)&&(r.diagnosticRuleSet.enableExperimentalFeatures?(n=$.TypeVarType.cloneForUnpacked(n,!0),i=!0):(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.unionUnpackedTypeVarTuple(),t),n=$.UnknownType.create())),s.push(n))}1!==s.length||i||(0,W.isNoneInstance)(s[0])||ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.unionTypeArgCount(),t);let o=(0,$.combineTypes)(s);return se&&(0,$.isInstantiableClass)(se)&&(o=$.TypeBase.cloneAsSpecialForm(o,$.ClassType.cloneAsInstance(se))),o}function jn(e,t,n,a){if(!n)return 0!=(262400&a)&&mt(g.LocMessage.genericTypeArgMissing(),t),e;const r=[];return n&&(0===n.length&&mt(g.LocMessage.genericTypeArgMissing(),t),n.forEach((e=>{(0,$.isTypeVar)(e.type)?(r.some((t=>(0,$.isTypeSame)(t,e.type)))&&mt(g.LocMessage.genericTypeArgUnique(),e.node),r.push(e.type)):mt(g.LocMessage.genericTypeArgTypeVar(),e.node)}))),Rn(e,n,void 0,!0)}function Bn(e,t,n,a,r,s,i){if(!$.TypeBase.isInstantiable(e))return e;if((0,W.isTypeAliasPlaceholder)(e))return e;s||(s=[],(0,W.doForEachSubtype)(e,(e=>{(0,l.assert)(void 0!==s),(0,W.addTypeVarsToListIfUnique)(s,(0,W.getTypeVarArgumentsRecursive)(e))})),s=s.filter((e=>!e.details.isSynthesized)));const o=(s=s.map((e=>$.TypeBase.isInstance(e)?e:(0,W.convertToInstance)(e)))).findIndex((e=>(0,$.isVariadicTypeVar)(e)));if(o>=0){const e=s.findIndex(((e,t)=>t>o&&!e.details.isParamSpec&&e.details.isDefaultExplicit));e>=0&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarWithDefaultFollowsVariadic().format({typeVarName:s[e].details.name,variadicName:s[o].details.name}),i?i[e].name:t)}const p=F.getScopeIdForNode(t);s.forEach(((e,t)=>{var a;(0,l.assert)(void 0!==s);let r=n;i&&t<i.length&&(r=null!==(a=i[t].defaultExpression)&&void 0!==a?a:i[t].name),Jn(r,e,s.slice(0,t),p)}));const d=s.filter((e=>(0,$.isVariadicTypeVar)(e)));if(d.length>1&&mt(g.LocMessage.variadicTypeParamTooManyAlias().format({names:d.map((e=>`"${e.details.name}"`)).join(", ")}),n),!a&&!r){const e=s.filter((e=>e.scopeId!==p&&0===e.scopeType));e.length>0&&mt(g.LocMessage.genericTypeAliasBoundTypeVar().format({names:e.map((e=>`${e.details.name}`)).join(", ")}),n)}const u=v.getFileInfo(t);let m=$.TypeBase.cloneForTypeAlias(e,t.value,F.getClassFullName(t,u.moduleName,t.value),u.moduleName,u.fileUri,p,a,s.length>0?s:void 0);if(a||r){const e=st(n,"TypeAliasType");e&&(0,$.isInstantiableClass)(e)&&(m=$.TypeBase.cloneAsSpecialForm(m,$.ClassType.cloneAsInstance(e)))}return m}function qn(e,t,n){var a;const r=v.getFileInfo(e);let s=$.ClassType.createInstantiable(t,F.getClassFullName(e,r.moduleName,t),r.moduleName,r.fileUri,3,0,void 0,void 0);if(n.isSpecialForm&&(s.details.flags|=-2147483648),void 0!==n.typeParamVariance){let a=$.TypeVarType.createInstance("T");a=$.TypeVarType.cloneForScopeId(a,F.getScopeIdForNode(e),t,0),a.details.declaredVariance=n.typeParamVariance,s.details.typeParameters.push(a)}const i=null!==(a=v.getDeclaration(e))&&void 0!==a?a:e.parent?v.getDeclaration(e.parent):void 0;s.details.declaration=i,r.isTypingExtensionsStubFile&&(s.details.flags|=131072);const o=n.alias||"object";let l;if("builtins"===n.module)l=Fa(e,o);else if("collections"===n.module)l=ot(e,o,["collections"]);else if("self"===n.module){const t=Ma(e,o,!1);t&&(l=Ga(t.symbol),(0,$.isInstantiableClass)(l)&&$.ClassType.isBuiltIn(l,"_TypedDict")&&(l=$.ClassType.cloneWithNewFlags(l,-268437505&l.details.flags)))}return l&&(0,$.isInstantiableClass)(l)?n.alias?s=$.ClassType.cloneForTypingAlias(l,t):(s.details.baseClasses.push(l),s.details.effectiveMetaclass=l.details.effectiveMetaclass,(0,W.computeMroLinearization)(s)):(s.details.baseClasses.push($.UnknownType.create()),s.details.effectiveMetaclass=$.UnknownType.create(),(0,W.computeMroLinearization)(s)),s}function Wn(e){var t,n;const a=v.getFileInfo(e);if(Pe(e))return;let r=0;a.isStubFile&&(r|=1),38!==e.rightExpression.nodeType&&35!==e.rightExpression.nodeType||(r|=2),Xe(e.leftExpression)&&(r|=131560,r&=-3);let s,i=Ne(e.rightExpression,r),o=!1;if(!i&&((a.isTypingStubFile||a.isTypingExtensionsStubFile)&&(i=function(e){if(38!==e.leftExpression.nodeType)return;const t=e.leftExpression.value;if("Any"===t)return $.AnyType.createSpecialForm();const n=new Map([["overload",{alias:"",module:"builtins"}],["TypeVar",{alias:"",module:"builtins"}],["_promote",{alias:"",module:"builtins"}],["no_type_check",{alias:"",module:"builtins"}],["NoReturn",{alias:"",module:"builtins"}],["Never",{alias:"",module:"builtins"}],["Counter",{alias:"Counter",module:"collections"}],["List",{alias:"list",module:"builtins"}],["Dict",{alias:"dict",module:"builtins"}],["DefaultDict",{alias:"defaultdict",module:"collections"}],["Set",{alias:"set",module:"builtins"}],["FrozenSet",{alias:"frozenset",module:"builtins"}],["Deque",{alias:"deque",module:"collections"}],["ChainMap",{alias:"ChainMap",module:"collections"}],["OrderedDict",{alias:"OrderedDict",module:"collections"}]]).get(t);return n?(Be(e.rightExpression),qn(e,t,n)):void 0}(e),i&&De(e.rightExpression,{type:i},0)),!i)){const p=et(e.leftExpression,{method:"set"});let d,u,m=!1;if(Xe(e.leftExpression))d=e.leftExpression.valueExpression,_r(e.rightExpression)||ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.typeAliasIllegalExpressionForm(),e.rightExpression);else if(38===e.leftExpression.nodeType){const t=Ma(e.leftExpression,e.leftExpression.value,!1);if(t){const n=t.symbol.getDeclarations();1===n.length&&Gn(n[0])&&(d=e.leftExpression,m=!0)}}if(d){u=$.TypeVarType.createInstantiable(`__type_alias_${d.value}`),u.details.isSynthesized=!0,u.details.recursiveTypeAliasName=d.value;const t=F.getScopeIdForNode(d);u.details.recursiveTypeAliasScopeId=t,u.details.recursiveTypeAliasIsPep695Syntax=!1,u.scopeId=t,De(e,{type:u},void 0),De(e.leftExpression,{type:u},void 0),54===e.leftExpression.nodeType&&De(e.leftExpression.valueExpression,{type:u},void 0)}const y=Be(e.rightExpression,r,(0,W.makeInferenceContext)(p));let h=y.type;s=y.expectedTypeDiagAddendum,y.isIncomplete&&(o=!0);const f=(0,V.evaluateStaticBoolExpression)(e.rightExpression,a.executionEnvironment,a.definedConstants);if(void 0!==f){const t=Ea(e,"bool");(0,$.isClassInstance)(t)&&(h=$.ClassType.cloneWithLiteral(t,f))}let T;i=h,38===e.leftExpression.nodeType?T=e.leftExpression:54===e.leftExpression.nodeType&&38===e.leftExpression.valueExpression.nodeType&&(T=e.leftExpression.valueExpression),T&&(i=null!==(t=(0,A.transformTypeForPossibleEnumClass)(Ar,e,T,(()=>({assignedType:i}))))&&void 0!==t?t:i),d&&(m&&!Cr(i)||(i=Bn(i,d,d,!1,!1),(0,l.assert)(void 0!==u),(0,W.isTypeAliasRecursive)(u,i)&&(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasIsRecursiveDirect().format({name:d.value}),e.rightExpression),i=$.UnknownType.create()),u.details.boundType=i,u.details.recursiveTypeParameters=null===(n=i.typeAliasInfo)||void 0===n?void 0:n.typeParameters))}kt(e.leftExpression,i,o,e.rightExpression,!0,!0,s),De(e,{type:i,isIncomplete:o},0)}function Gn(e){var t;if(br(e))return!0;if(1===e.type&&e.node.parent&&3===e.node.parent.nodeType&&9===(null===(t=e.node.parent.rightExpression)||void 0===t?void 0:t.nodeType)){const t=e.node.parent.rightExpression.leftExpression;if("TypedDict"===(38===t.nodeType&&t.value)||35===t.nodeType&&"TypedDict"===t.memberName.value&&38===t.leftExpression.nodeType){const e=Be(t,2).type;if((0,$.isInstantiableClass)(e)&&$.ClassType.isBuiltIn(e,"TypedDict"))return!0}}return!1}function Kn(e){var t;return $n(e,e.name,e.expression,!0,null===(t=e.typeParameters)||void 0===t?void 0:t.parameters,(()=>{if(e.typeParameters)return Xn(e.typeParameters)}))}function $n(e,t,n,a,r,s){const i=Ne(t,0);if(i)return i;const o=$.TypeVarType.createInstantiable(`__type_alias_${t.value}`);o.details.isSynthesized=!0,o.details.recursiveTypeAliasName=t.value;const l=F.getScopeIdForNode(t);o.details.recursiveTypeAliasScopeId=l,o.details.recursiveTypeAliasIsPep695Syntax=a,o.scopeId=l,De(t,{type:o},void 0);const p=z.getScopeForNode(e),d=null==p?void 0:p.lookUpSymbolRecursive(t.value),u=v.getDeclaration(e);u&&d&&Ve(d.symbol,u,o);const m=s();o.details.recursiveTypeParameters=m||[];const y=Da(n,{allowForwardReference:!0,enforceTypeAnnotationRules:!0});let h=!1,f=y.type;return y.isIncomplete&&(h=!0),f=Bn(f,t,t,a,!0,m,r),(0,W.isTypeAliasRecursive)(o,f)&&(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeAliasIsRecursiveDirect().format({name:t.value}),n),f=$.UnknownType.create()),o.details.boundType=f,De(t,{type:f,isIncomplete:h},0),f}function Hn(e){if(Pe(e))return;De(e,(0,N.getTypeOfAugmentedAssignment)(Ar,e,void 0),0)}function Zn(e){return`__type_of_${e}`}function Yn(e){je(e);const t=Ne(e.name,0);if(t){if(!(0,$.isInstantiableClass)(t))return;return{classType:t,decoratedType:Ne(e,0)||$.UnknownType.create()}}const n=z.getScopeForNode(e),a=v.getFileInfo(e);let r=0;(5===(null==n?void 0:n.type)||a.isTypingStubFile||a.isTypingExtensionsStubFile||a.isBuiltInStubFile||a.isTypeshedStubFile)&&(r|=1,a.isTypingExtensionsStubFile&&(r|=131072),"property"===e.name.value&&(r|=4096),"tuple"===e.name.value&&(r|=1048576)),a.isStubFile&&(r|=16777216);const s=$.ClassType.createInstantiable(e.name.value,F.getClassFullName(e,a.moduleName,e.name.value),a.moduleName,a.fileUri,r,0,void 0,void 0,F.getDocString(e.suite.statements));s.details.typeVarScopeId=F.getScopeIdForNode(e),Z.has(s.details.fullName)&&(s.includePromotions=!0);const d=null==n?void 0:n.lookUpSymbol(e.name.value);let y;const h=v.getDeclaration(e);h&&(y=h),y&&d&&Ve(d,y,s),s.details.flags|=262144,s.details.declaration=y;try{De(e,{type:s},void 0),De(e.name,{type:s},void 0);let t,n,r=[];e.typeParameters&&(r=Xn(e.typeParameters).map((e=>$.TypeVarType.cloneAsInstance(e))));let i=!1;const d=[];let y,h=289920;if(a.isStubFile&&(h|=4),e.arguments.forEach((o=>{if(2!==o.argumentCategory)if(o.name)if($.ClassType.isTypedDictClass(s))if("total"===o.name.value||"closed"===o.name.value){const t=(0,V.evaluateStaticBoolExpression)(o.valueExpression,a.executionEnvironment,a.definedConstants);void 0===t?mt(g.LocMessage.typedDictBoolParam().format({name:o.name.value}),o.valueExpression):"total"!==o.name.value||t?"closed"===o.name.value&&t&&v.getFileInfo(e).diagnosticRuleSet.enableExperimentalFeatures&&(s.details.flags|=768):s.details.flags|=1024}else mt(g.LocMessage.typedDictInitsubclassParameter().format({name:o.name.value}),o);else"metaclass"===o.name.value?y?mt(g.LocMessage.metaclassDuplicate(),o):y=o.valueExpression:d.push({argumentCategory:0,node:o,name:o.name,valueExpression:o.valueExpression});else{let p;if(1===o.argumentCategory?(Be(o.valueExpression),p=$.UnknownType.create()):(p=Be(o.valueExpression,h).type,(0,$.isTypeVar)(p)&&p.specialForm&&$.TypeBase.isInstance(p.specialForm)&&(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.baseClassInvalid(),o),p=$.UnknownType.create()),p=Ct(p)),(0,$.isUnion)(p)&&(p=(0,$.removeUnbound)(p)),(0,$.isAny)(p)&&p.specialForm&&(p=$.AnyType.create()),(0,$.isAnyOrUnknown)(p)||(0,$.isUnbound)(p)||((0,W.isMetaclassInstance)(p)?((0,l.assert)((0,$.isClassInstance)(p)),p=p.typeArguments&&p.typeArguments.length>0?p.typeArguments[0]:$.UnknownType.create()):(0,$.isInstantiableClass)(p)?(($.ClassType.isPartiallyEvaluated(p)||p.details.mro.some((e=>(0,$.isClass)(e)&&$.ClassType.isPartiallyEvaluated(e))))&&ta(e,p),$.ClassType.isBuiltIn(p,"Protocol")&&(a.isStubFile||$.ClassType.isTypingExtensionClass(p)||!a.executionEnvironment.pythonVersion.isLessThan(u.pythonVersion3_7)||mt(g.LocMessage.protocolIllegal(),o.valueExpression),s.details.flags|=16384),$.ClassType.isBuiltIn(p,"property")&&(s.details.flags|=4096),a.executionEnvironment.pythonVersion.isGreaterOrEqualTo(u.pythonVersion3_6)&&$.ClassType.isBuiltIn(p,"NamedTuple")&&(i=!0,s.details.flags|=33554468),($.ClassType.isBuiltIn(p,"TypedDict")||$.ClassType.isTypedDictClass(p))&&(s.details.flags|=128,$.ClassType.isTypedDictEffectivelyClosed(p)&&(s.details.flags|=512)),(0,W.derivesFromClassRecursive)(p,s,!0)&&(mt(g.LocMessage.baseClassCircular(),o),p=$.UnknownType.create()),p.specialForm&&$.ClassType.isBuiltIn(p.specialForm,"TypeAliasType")&&(mt(g.LocMessage.typeAliasTypeBaseClass(),o),p=$.UnknownType.create())):(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.baseClassInvalid(),o),p=$.UnknownType.create())),(0,$.isUnknown)(p)&&ht(c.DiagnosticRule.reportUntypedBaseClass,g.LocMessage.baseClassUnknown(),o),s.details.baseClasses.some((e=>(0,$.isInstantiableClass)(e)&&(0,$.isInstantiableClass)(p)&&$.ClassType.isSameGenericClass(p,e)))&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.duplicateBaseClass(),o.name||o),s.details.baseClasses.push(p),(0,$.isInstantiableClass)(p)&&($.ClassType.isEnumClass(p)&&(s.details.flags|=2097152),($.ClassType.supportsAbstractMethods(p)||$.ClassType.isProtocolClass(p)&&!$.ClassType.isBuiltIn(p))&&(s.details.flags|=2048),$.ClassType.isPropertyClass(p)&&(s.details.flags|=4096),$.ClassType.isFinal(p))){const e=Ir(p);mt(g.LocMessage.baseClassFinal().format({type:e}),o.valueExpression)}(0,W.addTypeVarsToListIfUnique)(r,(0,W.getTypeVarArgumentsRecursive)(p)),(0,$.isInstantiableClass)(p)&&($.ClassType.isBuiltIn(p,"Generic")?e.typeParameters?ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.genericBaseClassNotAllowed(),o.valueExpression):t||(n&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.duplicateGenericAndProtocolBase(),o.valueExpression),t=[],(0,W.addTypeVarsToListIfUnique)(t,(0,W.getTypeVarArgumentsRecursive)(p))):$.ClassType.isBuiltIn(p,"Protocol")&&p.typeArguments&&p.typeArguments.length>0&&(n||(t&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.duplicateGenericAndProtocolBase(),o.valueExpression),n=[],(0,W.addTypeVarsToListIfUnique)(n,(0,W.getTypeVarArgumentsRecursive)(p)),e.typeParameters&&n.length>0&&(ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.protocolBaseClassWithTypeArgs(),o.valueExpression),n=[]))))}else Be(o.valueExpression)})),s.details.baseClasses.length>1){let t=!1,n=!1;s.details.baseClasses.forEach((e=>{(0,$.isInstantiableClass)(e)&&($.ClassType.isBuiltIn(e,"NamedTuple")?t=!0:$.ClassType.isBuiltIn(e,"Generic")||(n=!0))})),t&&n&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.namedTupleMultipleInheritance(),e.name)}$.ClassType.isBuiltIn(s,"object")||0!==s.details.baseClasses.filter((e=>(0,$.isClass)(e))).length||s.details.baseClasses.push(Fa(e,"object")),t=null!=t?t:n,t&&!e.typeParameters&&function(e,t,n){const a=t.filter((e=>!n.some((t=>t.details.name===e.details.name))));if(a.length>0){const t=new p.DiagnosticAddendum;t.addMessage(g.LocAddendum.typeVarsMissing().format({names:a.map((e=>`"${e.details.name}"`)).join(", ")})),ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarsNotInGenericOrProtocol()+t.getString(),e)}}(e.name,r,t),s.details.typeParameters=null!=t?t:r,s.details.typeParameters.some((e=>0===e.details.declaredVariance&&void 0===e.computedVariance))&&(s.details.requiresVarianceInference=!0);const T=r.filter((e=>(0,$.isVariadicTypeVar)(e)));if(T.length>1)ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.variadicTypeParamTooManyClass().format({names:T.map((e=>`"${e.details.name}"`)).join(", ")}),e.name,m.TextRange.combine(e.arguments)||e.name);else if(T.length>0){const t=s.details.typeParameters.findIndex((e=>(0,$.isVariadicTypeVar)(e))),n=s.details.typeParameters.findIndex(((e,n)=>n>t&&!e.details.isParamSpec&&e.details.isDefaultExplicit));n>=0&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarWithDefaultFollowsVariadic().format({typeVarName:r[n].details.name,variadicName:r[t].details.name}),e.typeParameters?e.typeParameters.parameters[n].name:e.name)}s.details.typeParameters.forEach(((t,n)=>{var a;let r=e.name;if(e.typeParameters&&n<e.typeParameters.parameters.length){const t=e.typeParameters.parameters[n];r=null!==(a=t.defaultExpression)&&void 0!==a?a:t.name}Jn(r,t,s.details.typeParameters.slice(0,n),s.details.typeVarScopeId)})),(0,W.computeMroLinearization)(s)||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.methodOrdering(),e.name);const b=z.getScopeForNode(e.suite);s.details.fields=(null==b?void 0:b.symbolTable)?new Map(b.symbolTable):new Map,s.details.fields.has("__eq__")&&!s.details.fields.has("__hash__")&&s.details.fields.set("__hash__",U.Symbol.createWithType(4292,rt()));const _=null==b?void 0:b.getSlotsNames();if(_&&(s.details.localSlotsNames=_),!a.isStubFile&&0===s.details.typeParameters.length){const t=s.details.fields.get("__init__");if(t){const n=t.getTypedDeclarations();if(1===n.length&&5===n[0].type){const t=n[0].node,a=t.parameters;if(a.length>1&&!a.some(((e,n)=>!!F.getTypeAnnotationForParameter(t,n)))){const n=a.filter(((e,t)=>t>0&&e.name&&0===e.category&&!e.defaultValue));n.length>0&&(s.details.flags|=32768,s.details.typeParameters=n.map((n=>{const a=$.TypeVarType.createInstance(Zn(n.name.value));return a.details.isSynthesized=!0,a.scopeId=F.getScopeIdForNode(t),a.details.boundType=$.UnknownType.create(),$.TypeVarType.cloneForScopeId(a,F.getScopeIdForNode(e),e.name.value,0)})))}}}}if(0!==s.details.typeParameters.length||$.ClassType.isBuiltIn(s,"type")||(s.details.baseClasses.some((e=>(0,$.isInstantiableClass)(e)&&$.ClassType.hasCustomClassGetItem(e)))||s.details.fields.has("__class_getitem__"))&&(s.details.flags|=524288),y){const e=Be(y,h).type;((0,$.isInstantiableClass)(e)||(0,$.isUnknown)(e))&&((0,W.requiresSpecialization)(e,{ignorePseudoGeneric:!0})&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.metaclassIsGeneric(),y),s.details.declaredMetaclass=e,(0,$.isInstantiableClass)(e)&&((0,A.isEnumMetaclass)(e)&&(s.details.flags|=2097152),$.ClassType.isBuiltIn(e,"ABCMeta")&&(s.details.flags|=2048)))}const C=ea(s,e.name);s.details.flags&=-262145;let I,w=s,x=!1;for(let t=e.decorators.length-1;t>=0;t--){const n=e.decorators[t],a=(0,S.applyClassDecorator)(Ar,w,s,n),r=(0,W.containsAnyOrUnknown)(a,!1);r&&(0,$.isUnknown)(r)?x||(ht(c.DiagnosticRule.reportUntypedClassDecorator,g.LocMessage.classDecoratorTypeUnknown(),e.decorators[t].expression),x=!0):w=a}if((0,$.isInstantiableClass)(C)&&C.details.classDataClassTransform)I=C.details.classDataClassTransform;else{const e=s.details.mro.find((e=>(0,$.isClass)(e)&&void 0!==e.details.classDataClassTransform&&!$.ClassType.isSameGenericClass(e,s)));e&&(I=e.details.classDataClassTransform)}if(I&&((0,k.applyDataClassDefaultBehaviors)(s,I),(0,k.applyDataClassClassBehaviorOverrides)(Ar,e.name,s,d,I)),f=s,Ce.forEach((e=>{$.ClassType.isSameGenericClass(e.dependsUpon,f)&&e.classesToComplete.forEach((e=>{const t=Ne(e.name,0);t&&function(e,t){(0,W.computeMroLinearization)(e)||mt(g.LocMessage.methodOrdering(),t),ea(e,t)}(t,e.name)}))})),Ce=Ce.filter((e=>!$.ClassType.isSameGenericClass(e.dependsUpon,f))),ta(e,void 0),$.ClassType.isTypedDictClass(s)){let t=!1;const n=new p.DiagnosticAddendum;s.details.baseClasses.forEach((e=>{!(0,$.isClass)(e)||$.ClassType.isTypedDictClass(e)||$.ClassType.isBuiltIn(e,["_TypedDict","Generic"])||(t=!0,n.addMessage(g.LocAddendum.typedDictBaseClass().format({type:e.details.name})))})),t&&mt(g.LocMessage.typedDictBaseClass()+n.getString(),e.name),(0,K.synthesizeTypedDictClassMethods)(Ar,e,s)}if($.ClassType.isDataClass(s)){const t=$.ClassType.isSkipSynthesizedDataClassInit(s);let n=t;if(!t){const e=s.details.fields.get("__init__");e&&e.isClassMember()&&(n=!0)}let a=!1;const r=s.details.fields.get("__hash__");r&&r.isClassMember()&&!r.getSynthesizedType()&&(a=!0);const o=()=>(0,k.synthesizeDataClassMethods)(Ar,e,s,t,n,a);i?o():s.details.synthesizeMethodsDeferred=()=>{delete s.details.synthesizeMethodsDeferred,o()}}return s.details.calculateInheritedSlotsNamesDeferred=()=>{if(delete s.details.calculateInheritedSlotsNamesDeferred,s.details.localSlotsNames){let e=!0;const t=Array.from(s.details.localSlotsNames);s.details.baseClasses.forEach((n=>{if((0,$.isInstantiableClass)(n)){if(!$.ClassType.isBuiltIn(n,"object")&&!$.ClassType.isBuiltIn(n,"type")&&!$.ClassType.isBuiltIn(n,"Generic")){const a=$.ClassType.getInheritedSlotsNames(n);a?(0,o.appendArray)(t,a):e=!1}}else e=!1})),e&&(s.details.inheritedSlotsNamesCached=t)}},De(e.name,{type:s},0),De(e,{type:w},0),{classType:s,decoratedType:w}}catch(e){throw i.OperationCanceledException.is(e)&&(e.isTypeCacheInvalid=!0),e}var f}function Jn(e,t,n,a){if(!t.details.isDefaultExplicit&&!t.details.isSynthesized&&!t.details.isSynthesizedSelf){const r=n.find((e=>e.details.isDefaultExplicit&&e.scopeId===a));return void(r&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarWithoutDefault().format({name:t.details.name,other:r.details.name}),e))}const r=new Set;if((0,W.validateTypeVarDefault)(t,n,r),r.size>0){const n=new p.DiagnosticAddendum;r.forEach((e=>{n.addMessage(g.LocAddendum.typeVarDefaultOutOfScope().format({name:e}))})),ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarDefaultInvalidTypeVar().format({name:t.details.name})+n.getString(),e)}}function Qn(e){if(!e.details.requiresVarianceInference)return;if(!ae||!(0,$.isClassInstance)(ae))return;e.details.requiresVarianceInference=!1,e.details.typeParameters.forEach((e=>{0===e.details.declaredVariance&&(e.computedVariance=1)}));const t=$.ClassType.createInstantiable("__varianceDummy","","",y.Uri.empty(),0,0,void 0,void 0);e.details.typeParameters.forEach(((n,a)=>{if(n.details.isVariadic||n.details.isParamSpec)return;if(0!==n.details.declaredVariance)return;const r=e.details.typeParameters.map(((e,n)=>e.details.isVariadic?e:((0,l.assert)(void 0!==ae),n===a?ae:t))),s=e.details.typeParameters.map(((e,n)=>n===a||e.details.isVariadic?e:t)),i=$.ClassType.cloneForSpecialization(e,r,!0),o=$.ClassType.cloneForSpecialization(e,s,!0);let p;if(er(i,o,3,!1))p=3;else{p=er(o,i,4,!1)?4:2}e.details.typeParameters[a].computedVariance=p}))}function Xn(e){const t=[],n=v.getScope(e);return(0,l.assert)(void 0!==n),e.parameters.forEach((e=>{var a;const r=n.symbolTable.get(e.name.value);if(!r)return;const s=null===(a=$a(r,e.name))||void 0===a?void 0:a.type;s&&(0,$.isTypeVar)(s)&&(De(e.name,{type:s},0),t.push(s))})),t}function ea(e,t){let n=e.details.declaredMetaclass,a=!1;if(!n||(0,$.isInstantiableClass)(n))for(const r of e.details.baseClasses){if(!(0,$.isInstantiableClass)(r)){n=$.UnknownType.create();break}{const e=r.details.effectiveMetaclass||re;if(!e||!(0,$.isInstantiableClass)(e)){n=e?$.UnknownType.create():void 0;break}if(n){if((0,W.derivesFromClassRecursive)(e,n,!1))n=e;else if(!(0,W.derivesFromClassRecursive)(n,e,!1)&&!a){const r=new p.DiagnosticAddendum;r.addMessage(g.LocAddendum.metaclassConflict().format({metaclass1:wr((0,W.convertToInstance)(n)),metaclass2:wr((0,W.convertToInstance)(e))})),ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.metaclassConflict()+r.getString(),t),a=!0}}else n=e}}if(!n){const e=Fa(t,"type");n=e&&(0,$.isInstantiableClass)(e)?e:$.UnknownType.create()}return e.details.effectiveMetaclass=n,n}function ta(e,t){if(t){const n=Ce.find((e=>$.ClassType.isSameGenericClass(e.dependsUpon,t)));n?n.classesToComplete.push(e):Ce.push({dependsUpon:t,classesToComplete:[e]})}else Ce.forEach((t=>{t.classesToComplete.push(e)}))}function na(e,t){var n,a;const r=[];e.arguments.forEach((e=>{e.name&&"metaclass"!==e.name.value&&r.push({argumentCategory:0,node:e,name:e.name,valueExpression:e.valueExpression})}));const s=r.length>0&&null!==(a=null===(n=r[0].node)||void 0===n?void 0:n.name)&&void 0!==a?a:e.name;let i;if(t.details.effectiveMetaclass&&(0,$.isClass)(t.details.effectiveMetaclass)&&(i=(0,W.lookUpClassMember)(t.details.effectiveMetaclass,"__new__",8)),i){const e=Ja(i);if((0,$.isFunction)(e)){const t=(0,D.getParameterListDetails)(e);if(void 0!==t.firstKeywordOnlyIndex){const n=new Map;for(let e=t.firstKeywordOnlyIndex;e<t.params.length;e++){const a=t.params[e];0===a.param.category&&a.param.name&&n.set(a.param.name,e)}r.forEach((a=>{var r,i,o;const l=new W.UniqueSignatureTracker;if(0===a.argumentCategory&&a.name){const p=null!==(r=n.get(a.name.value))&&void 0!==r?r:t.kwargsIndex;if(void 0!==p){const r=t.params[p];sn({paramCategory:r.param.category,paramType:r.type,requiresTypeVarMatching:!1,argument:a,errorNode:null!==(i=a.valueExpression)&&void 0!==i?i:s},new G.TypeVarContext,l,{type:e},{skipUnknownArgCheck:!0,skipOverloadArg:!0}),n.delete(a.name.value)}else ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.paramNameMissing().format({name:a.name.value}),null!==(o=a.name)&&void 0!==o?o:s)}}));const a=[];if(n.forEach(((e,n)=>{t.params[e].param.hasDefault||a.push(n)})),a.length>0){const e=a.map((e=>`"${e}"`)).join(", ");ht(c.DiagnosticRule.reportGeneralTypeIssues,1===a.length?g.LocMessage.argMissingForParam().format({name:e}):g.LocMessage.argMissingForParams().format({names:e}),s)}}}}else{const n=Ye(s,t,"__init_subclass__",void 0,void 0,545);if(n){const t=n.type;if(t&&n.classType){if(Zt(s,r,{type:t},void 0,!1,(0,W.makeInferenceContext)(rt())).argumentErrors){const a=ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.initSubclassCallFailed(),e.name),r=(0,$.isOverloadedFunction)(t)?$.OverloadedFunctionType.getOverloads(t)[0]:t,s=(0,$.isFunction)(r)?r.details.declaration:void 0;a&&s&&a.addRelatedInfo(g.LocAddendum.initSubclassLocation().format({name:wr((0,W.convertToInstance)(n.classType))}),s.uri,s.range)}}}}r.forEach((e=>{e.valueExpression&&Be(e.valueExpression)}))}function aa(e){var t;je(e);let n=Ne(e.name,0);if(n){if(!(0,$.isFunction)(n))return;if($.FunctionType.isPartiallyEvaluated(n))return{functionType:n,decoratedType:n}}else n=ra(e);let a=Ne(e,0);if(a)return{functionType:n,decoratedType:a};De(e,{type:n},void 0),n.details.flags|=131072;const r=e.isAsync?function(e,t){(0,l.assert)($.FunctionType.isAsync(t));const n=$.FunctionType.cloneWithNewFlags(t,-131585&t.details.flags);t.details.declaredReturnType?n.details.declaredReturnType=ca(e,t.details.declaredReturnType,$.FunctionType.isGenerator(t)):n.inferredReturnType=ca(e,Sr(t),$.FunctionType.isGenerator(t));return n}(e,n):n;n.details.flags&=-131073,a=r;let s=!1;for(let t=e.decorators.length-1;t>=0;t--){const r=e.decorators[t],i=(0,S.applyFunctionDecorator)(Ar,a,n,r,e),o=(0,W.containsAnyOrUnknown)(i,!1);o&&(0,$.isUnknown)(o)?s||(ht(c.DiagnosticRule.reportUntypedFunctionDecorator,g.LocMessage.functionDecoratorTypeUnknown(),e.decorators[t].expression),s=!0):a=i}return a=null!==(t=(0,A.transformTypeForPossibleEnumClass)(Ar,e,e.name,(()=>({assignedType:a}))))&&void 0!==t?t:a,(0,$.isFunction)(a)&&(a.details.deprecatedMessage=n.details.deprecatedMessage,$.FunctionType.isOverloaded(a)&&e.parameters.forEach((e=>{sa(e)})),a=(0,S.addOverloadsToFunctionType)(Ar,e,a)),De(e,{type:a},0),{functionType:n,decoratedType:a}}function ra(e){var t,n,a;const r=v.getFileInfo(e),s=Ne(e.name,0);if(s&&(0,$.isFunction)(s))return s;let i;const o=v.getDeclaration(e);o&&(i=o);const l=F.getEnclosingClass(e,!0);let d;l&&(d=null===(t=Yn(l))||void 0===t?void 0:t.classType);const u=(0,S.getFunctionInfoFromDecorators)(Ar,e,!!l);let m=u.flags;(null==i?void 0:i.isGenerator)&&(m|=16),r.isStubFile?m|=2048:r.isInPyTypedPackage&&(m|=4096),e.isAsync&&(m|=512);const y=$.FunctionType.createInstance(e.name.value,function(e,t,n){const a=[n];let r=e;for(;r;)r=F.getEnclosingClassOrFunction(r),r&&a.push(r.name.value);return a.push(t),a.reverse().join(".")}(e,r.moduleName,e.name.value),r.moduleName,131072|m,F.getDocString(e.suite.statements));y.details.typeVarScopeId=F.getScopeIdForNode(e),y.details.deprecatedMessage=u.deprecationMessage,y.details.methodClass=d,"__init__"!==e.name.value&&"__new__"!==e.name.value||l&&(y.details.constructorTypeVarScopeId=F.getScopeIdForNode(l)),(r.isBuiltInStubFile||r.isTypingStubFile||r.isTypingExtensionsStubFile)&&(y.details.builtInName=e.name.value),y.details.declaration=i;const h=z.getScopeForNode(e),f=null==h?void 0:h.lookUpSymbolRecursive(e.name.value);i&&f&&Ve(f.symbol,i,y),De(e.name,{type:y},void 0);const T=d&&$.ClassType.isPseudoGenericClass(d)&&"__init__"===e.name.value,b=[];let _=0;if(d&&0==(4&y.details.flags)&&(_=1),e.functionAnnotationComment&&!e.functionAnnotationComment.isParamListEllipsis){const t=e.parameters.length-_,n=e.functionAnnotationComment.paramTypeAnnotations.length;_>0&&n===e.parameters.length?_=0:n!==t&&mt(g.LocMessage.annotatedParamCountMismatch().format({expected:t,received:n}),e.functionAnnotationComment)}const C=[];e.typeParameters?y.details.typeParameters=Xn(e.typeParameters).map((e=>(0,W.convertToInstance)(e))):y.details.typeParameters=C;let I=!0;const k=d&&($.FunctionType.isClassMethod(y)||$.FunctionType.isInstanceMethod(y)||$.FunctionType.isConstructorMethod(y)),w=k?1:0;if(e.parameters.forEach(((t,n)=>{let a,s,i,o;if(t.name&&(0===n&&k||$.FunctionType.isAbstractMethod(y)||d&&$.ClassType.isProtocolClass(d))&&sa(t),t.typeAnnotation)i=t.typeAnnotation;else if(t.typeAnnotationComment)i=t.typeAnnotationComment;else if(e.functionAnnotationComment&&!e.functionAnnotationComment.isParamListEllipsis){const t=n-_;t>=0&&t<e.functionAnnotationComment.paramTypeAnnotations.length&&(i=e.functionAnnotationComment.paramTypeAnnotations[t])}if(i&&(s=0!=(524288&u.flags)?$.UnknownType.create():Ke(i,t.category),s&&(0,W.addTypeVarsToListIfUnique)(C,(0,W.getTypeVarArgumentsRecursive)(s),y.details.typeVarScopeId),(0,$.isVariadicTypeVar)(s)&&!s.isVariadicUnpacked&&(mt(g.LocMessage.unpackedTypeVarTupleExpected().format({name1:s.details.name,name2:s.details.name}),i),s=$.UnknownType.create())),!s&&T&&n>0&&0===t.category&&t.name&&!t.defaultValue){const e=Zn(t.name.value);s=d.details.typeParameters.find((t=>t.details.name===e))}if(s){const e=ia(t,s);e!==s&&(s=e)}if(t.defaultValue){let n=r.isStubFile||F.isSuiteEmpty(e.suite);d&&$.ClassType.isProtocolClass(d)&&(n=!0),($.FunctionType.isOverloaded(y)||$.FunctionType.isAbstractMethod(y))&&(n=!0),o=Be(t.defaultValue,n?1:0,(0,W.makeInferenceContext)(s)).type}if(s){if(t.defaultValue&&o){const n=new p.DiagnosticAddendum,a=new G.TypeVarContext(y.details.typeVarScopeId);d&&void 0!==d.details.typeVarScopeId&&("__init__"!==e.name.value&&"__new__"!==e.name.value||a.addSolveForScope(d.details.typeVarScopeId)),nr(s,o,n,a)||ht(c.DiagnosticRule.reportArgumentType,g.LocMessage.paramAssignmentMismatch().format({sourceType:wr(o),paramType:wr(s)})+n.getString(),t.defaultValue)}a=s}if(n>=w){let n=!1;0===t.category&&t.name?(0,R.isPrivateName)(t.name.value)&&!e.parameters.some((e=>0===e.category&&!e.name))&&(n=!0,!I&&y.details.parameters.every((e=>0===e.category))&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.positionOnlyAfterNon(),t.name)):I=!1,I&&!n&&y.details.parameters.length>w&&$.FunctionType.addPositionOnlyParameterSeparator(y),n||(I=!1)}let l=!1;if(!i){l=!0;const t=oa(e,y.details.flags,n,d);t&&(a=t)}const m={category:t.category,name:t.name?t.name.value:void 0,hasDefault:!!t.defaultValue,defaultValueExpression:t.defaultValue,defaultType:o,type:null!=a?a:$.UnknownType.create(),typeAnnotation:i,hasDeclaredType:!!i,isTypeInferred:l};if($.FunctionType.addParameter(y,m),m.hasDeclaredType&&(0,W.addTypeVarsToListIfUnique)(C,(0,W.getTypeVarArgumentsRecursive)(m.type),y.details.typeVarScopeId),t.name){const n=pa(e,t.category,m.type);b.push(n)}else b.push(m.type)})),I&&y.details.parameters.length>w&&$.FunctionType.addPositionOnlyParameterSeparator(y),b.forEach(((t,n)=>{const a=e.parameters[n].name;a&&((0,$.isUnknown)(t)&&(y.details.flags|=16384),De(a,{type:t},0))})),b.length>=2){const e=b[b.length-2],t=b[b.length-1];(0,$.isParamSpec)(e)&&"args"===e.paramSpecAccess&&(0,$.isParamSpec)(t)&&"kwargs"===t.paramSpecAccess&&(y.details.flags|=32768)}const A=null!==(n=e.returnTypeAnnotation)&&void 0!==n?n:null===(a=e.functionAnnotationComment)||void 0===a?void 0:a.returnTypeAnnotation;if(A){y.details.declaredReturnType=$.UnknownType.create();const e=$e(A,{associateTypeVarsWithScope:!0});y.details.declaredReturnType=e}else r.isStubFile&&("__init__"===e.name.value?y.details.declaredReturnType=rt():y.details.declaredReturnType=$.UnknownType.create());return y.details.declaredReturnType&&A&&function(e,t,n){const a=(0,W.getTypeVarArgumentsRecursive)(e).filter((e=>e.scopeId===t.details.typeVarScopeId)),r=[];a.forEach((t=>{$.TypeBase.isInstantiable(t)&&(t=$.TypeVarType.cloneAsInstance(t)),n.some((e=>(0,$.isTypeSame)((0,W.convertToInstance)(e),t)))||(0,W.isTypeVarLimitedToCallable)(e,t)&&r.push(t)})),(0,W.addTypeVarsToListIfUnique)(n,a),r.length>0&&(t.details.rescopedTypeParameters=r)}(y.details.declaredReturnType,y,C),(r.isStubFile||F.isSuiteEmpty(e.suite))&&y.details.declaredReturnType&&(0,$.isClassInstance)(y.details.declaredReturnType)&&$.ClassType.isBuiltIn(y.details.declaredReturnType,["Generator","AsyncGenerator","AwaitableGenerator"])&&(y.details.flags|=16),y.details.typeParameters.forEach(((t,n)=>{var a;let r=e.name;if(e.typeParameters&&n<e.typeParameters.parameters.length){const t=e.typeParameters.parameters[n];r=null!==(a=t.defaultExpression)&&void 0!==a?a:t.name}Jn(r,t,y.details.typeParameters.slice(0,n),y.details.typeVarScopeId)})),y.details.flags&=-131073,De(e.name,{type:y},0),y}function sa(e){if(e.name){const t=Ma(e.name,e.name.value,!1);t&&St(v.getFileInfo(e),t.symbol,e.name)}}function ia(e,t){var n;return 11!==(null===(n=e.defaultValue)||void 0===n?void 0:n.nodeType)||26!==e.defaultValue.constType||(0,W.isOptionalType)(t)||v.getFileInfo(e).diagnosticRuleSet.strictParameterNoneValue?t:(0,$.combineTypes)([t,rt()])}function oa(e,t,n,a){var r;if(a){if(0===n&&0==(4&t)){const e=0!=(3&t);return(0,W.synthesizeTypeVarForSelfCls)(a,e)}const s=e.name.value,i=(0,W.lookUpClassMember)(a,s,1);if(i){const t=i.symbol.getDeclarations();if(1===t.length&&5===t[0].type){const a=t[0].node;if(a.parameters.length===e.parameters.length&&a.parameters.every(((t,n)=>{var a,r;const s=e.parameters[n];return(null===(a=s.name)||void 0===a?void 0:a.value)===(null===(r=t.name)||void 0===r?void 0:r.value)&&s.category===t.category}))){const t=a.parameters[n],s=null!==(r=t.typeAnnotation)&&void 0!==r?r:t.typeAnnotationComment;if(s){let t=Ke(s,e.parameters[n].category);if((0,W.requiresSpecialization)(t)&&(0,$.isClass)(i.classType)){const e=(0,W.buildTypeVarContextFromSpecializedClass)(i.classType);e.addSolveForScope(F.getScopeIdForNode(a)),t=(0,W.applySolvedTypeVars)(t,e,{unknownIfNotFound:!0})}const r=v.getFileInfo(e);return r.isInPyTypedPackage&&!r.isStubFile&&(t=$.TypeBase.cloneForAmbiguousType(t)),t}}}}}const s=e.parameters[n].defaultValue;if(s)return la(s)}function la(e){const t=Be(e,1).type;let n;if((0,W.isNoneInstance)(t)||(0,$.isClassInstance)(t)&&(0,R.isPrivateOrProtectedName)(t.details.name))n=(0,$.combineTypes)([t,$.UnknownType.create()]);else{let e=!1;((0,$.isFunction)(t)||(0,$.isOverloadedFunction)(t)||(0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,["tuple","list","set","dict"]))&&(e=!0),e||(n=Ge(t))}if(n){const t=v.getFileInfo(e);t.isInPyTypedPackage&&!t.isStubFile&&(n=$.TypeBase.cloneForAmbiguousType(n))}return n}function pa(e,t,n){switch(t){case 0:return n;case 1:return(0,$.isTypeVar)(n)&&n.paramSpecAccess?n:(0,$.isUnpackedClass)(n)?$.ClassType.cloneForUnpacked(n,!1):zt([{type:n,isUnbounded:!(0,$.isVariadicTypeVar)(n)}]);case 2:{if((0,$.isTypeVar)(n)&&n.paramSpecAccess)return n;if((0,$.isClassInstance)(n)&&$.ClassType.isTypedDictClass(n)&&n.isUnpacked)return n;const t=Fa(e,"dict"),a=Ea(e,"str");return(0,$.isInstantiableClass)(t)&&(0,$.isClassInstance)(a)?$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(t,[a,n],!0)):$.UnknownType.create()}}}function ca(e,t,n,a=!0){let r;if((0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t))if("Generator"===t.details.name){const n=st(e,"AsyncGenerator");if(n&&(0,$.isInstantiableClass)(n)){const e=[],a=t.typeArguments;a&&a.length>0&&e.push(a[0]),a&&a.length>1&&e.push(a[1]),r=$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(n,e,!0))}}else["AsyncGenerator","AsyncIterator","AsyncIterable"].some((e=>e===t.details.name))&&(r=t);if(!r||!n){const n=st(e,a?"Coroutine":"Awaitable");r=n&&(0,$.isInstantiableClass)(n)?$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(n,a?[$.AnyType.create(),$.AnyType.create(),t]:[t],!0)):$.UnknownType.create()}return r}function da(e,t){var n;if(e.returnTypeAnnotation||(null===(n=e.functionAnnotationComment)||void 0===n?void 0:n.returnTypeAnnotation))return;let a=Ne(e.suite,0),r=!1;if(a)return{type:a,isIncomplete:r};if(fe.has(e.id)||fe.size>=12)a=$.UnknownType.create(),r=!0;else{fe.add(e.id);try{let n;const s=v.getDeclaration(e);s&&(n=s);const i=!ct(e),o=ct(e.suite);if(v.getFileInfo(e).isStubFile)a=$.UnknownType.create();else{if(i)a=t||ua(n)?$.UnknownType.create():$.NeverType.createNoReturn();else{const e=[];(null==n?void 0:n.returnStatements)&&n.returnStatements.forEach((t=>{if(pt(t))if(t.returnExpression){const n=Be(t.returnExpression);n.isIncomplete&&(r=!0);let a=n.type;a.specialForm&&(a=a.specialForm),a=(0,W.mapSubtypes)(a,(e=>(0,$.isClassInstance)(e)&&e.isEmptyContainer?$.ClassType.cloneForSpecialization(e,e.typeArguments,!!e.isTypeArgumentExplicit,e.includeSubclasses,e.tupleTypeArguments,!1):e)),e.push(a)}else e.push(rt())})),!i&&o&&e.push(rt()),a=(0,$.combineTypes)(e),a=(0,$.removeUnbound)(a)}if(null==n?void 0:n.isGenerator){const t=[];let r=!1,s=!1;n.yieldStatements&&n.yieldStatements.forEach((e=>{var n,a;if(pt(e))if(61===e.nodeType){s=!0;const a=Be(e.expression);if((0,$.isClassInstance)(a.type)&&$.ClassType.isBuiltIn(a.type,"Coroutine"))t.push(),r=!0;else{const r=null===(n=nt(a,!1,e))||void 0===n?void 0:n.type;t.push(null!=r?r:$.UnknownType.create())}}else if(47!==(null===(a=null==e?void 0:e.parent)||void 0===a?void 0:a.nodeType)&&(s=!0),e.expression){const n=Be(e.expression).type;t.push(null!=n?n:$.UnknownType.create())}else t.push(rt())})),0===t.length&&t.push(rt());const i=(0,$.combineTypes)(t),o=st(e,r?"AwaitableGenerator":"Generator");if(o&&(0,$.isInstantiableClass)(o)){const e=[],t=s?$.UnknownType.create():$.AnyType.create();e.push(i,t,a),r&&e.push($.AnyType.create()),a=$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(o,e,!0))}else a=$.UnknownType.create()}}De(e.suite,{type:a,isIncomplete:r},0)}finally{fe.delete(e.id)}}return a?{type:a,isIncomplete:r}:void 0}function ua(e){if(!e||!e.isMethod||e.returnStatements||e.yieldStatements||!e.raiseStatements)return!1;for(const t of e.raiseStatements){if(!t.typeExpression||t.valueExpression)return!1;const e=Be(t.typeExpression).type,n=(0,$.isInstantiableClass)(e)||(0,$.isClassInstance)(e)?e:void 0;if(!n||!(0,W.derivesFromStdlibClass)(n,"NotImplementedError"))return!1}return!0}function ma(e){var t,n;if(Pe(e))return;const a=Be(e.iterableExpression),r=null!==(n=null===(t=nt(a,!!e.isAsync,e.iterableExpression))||void 0===t?void 0:t.type)&&void 0!==n?n:$.UnknownType.create();kt(e.targetExpression,r,!!a.isIncomplete,e.targetExpression),De(e,{type:r,isIncomplete:!!a.isIncomplete},0)}function ya(e){if((0,l.assert)(void 0!==e.typeExpression),Pe(e))return;const t=Be(e.typeExpression),n=t.type;function a(e,n){var a,r;if(e=Ct(e),(0,$.isAnyOrUnknown)(e))return e;if((0,$.isInstantiableClass)(e))return $.ClassType.cloneAsInstance(e);if((0,$.isClassInstance)(e)){const s=null!==(r=null===(a=nt({type:e,isIncomplete:t.isIncomplete},!1,n))||void 0===a?void 0:a.type)&&void 0!==r?r:$.UnknownType.create();return(0,W.mapSubtypes)(s,(e=>(0,$.isAnyOrUnknown)(e)?e:$.UnknownType.create()))}return $.UnknownType.create()}let r=(0,W.mapSubtypes)(n,(t=>{const n=(0,W.getSpecializedTupleType)(t);if(n&&n.tupleTypeArguments){const t=n.tupleTypeArguments.map((t=>a(t.type,e.typeExpression)));return(0,$.combineTypes)(t)}return a(t,e.typeExpression)}));e.isExceptGroup&&(r=Ea(e,"BaseExceptionGroup",[r])),e.name&&kt(e.name,r,!1,e.name),De(e,{type:r},0)}function ga(e){if(Pe(e))return;const t=Be(e.expression);let n=t.type;const a=e.parent&&58===e.parent.nodeType&&!!e.parent.isAsync;(0,W.isOptionalType)(n)&&(ht(c.DiagnosticRule.reportOptionalContextManager,g.LocMessage.noneNotUsableWith(),e.expression),n=(0,W.removeNoneFromUnion)(n));const r=a?"__aenter__":"__enter__",s=(0,W.mapSubtypes)(n,(t=>{if(t=Ct(t),(0,$.isAnyOrUnknown)(t))return t;const n=new p.DiagnosticAddendum;if((0,$.isClass)(t)){let s=hn(t,r,[],e.expression,void 0,n.createAddendum());if(s)return a&&(s=tt(s,e.expression)),s;a||hn(t,"__aenter__",[],e.expression,void 0)&&n.addMessage(g.LocAddendum.asyncHelp())}return ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeNotUsableWith().format({type:wr(t),method:r})+n.getString(),e.expression),$.UnknownType.create()})),i=a?"__aexit__":"__exit__";(0,W.doForEachSubtype)(n,(t=>{if(t=Ct(t),!(0,$.isAnyOrUnknown)(t)){if((0,$.isClass)(t)){const n={type:$.AnyType.create()};if(hn(t,i,[n,n,n],e.expression,void 0))return}ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeNotUsableWith().format({type:wr(t),method:i}),e.expression)}})),e.target&&kt(e.target,s,!!t.isIncomplete,e.target),De(e,{type:s,isIncomplete:!!t.isIncomplete},0)}function ha(e){var t;if(Pe(e))return;let n;if(n=e.alias?e.alias:e.module.nameParts[0],!n)return;let a=null!==(t=_a(e,n.value))&&void 0!==t?t:$.UnknownType.create();const r=Ne(e,0);r&&(0,$.isModule)(r)&&a&&(0,$.isTypeSame)(a,r)&&(a=r),vt(n,a,!1,!1),De(e,{type:a},0)}function fa(t){var n;if(Pe(t))return;const a=t.alias||t.name,r=v.getFileInfo(t);if((null===(n=t.alias)||void 0===n?void 0:n.value)===t.name.value){const e=Ma(t,t.name.value,!0);e&&St(r,e.symbol,t)}if(F.getEnclosingClass(t,!0)){const e=Ma(t,a.value,!0);e&&St(r,e.symbol,t)}let s=_a(t,a.value);if(!s){const n=t.parent;(0,l.assert)(n&&22===n.nodeType),(0,l.assert)(!n.isWildcardImport);const a=v.getImportInfo(n.module);if(a&&a.isImportFound&&!a.isNativeLib){const n=a.resolvedUris[a.resolvedUris.length-1],i=e(n);let o=!1;if(i){if(o=!0,r.executionEnvironment.pythonVersion.isGreaterOrEqualTo(u.pythonVersion3_7)||r.isStubFile){const e=i.symbolTable.get("__getattr__");if(e){const t=Ga(e);(0,$.isFunction)(t)&&(s=Za(t),o=!1)}}}else n.isEmpty()&&(o=!0);o&&ht(c.DiagnosticRule.reportAttributeAccessIssue,g.LocMessage.importSymbolUnknown().format({name:t.name.value}),t.name)}s||(s=$.UnknownType.create())}vt(a,s,!1,!1),De(t,{type:s},0)}function Ta(e){if(Pe(e))return;if(!e.parent||63!==e.parent.nodeType)return void(0,l.fail)("Expected parent of case statement to be match statement");const t=v.getFileInfo(e),n=Be(e.parent.subjectExpression);let a=n.type;for(const r of e.parent.cases){if(r===e){"none"!==t.diagnosticRuleSet.reportUnnecessaryComparison&&(n.isIncomplete||(0,E.checkForUnusedPattern)(Ar,e.pattern,a));break}r.guardExpression||(a=(0,E.narrowTypeBasedOnPattern)(Ar,a,r.pattern,!1))}De(e,{type:(0,E.assignTypeToPatternTargets)(Ar,a,!!n.isIncomplete,e.pattern),isIncomplete:!!n.isIncomplete},0)}function va(e){if(!Pe(e))if(e.isWildcardImport){De(e,{type:$.AnyType.create()},0);const t=v.getFlowNode(e);if(t&&0!=(t.flags&_.FlowFlags.WildcardImport)){t.names.forEach((t=>{var n,a;const r=_a(e,t);if(!r)return;const s=Ma(e,t,!1);if(!s)return;const i=null===(n=$a(s.symbol))||void 0===n?void 0:n.type;if(!i)return;const o=new p.DiagnosticAddendum;nr(i,r,o)||ht(c.DiagnosticRule.reportAssignmentType,g.LocMessage.typeAssignmentMismatchWildcard().format({...kr(r,i),name:t})+o.getString(),e,null!==(a=e.wildcardToken)&&void 0!==a?a:e)}))}}else{const t=e.module.nameParts[0];let n=_a(e,t.value);if(!n)return;const a=Ne(e,0);a&&(0,$.isModule)(a)&&n&&(0,$.isTypeSame)(n,a)&&(n=a),vt(t,n,!1,!1),De(e,{type:n},0)}}function ba(e){var t;if(3===(null===(t=e.parent)||void 0===t?void 0:t.nodeType))Wn(e.parent);else{const t=$e(e.typeAnnotation,{isVariableAnnotation:!0,allowFinal:F.isFinalAllowedForAssignmentTarget(e.valueExpression),allowClassVar:F.isClassVarAllowedForAssignmentTarget(e.valueExpression)});De(e.valueExpression,{type:t},0)}}function _a(e,t){const a=Ma(e,t,!0);if(!a)return;const r=a.symbol.getDeclarations().filter((t=>F.isNodeContainedWithin(e,t.node)&&8===t.type));let s=r.length>0?r[r.length-1]:void 0;if(s||(s=a.symbol.getDeclarations().find((e=>8===e.type))),!s)return;(0,l.assert)(8===s.type);const i=Wa(s,!0,{allowExternallyHiddenAccess:v.getFileInfo(e).isStubFile});if(i){if(!i.declaration)return n.evaluateUnknownImportsAsAny?$.AnyType.create():$.UnknownType.create();if(23===e.nodeType&&(i.isPrivate&&ht(c.DiagnosticRule.reportPrivateUsage,g.LocMessage.privateUsedOutsideOfModule().format({name:e.name.value}),e.name),i.privatePyTypedImporter)){const t=new p.DiagnosticAddendum;i.privatePyTypedImported&&t.addMessage(g.LocAddendum.privateImportFromPyTypedSource().format({module:i.privatePyTypedImported})),ht(c.DiagnosticRule.reportPrivateImportUsage,g.LocMessage.privateImportFromPyTypedModule().format({name:e.name.value,module:i.privatePyTypedImporter})+t.getString(),e.name)}return Ba(a.symbol,s)}}function Ca(e){var t,n,a,r,s,i;if(38===e.nodeType&&e.parent){if(28===e.parent.nodeType&&e.parent.name===e)return void aa(e.parent);if(10===e.parent.nodeType&&e.parent.name===e)return void Yn(e.parent);if(23===e.parent.nodeType)return void fa(e.parent);if(21===e.parent.nodeType)return void ha(e.parent);if(77===e.parent.nodeType&&e.parent.name===e)return void Kn(e.parent);if(29===e.parent.nodeType||39===e.parent.nodeType)return void Be(e,4);if(37===e.parent.nodeType)return}const o=F.getParentAnnotationNode(e);if(o){const e=o.parent;return(0,l.assert)(void 0!==e),3===e.nodeType?void(o===e.typeAnnotationComment?$e(o,{isVariableAnnotation:!0,allowFinal:F.isFinalAllowedForAssignmentTarget(e.leftExpression),allowClassVar:F.isClassVarAllowedForAssignmentTarget(e.leftExpression)}):Wn(e)):54===e.nodeType?void ba(e):28===e.nodeType&&o===e.returnTypeAnnotation?void $e(o,{associateTypeVarsWithScope:!0}):void $e(o,{isVariableAnnotation:54===(null===(t=o.parent)||void 0===t?void 0:t.nodeType),allowUnpackedTuple:41===e.nodeType&&1===e.category,allowUnpackedTypedDict:41===e.nodeType&&2===e.category})}const p=F.getParentNodeOfType(e,64);if(p&&F.isNodeContainedWithin(e,p.pattern))return void Ta(p);let c=e,d=0;for(;;){const t=F.getParentNodeOfType(c,1);if(t&&t!==c){if((0,l.assert)(void 0!==t.parent),9===t.parent.nodeType||24===t.parent.nodeType){c=t.parent;continue}if(10===t.parent.nodeType)return void Yn(t.parent)}let n=c.parent;if(!n)break;if(4!==n.nodeType||c!==n.name){if(9===n.nodeType||35===n.nodeType){if(c===n.leftExpression){if(9===c.nodeType&&38===c.leftExpression.nodeType&&"super"===c.leftExpression.value){c=n;continue}if(9===n.nodeType&&30===c.nodeType){c=n;continue}d=2;break}}else if(24===n.nodeType){if(c===n.baseExpression){d=2;break}}else if(48===n.nodeType&&c===n.typeAnnotation){c=n;continue}if(!(0,h.isExpressionNode)(n))if(17===n.nodeType||16===n.nodeType||33===n.nodeType||34===n.nodeType)(0,l.assert)(void 0!==n.parent&&(0,h.isExpressionNode)(n.parent)),n=n.parent;else{if(41!==n.nodeType){if(75===n.nodeType){if(e===n.boundExpression||e===n.defaultExpression)return void ja(n);break}break}if((0,l.assert)(void 0!==n.parent),30!==n.parent.nodeType)break;n=n.parent}c=n}else c=n}const u=c.parent;switch((0,l.assert)(void 0!==u),u.nodeType){case 14:return void wt(c);case 75:if(c===u.name&&76===(null===(n=u.parent)||void 0===n?void 0:n.nodeType)&&77===(null===(a=u.parent.parent)||void 0===a?void 0:a.nodeType))return void Kn(u.parent.parent);break;case 77:return void Kn(u);case 13:return void(10===(null===(r=u.parent)||void 0===r?void 0:r.nodeType)?Yn(u.parent):28===(null===(s=u.parent)||void 0===s?void 0:s.nodeType)&&aa(u.parent));case 41:if(c!==u.defaultValue)return void Ia(u);break;case 1:if(c===u.name)return;if(10===(null===(i=u.parent)||void 0===i?void 0:i.nodeType))return void Yn(u.parent);break;case 44:if(u.returnExpression){const t=F.getEnclosingFunction(e),n=t?Ya(t):void 0;return void Be(u.returnExpression,0,(0,W.makeInferenceContext)(n))}break;case 54:return void ba(u);case 3:return void Wn(u)}54!==c.nodeType?Be(c,d):ba(c)}function Ia(e){if(!e.name)return;const t=e.parent;if(30===t.nodeType)return void Ca(t);(0,l.assert)(28===t.nodeType);const n=t,a=n.parameters.findIndex((t=>t===e)),r=F.getTypeAnnotationForParameter(n,a);if(r){const t=n.parameters[a],s=Ke(r,n.parameters[a].category),i=pa(e,e.category,ia(t,s));return void De(e.name,{type:i},0)}const s=F.getEnclosingClass(n,!0),i=s?Yn(s):void 0;if(i&&$.ClassType.isPseudoGenericClass(null==i?void 0:i.classType)&&"__init__"===n.name.value){const t=Zn(e.name.value),n=i.classType.details.typeParameters.find((e=>e.details.name===t));if(n)return void De(e.name,{type:n},0)}const o=oa(n,(0,S.getFunctionInfoFromDecorators)(Ar,n,!0).flags,a,null==i?void 0:i.classType);De(e.name,{type:pa(e,e.category,null!=o?o:$.UnknownType.create())},0)}function ka(e){je(e);let t=e;for(;t;){switch(t.nodeType){case 3:if(!(t.parent&&(3===t.parent.nodeType||4===t.parent.nodeType||5===t.parent.nodeType)&&t.parent.rightExpression===t))return void Wn(t);break;case 77:return void Kn(t);case 4:return void Be(t);case 5:return void Hn(t);case 10:return void Yn(t);case 41:return void Ia(t);case 30:return void Ca(t);case 28:return void aa(t);case 26:return void ma(t);case 25:return void ya(t);case 59:return void ga(t);case 33:{const e=t.parent;if((0,l.assert)(32===e.nodeType),t===e.expression)Ca(e);else for(const n of e.forIfNodes)if(wn(n),n===t)break;return}case 21:return void ha(t);case 23:return void fa(t);case 22:return void va(t);case 64:return void Ta(t)}t=t.parent}(0,l.fail)("Unexpected statement")}function wa(e,t){let n=xe(e);return n&&!n.typeResult.isIncomplete?n.typeResult:(t(),n=xe(e),n?n.typeResult:void 0)}function Sa(e,t){let n=Te.get(e);if(n){const e=n.find((e=>t&&e.typeAtStart?!t.isIncomplete==!e.typeAtStart.isIncomplete&&(0,$.isTypeSame)(t.type,e.typeAtStart.type):!t&&!e.typeAtStart));if(e)return e.codeFlowAnalyzer}const a=xr.createCodeFlowAnalyzer(t);return n?n.push({typeAtStart:t,codeFlowAnalyzer:a}):(n=[{typeAtStart:t,codeFlowAnalyzer:a}],Te.set(e,n)),a}function Aa(e,t,n){var a;const r=(0,_.createKeyForReference)(e),s=F.getExecutionScopeNode(null!==(a=null==t?void 0:t.parent)&&void 0!==a?a:e),i=v.getCodeFlowExpressions(s);if(!i||!i.has(r)&&!i.has(_.wildcardImportReferenceKey))return{type:void 0,isIncomplete:!1};if(lt(e))return{type:void 0,isIncomplete:!0};let o;o=Ee(s)?function(){const e=we.length;return(0,l.assert)(e>0),we[e-1].codeFlowAnalyzer}():Sa(s.id,null==n?void 0:n.typeAtStart);const p=v.getFlowNode(null!=t?t:e);return void 0===p?{type:void 0,isIncomplete:!1}:o.getTypeFromCodeFlow(p,e,n)}function xa(e,t,n,a){if($.ClassType.isSpecialBuiltIn(e)){switch(e.aliasName||e.details.name){case"Callable":return{type:xn(e,t,a)};case"Never":return t&&t.length>0&&mt(g.LocMessage.typeArgsExpectingNone().format({name:"Never"}),t[0].node),{type:$.NeverType.createNever()};case"NoReturn":return t&&t.length>0&&mt(g.LocMessage.typeArgsExpectingNone().format({name:"NoReturn"}),t[0].node),{type:$.NeverType.createNoReturn()};case"Optional":return{type:Pn(e,a,t,n)};case"Type":{let n=Rn(e,t,1,void 0,!1);return(0,$.isInstantiableClass)(n)&&(n=(0,W.explodeGenericClass)(n)),{type:n}}case"ClassVar":return{type:Fn(e,a,t,n)};case"Protocol":return 0!=(67109120&n)&&mt(g.LocMessage.protocolNotAllowed(),a),{type:Rn(e,t,void 0,!0)};case"TypedDict":0!=(67109120&n)&&mt(g.LocMessage.typedDictNotAllowed(),a);break;case"Literal":0!=(67109120&n)&&mt(g.LocMessage.literalNotAllowed(),a);break;case"Tuple":return{type:Rn(e,t,void 0,!1,!1)};case"Union":return{type:Ln(e,a,t,n)};case"Generic":return{type:jn(e,a,t,n)};case"Final":return{type:Vn(e,a,t,n)};case"Annotated":return function(e,t,n){return n&&n.length<2&&mt(g.LocMessage.annotatedTypeArgMissing(),t),n&&0!==n.length?(n[0].typeList&&mt(g.LocMessage.typeArgListNotAllowed(),n[0].node),{type:$.TypeBase.cloneAsSpecialForm(n[0].type,e),isReadOnly:n[0].isReadOnly,isRequired:n[0].isRequired,isNotRequired:n[0].isNotRequired}):{type:$.AnyType.create()}}(e,a,t);case"Concatenate":return{type:Un(e,a,t,n)};case"TypeGuard":case"TypeIs":return{type:En(e,a,t,n)};case"Unpack":return{type:zn(e,a,t,n)};case"Required":case"NotRequired":case"ReadOnly":return On(e,a,t,n);case"Self":return{type:Mn(e,a,t,n)};case"LiteralString":return{type:Rn(e,t,0)}}}const r=v.getFileInfo(a);if(r.isStubFile||r.executionEnvironment.pythonVersion.isGreaterOrEqualTo(u.pythonVersion3_9)||(0,T.isAnnotationEvaluationPostponed)(v.getFileInfo(a))||0!=(4&n)){if($.ClassType.isBuiltIn(e,"type")&&t){if(t.length>=1&&((0,$.isFunction)(t[0].type)||(0,$.isOverloadedFunction)(t[0].type)))return ht(c.DiagnosticRule.reportInvalidTypeForm,g.LocMessage.typeAnnotationWithCallable(),t[0].node),{type:$.UnknownType.create()};if(re&&(0,$.isInstantiableClass)(re)){let e=Rn(re,t,1,void 0,!1);return(0,$.isInstantiableClass)(e)&&(e=(0,W.explodeGenericClass)(e)),{type:e}}}if((0,W.isTupleClass)(e))return{type:Rn(e,t,void 0,void 0,!1)}}let s=t?t.length:0;const i=$.ClassType.isPseudoGenericClass(e)?[]:$.ClassType.getTypeParameters(e);if(0===i.length&&0===s)return{type:e};const o=i.findIndex((e=>(0,$.isVariadicTypeVar)(e)));if(t){let n=i.length;const r=i.findIndex((e=>!!e.details.isDefaultExplicit));if(r>=0&&(n=r),t[0].inlinedTypeDict)return t.length>1&&ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeArgsTooMany().format({name:e.aliasName||e.details.name,expected:1,received:s}),t[1].node),{type:t[0].inlinedTypeDict};s>i.length?$.ClassType.isPartiallyEvaluated(e)||$.ClassType.isTupleClass(e)||(0===i.length?ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeArgsExpectingNone().format({name:e.aliasName||e.details.name}),t[i.length].node):1===i.length&&(0,$.isParamSpec)(i[0])||ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeArgsTooMany().format({name:e.aliasName||e.details.name,expected:i.length,received:s}),t[i.length].node),s=i.length):s<n&&ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeArgsTooFew().format({name:e.aliasName||e.details.name,expected:n,received:s}),t.length>0?t[0].node.parent:a),t.forEach(((e,t)=>{if(t===o){if((0,$.isClassInstance)(e.type)&&(0,W.isTupleClass)(e.type))return;if((0,$.isVariadicTypeVar)(e.type))return void Ft(e.type,e.node)}const n=t<i.length?i[t]:void 0;An(e,{allowParamSpec:!0,allowTypeArgList:null==n?void 0:n.details.isParamSpec})}))}let d=[];const m=$.ClassType.getTypeParameters(e);if(1===m.length&&m[0].details.isParamSpec&&t)if(t.every((e=>!(0,W.isEllipsisType)(e.type)&&!e.typeList&&!(0,$.isParamSpec)(e.type))))1===t.length&&(0,$.isInstantiableClass)(t[0].type)&&$.ClassType.isBuiltIn(t[0].type,"Concatenate")||(t=[{type:$.UnknownType.create(),node:t[0].node,typeList:t}]);else if(t.length>1){const e=t.find((e=>(0,$.isParamSpec)(e.type)));e&&mt(g.LocMessage.paramSpecContext(),e.node);const n=t.find((e=>!!e.typeList));n&&mt(g.LocMessage.typeArgListNotAllowed(),n.node)}const y=new G.TypeVarContext(e.details.typeVarScopeId);m.forEach(((e,n)=>{if(t&&n<t.length){if(e.details.isParamSpec){const a=t[n],r=$.FunctionType.createSynthesizedInstance("",65536);if((0,W.isEllipsisType)(a.type))return $.FunctionType.addDefaultParameters(r),r.details.flags|=32768,d.push(r),void y.setTypeVarType(e,(0,W.convertTypeToParamSpecValue)(r));if(a.typeList)return a.typeList.forEach(((e,t)=>{$.FunctionType.addParameter(r,{category:0,name:`__p${t}`,isNameSynthesized:!0,type:(0,W.convertToInstance)(e.type),hasDeclaredType:!0})})),a.typeList.length>0&&$.FunctionType.addPositionOnlyParameterSeparator(r),d.push(r),void y.setTypeVarType(e,(0,W.convertTypeToParamSpecValue)(r));if((0,$.isInstantiableClass)(a.type)&&$.ClassType.isBuiltIn(a.type,"Concatenate")){const e=a.type.typeArguments;return e&&e.length>0&&e.forEach(((t,n)=>{n===e.length-1?(0,$.isParamSpec)(t)?r.details.paramSpec=t:(0,W.isEllipsisType)(t)&&($.FunctionType.addDefaultParameters(r),r.details.flags|=32768):$.FunctionType.addParameter(r,{category:0,name:`__p${n}`,isNameSynthesized:!0,hasDeclaredType:!0,type:t})})),void d.push(r)}}const a=(0,W.convertToInstance)(t[n].type);return d.push(a),void y.setTypeVarType(e,a)}const a=(0,W.applySolvedTypeVars)(e,y,{unknownIfNotFound:!0});d.push(a),(0,$.isParamSpec)(e)?y.setTypeVarType(e,(0,W.convertTypeToParamSpecValue)(a)):y.setTypeVarType(e,a)})),d=d.map(((a,r)=>{if(r<s){const s=new p.DiagnosticAddendum;let o=function(e,t,n){if((0,$.isAnyOrUnknown)(t))return t;let a=(0,W.transformPossibleRecursiveTypeAlias)(t);if((0,$.isTypeVar)(t)){if((0,$.isTypeSame)(t,e))return t;a=Ct(t)}if((0,$.isClass)(a)&&$.ClassType.isPartiallyEvaluated(a))return t;if(e.details.boundType&&!(0,W.isTypeAliasPlaceholder)(a)&&!nr(e.details.boundType,a,n.createAddendum(),void 0,void 0))return void(e.details.isSynthesized||n.addMessage(g.LocAddendum.typeBound().format({sourceType:wr(a),destType:wr(e.details.boundType),name:$.TypeVarType.getReadableName(e)})));if(e.details.isParamSpec)return(0,$.isParamSpec)(t)||(0,$.isFunction)(t)&&$.FunctionType.isParamSpecValue(t)||(0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"Concatenate")?t:void n.addMessage(g.LocAddendum.typeParamSpec().format({type:wr(t),name:$.TypeVarType.getReadableName(e)}));if((0,$.isTypeVar)(t)&&t.details.isParamSpec)return void n.addMessage(g.LocMessage.paramSpecContext());const r=e.details.constraints;if(0===r.length)return t;if((0,W.isTypeAliasPlaceholder)(t))return t;if((0,$.isTypeVar)(t)&&t.details.constraints.length>0){if(t.details.constraints.every((e=>r.some((t=>nr(t,e))))))return t}else{let e;for(const t of r)nr(t,a)&&!(0,$.isNever)(a)&&(e&&!nr(e,t)||(e=t));if(e)return e}return void n.addMessage(g.LocAddendum.typeConstrainedTypeVar().format({type:wr(t),name:$.TypeVarType.getReadableName(e)}))}(i[r],a,s);if(o&&0!=(16384&n)){const t=i[r].details.declaredVariance;(0,W.isVarianceOfTypeArgumentCompatible)(o,t)||(s.addMessage(g.LocAddendum.varianceMismatchForClass().format({typeVarName:wr(o),className:e.details.name})),o=void 0)}o?a=o:(0,$.isClassInstance)(a)&&$.ClassType.isPartiallyEvaluated(a)||((0,l.assert)(void 0!==t),ht(c.DiagnosticRule.reportInvalidTypeArguments,g.LocMessage.typeVarAssignmentMismatch().format({type:wr(a),name:$.TypeVarType.getReadableName(i[r])})+s.getString(),t[r].node))}return a})),t&&0===e.details.typeParameters.length&&$.ClassType.isPartiallyEvaluated(e)&&(d=t.map((e=>(0,W.convertToInstance)(e.type))));return{type:$.ClassType.cloneForSpecialization(e,d,void 0!==t)}}function Pa(e,t){return e.typeResult?{type:e.typeResult.type,isIncomplete:e.typeResult.isIncomplete}:e.valueExpression?Be(e.valueExpression,void 0,t):{type:$.UnknownType.create()}}function Na(e,t){return e.typeResult?{type:e.typeResult.type,isIncomplete:e.typeResult.isIncomplete}:((0,l.assert)(void 0!==e.valueExpression),Da(e.valueExpression,t))}function Da(e,t){let n=131208;(null==t?void 0:t.allowTypeVarsWithoutScopeId)&&(n|=4096);return v.getFileInfo(e).isStubFile||(null==t?void 0:t.allowForwardReference)?n|=4:n|=4194304,t&&t.allowFinal||(n|=16),(null==t?void 0:t.allowRequired)&&(n|=1048832),(null==t?void 0:t.allowUnpackedTuple)?n|=2097152:n|=64,t&&t.allowParamSpec||(n|=32),(null==t?void 0:t.enforceTypeAnnotationRules)&&(n|=256),(null==t?void 0:t.disallowProtocolAndTypedDict)&&(n|=67108864),Be(e,n)}function Fa(e,t){const n=z.getScopeForNode(e);if(n){const e=z.getBuiltInScope(n).lookUpSymbol(t);if(e)return Ga(e)}return $.UnknownType.create()}function Ea(e,t,n){const a=Fa(e,t);if((0,$.isInstantiableClass)(a)){let e=a;return n&&(e=$.ClassType.cloneForSpecialization(e,n,void 0!==n)),$.ClassType.cloneAsInstance(e)}return a}function Ma(e,t,n,a=!1){var r;const s=F.getEvaluationScopeNode(e),i=v.getScope(s.node);let o=null==i?void 0:i.lookUpSymbolRecursive(t,{useProxyScope:!!s.useProxyScope});const l=null!==(r=null==i?void 0:i.type)&&void 0!==r?r:4;if(o&&n&&(2!==l&&1!==l&&0!==l)){if(!o.symbol.getDeclarations().find((t=>{if(8!==t.type&&0!==t.type){const n=F.getExecutionScopeNode(e),a=6===t.type||5===t.type||4===t.type?t.node.name:t.node;if(n===F.getExecutionScopeNode(a)&&!dt(a,e)){const t=v.getFlowNode(e);return!(t&&xr.isFlowNodeReachable(t,void 0,!0))}}return!0})))if(2!==o.scope.type){let e=o.scope.parent;const n=o.isOutsideCallerModule||4===o.scope.type;let a=o.isBeyondExecutionScope||o.scope.isIndependentlyExecutable();if(3===o.scope.type){const t=o.scope.getGlobalScope();e=t.scope,t.isBeyondExecutionScope&&(a=!0)}o=e?e.lookUpSymbolRecursive(t,{isOutsideCallerModule:n,isBeyondExecutionScope:a}):void 0}else o=void 0}if(o&&a){let e=o;for(;4!==e.scope.type&&5!==e.scope.type&&0!==e.scope.type&&e.scope.parent&&(e=e.scope.parent.lookUpSymbolRecursive(t,{isOutsideCallerModule:e.isOutsideCallerModule,isBeyondExecutionScope:e.isBeyondExecutionScope||e.scope.isIndependentlyExecutable()}),e););4!==(null==e?void 0:e.scope.type)&&5!==(null==e?void 0:e.scope.type)||(o=e)}return o}function Oa(e,t){Q.push(e);try{const e=t();return Q.pop(),e}catch(e){throw Q.pop(),e}}function za(e,t,n){if(!e)return t();J.enterSpeculativeContext(e,n);try{const e=t();return J.leaveSpeculativeContext(),e}catch(e){throw J.leaveSpeculativeContext(),e}}function Va(e){return J.isSpeculative(e)}function Ua(e,t){if((0,$.isFunction)(e)&&e.details.declaration){const n=e.details.declaration;if(5===n.type){const a=n.node,r=v.getScope(a);if(r){const n=r.lookUpSymbol(t);if(n)return n.getDeclarations().find((e=>2===e.type));const a=(0,D.getParameterListDetails)(e);if(a.unpackedKwargsTypedDictType){const e=(0,W.lookUpClassMember)(a.unpackedKwargsTypedDictType,t);if(e)return e.symbol.getDeclarations().find((e=>1===e.type))}}}}}function Ra(e){if(e.parent&&23===e.parent.nodeType&&e.parent.alias&&e===e.parent.name)return e.parent.alias}function La(e){var t,n,a,r;switch(e.type){case 0:{if("Any"===e.intrinsicType)return{type:$.AnyType.create()};if("class"===e.intrinsicType){const t=Yn(F.getEnclosingClass(e.node));return{type:null==t?void 0:t.classType}}const t=Ea(e.node,"str"),n=Ea(e.node,"int");if((0,$.isClassInstance)(n)&&(0,$.isClassInstance)(t)){if("str"===e.intrinsicType)return{type:t};if("str | None"===e.intrinsicType)return{type:(0,$.combineTypes)([t,rt()])};if("int"===e.intrinsicType)return{type:n};if("Iterable[str]"===e.intrinsicType){const n=Fa(e.node,"Iterable");if((0,$.isInstantiableClass)(n))return{type:$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(n,[t],!0))}}if("Dict[str, Any]"===e.intrinsicType){const n=Fa(e.node,"dict");if((0,$.isInstantiableClass)(n))return{type:$.ClassType.cloneAsInstance($.ClassType.cloneForSpecialization(n,[t,$.AnyType.create()],!0))}}}return{type:$.UnknownType.create()}}case 6:{const t=Yn(e.node);return{type:null==t?void 0:t.decoratedType}}case 7:return{type:$e(e.node.typeAnnotation)};case 5:{const t=aa(e.node);return{type:null==t?void 0:t.decoratedType}}case 4:return{type:Kn(e.node)};case 2:{let n=e.node.typeAnnotation||e.node.typeAnnotationComment;if(!n&&28===(null===(t=e.node.parent)||void 0===t?void 0:t.nodeType)){const t=e.node.parent;if(t.functionAnnotationComment&&!t.functionAnnotationComment.isParamListEllipsis){const a=t.parameters.findIndex((t=>t===e.node));n=F.getTypeAnnotationForParameter(t,a)}}if(n){const t=Ke(n,e.node.category);return{type:pa(e.node,e.node.category,ia(e.node,t))}}return{type:void 0}}case 3:return{type:ja(e.node)};case 1:{const t=e.typeAnnotationNode;if(t){let s;if(e.isRuntimeTypeExpression)s=(0,W.convertToInstance)(Da(t,{allowFinal:!0,allowRequired:!0}).type);else{const a=e.isDefinedByMemberAccess&&35===(null===(n=e.node.parent)||void 0===n?void 0:n.nodeType)?e.node.parent:e.node;s=$e(t,{isVariableAnnotation:!0,allowClassVar:F.isClassVarAllowedForAssignmentTarget(a),allowFinal:F.isFinalAllowedForAssignmentTarget(a),allowRequired:F.isRequiredAllowedForAssignmentTarget(a)})}if(s){if(38===e.node.nodeType){const t=null!==(a=F.getParentNodeOfType(e.node,3))&&void 0!==a?a:F.getParentNodeOfType(e.node,54);t&&(s=null!==(r=(0,A.transformTypeForPossibleEnumClass)(Ar,t,e.node,(()=>({declaredType:s}))))&&void 0!==r?r:s)}return(0,$.isClassInstance)(s)&&$.ClassType.isBuiltIn(s,"TypeAlias")?{type:void 0,isTypeAlias:!0}:{type:s}}}return{type:void 0}}case 8:return{type:void 0}}}function ja(e){const t=Ne(e.name,0);if(t&&(0,$.isTypeVar)(t))return t;let n="TypeVar";e.typeParamCategory===h.TypeParameterCategory.TypeVarTuple?n="TypeVarTuple":e.typeParamCategory===h.TypeParameterCategory.ParamSpec&&(n="ParamSpec");const a=st(e,n),r=a&&(0,$.isInstantiableClass)(a)?a:void 0;let s=$.TypeVarType.createInstantiable(e.name.value,e.typeParamCategory===h.TypeParameterCategory.ParamSpec);if(r&&(s=$.TypeBase.cloneAsSpecialForm(s,$.ClassType.cloneAsInstance(r))),s.details.isTypeParamSyntax=!0,e.typeParamCategory===h.TypeParameterCategory.TypeVarTuple&&(s.details.isVariadic=!0),De(e,{type:s},void 0),De(e.name,{type:s},void 0),e.boundExpression)if(52===e.boundExpression.nodeType){const t=e.boundExpression.expressions.map((e=>{const t=Da(e,{disallowProtocolAndTypedDict:!0,allowForwardReference:!0}).type;return(0,W.requiresSpecialization)(t,{ignorePseudoGeneric:!0,ignoreImplicitTypeArgs:!0})&&mt(g.LocMessage.typeVarBoundGeneric(),e),(0,W.convertToInstance)(t)}));t.length<2?ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.typeVarSingleConstraint(),e.boundExpression):e.typeParamCategory===h.TypeParameterCategory.TypeVar&&(s.details.constraints=t)}else{const t=Da(e.boundExpression,{disallowProtocolAndTypedDict:!0,allowForwardReference:!0}).type;(0,W.requiresSpecialization)(t,{ignorePseudoGeneric:!0})&&mt(g.LocMessage.typeVarConstraintGeneric(),e.boundExpression),e.typeParamCategory===h.TypeParameterCategory.TypeVar&&(s.details.boundType=(0,W.convertToInstance)(t))}if(e.typeParamCategory===h.TypeParameterCategory.ParamSpec){const t=e.defaultExpression?un(e.defaultExpression,!0):void 0;t?(s.details.defaultType=t,s.details.isDefaultExplicit=!0):s.details.defaultType=(0,W.getUnknownTypeForParamSpec)()}else if(e.typeParamCategory===h.TypeParameterCategory.TypeVarTuple){const t=e.defaultExpression?cn(e.defaultExpression,!0):void 0;t?(s.details.defaultType=t,s.details.isDefaultExplicit=!0):s.details.defaultType=zt([{type:$.UnknownType.create(),isUnbounded:!0}])}else{const t=e.defaultExpression?(0,W.convertToInstance)(Da(e.defaultExpression,{allowForwardReference:!0}).type):void 0;t?(s.details.defaultType=t,s.details.isDefaultExplicit=!0):s.details.defaultType=$.UnknownType.create()}s.details.isDefaultExplicit&&e.defaultExpression&&ln(s,e.defaultExpression);const i=F.getTypeVarScopeNode(e);if(i){let e;10===i.nodeType?(e=0,s.details.declaredVariance=0):28===i.nodeType?e=1:((0,l.assert)(77===i.nodeType),e=2),s=$.TypeVarType.cloneForScopeId(s,F.getScopeIdForNode(77===i.nodeType?i.name:i),i.name.value,e)}return De(e,{type:s},void 0),De(e.name,{type:s},void 0),s}function Ba(t,a){var r,s,i,o;const p=qa(a,!0,{allowExternallyHiddenAccess:v.getFileInfo(a.node).isStubFile});if(!p)return n.evaluateUnknownImportsAsAny?$.AnyType.create():$.UnknownType.create();function c(e,t,a){if(!t.uri.isEmpty()&&t.loadSymbolsFromPath){const r=a(t.uri);r?(e.fields=r.symbolTable,e.docString=r.docString):e.notPresentFieldType=n.evaluateUnknownImportsAsAny?$.AnyType.create():$.UnknownType.create()}return t.implicitImports&&t.implicitImports.forEach(((t,n)=>{let r;if(t.isUnresolved)r=$.UnknownType.create();else{const s=e.moduleName?e.moduleName+"."+n:"";r=c($.ModuleType.create(s,t.uri),t,a)}const s=U.Symbol.createWithType(0,r);e.loaderFields.set(n,s)})),e}if(8===p.type){const t=$.ModuleType.create(p.moduleName,p.uri);return p.symbolName&&p.submoduleFallback?c(t,p.submoduleFallback,e):c(t,p,e)}const d=La(p);if(d.type)return d.type;const u=v.getFileInfo(p.node);let m=!u.isInPyTypedPackage||u.isStubFile;if(!m&&1===p.type){const e=F.getEnclosingClass(p.node,!0);if(e){const t=Yn(e);t&&$.ClassType.isEnumClass(t.classType)&&(m=!0)}if((Tr(p)||p.isConstant)&&(m=!0),9===(null===(r=p.inferredTypeSource)||void 0===r?void 0:r.nodeType)){const e=Be(p.inferredTypeSource.leftExpression,2).type,t=["TypeVar","ParamSpec","TypeVarTuple","TypedDict","NamedTuple","NewType"];((0,$.isInstantiableClass)(e)&&$.ClassType.isBuiltIn(e,t)||(0,$.isFunction)(e)&&t.some((t=>e.details.builtInName===t)))&&(m=!0)}}if(2===p.type)return(0,l.assert)(void 0!==p.node.name),null===(s=wa(p.node.name,(()=>{Ia(p.node)})))||void 0===s?void 0:s.type;if(1===p.type&&p.inferredTypeSource){const e=vr(p)||Gn(p),n=e&&p.inferredTypeSource.parent?p.inferredTypeSource.parent:p.inferredTypeSource;let r=null===(i=wa(p.node,(()=>{ka(n)})))||void 0===i?void 0:i.type;if(r&&38===p.node.nodeType){const e=null!==(o=F.getParentNodeOfType(p.node,3))&&void 0!==o?o:F.getParentNodeOfType(p.node,54);if(e){const t=(0,A.transformTypeForPossibleEnumClass)(Ar,e,p.node,(()=>{var e,t;(0,l.assert)(void 0!==p.inferredTypeSource);const n=p.inferredTypeSource;return{assignedType:null!==(t=null===(e=wa(n,(()=>{ka(n)})))||void 0===e?void 0:e.type)&&void 0!==t?t:$.UnknownType.create()}}));t&&(r=t)}}return r&&e&&p.typeAliasName&&Cr(r)&&(r=Bn(r,p.typeAliasName,p.node,!1,!1),m=!0),r&&u.isInPyTypedPackage&&!u.isStubFile&&(m||function(e,t,n){var a;const r=e.getDeclarations().filter((e=>1!==e.type||!e.isInferenceAllowedInPyTyped));if(r.length>1)return!1;if(1!==t.type)return!1;if(0===r.length)return!0;if((0,$.isTypeVar)(n))return!0;let s;const i=t.node.parent;i&&(3===i.nodeType?s=i:35===i.nodeType&&3===(null===(a=i.parent)||void 0===a?void 0:a.nodeType)&&(s=i.parent));if(!s)return!1;const o=Be(s.rightExpression).type;if((0,$.isClassInstance)(o)&&(0,W.isLiteralType)(o))return!0;if(38===s.rightExpression.nodeType&&!$.TypeBase.isAmbiguous(o))return!0;return!1}(t,a,r)&&(m=!0),m||(r=$.TypeBase.cloneForAmbiguousType(r))),r}}function qa(t,n,a){var r,s,i;return null===(i=(0,w.resolveAliasDeclaration)(e,t,{resolveLocalNames:n,allowExternallyHiddenAccess:null!==(r=null==a?void 0:a.allowExternallyHiddenAccess)&&void 0!==r&&r,skipFileNeededCheck:null!==(s=null==a?void 0:a.skipFileNeededCheck)&&void 0!==s&&s}))||void 0===i?void 0:i.declaration}function Wa(t,n,a){var r,s;return(0,w.resolveAliasDeclaration)(e,t,{resolveLocalNames:n,allowExternallyHiddenAccess:null!==(r=null==a?void 0:a.allowExternallyHiddenAccess)&&void 0!==r&&r,skipFileNeededCheck:null!==(s=null==a?void 0:a.skipFileNeededCheck)&&void 0!==s&&s})}function Ga(e){return Ka(e).type}function Ka(e,t,n=!1){let a;if(e.hasTypedDeclarations()){a=$a(e,t);const n=null==a?void 0:a.type;let r=!1;if(n&&((0,$.isFunction)(n)&&$.FunctionType.isPartiallyEvaluated(n)||(0,$.isClass)(n)&&$.ClassType.isPartiallyEvaluated(n))&&(r=!0),n||!a.isTypeAlias){const t=e.getTypedDeclarations();return{type:null!=n?n:$.UnknownType.create(),isIncomplete:r,includesVariableDecl:t.some((e=>1===e.type)),includesIllegalTypeAliasDecl:!t.every((e=>br(e))),includesSpeculativeResult:!1,isRecursiveDefinition:!n}}}return function(e,t,n=!1){let a=be.get(e.id);const r=t?t.id:void 0,s=`${void 0===r?".":r.toString()}${n?"*":""}`,i=null==a?void 0:a.get(s);if(i&&!i.isIncomplete)return i;const o=e.getDeclarations();let l;if(o.length>64){const e={type:$.UnknownType.create(),isIncomplete:!1,includesVariableDecl:!1,includesIllegalTypeAliasDecl:!o.every((e=>br(e))),includesSpeculativeResult:!1,isRecursiveDefinition:!1};return y(e),e}if(n)o.forEach(((e,t)=>{e.isInExceptSuite||(l=t)}));else if(o.length>1&&o.every((e=>8===e.type))){const e=o.filter((e=>8===e.type&&!e.isInExceptSuite));1===e.length&&(l=o.findIndex((t=>t===e[0])))}const p=[];let c=!1,d=!1,u=!1;o.forEach(((n,a)=>{var r,s,i;const o=null!==(r=qa(n,!0,{allowExternallyHiddenAccess:v.getFileInfo(n.node).isStubFile}))&&void 0!==r?r:n;if(br(o)||vr(o)||(d=!0),1===o.type){v.getFileInfo(o.node).isTypingStubFile||(c=!0)}if(void 0!==l&&l!==a)return;if(u)return;if((0,L.isEffectivelyClassVar)(e,!1)&&1===n.type&&n.isDefinedByMemberAccess)return;if(void 0!==t&&8!==n.type){if(F.getExecutionScopeNode(t)===F.getExecutionScopeNode(n.node))return}const m=vr(o),y=m||Gn(o);m&&(u=!0),y&&1===o.type&&3===(null===(i=null===(s=o.inferredTypeSource)||void 0===s?void 0:s.parent)||void 0===i?void 0:i.nodeType)&&Wn(o.inferredTypeSource.parent),p.push(o)}));const m=function(e,t,n){var a,r;const s=[];let i=!1,o=!1,l=!1;t.forEach((t=>{if(Oe(e,t))try{let n=Ba(e,t);if(ze(e)||(i=!0),n){if(1===t.type){let e=!1;1===t.type&&(t.isConstant||Tr(t))&&(e=!0),(0,$.isClassInstance)(n)&&$.ClassType.isEnumClass(n)&&(0,A.isDeclInEnumClass)(Ar,t)&&(e=!0),!$.TypeBase.isInstance(n)||e||vr(t)||(n=Ge(n))}s.push(n),Va(t.node)&&(l=!0)}else i=!0}catch(t){throw ze(e),t}else{if(6===t.type){const e=Yn(t.node);(null==e?void 0:e.decoratedType)&&s.push(e.decoratedType)}i=!0,o=!0}}));const p=be.get(e.id),c=(null!==(r=null===(a=null==p?void 0:p.get(n))||void 0===a?void 0:a.evaluationAttempts)&&void 0!==r?r:0)+1;let d;s.length>0?(i=o&&c<16,d=(0,$.combineTypes)(s)):d=$.UnboundType.create();return{type:d,isIncomplete:i,includesSpeculativeResult:l,evaluationAttempts:c}}(e,p,s);m.includesVariableDecl=c,m.includesIllegalTypeAliasDecl=d,m.includesSpeculativeResult||y(m);return m;function y(t){a||(a=new Map,be.set(e.id,a)),a.set(s,t)}}(e,t,n)}function $a(e,t){const n=e.getSynthesizedType();if(n)return{type:n};let a=e.getTypedDeclarations();if(0===a.length)return e.getDeclarations().length>64?{type:$.UnknownType.create()}:{type:void 0};if(t&&a.length>1){const e=a.filter((e=>{if(8!==e.type){if(F.getExecutionScopeNode(t)===F.getExecutionScopeNode(e.node)&&!dt(e.node,t,!1))return!1}return!0}));if(0===e.length)return{type:$.UnboundType.create()};a=e}let r=a.length-1;for(;r>=0;){const t=a[r],n=Ue(e,t);if(n)return{type:n};if(Me(e,t)<0&&Oe(e,t))try{const n=La(t);if(ze(e)||6===t.type)return n}catch(t){throw ze(e),t}r--}return{type:void 0}}function Ha(e){(0,$.isFunction)(e)?Za(e):(0,$.isOverloadedFunction)(e)&&e.overloads.forEach((e=>{Za(e)}))}function Za(e,t,n=!0){const a=$.FunctionType.getSpecializedReturnType(e,!1);return a&&!(0,$.isUnknown)(a)?nn(e,a,[]):n?Sr(e,t):$.UnknownType.create()}function Ya(e){const t=aa(e);return t?$.FunctionType.isAbstractMethod(t.functionType)?$.AnyType.create():$.FunctionType.isGenerator(t.functionType)?(0,W.getDeclaredGeneratorReturnType)(t.functionType):t.functionType.details.declaredReturnType:$.AnyType.create()}function Ja(e){return(0,$.isInstantiableClass)(e.classType)?(0,W.partiallySpecializeType)(Ga(e.symbol),e.classType,void 0,null!=re?re:$.UnknownType.create()):$.UnknownType.create()}function Qa(e,t,n,a){if((0,$.isInstantiableClass)(t.classType)){const r=Ka(t.symbol);if(r){if(Ha(r.type),t.isInstanceMember&&0!=(1024&a)){let t=!1;(0,W.doForEachSubtype)(r.type,(e=>{(0,$.isAnyOrUnknown)(e)||(0,$.isFunction)(e)||(0,$.isOverloadedFunction)(e)||(0,W.requiresSpecialization)(r.type,{ignoreSelf:!0,ignoreImplicitTypeArgs:!0})&&(t=!0)})),t&&e&&ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.genericInstanceVariableAccess(),e)}return{type:(0,W.partiallySpecializeType)(r.type,t.classType,n),isIncomplete:!!r.isIncomplete}}}else if((0,$.isAnyOrUnknown)(t.classType))return{type:t.classType,isIncomplete:!1}}function Xa(e,t,n,a,r,s,i,o){if($.ClassType.isHierarchyPartiallyEvaluated(e)||$.ClassType.isHierarchyPartiallyEvaluated(t))return!0;if($.ClassType.isTypedDictClass(t)){if($.ClassType.isTypedDictClass(e)&&!$.ClassType.isSameGenericClass(e,t))return!!(0,K.assignTypedDictToTypedDict)(Ar,e,t,n,a,s,i)&&($.ClassType.isFinal(e)!==$.ClassType.isFinal(t)?(null==n||n.addMessage(g.LocAddendum.typedDictFinalMismatch().format({sourceType:wr((0,W.convertToInstance)(t)),destType:wr((0,W.convertToInstance)(e))})),!1):0==(1&s)||(0,K.assignTypedDictToTypedDict)(Ar,t,e,void 0,void 0,s,i));if($.ClassType.isBuiltIn(e,"Mapping")){const e=(0,K.getTypedDictMappingEquivalent)(Ar,t);e&&he&&(0,$.isInstantiableClass)(he)&&de&&(0,$.isInstantiableClass)(de)&&(t=$.ClassType.cloneForSpecialization(he,[$.ClassType.cloneAsInstance(de),e],!0))}else if($.ClassType.isBuiltIn(e,["dict","MutableMapping"])){const e=(0,K.getTypedDictDictEquivalent)(Ar,t,i);e&&ue&&(0,$.isInstantiableClass)(ue)&&de&&(0,$.isInstantiableClass)(de)&&(t=$.ClassType.cloneForSpecialization(ue,[$.ClassType.cloneAsInstance(de),e],!0))}}if(e.includePromotions){const n=Z.get(e.details.fullName);if(n&&n.some((e=>t.details.mro.some((t=>(0,$.isClass)(t)&&e===t.details.fullName))))&&0==(1&s))return!0}const p=[],c=$.ClassType.isDerivedFrom(t,e,p);if($.ClassType.isProtocolClass(e)&&!c)return!!(0,O.assignClassToProtocol)(Ar,e,$.ClassType.cloneAsInstance(t),null==n?void 0:n.createAddendum(),a,r,s,i)||(null==n||n.addMessage(g.LocAddendum.protocolIncompatible().format({sourceType:wr((0,W.convertToInstance)(t)),destType:wr((0,W.convertToInstance)(e))})),!1);if((0==(1&s)||$.ClassType.isSameGenericClass(t,e))&&c&&((0,l.assert)(p.length>0),function(e,t,n,a,r,s,i,o){let l,p=t;if(Qn(e),0!=(1&i)){if(void 0!==t.literalValue!==(void 0!==e.literalValue))return!1}else if($.ClassType.isBuiltIn(e,"object"))return!0;for(let t=n.length-1;t>=0;t--){const a=n[t];if((0,$.isUnknown)(a))return!(0,W.isNoneTypeClass)(e);if(t<n.length-1){let e=p;$.ClassType.isBuiltIn(p,"NamedTuple")&&$.ClassType.isBuiltIn(a,"tuple")&&l&&(e=l),p=(0,W.specializeForBaseClass)(e,a)}if(0!==$.ClassType.getTypeParameters(a).length){if(!a.typeArguments)return!0;l=p}}if(0!=(1&i)){if(void 0!==t.literalValue!==(void 0!==e.literalValue))return!1}if(e.tupleTypeArguments&&p.tupleTypeArguments)return function(e,t,n,a,r,s,i){var o,l;const p=[...null!==(o=e.tupleTypeArguments)&&void 0!==o?o:[]],c=[...null!==(l=t.tupleTypeArguments)&&void 0!==l?l:[]];if(!function(e,t,n){const a=e.findIndex((e=>e.isUnbounded||(0,$.isVariadicTypeVar)(e.type))),r=t.findIndex((e=>e.isUnbounded)),s=t.findIndex((e=>(0,$.isVariadicTypeVar)(e.type)));if(r>=0)if((0,$.isAnyOrUnknown)(t[r].type)){const n=t.length>0?t[r].type:$.AnyType.create();for(;t.length<e.length;)t.splice(r,0,{type:n,isUnbounded:!0});t.length>e.length&&t.splice(r,1)}else if(a<0)return!1;if(a>=0&&e[a].isUnbounded&&(0,$.isAnyOrUnknown)(e[a].type))for(;e.length<t.length;)e.splice(a,0,e[a]);for(;t.length>e.length&&t[t.length-1].isOptional;)t.splice(t.length-1,1);for(;e.length>t.length&&e[e.length-1].isOptional;)e.splice(e.length-1,1);if(0!=(2&n)){const n=e.length-t.length+1;if(s>=0&&n>=0){if(!(1===n&&(0,$.isVariadicTypeVar)(e[s].type))&&le&&(0,$.isInstantiableClass)(le)){const t=zt(e.splice(s,n).map((e=>({type:e.type,isUnbounded:e.isUnbounded,isOptional:e.isOptional}))),!0);e.splice(s,0,{type:t,isUnbounded:!1})}}}else{const n=t.length-e.length+1;if(a>=0&&n>=0)if((0,$.isVariadicTypeVar)(e[a].type)){if(le&&(0,$.isInstantiableClass)(le)){const e=t.splice(a,n);let r;r=1===e.length&&(0,$.isUnpackedVariadicTypeVar)(e[0].type)?e[0].type:zt(e.map((e=>({type:e.type,isUnbounded:e.isUnbounded,isOptional:e.isOptional}))),!0),t.splice(a,0,{type:r,isUnbounded:!1})}}else if(r<0||r>=a&&r<a+n){const e=t.splice(a,n).map((e=>(0,$.isTypeVar)(e.type)&&(0,$.isUnpackedVariadicTypeVar)(e.type)&&!e.type.isVariadicInUnion?$.TypeVarType.cloneForUnpacked(e.type,!0):e.type));t.splice(a,0,{type:e.length>0?(0,$.combineTypes)(e):$.AnyType.create(),isUnbounded:!1})}}return e.length===t.length}(p,c,s)){const e=p.some((e=>e.isUnbounded||(0,$.isVariadicTypeVar)(e.type)));return c.some((e=>e.isUnbounded||(0,$.isVariadicTypeVar)(e.type)))?e?null==n||n.addMessage(g.LocAddendum.tupleSizeIndeterminateSrcDest().format({expected:p.length-1})):null==n||n.addMessage(g.LocAddendum.tupleSizeIndeterminateSrc().format({expected:p.length})):e?null==n||n.addMessage(g.LocAddendum.tupleSizeMismatchIndeterminateDest().format({expected:p.length-1,received:c.length})):null==n||n.addMessage(g.LocAddendum.tupleSizeMismatch().format({expected:p.length,received:c.length})),!1}for(let e=0;e<c.length;e++){const t=null==n?void 0:n.createAddendum();if(!nr(p[e].type,c[e].type,null==t?void 0:t.createAddendum(),a,r,s,i))return t&&t.addMessage(g.LocAddendum.tupleEntryTypeMismatch().format({entry:e+1})),!1}return!0}(e,p,a,r,s,i,o);if(e.typeArguments)return tr(e,p,0==(1&i)?a:void 0,r,s,i,o);if(r&&p.typeArguments&&!r.isLocked()){const t=p.typeArguments;for(let n=0;n<e.details.typeParameters.length;n++){const a=n<t.length?t[n]:$.UnknownType.create(),s=e.details.typeParameters[n],i=$.TypeVarType.getVariance(s);(0,C.updateTypeVarType)(Ar,r,s,4!==i?a:void 0,3!==i?a:void 0,p.tupleTypeArguments,!0)}}return!0}(e,t,p,null==n?void 0:n.createAddendum(),a,r,s,i)))return!0;if($.ClassType.isBuiltIn(e,"object")&&0==(1&s))return!0;const d=o?$.ClassType.cloneAsInstance(e):e,u=o?$.ClassType.cloneAsInstance(t):t;let m=wr(d),y=wr(u);if(m===y&&e.details.fullName&&t.details.fullName&&(m=e.details.fullName,y=t.details.fullName),null==n||n.addMessage(g.LocAddendum.typeIncompatible().format({sourceType:y,destType:m})),$.ClassType.isBuiltIn(e,"bytes")){const a=Z.get(e.details.fullName);a&&a.some((e=>e===t.details.fullName))&&(null==n||n.addMessage(g.LocAddendum.bytesTypePromotions()))}return!1}function er(e,t,n,a=!0,r=0){(0,l.assert)($.ClassType.isSameGenericClass(e,t)),(0,l.assert)(e.details.typeParameters.length>0);const s=new G.TypeVarContext;let i=!0;try{return X.push({class:e,assumedVariance:n}),$.ClassType.getSymbolTable(e).forEach(((n,a)=>{if(!i||n.isIgnoredForProtocolMatch())return;if("__new__"===a||"__init__"===a)return;const o=(0,W.lookUpClassMember)(t,a);(0,l.assert)(void 0!==o);let p=Ga(n);const c=Ja(o);if(p=(0,W.partiallySpecializeType)(p,e),(0,$.isClassInstance)(p)&&$.ClassType.isPropertyClass(p)&&(0,$.isClassInstance)(c)&&$.ClassType.isPropertyClass(c))(0,M.assignProperty)(Ar,$.ClassType.cloneAsInstantiable(p),$.ClassType.cloneAsInstantiable(c),e,t,void 0,s,void 0,r)||(i=!1);else{const t=n.getDeclarations()[0];let o=0;1!==(null==t?void 0:t.type)||Tr(t)||$.ClassType.isFrozenDataClass(e)||(0,R.isPrivateOrProtectedName)(a)||(o|=1),nr(p,c,void 0,s,void 0,65536|o,r)||(i=!1)}})),i?(e.details.baseClasses.forEach((s=>{if((0,$.isInstantiableClass)(s)&&!$.ClassType.isBuiltIn(s,"object")&&!$.ClassType.isBuiltIn(s,"Protocol")&&!$.ClassType.isBuiltIn(s,"Generic")&&s.details.typeParameters.length>0){const o=(0,W.specializeForBaseClass)(e,s),l=(0,W.specializeForBaseClass)(t,s);a||o.details.typeParameters.forEach(((e,t)=>{if(!e.details.isParamSpec&&!e.details.isVariadic&&!e.details.isSynthesized&&l.typeArguments&&t<l.typeArguments.length&&o.typeArguments&&t<o.typeArguments.length){const n=e.details.declaredVariance;(0,$.isTypeVar)(l.typeArguments[t])?2!==n&&4!==n||(i=!1):(0,$.isTypeVar)(o.typeArguments[t])&&(2!==n&&3!==n||(i=!1))}})),i&&!er(o,l,n,a,r)&&(i=!1)}})),i):!1}finally{X.pop()}}function tr(e,t,n,a,r,s,i){var o,c,d;(0,l.assert)($.ClassType.isSameGenericClass(e,t)),Qn(e);const u=$.ClassType.getTypeParameters(e);let m,y;const h=X.find((t=>$.ClassType.isSameGenericClass(t.class,e))),f=null==h?void 0:h.assumedVariance;if(!e.typeArguments||!t.typeArguments)return!0;$.ClassType.isTupleClass(e)?(m=null!==(c=null===(o=e.tupleTypeArguments)||void 0===o?void 0:o.map((e=>e.type)))&&void 0!==c?c:[],y=null===(d=t.tupleTypeArguments)||void 0===d?void 0:d.map((e=>e.type))):(m=e.typeArguments,y=t.typeArguments);let T=!0;return null==y||y.forEach(((o,l)=>{const c=l>=m.length?m.length-1:l,d=c>=0?m[c]:$.UnknownType.create(),y=c<u.length?u[c]:void 0,h=new p.DiagnosticAddendum,v=null!=f?f:y?$.TypeVarType.getVariance(y):3;let b,_,C=!0;if(3===v?(b=256|s,_=g.LocAddendum.typeVarIsCovariant):4===v?(b=2^s|256,_=g.LocAddendum.typeVarIsContravariant):(b=257|s,_=g.LocAddendum.typeVarIsInvariant,C=!1),!nr(4===v?o:d,4===v?d:o,h,4===v?r:a,4===v?a:r,b,i)&&!$.ClassType.isPseudoGenericClass(e)){if(n)if(y){const a=n.createAddendum();a.addMessage(_().format({name:$.TypeVarType.getReadableName(y),...kr(o,d)})),C&&a.addAddendum(h),T&&$.ClassType.isSameGenericClass(e,t)&&($.ClassType.isBuiltIn(e,"dict")&&1===l?a.addMessage(g.LocAddendum.invariantSuggestionDict()):$.ClassType.isBuiltIn(e,"list")?a.addMessage(g.LocAddendum.invariantSuggestionList()):$.ClassType.isBuiltIn(e,"set")&&a.addMessage(g.LocAddendum.invariantSuggestionSet()))}else n.addAddendum(h);T=!1}})),T}function nr(e,t,n,a,r,s=0,i=0){var p,c;if(e===t&&!(0,W.requiresSpecialization)(e))return!0;if(t.specialForm){let e=!1;0!=(32768&s)&&$.ClassType.isBuiltIn(t.specialForm,["Callable","UnionType","Generic"])&&(e=!0),e||(t=t.specialForm)}if(i>$.maxTypeRecursionCount)return!0;if(i++,(0,$.isTypeVar)(e)&&e.details.recursiveTypeAliasScopeId&&(0,$.isTypeVar)(t)&&t.details.recursiveTypeAliasScopeId){if((null===(p=e.typeAliasInfo)||void 0===p?void 0:p.typeArguments)&&(null===(c=t.typeAliasInfo)||void 0===c?void 0:c.typeArguments)&&e.details.recursiveTypeAliasScopeId===t.details.recursiveTypeAliasScopeId){let o=!0;const l=t.typeAliasInfo.typeArguments;return e.typeAliasInfo.typeArguments.forEach(((e,t)=>{nr(e,t<l.length?l[t]:$.UnknownType.create(),n,a,r,s,i)||(o=!1)})),o}if(0!=(4&s))return!0;s|=4}const d=(0,W.transformPossibleRecursiveTypeAlias)(e),u=(0,W.transformPossibleRecursiveTypeAlias)(t);if((d!==e&&(0,$.isUnion)(d)||u!==t&&(0,$.isUnion)(u))&&i>10)return!((0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"str")&&(0,$.isUnion)(d))||d.subtypes.some((e=>(0,$.isClassInstance)(e)&&$.ClassType.isBuiltIn(e,["object","str"])));if(e=d,t=u,(0,$.isUnbound)(e)||(0,$.isUnbound)(t))return!0;0!=(16&s)&&(t=Ct(t));const m=s;if(s&=-129,(0,$.isTypeVar)(e)){if((0,W.isTypeVarSame)(e,t))return!(e.scopeId&&(null==a?void 0:a.hasSolveForScope(e.scopeId))&&!a.getPrimarySignature().getTypeVar(e))||(0,C.assignTypeToTypeVar)(Ar,e,t,n,a,s,i);if(function(e,t,n){return!(0,$.findSubtype)(t,(t=>{var a;if((0,$.isTypeSame)(e,t,{ignorePseudoGeneric:!0},n))return!1;if((0,W.isIncompleteUnknown)(t))return!1;const r=$.TypeVarType.getNameWithScope(e),s=(null!==(a=(0,W.getTypeCondition)(t))&&void 0!==a?a:[]).filter((e=>e.typeVar.nameWithScope===r));return 0===s.length||!s.some((a=>a.typeVar.nameWithScope===$.TypeVarType.getNameWithScope(e)&&(e.details.boundType?((0,l.assert)(0===a.constraintIndex,"Expected constraint for bound TypeVar to have index of 0"),nr(e.details.boundType,t,void 0,void 0,void 0,0,n)):!(e.details.constraints.length>0)||((0,l.assert)(a.constraintIndex<e.details.constraints.length,"Constraint for constrained TypeVar is out of bounds"),nr(e.details.constraints[a.constraintIndex],t,void 0,void 0,void 0,0,n)))))}))}(e,t,i))return!0;const o=e;if($.TypeBase.isInstantiable(e)===$.TypeBase.isInstantiable(t)&&t.condition&&t.condition.some((e=>0===e.typeVar.details.constraints.length&&e.typeVar.nameWithScope===o.nameWithScope)))return!0;if((0,$.isUnion)(t)){const n=(0,$.removeFromUnion)(t,(e=>(0,$.isAnyOrUnknown)(e)));if((0,$.isTypeSame)(e,n))return!0}if((0,$.isTypeVar)(t)&&t.details.isSynthesizedSelf&&t.details.boundType&&e.details.isSynthesizedSelf&&e.details.boundType&&$.TypeBase.isInstance(t)===$.TypeBase.isInstance(e))return 0==(2&s)&&a&&(0,C.assignTypeToTypeVar)(Ar,e,t,n,a,m,i),!0;if((0,$.isVariadicTypeVar)(e)&&(0,$.isClassInstance)(t)&&(0,W.isTupleClass)(t)&&t.tupleTypeArguments&&1===t.tupleTypeArguments.length&&(0,$.isTypeSame)(e,t.tupleTypeArguments[0].type,{},i))return!0;if(0==(2&s)||!(0,$.isTypeVar)(t)){const o=0==(2&s)?a:r;return!!(0,C.assignTypeToTypeVar)(Ar,e,t,n,null!=o?o:new G.TypeVarContext,m,i)&&(!(0,$.isAnyOrUnknown)(t)||0==(16&s))}}if((0,$.isTypeVar)(t)){if(0!=(2&s)){if(r&&r.hasSolveForScope((0,W.getTypeVarScopeId)(t))){if((0,C.assignTypeToTypeVar)(Ar,t,e,n,r,m,i))return!0;let a=!1;return(0,$.isUnion)(e)&&(0,W.doForEachSubtype)(e,(e=>{(0,C.assignTypeToTypeVar)(Ar,t,e,n,r,m,i)&&(a=!0)})),a}return nr(Ct(e),Ct(t),n,void 0,void 0,m,i)}if(0!=(1&s)){if((0,$.isAnyOrUnknown)(e))return!0;if((0,$.isParamSpec)(t)&&(0,$.isFunction)(e)&&$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)&&e.details.parameters.length<=2)return!0;if((0,$.isUnpackedVariadicTypeVar)(t)&&(0,$.isClassInstance)(e)&&(0,$.isUnpackedClass)(e)&&e.tupleTypeArguments&&1===e.tupleTypeArguments.length&&e.tupleTypeArguments[0].isUnbounded&&(0,$.isAnyOrUnknown)(e.tupleTypeArguments[0].type))return!0;if(!(0,$.isUnion)(e))return null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1}}if((0,$.isAnyOrUnknown)(e))return!0;if((0,$.isAnyOrUnknown)(t)&&!t.specialForm){const n=0==(2&s)?a:r;if(n){const a=(0,W.isEllipsisType)(t)?$.AnyType.create():t;(0,W.setTypeArgumentsRecursive)(e,a,n,i)}if(0==(16&s))return!0}if((0,$.isNever)(t)){if(0!=(1&s))return!!(0,$.isNever)(e)||(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1);const o=0==(2&s)?a:r;return o&&(0,W.setTypeArgumentsRecursive)(e,$.UnknownType.create(),o,i),!0}if((0,$.isUnion)(e)){if((0,$.isUnion)(t))return ar(e,t,void 0,a,r,m,i);const n=null==a?void 0:a.clone(),s=null==r?void 0:r.clone();if(or(e,t,void 0,n,s,m,i))return a&&n&&a.copyFromClone(n),r&&s&&r.copyFromClone(s),!0}const y=Ct(t);if((0,$.isUnion)(y))return ar(e,y,n,a,r,m,i);if((0,$.isUnion)(e))return or(e,t,n,a,r,m,i);if((0,W.isNoneInstance)(e)){if((0,W.isNoneInstance)(t))return!0;if((0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"NoneType"))return!0}if((0,W.isNoneTypeClass)(e)){if((0,W.isNoneTypeClass)(t))return!0;if((0,$.isInstantiableClass)(t)&&$.ClassType.isBuiltIn(t,"NoneType"))return!0}if((0,$.isClassInstance)(y)&&$.ClassType.isBuiltIn(y,"type")){const o=y.typeArguments;let l;if(l=o&&o.length>=1?o[0]:$.UnknownType.create(),(0,$.isAnyOrUnknown)(l)){if((0,W.isEffectivelyInstantiable)(e))return!0}else if((0,$.isClassInstance)(l)||(0,$.isTypeVar)(l))return!!nr(e,(0,W.convertToInstantiable)(l),null==n?void 0:n.createAddendum(),a,r,s,i)||(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1)}if((0,$.isInstantiableClass)(e)){if((0,$.isInstantiableClass)(y))return $.ClassType.isProtocolClass(e)&&0==(16384&s)&&$.ClassType.isProtocolClass(y)&&(0,$.isInstantiableClass)(t)&&!t.includeSubclasses?(null==n||n.addMessage(g.LocAddendum.protocolSourceIsNotConcrete().format({sourceType:wr((0,W.convertToInstance)(t)),destType:wr(e)})),!1):!(rr(y,s)||!Xa(e,y,n,a,r,s,i,!1))||(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1);if((0,$.isClassInstance)(y)&&(0,W.isMetaclassInstance)(y)){const o=e.details.effectiveMetaclass;if(o&&(0,$.isInstantiableClass)(o))return!!Xa($.ClassType.cloneAsInstance(o),y,n,a,r,s,i,!1)||(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1)}}if((0,$.isClassInstance)(e)){if($.ClassType.isBuiltIn(e,"type")){if((0,$.isInstantiableClass)(t)&&rr(t,s))return!1;if((0,$.isAnyOrUnknown)(t)&&0!=(16&s))return!1;const o=e.typeArguments;if(o&&o.length>=1&&$.TypeBase.isInstance(o[0])&&$.TypeBase.isInstantiable(t))return nr(o[0],(0,W.convertToInstance)(t),n,a,r,s,i);if($.TypeBase.isInstantiable(t)){return!((0,$.isClass)(t)&&void 0!==t.literalValue)}}else if($.ClassType.isBuiltIn(e,["TypeGuard","TypeIs"])&&0!=(128&m)&&(0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"bool"))return!0;let o=Ct(t);if((0,$.isClass)(o)&&$.TypeBase.isInstance(o)){if(void 0!==e.literalValue){if(void 0===o.literalValue||!$.ClassType.isLiteralValueSame(o,e))return null==n||n.addMessage(g.LocAddendum.literalAssignmentMismatch().format({sourceType:wr(t),destType:wr(e)})),!1}if($.ClassType.isBuiltIn(e,"LiteralString")){if($.ClassType.isBuiltIn(o,"str")&&void 0!==o.literalValue)return 0==(1&s);if($.ClassType.isBuiltIn(o,"LiteralString"))return!0}else $.ClassType.isBuiltIn(o,"LiteralString")&&de&&(0,$.isInstantiableClass)(de)&&0==(1&s)&&(o=$.ClassType.cloneAsInstance(de));return!!Xa($.ClassType.cloneAsInstantiable(e),$.ClassType.cloneAsInstantiable(o),n,a,r,s,i,!0)}if((0,$.isFunction)(o)||(0,$.isOverloadedFunction)(o)){const t=lr(e,i);if(t)return nr(t,o,n,a,r,s,i);if(oe&&(0,$.isClassInstance)(oe))return nr(e,oe,n,a,r,s,i)}else if((0,$.isModule)(o)){if($.ClassType.isBuiltIn(e,"ModuleType"))return!0;if($.ClassType.isProtocolClass(e))return(0,O.assignModuleToProtocol)(Ar,$.ClassType.cloneAsInstantiable(e),o,n,a,s,i)}else if((0,$.isInstantiableClass)(o)){const t=lr(e,i);if(t)return nr(t,o,n,a,r,s,i);if($.ClassType.isProtocolClass(e))return(0,O.assignClassToProtocol)(Ar,$.ClassType.cloneAsInstantiable(e),o,n,a,r,s,i);const l=o.details.effectiveMetaclass;if(l)return!!(0,$.isAnyOrUnknown)(l)||Xa($.ClassType.cloneAsInstantiable(e),l,n,a,r,s,i,!1)}else{if((0,$.isAnyOrUnknown)(o)&&!o.specialForm)return 0==(16&s);if((0,$.isUnion)(o))return nr(e,o,n,a,r,s,i)}}if((0,$.isFunction)(e)){let p=Ct(t);if((0,$.isClassInstance)(p)){const e=Je(p,"__call__",void 0,void 0,i);e&&(p=(0,W.removeParamSpecVariadicsFromSignature)(e))}if((0,$.isInstantiableClass)(p)&&void 0===p.literalValue){const o=(0,I.createFunctionFromConstructor)(Ar,p,(0,$.isTypeVar)(t)?(0,W.convertToInstance)(t):void 0,i);if(o&&(p=o,(0,$.isUnion)(p)))return nr(e,p,n,a,r,s,i)}if((0,$.isAnyOrUnknown)(p))return 0==(16&s);if((0,$.isOverloadedFunction)(p)){const t=$.OverloadedFunctionType.getOverloads(p),l=[],c=[],d=[];return t.forEach((t=>{var n;const p=null!==(n=(0,W.getTypeVarScopeId)(t))&&void 0!==n?n:"",u=null==a?void 0:a.cloneWithSignatureSource(p),m=null==r?void 0:r.cloneWithSignatureSource(p);nr(e,t,void 0,u,m,s,i)&&(l.push(t),u&&(0,o.appendArray)(c,u.getSignatureContexts()),m&&(0,o.appendArray)(d,m.getSignatureContexts()))})),0===l.length?(null==n||n.addMessage(g.LocAddendum.noOverloadAssignable().format({type:wr(e)})),!1):(a&&a.copySignatureContexts(c),r&&r.copySignatureContexts(d),!0)}if((0,$.isFunction)(p)&&function(e,t,n,a,r,s,i){var p,c,d,u,m,y,h,f;let T=!0;const v=0==(64&s),b=0!=(2&s);s&=-65,e=(0,W.removeParamSpecVariadicsFromFunction)(e),t=(0,W.removeParamSpecVariadicsFromFunction)(t);const _=(0,D.getParameterListDetails)(e),C=(0,D.getParameterListDetails)(t);!function(e,t){var n;if(void 0===t.argsIndex)return;if(!(0,$.isUnpacked)(t.params[t.argsIndex].type))return;if(e.params.length<t.argsIndex)return;let a=e.params.findIndex(((e,n)=>((0,l.assert)(void 0!==t.argsIndex),n>=t.argsIndex&&e.source===D.ParameterSource.KeywordOnly)));a<0&&(a=e.params.length);const r=null!==(n=t.firstKeywordOnlyIndex)&&void 0!==n?n:t.params.length,s=r-t.argsIndex-1,i=e.params.slice(t.argsIndex,a-s),p=[];if(i.forEach((e=>{1===e.param.category?(0,$.isUnpackedVariadicTypeVar)(e.type)?p.push({type:e.type,isUnbounded:!1}):(0,$.isUnpackedClass)(e.type)&&e.type.tupleTypeArguments?(0,o.appendArray)(p,e.type.tupleTypeArguments):p.push({type:e.type,isUnbounded:!0}):p.push({type:e.type,isUnbounded:!1,isOptional:e.param.hasDefault})})),1!==p.length||!(0,$.isVariadicTypeVar)(p[0].type)){const n=zt(p,!0);e.params=[...e.params.slice(0,t.argsIndex),{param:{category:1,name:"_arg_combined",isNameSynthesized:!0,hasDeclaredType:!0,type:n},type:n,index:-1,source:D.ParameterSource.PositionOnly},...e.params.slice(t.argsIndex+i.length,e.params.length)];const a=e.params.findIndex((e=>1===e.param.category));e.argsIndex=a>=0?a:void 0;const r=e.params.findIndex((e=>2===e.param.category));e.kwargsIndex=r>=0?r:void 0;const s=e.params.findIndex((e=>e.source===D.ParameterSource.KeywordOnly));e.firstKeywordOnlyIndex=s>=0?s:void 0,e.positionOnlyParamCount=Math.max(0,e.params.findIndex((e=>e.source!==D.ParameterSource.PositionOnly||0!==e.param.category||e.param.hasDefault)))}}(b?_:C,b?C:_);const I=b?!!t.details.paramSpec:!!e.details.paramSpec,k=null!==(p=_.firstKeywordOnlyIndex)&&void 0!==p?p:_.params.length,w=null!==(c=C.firstKeywordOnlyIndex)&&void 0!==c?c:C.params.length,S=Math.min(k,w);for(let o=0;o<S;o++){if(0===o&&e.details.methodClass&&0!=(65536&s)&&($.FunctionType.isInstanceMethod(e)||$.FunctionType.isClassMethod(e)))continue;if(o===_.argsIndex)continue;const l=_.params[o],p=C.params[o],c=p.type,m=l.type,y=null!==(d=l.param.name)&&void 0!==d?d:"",h=null!==(u=p.param.name)&&void 0!==u?u:"";if(y){l.source===D.ParameterSource.PositionOnly||1===l.param.category||1===p.param.category||(p.source===D.ParameterSource.PositionOnly?(null==n||n.createAddendum().addMessage(g.LocAddendum.functionParamPositionOnly().format({name:y})),T=!1):y!==h&&(null==n||n.createAddendum().addMessage(g.LocAddendum.functionParamName().format({srcName:h,destName:y})),T=!1))}l.param.hasDefault&&!p.param.hasDefault&&o!==C.argsIndex&&(null==n||n.createAddendum().addMessage(g.LocAddendum.functionParamDefaultMissing().format({name:h})),T=!1),0===o&&"__init__"===t.details.name&&$.FunctionType.isInstanceMethod(t)&&"__init__"===e.details.name&&$.FunctionType.isInstanceMethod(e)&&$.FunctionType.isOverloaded(e)&&l.param.hasDeclaredType||(pr(m,c,o,null==n?void 0:n.createAddendum(),a,r,s,i)||0!=(512&s)&&(0,$.isTypeVar)(c)&&c.details.isSynthesized||(T=!1))}!$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)&&_.firstPositionOrKeywordIndex<C.positionOnlyParamCount&&!I&&(null==n||n.createAddendum().addMessage(g.LocAddendum.argsPositionOnly().format({expected:C.positionOnlyParamCount,received:_.firstPositionOrKeywordIndex})),T=!1);if(k<w){if(!I){const e=C.params.filter((e=>!!e.param.name&&!e.param.hasDefault&&0===e.param.category)).length;if(void 0===_.argsIndex)k<e&&_.firstPositionOrKeywordIndex>0&&_.firstPositionOrKeywordIndex<w&&(null==n||n.createAddendum().addMessage(g.LocAddendum.functionTooFewParams().format({expected:e,received:k})),T=!1);else{const e=_.params[_.argsIndex].type;if(!(0,$.isAnyOrUnknown)(e))for(let t=k;t<w;t++){pr(e,C.params[t].type,t,null==n?void 0:n.createAddendum(),a,r,s,i)||(T=!1)}}}}else if(w<k)if(void 0!==C.argsIndex){const e=C.params[C.argsIndex].type;for(let t=w;t<k;t++){if(t===C.argsIndex)continue;const o=_.params[t].type;(0,$.isVariadicTypeVar)(o)&&!(0,$.isVariadicTypeVar)(e)?(null==n||n.addMessage(g.LocAddendum.typeVarTupleRequiresKnownLength()),T=!1):(pr(o,e,t,null==n?void 0:n.createAddendum(),a,r,s,i)||(T=!1),_.params[t].source!==D.ParameterSource.PositionOnly&&void 0===C.kwargsIndex&&(null==n||n.addMessage(g.LocAddendum.namedParamMissingInSource().format({name:null!==(m=_.params[t].param.name)&&void 0!==m?m:""})),T=!1))}}else if(!C.paramSpec){let e=k;void 0!==_.argsIndex&&_.argsIndex<k&&e--,w<e&&(null==n||n.addMessage(g.LocAddendum.functionTooManyParams().format({expected:w,received:k})),T=!1)}if(void 0!==C.argsIndex&&void 0!==_.argsIndex&&!$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)){let e=_.params[_.argsIndex].type,t=C.params[C.argsIndex].type;(0,$.isUnpacked)(e)||(e=zt([{type:e,isUnbounded:!0}],!0)),(0,$.isUnpacked)(t)||(t=zt([{type:t,isUnbounded:!0}],!0)),pr(e,t,_.params[_.argsIndex].index,null==n?void 0:n.createAddendum(),a,r,s,i)||(T=!1)}$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)||void 0!==C.argsIndex||void 0!==t.details.paramSpec||void 0===_.argsIndex||_.hasUnpackedVariadicTypeVar||(null==n||n.createAddendum().addMessage(g.LocAddendum.argsParamMissing().format({paramName:null!==(y=_.params[_.argsIndex].param.name)&&void 0!==y?y:""})),T=!1);if(!I){const o=new Map;void 0!==_.firstKeywordOnlyIndex&&_.params.forEach(((e,t)=>{t>=_.firstKeywordOnlyIndex&&e.param.name&&0===e.param.category&&o.set(e.param.name,e)}));let l=void 0!==C.firstKeywordOnlyIndex?C.firstKeywordOnlyIndex:C.params.length;k<w&&void 0===_.argsIndex&&(l=k),l>=0&&C.params.forEach(((e,t)=>{if(t>=l&&e.param.name&&0===e.param.category&&e.source!==D.ParameterSource.PositionOnly){const t=o.get(e.param.name),l=null==n?void 0:n.createAddendum(),p=e.type;if(t){const c=t.type,d=a?(0,W.applySolvedTypeVars)(c,a):c;pr(t.type,p,void 0,null==l?void 0:l.createAddendum(),a,r,s,i)||(l&&l.addMessage(g.LocAddendum.namedParamTypeMismatch().format({name:e.param.name,sourceType:wr(d),destType:wr(p)})),T=!1),t.param.hasDefault&&!e.param.hasDefault&&(null==n||n.createAddendum().addMessage(g.LocAddendum.functionParamDefaultMissing().format({name:e.param.name})),T=!1),o.delete(e.param.name)}else void 0!==_.kwargsIndex||e.param.hasDefault?void 0!==_.kwargsIndex&&(pr(_.params[_.kwargsIndex].type,p,_.params[_.kwargsIndex].index,null==n?void 0:n.createAddendum(),a,r,s,i)||(T=!1)):(l&&void 0!==C.firstKeywordOnlyIndex&&l.addMessage(g.LocAddendum.namedParamMissingInDest().format({name:e.param.name})),T=!1)}})),o.forEach(((e,t)=>{void 0!==C.kwargsIndex&&e.param.name?(pr(e.param.type,C.params[C.kwargsIndex].type,e.index,null==n?void 0:n.createAddendum(),a,r,s,i)||(T=!1),o.delete(t)):(null==n||n.createAddendum().addMessage(g.LocAddendum.namedParamMissingInSource().format({name:t})),T=!1)})),void 0!==C.kwargsIndex&&void 0!==_.kwargsIndex&&(pr(_.params[_.kwargsIndex].type,C.params[C.kwargsIndex].type,_.params[_.kwargsIndex].index,null==n?void 0:n.createAddendum(),a,r,s,i)||(T=!1)),$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)||void 0!==C.kwargsIndex||void 0!==t.details.paramSpec||void 0===_.kwargsIndex||(null==n||n.createAddendum().addMessage(g.LocAddendum.kwargsParamMissing().format({paramName:_.params[_.kwargsIndex].param.name})),T=!1)}I&&(null===(h=t.details.paramSpec)||void 0===h?void 0:h.nameWithScope)===(null===(f=e.details.paramSpec)||void 0===f?void 0:f.nameWithScope)&&C.params.length!==_.params.length&&(T=!1);const A=b?a:r,x=A.getPrimarySignature();if(x.getTypeVars().forEach((e=>{nr(e.typeVar,x.getTypeVarType(e.typeVar),void 0,a,r,0,i)})),I){const n=b?t:e,i=b?e:t;if(n.details.paramSpec){const e=n.details.parameters.filter((e=>!!e.name&&(0!==e.category||!(0,$.isParamSpec)(e.type)))).length;let t=0;const o=[];i.details.parameters.forEach(((n,a)=>{t<e?n.name&&t++:(0,$.isPositionOnlySeparator)(n)&&0===o.length||o.push({category:n.category,name:n.name,isNameSynthesized:n.isNameSynthesized,hasDefault:n.hasDefault,hasDeclaredType:n.hasDeclaredType,defaultValueExpression:n.defaultValueExpression,type:$.FunctionType.getEffectiveParameterType(i,a)})}));const l=i.details.paramSpec,p=n.details.paramSpec;if(o.length>0||!l||!(0,$.isTypeSame)(l,p,{ignoreTypeFlags:!0})){const e=$.FunctionType.createInstance("","","",64|i.details.flags,i.details.docString);e.details.deprecatedMessage=i.details.deprecatedMessage,e.details.typeVarScopeId=i.details.typeVarScopeId,e.details.constructorTypeVarScopeId=i.details.constructorTypeVarScopeId,e.details.methodClass=i.details.methodClass,o.forEach((t=>{$.FunctionType.addParameter(e,t)})),e.details.paramSpec=l?(0,W.convertToInstance)(l):void 0,$.FunctionType.addHigherOrderTypeVarScopeIds(e,i.details.higherOrderTypeVarScopeIds),nr(p,e,void 0,a,r,s)||(o.length>0||!l||!nr((0,W.convertToInstance)(p),(0,W.convertToInstance)(l),void 0,a,r,s))&&(T=!1)}}}if(v){const o=Za(e);if(!(0,$.isAnyOrUnknown)(o)){const e=(0,W.applySolvedTypeVars)(Za(t),r),l=null==n?void 0:n.createAddendum();let p=!1,c=s;t.details.declaredReturnType&&(0,W.containsLiteralType)(t.details.declaredReturnType,!0)&&(c|=256),(nr(o,e,null==l?void 0:l.createAddendum(),a,r,c,i)||(0,$.isClassInstance)(e)&&$.ClassType.isBuiltIn(e,["TypeGuard","TypeIs"])&&pe&&(0,$.isInstantiableClass)(pe)&&nr(o,$.ClassType.cloneAsInstance(pe),null==l?void 0:l.createAddendum(),a,r,s,i))&&(p=!0),p||(l&&l.addMessage(g.LocAddendum.functionReturnTypeMismatch().format({sourceType:wr(e),destType:wr(o)})),T=!1)}}return(0,W.applySourceContextTypeVars)(a,r),T}(e,p,null==n?void 0:n.createAddendum(),null!=a?a:new G.TypeVarContext((0,W.getTypeVarScopeId)(e)),null!=r?r:new G.TypeVarContext((0,W.getTypeVarScopeIds)(p)),s,i))return!0}if((0,$.isOverloadedFunction)(e)){const o=null==n?void 0:n.createAddendum(),l=$.OverloadedFunctionType.getOverloads(e);if((0,$.isOverloadedFunction)(t)){const e=$.OverloadedFunctionType.getOverloads(t);if(l.length===e.length&&l.every(((t,n)=>nr(t,e[n],void 0,null!=a?a:new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),r,s,i))))return!0}return!!l.every((e=>{a&&a.addSolveForScope((0,W.getTypeVarScopeId)(e));return nr(e,t,null==o?void 0:o.createAddendum(),null!=a?a:new G.TypeVarContext((0,W.getTypeVarScopeId)(e)),r,s,i)}))||(o&&o.addMessage(g.LocAddendum.overloadNotAssignable().format({name:e.overloads[0].details.name})),!1)}return!!((0,$.isClass)(e)&&$.ClassType.isBuiltIn(e,"object")&&((0,$.isInstantiableClass)(e)&&$.TypeBase.isInstantiable(t)||(0,$.isClassInstance)(e))&&0==(1&s))||((0,W.isNoneInstance)(t)&&(0,$.isClassInstance)(e)&&$.ClassType.isProtocolClass(e)&&te&&(0,$.isInstantiableClass)(te)?(0,O.assignClassToProtocol)(Ar,$.ClassType.cloneAsInstantiable(e),$.ClassType.cloneAsInstance(te),n,a,r,s,i):(0,W.isNoneInstance)(e)?(null==n||n.addMessage(g.LocAddendum.assignToNone()),!1):(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1))}function ar(e,t,n,a,r,s,i){if((0,$.isTypeSame)(t,e,{},i))return!0;let o=(0,W.sortTypes)(t.subtypes),l=!1;if((0,$.isUnion)(e)){const p=e.subtypes.filter((e=>!(0,$.isAnyOrUnknown)(e)));if(1===p.length&&(0,$.isTypeVar)(p[0]))return nr(p[0],t,void 0,a,r,s,i),!0;const c=[];let d=o,u=!0;if((0,W.sortTypes)(e.subtypes).forEach((e=>{if((0,W.requiresSpecialization)(e))c.push(e);else{const t=d.findIndex((t=>(0,$.isTypeSame)(t,e,{},i)));t>=0?(d.splice(t,1),l=!0):c.push(e)}})),d.forEach((e=>{const t=c.findIndex((t=>{if((0,$.isTypeSame)(t,e))return!0;if((0,$.isClass)(e)&&(0,$.isClass)(t)&&$.TypeBase.isInstance(e)===$.TypeBase.isInstance(t)){if($.ClassType.isSameGenericClass(e,t))return!0;if($.ClassType.isTypedDictClass(e)&&$.ClassType.isTypedDictClass(t)&&nr(e,t,void 0,void 0,void 0,s,i))return!0}return!(!(0,$.isFunction)(e)&&!(0,$.isOverloadedFunction)(e)||!(0,$.isFunction)(t)&&!(0,$.isOverloadedFunction)(t))}));t>=0&&(nr(c[t],e,void 0,a,r,s,i)?l=!0:u=!1,c.splice(t,1),d=d.filter((t=>t!==e)))})),u&&(0!==c.length||0!==d.length)){if(0!=(1&s)&&0===d.length)return c.every((t=>sr(t,e,!0,i)));const l=0!=(2&s),p=l?d:c;if(0===p.length||p.some((e=>!(0,$.isTypeVar)(e))))u=!1,o=d;else if(c.length===d.length){const e=[...c];for(let t=0;t<d.length;t++){let o=!1;for(let l=0;l<e.length;l++)if(nr(e[l],d[t],null==n?void 0:n.createAddendum(),a,r,s,i)){o=!0,e.push(...e.splice(l,1));break}if(!o){u=!1;break}}o=d}else 0===d.length?0!=(2048&s)&&c.forEach((e=>{nr(e,t,void 0,a,r,s,i)})):nr(l?(0,$.combineTypes)(c):c[0],l?d[0]:(0,$.combineTypes)(d),null==n?void 0:n.createAddendum(),a,r,s,i)||(u=!1)}if(u)return!0;if(0!=(32&s)&&l)return!0}let p=!1;return o.forEach((o=>{if(!p)if(nr(e,o,void 0,a,r,s,i))l=!0;else{sr(o,t,!1,i)||nr(e,o,null==n?void 0:n.createAddendum(),a,r,s,i)||(p=!0)}}),!0),!p||(!(0==(32&s)||!l)||(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1))}function rr(e,t){return 0==(32768&t)&&$.ClassType.isSpecialFormClass(e)}function sr(e,t,n,a=0){const r=Ct(e),s=(0,$.isUnion)(t)?t.subtypes:[t];for(const t of s)if(!(0,$.isTypeSame)(t,e))if((0,$.isAnyOrUnknown)(t)){if(n)return!0}else if(ir(t,r,a))return!0;return!1}function ir(e,t,n){return!e.condition&&(!(!(0,$.isAnyOrUnknown)(e)&&!(0,$.isAnyOrUnknown)(t))||(!(!(0,$.isClass)(e)||!e.details.mro.some((e=>(0,$.isAnyOrUnknown)(e))))||(!(!(0,$.isClass)(t)||!t.details.mro.some((e=>(0,$.isAnyOrUnknown)(e))))||nr(e,t,void 0,void 0,void 0,0,n)&&!nr(t,e,void 0,void 0,void 0,0,n))))}function or(e,t,n,a,r,s,i){if(1&s){let o=!1;return(0,W.doForEachSubtype)(e,((l,p)=>{if(!o&&!nr(l,t,null==n?void 0:n.createAddendum(),a,r,s,i)){let t=!1;(0,$.isAnyOrUnknown)(l)||(0,W.doForEachSubtype)(e,((e,n)=>{p===n||t||nr(e,l,void 0,void 0,void 0,0,i)&&(t=!0)})),t||(o=!0)}})),!o||(null==n||n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),!1)}const o=n?new p.DiagnosticAddendum:void 0;let l=!1;if((0,W.requiresSpecialization)(e))if((0,W.isNoneInstance)(t)&&(0,W.isOptionalType)(e))l=!0;else{let n,p,c;if((0,$.isClassInstance)(t)&&(0,W.isLiteralType)(t)&&$.UnionType.containsType(e,t,void 0,i))return!0;(0,W.doForEachSubtype)(e,(e=>{const d=null==a?void 0:a.clone(),u=null==r?void 0:r.clone();if(nr(e,t,null==o?void 0:o.createAddendum(),d,u,s,i)&&(l=!0,d)){let a=d.getScore();(0,$.isTypeSame)(e,Ge(t))&&(a=Number.POSITIVE_INFINITY),(void 0===c||c<=a)&&(c=a,n=d,p=u)}})),a&&n&&a.copyFromClone(n),r&&p&&r.copyFromClone(p)}else for(const n of e.subtypes)if(nr(n,t,null==o?void 0:o.createAddendum(),a,r,s,i)){l=!0;break}return l||(0,$.isTypeVar)(t)&&t.details.constraints.length>0&&(l=nr(e,Ct(t),null==o?void 0:o.createAddendum(),a,r,s,i)),!!l||(n&&o&&(n.addMessage(g.LocAddendum.typeAssignmentMismatch().format(kr(t,e))),n.addAddendum(o)),!1)}function lr(e,t=0){if(!(0,$.isClassInstance)(e)||!$.ClassType.isProtocolClass(e))return;for(const t of e.details.mro)if((0,$.isClass)(t)&&$.ClassType.isProtocolClass(t))for(const e of $.ClassType.getSymbolTable(t))if("__call__"!==e[0]&&!e[1].isIgnoredForProtocolMatch()){let t=!1;if(oe&&(0,$.isClass)(oe)&&$.ClassType.getSymbolTable(oe).has(e[0])&&(t=!0),!t)return}const n=Je(e,"__call__",void 0,void 0,t);return n?(0,W.removeParamSpecVariadicsFromSignature)(n):void 0}function pr(e,t,n,a,r,s,i,o){if((0,$.isTypeVar)(e)&&e.details.isSynthesized&&e.details.boundType&&(0,$.isClassInstance)(e.details.boundType)&&$.ClassType.isProtocolClass(e.details.boundType))return!0;if((0,$.isVariadicTypeVar)(e)&&!(0,$.isUnpacked)(t))return!1;let l=t,p=e,c=!1;return 0==(2&i)?(p=(0,W.applySolvedTypeVars)(e,r,{useNarrowBoundOnly:!0}),c=(0,W.requiresSpecialization)(p)):(l=(0,W.applySolvedTypeVars)(t,s,{useNarrowBoundOnly:!0}),c=(0,W.requiresSpecialization)(l)),c&&(nr(l,p,void 0,s,r,2^i|256,o),0==(2&i)?p=(0,W.applySolvedTypeVars)(e,r):l=(0,W.applySolvedTypeVars)(t,s)),!(!nr(l,p,null==a?void 0:a.createAddendum(),s,r,i,o)&&!(0,$.isTypeSame)(e,t))||(a&&void 0!==n&&a.addMessage(g.LocAddendum.paramAssignment().format({index:n+1,sourceType:wr(e),destType:wr(t)})),!1)}function cr(e,t,n,a=0){if(!(a>$.maxTypeRecursionCount)){if(a++,n.details.typeParameters.length>0&&n.typeArguments&&n.typeArguments.length<=n.details.typeParameters.length&&!n.tupleTypeArguments){const r=new G.TypeVarContext((0,W.getTypeVarScopeId)(n));(0,C.populateTypeVarContextBasedOnExpectedType)(Ar,$.ClassType.cloneForSpecialization(n,void 0,!1),t,r,F.getTypeVarScopesForNode(e),e.start);let s=!1;const i=n.typeArguments.map(((t,i)=>{const o=n.details.typeParameters[i],l=r.getPrimarySignature().getTypeVarType(o);if(l){if((0,$.isAnyOrUnknown)(l)||(0,$.isAnyOrUnknown)(t))return s=!0,l;if((0,$.isClassInstance)(l)&&(0,$.isClassInstance)(t)){const n=cr(e,l,t,a);if(n)return s=!0,n}else if((0,W.containsAnyRecursive)(l)){const e=$.TypeVarType.getVariance(o),n=nr(l,t),a=nr(t,l);if((4===e||n)&&(3===e||a))return s=!0,l}}return t}));if(s)return $.ClassType.cloneForSpecialization(n,i,!0)}return $.ClassType.isSameGenericClass(t,n)&&(0,W.containsAnyRecursive)(n)&&!(0,W.containsAnyRecursive)(t)?t:void 0}}function dr(e,t,n){const a=(0,W.mapSubtypes)(n,(n=>{if((0,$.isClass)(n)&&(0,W.isLiteralType)(n)&&(0,$.isUnion)(t)&&$.UnionType.containsType(t,n))return n;const a=(0,W.mapSubtypes)(t,(t=>{if((0,$.isAnyOrUnknown)(t))return t;if(nr(t,n)){if((0,$.isAny)(n))return t;if((0,$.isClass)(t)&&(0,$.isClass)(n)&&$.TypeBase.isInstance(t)===$.TypeBase.isInstance(n)){const a=cr(e,t,n);return a&&(n=a),n}return!(0,$.isTypeVar)(t)&&(0,$.isTypeVar)(n)||(0,W.containsAnyRecursive)(n)&&!(0,W.containsAnyRecursive)(t)?t:n}}));return(0,$.isNever)(a)?n:a}));return(0,W.isIncompleteUnknown)(a)?a:(0,$.isUnknown)(a)?(0,$.combineTypes)([a,t]):a}function ur(e,t){if(!$.FunctionType.isInstanceMethod(e)&&!$.FunctionType.isClassMethod(e)&&!$.FunctionType.isConstructorMethod(e))return!0;const n=(0,D.getParameterListDetails)(e);if(0===n.params.length)return!0;const a=n.params[0].param;if(0!==a.category||!a.hasDeclaredType)return!0;const r=$.FunctionType.isInstanceMethod(e)?$.ClassType.cloneAsInstance(t):t;return nr(a.type,r,void 0,void 0,void 0,8)}function mr(e,t,n,a,r=!0){var s,i;const o=(0,D.getParameterListDetails)(e),l=(0,D.getParameterListDetails)(t);let p=!0;if(!$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)&&!$.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(t)){$.FunctionType.isStaticMethod(e)?$.FunctionType.isStaticMethod(t)||(null==n||n.addMessage(g.LocAddendum.overrideNotStaticMethod()),p=!1):$.FunctionType.isClassMethod(e)?$.FunctionType.isClassMethod(t)||(null==n||n.addMessage(g.LocAddendum.overrideNotClassMethod()),p=!1):$.FunctionType.isInstanceMethod(e)&&($.FunctionType.isInstanceMethod(t)||(null==n||n.addMessage(g.LocAddendum.overrideNotInstanceMethod()),p=!1));let c=!1;if(l.positionParamCount<o.positionParamCount)if(void 0===l.argsIndex)c=!0;else{const a=l.params[l.argsIndex].type;for(let r=l.positionParamCount;r<o.positionParamCount;r++)nr(a,o.params[r].type,null==n?void 0:n.createAddendum(),new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),new G.TypeVarContext((0,W.getTypeVarScopeId)(e)),8)||(g.LocAddendum.overrideParamType().format({index:r+1,baseType:wr(o.params[r].type),overrideType:wr(a)}),p=!1)}else if(l.positionParamCount>o.positionParamCount)for(let e=o.positionParamCount;e<l.positionParamCount;e++){const t=l.params[e].param;0===t.category&&t.name&&!t.hasDefault&&(c=!0)}c&&(null==n||n.addMessage(g.LocAddendum.overridePositionalParamCount().format({baseCount:o.params.length,overrideCount:l.params.length})),p=!1);const d=Math.min(o.positionParamCount,l.positionParamCount);for(let s=0;s<d;s++){if(0===s&&r&&($.FunctionType.isInstanceMethod(t)||$.FunctionType.isClassMethod(t)||$.FunctionType.isConstructorMethod(t)))continue;const i=o.params[s].param,c=l.params[s].param;if(s>=o.positionOnlyParamCount&&!(0,R.isPrivateOrProtectedName)(i.name||"")&&o.params[s].source!==D.ParameterSource.PositionOnly&&0===i.category&&a&&i.name!==c.name)0===c.category&&(i.isNameSynthesized||(l.params[s].source===D.ParameterSource.PositionOnly?null==n||n.addMessage(g.LocAddendum.overrideParamNamePositionOnly().format({index:s+1,baseName:i.name||"*"})):null==n||n.addMessage(g.LocAddendum.overrideParamName().format({index:s+1,baseName:i.name||"*",overrideName:c.name||"*"})),p=!1));else if(s<l.positionOnlyParamCount&&s>=o.positionOnlyParamCount)i.isNameSynthesized||o.params[s].source===D.ParameterSource.PositionOnly||(null==n||n.addMessage(g.LocAddendum.overrideParamNamePositionOnly().format({index:s+1,baseName:i.name||"*"})),p=!1);else{const a=o.params[s].type,d=l.params[s].type,u=(0,$.isTypeVar)(a)&&a.details.isSynthesized,m=(0,$.isTypeVar)(d)&&d.details.isSynthesized;r&&(u||m)||i.category===c.category&&nr(d,a,null==n?void 0:n.createAddendum(),new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),new G.TypeVarContext((0,W.getTypeVarScopeId)(e)),8)||(null==n||n.addMessage(g.LocAddendum.overrideParamType().format({index:s+1,baseType:wr(a),overrideType:wr(d)})),p=!1),o.params[s].param.hasDefault&&!l.params[s].param.hasDefault&&(null==n||n.addMessage(g.LocAddendum.overrideParamNoDefault().format({index:s+1})),p=!1)}}if(a&&void 0===l.kwargsIndex)for(let e=d;e<o.positionParamCount;e++){const t=o.params[e];t.source===D.ParameterSource.PositionOrKeyword&&0===t.param.category&&(null==n||n.addMessage(g.LocAddendum.overrideParamNamePositionOnly().format({index:e+1,baseName:t.param.name||"*"})),p=!1)}if(void 0!==o.argsIndex)if(void 0===l.argsIndex)null==n||n.addMessage(g.LocAddendum.overrideParamNameMissing().format({name:null!==(s=o.params[o.argsIndex].param.name)&&void 0!==s?s:"?"})),p=!1;else{const e=l.params[l.argsIndex].type,a=o.params[o.argsIndex].type;nr(e,a,null==n?void 0:n.createAddendum(),new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),void 0,8)||(null==n||n.addMessage(g.LocAddendum.overrideParamKeywordType().format({name:null!==(i=l.params[l.argsIndex].param.name)&&void 0!==i?i:"?",baseType:wr(a),overrideType:wr(e)})),p=!1)}const u=o.params.filter((e=>e.source===D.ParameterSource.KeywordOnly&&0===e.param.category)),m=l.params.filter((e=>e.source===D.ParameterSource.KeywordOnly&&0===e.param.category));u.forEach((a=>{var r,s,i;const o=m.find((e=>a.param.name===e.param.name));if(o||void 0!==l.kwargsIndex){let r=null==o?void 0:o.type;r||(r=l.params[l.kwargsIndex].type),nr(r,a.type,null==n?void 0:n.createAddendum(),new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),new G.TypeVarContext((0,W.getTypeVarScopeId)(e)),8)||(null==n||n.addMessage(g.LocAddendum.overrideParamKeywordType().format({name:null!==(s=a.param.name)&&void 0!==s?s:"?",baseType:wr(a.type),overrideType:wr(r)})),p=!1),o&&a.param.hasDefault&&!o.param.hasDefault&&(null==n||n.addMessage(g.LocAddendum.overrideParamKeywordNoDefault().format({name:null!==(i=o.param.name)&&void 0!==i?i:"?"})),p=!1)}else null==n||n.addMessage(g.LocAddendum.overrideParamNameMissing().format({name:null!==(r=a.param.name)&&void 0!==r?r:"?"})),p=!1})),m.forEach((e=>{var t;u.find((t=>e.param.name===t.param.name))||void 0===o.kwargsIndex&&(e.param.hasDefault||(null==n||n.addMessage(g.LocAddendum.overrideParamNameExtra().format({name:null!==(t=e.param.name)&&void 0!==t?t:"?"})),p=!1))})),void 0!==o.kwargsIndex&&void 0===l.kwargsIndex&&(null==n||n.addMessage(g.LocAddendum.kwargsParamMissing().format({paramName:o.params[o.kwargsIndex].param.name})),p=!1)}if(o.paramSpec&&!l.paramSpec){void 0!==l.argsIndex&&(0,$.isAnyOrUnknown)(l.params[l.argsIndex].type)&&void 0!==l.kwargsIndex&&(0,$.isAnyOrUnknown)(l.params[l.kwargsIndex].type)||(null==n||n.addMessage(g.LocAddendum.paramSpecMissingInOverride()),p=!1)}const c=Za(e),d=Za(t);return nr(c,d,null==n?void 0:n.createAddendum(),new G.TypeVarContext((0,W.getTypeVarScopeId)(e)),new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),8)||(null==n||n.addMessage(g.LocAddendum.overrideReturnType().format({baseType:wr(c),overrideType:wr(d)})),p=!1),p}function yr(e){const t=new Map;$.ClassType.getReverseMro(e).forEach((e=>{(0,$.isInstantiableClass)(e)&&$.ClassType.getSymbolTable(e).forEach(((n,a)=>{const r=Yt(e,a);r?t.set(a,r):t.delete(a)}))}));const n=[];return t.forEach((e=>{n.push(e)})),n}function gr(e,t,n,a=!1,r,s,i=0){return(0,W.mapSignatures)(t,(t=>{if(!e)return $.FunctionType.clone(t,!0);if($.FunctionType.isInstanceMethod(t)){if((0,W.isInstantiableMetaclass)(e))return t;const a=(0,$.isClassInstance)(e)?e:$.ClassType.cloneAsInstance((0,W.specializeClassType)(e));let o=!1;return((0,$.isClassInstance)(e)||n&&(0,W.isInstantiableMetaclass)(n))&&(o=!0),hr(e,t,null!=n?n:$.ClassType.cloneAsInstantiable(a),s,i,null!=r?r:a,o)}if($.FunctionType.isClassMethod(t)||a&&$.FunctionType.isConstructorMethod(t)){const a=(0,$.isInstantiableClass)(e)?e:$.ClassType.cloneAsInstantiable(e),o=r?(0,W.convertToInstantiable)(r):void 0;return hr(a,t,null!=n?n:a,s,i,null!=o?o:a,!0)}if($.FunctionType.isStaticMethod(t)){const a=(0,$.isInstantiableClass)(e)?e:$.ClassType.cloneAsInstantiable(e);return hr(a,t,null!=n?n:a,s,i,void 0,!1)}return t}))}function hr(e,t,n,a,r,s,i=!0){const o=new G.TypeVarContext((0,W.getTypeVarScopeId)(n));if(s&&t.details.parameters.length>0){const n=t.details.parameters[0],i=$.FunctionType.getEffectiveParameterType(t,0);if(o.addSolveForScope((0,W.getTypeVarScopeId)(t)),(0,$.isTypeVar)(i)&&i.details.boundType&&(0,$.isClassInstance)(i.details.boundType)&&$.ClassType.isProtocolClass(i.details.boundType))o.isLocked()||o.setTypeVarType(i,$.TypeBase.isInstantiable(i)?(0,W.convertToInstance)(s):s);else{const l=null==a?void 0:a.createAddendum();if(!nr(i,s,null==l?void 0:l.createAddendum(),o,void 0,8192,r)&&n.name&&!n.isNameSynthesized&&n.hasDeclaredType)return void(l&&l.addMessage(g.LocMessage.bindTypeMismatch().format({type:wr(e),methodName:t.details.name||"<anonymous>",paramName:n.name})))}}Za(t);const l=(0,W.applySolvedTypeVars)(t,o);return $.FunctionType.clone(l,i,e,(0,W.getTypeVarScopeId)(e))}function fr(e){return e.getDeclarations().some((e=>Tr(e)))}function Tr(e){return 1===e.type&&!!e.isFinal}function vr(e){if(1!==e.type||!e.typeAnnotationNode)return!1;if(38!==e.typeAnnotationNode.nodeType&&35!==e.typeAnnotationNode.nodeType&&48!==e.typeAnnotationNode.nodeType)return!1;const t=$e(e.typeAnnotationNode,{isVariableAnnotation:!0,allowClassVar:!0});return(0,$.isClassInstance)(t)&&$.ClassType.isBuiltIn(t,"TypeAlias")}function br(e){var t;return!(1!==e.type||!e.typeAliasName||e.typeAnnotationNode)&&(3===(null===(t=e.node.parent)||void 0===t?void 0:t.nodeType)&&_r(e.node.parent.rightExpression))}function _r(e){switch(e.nodeType){case 0:case 55:case 4:case 54:case 6:case 51:case 56:case 52:case 9:case 32:case 46:case 60:case 61:case 30:case 40:case 15:case 31:case 45:return!1;case 7:return 6===e.operator&&_r(e.leftExpression)&&_r(e.rightExpression);case 24:return _r(e.baseExpression);case 35:return _r(e.leftExpression)}return!0}function Cr(e){if((0,$.isUnknown)(e)||(0,W.isEllipsisType)(e))return!1;let t=!0;return(0,W.doForEachSubtype)(e,(e=>{$.TypeBase.isInstantiable(e)||(0,W.isNoneInstance)(e)||(t=!1)})),t}function Ir(e){return q.printObjectTypeForClass(e,n.printTypeFlags,Za)}function kr(e,t,n){const a=wr(e,n),r=wr(t,n);if(a!==r)return{sourceType:a,destType:r};const s=wr(e,{...null!=n?n:{},useFullyQualifiedNames:!0}),i=wr(t,{...null!=n?n:{},useFullyQualifiedNames:!0});return s!==i?{sourceType:s,destType:i}:{sourceType:a,destType:r}}function wr(e,t){let a=n.printTypeFlags;return(null==t?void 0:t.expandTypeAlias)&&(a|=32),(null==t?void 0:t.enforcePythonSyntax)&&(a|=256),(null==t?void 0:t.useTypingUnpack)&&(a|=512),(null==t?void 0:t.printUnknownWithAny)&&(a|=1),(null==t?void 0:t.printTypeVarVariance)&&(a|=2048),(null==t?void 0:t.omitTypeArgumentsIfUnknown)&&(a|=2),(null==t?void 0:t.useFullyQualifiedNames)&&(a|=4096),q.printType(e,a,Za)}const Sr=a((function(e,t){var n;let a,r=!1;if($.FunctionType.isStubDefinition(e))return $.UnknownType.create();if($.FunctionType.isOverloaded(e)&&!$.FunctionType.isSynthesizedMethod(e))return $.UnknownType.create();if(e.inferredReturnType)a=e.inferredReturnType;else{if($.FunctionType.isInstanceMethod(e)&&"__init__"===e.details.name)a=rt();else if(e.details.declaration){const t=e.details.declaration.node;if(!(!v.getFileInfo(t).diagnosticRuleSet.analyzeUnannotatedFunctions&&F.isUnannotatedFunction(t))&&!lt(t.suite)){const n=v.getCodeFlowComplexity(t);if(e.details.parameters.length<=1||e.details.parameters.some((e=>e.hasDeclaredType))||n<32){let n;!function(e){const t=J.disableSpeculativeMode();try{e(),J.enableSpeculativeMode(t)}catch(e){throw J.enableSpeculativeMode(t),e}}((()=>{n=da(t,$.FunctionType.isAbstractMethod(e))})),a=null==n?void 0:n.type,(null==n?void 0:n.isIncomplete)&&(r=!0)}}}a||(a=$.UnknownType.create()),r||(e.inferredReturnType=a)}if(!r&&(0,W.isPartlyUnknown)(a)&&$.FunctionType.hasUnannotatedParams(e)&&!$.FunctionType.isStubDefinition(e)&&!$.FunctionType.isPyTypedDefinition(e)&&t){let r=!1,s=!1;const i=null===(n=e.details.declaration)||void 0===n?void 0:n.node;if(i&&(i.decorators.length>0&&(r=!0),i.isAsync&&(s=!0)),!r&&!s){const n=function(e,t){let n;if(!e.details.declaration)return;const a=e.details.declaration.node;if(v.getCodeFlowComplexity(a)>=8)return;if(t.some((e=>!e.paramName)))return;if(we.some((e=>e.functionNode===a)))return;const r=aa(a);if(!r)return;if(t.length>6)return;if(we.length>=2)return;const s=[];let i=!1;if(Oa(a,(()=>{var o,l;const p=Se;we.push({functionNode:a,codeFlowAnalyzer:xr.createCodeFlowAnalyzer(void 0)});try{Se=new Map;let p=!0;if(a.parameters.forEach(((e,n)=>{if(e.name){let i;const o=t.find((t=>e.name.value===t.paramName));o&&o.argument.valueExpression?(i=Be(o.argument.valueExpression).type,(0,$.isUnknown)(i)||(p=!1)):e.defaultValue?(i=Be(e.defaultValue).type,(0,$.isUnknown)(i)||(p=!1)):0===n&&($.FunctionType.isInstanceMethod(r.functionType)||$.FunctionType.isClassMethod(r.functionType))&&r.functionType.details.parameters.length>0&&a.parameters[0].name&&(i=r.functionType.details.parameters[0].type),i||(i=$.UnknownType.create()),s.push(i),De(e.name,{type:i},0)}})),!p){const t=null===(o=r.functionType.callSiteReturnTypeCache)||void 0===o?void 0:o.find((e=>e.paramTypes.length===s.length&&e.paramTypes.every(((e,t)=>(0,$.isTypeSame)(e,s[t])))));t?(n=t.returnType,i=!0):n=null===(l=da(a,$.FunctionType.isAbstractMethod(e)))||void 0===l?void 0:l.type}}finally{we.pop(),Se=p}})),n)return n=(0,$.removeUnbound)(n),i||(r.functionType.callSiteReturnTypeCache||(r.functionType.callSiteReturnTypeCache=[]),r.functionType.callSiteReturnTypeCache.length>=8&&(r.functionType.callSiteReturnTypeCache=r.functionType.callSiteReturnTypeCache.slice(1)),r.functionType.callSiteReturnTypeCache.push({paramTypes:s,returnType:n})),n;return}(e,t);n&&(a=n)}}return a})),Ar={runWithCancellationToken:function(e,t){try{return ee=e,t()}finally{ee=void 0}},getType:Re,getTypeResult:function(e){return wa(e,(()=>{Ca(e)}))},getTypeResultForDecorator:function(e){return wa(e,(()=>{Ca(e.expression)}))},getCachedType:function(e){return Ne(e,0)},getTypeOfExpression:Be,getTypeOfAnnotation:$e,getTypeOfClass:Yn,getTypeOfFunction:aa,getTypeOfExpressionExpectingType:Da,getExpectedType:Le,evaluateTypeForSubnode:wa,evaluateTypesForStatement:ka,evaluateTypesForMatchStatement:function(e){if(Pe(e))return;const t=Be(e.subjectExpression);let n=t.type;for(const t of e.cases)t.guardExpression||(n=(0,E.narrowTypeBasedOnPattern)(Ar,n,t.pattern,!1));De(e,{type:n,isIncomplete:!!t.isIncomplete},0)},evaluateTypesForCaseStatement:Ta,evaluateTypeOfParameter:Ia,canBeTruthy:Ze,canBeFalsy:He,stripLiteralValue:Ge,removeTruthinessFromType:function(e){return(0,W.mapSubtypes)(e,(e=>{const t=Ct(e);if((0,$.isClassInstance)(t)){if(void 0!==t.literalValue)return t.literalValue?void 0:e;if($.ClassType.isBuiltIn(t,"bool"))return $.ClassType.cloneWithLiteral(t,!1);if($.ClassType.isBuiltIn(t,"int"))return $.ClassType.cloneWithLiteral(t,0);if($.ClassType.isBuiltIn(t,["str","bytes"]))return $.ClassType.cloneWithLiteral(t,"")}if(He(e))return e}))},removeFalsinessFromType:function(e){return(0,W.mapSubtypes)(e,(e=>{const t=Ct(e);if((0,$.isClassInstance)(t)){if(void 0!==t.literalValue)return t.literalValue?e:void 0;if($.ClassType.isBuiltIn(t,"bool"))return $.ClassType.cloneWithLiteral(t,!0);if((0,W.isNoneInstance)(t))return;if($.ClassType.isBuiltIn(t,"object"))return e}if(Ze(e))return e}))},verifyRaiseExceptionType:function(e){const t=Fa(e,"BaseException");if(e.typeExpression){const n=Be(e.typeExpression).type;if(n&&t&&(0,$.isInstantiableClass)(t)){const a=new p.DiagnosticAddendum;(0,W.doForEachSubtype)(n,(n=>{const r=Ct(n);if(!(0,$.isAnyOrUnknown)(r))if((0,$.isInstantiableClass)(r)&&void 0===r.literalValue)if((0,W.derivesFromClassRecursive)(r,t,!1)){let t;Oa(e.typeExpression,(()=>{t=(0,I.validateConstructorArguments)(Ar,e.typeExpression,[],r,!1,void 0)})),t&&t.argumentErrors&&a.addMessage(g.LocMessage.exceptionTypeNotInstantiable().format({type:wr(n)}))}else a.addMessage(g.LocMessage.exceptionTypeIncorrect().format({type:wr(n)}));else(0,$.isClassInstance)(r)&&(0,W.derivesFromClassRecursive)($.ClassType.cloneAsInstantiable(r),t,!1)||a.addMessage(g.LocMessage.exceptionTypeIncorrect().format({type:wr(n)}))})),a.isEmpty()||ht(c.DiagnosticRule.reportGeneralTypeIssues,g.LocMessage.expectedExceptionClass()+a.getString(),e.typeExpression)}}},verifyDeleteExpression:wt,validateOverloadedFunctionArguments:$t,validateInitSubclassArgs:na,isAfterNodeReachable:ct,isNodeReachable:pt,isAsymmetricAccessorAssignment:function(e){return s.has(e.id)},suppressDiagnostics:Oa,isSpecialFormClass:rr,getDeclarationsForStringNode:function(e){var t;const n=[],a=null===(t=Le(e))||void 0===t?void 0:t.type;return a&&(0,W.doForEachSubtype)(a,(t=>{var a,r;if((0,$.isClassInstance)(t)&&$.ClassType.isTypedDictClass(t)){if(null===(a=t.details.typedDictEntries)||void 0===a?void 0:a.knownItems.get(e.value)){const a=null===(r=(0,W.lookUpObjectMember)(t,e.value))||void 0===r?void 0:r.symbol;a&&(0,o.appendArray)(n,a.getDeclarations())}}})),0===n.length?void 0:n},getDeclarationsForNameNode:function(e,t=!0){var n,a,r;if(t&&v.isCodeUnreachable(e))return;const s=[],i=Ra(e);if(i){const t=z.getScopeForNode(e);if(t){const n=t.lookUpSymbolRecursive(i.value);if(n){const t=n.symbol.getDeclarations().filter((t=>8===t.type&&t.node===e.parent));(0,o.appendArray)(s,(0,w.getDeclarationsWithUsesLocalNameRemoved)(t))}}}else if(e.parent&&35===e.parent.nodeType&&e===e.parent.memberName){let t=Re(e.parent.leftExpression);if(t){t=Ct(t);const n=e.parent.memberName.value;(0,W.doForEachSubtype)(t,(e=>{let t;if(e=Ct(e),(0,$.isInstantiableClass)(e)){let a=(0,W.lookUpClassMember)(e,n,64);if(a||(a=(0,W.lookUpClassMember)(e,n)),!a){const t=e.details.effectiveMetaclass;t&&(0,$.isInstantiableClass)(t)&&(a=(0,W.lookUpClassMember)(t,n))}a&&(t=a.symbol)}else if((0,$.isClassInstance)(e)){let a=(0,W.lookUpObjectMember)(e,n,64);a||(a=(0,W.lookUpObjectMember)(e,n)),a&&(t=a.symbol)}else(0,$.isModule)(e)&&(t=$.ModuleType.getField(e,n));if(t){const e=t.getTypedDeclarations();e.length>0?(0,o.appendArray)(s,e):(0,o.appendArray)(s,t.getDeclarations())}}))}}else if(e.parent&&37===e.parent.nodeType){const t=e.parent.nameParts.findIndex((t=>t===e)),n=v.getImportInfo(e.parent);t>=0&&n&&!n.isNativeLib&&t<n.resolvedUris.length&&n.resolvedUris[t]&&(ka(e),s.push((0,w.createSynthesizedAliasDeclaration)(n.resolvedUris[t])))}else if(e.parent&&1===e.parent.nodeType&&e===e.parent.name){const t=e.parent,i=e.value;if(9===(null===(n=t.parent)||void 0===n?void 0:n.nodeType)){const e=Re(t.parent.leftExpression);if(e)if((0,$.isFunction)(e)&&e.details.declaration){const t=Ua(e,i);t&&s.push(t)}else if((0,$.isOverloadedFunction)(e))e.overloads.forEach((e=>{const t=Ua(e,i);t&&s.push(t)}));else if((0,$.isInstantiableClass)(e)){const n=null===(a=(0,I.getBoundInitMethod)(Ar,t.parent.leftExpression,$.ClassType.cloneAsInstance(e)))||void 0===a?void 0:a.type;if(n&&(0,$.isFunction)(n)){const t=Ua(n,i);if(t)s.push(t);else if($.ClassType.isDataClass(e)||$.ClassType.isTypedDictClass(e)){const t=(0,W.lookUpClassMember)(e,i);t&&(0,o.appendArray)(s,t.symbol.getDeclarations())}}}}else if(10===(null===(r=t.parent)||void 0===r?void 0:r.nodeType)){const e=Yn(t.parent);e&&na(t.parent,e.classType)}}else{const t=v.getFileInfo(e),n=F.isWithinTypeAnnotation(e,!(0,T.isAnnotationEvaluationPostponed)(v.getFileInfo(e))),a=!!F.getParentNodeOfType(e,77),r=n||a||t.isStubFile,i=Ma(e,e.value,!r,n);i&&(0,o.appendArray)(s,i.symbol.getDeclarations())}return s},getTypeForDeclaration:La,resolveAliasDeclaration:qa,resolveAliasDeclarationWithInfo:Wa,getTypeOfIterable:at,getTypeOfIterator:nt,getGetterTypeFromProperty:function(e,t){if($.ClassType.isPropertyClass(e))return e.fgetInfo?Za(e.fgetInfo.methodType,void 0,t):void 0},getTypeOfArgument:Pa,markNamesAccessed:function(e,t){const n=v.getFileInfo(e),a=z.getScopeForNode(e);a&&t.forEach((t=>{const r=a.lookUpSymbolRecursive(t);r&&St(n,r.symbol,e)}))},expandPromotionTypes:function(e,t,n=!1){return(0,W.mapSubtypes)(t,(t=>{if(!(0,$.isClass)(t)||!t.includePromotions)return t;if(n&&$.ClassType.isBuiltIn(t,"bytes"))return t;const a=[$.ClassType.cloneRemoveTypePromotions(t)],r=Z.get(t.details.fullName);if(r)for(const n of r){const r=n.split(".");let s=Fa(e,r[r.length-1]);s&&(0,$.isInstantiableClass)(s)&&(s=$.ClassType.cloneRemoveTypePromotions(s),(0,$.isClassInstance)(t)&&(s=$.ClassType.cloneAsInstance(s)),s=(0,W.addConditionToType)(s,t.condition),a.push(s))}return(0,$.combineTypes)(a)}))},makeTopLevelTypeVarsConcrete:Ct,mapSubtypesExpandTypeVars:It,isTypeSubsumedByOtherType:sr,lookUpSymbolRecursive:Ma,getDeclaredTypeOfSymbol:$a,getEffectiveTypeOfSymbol:Ga,getEffectiveTypeOfSymbolForUsage:Ka,getInferredTypeOfDeclaration:Ba,getDeclaredTypeForExpression:et,getFunctionDeclaredReturnType:Ya,getFunctionInferredReturnType:Sr,getBestOverloadForArguments:function(e,t,n){let a=0,r=[];const s=new W.UniqueSignatureTracker;let i;return $.OverloadedFunctionType.getOverloads(t.type).forEach((s=>{za(e,(()=>{const i=Qt(e,n,{type:s,isIncomplete:t.isIncomplete},a);i.argumentErrors||r.push(i),a++}))})),r=Kt(r),r.forEach(((t,n)=>{void 0===i&&za(e,(()=>{const a=en(e,t,new G.TypeVarContext((0,W.getTypeVarScopeId)(t.overload)),s,!0);a&&!a.argumentErrors&&(i=n)}))})),void 0===i?void 0:r[i].overload},getBuiltInType:Fa,getTypeOfMember:Ja,getTypeOfBoundMember:Ye,getBoundMagicMethod:Je,getTypeOfMagicMethodCall:hn,bindFunctionToClassOrObject:gr,getCallSignatureInfo:function(e,t,n){const a=e.leftExpression,r=Re(a);if(!r)return;const s=[];let i=0;function o(){s.push({argumentCategory:i,typeResult:{type:$.UnknownType.create()},active:!0})}e.arguments.forEach(((e,a)=>{let r=!1;a===t&&(n?r=!0:o()),i=e.argumentCategory,s.push({valueExpression:e.valueExpression,argumentCategory:e.argumentCategory,name:e.name,active:r})})),e.arguments.length<t&&o();const l=[];function p(t){let n;za(e,(()=>{n=an(a,s,{type:t},new G.TypeVarContext((0,W.getTypeVarScopeId)(t)),!0)})),l.push({type:Qe(t),activeParam:null==n?void 0:n.activeParam})}function c(e){(0,$.isFunction)(e)?p(e):$.OverloadedFunctionType.getOverloads(e).forEach((e=>{p(e)}))}return(0,W.doForEachSubtype)(r,(t=>{switch(t.category){case 4:case 5:c(t);break;case 6:if($.TypeBase.isInstantiable(t)){let n;const a=(0,I.getBoundInitMethod)(Ar,e,$.ClassType.cloneAsInstance(t),void 0,0);a&&!a.typeErrors&&((0,$.isFunction)(a.type)||(0,$.isOverloadedFunction)(a.type))&&(n=a.type);const r=n&&(0,$.isFunction)(n)&&"builtins.object.__init__"===n.details.fullName,s=n&&(0,$.isFunction)(n)&&$.FunctionType.hasDefaultParameters(n);if(!n||r||s){const a=(0,I.getBoundNewMethod)(Ar,e,t);a&&!a.typeErrors&&((0,$.isFunction)(a.type)&&"builtins.object.__new__"!==a.type.details.fullName||(0,$.isOverloadedFunction)(a.type))&&(n=a.type)}n&&c(n)}else{const e=Je(t,"__call__");e&&c(e)}}})),0!==l.length?{callNode:e,signatures:l}:void 0},getAbstractSymbols:yr,narrowConstrainedTypeVar:function(e,t){const n=v.getFlowNode(e);if(n)return xr.narrowConstrainedTypeVar(n,t)},assignType:nr,validateOverrideMethod:function(e,t,n,a,r=!0){if(!(0,$.isFunction)(e)&&!(0,$.isOverloadedFunction)(e))return a.addMessage(g.LocAddendum.overrideType().format({type:wr(e)})),!1;if((0,$.isFunction)(e))return(0,$.isFunction)(t)?mr(e,t,a,r):!!t.overloads.some((t=>mr(e,t,void 0,r)))||(a.addMessage(g.LocAddendum.overrideNoOverloadMatches()),!1);if((0,$.isFunction)(t))return $.OverloadedFunctionType.getOverloads(e).every((e=>!(!n||ur(e,n))||mr(e,t,null==a?void 0:a.createAddendum(),r)));let s=-1;const i=$.OverloadedFunctionType.getOverloads(e);for(const e of $.OverloadedFunctionType.getOverloads(t)){let t,o=i.findIndex(((a,i)=>{if(n&&!ur(a,n))return!1;const o=mr(a,e,void 0,r,!1);return o&&i<=s&&void 0===t?(t=i,!1):o}));if(o<0&&void 0!==t&&(o=t),o<0)break;if(o<s)return a.addMessage(g.LocAddendum.overrideOverloadOrder()),!1;s=o}if(s<i.length-1){const e=i.slice(s+1);if(!n||e.some((e=>ur(e,n))))return a.addMessage(g.LocAddendum.overrideOverloadNoMatch()),!1}return!0},validateCallArguments:Zt,validateTypeArg:An,assignTypeToExpression:kt,assignClassToSelf:er,getTypedDictClassType:function(){return ye&&(0,$.isInstantiableClass)(ye)?ye:void 0},getTupleClassType:function(){return le&&(0,$.isInstantiableClass)(le)?le:void 0},getObjectType:function(){return null!=ae?ae:$.UnknownType.create()},getNoneType:rt,getUnionClassType:function(){return null!=se?se:$.UnknownType.create()},getBuiltInObject:Ea,getTypingType:st,assignTypeArguments:tr,reportMissingTypeArguments:xt,inferReturnTypeIfNecessary:Ha,inferTypeParameterVarianceForClass:Qn,isFinalVariable:fr,isFinalVariableDeclaration:Tr,isExplicitTypeAliasDeclaration:vr,addInformation:ut,addUnusedCode:function(e,t){if(!gt(e)){v.getFileInfo(e).diagnosticSink.addUnusedCodeWithTextRange(g.LocMessage.unreachableCode(),t)}},addUnreachableCode:function(e,t){if(!gt(e)){v.getFileInfo(e).diagnosticSink.addUnreachableCodeWithTextRange(g.LocMessage.unreachableCode(),t)}},addDeprecated:function(e,t){if(!gt(t)){v.getFileInfo(t).diagnosticSink.addDeprecatedWithTextRange(e,t)}},addDiagnostic:ht,addDiagnosticForTextRange:ft,printType:wr,printSrcDestTypes:kr,printFunctionParts:function(e,t){const a=t?n.printTypeFlags|t:n.printTypeFlags;return q.printFunctionParts(e,a,Za)},getTypeCacheEntryCount:function(){return ve.size},disposeEvaluator:function(){fe=new Set,Te=new Map,ve=new Map,be=new Map,_e=new Map},useSpeculativeMode:za,isSpeculativeModeInUse:Va,setTypeResultForNode:Fe,checkForCancellation:Ae,printControlFlowGraph:function(e,t,n,a){return xr.printControlFlowGraph(e,t,n,a)},printTypeVarContext:function(e){const t=e.getSignatureContexts();t.forEach(((e,n)=>{t.length>1&&console.log(`Signature context ${n+1}:`),e.getTypeVars().forEach((t=>{const n=e.getTypeVarType(t.typeVar);console.log(`  ${t.typeVar.details.name}: ${n?wr(n):"<none>"}`)}))}))}},xr=(0,b.getCodeFlowEngine)(Ar,J);return Ar}},90549:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.maxSubtypesForInferredType=void 0,t.maxSubtypesForInferredType=64},27124:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createTypeEvaluatorWithTracker=void 0;const a=n(57508),r=n(86016),s=n(6216),i=n(508);t.createTypeEvaluatorWithTracker=function(e,t,n,o){function l(e){return t.logCalls&&n.logLevel===a.LogLevel.Log?(...a)=>n.log(e.name,(t=>("importLookup"===e.name&&a.length>0?t.add(null==o?void 0:o.printFileOrModuleName(a[0])):a.forEach((e=>{t.add(null==o?void 0:o.print(e))})),s.timingStats.typeEvaluationTime.timeOperation(e,...a))),t.minimumLoggingThreshold,!0):(0,r.isDebugMode)()?e:s.timingStats.typeEvaluationTime.timeOperation.bind(s.timingStats.typeEvaluationTime,e)}e=l(e);const p=(0,i.createTypeEvaluator)(e,t,l);return Object.keys(p).forEach((e=>{const t=p[e];"function"==typeof t&&t.name&&(p[e]=l(t))})),p}},46048:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.func1=t.Tree=t.Plant=t.Dog=t.Animal=t.enumerateLiteralsForType=t.narrowTypeForDiscriminatedLiteralFieldComparison=t.narrowTypeForDiscriminatedTupleComparison=t.narrowTypeForDiscriminatedDictEntryComparison=t.narrowTypeForContainerElementType=t.getElementTypeForContainerNarrowing=t.isIsinstanceFilterSubclass=t.isIsinstanceFilterSuperclass=t.getTypeNarrowingCallback=void 0;const i=n(83181),o=n(79428),l=n(9316),p=n(99868),c=s(n(28340)),d=n(69160),u=n(52328),m=n(45468),y=n(8312),g=n(808),h=n(97632);function f(e,t,n,a,r=0){if(r>y.maxTypeRecursionCount)return;if(r++,4===n.nodeType)return function(e,t,n,a,r){var s;return null!==(s=f(e,t,n.rightExpression,a,r))&&void 0!==s?s:f(e,t,n.name,a,r)}(e,t,n,a,r);if(7===n.nodeType){const r=39===n.operator||40===n.operator,s=12===n.operator||28===n.operator,i=s||20===n.operator||21===n.operator||15===n.operator||16===n.operator;if(r||s){const i=39===n.operator||12===n.operator?a:!a;if(11===n.rightExpression.nodeType&&26===n.rightExpression.constType){let a=n.leftExpression;if(4===a.nodeType&&(a=a.name),c.isMatchingExpression(t,a))return t=>({type:C(e,t,i),isIncomplete:!1});if(24===a.nodeType&&c.isMatchingExpression(t,a.baseExpression)&&1===a.items.length&&!a.trailingComma&&0===a.items[0].argumentCategory&&!a.items[0].name&&40===a.items[0].valueExpression.nodeType&&a.items[0].valueExpression.isInteger&&!a.items[0].valueExpression.isImaginary){const t=a.items[0].valueExpression.value;if("number"==typeof t)return n=>({type:_(e,n,i,t),isIncomplete:!1})}}if(18===n.rightExpression.nodeType){let a=n.leftExpression;if(4===a.nodeType&&(a=a.name),c.isMatchingExpression(t,a))return t=>({type:I(e,t,i),isIncomplete:!1})}if(9===n.leftExpression.nodeType&&1===n.leftExpression.arguments.length&&0===n.leftExpression.arguments[0].argumentCategory){const a=n.leftExpression.arguments[0].valueExpression;if(c.isMatchingExpression(t,a)){const t=e.getTypeOfExpression(n.leftExpression.leftExpression,2).type;if((0,y.isInstantiableClass)(t)&&y.ClassType.isBuiltIn(t,"type")){const t=e.getTypeOfExpression(n.rightExpression),a=e.makeTopLevelTypeVarsConcrete(t.type);if((0,y.isInstantiableClass)(a))return n=>({type:V(e,n,a,i),isIncomplete:!!t.isIncomplete})}}}if(r){if(c.isMatchingExpression(t,n.leftExpression)){const t=e.getTypeOfExpression(n.rightExpression),a=t.type;if((0,y.isClassInstance)(a)&&(y.ClassType.isEnumClass(a)||y.ClassType.isBuiltIn(a,"bool"))&&void 0!==a.literalValue)return n=>({type:R(e,n,a,i,!0),isIncomplete:!!t.isIncomplete});if((0,y.isInstantiableClass)(a))return n=>({type:U(e,n,a,i),isIncomplete:!!t.isIncomplete})}if(24===n.leftExpression.nodeType&&1===n.leftExpression.items.length&&!n.leftExpression.trailingComma&&0===n.leftExpression.items[0].argumentCategory&&c.isMatchingExpression(t,n.leftExpression.baseExpression)){const t=e.getTypeOfExpression(n.leftExpression.items[0].valueExpression),a=t.type;if((0,y.isClassInstance)(a)&&(0,g.isLiteralType)(a))if(y.ClassType.isBuiltIn(a,"str")){const r=e.getTypeOfExpression(n.rightExpression).type;if((0,y.isClassInstance)(r)&&void 0!==r.literalValue)return n=>({type:E(e,n,a,r,i),isIncomplete:!!t.isIncomplete})}else if(y.ClassType.isBuiltIn(a,"int")){const t=e.getTypeOfExpression(n.rightExpression),r=t.type;if((0,y.isClassInstance)(r)&&void 0!==r.literalValue){let n=!1;if((y.ClassType.isBuiltIn(r,"bool")||r.literalValue instanceof y.EnumLiteral)&&(n=!0),n)return n=>({type:M(e,n,a,r,i),isIncomplete:!!t.isIncomplete})}}}}if(s){const r=12===n.operator?a:!a;if(c.isMatchingExpression(t,n.leftExpression)){const t=e.useSpeculativeMode(n.rightExpression,(()=>e.getTypeOfExpression(n.rightExpression))),a=t.type;if((0,y.isClassInstance)(a)&&void 0!==a.literalValue)return n=>({type:R(e,n,a,r,!1),isIncomplete:!!t.isIncomplete})}if(24===n.leftExpression.nodeType&&1===n.leftExpression.items.length&&!n.leftExpression.trailingComma&&0===n.leftExpression.items[0].argumentCategory&&c.isMatchingExpression(t,n.leftExpression.baseExpression)){const t=e.getTypeOfExpression(n.leftExpression.items[0].valueExpression),a=t.type;if((0,y.isClassInstance)(a)&&(0,g.isLiteralType)(a)&&y.ClassType.isBuiltIn(a,["str","int"])){const s=e.getTypeOfExpression(n.rightExpression),i=s.type;if((0,g.isLiteralTypeOrUnion)(i))return n=>{let o;return o=y.ClassType.isBuiltIn(a,"str")?E(e,n,a,i,r):M(e,n,a,i,r),{type:o,isIncomplete:!!t.isIncomplete||!!s.isIncomplete}}}}}if(s&&35===n.leftExpression.nodeType&&c.isMatchingExpression(t,n.leftExpression.leftExpression)){const t=e.getTypeOfExpression(n.rightExpression),a=t.type,r=n.leftExpression.memberName;if((0,y.isClassInstance)(a)&&(void 0!==a.literalValue||(0,g.isNoneInstance)(a)))return n=>({type:O(e,n,r.value,a,i),isIncomplete:!!t.isIncomplete})}if(35===n.leftExpression.nodeType&&c.isMatchingExpression(t,n.leftExpression.leftExpression)){const t=e.getTypeOfExpression(n.rightExpression),a=t.type,r=n.leftExpression.memberName;if((0,y.isClassInstance)(a)&&(y.ClassType.isEnumClass(a)||y.ClassType.isBuiltIn(a,"bool"))&&void 0!==a.literalValue)return n=>({type:O(e,n,r.value,a,i),isIncomplete:!!t.isIncomplete})}if(35===n.leftExpression.nodeType&&c.isMatchingExpression(t,n.leftExpression.leftExpression)&&11===n.rightExpression.nodeType&&26===n.rightExpression.constType){const t=n.leftExpression.memberName;return n=>({type:z(e,n,t.value,i),isIncomplete:!1})}}if(i&&9===n.leftExpression.nodeType&&1===n.leftExpression.arguments.length){const r=n.leftExpression.arguments[0].valueExpression;if(c.isMatchingExpression(t,r)){const t=e.getTypeOfExpression(n.leftExpression.leftExpression,2),r=t.type;if((0,y.isFunction)(r)&&"builtins.len"===r.details.fullName){const r=e.getTypeOfExpression(n.rightExpression),s=r.type;if((0,y.isClassInstance)(s)&&"number"==typeof s.literalValue&&s.literalValue>=0){let i=s.literalValue;const o=12===n.operator||20===n.operator||21===n.operator?a:!a;21!==n.operator&&15!==n.operator||i++;const l=12===n.operator||28===n.operator;return n=>({type:A(e,n,i,o,!l),isIncomplete:!!t.isIncomplete||!!r.isIncomplete})}}}}if(41===n.operator||42===n.operator){if(c.isMatchingExpression(t,n.leftExpression)){const t=e.getTypeOfExpression(n.rightExpression),r=t.type,s=41===n.operator?a:!a;return n=>({type:P(e,n,r,s),isIncomplete:!!t.isIncomplete})}if(c.isMatchingExpression(t,n.rightExpression)){const t=e.getTypeOfExpression(n.leftExpression),r=t.type;if((0,y.isClassInstance)(r)&&y.ClassType.isBuiltIn(r,"str")&&(0,g.isLiteralType)(r)){const s=41===n.operator?a:!a;return n=>({type:F(e,n,y.ClassType.cloneAsInstantiable(r),s),isIncomplete:!!t.isIncomplete})}}}}if(9===n.nodeType){if(2===n.arguments.length){const r=n.arguments[0].valueExpression,s=n.arguments[1].valueExpression;if(c.isMatchingExpression(t,r)){const t=e.getTypeOfExpression(n.leftExpression,2),r=t.type;if((0,y.isFunction)(r)&&("isinstance"===r.details.builtInName||"issubclass"===r.details.builtInName)){const o="isinstance"===r.details.builtInName,l=e.getTypeOfExpression(s,616),p=function(e){let t=!1;const n=[],a=e=>{e.forEach((e=>{(0,y.isInstantiableClass)(e)||(0,y.isTypeVar)(e)&&y.TypeBase.isInstantiable(e)?n.push(e):(0,g.isNoneTypeClass)(e)?((0,i.assert)((0,y.isInstantiableClass)(e)),n.push(e)):(0,y.isFunction)(e)&&2===e.details.parameters.length&&1===e.details.parameters[0].category&&2===e.details.parameters[1].category?n.push(e):t=!0}))},r=(e,t=0)=>{t>y.maxTypeRecursionCount||((0,y.isClass)(e)&&y.TypeBase.isInstance(e)&&(0,g.isTupleClass)(e)?e.tupleTypeArguments&&e.tupleTypeArguments.forEach((e=>{r(e.type,t+1)})):(0,g.doForEachSubtype)(e,(e=>{a([e])})))};return(0,g.doForEachSubtype)(e,(e=>{r(e)})),t?void 0:n}(l.type),c=!!t.isIncomplete||!!l.isIncomplete;if(p)return t=>{const r=S(e,t,p,o,a,!1,n);return(0,y.isNever)(r)?{type:S(e,t,p,o,a,!0,n),isIncomplete:c}:{type:r,isIncomplete:c}};if(c)return e=>({type:e,isIncomplete:!0})}}}if(1===n.arguments.length){const r=n.arguments[0].valueExpression;if(c.isMatchingExpression(t,r)){const t=e.getTypeOfExpression(n.leftExpression,2),r=t.type;if((0,y.isFunction)(r)&&"callable"===r.details.builtInName)return r=>{let s=j(e,r,a,n,!1);return a&&(0,y.isNever)(s)&&(s=j(e,r,a,n,!0)),{type:s,isIncomplete:!!t.isIncomplete}}}}if(1===n.arguments.length&&!n.arguments[0].name&&c.isMatchingExpression(t,n.arguments[0].valueExpression)){const t=e.getTypeOfExpression(n.leftExpression,2),r=t.type;if((0,y.isInstantiableClass)(r)&&y.ClassType.isBuiltIn(r,"bool"))return n=>({type:b(e,n,a),isIncomplete:!!t.isIncomplete})}if(n.arguments.length>=1){const r=n.arguments[0].valueExpression;if(c.isMatchingExpression(t,r)){let t=!1;const r=e=>e.details.declaredReturnType&&(0,y.isClassInstance)(e.details.declaredReturnType)&&y.ClassType.isBuiltIn(e.details.declaredReturnType,["TypeGuard","TypeIs"]),s=e.getTypeOfExpression(n.leftExpression,2),i=s.type;if(((0,y.isFunction)(i)&&r(i)||(0,y.isOverloadedFunction)(i)&&y.OverloadedFunctionType.getOverloads(i).some((e=>r(e)))||(0,y.isClassInstance)(i))&&(t=!0),t){const t=e.getTypeOfExpression(n),r=t.type;if((0,y.isClassInstance)(r)&&y.ClassType.isBuiltIn(r,"bool")&&r.typeGuardType){const n=!!r.isStrictTypeGuard,i=r.typeGuardType,o=!!s.isIncomplete||!!t.isIncomplete;return t=>({type:v(e,t,i,a,n),isIncomplete:o})}}}}}if(c.isMatchingExpression(t,n))return t=>({type:b(e,t,a),isIncomplete:!1});const s=function(e,t,n,a,r){if(38!==n.nodeType||38!==t.nodeType||n===t)return;const s=T(e,n,n,!0);if(!s||1!==s.length||1!==s[0].type)return;const i=T(e,t,n,!1);if(!i)return;let l=[];i.length>1&&(l=i.filter((t=>e.isNodeReachable(n,t.node)&&e.isNodeReachable(t.node,s[0].node))));if(0!==l.length)return;const p=s[0].inferredTypeSource;if(!p||c.isNodeContainedWithin(n,p)||!(0,o.isExpressionNode)(p))return;return f(e,t,p,a,r)}(e,t,n,a,r);return s||(38===t.nodeType&&55===n.nodeType&&38===n.operator?f(e,t,n.expression,!a,r):void 0)}function T(e,t,n,a){const r=(0,d.getScopeForNode)(t);if(2!==(null==r?void 0:r.type)&&4!==(null==r?void 0:r.type))return;const s=r.lookUpSymbol(t.value);if(!s)return;const i=s.getDeclarations();if(a&&i.length>1)return;if(0===i.length||i.some((e=>1!==e.type&&2!==e.type)))return;let o;if(i.some((e=>{const t=2===e.type?e.node.name:e.node,n=c.getExecutionScopeNode(t);return!(!o||n===o)||(o=n,!1)})))return;const l=i.filter((t=>e.isNodeReachable(n,t.node)));return l.length>0?l:void 0}function v(e,t,n,a,r){return r?(0,g.mapSubtypes)(t,(t=>{if(a)return(0,g.mapSubtypes)(n,(n=>{if((0,y.isTypeSame)(t,n,{ignorePseudoGeneric:!0,treatAnySameAsUnknown:!0}))return t;const a=e.assignType(n,t),r=e.assignType(t,n);return a?r?(0,g.containsAnyOrUnknown)(n,!0)?t:n:t:r?n:void 0}));{let a=!1;return(0,y.isAnyOrUnknown)(t)||(0,g.doForEachSubtype)(n,(n=>{if((0,y.isTypeSame)(t,n,{ignorePseudoGeneric:!0,treatAnySameAsUnknown:!0}))a=!0;else{const r=e.assignType(n,t),s=e.assignType(t,n);if(r&&!(0,y.isAnyOrUnknown)(n))if(s){const e=(0,g.containsAnyOrUnknown)(t,!0),r=(0,g.containsAnyOrUnknown)(n,!0);!e&&r&&(a=!0)}else a=!0}})),a?void 0:t}})):a?n:t}function b(e,t,n){return(0,g.mapSubtypes)(t,(t=>{if(n){if(e.canBeTruthy(t))return e.removeFalsinessFromType(t)}else if(e.canBeFalsy(t))return e.removeTruthinessFromType(t)}))}function _(e,t,n,a){return e.mapSubtypesExpandTypeVars(t,void 0,(t=>{const r=(0,g.getSpecializedTupleType)(t);if(!r||(0,g.isUnboundedTupleClass)(r)||!r.tupleTypeArguments)return t;const s=r.tupleTypeArguments.length;if(a<0||a>=s)return t;const i=e.makeTopLevelTypeVarsConcrete(r.tupleTypeArguments[a].type);if(n){if(!e.assignType(i,e.getNoneType()))return}else if((0,g.isNoneInstance)(i))return;return t}))}function C(e,t,n){const a=(0,g.mapSubtypes)(t,(e=>(0,g.transformPossibleRecursiveTypeAlias)(e)));let r=!1;const s=e.mapSubtypesExpandTypeVars(a,void 0,((t,a)=>{if((0,y.isAnyOrUnknown)(t))return t;const s=(0,y.isTypeVar)(a)&&0===a.details.constraints.length?a:t;return(0,y.isClassInstance)(t)&&y.ClassType.isBuiltIn(t,"object")?(r=!0,n?(0,g.addConditionToType)(e.getNoneType(),t.condition):s):(0,g.isNoneInstance)(t)===n?(r=!0,(0,y.isTypeVar)(s)&&s.details.isSynthesizedSelf?s:t):void 0}));return n&&r?(0,g.mapSubtypes)(s,(e=>(0,g.isNoneInstance)(e)?e:void 0)):s}function I(e,t,n){const a=(0,g.mapSubtypes)(t,(e=>(0,g.transformPossibleRecursiveTypeAlias)(e)));return e.mapSubtypesExpandTypeVars(a,void 0,((t,a)=>{if((0,y.isAnyOrUnknown)(t))return t;const r=(0,y.isTypeVar)(a)&&0===a.details.constraints.length?a:t;if((0,y.isClassInstance)(t)&&y.ClassType.isBuiltIn(t,"object"))return n?(0,g.addConditionToType)(e.getNoneType(),t.condition):r;return((0,y.isClassInstance)(t)&&y.ClassType.isBuiltIn(t,["EllipsisType","ellipsis"]))===n?t:void 0}))}function k(e,t,n,a,r,s){return(0,y.isTypeVar)(a)?(0,y.isTypeSame)((0,g.convertToInstance)(a),t):!r.includeSubclasses&&(!!y.ClassType.isDerivedFrom(n,r)||(!!(s&&y.ClassType.isProtocolClass(r)&&e.assignType(r,n))||!(!y.ClassType.isBuiltIn(r,"dict")||!y.ClassType.isTypedDictClass(n))))}function w(e,t,n,a){return!!y.ClassType.isDerivedFrom(n,t)||!!(a&&y.ClassType.isProtocolClass(t)&&e.assignType(t,n))}function S(e,t,n,a,r,s,i){let o=(0,g.mapSubtypes)(t,(e=>(0,g.transformPossibleRecursiveTypeAlias)(e)));o=e.expandPromotionTypes(i,o);const d=(t,o,d,u)=>{const m=[];let f=!1,T=!1;for(const u of n){let n=e.makeTopLevelTypeVarsConcrete(u);if((0,y.isInstantiableClass)(n)){n.typeArguments&&!n.isTypeArgumentExplicit&&(n=(0,g.specializeWithUnknownTypeArgs)(y.ClassType.cloneForSpecialization(n,void 0,!1)));const v=k(e,t,o,u,n,a),b=w(e,o,n,a);if(v&&(f=!0),b&&v&&!y.ClassType.isSameGenericClass(o,n)&&(T=!0),(0,y.isTypeVar)(t)&&(0,y.isTypeVar)(u)&&(T=!0),r)if(v)(0,y.isTypeVar)(t)&&t.details.isSynthesizedSelf?m.push((0,g.addConditionToType)(t,d)):m.push((0,g.addConditionToType)(o,d));else if(b){if(e.assignType(o,n,void 0,void 0,void 0,50176)){let t=u;if((0,y.isClass)(u)&&(y.ClassType.isSpecialBuiltIn(u)||u.details.typeParameters.length>0)){const n=new h.TypeVarContext((0,g.getTypeVarScopeId)(u)),a=y.ClassType.cloneForSpecialization(u,void 0,!1);(0,p.populateTypeVarContextBasedOnExpectedType)(e,a,o,n,void 0,i.start)&&(t=(0,g.applySolvedTypeVars)(a,n,{unknownIfNotFound:!0}))}m.push((0,g.addConditionToType)(t,d))}}else if(s&&!y.ClassType.isFinal(o)&&!y.ClassType.isFinal(n)){const r=`<subclass of ${o.details.name} and ${n.details.name}>`,s=(0,l.getFileInfo)(i);let p=o.details.effectiveMetaclass;n.details.effectiveMetaclass&&(p&&!e.assignType(p,n.details.effectiveMetaclass)||(p=n.details.effectiveMetaclass));let d=y.ClassType.createInstantiable(r,c.getClassFullName(i,s.moduleName,r),s.moduleName,s.fileUri,0,c.getTypeSourceId(i),void 0,p,o.details.docString);d.details.baseClasses=[y.ClassType.cloneAsInstantiable(o),n],(0,g.computeMroLinearization)(d),d=(0,g.addConditionToType)(d,n.condition),(0,y.isTypeVar)(t)&&!t.details.isParamSpec&&0===t.details.constraints.length&&(d=(0,g.addConditionToType)(d,[{typeVar:t,constraintIndex:0}]));let u=y.ClassType.cloneAsInstance(d);o.condition&&(u=(0,g.addConditionToType)(u,o.condition)),m.push(a?u:y.ClassType.cloneAsInstantiable(u))}}else if((0,y.isTypeVar)(u)&&y.TypeBase.isInstantiable(u))a&&y.TypeBase.isInstance(t)?(0,y.isTypeVar)(t)&&(0,y.isTypeSame)((0,g.convertToInstance)(u),t)?r?m.push(t):f=!0:r?m.push((0,g.convertToInstance)(u)):(m.push(t),T=!0):!a&&y.TypeBase.isInstantiable(t)&&((0,y.isTypeVar)(t)&&(0,y.isTypeSame)(u,t)?r&&m.push(t):r?m.push(u):(m.push(t),T=!0));else if((0,y.isFunction)(u)&&a){let n=!1;(0,y.isClass)(o)&&(n=!!y.TypeBase.isInstantiable(t)||!!(0,g.lookUpClassMember)(o,"__call__",16)),n?r?m.push(t):f=!0:e.assignType(o,u,void 0,void 0,void 0,32768)&&r&&m.push(u)}}return r||f&&!T||m.push(a?(0,g.convertToInstantiable)(u):u),a?m.map((e=>(0,g.convertToInstance)(e))):m.map((e=>(0,y.isInstantiableClass)(e)?(0,g.convertToInstantiable)((0,g.convertToInstance)(e)):e))},u=()=>n.some((e=>!!(0,g.isNoneTypeClass)(e)||(0,y.isInstantiableClass)(e)&&y.ClassType.isBuiltIn(e,"NoneType"))),m=[],f=[],T=e.mapSubtypesExpandTypeVars(o,void 0,((t,s)=>{const o=(0,g.getTypeCondition)(t)?t:s,l=(0,g.isMetaclassInstance)(t);if(r&&(0,y.isAnyOrUnknown)(t))return a?m.push((0,y.combineTypes)(n.map((e=>(0,g.convertToInstance)(e))))):m.push((0,y.combineTypes)(n.map((e=>(0,g.convertToInstantiable)((0,g.convertToInstance)(e)))))),void f.push(t);if(a){if((0,g.isNoneInstance)(t))return u()===r?t:void 0;if(((0,y.isModule)(t)||(0,y.isClassInstance)(t)&&y.ClassType.isBuiltIn(t,"ModuleType"))&&r){const t=n.filter((t=>{const n=e.makeTopLevelTypeVarsConcrete(t);return(0,y.isInstantiableClass)(n)&&y.ClassType.isProtocolClass(n)}));if(t.length>0)return(0,g.convertToInstance)((0,y.combineTypes)(t))}if((0,y.isClassInstance)(t))return(0,y.combineTypes)(d((0,g.convertToInstance)(s),y.ClassType.cloneAsInstantiable(t),(0,g.getTypeCondition)(t),o));if(((0,y.isFunction)(t)||(0,y.isOverloadedFunction)(t))&&a)return(0,y.combineTypes)(((t,a)=>{const s=[];if(r)for(const r of n){const n=e.makeTopLevelTypeVarsConcrete(r);e.assignType(t,(0,g.convertToInstance)(n),void 0,void 0,void 0,1024)&&((0,y.isFunction)(r)?s.push(a):s.push((0,g.convertToInstance)(r)))}else n.some((n=>{const a=e.makeTopLevelTypeVarsConcrete(n);return!((0,y.isClass)(a)&&!y.ClassType.isProtocolClass(a))&&e.assignType(t,(0,g.convertToInstance)(a))}))||s.push(a);return s})(t,(0,g.convertToInstance)(s)));if((0,y.isInstantiableClass)(t)||l){const e=n.some((e=>(0,g.isInstantiableMetaclass)(e)));return r?e?o:void 0:e?void 0:o}}else{if((0,g.isNoneTypeClass)(t))return u()===r?t:void 0;if((0,y.isClass)(t)){if((0,y.isInstantiableClass)(t))return(0,y.combineTypes)(d(s,t,(0,g.getTypeCondition)(t),o));if((0,g.isMetaclassInstance)(t))return(0,y.combineTypes)(((t,a)=>{const s=[];let i=!1,o=!1;for(const a of n){const n=e.makeTopLevelTypeVarsConcrete(a);if((0,y.isInstantiableClass)(n)){const l=n.details.effectiveMetaclass;if(l&&(0,y.isInstantiableClass)(l)){let n=e.assignType(t,y.ClassType.cloneAsInstance(l));y.ClassType.isBuiltIn(l,"type")&&!l.isTypeArgumentExplicit&&(y.ClassType.isBuiltIn(t,"type")||(n=!1)),n&&(r?(s.push(a),i=!0):(0,y.isTypeSame)(t,l)&&!l.includeSubclasses||(s.push(t),o=!0))}else s.push(t),o=!0}else s.push(t),o=!0}return r||i&&!o||s.push(a),s.map((e=>(0,y.isInstantiableClass)(e)?(0,g.convertToInstantiable)((0,g.convertToInstance)(e)):e))})(t,o))}if(l){const n=e.getBuiltInObject(i,"object");if(n&&(0,y.isClassInstance)(n))return(0,y.combineTypes)(d((0,g.convertToInstantiable)(s),y.ClassType.cloneAsInstantiable(n),(0,g.getTypeCondition)(t),o))}}return r?void 0:o}));return(0,y.isNever)(T)&&m.length>0?(0,y.combineTypes)(m):(0,y.isNever)(T)&&f.length>0?(0,y.combineTypes)(f):T}function A(e,t,n,a,r){return(0,g.mapSubtypes)(t,(t=>{const s=e.makeTopLevelTypeVarsConcrete(t);if(!(0,y.isClassInstance)(s)||!(0,g.isTupleClass)(s)||!s.tupleTypeArguments)return t;if(s.tupleTypeArguments.some((e=>(0,y.isUnpackedVariadicTypeVar)(e.type))))return t;if(!s.tupleTypeArguments.some((e=>e.isUnbounded))){return(r?s.tupleTypeArguments.length<n:s.tupleTypeArguments.length===n)===a?t:void 0}const i=n-s.tupleTypeArguments.length+1;if(!r)return i<0?a?void 0:t:a?x(s,i,!1):t;if(i>32)return t;if(a){if(i<1)return;const e=[];for(let t=0;t<i;t++)e.push(x(s,t,!1));return(0,y.combineTypes)(e)}return x(s,i,!0)}))}function x(e,t,n){const a=[];return e.tupleTypeArguments.forEach((e=>{if(e.isUnbounded){for(let n=0;n<t;n++)a.push({isUnbounded:!1,type:e.type});n&&a.push(e)}else a.push(e)})),(0,g.specializeTupleClass)(e,a)}function P(e,t,n,a){if(a){const a=N(n);return a?D(e,t,e.makeTopLevelTypeVarsConcrete(a)):t}if(!(0,y.isClassInstance)(n)||!y.ClassType.isBuiltIn(n,"tuple")||!n.tupleTypeArguments)return t;const r=[];return n.tupleTypeArguments.forEach((e=>{e.isUnbounded||((0,g.isNoneInstance)(e.type)||(0,y.isClassInstance)(e.type)&&(0,g.isLiteralType)(e.type))&&r.push(e.type)})),0===r.length?t:(0,g.mapSubtypes)(t,(t=>{if(t=e.makeTopLevelTypeVarsConcrete(t),(0,y.isClassInstance)(t)&&void 0===t.literalValue){const n=L(e,t);if(n&&n.length>0)return(0,y.combineTypes)(n.filter((e=>!r.some((t=>(0,y.isTypeSame)(t,e))))))}if(!r.some((e=>(0,y.isTypeSame)(e,t))))return t}))}function N(e){if(!(0,y.isClassInstance)(e)||!y.ClassType.isBuiltIn(e,["list","set","frozenset","deque","tuple","dict","defaultdict","OrderedDict"]))return;if(!e.typeArguments||e.typeArguments.length<1)return;let t=e.typeArguments[0];return(0,g.isTupleClass)(e)&&e.tupleTypeArguments&&(t=(0,y.combineTypes)(e.tupleTypeArguments.map((e=>e.type)))),t}function D(e,t,n){let a=!0;const r=e.stripLiteralValue(n),s=e.mapSubtypesExpandTypeVars(t,void 0,(t=>(0,y.isAnyOrUnknown)(t)||(0,y.isClassInstance)(t)&&y.ClassType.isBuiltIn(t,"type")?(a=!1,t):e.assignType(n,t)?t:e.assignType(r,t)?(0,g.mapSubtypes)(n,(e=>{if((0,y.isClassInstance)(e)&&(0,y.isSameWithoutLiteralValue)(t,e))return e})):void 0)),i=e.mapSubtypesExpandTypeVars(n,void 0,(n=>(0,y.isAnyOrUnknown)(n)?(a=!1,t):(0,y.isClassInstance)(t)&&y.ClassType.isBuiltIn(t,["dict","Mapping"])&&(0,y.isClassInstance)(n)&&y.ClassType.isTypedDictClass(n)||e.assignType(t,n)?n:void 0));return a?(0,y.combineTypes)([s,i]):t}function F(e,t,n,a){return e.mapSubtypesExpandTypeVars(t,void 0,((t,r)=>{var s,i;if((0,y.isParamSpec)(r))return r;if((0,y.isClassInstance)(t)&&y.ClassType.isTypedDictClass(t)){const r=(0,m.getTypedDictMembersForClass)(e,t,!0),o=null!==(s=r.knownItems.get(n.literalValue))&&void 0!==s?s:r.extraItems;if(a){if(!o)return;if(o.isRequired||o.isProvided)return t;const e=new Map(null!==(i=t.typedDictNarrowedEntries)&&void 0!==i?i:[]);return e.set(n.literalValue,{valueType:o.valueType,isReadOnly:o.isReadOnly,isRequired:!1,isProvided:!0}),y.ClassType.cloneAsInstance(y.ClassType.cloneForNarrowedTypedDictEntries(y.ClassType.cloneAsInstantiable(t),e))}return void 0!==o&&(o.isRequired||o.isProvided)?void 0:t}return t}))}function E(e,t,n,a,r){let s=!0;const i=(0,g.mapSubtypes)(t,(t=>{if((0,y.isClassInstance)(t)&&y.ClassType.isTypedDictClass(t)){const s=(0,m.getTypedDictMembersForClass)(e,t).knownItems.get(n.literalValue);if(s&&(0,g.isLiteralTypeOrUnion)(s.valueType)){if(r){let n=!1;return(0,g.doForEachSubtype)(a,(t=>{e.assignType(s.valueType,t)&&(n=!0)})),n?t:void 0}{let n=!1;return(0,g.doForEachSubtype)(a,(t=>{e.assignType(t,s.valueType)||(n=!0)})),n?t:void 0}}}return s=!1,t}));return s?i:t}function M(e,t,n,a,r){let s=!0;const i=(0,g.mapSubtypes)(t,(t=>{var i;if((0,y.isClassInstance)(t)&&y.ClassType.isTupleClass(t)&&!(0,g.isUnboundedTupleClass)(t)&&"number"==typeof n.literalValue&&(0,y.isClassInstance)(a)){const s=n.literalValue;if(t.tupleTypeArguments&&s>=0&&s<t.tupleTypeArguments.length){const n=null===(i=t.tupleTypeArguments[s])||void 0===i?void 0:i.type;if(n&&(0,g.isLiteralTypeOrUnion)(n))return r?e.assignType(n,a)?t:void 0:e.assignType(a,n)?void 0:t}}return s=!1,t}));return s?i:t}function O(e,t,n,a,r){return(0,g.mapSubtypes)(t,(t=>{var s;let i;if((0,y.isClassInstance)(t)?i=(0,g.lookUpObjectMember)(t,n):(0,y.isInstantiableClass)(t)&&(i=(0,g.lookUpClassMember)(t,n)),i&&i.isTypeDeclared){let n=e.getTypeOfMember(i);if((0,y.isClassInstance)(t)&&(0,y.isClassInstance)(n)&&(0,g.isProperty)(n)){const e=null===(s=n.fgetInfo)||void 0===s?void 0:s.methodType;if(e&&e.details.declaredReturnType){const t=y.FunctionType.getSpecializedReturnType(e);t&&(n=t)}}if((0,g.isLiteralTypeOrUnion)(n,!0))return r?e.assignType(n,a)?t:void 0:e.assignType(a,n)?void 0:t}return t}))}function z(e,t,n,a){return(0,g.mapSubtypes)(t,(t=>{let r;if((0,y.isClassInstance)(t)?r=(0,g.lookUpObjectMember)(t,n):(0,y.isInstantiableClass)(t)&&(r=(0,g.lookUpClassMember)(t,n)),r&&r.isTypeDeclared){const t=e.makeTopLevelTypeVarsConcrete(e.getTypeOfMember(r));let n=!0;if(a?(0,g.doForEachSubtype)(t,(t=>{t=e.makeTopLevelTypeVarsConcrete(t),((0,g.isProperty)(t)||(0,g.isMaybeDescriptorInstance)(t))&&(n=!1),((0,y.isAnyOrUnknown)(t)||(0,g.isNoneInstance)(t)||(0,y.isNever)(t))&&(n=!1)})):n=(0,g.isNoneInstance)(t),n)return}return t}))}function V(e,t,n,a){return e.mapSubtypesExpandTypeVars(t,void 0,((e,t)=>{if((0,y.isClassInstance)(e)){const t=y.ClassType.isDerivedFrom(n,y.ClassType.cloneAsInstantiable(e));if(a){if(t)return y.ClassType.isSameGenericClass(e,n)?e:(0,g.addConditionToType)(y.ClassType.cloneAsInstance(n),e.condition);if(!n.includeSubclasses)return}else if(!n.includeSubclasses){if(t&&y.ClassType.isFinal(e))return;return e}}else{if((0,g.isNoneInstance)(e))return a?void 0:e;if((0,y.isAnyOrUnknown)(e))return a?y.ClassType.cloneAsInstance(n):e}return t}))}function U(e,t,n,a){return(0,g.mapSubtypes)(t,(t=>{const r=e.makeTopLevelTypeVarsConcrete(t);if(a){if((0,g.isNoneInstance)(r))return;if((0,y.isClassInstance)(r)&&y.TypeBase.isInstance(t))return y.ClassType.isBuiltIn(r,"type")?n:void 0;if((0,y.isInstantiableClass)(r)&&y.ClassType.isFinal(r)&&!y.ClassType.isSameGenericClass(r,n)&&!k(e,t,r,n,n,!1))return}else if((0,y.isInstantiableClass)(r)&&y.ClassType.isSameGenericClass(n,r)&&y.ClassType.isFinal(n))return;return t}))}function R(e,t,n,a,r){return(0,g.mapSubtypes)(t,(t=>{if(t=e.makeTopLevelTypeVarsConcrete(t),(0,y.isAnyOrUnknown)(t))return a?n:t;if((0,y.isClassInstance)(t)&&y.ClassType.isSameGenericClass(n,t)){if(void 0!==t.literalValue){const e=y.ClassType.isLiteralValueSame(t,n);if(e&&!a||!e&&a)return;return t}if(a)return n;{const a=L(e,t);if(a&&a.length>0)return(0,y.combineTypes)(a.filter((e=>!y.ClassType.isLiteralValueSame(e,n))))}}else if(a&&(r||(0,g.isNoneInstance)(t)))return;return t}))}function L(e,t){if(y.ClassType.isBuiltIn(t,"bool"))return[y.ClassType.cloneWithLiteral(t,!0),y.ClassType.cloneWithLiteral(t,!1)];if(y.ClassType.isEnumClass(t)){if(t.details.baseClasses.some((e=>(0,y.isClass)(e)&&y.ClassType.isBuiltIn(e,"Flag"))))return;const n=[];return y.ClassType.getSymbolTable(t).forEach((a=>{if(!a.isIgnoredForProtocolMatch()){const r=e.getEffectiveTypeOfSymbol(a);(0,y.isClassInstance)(r)&&y.ClassType.isSameGenericClass(t,r)&&void 0!==r.literalValue&&n.push(r)}})),n}}function j(e,t,n,a,r){return e.mapSubtypesExpandTypeVars(t,void 0,(e=>{switch(e.category){case 4:case 5:return n?e:void 0;case 7:return n?void 0:e;case 6:if((0,g.isNoneInstance)(e))return n?void 0:e;if(y.TypeBase.isInstantiable(e))return n?e:void 0;if((0,g.lookUpClassMember)(e,"__call__",16))return n?e:void 0;if(!n)return e;if(r){const t=`<callable subtype of ${e.details.name}>`,n=(0,l.getFileInfo)(a);let r=y.ClassType.createInstantiable(t,c.getClassFullName(a,n.moduleName,t),n.moduleName,n.fileUri,0,c.getTypeSourceId(a),void 0,e.details.effectiveMetaclass,e.details.docString);r.details.baseClasses=[y.ClassType.cloneAsInstantiable(e)],(0,g.computeMroLinearization)(r),r=(0,g.addConditionToType)(r,e.condition);const s=y.FunctionType.createSynthesizedInstance("__call__"),i={category:0,name:"self",type:y.ClassType.cloneAsInstance(r),hasDeclaredType:!0};return y.FunctionType.addParameter(s,i),y.FunctionType.addDefaultParameters(s),s.details.declaredReturnType=y.UnknownType.create(),y.ClassType.getSymbolTable(r).set("__call__",u.Symbol.createWithType(4,s)),y.ClassType.cloneAsInstance(r)}return;default:return e}}))}t.getTypeNarrowingCallback=f,t.isIsinstanceFilterSuperclass=k,t.isIsinstanceFilterSubclass=w,t.getElementTypeForContainerNarrowing=N,t.narrowTypeForContainerElementType=D,t.narrowTypeForDiscriminatedDictEntryComparison=E,t.narrowTypeForDiscriminatedTupleComparison=M,t.narrowTypeForDiscriminatedLiteralFieldComparison=O,t.enumerateLiteralsForType=L;class B{}t.Animal=B;t.Dog=class extends B{};class q{}t.Plant=q;class W extends q{}t.Tree=W,t.func1=function(e){console.log(e)}},3388:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.printLiteralValue=t.printLiteralValueTruncated=t.isLiteralValueTruncated=t.printObjectTypeForClass=t.printFunctionParts=t.printType=void 0;const i=n(28040),o=n(83181),l=n(92488),p=s(n(28340)),c=n(8312),d=n(808),u=/'/g,m=/\\"/g;t.printType=function(e,t,n){const a=new w(t,n);return a.build(e),T(e,t,n,a,[],0)},t.printFunctionParts=function(e,t,n){const a=new w(t,n);return a.build(e),_(e,t,n,a,[],0)},t.printObjectTypeForClass=function(e,t,n){const a=new w(t,n);return a.build(e),b(e,t,n,a,[],0)};const y=50;function g(e){return"string"==typeof e.literalValue&&e.literalValue.length>y}function h(e){return"bytes"===e.details.name?"bytes":((0,o.assert)("str"===e.details.name),"LiteralString")}function f(e,t="'"){const n=e.literalValue;if(void 0===n)return"";let a;if("string"==typeof n){let r=n;if(n.length>y&&(r=n.substring(0,y)+"…"),"bytes"===e.details.name){let e="";for(let t=0;t<r.length;t++){const n=r.substring(t,t+1),a=n.charCodeAt(0);e+=a>=20&&a<=126?34===a?"\\"+n:n:`\\x${(a>>4&15).toString(16)}${(15&a).toString(16)}`}a=`b"${e}"`}else a=JSON.stringify(r).toString(),'"'!==t&&(a=`'${a.substring(1,a.length-1).replace(m,'"').replace(u,"\\'")}'`)}else"boolean"==typeof n?a=n?"True":"False":n instanceof c.EnumLiteral?a=`${n.className}.${n.itemName}`:"bigint"==typeof n?(a=n.toString(),a.endsWith("n")&&(a=a.substring(0,a.length-1))):a=n.toString();return a}function T(e,t,n,a,r,s){const i=t,o=0!=(16&t);if(t&=-145,s>c.maxTypeRecursionCount)return 256&t?"Any":"<Recursive>";if(s++,e.typeAliasInfo){let i=!0;if((0==(32&t)||r.find((t=>t===e)))&&(i=!1),!i)try{r.push(e);let i=0!=(4096&t)?e.typeAliasInfo.fullName:e.typeAliasInfo.name;a.isUnique(i)||(i=e.typeAliasInfo.fullName);const o=e.typeAliasInfo.typeParameters;if(o&&o.length>0){let l;e.typeAliasInfo.typeArguments?(0==(2&t)||e.typeAliasInfo.typeArguments.some((e=>!(0,c.isUnknown)(e))))&&(l=[],e.typeAliasInfo.typeArguments.forEach(((e,i)=>{const p=i<o.length?o[i]:o[o.length-1];(0,c.isVariadicTypeVar)(p)&&(0,c.isClassInstance)(e)&&(0,d.isTupleClass)(e)&&e.tupleTypeArguments&&e.tupleTypeArguments.every((e=>!e.isUnbounded))?e.tupleTypeArguments.forEach((e=>{l.push(T(e.type,t,n,a,r,s))})):l.push(T(e,t,n,a,r,s))}))):(0==(2&t)||o.some((e=>!(0,c.isUnknown)(e))))&&(l=[],o.forEach((e=>{l.push(T(e,t,n,a,r,s))}))),l&&(0===l.length?i+="[()]":i+=`[${l.join(", ")}]`)}if(9!==e.category)return i}finally{r.pop()}}if(r.find((t=>{var n;return t===e||void 0!==t.typeAliasInfo&&t.typeAliasInfo.fullName===(null===(n=e.typeAliasInfo)||void 0===n?void 0:n.fullName)}))||r.length>c.maxTypeRecursionCount){if((0,c.isTypeVar)(e)&&e.details.isSynthesized&&e.details.recursiveTypeAliasName)return e.details.recursiveTypeAliasName;if(e.typeAliasInfo){if(!e.typeAliasInfo.typeParameters){let n=0!=(4096&t)?e.typeAliasInfo.fullName:e.typeAliasInfo.name;return a.isUnique(n)||(n=e.typeAliasInfo.fullName),n}try{return r.push(e),T(e,-33&t,n,a,r,s)}finally{r.pop()}}return"..."}try{r.push(e);const l=0==(320&t),p=e=>void 0!==e.condition&&l?"*":"";switch(e.category){case 0:return 256&t?"Any":"Unbound";case 1:return 257&t?"Any":"Unknown";case 7:return 256&t?"Any":`Module("${e.moduleName}")`;case 6:if(c.TypeBase.isInstance(e))return void 0!==e.literalValue?g(e)&&0!=(256&t)?h(e):`Literal[${f(e)}]`:`${b(e,t,n,a,r,s)}${p(e)}`;{let i;return i=void 0!==e.literalValue?g(e)&&0!=(256&t)?h(e):`Literal[${f(e)}]`:b(e,t,n,a,r,s),`${I(e,i)}${p(e)}`}case 4:if(c.TypeBase.isInstantiable(e)){return`type[${v(c.FunctionType.cloneAsInstance(e),t,n,a,r,s)}]`}return v(e,i,n,a,r,s);case 5:{const i=c.OverloadedFunctionType.getOverloads(e).map((e=>T(e,t,n,a,r,s)));return 256&t?"Callable[..., Any]":1===i.length?i[0]:`Overload[${i.join(", ")}]`}case 8:{const i=new Set,l=new Set,p=8&t?128|t:t;if(0==(32&t)&&e.typeAliasSources)for(const t of e.typeAliasSources){let o=!0,u=!0;const m=new Set;for(const n of t.subtypes){let t=0,a=!1;const r=(0,d.convertToInstance)(n);for(const n of e.subtypes){if((0,c.isTypeSame)(r,n)){i.has(t)||(u=!1),m.add(t),a=!0;break}t++}if(!a){o=!1;break}}o&&!u&&(l.add(T(t,p,n,a,r,s)),m.forEach((e=>i.add(e))))}const u=e.subtypes.findIndex((e=>(0,d.isNoneInstance)(e)));if(u>=0&&!i.has(u)){const i=(0,d.removeNoneFromUnion)(e);if((0,c.isNever)(i))return"None";const l=T(i,p,n,a,r,s);if(8&t){const e=l+" | None";return o?`(${e})`:e}return"Optional["+l+"]"}const m=new Set,y=new Set;(0,d.doForEachSubtype)(e,((e,o)=>{i.has(o)||((0,c.isClassInstance)(e)&&void 0!==e.literalValue?g(e)&&0!=(256&t)?l.add(h(e)):m.add(f(e)):(0,c.isInstantiableClass)(e)&&void 0!==e.literalValue?g(e)&&0!=(256&t)?l.add(`type[${h(e)}]`):y.add(f(e)):l.add(T(e,p,n,a,r,s)))}));const v=[];if(l.forEach((e=>v.push(e))),m.size>0){const e=[];m.forEach((t=>e.push(t))),v.push(`Literal[${e.join(", ")}]`)}if(y.size>0){const e=[];y.forEach((t=>e.push(t))),v.push(`type[Literal[${e.join(", ")}]]`)}if(1===v.length)return v[0];if(8&t){const e=v.join(" | ");return o?`(${e})`:e}return`Union[${v.join(", ")}]`}case 9:{if(e.details.isSynthesized){if(e.details.recursiveTypeAliasName)return 0!=(32&t)&&e.details.boundType?T(c.TypeBase.isInstance(e)?(0,d.convertToInstance)(e.details.boundType):e.details.boundType,t,n,a,r,s):e.details.recursiveTypeAliasName;if(e.details.isSynthesizedSelf&&e.details.boundType){let i=T(e.details.boundType,-33&t,n,a,r,s);return(0,c.isAnyOrUnknown)(e.details.boundType)||(i=256&t?"Self":`Self@${i}`),c.TypeBase.isInstantiable(e)?`${I(e,i)}`:i}return 0!=(257&t)?"Any":"Unknown"}if(e.details.isParamSpec){const n=k(e,0!=(256&t));return e.paramSpecAccess?`${n}.${e.paramSpecAccess}`:n}let i=k(e,0!=(256&t));if(e.isVariadicUnpacked&&(i=C(i,t)),e.isVariadicInUnion&&(i=`Union[${i}]`),c.TypeBase.isInstantiable(e)&&(i=`${I(e,i)}`),!e.details.isVariadic&&0!=(2048&t)){const t=function(e){var t;const n=null!==(t=e.computedVariance)&&void 0!==t?t:e.details.declaredVariance;if(2===n)return"invariant";if(3===n)return"covariant";if(4===n)return"contravariant";return""}(e);t&&(i=`${i} (${t})`)}return i}case 3:return e.isNoReturn?"NoReturn":"Never";case 2:return e.isEllipsis?"...":"Any"}return""}finally{r.pop()}}function v(e,t,n,a,r,s){if(256&t){let i=!1;if(0===e.details.parameters.length)i=!0;else if(e.details.parameters.every((e=>0===e.category))){e.details.parameters[e.details.parameters.length-1].name||(i=!0)}const o=n(e);let l="Any";if(o&&(l=T(o,t,n,a,r,s)),i){const i=[];return e.details.parameters.forEach(((o,l)=>{if(o.name){const o=c.FunctionType.getEffectiveParameterType(e,l);r.length<c.maxTypeRecursionCount?i.push(T(o,t,n,a,r,s)):i.push("Any")}})),e.details.paramSpec?i.length>0?`Callable[Concatenate[${i.join(", ")}, ${e.details.paramSpec.details.name}], ${l}]`:`Callable[${e.details.paramSpec.details.name}, ${l}]`:`Callable[[${i.join(", ")}], ${l}]`}return`Callable[..., ${l}]`}{const i=_(e,t,n,a,r,s),o=`(${i[0].join(", ")})`;if(c.FunctionType.isParamSpecValue(e))return 1===i[0].length&&"..."===i[0][0]?i[0][0]:o;const l=`${o} -> ${i[1]}`;return 0!=(128&t)?`(${l})`:l}}function b(e,t,n,a,r,s){var o,l;let p=e.aliasName;if(p||(p=0!=(4096&t)?e.details.fullName:e.details.name),c.ClassType.isBuiltIn(e,"NoneType")&&(p="None"),a.isUnique(p)||(p=e.details.fullName),!c.ClassType.isPseudoGenericClass(e)){const d=c.ClassType.getTypeParameters(e),u=d.length>0?d[d.length-1]:void 0,m=!!u&&u.details.isVariadic,y=null!==(o=e.tupleTypeArguments)&&void 0!==o?o:null===(l=e.typeArguments)||void 0===l?void 0:l.map((e=>({type:e,isUnbounded:!1})));if(y)if(y.length>0){const o=[];let l=!0;y.forEach(((e,p)=>{const u=p<d.length?d[p]:void 0;if(u&&u.details.isVariadic&&(0,c.isClassInstance)(e.type)&&c.ClassType.isBuiltIn(e.type,"tuple")&&e.type.tupleTypeArguments)0===e.type.tupleTypeArguments.length?((0,c.isUnknown)(e.type)||(l=!1),0===p&&o.push(C("tuple[()]",t))):(0,i.appendArray)(o,e.type.tupleTypeArguments.map((e=>{(0,c.isUnknown)(e.type)||(l=!1);const i=T(e.type,t,n,a,r,s);return e.isUnbounded?C(`tuple[${i}, ...]`,t):i})));else{(0,c.isUnknown)(e.type)||(l=!1);const i=T(e.type,t,n,a,r,s);e.isUnbounded?1===y.length?o.push(i,"..."):o.push(C(`tuple[${i}, ...]`,t)):o.push(i)}})),e.isUnpacked&&(p=C(p,t)),0!=(2&t)&&l||(p+="["+o.join(", ")+"]")}else e.isUnpacked&&(p=C(p,t)),(c.ClassType.isTupleClass(e)||m)&&(p+="[()]");else e.isUnpacked&&(p=C(p,t)),d.length>0&&(0==(2&t)||d.some((e=>!(0,c.isUnknown)(e))))&&(p+="["+d.map((e=>T(e,t,n,a,r,s))).join(", ")+"]")}return e.isTypedDictPartial&&0==(256&t)&&(p=`Partial[${p}]`),p}function _(e,t,n,a,r,s){const i=[];let o=!1;e.details.parameters.forEach(((d,u)=>{if(u===e.details.parameters.length-1&&1===d.category&&(0,c.isVariadicTypeVar)(d.type)){const o=c.FunctionType.getEffectiveParameterType(e,u);if((0,c.isClassInstance)(o)&&c.ClassType.isBuiltIn(o,"tuple")&&o.tupleTypeArguments)return void o.tupleTypeArguments.forEach((e=>{const o=T(e.type,t,n,a,r,s);i.push(o)}))}if((0,l.isTypedKwargs)(d)&&1024&t&&6===d.type.category)return void d.type.details.typedDictEntries.knownItems.forEach(((e,o)=>{const l=T(e.valueType,t,n,a,r,s);i.push(`${o}: ${l}`)}));let m="";1===d.category?d.name&&d.isNameSynthesized||(m+="*"):2===d.category&&(m+="**");let y=!1;d.name&&!d.isNameSynthesized?(m+=d.name,o=!0,y=!0):256&t&&(m+=`__p${u}`,o=!0,y=!0);let g="=",h=!1;if(d.name)if(d.hasDeclaredType||d.isTypeInferred){const i=c.FunctionType.getEffectiveParameterType(e,u);let o=r.length<c.maxTypeRecursionCount?T(i,t,n,a,r,s):"";y?m+=": ":1!==d.category||(0,c.isUnpacked)(i)||(m+="*"),2===d.category&&(0,c.isUnpacked)(i)&&(o=256&t?`Unpack[${o.substring(1)}]`:"*"+o),m+=o,(0,c.isParamSpec)(i)&&(1!==d.category&&2!==d.category||(h=!0)),g=" = "}else 0==(2&t)&&(d.isNameSynthesized||(m+=": "),m+=257&t?"Any":"Unknown",g=" = ");else if(0===d.category){if(!o)return;m+="/"}if(d.hasDefault&&(d.defaultValueExpression?m+=g+p.printExpression(d.defaultValueExpression):m+=g+"..."),c.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)&&!h)if(1===d.category)m="...";else if(2===d.category)return;i.push(m)})),e.details.paramSpec&&(256&t?(i.push(`*args: ${e.details.paramSpec}.args`),i.push(`**kwargs: ${e.details.paramSpec}.kwargs`)):i.push(`**${T(e.details.paramSpec,t,n,a,r,s)}`));const d=n(e),u=r.length<c.maxTypeRecursionCount?T(d,144|t,n,a,r,s):"";return[i,u]}function C(e,t){return 512&t?`Unpack[${e}]`:`*${e}`}function I(e,t){var n;const a=(null!==(n=e.instantiableNestingLevel)&&void 0!==n?n:0)+1;for(let e=0;e<a;e++)t=`type[${t}]`;return t}function k(e,t){return t?e.details.name:c.TypeVarType.getReadableName(e)}t.isLiteralValueTruncated=g,t.printLiteralValueTruncated=h,t.printLiteralValue=f;class w{constructor(e,t){this._printTypeFlags=e,this._returnTypeCallback=t,this._map=new Map}build(e,t=[],n=0){var a;if(!(n>c.maxTypeRecursionCount)){if(n++,e.typeAliasInfo){let a=!0;if((0==(32&this._printTypeFlags)||t.find((t=>t===e)))&&(a=!1),!a){const a=0!=(4096&this._printTypeFlags)?e.typeAliasInfo.fullName:e.typeAliasInfo.name;if(this._addIfUnique(a,e,!0),e.typeAliasInfo.typeArguments){t.push(e);try{e.typeAliasInfo.typeArguments.forEach((e=>{this.build(e,t,n)}))}finally{t.pop()}}return}}try{switch(t.push(e),e.category){case 4:{e.details.parameters.forEach(((a,r)=>{const s=c.FunctionType.getEffectiveParameterType(e,r);this.build(s,t,n)}));const a=this._returnTypeCallback(e);this.build(a,t,n);break}case 5:e.overloads.forEach((e=>{this.build(e,t,n)}));break;case 6:{if(void 0!==e.literalValue)break;let a=e.aliasName;a||(a=0!=(4096&this._printTypeFlags)?e.details.fullName:e.details.name),this._addIfUnique(a,e),c.ClassType.isPseudoGenericClass(e)||(e.tupleTypeArguments?e.tupleTypeArguments.forEach((e=>{this.build(e.type,t,n)})):e.typeArguments&&e.typeArguments.forEach((e=>{this.build(e,t,n)})));break}case 8:(0,d.doForEachSubtype)(e,(e=>{this.build(e,t,n)})),null===(a=e.typeAliasSources)||void 0===a||a.forEach((e=>{this.build(e,t,n)}))}}finally{t.pop()}}}isUnique(e){const t=this._map.get(e);return!t||1===t.length}_addIfUnique(e,t,n=!1){const a=this._map.get(e);a?a.some((e=>this._isSameTypeName(e,t,n)))||a.push(t):this._map.set(e,[t])}_isSameTypeName(e,t,n){var a,r;return n?(null===(a=e.typeAliasInfo)||void 0===a?void 0:a.fullName)===(null===(r=t.typeAliasInfo)||void 0===r?void 0:r.fullName):!(!(0,c.isClass)(e)||!(0,c.isClass)(t))&&c.ClassType.isSameGenericClass(e,t)}}},10983:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.TypeStubWriter=void 0;const i=n(79428),o=s(n(9316)),l=s(n(28340)),p=n(78232),c=n(69160),d=s(n(80944)),u=n(8312);class m{constructor(e){this.importName=e,this.isAccessed=!1}}class y extends m{constructor(e,t,n){super(e),this.alias=t,this.symbol=n}}class g extends m{constructor(e,t,n){super(e),this.isWildcardImport=t,this.node=n,this.symbols=[]}addSymbol(e,t,n,a=!1){this.symbols.find((e=>e.name===t))||this.symbols.push({symbol:e,name:t,alias:n,isAccessed:a})}}class h extends p.ParseTreeWalker{constructor(e,t){super(),this._accessedImportedSymbols=e,this._treatStringsAsSymbols=t}analyze(e){this.walk(e)}walk(e){o.isCodeUnreachable(e)||super.walk(e)}visitName(e){return this._accessedImportedSymbols.add(e.value),!0}visitMemberAccess(e){const t=this._getRecursiveModuleAccessExpression(e.leftExpression);return t&&this._accessedImportedSymbols.add(`${t}.${e.memberName.value}`),!0}visitString(e){return this._treatStringsAsSymbols&&this._accessedImportedSymbols.add(e.value),!0}_getRecursiveModuleAccessExpression(e){if(38===e.nodeType)return e.value;if(35===e.nodeType){const t=this._getRecursiveModuleAccessExpression(e.leftExpression);if(!t)return;return`${t}.${e.memberName.value}`}}}class f extends p.ParseTreeWalker{constructor(e,t,n){super(),this._stubPath=e,this._sourceFile=t,this._evaluator=n,this._indentAmount=0,this._includeAllImports=!1,this._typeStubText="",this._lineEnd="\n",this._tab="    ",this._classNestCount=0,this._functionNestCount=0,this._ifNestCount=0,this._emittedSuite=!1,this._emitDocString=!0,this._trackedImportAs=new Map,this._trackedImportFrom=new Map,this._accessedImportedSymbols=new Set,"__init__.pyi"===this._stubPath.fileName&&(this._includeAllImports=!0)}write(){const e=this._sourceFile.getParseResults();this._lineEnd=e.tokenizerOutput.predominantEndOfLineSequence,this._tab=e.tokenizerOutput.predominantTabSequence,this.walk(e.parserOutput.parseTree),this._writeFile()}walk(e){o.isCodeUnreachable(e)||super.walk(e)}visitClass(e){const t=e.name.value;this._emittedSuite=!0,this._emitDocString=!0,this._emitDecorators(e.decorators);let n=`class ${t}`;e.typeParameters&&(n+=this._printTypeParameters(e.typeParameters));const a=e.arguments.filter((e=>void 0!==e.name||0!==e.argumentCategory||38!==e.valueExpression.nodeType||"object"!==e.valueExpression.value));return a.length>0&&(n+=`(${a.map((e=>{let t="";return e.name&&(t=e.name.value+"="),t+=this._printExpression(e.valueExpression),t})).join(", ")})`),n+=":",this._emitLine(n),this._emitSuite((()=>{this._classNestCount++,this.walk(e.suite),this._classNestCount--})),this._emitLine(""),this._emitLine(""),!1}visitFunction(e){const t=e.name.value;if(0===this._functionNestCount&&!d.isPrivateOrProtectedName(t)){this._emittedSuite=!0,this._emitDocString=!0,this._emitDecorators(e.decorators);let n,a=e.isAsync?"async ":"";if(a+=`def ${t}`,e.typeParameters&&(a+=this._printTypeParameters(e.typeParameters)),a+=`(${e.parameters.map(((t,n)=>this._printParameter(t,e,n))).join(", ")})`,e.returnTypeAnnotation?n=this._printExpression(e.returnTypeAnnotation,!0):e.functionAnnotationComment?n=this._printExpression(e.functionAnnotationComment.returnTypeAnnotation,!0):"__init__"===e.name.value?n="None":"__str__"===e.name.value?n="str":["__int__","__hash__"].some((t=>t===e.name.value))?n="int":["__eq__","__ne__","__gt__","__lt__","__ge__","__le__"].some((t=>t===e.name.value))&&(n="bool"),n&&(a+=" -> "+n),a+=":",!n){const t=this._evaluator.getTypeOfFunction(e);if(t&&(0,u.isFunction)(t.functionType)){let e=this._evaluator.getFunctionInferredReturnType(t.functionType);e=(0,u.removeUnknownFromUnion)(e),(0,u.isNever)(e)||(0,u.isUnknown)(e)||(a+=` # -> ${this._evaluator.printType(e,{enforcePythonSyntax:!0})}:`)}}this._emitLine(a),this._emitSuite((()=>{this._functionNestCount++,this.walk(e.suite),this._functionNestCount--})),this._emitLine("")}return!1}visitWhile(e){return this._emitDocString=!1,!1}visitFor(e){return this._emitDocString=!1,!1}visitTry(e){return this._emitDocString=!1,this.walk(e.trySuite),!1}visitWith(e){return this._emitDocString=!1,!1}visitIf(e){if(this._emitDocString=!1,0===this._functionNestCount&&0===this._ifNestCount){this._ifNestCount++,this._emittedSuite=!0,this._emitLine("if "+this._printExpression(e.testExpression)+":"),this._emitSuite((()=>{this.walkMultiple(e.ifSuite.statements)}));const t=e.elseSuite;t&&(this._emitLine("else:"),this._emitSuite((()=>{19===t.nodeType?this.walkMultiple([t.testExpression,t.ifSuite,t.elseSuite]):this.walkMultiple(t.statements)}))),this._ifNestCount--}return!1}visitTypeAlias(e){let t="";return t=this._printExpression(e.name),e.typeParameters&&(t+=this._printTypeParameters(e.typeParameters)),t+=" = ",t+=this._printExpression(e.expression),this._emitLine(t),!1}visitAssignment(e){let t=!1,n="";if(38===e.leftExpression.nodeType){if("__all__"===e.leftExpression.value)return 0===this._functionNestCount&&0===this._ifNestCount&&(this._emittedSuite=!0,n=this._printExpression(e.leftExpression),n+=" = ",n+=this._printExpression(e.rightExpression),this._emitLine(n)),!1;if(0===this._functionNestCount){n=this._printExpression(e.leftExpression),e.typeAnnotationComment&&(n+=": "+this._printExpression(e.typeAnnotationComment,!0));const a=this._evaluator.getType(e.leftExpression);if(null==a?void 0:a.typeAliasInfo)t=!0;else if(9===e.rightExpression.nodeType){const n=this._evaluator.getType(e.rightExpression.leftExpression);n&&(0,u.isInstantiableClass)(n)&&u.ClassType.isBuiltIn(n,["TypeVar","TypeVarTuple","ParamSpec","NewType"])&&(t=!0)}}}else if(54===e.leftExpression.nodeType){const t=e.leftExpression.valueExpression;38===t.nodeType&&0===this._functionNestCount&&(n=`${this._printExpression(t)}: ${this._printExpression(e.leftExpression.typeAnnotation,!0)}`)}return n&&(this._emittedSuite=!0,n+=" = ",n+=t?this._printExpression(e.rightExpression):"...",this._emitLine(n)),!1}visitAugmentedAssignment(e){if(38===e.leftExpression.nodeType&&"__all__"===e.leftExpression.value&&1===e.operator&&0===this._functionNestCount&&0===this._ifNestCount){let t=this._printExpression(e.leftExpression);t+=" += ",t+=this._printExpression(e.rightExpression),this._emitLine(t)}return!1}visitTypeAnnotation(e){if(0===this._functionNestCount){let t="";if(38===e.valueExpression.nodeType)t=this._printExpression(e.valueExpression);else if(35===e.valueExpression.nodeType){const n=e.valueExpression.leftExpression;if(38===n.nodeType&&"self"===n.value){const n=e.valueExpression.memberName.value;d.isPrivateOrProtectedName(n)||(t=this._printExpression(e.valueExpression))}}t&&(t+=": "+this._printExpression(e.typeAnnotation,!0),this._emitLine(t))}return!1}visitImport(e){if(this._functionNestCount>0||this._classNestCount>0)return!1;const t=(0,c.getScopeForNode)(e);return t&&e.list.forEach((e=>{const n=this._printModuleName(e.module);if(!this._trackedImportAs.has(n)){const a=e.alias?e.alias.value:e.module.nameParts.length>0?e.module.nameParts[0].value:"",r=t.lookUpSymbolRecursive(a);if(r){const t=new y(n,e.alias?e.alias.value:void 0,r.symbol);this._trackedImportAs.set(n,t)}}})),!1}visitImportFrom(e){if(this._functionNestCount>0||this._classNestCount>0)return!1;const t=(0,c.getScopeForNode)(e);if(t){const n=this._printModuleName(e.module);let a=this._trackedImportFrom.get(n);a||(a=new g(n,e.isWildcardImport,e),this._trackedImportFrom.set(n,a)),e.imports.forEach((e=>{const n=e.alias?e.alias.value:e.name.value,r=t.lookUpSymbolRecursive(n);r&&a.addSymbol(r.symbol,e.name.value,e.alias?e.alias.value:void 0,!1)}))}return!1}visitStatementList(e){return e.statements.length>0&&48===e.statements[0].nodeType&&!this._emittedSuite&&this._emitDocString&&this._emitLine(this._printExpression(e.statements[0])),this._emitDocString=!1,this.walkMultiple(e.statements),!1}_emitSuite(e){this._increaseIndent((()=>{const t=this._emittedSuite;this._emittedSuite=!1,e(),this._emittedSuite||this._emitLine("..."),this._emittedSuite=t}))}_increaseIndent(e){this._indentAmount++,e(),this._indentAmount--}_emitDecorators(e){e.forEach((e=>{this._emitLine("@"+this._printExpression(e.expression))}))}_printHeaderDocString(){return'"""'+this._lineEnd+"This type stub file was generated by pyright."+this._lineEnd+'"""'+this._lineEnd+this._lineEnd}_emitLine(e){for(let e=0;e<this._indentAmount;e++)this._typeStubText+=this._tab;this._typeStubText+=e+this._lineEnd}_printTypeParameters(e){return`[${e.parameters.map((e=>this._printTypeParameter(e))).join(",")}]`}_printTypeParameter(e){let t="";return e.typeParamCategory===i.TypeParameterCategory.TypeVarTuple?t+="*":e.typeParamCategory===i.TypeParameterCategory.ParamSpec&&(t+="**"),t+=e.name.value,e.boundExpression&&(t+=": ",t+=this._printExpression(e.boundExpression)),e.defaultExpression&&(t+=" = ",t+=this._printExpression(e.defaultExpression)),t}_printModuleName(e){let t="";for(let n=0;n<e.leadingDots;n++)t+=".";return t+=e.nameParts.map((e=>e.value)).join("."),t}_printParameter(e,t,n){let a="";1===e.category?a+="*":2===e.category&&(a+="**"),e.name?a+=e.name.value:0===e.category&&(a+="/");const r=l.getTypeAnnotationForParameter(t,n);let s="";return r&&(s=this._printExpression(r,!0)),s&&(a+=": "+s),e.defaultValue&&(a+=s?" = ...":"=..."),a}_printExpression(e,t=!1,n=!1){new h(this._accessedImportedSymbols,n).analyze(e);let a=t?1:0;return a|=2,l.printExpression(e,a)}_printTrackedImports(){let e="",t=!1;return this._trackedImportAs.forEach((n=>{this._accessedImportedSymbols.has(n.alias||n.importName)&&(n.isAccessed=!0),(n.isAccessed||this._includeAllImports)&&(e+=`import ${n.importName}`,n.alias&&(e+=` as ${n.alias}`),e+=this._lineEnd,t=!0)})),this._trackedImportFrom.forEach((n=>{n.symbols.forEach((e=>{this._accessedImportedSymbols.has(e.alias||e.name)&&(e.isAccessed=!0)})),n.isWildcardImport&&(e+=`from ${n.importName} import *`+this._lineEnd,t=!0);const a=n.symbols.filter((e=>e.isAccessed||this._includeAllImports)).sort(((e,t)=>e.name<t.name?-1:e.name>t.name?1:0));a.length>0&&(e+=`from ${n.importName} import `,e+=a.map((e=>{let t=e.name;return e.alias&&(t+=" as "+e.alias),t})).join(", "),e+=this._lineEnd,t=!0)})),t&&(e+=this._lineEnd),e}_writeFile(){let e=this._printHeaderDocString();e+=this._printTrackedImports(),e+=this._typeStubText,this._sourceFile.fileSystem.writeFileSync(this._stubPath,e,"utf8")}}t.TypeStubWriter=f},808:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.partiallySpecializeType=t.isTupleIndexUnambiguous=t.isUnboundedTupleClass=t.isTupleClass=t.isMaybeDescriptorInstance=t.isDescriptorInstance=t.isCallableType=t.isProperty=t.isEllipsisType=t.getUnionSubtypeCount=t.getLiteralTypeClassName=t.containsLiteralType=t.isLiteralTypeOrUnion=t.isLiteralType=t.getSpecializedTupleType=t.selfSpecializeClass=t.getUnknownTypeForCallable=t.getUnknownTypeForParamSpec=t.getUnknownTypeForTypeVar=t.specializeWithUnknownTypeArgs=t.specializeWithDefaultTypeArgs=t.getTypeVarScopeIds=t.getTypeVarScopeId=t.transformPossibleRecursiveTypeAlias=t.isTypeAliasRecursive=t.isTypeAliasPlaceholder=t.getTypeCondition=t.addConditionToType=t.getFullNameOfType=t.derivesFromAnyOrUnknown=t.isUnionableType=t.preserveUnknown=t.areTypesSame=t.doForEachSignature=t.allSubtypes=t.someSubtypes=t.doForEachSubtype=t.sortTypes=t.cleanIncompleteUnknown=t.mapSignatures=t.mapSubtypes=t.makeInferenceContext=t.isBuiltInDeprecatedType=t.isTypeVarSame=t.isIncompleteUnknown=t.removeNoneFromUnion=t.isNoneTypeClass=t.isNoneInstance=t.isOptionalType=t.UniqueSignatureTracker=void 0,t.isVarianceOfTypeArgumentCompatible=t.combineVariances=t.requiresSpecialization=t.requiresTypeArguments=t.getGeneratorTypeArgs=t.removeParamSpecVariadicsFromFunction=t.removeParamSpecVariadicsFromSignature=t.specializeTupleClass=t.combineSameSizedTuples=t.explodeGenericClass=t.isPartlyUnknown=t.containsAnyOrUnknown=t.containsAnyRecursive=t.getMembersForModule=t.getMembersForClass=t.convertToInstantiable=t.convertToInstance=t.isEffectivelyInstantiable=t.isMetaclassInstance=t.isInstantiableMetaclass=t.getGeneratorYieldType=t.getDeclaredGeneratorReturnType=t.synthesizeTypeVarForSelfCls=t.derivesFromClassRecursive=t.derivesFromStdlibClass=t.specializeForBaseClass=t.buildTypeVarContext=t.buildTypeVarContextFromSpecializedClass=t.setTypeArgumentsRecursive=t.specializeClassType=t.isTypeVarLimitedToCallable=t.getTypeVarArgumentsRecursive=t.addTypeVarsToListIfUnique=t.getClassFieldsRecursive=t.getClassIterator=t.getClassMemberIterator=t.lookUpClassMember=t.lookUpObjectMember=t.getContainerDepth=t.getProtocolSymbolsRecursive=t.getProtocolSymbols=t.transformExpectedType=t.replaceTypeVarsWithAny=t.validateTypeVarDefault=t.applyInScopePlaceholders=t.applySourceContextTypeVarsToSignature=t.applySourceContextTypeVars=t.applySolvedTypeVars=t.ensureFunctionSignaturesAreUnique=t.populateTypeVarContextForSelfType=void 0,t.convertParamSpecValueToType=t.convertTypeToParamSpecValue=t.getDeclaringModulesForType=t.computeMroLinearization=void 0;const a=n(28040),r=n(83181),s=n(52328),i=n(8e4),o=n(8312),l=n(97632),p=n(25224);function c(e){return(0,o.isClassInstance)(e)&&o.ClassType.isBuiltIn(e,"NoneType")}function d(e,t,n=!1){if((0,o.isUnion)(e)){const a=n?u(e.subtypes):e.subtypes;for(let n=0;n<a.length;n++){const r=a[n],s=t(r);if(r!==s){const r=a.slice(0,n),i=t=>{t&&r.push(h(t,f(e)))};for(i(s),n++;n<a.length;n++)i(t(a[n]));const l=(0,o.combineTypes)(r);return 8===l.category&&o.UnionType.addTypeAliasSource(l,e),l}}return e}const a=t(e);return a||o.NeverType.createNever()}function u(e){return e.slice(0).sort(((e,t)=>m(e,t)))}function m(e,t,n=0){var a,r;if(n>o.maxTypeRecursionCount)return 0;if(n++,e.category!==t.category)return t.category-e.category;switch(e.category){case 0:case 1:case 2:case 3:case 8:return 0;case 4:{const n=t,s=e.details.parameters.length,i=n.details.parameters.length;if(s!==i)return i-s;for(let t=0;t<s;t++){const a=e.details.parameters[t],r=n.details.parameters[t];if(a.category!==r.category)return r.category-a.category;const s=m(o.FunctionType.getEffectiveParameterType(e,t),o.FunctionType.getEffectiveParameterType(n,t));if(0!==s)return s}const l=m(null!==(a=o.FunctionType.getSpecializedReturnType(e))&&void 0!==a?a:o.UnknownType.create(),null!==(r=o.FunctionType.getSpecializedReturnType(n))&&void 0!==r?r:o.UnknownType.create());if(0!==l)return l;const p=e.details.name,c=n.details.name;return p<c?-1:p>c?1:0}case 5:{const n=t,a=e.overloads.length,r=n.overloads.length;if(a!==r)return r-a;for(let t=0;t<a;t++){const a=m(e.overloads[t],n.overloads[t]);if(0!==a)return a}return 0}case 6:{const a=t;if((0,o.isClassInstance)(e)&&(0,o.isInstantiableClass)(a))return-1;if((0,o.isInstantiableClass)(e)&&(0,o.isClassInstance)(a))return 1;if(I(e)){if(!I(a))return-1}else if(I(a))return 1;if(o.ClassType.isBuiltIn(e,"NoneType"))return 1;if(o.ClassType.isBuiltIn(a,"NoneType"))return-1;if(e.details.typeParameters.length>0||S(e)){if(0===a.details.typeParameters.length)return 1}else if(a.details.typeParameters.length>0||S(a))return-1;const r=e.details.name,s=t.details.name;if(r<s)return-1;if(r>s)return 1;const i=e.typeArguments?e.typeArguments.length:0,l=a.typeArguments?a.typeArguments.length:0;if(i<l)return-1;if(i>l)return 1;for(let t=0;t<i;t++){const r=m(e.typeArguments[t],a.typeArguments[t],n);if(0!==r)return r}return 0}case 7:{const n=e.moduleName,a=t.moduleName;return n<a?-1:n===a?0:1}case 9:{const n=e.details.name,a=t.details.name;return n<a?-1:n===a?0:1}}return 1}function y(e,t,n=!1){if((0,o.isUnion)(e)){const a=n?u(e.subtypes):e.subtypes;a.forEach(((e,n)=>{t(e,n,a)}))}else t(e,0,[e])}function g(e,t){return(0,o.isUnknown)(e)&&e.isIncomplete?e:(0,o.isUnknown)(t)&&t.isIncomplete?t:(0,o.isUnknown)(e)||(0,o.isUnknown)(t)?o.UnknownType.create():o.AnyType.create()}function h(e,t,n=!1){if(!t)return e;if(n&&0===(t=t.filter((e=>!e.typeVar.details.isSynthesizedSelf))).length)return e;switch(e.category){case 0:case 1:case 2:case 3:case 7:case 9:return e;case 4:case 6:return o.TypeBase.cloneForCondition(e,o.TypeCondition.combine(e.condition,t));case 5:return o.OverloadedFunctionType.create(e.overloads.map((e=>h(e,t))));case 8:return(0,o.combineTypes)(e.subtypes.map((e=>h(e,t))))}}function f(e){switch(e.category){case 0:case 1:case 2:case 3:case 7:case 9:case 5:case 8:return;case 6:case 4:return e.condition}}function T(e){return(0,o.isClass)(e)||(0,o.isFunction)(e)?e.details.typeVarScopeId:(0,o.isTypeVar)(e)?e.scopeId:void 0}function v(e){const t=[],n=T(e);return n&&t.push(n),(0,o.isFunction)(e)&&(e.details.constructorTypeVarScopeId&&t.push(e.details.constructorTypeVarScopeId),e.details.higherOrderTypeVarScopeIds&&t.push(...e.details.higherOrderTypeVarScopeIds)),t}function b(e){return 0===e.details.typeParameters.length||e.typeArguments?e:o.ClassType.cloneForSpecialization(e,e.details.typeParameters.map((e=>e.details.defaultType)),!1,e.includeSubclasses)}function _(e){return e.details.isParamSpec?C():o.UnknownType.create()}function C(){const e=o.FunctionType.createInstance("","","",98304);return o.FunctionType.addDefaultParameters(e),e}function I(e){return o.TypeBase.isInstance(e)&&void 0!==e.literalValue}function k(e,t=!1){class n extends p.TypeWalker{constructor(e){super(),this._includeTypeArgs=e,this.foundLiteral=!1}visitClass(e){(0,o.isClassInstance)(e)&&(I(e)||o.ClassType.isBuiltIn(e,"LiteralString"))&&(this.foundLiteral=!0,this.cancelWalk()),this._includeTypeArgs&&super.visitClass(e)}}const a=new n(t);return a.walk(e),a.foundLiteral}function w(e,t=!1){return(0,o.isUnion)(e)?e.subtypes.some((e=>w(e,t))):!!(0,o.isClassInstance)(e)&&(!!o.ClassType.getSymbolTable(e).has("__get__")&&!(t&&!o.ClassType.getSymbolTable(e).has("__set__")))}function S(e){return o.ClassType.isBuiltIn(e,"tuple")}function A(e){return e.tupleTypeArguments&&e.tupleTypeArguments.some((e=>e.isUnbounded||(0,o.isUnpackedVariadicTypeVar)(e.type)))}function x(e,t,n,a){if(o.ClassType.isUnspecialized(t)&&!n)return e;const r=L(t);n&&P(r,t,n);let s=N(e,r,{typeClassType:a});if((0,o.isClass)(s)&&(s.fgetInfo||s.fsetInfo||s.fdelInfo)){function i(e){if(e)return{methodType:x(e.methodType,t,n,a),classType:e.classType}}s=o.TypeBase.cloneType(s),s.fgetInfo=i(s.fgetInfo),s.fsetInfo=i(s.fsetInfo),s.fdelInfo=i(s.fdelInfo)}return s}function P(e,t,n){const a=B(t,!1),r=G(n),s=d(r,(e=>(0,o.isClass)(e)&&void 0!==e.literalValue?o.ClassType.cloneWithLiteral(e,void 0):e));(0,o.isTypeSame)(a,s)||e.setTypeVarType(a,r,s)}function N(e,t,n={}){if(t.isEmpty()&&!n.unknownIfNotFound&&!n.eliminateUnsolvedInUnions&&!n.applyInScopePlaceholders)return e;n.applyInScopePlaceholders&&F(t);return new se(t,n).apply(e,0)}function D(e,t){e.getTypeVars().forEach((n=>{const a=n.narrowBound?N(n.narrowBound,t):void 0,r=n.narrowBoundNoLiterals?N(n.narrowBoundNoLiterals,t):void 0,s=n.wideBound?N(n.wideBound,t):void 0;e.setTypeVarType(n.typeVar,a,r,s),n.tupleTypes&&e.setTupleTypeVar(n.typeVar,n.tupleTypes.map((e=>({type:N(e.type,t),isUnbounded:e.isUnbounded,isOptional:e.isOptional}))))}))}function F(e){e.doForEachSignatureContext((e=>{e.getTypeVars().forEach((t=>{if(!t.typeVar.isInScopePlaceholder){const n=t.narrowBound?le(t.narrowBound,e):void 0,a=t.narrowBoundNoLiterals?le(t.narrowBoundNoLiterals,e):void 0,r=t.wideBound?le(t.wideBound,e):void 0;e.setTypeVarType(t.typeVar,n,a,r),t.tupleTypes&&e.setTupleTypeVar(t.typeVar,t.tupleTypes.map((t=>({type:le(t.type,e),isUnbounded:t.isUnbounded,isOptional:t.isOptional}))))}}))}))}function E(e,t,n=16384,a=0){a>o.maxTypeRecursionCount||(e.details.baseClasses.forEach((e=>{(0,o.isClass)(e)&&0!=(e.details.flags&n)&&E(e,t,n,a+1)})),o.ClassType.getSymbolTable(e).forEach(((n,a)=>{n.isIgnoredForProtocolMatch()||t.set(a,{symbol:n,classType:e,isInstanceMember:n.isInstanceMember(),isClassMember:n.isClassMember(),isClassVar:(0,i.isEffectivelyClassVar)(n,!1),isTypeDeclared:n.hasTypedDeclarations(),skippedUndeclaredType:!1})})))}function M(e,t,n=0,a){if((0,o.isClassInstance)(e))return O(e,t,n,a)}function O(e,t,n=0,a){var r,s;const i=e.details.effectiveMetaclass;if(i&&(0,o.isClass)(i)&&!o.ClassType.isBuiltIn(i,"type")){const e=null===(r=z(i,t,32).next())||void 0===r?void 0:r.value;if(e&&!(0,o.isAnyOrUnknown)(e.classType))return e.isClassMember=!0,e}return null===(s=z(e,t,n,a).next())||void 0===s?void 0:s.value}function*z(e,t,n=0,a){const r=0!=(64&n);let l=!1;if((0,o.isClass)(e)){let p=0;1&n&&(0,o.isClass)(e)&&(a=e),2&n&&(p|=1),4&n&&(p|=2),8&n&&(p|=4);const c=V(e,p,a);for(const[e,a]of c){if(!(0,o.isInstantiableClass)(e)){if(!r){const t={symbol:s.Symbol.createWithType(0,e),isInstanceMember:!1,isClassMember:!0,isClassVar:!1,classType:(0,o.isAnyOrUnknown)(e)?e:o.UnknownType.create(),isTypeDeclared:!1,skippedUndeclaredType:!1};yield t}continue}if(!(0,o.isInstantiableClass)(a))continue;const p=o.ClassType.getSymbolTable(a);if(0==(16&n)){const e=p.get(t);if(e&&e.isInstanceMember()){const t=e.hasTypedDeclarations();if(!r||t){const n={symbol:e,isInstanceMember:!0,isClassMember:e.isClassMember(),isClassVar:(0,i.isEffectivelyClassVar)(e,o.ClassType.isDataClass(a)),classType:a,isTypeDeclared:t,skippedUndeclaredType:l};yield n}else l=!0}}if(0==(32&n)){const e=p.get(t);if(e&&e.isClassMember()){const t=e.hasTypedDeclarations();if(!r||t){let n=e.isInstanceMember(),r=!0;const s=o.ClassType.isDataClass(a),p=o.ClassType.isTypedDictClass(a);if(t&&(s||p)){const t=e.getDeclarations();t.length>0&&1===t[0].type&&(n=!0,r=s)}const c={symbol:e,isInstanceMember:n,isClassMember:r,isClassVar:(0,i.isEffectivelyClassVar)(e,s),classType:a,isTypeDeclared:t,skippedUndeclaredType:l};yield c}else l=!0}}}}else if((0,o.isAnyOrUnknown)(e)){const t={symbol:s.Symbol.createWithType(0,e),isInstanceMember:!1,isClassMember:!0,isClassVar:!1,classType:e,isTypeDeclared:!1,skippedUndeclaredType:!1};yield t}}function*V(e,t=0,n){if((0,o.isClass)(e)){let a=void 0===n;for(const r of e.details.mro){if(!a&&n){if((0,o.isClass)(r)){if(o.ClassType.isSameGenericClass(r,n)){a=!0;continue}continue}a=!0}const s=x(r,e);if(2&t&&(0,o.isInstantiableClass)(s)&&o.ClassType.isBuiltIn(s,"object"))break;if(4&t&&(0,o.isInstantiableClass)(s)&&o.ClassType.isBuiltIn(s,"type"))break;if(yield[r,s],0!=(1&t))break}}}function U(e,t,n){for(const a of t)n&&a.scopeId!==n||e.find((e=>(0,o.isTypeSame)(G(e),G(a))))||e.push(a)}function R(e,t,n=0){if(n>o.maxTypeRecursionCount)return{isTypeVarUsed:!1,isUsedInCallable:!1};n++;let a=0,r=0;if((0,o.isTypeVar)(e))(0,o.isParamSpec)(e)&&e.paramSpecAccess||(0,o.isTypeSame)(t,G(e))&&a++;else if((0,o.isClass)(e))e.typeArguments&&e.typeArguments.forEach((e=>{const s=R(e,t,n);s.isTypeVarUsed&&a++,s.isUsedInCallable&&r++}));else if((0,o.isUnion)(e))y(e,(e=>{const s=R(e,t,n);s.isTypeVarUsed&&a++,s.isUsedInCallable&&r++}));else if((0,o.isFunction)(e)){for(let r=0;r<e.details.parameters.length;r++)R(o.FunctionType.getEffectiveParameterType(e,r),t,n).isTypeVarUsed&&a++;e.details.paramSpec&&(0,o.isTypeSame)(t,G(e.details.paramSpec))&&a++;const s=o.FunctionType.getSpecializedReturnType(e);s&&R(s,t,n).isTypeVarUsed&&a++,a>0&&(a=1,r=1)}return{isTypeVarUsed:a>0,isUsedInCallable:1===r&&1===a}}function L(e){const t=o.ClassType.getTypeParameters(e),n=j(t,e.typeArguments,T(e));return o.ClassType.isTupleClass(e)&&e.tupleTypeArguments&&t.length>=1&&n.setTupleTypeVar(t[0],e.tupleTypeArguments),n}function j(e,t,n){const a=new l.TypeVarContext(n);return e.forEach(((e,n)=>{let r;if(t)if(e.details.isParamSpec){if(n<t.length)if(r=t[n],(0,o.isFunction)(r)&&o.FunctionType.isParamSpecValue(r)){const t=[],n=r;r.details.parameters.forEach(((e,a)=>{t.push({category:e.category,name:e.name,hasDefault:!!e.hasDefault,defaultValueExpression:e.defaultValueExpression,isNameSynthesized:e.isNameSynthesized,type:o.FunctionType.getEffectiveParameterType(n,a)})})),a.setTypeVarType(e,X(r))}else((0,o.isParamSpec)(r)||(0,o.isAnyOrUnknown)(r))&&a.setTypeVarType(e,X(r))}else r=n>=t.length?o.AnyType.create():t[n],a.setTypeVarType(e,r,void 0,r)})),a}function B(e,t){var n;const a=o.TypeVarType.createInstance("__type_of_self__"),r=null!==(n=T(e))&&void 0!==n?n:"";a.details.isSynthesized=!0,a.details.isSynthesizedSelf=!0,a.nameWithScope=o.TypeVarType.makeNameWithScope(a.details.name,r),a.scopeId=r;const s=o.ClassType.cloneForSpecialization(e,o.ClassType.getTypeParameters(e),!1,!!e.includeSubclasses);return a.details.boundType=o.ClassType.cloneAsInstance(s),t?o.TypeVarType.cloneAsInstantiable(a):a}function q(e){return(0,o.isClassInstance)(e)&&e.details.mro.some((e=>(0,o.isClass)(e)&&o.ClassType.isBuiltIn(e,"type")))}function W(e){return!!o.TypeBase.isInstantiable(e)||(!!q(e)||!!(0,o.isUnion)(e)&&e.subtypes.every((e=>W(e))))}function G(e,t=!0){var n;if((null===(n=e.cached)||void 0===n?void 0:n.instanceType)&&t)return e.cached.instanceType;let a=d(e,(e=>{switch(e.category){case 6:if(o.ClassType.isBuiltIn(e,"type")){if(o.TypeBase.isInstance(e))return!e.typeArguments||e.typeArguments.length<1?o.UnknownType.create():e.typeArguments[0];if(e.typeArguments&&e.typeArguments.length>0&&!(0,o.isAnyOrUnknown)(e.typeArguments[0]))return K(e.typeArguments[0])}return o.ClassType.cloneAsInstance(e,t);case 4:if(o.TypeBase.isInstantiable(e))return o.FunctionType.cloneAsInstance(e);break;case 9:if(o.TypeBase.isInstantiable(e))return o.TypeVarType.cloneAsInstance(e);break;case 2:return o.AnyType.convertToInstance(e);case 1:return o.UnknownType.convertToInstance(e);case 3:return o.NeverType.convertToInstance(e);case 0:return o.UnboundType.convertToInstance(e)}return e}));return e.typeAliasInfo&&e!==a&&(a=o.TypeBase.cloneForTypeAlias(a,e.typeAliasInfo.name,e.typeAliasInfo.fullName,e.typeAliasInfo.moduleName,e.typeAliasInfo.fileUri,e.typeAliasInfo.typeVarScopeId,e.typeAliasInfo.isPep695Syntax,e.typeAliasInfo.typeParameters,e.typeAliasInfo.typeArguments)),e!==a&&t&&(e.cached||(e.cached={}),e.cached.instanceType=a),a}function K(e,t=!0){var n;if(null===(n=e.cached)||void 0===n?void 0:n.instantiableType)return e.cached.instantiableType;let a=d(e,(e=>{switch(e.category){case 6:return o.ClassType.cloneAsInstantiable(e,t);case 4:return o.FunctionType.cloneAsInstantiable(e);case 9:return o.TypeVarType.cloneAsInstantiable(e)}return e}));return e.typeAliasInfo&&e!==a&&(a=o.TypeBase.cloneForTypeAlias(a,e.typeAliasInfo.name,e.typeAliasInfo.fullName,e.typeAliasInfo.moduleName,e.typeAliasInfo.fileUri,e.typeAliasInfo.typeVarScopeId,e.typeAliasInfo.isPep695Syntax,e.typeAliasInfo.typeParameters,e.typeAliasInfo.typeArguments)),e!==a&&(e.cached||(e.cached={}),e.cached.instantiableType=a),a}function $(e,t,n=!0,a=!1){const r=(0,o.combineTypes)(t.map((e=>(0,o.isTypeVar)(e.type)&&(0,o.isUnpackedVariadicTypeVar)(e.type)?o.TypeVarType.cloneForUnpacked(e.type,!0):e.type))),s=o.ClassType.cloneForSpecialization(e,[r],n,void 0,t);return a&&(s.isUnpacked=!0),s}function H(e){const t=e.details.parameters.length;if(t<2)return e;const n=e.details.parameters[t-2],a=e.details.parameters[t-1];return 1===n.category&&2===a.category&&(0,o.isParamSpec)(n.type)&&(0,o.isParamSpec)(a.type)&&(0,o.isTypeSame)(n.type,a.type)?o.FunctionType.cloneRemoveParamSpecVariadics(e,o.TypeVarType.cloneForParamSpecAccess(n.type,void 0)):e}function Z(e){return(0,o.isClassInstance)(e)&&S(e)&&e.tupleTypeArguments&&e.isUnpacked?(0,o.combineTypes)(e.tupleTypeArguments.map((e=>e.type))):e}function Y(e){var t;if((0,o.isClassInstance)(e)){if(o.ClassType.isBuiltIn(e,["Generator","AsyncGenerator"]))return e.typeArguments;if(o.ClassType.isBuiltIn(e,"AwaitableGenerator"))return null===(t=e.typeArguments)||void 0===t?void 0:t.slice(0,3)}}function J(e,t,n=0){var a;if(n>o.maxTypeRecursionCount)return!1;n++;const r=!(null==t?void 0:t.ignorePseudoGeneric)&&!(null==t?void 0:t.ignoreSelf);if(r&&void 0!==(null===(a=e.cached)||void 0===a?void 0:a.requiresSpecialization))return e.cached.requiresSpecialization;const s=function(e,t,n=0){var a;if(e.condition)return!0;switch(e.category){case 6:return(!o.ClassType.isPseudoGenericClass(e)||!(null==t?void 0:t.ignorePseudoGeneric))&&(!(!e.isTypeArgumentExplicit&&(null==t?void 0:t.ignoreImplicitTypeArgs))&&(e.typeArguments?e.typeArguments.some((e=>J(e,t,n))):o.ClassType.getTypeParameters(e).length>0));case 4:{if(e.details.paramSpec)return!0;for(let a=0;a<e.details.parameters.length;a++)if(J(o.FunctionType.getEffectiveParameterType(e,a),t,n))return!0;const a=e.specializedTypes&&e.specializedTypes.returnType?e.specializedTypes.returnType:e.details.declaredReturnType;if(a){if(J(a,t,n))return!0}else if(e.inferredReturnType&&J(e.inferredReturnType,t,n))return!0;return!1}case 5:return e.overloads.some((e=>J(e,t,n)));case 8:return e.subtypes.some((e=>J(e,t,n)));case 9:if(!e.details.recursiveTypeAliasName)return!e.details.isSynthesizedSelf||!(null==t?void 0:t.ignoreSelf);if(null===(a=e.typeAliasInfo)||void 0===a?void 0:a.typeArguments)return e.typeAliasInfo.typeArguments.some((e=>J(e,t,n)))}return!1}(e,t,n);return r&&(void 0===e.cached&&(e.cached={}),e.cached.requiresSpecialization=s),s}function Q(e,t,n=0){if(n>o.maxTypeRecursionCount)return;n++;const a=e=>{e&&!t.some((t=>t===e))&&t.push(e)};switch(e.category){case 6:case 4:a(e.details.moduleName);break;case 5:e.overloads.forEach((e=>{Q(e,t,n)}));break;case 8:y(e,(e=>{Q(e,t,n)}));break;case 7:a(e.moduleName)}}function X(e){if((0,o.isParamSpec)(e)){const t=o.FunctionType.createInstance("","","",65536);return t.details.paramSpec=e,t.details.typeVarScopeId=T(e),t}if((0,o.isFunction)(e)){const t=o.FunctionType.createInstance("","","",65536|e.details.flags,e.details.docString);return t.details.deprecatedMessage=e.details.deprecatedMessage,e.details.parameters.forEach(((n,a)=>{o.FunctionType.addParameter(t,{category:n.category,name:n.name,hasDefault:n.hasDefault,defaultValueExpression:n.defaultValueExpression,isNameSynthesized:n.isNameSynthesized,type:o.FunctionType.getEffectiveParameterType(e,a)})})),e.details.higherOrderTypeVarScopeIds&&(t.details.higherOrderTypeVarScopeIds=[...e.details.higherOrderTypeVarScopeIds],t.details.typeVarScopeId=t.details.higherOrderTypeVarScopeIds.pop()),t.details.paramSpec=e.details.paramSpec,t}return C()}function ee(e,t=!1){let n=e.details.parameters.length>0;if(1===e.details.parameters.length){const t=e.details.parameters[0];(0,o.isPositionOnlySeparator)(t)&&(n=!1)}if(n||!e.details.paramSpec||t){const n=o.FunctionType.createInstance("","","",65536|e.details.flags);return o.FunctionType.addHigherOrderTypeVarScopeIds(n,e.details.typeVarScopeId),e.details.parameters.forEach((e=>{o.FunctionType.addParameter(n,{category:e.category,name:e.name,hasDefault:e.hasDefault,defaultValueExpression:e.defaultValueExpression,isNameSynthesized:e.isNameSynthesized,hasDeclaredType:!0,type:e.type})})),t||(n.details.paramSpec=e.details.paramSpec),n.details.docString=e.details.docString,n.details.deprecatedMessage=e.details.deprecatedMessage,n}return e.details.paramSpec}t.UniqueSignatureTracker=class{constructor(){this._trackedSignatures=[]}getTrackedSignatures(){return this._trackedSignatures}addTrackedSignatures(e){e.forEach((e=>{e.expressionOffsets.forEach((t=>{this.addSignature(e.type,t)}))}))}findSignature(e){let t=e;return(0,o.isFunction)(e)&&e.overloaded&&(t=e.overloaded),this._trackedSignatures.find((e=>(0,o.isTypeSame)(t,e.type)))}addSignature(e,t){var n;const a=(0,o.isFunction)(e)&&null!==(n=e.overloaded)&&void 0!==n?n:e,r=this.findSignature(a);r?r.expressionOffsets.some((e=>e===t))||r.expressionOffsets.push(t):this._trackedSignatures.push({type:a,expressionOffsets:[t]})}},t.isOptionalType=function(e){return!!(0,o.isUnion)(e)&&void 0!==(0,o.findSubtype)(e,(e=>c(e)))},t.isNoneInstance=c,t.isNoneTypeClass=function(e){return(0,o.isInstantiableClass)(e)&&o.ClassType.isBuiltIn(e,"NoneType")},t.removeNoneFromUnion=function(e){return(0,o.removeFromUnion)(e,(e=>c(e)))},t.isIncompleteUnknown=function(e){return(0,o.isUnknown)(e)&&e.isIncomplete},t.isTypeVarSame=function(e,t){if((0,o.isTypeSame)(e,t))return!0;if(e.details.isParamSpec||e.details.isVariadic||!e.details.boundType)return!1;if(!(0,o.isUnion)(t))return!1;let n=!0;return y(t,(t=>{if(n&&!(0,o.isTypeSame)(e,t)){const a=f(t);a&&a.some((t=>t.typeVar.nameWithScope===e.nameWithScope))||(n=!1)}})),n},t.isBuiltInDeprecatedType=function(e){return(0,o.isFunction)(e)?"deprecated"===e.details.builtInName:(0,o.isOverloadedFunction)(e)?e.overloads.length>0&&"deprecated"===e.overloads[0].details.builtInName:!!(0,o.isInstantiableClass)(e)&&o.ClassType.isBuiltIn(e,"deprecated")},t.makeInferenceContext=function(e,t,n){if(e)return{expectedType:e,isTypeIncomplete:t,signatureTracker:n}},t.mapSubtypes=d,t.mapSignatures=function(e,t){if((0,o.isFunction)(e))return t(e,0);const n=[];let a=!1;if(o.OverloadedFunctionType.getOverloads(e).forEach(((e,r)=>{const s=t(e,r);s!==e&&(a=!0),s&&n.push(s)})),0===n.length)return;const r=o.OverloadedFunctionType.getImplementation(e);return r&&n.push(r),a?1===n.length?n[0]:o.OverloadedFunctionType.create(n):e},t.cleanIncompleteUnknown=function e(t,n=0){if(n>=o.maxTypeRecursionCount)return t;n++;const a=d(t,(t=>{if(!(0,o.isUnknown)(t)||!t.isIncomplete){if((0,o.isClass)(t)&&t.typeArguments){let a=!1;if(t.tupleTypeArguments){const r=t.tupleTypeArguments.map((t=>{const r=e(t.type,n);return r!==t.type&&(a=!0),{type:r,isUnbounded:t.isUnbounded,isOptional:t.isOptional}}));if(a)return $(t,r,!!t.isTypeArgumentExplicit,!!t.isUnpacked)}else{const r=t.typeArguments.map((t=>{const r=e(t,n);return r!==t&&(a=!0),r}));if(a)return o.ClassType.cloneForSpecialization(t,r,!!t.isTypeArgumentExplicit)}}return t}}));return(0,o.isNever)(a)?t:a},t.sortTypes=u,t.doForEachSubtype=y,t.someSubtypes=function(e,t){return(0,o.isUnion)(e)?e.subtypes.some((e=>t(e))):t(e)},t.allSubtypes=function(e,t){return(0,o.isUnion)(e)?e.subtypes.every((e=>{t(e)})):t(e)},t.doForEachSignature=function(e,t){(0,o.isFunction)(e)?t(e,0):o.OverloadedFunctionType.getOverloads(e).forEach(((e,n)=>{t(e,n)}))},t.areTypesSame=function(e,t){if(e.length<2)return!0;for(let n=1;n<e.length;n++)if(!(0,o.isTypeSame)(e[0],e[n],t))return!1;return!0},t.preserveUnknown=g,t.isUnionableType=function(e){let t=3;for(const n of e)t&=n.flags;return 0!=(1&t)&&0==(2&t)},t.derivesFromAnyOrUnknown=function(e){let t=!1;return y(e,(n=>{(0,o.isAnyOrUnknown)(e)?t=!0:(0,o.isInstantiableClass)(n)?o.ClassType.hasUnknownBaseClass(n)&&(t=!0):(0,o.isClassInstance)(n)&&o.ClassType.hasUnknownBaseClass(n)&&(t=!0)})),t},t.getFullNameOfType=function(e){var t;if(null===(t=e.typeAliasInfo)||void 0===t?void 0:t.fullName)return e.typeAliasInfo.fullName;switch(e.category){case 2:case 1:return"typing.Any";case 6:case 4:return e.details.fullName;case 7:return e.moduleName;case 5:return e.overloads[0].details.fullName}},t.addConditionToType=h,t.getTypeCondition=f,t.isTypeAliasPlaceholder=function(e){return(0,o.isTypeVar)(e)&&o.TypeVarType.isTypeAliasPlaceholder(e)},t.isTypeAliasRecursive=function(e,t){return 8!==t.category?t===e||(0,o.isUnbound)(t)&&t.typeAliasInfo&&t.typeAliasInfo.name===e.details.recursiveTypeAliasName:void 0!==(0,o.findSubtype)(t,(t=>(0,o.isTypeVar)(t)&&t.details===e.details))},t.transformPossibleRecursiveTypeAlias=function e(t){var n;if(t){if((0,o.isTypeVar)(t)&&t.details.recursiveTypeAliasName&&t.details.boundType){const e=o.TypeBase.isInstance(t)?G(t.details.boundType):t.details.boundType;if(!(null===(n=t.typeAliasInfo)||void 0===n?void 0:n.typeArguments)||!t.details.recursiveTypeParameters)return e;return N(e,j(t.details.recursiveTypeParameters,t.typeAliasInfo.typeArguments,T(t)))}if((0,o.isUnion)(t)&&t.includesRecursiveTypeAlias){let n=d(t,(t=>e(t)));return n!==t&&t.typeAliasInfo&&(n=o.TypeBase.cloneForTypeAlias(n,t.typeAliasInfo.name,t.typeAliasInfo.fullName,t.typeAliasInfo.moduleName,t.typeAliasInfo.fileUri,t.typeAliasInfo.typeVarScopeId,t.typeAliasInfo.isPep695Syntax,t.typeAliasInfo.typeParameters,t.typeAliasInfo.typeArguments)),n}}return t},t.getTypeVarScopeId=T,t.getTypeVarScopeIds=v,t.specializeWithDefaultTypeArgs=b,t.specializeWithUnknownTypeArgs=function(e){return 0===e.details.typeParameters.length?e:o.ClassType.cloneForSpecialization(e,e.details.typeParameters.map((e=>_(e))),!1,e.includeSubclasses)},t.getUnknownTypeForTypeVar=_,t.getUnknownTypeForParamSpec=C,t.getUnknownTypeForCallable=function(){const e=o.FunctionType.createSynthesizedInstance("",32768);return o.FunctionType.addDefaultParameters(e),e.details.declaredReturnType=o.UnknownType.create(),e},t.selfSpecializeClass=function(e){return 0===e.details.typeParameters.length||e.typeArguments?e:o.ClassType.cloneForSpecialization(e,e.details.typeParameters,!0)},t.getSpecializedTupleType=function(e){let t;if((0,o.isInstantiableClass)(e)?t=e:(0,o.isClassInstance)(e)&&(t=o.ClassType.cloneAsInstantiable(e)),!t)return;const n=t.details.mro.find((e=>(0,o.isInstantiableClass)(e)&&S(e)));if(!n||!(0,o.isInstantiableClass)(n))return;return o.ClassType.isSameGenericClass(t,n)?t:N(n,L(t))},t.isLiteralType=I,t.isLiteralTypeOrUnion=function(e,t=!1){return(0,o.isClassInstance)(e)?!(!t||!c(e))||void 0!==e.literalValue:!!(0,o.isUnion)(e)&&!(0,o.findSubtype)(e,(e=>!(0,o.isClassInstance)(e)||(c(e)?!t:void 0===e.literalValue)))},t.containsLiteralType=k,t.getLiteralTypeClassName=function e(t){if((0,o.isClassInstance)(t))return void 0!==t.literalValue&&o.ClassType.isBuiltIn(t)?t.details.name:void 0;if((0,o.isUnion)(t)){let n,a=!1;return y(t,(t=>{const r=e(t);r?n||(n=r):a=!0})),a?void 0:n}},t.getUnionSubtypeCount=function(e){return(0,o.isUnion)(e)?e.subtypes.length:1},t.isEllipsisType=function(e){return(0,o.isAny)(e)&&e.isEllipsis},t.isProperty=function(e){return(0,o.isClassInstance)(e)&&o.ClassType.isPropertyClass(e)},t.isCallableType=function e(t){if((0,o.isFunction)(t)||(0,o.isOverloadedFunction)(t)||(0,o.isAnyOrUnknown)(t))return!0;if(W(t))return!0;if((0,o.isClass)(t)){if(o.TypeBase.isInstantiable(t))return!0;return!!M(t,"__call__",16)}return!!(0,o.isUnion)(t)&&t.subtypes.every((t=>e(t)))},t.isDescriptorInstance=function(e,t=!1){return(0,o.isUnion)(e)?e.subtypes.every((e=>w(e,t))):w(e,t)},t.isMaybeDescriptorInstance=w,t.isTupleClass=S,t.isUnboundedTupleClass=A,t.isTupleIndexUnambiguous=function(e,t){if(!e.tupleTypeArguments)return!1;if(t<0&&(A(e)||e.tupleTypeArguments.length+t<0))return!1;let n=e.tupleTypeArguments.findIndex((e=>e.isUnbounded||(0,o.isUnpackedVariadicTypeVar)(e.type)));return n<0&&(n=e.tupleTypeArguments.length),t<n},t.partiallySpecializeType=x,t.populateTypeVarContextForSelfType=P,t.ensureFunctionSignaturesAreUnique=function(e,t,n){return new re(t,n).apply(e,0)},t.applySolvedTypeVars=N,t.applySourceContextTypeVars=function(e,t){t.isEmpty()||e.doForEachSignatureContext((e=>{D(e,t)}))},t.applySourceContextTypeVarsToSignature=D,t.applyInScopePlaceholders=F,t.validateTypeVarDefault=function(e,t,n){if(e.details.isDefaultExplicit&&J(e.details.defaultType)){new ae(t,n).apply(e.details.defaultType,0)}},t.replaceTypeVarsWithAny=function(e){return(new ne).apply(e,0)},t.transformExpectedType=function(e,t,n){return new ie(t,n).apply(e,0)},t.getProtocolSymbols=function(e){const t=new Map;return 0!=(16384&e.details.flags)&&E(e,t,16384),t},t.getProtocolSymbolsRecursive=E,t.getContainerDepth=function e(t,n=0){if(n>o.maxTypeRecursionCount)return 1;if(n++,!(0,o.isClassInstance)(t))return 0;let a=0;if(t.tupleTypeArguments)t.tupleTypeArguments.forEach((t=>{y(t.type,(t=>{const r=e(t,n);a=Math.max(r,a)}))}));else{if(!t.typeArguments)return 0;t.typeArguments.forEach((t=>{y(t,(t=>{const r=e(t,n);a=Math.max(r,a)}))}))}return 1+a},t.lookUpObjectMember=M,t.lookUpClassMember=O,t.getClassMemberIterator=z,t.getClassIterator=V,t.getClassFieldsRecursive=function(e){const t=new Map;return o.ClassType.getReverseMro(e).forEach((n=>{const a=x(n,e);(0,o.isClass)(a)?o.ClassType.getSymbolTable(a).forEach(((e,n)=>{!e.isIgnoredForProtocolMatch()&&e.hasTypedDeclarations()&&t.set(n,{classType:a,symbol:e,isInstanceMember:e.isInstanceMember(),isClassMember:e.isClassMember(),isClassVar:(0,i.isEffectivelyClassVar)(e,o.ClassType.isDataClass(a)),isTypeDeclared:!0,skippedUndeclaredType:!1})})):t.clear()})),t},t.addTypeVarsToListIfUnique=U,t.getTypeVarArgumentsRecursive=function e(t,n=0){var a,r;if(n>o.maxTypeRecursionCount)return[];if(n++,null===(a=t.typeAliasInfo)||void 0===a?void 0:a.typeArguments){const a=[];return null===(r=t.typeAliasInfo)||void 0===r||r.typeArguments.forEach((t=>{U(a,e(t,n))})),a}if((0,o.isTypeVar)(t))return t.details.recursiveTypeAliasName||(0,o.isParamSpec)(t)&&t.paramSpecAccess?[]:[o.TypeBase.isInstantiable(t)?o.TypeVarType.cloneAsInstance(t):t];if((0,o.isClass)(t)){const a=[],r=t.tupleTypeArguments?t.tupleTypeArguments.map((e=>e.type)):t.typeArguments;return r&&r.forEach((t=>{U(a,e(t,n))})),a}if((0,o.isUnion)(t)){const a=[];return y(t,(t=>{U(a,e(t,n))})),a}if((0,o.isFunction)(t)){const a=[];for(let r=0;r<t.details.parameters.length;r++)U(a,e(o.FunctionType.getEffectiveParameterType(t,r),n));t.details.paramSpec&&U(a,[t.details.paramSpec]);const r=o.FunctionType.getSpecializedReturnType(t);return r&&U(a,e(r,n)),a}return[]},t.isTypeVarLimitedToCallable=function(e,t){const n=R(e,t);return n.isTypeVarUsed&&n.isUsedInCallable},t.specializeClassType=function(e){const t=new l.TypeVarContext(T(e));return o.ClassType.getTypeParameters(e).forEach((e=>{t.setTypeVarType(e,N(e.details.defaultType,t))})),N(e,t)},t.setTypeArgumentsRecursive=function e(t,n,a,r=0){if(!(r>o.maxTypeRecursionCount||(r++,a.isLocked())))switch(t.category){case 8:y(t,(t=>{e(t,n,a,r)}));break;case 6:t.typeArguments&&t.typeArguments.forEach((t=>{e(t,n,a,r)})),t.tupleTypeArguments&&t.tupleTypeArguments.forEach((t=>{e(t.type,n,a,r)}));break;case 4:t.specializedTypes?(t.specializedTypes.parameterTypes.forEach((t=>{e(t,n,a,r)})),t.specializedTypes.returnType&&e(t.specializedTypes.returnType,n,a,r)):(t.details.parameters.forEach((t=>{e(t.type,n,a,r)})),t.details.declaredReturnType&&e(t.details.declaredReturnType,n,a,r)),t.details.paramSpec&&(a.getPrimarySignature().getTypeVar(t.details.paramSpec)||a.setTypeVarType(t.details.paramSpec,C()));break;case 5:t.overloads.forEach((t=>{e(t,n,a,r)}));break;case 9:a.getPrimarySignature().getTypeVar(t)||a.setTypeVarType(t,n)}},t.buildTypeVarContextFromSpecializedClass=L,t.buildTypeVarContext=j,t.specializeForBaseClass=function(e,t){if(0===o.ClassType.getTypeParameters(t).length)return t;const n=N(t,L(e));return(0,r.assert)((0,o.isInstantiableClass)(n)),n},t.derivesFromStdlibClass=function(e,t){return e.details.mro.some((e=>(0,o.isClass)(e)&&o.ClassType.isBuiltIn(e,t)))},t.derivesFromClassRecursive=function e(t,n,a){if(o.ClassType.isSameGenericClass(t,n))return!0;for(const r of t.details.baseClasses)if((0,o.isInstantiableClass)(r)){if(e(r,n,a))return!0}else if(!a&&(0,o.isAnyOrUnknown)(r))return!0;return!1},t.synthesizeTypeVarForSelfCls=B,t.getDeclaredGeneratorReturnType=function(e){const t=o.FunctionType.getSpecializedReturnType(e);if(t){const e=Y(t);if(e)return e.length>=3?e[2]:o.UnknownType.create()}},t.getGeneratorYieldType=function(e,t){let n=!0;const a=d(e,(e=>{if((0,o.isAnyOrUnknown)(e))return e;if((0,o.isClassInstance)(e)){if([["AsyncIterable","Iterable"],["AsyncIterator","Iterator"],["AsyncGenerator","Generator"],["","AwaitableGenerator"]].some((n=>o.ClassType.isBuiltIn(e,t?n[0]:n[1]))))return e.typeArguments&&e.typeArguments.length>=1?e.typeArguments[0]:o.UnknownType.create()}n=!1}));return n?a:void 0},t.isInstantiableMetaclass=function(e){return(0,o.isInstantiableClass)(e)&&e.details.mro.some((e=>(0,o.isClass)(e)&&o.ClassType.isBuiltIn(e,"type")))},t.isMetaclassInstance=q,t.isEffectivelyInstantiable=W,t.convertToInstance=G,t.convertToInstantiable=K,t.getMembersForClass=function(e,t,n){if(e.details.mro.forEach((e=>{if((0,o.isInstantiableClass)(e)){const a=o.ClassType.isTypedDictClass(e);o.ClassType.getSymbolTable(e).forEach(((e,r)=>{if((e.isClassMember()||n&&e.isInstanceMember())&&!(a&&(0,i.isTypedDictMemberAccessedThroughIndex)(e)||e.isInitVar())){const n=t.get(r);n?!n.hasTypedDeclarations()&&e.hasTypedDeclarations()&&t.set(r,e):t.set(r,e)}}))}})),!n){const n=e.details.effectiveMetaclass;if(n&&(0,o.isInstantiableClass)(n))for(const e of n.details.mro){if(!(0,o.isInstantiableClass)(e))break;o.ClassType.getSymbolTable(e).forEach(((e,n)=>{const a=t.get(n);a?!a.hasTypedDeclarations()&&e.hasTypedDeclarations()&&t.set(n,e):t.set(n,e)}))}}},t.getMembersForModule=function(e,t){e.loaderFields&&e.loaderFields.forEach(((e,n)=>{t.set(n,e)})),e.fields.forEach(((e,n)=>{t.set(n,e)}))},t.containsAnyRecursive=function(e){class t extends p.TypeWalker{constructor(){super(...arguments),this.foundAny=!1}visitAny(e){this.foundAny=!0,this.cancelWalk()}}const n=new t;return n.walk(e),n.foundAny},t.containsAnyOrUnknown=function(e,t){class n extends p.TypeWalker{constructor(e){super(),this._recurse=e}visitUnknown(e){this.anyOrUnknownType=this.anyOrUnknownType?g(this.anyOrUnknownType,e):e}visitAny(e){this.anyOrUnknownType=this.anyOrUnknownType?g(this.anyOrUnknownType,e):e}visitClass(e){this._recurse&&super.visitClass(e)}visitFunction(e){this._recurse&&(o.FunctionType.shouldSkipArgsKwargsCompatibilityCheck(e)&&(this.anyOrUnknownType=this.anyOrUnknownType?g(this.anyOrUnknownType,o.AnyType.create()):o.AnyType.create()),super.visitFunction(e))}}const a=new n(t);return a.walk(e),a.anyOrUnknownType},t.isPartlyUnknown=function e(t,n=0){var a,r;if(n>o.maxTypeRecursionCount)return!1;if(n++,(0,o.isUnknown)(t))return!0;if((null===(a=t.typeAliasInfo)||void 0===a?void 0:a.typeArguments)&&t.typeAliasInfo.typeArguments.some((t=>e(t,n))))return!0;if((0,o.isUnion)(t))return void 0!==(0,o.findSubtype)(t,(t=>e(t,n)));if((0,o.isClass)(t)){if(!t.includeSubclasses)return!1;if(!o.ClassType.isPseudoGenericClass(t)){const a=(null===(r=t.tupleTypeArguments)||void 0===r?void 0:r.map((e=>e.type)))||t.typeArguments;if(a)for(const t of a)if(e(t,n))return!0}return!1}if((0,o.isOverloadedFunction)(t))return o.OverloadedFunctionType.getOverloads(t).some((t=>e(t,n)));if((0,o.isFunction)(t)){for(let a=0;a<t.details.parameters.length;a++)if(t.details.parameters[a].name){if(e(o.FunctionType.getEffectiveParameterType(t,a),n))return!0}return!(!t.details.declaredReturnType||o.FunctionType.isParamSpecValue(t)||!e(t.details.declaredReturnType,n))}return!1},t.explodeGenericClass=function(e){return e.typeArguments&&1===e.typeArguments.length&&(0,o.isUnion)(e.typeArguments[0])?(0,o.combineTypes)(e.typeArguments[0].subtypes.map((t=>o.ClassType.cloneForSpecialization(e,[t],!0)))):e},t.combineSameSizedTuples=function(e,t){if(!t||!(0,o.isInstantiableClass)(t)||A(t))return e;let n,a=!0;return y(e,(e=>{if((0,o.isClassInstance)(e)){let t;(0,o.isClass)(e)&&S(e)&&!A(e)&&(t=e),t||(t=e.details.mro.find((e=>(0,o.isClass)(e)&&S(e)&&!A(e)))),t&&(0,o.isClass)(t)&&t.tupleTypeArguments?n?n.length===t.tupleTypeArguments.length?t.tupleTypeArguments.forEach(((e,t)=>{n[t].push(e.type)})):a=!1:n=t.tupleTypeArguments.map((e=>[e.type])):a=!1}else a=!1})),a&&n?G($(t,n.map((e=>({type:(0,o.combineTypes)(e),isUnbounded:!1}))))):e},t.specializeTupleClass=$,t.removeParamSpecVariadicsFromSignature=function(e){if((0,o.isFunction)(e))return H(e);const t=[];let n=!1;for(const a of e.overloads){const e=H(a);t.push(e),e!==a&&(n=!0)}return n?o.OverloadedFunctionType.create(t):e},t.removeParamSpecVariadicsFromFunction=H,t.getGeneratorTypeArgs=Y,t.requiresTypeArguments=function(e){if(e.details.typeParameters.length>0){const t=e.details.typeParameters[0];return!t.details.isSynthesized&&!t.details.isDefaultExplicit}if(o.ClassType.isSpecialBuiltIn(e)){if(["Tuple","Callable","Generic","Type","Optional","Union","Literal","Annotated","TypeGuard","TypeIs"].some((t=>t===(e.aliasName||e.details.name))))return!0}return!1},t.requiresSpecialization=J,t.combineVariances=function(e,t){return 1===e?t:2===t||3===t&&4===e||4===t&&3===e?2:e},t.isVarianceOfTypeArgumentCompatible=function e(t,n){if(1===n||0===n)return!0;if(!(0,o.isTypeVar)(t)||t.details.isParamSpec||t.details.isVariadic){if((0,o.isClassInstance)(t)&&t.details.typeParameters&&t.details.typeParameters.length>0)return t.details.typeParameters.every(((a,r)=>{let s;if(a.details.isParamSpec||a.details.isVariadic)return!0;t.typeArguments&&r<t.typeArguments.length&&(s=t.typeArguments[r]);const i=a.details.declaredVariance;if(0===i)return!0;let l=2;return 3===i?l=n:4===i&&(3===n?l=4:4===n&&(l=3)),e(null!=s?s:o.UnknownType.create(),l)}))}else{const e=t.details.declaredVariance;if(4===e||3===e)return e===n}return!0},t.computeMroLinearization=function(e){let t=!0;e.details.mro=[];const n=e.details.baseClasses.filter(((t,n)=>{if((0,o.isInstantiableClass)(t)&&o.ClassType.isBuiltIn(t,"Generic")){if(o.ClassType.isProtocolClass(e)||o.ClassType.isTypedDictClass(e))return!1;if(e.details.baseClasses.some(((e,t)=>t>n&&(0,o.isInstantiableClass)(e)&&e.typeArguments&&e.isTypeArgumentExplicit)))return!1}return!0})),a=[];n.forEach((e=>{if((0,o.isInstantiableClass)(e)){const t=L(e);a.push(e.details.mro.map((e=>N(e,t))))}else a.push([e])})),a.push(n.map((t=>N(t,L(e)))));const r=L(e);function s(e,t){return t.some((t=>t.findIndex((t=>(0,o.isInstantiableClass)(t)&&o.ClassType.isSameGenericClass(t,e)))>0))}function i(e,t){for(let n=0;n<t.length;n++)t[n]=t[n].filter((t=>!(0,o.isInstantiableClass)(t)||!o.ClassType.isSameGenericClass(t,e)))}for(e.details.mro.push(N(e,r));;){let n,r=!1;for(let t=0;t<a.length;t++){const l=a[t];if(l.length>0){if(void 0===n&&(n=l),!(0,o.isInstantiableClass)(l[0])){r=!0,e.details.mro.push(l[0]),l.shift();break}if(!s(l[0],a)){r=!0,e.details.mro.push(l[0]),i(l[0],a);break}}}if(!n)break;r||(t=!1,(0,o.isInstantiableClass)(n[0])?(e.details.mro.push(n[0]),i(n[0],a)):(e.details.mro.push(n[0]),n.shift()))}return t},t.getDeclaringModulesForType=function(e){const t=[];return Q(e,t),t},t.convertTypeToParamSpecValue=X,t.convertParamSpecValueToType=ee;class te{constructor(){this._isTransformingTypeArg=!1,this._pendingTypeVarTransformations=new Set,this._pendingFunctionTransformations=[]}apply(e,t){var n,r;if(t>o.maxTypeRecursionCount)return e;if(t++,(e=this.transformGenericTypeAlias(e,t)).condition&&(e=this.transformConditionalType(e,t)),!J(e))return e;if((0,o.isAnyOrUnknown)(e))return e;if(c(e))return e;if((0,o.isTypeVar)(e)){if(e.details.recursiveTypeAliasName){if(!(null===(n=e.typeAliasInfo)||void 0===n?void 0:n.typeArguments))return e;let a=!1;const r=e.typeAliasInfo.typeArguments.map((e=>{const n=this.apply(e,t);return n!==e&&(a=!0),n}));return a?o.TypeBase.cloneForTypeAlias(e,e.typeAliasInfo.name,e.typeAliasInfo.fullName,e.typeAliasInfo.moduleName,e.typeAliasInfo.fileUri,e.typeAliasInfo.typeVarScopeId,e.typeAliasInfo.isPep695Syntax,e.typeAliasInfo.typeParameters,r):e}let a=e;if(!this._isTypeVarScopePending(e.scopeId))if(e.details.isParamSpec){let n=e;e.paramSpecAccess&&(n=o.TypeVarType.cloneForParamSpecAccess(e,void 0));const r=this.transformParamSpec(n,t);if(r){const t=ee(r);a=e.paramSpecAccess?(0,o.isParamSpec)(t)?o.TypeVarType.cloneForParamSpecAccess(t,e.paramSpecAccess):o.UnknownType.create():t}}else a=null!==(r=this.transformTypeVar(e,t))&&void 0!==r?r:e,this._isTransformingTypeArg||(e.scopeId&&this._pendingTypeVarTransformations.add(e.scopeId),a=this.apply(a,t),e.scopeId&&this._pendingTypeVarTransformations.delete(e.scopeId)),(0,o.isVariadicTypeVar)(e)&&e.isVariadicInUnion&&(a=Z(a));return a}if((0,o.isUnion)(e)){const n=d(e,(e=>{let n=this.apply(e,t);if((0,o.isVariadicTypeVar)(e)&&!(0,o.isVariadicTypeVar)(n)){const e=[];y(n,(t=>{e.push(Z(t))})),n=(0,o.combineTypes)(e)}return this.transformUnionSubtype?this.transformUnionSubtype(e,n,t):n}));return(0,o.isNever)(n)?o.UnknownType.create():n}if((0,o.isClass)(e))return this.transformTypeVarsInClassType(e,t);if((0,o.isFunction)(e)){if(this._pendingFunctionTransformations.some((t=>t===e)))return e;this._pendingFunctionTransformations.push(e);const n=this.transformTypeVarsInFunctionType(e,t);return this._pendingFunctionTransformations.pop(),n}if((0,o.isOverloadedFunction)(e)){if(this._pendingFunctionTransformations.some((t=>t===e)))return e;this._pendingFunctionTransformations.push(e);let n=!1;const r=[];return e.overloads.forEach((e=>{const s=this.transformTypeVarsInFunctionType(e,t);(0,o.isFunction)(s)?r.push(s):(0,a.appendArray)(r,s.overloads),s!==e&&(n=!0)})),this._pendingFunctionTransformations.pop(),n?o.OverloadedFunctionType.create(r):e}return e}transformTypeVar(e,t){}transformTupleTypeVar(e,t){}transformParamSpec(e,t){}transformUnionSubtype(e,t,n){return t}doForEachSignatureContext(e){return e()}transformGenericTypeAlias(e,t){if(!e.typeAliasInfo||!e.typeAliasInfo.typeParameters||!e.typeAliasInfo.typeArguments)return e;let n=!1;const a=e.typeAliasInfo.typeArguments.map((a=>{const r=this.apply(a,t);return e!==r&&(n=!0),r}));return n?o.TypeBase.cloneForTypeAlias(e,e.typeAliasInfo.name,e.typeAliasInfo.fullName,e.typeAliasInfo.moduleName,e.typeAliasInfo.fileUri,e.typeAliasInfo.typeVarScopeId,e.typeAliasInfo.isPep695Syntax,e.typeAliasInfo.typeParameters,a):e}transformConditionalType(e,t){return e}transformTypeVarsInClassType(e,t){const n=o.ClassType.getTypeParameters(e);if(0===n.length&&!o.ClassType.isSpecialBuiltIn(e)&&!o.ClassType.isBuiltIn(e,"type"))return e;let r,s,i=!1;const l=e=>{const n=this.transformParamSpec(e,t);return n?(i=!0,ee(n)):e},p=this._isTransformingTypeArg;if(this._isTransformingTypeArg=!0,o.ClassType.isTupleClass(e)){if(e.tupleTypeArguments)s=[],e.tupleTypeArguments.forEach((e=>{const n=this.apply(e.type,t);n!==e.type&&(i=!0),(0,o.isUnpackedVariadicTypeVar)(e.type)&&(0,o.isClassInstance)(n)&&S(n)&&n.tupleTypeArguments?(0,a.appendArray)(s,n.tupleTypeArguments):s.push({type:n,isUnbounded:e.isUnbounded,isOptional:e.isOptional})}));else if(n.length>0)if(s=this.transformTupleTypeVar(n[0],t),s)i=!0;else{const e=this.apply(n[0],t);n[0]!==e&&(s=[{type:e,isUnbounded:!0}],i=!0)}s&&s.length>0&&(r=[(0,o.combineTypes)(s.map((e=>(0,o.isTypeVar)(e.type)&&(0,o.isUnpackedVariadicTypeVar)(e.type)?o.TypeVarType.cloneForUnpacked(e.type,!0):e.type)))])}return r||(e.typeArguments?r=e.typeArguments.map((e=>{if((0,o.isTypeVar)(e)&&e.details.isParamSpec)return l(e);let n=this.apply(e,t);return n!==e&&(i=!0,(0,o.isTypeVar)(e)&&(0,o.isVariadicTypeVar)(e)&&e.isVariadicInUnion&&(n=Z(n))),n})):(r=[],n.forEach((n=>{let a=n;if(n.details.isParamSpec)a=l(n),a!==n&&(i=!0);else if(!this._isTypeVarScopePending(n.scopeId)){const r=this.transformTypeVar(n,t);a=null!=r?r:n,a!==n?i=!0:void 0===r||e.typeArguments||(i=!0)}r.push(a)})))),this._isTransformingTypeArg=p,i?o.ClassType.cloneForSpecialization(e,r,!0,void 0,s):e}transformTypeVarsInFunctionType(e,t){return this.doForEachSignatureContext((()=>{let n=e;if(n.details.paramSpec){const e=this.transformParamSpec(n.details.paramSpec,t);e&&(n=o.FunctionType.cloneForParamSpec(n,e))}const a=o.FunctionType.getSpecializedReturnType(n),r=a?this.apply(a,t):void 0;let s=a!==r;const i={parameterTypes:[],returnType:r};if(n.details.parameters.length>=2){const e=n.details.parameters[n.details.parameters.length-2],a=n.details.parameters[n.details.parameters.length-1],r=o.FunctionType.getEffectiveParameterType(n,n.details.parameters.length-2),s=o.FunctionType.getEffectiveParameterType(n,n.details.parameters.length-1);if(1===e.category&&2===a.category&&(0,o.isParamSpec)(r)&&(0,o.isParamSpec)(s)&&(0,o.isTypeSame)(r,s)){const e=this.transformParamSpec(r,t);e&&(e.details.parameters.length>0||void 0===e.details.paramSpec||!(0,o.isTypeSame)(r,e.details.paramSpec))&&(n=o.FunctionType.cloneForParamSpecApplication(n,e))}}let l,p;const c=[],d=this._isTransformingTypeArg;this._isTransformingTypeArg=!0;for(let e=0;e<n.details.parameters.length;e++){const a=o.FunctionType.getEffectiveParameterType(n,e),r=this.apply(a,t);i.parameterTypes.push(r);let d=o.FunctionType.getEffectiveParameterDefaultArgType(n,e);if(d){const e=this.apply(d,t);e!==d&&(d=e,s=!0)}c.push(d),void 0===l&&(0,o.isVariadicTypeVar)(a)&&1===n.details.parameters[e].category&&(l=e,(0,o.isClassInstance)(r)&&S(r)&&r.isUnpacked&&(p=r.tupleTypeArguments)),a!==r&&(s=!0)}let u;if(n.inferredReturnType&&(u=this.apply(n.inferredReturnType,t),u!==n.inferredReturnType&&(s=!0)),this._isTransformingTypeArg=d,!s)return n;if(c.some((e=>void 0!==e))&&(i.parameterDefaultArgs=c),!p)return o.FunctionType.cloneForSpecialization(n,i,u);const m=o.TypeBase.isInstantiable(n)?o.FunctionType.createInstantiable(64|n.details.flags):o.FunctionType.createSynthesizedInstance("",n.details.flags);let y=!1,g=!1;return i.parameterTypes.forEach(((e,t)=>{if(t===l){let e=!1;p.forEach((t=>{o.FunctionType.addParameter(m,{category:t.isUnbounded||(0,o.isVariadicTypeVar)(t.type)?1:0,name:`__p${m.details.parameters.length}`,isNameSynthesized:!0,type:t.type,hasDeclaredType:!0}),t.isUnbounded&&(e=!0)})),e?g=!0:y=!0}else{const a={...n.details.parameters[t]};((0,o.isKeywordOnlySeparator)(a)||2===a.category)&&(y=!1),0===a.category&&a.name&&y&&(o.FunctionType.addKeywordOnlyParameterSeparator(m),y=!1),a.type=e,a.name&&a.isNameSynthesized&&(a.name=`__p${m.details.parameters.length}`),0===a.category&&!a.name&&g||o.FunctionType.addParameter(m,a)}})),m.details.declaredReturnType=i.returnType,m}))}_isTypeVarScopePending(e){return!!e&&this._pendingTypeVarTransformations.has(e)}}class ne extends te{constructor(){super()}transformTypeVar(e){return o.AnyType.create()}transformParamSpec(e){return C()}}class ae extends te{constructor(e,t){super(),this._liveTypeParams=e,this._invalidTypeVars=t}transformTypeVar(e){const t=this._liveTypeParams.find((t=>t.details.name===e.details.name));return t&&!(0,o.isParamSpec)(t)||this._invalidTypeVars.add(e.details.name),o.UnknownType.create()}transformParamSpec(e){const t=this._liveTypeParams.find((t=>t.details.name===e.details.name));t&&(0,o.isParamSpec)(t)||this._invalidTypeVars.add(e.details.name)}}class re extends te{constructor(e,t){super(),this._signatureTracker=e,this._expressionOffset=t}transformGenericTypeAlias(e,t){return e}transformTypeVarsInClassType(e,t){return e}transformTypeVarsInFunctionType(e,t){if(e.trackedSignatures&&this._signatureTracker.addTrackedSignatures(e.trackedSignatures),0===e.details.typeParameters.length)return super.transformTypeVarsInFunctionType(e,t);let n=e;const a=this._signatureTracker.findSignature(e);if(a){let t=a.expressionOffsets.findIndex((e=>e===this._expressionOffset));if(t<0&&(t=a.expressionOffsets.length),t>0){const a=new l.TypeVarContext(v(e));e.details.typeParameters.forEach((e=>{if(1===e.scopeType){let n=o.TypeVarType.cloneForNewName(e,`${e.details.name}(${t})`);n.details.isParamSpec&&(n=X(n)),a.setTypeVarType(e,n)}})),n=N(e,a),(0,r.assert)((0,o.isFunction)(n)||(0,o.isOverloadedFunction)(n))}}return this._signatureTracker.addSignature(e,this._expressionOffset),n}}class se extends te{constructor(e,t){super(),this._typeVarContext=e,this._options=t,this._isSolvingDefaultType=!1}transformTypeVar(e,t){var n,a;const r=this._typeVarContext.getSignatureContext(null!==(n=this._activeTypeVarSignatureContextIndex)&&void 0!==n?n:0);if(e.scopeId&&this._typeVarContext.hasSolveForScope(e.scopeId)){let n=r.getTypeVarType(e,!!this._options.useNarrowBoundOnly);if(!n&&this._options.useNarrowBoundOnly){const t=r.getTypeVarType(e);t&&((0,o.isTypeVar)(t)||k(t,!0))&&(n=t)}if(n)return n=o.TypeBase.isInstantiable(e)?(0,o.isAnyOrUnknown)(n)&&this._options.typeClassType&&(0,o.isInstantiableClass)(this._options.typeClassType)?o.ClassType.cloneForSpecialization(o.ClassType.cloneAsInstance(this._options.typeClassType),[n],!0):K(n,!1):d(n,(e=>(0,o.isClassInstance)(e)&&(e.includeSubclasses||(e=o.ClassType.cloneAsInstance(o.ClassType.cloneAsInstantiable(e))),this._options.unknownIfNotFound)?b(e):e)),(0,o.isTypeVar)(n)&&e.isVariadicUnpacked&&n.details.isVariadic?o.TypeVarType.cloneForUnpacked(n,e.isVariadicInUnion):n;let s=!1;if(this._options.unknownIfNotFound){const t=null!==(a=this._options.unknownExemptTypeVars)&&void 0!==a?a:[],n=o.TypeBase.isInstance(e)?e:o.TypeVarType.cloneAsInstance(e);t.some((e=>(0,o.isTypeSame)(e,n)))||(s=!0)}else this._options.applyInScopePlaceholders&&e.isInScopePlaceholder&&(s=!0);if(s)return e.details.isDefaultExplicit?this._solveDefaultType(e.details.defaultType,t):o.UnknownType.create()}if(this._isSolvingDefaultType&&!e.scopeId){const n=r.getTypeVars().find((t=>t.typeVar.details.name===e.details.name));return n?r.getTypeVarType(n.typeVar):e.details.isDefaultExplicit?this.apply(e.details.defaultType,t):o.UnknownType.create()}}transformUnionSubtype(e,t){var n;if(this._options.eliminateUnsolvedInUnions&&(0,o.isTypeVar)(e)&&void 0!==e.scopeId&&this._typeVarContext.hasSolveForScope(e.scopeId)){const a=this._typeVarContext.getSignatureContext(null!==(n=this._activeTypeVarSignatureContextIndex)&&void 0!==n?n:0).getTypeVarType(e);if(!a||(0,o.isTypeVar)(a)&&a.isInScopePlaceholder){if(e===t)return;if((0,o.isUnknown)(t)&&this._options.unknownIfNotFound)return}}return t}transformTupleTypeVar(e){var t;if(!e.scopeId||!this._typeVarContext.hasSolveForScope(e.scopeId)){const t=e.details.defaultType;return e.details.isDefaultExplicit&&(0,o.isClassInstance)(t)&&t.tupleTypeArguments?t.tupleTypeArguments:void 0}return this._typeVarContext.getSignatureContext(null!==(t=this._activeTypeVarSignatureContextIndex)&&void 0!==t?t:0).getTupleTypeVar(e)}transformParamSpec(e,t){var n,a;const r=this._typeVarContext.getSignatureContext(null!==(n=this._activeTypeVarSignatureContextIndex)&&void 0!==n?n:0);if(this._isSolvingDefaultType&&!e.scopeId){const n=r.getTypeVars().find((t=>t.typeVar.details.name===e.details.name));return n?r.getParamSpecType(n.typeVar):e.details.isDefaultExplicit?X(this.apply(e.details.defaultType,t)):C()}if(!e.scopeId||!this._typeVarContext.hasSolveForScope(e.scopeId))return;const s=r.getParamSpecType(e);if(s)return s;let i=!1;if(this._options.unknownIfNotFound){(null!==(a=this._options.unknownExemptTypeVars)&&void 0!==a?a:[]).some((t=>(0,o.isTypeSame)(t,e,{ignoreTypeFlags:!0})))||(i=!0)}else this._options.applyInScopePlaceholders&&e.isInScopePlaceholder&&(i=!0);return i?e.details.isDefaultExplicit?X(this._solveDefaultType(e.details.defaultType,t)):C():void 0}transformConditionalType(e,t){var n;if(!e.condition)return e;const a=this._typeVarContext.getSignatureContext(null!==(n=this._activeTypeVarSignatureContextIndex)&&void 0!==n?n:0);for(const t of e.condition){if(0===t.typeVar.details.constraints.length)continue;const e=a.getTypeVar(t.typeVar);if(!e||t.constraintIndex>=e.typeVar.details.constraints.length)continue;const n=a.getTypeVarType(e.typeVar);if(!n)continue;const r=e.typeVar.details.constraints[t.constraintIndex];if(!(0,o.isTypeSame)(r,n))return o.NeverType.createNever()}return e}doForEachSignatureContext(e){const t=this._typeVarContext.getSignatureContexts();if(t.length<=1)return e();const n=t.map(((t,n)=>(this._activeTypeVarSignatureContextIndex=n,e())));this._activeTypeVarSignatureContextIndex=void 0;const a=[];return y((0,o.combineTypes)(n),(e=>{(0,r.assert)((0,o.isFunction)(e)),e=o.FunctionType.cloneWithNewFlags(e,256|e.details.flags),a.push(e)})),1===a.length?a[0]:o.OverloadedFunctionType.create(a)}_solveDefaultType(e,t){const n=this._isSolvingDefaultType;this._isSolvingDefaultType=!0;const a=this.apply(e,t);return this._isSolvingDefaultType=n,a}}class ie extends te{constructor(e,t){super(),this._liveTypeVarScopes=e,this._usageOffset=t}transformTypeVar(e){return this._isTypeVarLive(e)?e:o.TypeVarType.cloneAsInScopePlaceholder(e,this._usageOffset)}transformParamSpec(e){if(!this._isTypeVarLive(e))return X(o.TypeVarType.cloneAsInScopePlaceholder(e,this._usageOffset))}_isTypeVarLive(e){return this._liveTypeVarScopes.some((t=>e.scopeId===t))}}class oe extends te{constructor(e){super(),this._signatureContext=e}transformTypeVar(e){var t;return e.isInScopePlaceholder&&null!==(t=this._signatureContext.getTypeVarType(e))&&void 0!==t?t:e}transformParamSpec(e){if(e.isInScopePlaceholder)return this._signatureContext.getParamSpecType(e)}}function le(e,t){if(!t.getTypeVars().some((e=>e.typeVar.isInScopePlaceholder)))return e;return new oe(t).apply(e,0)}},97632:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeVarContext=t.TypeVarSignatureContext=void 0;const a=n(83181),r=n(8312);class s{constructor(){this._typeVarMap=new Map}clone(){const e=new s;return this._typeVarMap.forEach((t=>{e.setTypeVarType(t.typeVar,t.narrowBound,t.narrowBoundNoLiterals,t.wideBound),t.tupleTypes&&e.setTupleTypeVar(t.typeVar,t.tupleTypes)})),this._sourceTypeVarScopeId&&this._sourceTypeVarScopeId.forEach((t=>e.addSourceTypeVarScopeId(t))),e}isSame(e){if(this._typeVarMap.size!==e._typeVarMap.size)return!1;function t(e,t){return e&&t?(0,r.isTypeSame)(e,t):e===t}let n=!0;return this._typeVarMap.forEach(((a,r)=>{const s=e._typeVarMap.get(r);s&&t(a.narrowBound,s.narrowBound)&&t(a.wideBound,s.wideBound)||(n=!1)})),n}isEmpty(){return 0===this._typeVarMap.size}getScore(){let e=0;return this._typeVarMap.forEach((t=>{e+=1;const n=this.getTypeVarType(t.typeVar);e+=1-this._getComplexityScoreForType(n)})),e}getTypeVarType(e,t=!1){var n,a;const r=this.getTypeVar(e);if(r)return t?r.narrowBound:null!==(a=null!==(n=r.narrowBoundNoLiterals)&&void 0!==n?n:r.narrowBound)&&void 0!==a?a:r.wideBound}getParamSpecType(e){const t=this.getTypeVar(e);if(null==t?void 0:t.narrowBound)return(0,r.isFunction)(t.narrowBound)?t.narrowBound:void 0}setTypeVarType(e,t,n,a,s){const i=r.TypeVarType.getNameWithScope(e);this._typeVarMap.set(i,{typeVar:e,narrowBound:t,narrowBoundNoLiterals:n,wideBound:a,tupleTypes:s})}getTupleTypeVar(e){var t;return null===(t=this.getTypeVar(e))||void 0===t?void 0:t.tupleTypes}setTupleTypeVar(e,t){const n=this.getTypeVar(e);(0,a.assert)(n),n.tupleTypes=t}getTypeVar(e){const t=r.TypeVarType.getNameWithScope(e);return this._typeVarMap.get(t)}getTypeVars(){const e=[];return this._typeVarMap.forEach((t=>{e.push(t)})),e}getTypeVarCount(){return this._typeVarMap.size}getWideTypeBound(e){const t=this.getTypeVar(e);if(t)return t.wideBound}addSourceTypeVarScopeId(e){this._sourceTypeVarScopeId||(this._sourceTypeVarScopeId=new Set),this._sourceTypeVarScopeId.add(e)}hasSourceTypeVarScopeId(e){return!!this._sourceTypeVarScopeId&&this._sourceTypeVarScopeId.has(e)}_getComplexityScoreForType(e,t=0){if(t>r.maxTypeRecursionCount)return 1;switch(t++,e.category){case 1:case 2:case 9:return.5;case 4:case 5:return.8;case 0:case 3:return 1;case 8:{let n=0;return e.subtypes.length<16?e.subtypes.forEach((e=>{const a=this._getComplexityScoreForType(e,t);n=Math.max(n,a)})):n=.5,n}case 6:return this._getComplexityScoreForClass(e,t)}return 0}_getComplexityScoreForClass(e,t){let n=0,a=0;e.tupleTypeArguments?e.tupleTypeArguments.forEach((e=>{n+=this._getComplexityScoreForType(e.type,t),a++})):e.typeArguments?e.typeArguments.forEach((e=>{n+=this._getComplexityScoreForType(e,t),a++})):e.details.typeParameters&&e.details.typeParameters.forEach((e=>{n+=this._getComplexityScoreForType(r.AnyType.create(),t),a++}));return.5+.25*(a>0?n/a:0)}}t.TypeVarSignatureContext=s;class i{constructor(e){this._isLocked=!1,this._id=i.nextTypeVarContextId++,Array.isArray(e)?this._solveForScopes=e:this._solveForScopes=void 0!==e?[e]:void 0,this._signatureContexts=[new s]}clone(){const e=new i;return this._solveForScopes&&(e._solveForScopes=Array.from(this._solveForScopes)),e._signatureContexts=this._signatureContexts.map((e=>e.clone())),e._isLocked=this._isLocked,e}cloneWithSignatureSource(e){const t=this.clone();if(e){const n=this._signatureContexts.filter((t=>t.hasSourceTypeVarScopeId(e)));n.length>0?t._signatureContexts=n:t._signatureContexts.forEach((t=>{t.addSourceTypeVarScopeId(e)}))}return t}copyFromClone(e){this._signatureContexts=e._signatureContexts.map((e=>e.clone())),this._isLocked=e._isLocked}copySignatureContexts(e){(0,a.assert)(e.length>0),e.length<1024&&(this._signatureContexts=Array.from(e))}isSame(e){return e._signatureContexts.length===this._signatureContexts.length&&this._signatureContexts.every(((t,n)=>t.isSame(e._signatureContexts[n])))}getId(){return this._id}getSolveForScopes(){return this._solveForScopes}hasSolveForScope(e){return Array.isArray(e)?e.some((e=>this.hasSolveForScope(e))):e===r.InScopePlaceholderScopeId||void 0!==e&&void 0!==this._solveForScopes&&this._solveForScopes.some((t=>t===e))}setSolveForScopes(e){e.forEach((e=>{this.addSolveForScope(e)}))}addSolveForScope(e){Array.isArray(e)?e.forEach((e=>this.addSolveForScope(e))):void 0===e||this.hasSolveForScope(e)||(this._solveForScopes||(this._solveForScopes=[]),this._solveForScopes.push(e))}lock(){(0,a.assert)(!this._isLocked),this._isLocked=!0}unlock(){this._isLocked=!1}isLocked(){return this._isLocked}isEmpty(){return this._signatureContexts.every((e=>e.isEmpty()))}setTypeVarType(e,t,n,r,s){return(0,a.assert)(!this._isLocked),this._signatureContexts.forEach((a=>{a.setTypeVarType(e,t,n,r,s)}))}setTupleTypeVar(e,t){return(0,a.assert)(!this._isLocked),this._signatureContexts.forEach((n=>{n.setTupleTypeVar(e,t)}))}getScore(){let e=0;return this._signatureContexts.forEach((t=>{e+=t.getScore()})),e/this._signatureContexts.length}getPrimarySignature(){return this._signatureContexts[0]}getSignatureContexts(){return this._signatureContexts}doForEachSignatureContext(e){const t=this.isLocked();this.unlock(),this.getSignatureContexts().forEach(((t,n)=>{e(t,n)})),t&&this.lock()}getSignatureContext(e){return(0,a.assert)(e>=0&&e<this._signatureContexts.length),this._signatureContexts[e]}doForEachSignature(e){this._signatureContexts.forEach((t=>{e(t)}))}}t.TypeVarContext=i,i.nextTypeVarContextId=1},25224:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeWalker=void 0;const a=n(83181),r=n(8312);t.TypeWalker=class{constructor(){this._recursionCount=0,this._isWalkCanceled=!1,this._hitRecursionLimit=!1}get isRecursionLimitHit(){return this._hitRecursionLimit}get isWalkCanceled(){return this._isWalkCanceled}walk(e){if(this._recursionCount>r.maxTypeRecursionCount)this._hitRecursionLimit=!0;else if(!this._isWalkCanceled){switch(this._recursionCount++,e.typeAliasInfo&&this.visitTypeAlias(e),e.category){case 0:this.visitUnbound(e);break;case 2:this.visitAny(e);break;case 1:this.visitUnknown(e);break;case 3:this.visitNever(e);break;case 4:this.visitFunction(e);break;case 5:this.visitOverloadedFunction(e);break;case 6:this.visitClass(e);break;case 7:this.visitModule(e);break;case 8:this.visitUnion(e);break;case 9:this.visitTypeVar(e);break;default:(0,a.assertNever)(e)}this._recursionCount--}}cancelWalk(){this._isWalkCanceled=!0}visitTypeAlias(e){if((0,a.assert)(e.typeAliasInfo),e.typeAliasInfo.typeArguments)for(const t of e.typeAliasInfo.typeArguments)if(this.walk(t),this._isWalkCanceled)break}visitUnbound(e){}visitAny(e){}visitUnknown(e){}visitNever(e){}visitFunction(e){var t;for(let t=0;t<e.details.parameters.length;t++)if(e.details.parameters[t].name){const n=r.FunctionType.getEffectiveParameterType(e,t);if(this.walk(n),this._isWalkCanceled)break}if(!this._isWalkCanceled&&!r.FunctionType.isParamSpecValue(e)&&!r.FunctionType.isParamSpecValue(e)){const n=null!==(t=e.details.declaredReturnType)&&void 0!==t?t:e.inferredReturnType;n&&this.walk(n)}}visitOverloadedFunction(e){for(const t of e.overloads)if(this.walk(t),this._isWalkCanceled)break}visitClass(e){var t;if(!r.ClassType.isPseudoGenericClass(e)){const n=(null===(t=e.tupleTypeArguments)||void 0===t?void 0:t.map((e=>e.type)))||e.typeArguments;if(n)for(const e of n)if(this.walk(e),this._isWalkCanceled)break}}visitModule(e){}visitUnion(e){for(const t of e.subtypes)if(this.walk(t),this._isWalkCanceled)break}visitTypeVar(e){}}},45468:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.narrowForKeyAssignment=t.getTypeOfIndexedTypedDict=t.assignToTypedDict=t.assignTypedDictToTypedDict=t.getEffectiveExtraItemsEntryType=t.getTypedDictDictEquivalent=t.getTypedDictMappingEquivalent=t.getTypedDictMembersForClass=t.synthesizeTypedDictClassMethods=t.createTypedDictTypeInlined=t.createTypedDictType=void 0;const i=n(28040),o=n(83181),l=n(72484),p=n(97652),c=n(96193),d=n(55164),u=n(95960),m=s(n(9316)),y=s(n(28340)),g=n(52328),h=n(8e4),f=n(8312),T=n(808),v=n(97632);function b(e,t,n){var a;(0,o.assert)(f.ClassType.isTypedDictClass(n));const r=f.FunctionType.createSynthesizedInstance("__new__",1);f.FunctionType.addParameter(r,{category:0,name:"cls",type:n,hasDeclaredType:!0}),f.FunctionType.addDefaultParameters(r),r.details.declaredReturnType=f.ClassType.cloneAsInstance(n),r.details.constructorTypeVarScopeId=n.details.typeVarScopeId;const s=f.FunctionType.createSynthesizedInstance("__init__",256);f.FunctionType.addParameter(s,{category:0,name:"self",type:f.ClassType.cloneAsInstance(n),hasDeclaredType:!0}),s.details.declaredReturnType=e.getNoneType(),s.details.constructorTypeVarScopeId=n.details.typeVarScopeId,f.FunctionType.addParameter(s,{category:0,name:"__map",type:f.ClassType.cloneAsInstance(n),hasDeclaredType:!0}),f.FunctionType.addPositionOnlyParameterSeparator(s),f.FunctionType.addKeywordOnlyParameterSeparator(s);const l=f.FunctionType.createSynthesizedInstance("__init__",256);f.FunctionType.addParameter(l,{category:0,name:"self",type:f.ClassType.cloneAsInstance(n),hasDeclaredType:!0}),l.details.declaredReturnType=e.getNoneType(),l.details.constructorTypeVarScopeId=n.details.typeVarScopeId,f.FunctionType.addKeywordOnlyParameterSeparator(l);const p=_(e,n),c=null!==(a=p.extraItems)&&void 0!==a?a:S(e,n);let d=p.knownItems.size>0;p.knownItems.forEach(((e,t)=>{f.FunctionType.addParameter(s,{category:0,name:t,hasDefault:!0,type:e.valueType,hasDeclaredType:!0}),f.FunctionType.addParameter(l,{category:0,name:t,hasDefault:!e.isRequired,type:e.valueType,hasDeclaredType:!0}),e.isReadOnly||(d=!1)})),p.extraItems&&!(0,f.isNever)(p.extraItems.valueType)&&(f.FunctionType.addParameter(s,{category:2,name:"kwargs",hasDefault:!1,type:p.extraItems.valueType,hasDeclaredType:!0}),f.FunctionType.addParameter(l,{category:2,name:"kwargs",hasDefault:!1,type:p.extraItems.valueType,hasDeclaredType:!0}));const u=f.ClassType.getSymbolTable(n),m=f.OverloadedFunctionType.create([s,l]);u.set("__init__",g.Symbol.createWithType(4,m)),u.set("__new__",g.Symbol.createWithType(4,r));const h=e.getBuiltInType(t,"str");if((0,f.isInstantiableClass)(h)){const v={category:0,name:"self",type:f.ClassType.cloneAsInstance(n),hasDeclaredType:!0};function b(e){let t=f.TypeVarType.createInstance("__TDefault");return t=f.TypeVarType.cloneForScopeId(t,e.details.typeVarScopeId,n.details.name,1),t}function k(n,a,r,s=!1,i=!1){const o=f.FunctionType.createSynthesizedInstance("get",256);if(f.FunctionType.addParameter(o,v),o.details.typeVarScopeId=y.getScopeIdForNode(t),f.FunctionType.addParameter(o,{category:0,name:"k",type:n,hasDeclaredType:!0}),r){const e=b(o);let t,n;s?(t=f.AnyType.create(),n=a):(t=i?a:(0,f.combineTypes)([a,e]),n=t),f.FunctionType.addParameter(o,{category:0,name:"default",type:t,hasDeclaredType:!0}),o.details.declaredReturnType=n}else o.details.declaredReturnType=s?a:(0,f.combineTypes)([a,e.getNoneType()]);return o}function w(e,n,a){const r={category:0,name:"k",type:e,hasDeclaredType:!0},s=f.FunctionType.createSynthesizedInstance("pop",256);f.FunctionType.addParameter(s,v),f.FunctionType.addParameter(s,r),s.details.declaredReturnType=n;const i=f.FunctionType.createSynthesizedInstance("pop",256);f.FunctionType.addParameter(i,v),f.FunctionType.addParameter(i,r),i.details.typeVarScopeId=y.getScopeIdForNode(t);const o=b(i);let l,p;return a?(l=f.AnyType.create(),p=n):(l=(0,f.combineTypes)([n,o]),p=l),f.FunctionType.addParameter(i,{category:0,name:"default",hasDeclaredType:!0,type:l,hasDefault:!0}),i.details.declaredReturnType=p,[s,i]}function A(e,t){const n=f.FunctionType.createSynthesizedInstance("setdefault",256);return f.FunctionType.addParameter(n,v),f.FunctionType.addParameter(n,{category:0,name:"k",hasDeclaredType:!0,type:e}),f.FunctionType.addParameter(n,{category:0,name:"default",hasDeclaredType:!0,type:t}),n.details.declaredReturnType=t,n}function x(t){const n=f.FunctionType.createSynthesizedInstance("delitem",256);return f.FunctionType.addParameter(n,v),f.FunctionType.addParameter(n,{category:0,name:"k",hasDeclaredType:!0,type:t}),n.details.declaredReturnType=e.getNoneType(),n}function P(){const a=f.FunctionType.createSynthesizedInstance("update",256);f.FunctionType.addParameter(a,v);const r=f.FunctionType.createSynthesizedInstance("update",256);f.FunctionType.addParameter(r,v);const s=f.FunctionType.createSynthesizedInstance("update",256);f.FunctionType.addParameter(s,v),f.FunctionType.addParameter(a,{category:0,name:"__m",hasDeclaredType:!0,type:d?f.NeverType.createNever():f.ClassType.cloneAsInstance(f.ClassType.cloneForPartialTypedDict(n))}),f.FunctionType.addPositionOnlyParameterSeparator(a),f.FunctionType.addKeywordOnlyParameterSeparator(s),a.details.declaredReturnType=e.getNoneType(),r.details.declaredReturnType=e.getNoneType(),s.details.declaredReturnType=e.getNoneType();const i=[],o=e.getBuiltInType(t,"tuple");p.knownItems.forEach(((e,t)=>{if(!e.isReadOnly){if(o&&(0,f.isInstantiableClass)(o)&&h&&(0,f.isInstantiableClass)(h)){const n=(0,T.specializeTupleClass)(f.ClassType.cloneAsInstance(o),[{type:f.ClassType.cloneWithLiteral(f.ClassType.cloneAsInstance(h),t),isUnbounded:!1},{type:e.valueType,isUnbounded:!1}]);i.push(n)}f.FunctionType.addParameter(s,{category:0,name:t,hasDeclaredType:!0,hasDefault:!0,defaultType:f.AnyType.create(!0),type:e.valueType})}}));const l=e.getTypingType(t,"Iterable");if(l&&(0,f.isInstantiableClass)(l)){const e=f.ClassType.cloneAsInstance(l);f.FunctionType.addParameter(r,{category:0,name:"__m",hasDeclaredType:!0,type:f.ClassType.cloneForSpecialization(e,[(0,f.combineTypes)(i)],!0)})}return f.FunctionType.addPositionOnlyParameterSeparator(r),f.OverloadedFunctionType.create([r,a,s])}const N=[],D=[],F=[];p.knownItems.forEach(((e,t)=>{const n=f.ClassType.cloneAsInstance(f.ClassType.cloneWithLiteral(h,t));N.push(k(n,e.valueType,!1,e.isRequired)),N.push(k(n,e.valueType,!0,e.isRequired,e.isRequired)),e.isRequired||e.isReadOnly||(0,i.appendArray)(D,w(n,e.valueType,e.isRequired)),e.isReadOnly||F.push(A(n,e.valueType))}));const E=f.ClassType.cloneAsInstance(h);f.ClassType.isTypedDictEffectivelyClosed(n)?(N.push(k(E,(0,f.combineTypes)([c.valueType,e.getNoneType()]),!1,!0)),N.push(k(E,c.valueType,!0))):(N.push(k(E,f.AnyType.create(),!1)),N.push(k(E,f.AnyType.create(),!0))),u.set("get",g.Symbol.createWithType(4,f.OverloadedFunctionType.create(N))),D.length>0&&u.set("pop",g.Symbol.createWithType(4,f.OverloadedFunctionType.create(D))),F.length>0&&u.set("setdefault",g.Symbol.createWithType(4,f.OverloadedFunctionType.create(F))),d||u.set("__delitem__",g.Symbol.createWithType(4,x(E))),u.set("update",g.Symbol.createWithType(4,P()));const M=I(e,n);if(M){const z=f.FunctionType.createSynthesizedInstance("clear");f.FunctionType.addParameter(z,v),z.details.declaredReturnType=e.getNoneType(),u.set("clear",g.Symbol.createWithType(4,z));const V=f.FunctionType.createSynthesizedInstance("popitem");f.FunctionType.addParameter(V,v);let U=e.getTupleClassType();U=U&&(0,f.isInstantiableClass)(U)?(0,T.specializeTupleClass)(f.ClassType.cloneAsInstance(U),[{type:E,isUnbounded:!1},{type:M,isUnbounded:!1}],!0):f.UnknownType.create(),V.details.declaredReturnType=U,u.set("popitem",g.Symbol.createWithType(4,V))}const O=C(e,n);O&&["items","keys","values"].forEach((n=>{const a=f.FunctionType.createSynthesizedInstance(n);f.FunctionType.addParameter(a,v);const r=e.getTypingType(t,`dict_${n}`);r&&(0,f.isInstantiableClass)(r)&&2===r.details.typeParameters.length&&(a.details.declaredReturnType=f.ClassType.cloneForSpecialization(f.ClassType.cloneAsInstance(r),[E,O],!0),u.set(n,g.Symbol.createWithType(4,a)))}))}}function _(e,t,n=!1){var a;if(!t.details.typedDictEntries){const n={knownItems:new Map,extraItems:void 0};w(e,t,n),f.ClassType.isTypedDictMarkedClosed(t)&&!n.extraItems&&(n.extraItems={valueType:f.NeverType.createNever(),isReadOnly:!1,isRequired:!1,isProvided:!1}),t.details.typedDictEntries=n}const r=(0,T.buildTypeVarContextFromSpecializedClass)(t),s=new Map;return t.details.typedDictEntries.knownItems.forEach(((e,n)=>{const a={...e};a.valueType=(0,T.applySolvedTypeVars)(a.valueType,r),t.isTypedDictPartial&&(a.isRequired=!1,a.isReadOnly?a.valueType=f.NeverType.createNever():a.isReadOnly=!0),s.set(n,a)})),n&&t.typedDictNarrowedEntries&&t.typedDictNarrowedEntries.forEach(((e,t)=>{const n={...e};n.valueType=(0,T.applySolvedTypeVars)(n.valueType,r),s.set(t,n)})),{knownItems:s,extraItems:null===(a=t.details.typedDictEntries)||void 0===a?void 0:a.extraItems}}function C(e,t){if((0,o.assert)((0,f.isInstantiableClass)(t)),(0,o.assert)(f.ClassType.isTypedDictClass(t)),!f.ClassType.isTypedDictEffectivelyClosed(t))return;const n=_(e,t),a=[];n.knownItems.forEach((e=>{a.push(e.valueType)})),n.extraItems&&a.push(n.extraItems.valueType);const r=(0,f.combineTypes)(a);return(0,f.isClassInstance)(r)&&f.ClassType.isBuiltIn(r,"object")?void 0:r}function I(e,t,n=0){if((0,o.assert)((0,f.isInstantiableClass)(t)),(0,o.assert)(f.ClassType.isTypedDictClass(t)),!f.ClassType.isTypedDictEffectivelyClosed(t))return;const a=_(e,t);if(!a.extraItems||a.extraItems.isReadOnly)return;let r=a.extraItems.valueType,s=!0;return a.knownItems.forEach((t=>{(t.isReadOnly||t.isRequired)&&(s=!1),r=(0,f.combineTypes)([r,t.valueType]),e.assignType(r,t.valueType,void 0,void 0,void 0,1,n+1)||(s=!1)})),s?r:void 0}function k(e,t,n,a){const r=new Set,s=m.getFileInfo(t);t.entries.forEach((t=>{if(17!==t.nodeType)return void e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictSecondArgDictEntry(),t);if(48!==t.keyExpression.nodeType)return void e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictEntryName(),t.keyExpression);const i=t.keyExpression.strings.map((e=>e.value)).join("");if(!i)return void e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictEmptyName(),t.keyExpression);if(r.has(i))return void e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictEntryUnique(),t.keyExpression);r.add(i);const o=new g.Symbol(8),l={type:1,node:t.keyExpression,uri:s.fileUri,typeAnnotationNode:t.valueExpression,isRuntimeTypeExpression:!a,range:(0,c.convertOffsetsToRange)(t.keyExpression.start,d.TextRange.getEnd(t.keyExpression),s.lines),moduleName:s.moduleName,isInExceptSuite:!1};o.addDeclaration(l),n.set(i,o)})),e.setTypeResultForNode(t,{type:f.UnknownType.create()})}function w(e,t,n,a=0){if((0,o.assert)(f.ClassType.isTypedDictClass(t)),a>f.maxTypeRecursionCount)return;a++,t.details.baseClasses.forEach((r=>{if((0,f.isInstantiableClass)(r)&&f.ClassType.isTypedDictClass(r)){const s=(0,T.partiallySpecializeType)(r,t);(0,o.assert)((0,f.isClass)(s)),w(e,s,n,a)}}));const r=(0,T.buildTypeVarContextFromSpecializedClass)(t);f.ClassType.getSymbolTable(t).forEach(((a,s)=>{if(!a.isIgnoredForProtocolMatch()){const i=(0,h.getLastTypedDeclarationForSymbol)(a);if(i&&1===i.type){let i=e.getEffectiveTypeOfSymbol(a);i=(0,T.applySolvedTypeVars)(i,r);const o=!f.ClassType.isTypedDictMarkedClosed(t)||"__extra_items__"!==s;let l=!f.ClassType.isCanOmitDictValues(t),c=!1;!function(e,t,n){return t.getDeclarations().some((t=>{if(1!==t.type||!t.typeAnnotationNode)return!1;const a=e.getTypeOfExpressionExpectingType(t.typeAnnotationNode,{allowFinal:!0,allowRequired:!0});return n?!!a.isRequired:(a.isRequired&&e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.requiredNotInTypedDict(),t.typeAnnotationNode),!1)}))}(e,a,o)?function(e,t,n){return t.getDeclarations().some((t=>{if(1!==t.type||!t.typeAnnotationNode)return!1;const a=e.getTypeOfExpressionExpectingType(t.typeAnnotationNode,{allowFinal:!0,allowRequired:!0});return n?!!a.isNotRequired:(a.isNotRequired&&e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.notRequiredNotInTypedDict(),t.typeAnnotationNode),!1)}))}(e,a,o)&&(l=!1):l=!0,function(e,t){return t.getDeclarations().some((t=>{if(1!==t.type||!t.typeAnnotationNode)return!1;return!!e.getTypeOfExpressionExpectingType(t.typeAnnotationNode,{allowFinal:!0,allowRequired:!0}).isReadOnly}))}(e,a)&&(c=!0);const d={valueType:i,isReadOnly:c,isRequired:l,isProvided:!1};f.ClassType.isTypedDictMarkedClosed(t)&&"__extra_items__"===s?(d.isRequired=!1,n.extraItems=d):n.knownItems.set(s,d)}}}))}function S(e,t){var n;return(0,o.assert)(f.ClassType.isTypedDictClass(t)),f.ClassType.isTypedDictMarkedClosed(t)?(null===(n=t.details.typedDictEntries)||void 0===n?void 0:n.extraItems)?t.details.typedDictEntries.extraItems:{valueType:f.NeverType.createNever(),isReadOnly:!0,isRequired:!1,isProvided:!1}:{valueType:e.getObjectType(),isReadOnly:!0,isRequired:!1,isProvided:!1}}t.createTypedDictType=function(e,t,n,a){var r,s,i;const o=m.getFileInfo(t);let l;if(0===a.length)e.addDiagnostic(p.DiagnosticRule.reportCallIssue,u.LocMessage.typedDictFirstArg(),t);else{const n=a[0];0===n.argumentCategory&&n.valueExpression&&48===n.valueExpression.nodeType?l=n.valueExpression.strings.map((e=>e.value)).join(""):e.addDiagnostic(p.DiagnosticRule.reportArgumentType,u.LocMessage.typedDictFirstArg(),a[0].valueExpression||t)}const h=l||"TypedDict",v=f.ClassType.createInstantiable(h,y.getClassFullName(t,o.moduleName,h),o.moduleName,o.fileUri,1073741952,y.getTypeSourceId(t),void 0,n.details.effectiveMetaclass);v.details.baseClasses.push(n),(0,T.computeMroLinearization)(v);const _=f.ClassType.getSymbolTable(v);_.set("__class__",g.Symbol.createWithType(68,v));let C=!1;if(a.length<2)e.addDiagnostic(p.DiagnosticRule.reportCallIssue,u.LocMessage.typedDictSecondArgDict(),t);else{const n=a[1];if(0===n.argumentCategory&&n.valueExpression&&15===n.valueExpression.nodeType)C=!0,k(e,n.valueExpression,_,!1);else if(n.name){const t=new Set;for(let n=1;n<a.length;n++){const r=a[n];if(!r.name||!r.valueExpression)continue;if(t.has(r.name.value)){e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictEntryUnique(),r.valueExpression);continue}t.add(r.name.value);const s=new g.Symbol(8),i={type:1,node:r.name,uri:o.fileUri,typeAnnotationNode:r.valueExpression,isRuntimeTypeExpression:!0,range:(0,c.convertOffsetsToRange)(r.name.start,d.TextRange.getEnd(r.valueExpression),o.lines),moduleName:o.moduleName,isInExceptSuite:!1};s.addDeclaration(i),_.set(r.name.value,s)}}else e.addDiagnostic(p.DiagnosticRule.reportArgumentType,u.LocMessage.typedDictSecondArgDict(),t)}if(C)for(const n of a.slice(2))"total"===(null===(r=n.name)||void 0===r?void 0:r.value)||"closed"===(null===(s=n.name)||void 0===s?void 0:s.value)?!n.valueExpression||11!==n.valueExpression.nodeType||15!==n.valueExpression.constType&&33!==n.valueExpression.constType?e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictBoolParam().format({name:n.name.value}),n.valueExpression||t):"total"===n.name.value&&15===n.valueExpression.constType?v.details.flags|=1024:"closed"===n.name.value&&33===n.valueExpression.constType&&m.getFileInfo(t).diagnosticRuleSet.enableExperimentalFeatures&&(v.details.flags|=768):e.addDiagnostic(p.DiagnosticRule.reportCallIssue,u.LocMessage.typedDictExtraArgs(),n.valueExpression||t);if(b(e,t,v),3===(null===(i=t.parent)||void 0===i?void 0:i.nodeType)&&l){const n=t.parent.leftExpression,a=54===n.nodeType?n.valueExpression:n;38===a.nodeType&&a.value!==l&&e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typedDictAssignedName().format({name:l}),a)}return v},t.createTypedDictTypeInlined=function(e,t,n){const a=m.getFileInfo(t),r="<TypedDict>",s=f.ClassType.createInstantiable(r,y.getClassFullName(t,a.moduleName,r),a.moduleName,a.fileUri,128,y.getTypeSourceId(t),void 0,n.details.effectiveMetaclass);return s.details.baseClasses.push(n),(0,T.computeMroLinearization)(s),k(e,t,f.ClassType.getSymbolTable(s),!0),b(e,t,s),s},t.synthesizeTypedDictClassMethods=b,t.getTypedDictMembersForClass=_,t.getTypedDictMappingEquivalent=C,t.getTypedDictDictEquivalent=I,t.getEffectiveExtraItemsEntryType=S,t.assignTypedDictToTypedDict=function(e,t,n,a,r,s,i=0){var o,l;let p=!0;const c=_(e,t),d=_(e,n,!0),m=null!==(o=d.extraItems)&&void 0!==o?o:S(e,n);if(c.knownItems.forEach(((o,l)=>{if(!p&&!a)return;const c=d.knownItems.get(l);if(c){if(o.isRequired!==c.isRequired&&!o.isReadOnly){const n=o.isRequired?u.LocAddendum.typedDictFieldRequired():u.LocAddendum.typedDictFieldNotRequired();null==a||a.createAddendum().addMessage(n.format({name:l,type:e.printType(f.ClassType.cloneAsInstance(t))})),p=!1}!o.isReadOnly&&c.isReadOnly&&(null==a||a.createAddendum().addMessage(u.LocAddendum.typedDictFieldNotReadOnly().format({name:l,type:e.printType(f.ClassType.cloneAsInstance(t))})),p=!1);const n=null==a?void 0:a.createAddendum();e.assignType(o.valueType,c.valueType,null==n?void 0:n.createAddendum(),r,void 0,o.isReadOnly?s:1|s,i)||(null==n||n.addMessage(u.LocAddendum.memberTypeMismatch().format({name:l})),p=!1)}else if(o.isRequired||!o.isReadOnly)null==a||a.createAddendum().addMessage(u.LocAddendum.typedDictFieldMissing().format({name:l,type:e.printType(f.ClassType.cloneAsInstance(n))})),p=!1;else if((0,f.isClassInstance)(m.valueType)){const t=null==a?void 0:a.createAddendum();e.assignType(o.valueType,m.valueType,null==t?void 0:t.createAddendum(),r,void 0,s,i)||(null==t||t.addMessage(u.LocAddendum.memberTypeMismatch().format({name:l})),p=!1)}})),!p&&!a)return!1;if(f.ClassType.isTypedDictEffectivelyClosed(t)){const o=null!==(l=c.extraItems)&&void 0!==l?l:S(e,t);d.knownItems.forEach(((o,l)=>{if(!c.knownItems.has(l))if(c.extraItems){o.isRequired&&!c.extraItems.isReadOnly&&(null==a||a.createAddendum().addMessage(u.LocAddendum.typedDictFieldNotRequired().format({name:l,type:e.printType(f.ClassType.cloneAsInstance(t))})),p=!1);const d=null==a?void 0:a.createAddendum();e.assignType(c.extraItems.valueType,o.valueType,null==d?void 0:d.createAddendum(),r,void 0,c.extraItems.isReadOnly?s:1|s,i)?!c.extraItems.isReadOnly&&o.isReadOnly&&(null==a||a.createAddendum().addMessage(u.LocAddendum.typedDictFieldNotReadOnly().format({name:l,type:e.printType(f.ClassType.cloneAsInstance(n))})),p=!1):(null==d||d.addMessage(u.LocAddendum.typedDictExtraFieldTypeMismatch().format({name:l,type:e.printType(f.ClassType.cloneAsInstance(t))})),p=!1)}else{const n=null==a?void 0:a.createAddendum();null==n||n.addMessage(u.LocAddendum.typedDictExtraFieldNotAllowed().format({name:l,type:e.printType(f.ClassType.cloneAsInstance(t))})),p=!1}}));const y=null==a?void 0:a.createAddendum();e.assignType(o.valueType,m.valueType,null==y?void 0:y.createAddendum(),r,void 0,o.isReadOnly?s:1|s,i)?!o.isReadOnly&&m.isReadOnly&&(null==a||a.createAddendum().addMessage(u.LocAddendum.typedDictFieldNotReadOnly().format({name:"__extra_items__",type:e.printType(f.ClassType.cloneAsInstance(t))})),p=!1):(null==y||y.addMessage(u.LocAddendum.typedDictExtraFieldTypeMismatch().format({name:"__extra_items__",type:e.printType(f.ClassType.cloneAsInstance(n))})),p=!1)}return p},t.assignToTypedDict=function(e,t,n,a,r){(0,o.assert)((0,f.isClassInstance)(t)),(0,o.assert)(f.ClassType.isTypedDictClass(t)),(0,o.assert)(n.length===a.length);let s=!0;const i=new Map;let l,p=t;t.details.typeParameters.length>0&&(l=new v.TypeVarContext((0,T.getTypeVarScopeId)(t)),t.typeArguments&&(p=f.ClassType.cloneForSpecialization(t,void 0,!1)));const c=_(e,p);if(n.forEach(((n,o)=>{const p=n.type;if((0,f.isClassInstance)(p)&&f.ClassType.isBuiltIn(p,"str")&&(0,T.isLiteralType)(p)){const d=p.literalValue,m=c.knownItems.get(d);if(m){const t=null==r?void 0:r.createAddendum();e.assignType(m.valueType,a[o].type,null==t?void 0:t.createAddendum(),l,void 0,256)||(t&&(t.addMessage(u.LocAddendum.typedDictFieldTypeMismatch().format({name:p.literalValue,type:e.printType(a[o].type)})),t.addTextRange(n.node)),s=!1),m.isRequired||i.set(d,{valueType:a[o].type,isReadOnly:!!a[o].isReadOnly,isRequired:!1,isProvided:!0}),m.isProvided=!0}else if(c.extraItems){const t=null==r?void 0:r.createAddendum();e.assignType(c.extraItems.valueType,a[o].type,null==t?void 0:t.createAddendum(),l,void 0,256)||(t&&(t.addMessage(u.LocAddendum.typedDictFieldTypeMismatch().format({name:"__extra_items__",type:e.printType(a[o].type)})),t.addTextRange(n.node)),s=!1)}else if(s=!1,r){const a=null==r?void 0:r.createAddendum();a.addMessage(u.LocAddendum.typedDictFieldUndefined().format({name:p.literalValue,type:e.printType(f.ClassType.cloneAsInstance(t))})),a.addTextRange(n.node)}}else s=!1})),!s)return;if(c.knownItems.forEach(((n,a)=>{n.isRequired&&!n.isProvided&&(r&&r.addMessage(u.LocAddendum.typedDictFieldRequired().format({name:a,type:e.printType(t)})),s=!1)})),!s)return;const d=l?(0,T.applySolvedTypeVars)(p,l):t;return 0===i.size?d:f.ClassType.cloneForNarrowedTypedDictEntries(d,i)},t.getTypeOfIndexedTypedDict=function(e,t,n,a){if(1!==t.items.length)return e.addDiagnostic(p.DiagnosticRule.reportGeneralTypeIssues,u.LocMessage.typeArgsMismatchOne().format({received:t.items.length}),t),{type:f.UnknownType.create()};if(t.trailingComma||t.items[0].name||0!==t.items[0].argumentCategory)return;const r=_(e,n,"get"===a.method),s=e.getTypeOfExpression(t.items[0].valueExpression),i=s.type;let o=new l.DiagnosticAddendum,c=!0;const d=(0,T.mapSubtypes)(i,(t=>{var s,i,l;if((0,f.isAnyOrUnknown)(t))return t;if((0,f.isClassInstance)(t)&&f.ClassType.isBuiltIn(t,"str")){if(void 0===t.literalValue)return f.UnknownType.create();const p=t.literalValue,d=null!==(s=r.knownItems.get(p))&&void 0!==s?s:r.extraItems;return d?(d.isRequired||d.isProvided||"get"!==a.method?d.isReadOnly&&"get"!==a.method&&o.addMessage(u.LocAddendum.keyReadOnly().format({name:p,type:e.printType(n)})):o.addMessage(u.LocAddendum.keyNotRequired().format({name:p,type:e.printType(n)})),"set"===a.method?e.assignType(d.valueType,null!==(l=null===(i=a.setType)||void 0===i?void 0:i.type)&&void 0!==l?l:f.AnyType.create(),o)||(c=!1):"del"===a.method&&d.isRequired&&(o.addMessage(u.LocAddendum.keyRequiredDeleted().format({name:p})),c=!1),d.valueType):(o.addMessage(u.LocAddendum.keyUndefined().format({name:p,type:e.printType(n)})),c=!1,f.UnknownType.create())}return o.addMessage(u.LocAddendum.typeNotStringLiteral().format({type:e.printType(t)})),c=!1,f.UnknownType.create()}));if(!a.setExpectedTypeDiag||o.isEmpty()||a.setExpectedTypeDiag.isEmpty()||(o=a.setExpectedTypeDiag),!o.isEmpty()){let n;n="set"===a.method?u.LocMessage.typedDictSet():"del"===a.method?u.LocMessage.typedDictDelete():u.LocMessage.typedDictAccess(),e.addDiagnostic(c?p.DiagnosticRule.reportTypedDictNotRequiredAccess:p.DiagnosticRule.reportGeneralTypeIssues,n+o.getString(),t)}return{type:d,isIncomplete:!!s.isIncomplete}},t.narrowForKeyAssignment=function(e,t){var n;if(!f.ClassType.isTypedDictClass(e)||!e.details.typedDictEntries)return e;const a=e.details.typedDictEntries.knownItems.get(t);if(!a||a.isRequired)return e;const r=null===(n=e.typedDictNarrowedEntries)||void 0===n?void 0:n.get(t);if(null==r?void 0:r.isProvided)return e;const s=e.typedDictNarrowedEntries?new Map(e.typedDictNarrowedEntries):new Map;return s.set(t,{isProvided:!0,isRequired:!1,isReadOnly:a.isReadOnly,valueType:a.valueType}),f.ClassType.cloneForNarrowedTypedDictEntries(e,s)}},8312:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isSameWithoutLiteralValue=t.combineTypes=t.findSubtype=t.removeFromUnion=t.removeUnbound=t.removeUnknownFromUnion=t.isTypeSame=t.getTypeAliasInfo=t.isOverloadedFunction=t.isFunction=t.isParamSpec=t.isUnpacked=t.isUnpackedClass=t.isUnpackedVariadicTypeVar=t.isVariadicTypeVar=t.isTypeVar=t.isModule=t.isClassInstance=t.isInstantiableClass=t.isClass=t.isPossiblyUnbound=t.isUnion=t.isUnbound=t.isAnyOrUnknown=t.isUnknown=t.isAny=t.isNever=t.TypeVarType=t.UnionType=t.TypeCondition=t.AnyType=t.NeverType=t.OverloadedFunctionType=t.FunctionType=t.isKeywordOnlySeparator=t.isPositionOnlySeparator=t.ClassType=t.ModuleType=t.UnknownType=t.UnboundType=t.TypeBase=t.maxTypeRecursionCount=t.EnumLiteral=t.InScopePlaceholderScopeId=void 0;const a=n(83181);t.InScopePlaceholderScopeId="-";class r{constructor(e,t,n,a){this.classFullName=e,this.className=t,this.itemName=n,this.itemType=a}getName(){return`${this.classFullName}.${this.itemName}`}}var s,i,o,l,p,c,d,u,m,y,g,h;function f(e){return 0===e.category&&!e.name}function T(e){return 1===e.category&&!e.name}function v(e){return 3===e.category}function b(e){return 1===e.category}function _(e){return 2===e.category||1===e.category||!!I(e)&&void 0===e.subtypes.find((e=>!_(e)))}function C(e){return 0===e.category}function I(e){return 8===e.category}function k(e){return 6===e.category}function w(e){return 6===e.category&&s.isInstantiable(e)}function S(e){return 6===e.category&&s.isInstance(e)}function A(e){return 9===e.category}function x(e){return 9===e.category&&e.details.isVariadic&&!!e.isVariadicUnpacked&&!e.isVariadicInUnion}function P(e){return!(!k(e)||!e.isUnpacked)}function N(e,n,a={},r=0){var s,i;if(e===n)return!0;if(e.category!==n.category){if(a.treatAnySameAsUnknown){if(2===e.category&&1===n.category)return!0;if(1===e.category&&2===n.category)return!0}return!1}if(!a.ignoreTypeFlags&&e.flags!==n.flags)return!1;if(r>t.maxTypeRecursionCount)return!0;switch(r++,e.category){case 6:{const t=n;if(!p.isSameGenericClass(e,t,r))return!1;if(!a.ignoreConditions&&!y.isSame(e.condition,n.condition))return!1;if(!a.ignorePseudoGeneric||!p.isPseudoGenericClass(e))if(e.tupleTypeArguments&&t.tupleTypeArguments){const n=e.tupleTypeArguments||[],s=t.tupleTypeArguments||[];if(n.length!==s.length)return!1;for(let e=0;e<n.length;e++){if(!N(n[e].type,s[e].type,{...a,ignoreTypeFlags:!1},r))return!1;if(n[e].isUnbounded!==s[e].isUnbounded)return!1}}else{const n=e.typeArguments||[],s=t.typeArguments||[],i=Math.max(n.length,s.length);for(let e=0;e<i;e++){if(!N(e<n.length?n[e]:o.create(),e<s.length?s[e]:o.create(),{...a,ignoreTypeFlags:!1},r))return!1}}return!!p.isLiteralValueSame(e,t)&&(!e.isTypedDictPartial==!t.isTypedDictPartial&&!(!a.ignoreTypedDictNarrowEntries&&!p.isTypedDictNarrowedEntriesSame(e,t)))}case 4:{const t=n,s=e.details.parameters,i=t.details.parameters;if(s.length!==i.length)return!1;const o=s.findIndex((e=>f(e))),l=i.findIndex((e=>f(e)));for(let n=0;n<s.length;n++){const p=s[n],d=i[n];if(p.category!==d.category)return!1;const u=void 0!==o&&n>o;if(u!==(void 0!==l&&n>l))return!1;if(u){if(p.name!==d.name)return!1}else{if(f(p)&&f(d))continue;if(T(p)&&T(d))continue}if(!N(c.getEffectiveParameterType(e,n),c.getEffectiveParameterType(t,n),{...a,ignoreTypeFlags:!1},r))return!1}const p=e.details.paramSpec,d=t.details.paramSpec;if(p){if(!d)return!1;if(!N(p,d,a,r))return!1}else if(d)return!1;let u=e.details.declaredReturnType;e.specializedTypes&&e.specializedTypes.returnType&&(u=e.specializedTypes.returnType),!u&&e.inferredReturnType&&(u=e.inferredReturnType);let m=t.details.declaredReturnType;return t.specializedTypes&&t.specializedTypes.returnType&&(m=t.specializedTypes.returnType),!m&&t.inferredReturnType&&(m=t.inferredReturnType),!!(!u&&!m||u&&m&&N(u,m,{...a,ignoreTypeFlags:!1},r))}case 5:{const t=n;if(e.overloads.length!==t.overloads.length)return!1;for(let n=0;n<e.overloads.length;n++)if(!N(e.overloads[n],t.overloads[n],a,r))return!1;return!0}case 8:{const t=n,a=e.subtypes,s=t.subtypes;if(a.length!==s.length)return!1;const i=new Set;return void 0===F(e,(e=>!g.containsType(t,e,i,r)))}case 9:{const t=n;if(e.scopeId!==t.scopeId)return!1;if(e.details.recursiveTypeParameters&&t.details.recursiveTypeParameters){const t=(null===(s=null==e?void 0:e.typeAliasInfo)||void 0===s?void 0:s.typeArguments)||[],o=(null===(i=null==n?void 0:n.typeAliasInfo)||void 0===i?void 0:i.typeArguments)||[],l=Math.max(t.length,o.length);for(let e=0;e<l;e++){if(!N(e<t.length?t[e]:m.create(),e<o.length?o[e]:m.create(),{...a,ignoreTypeFlags:!1},r))return!1}}if(!e.isVariadicInUnion!=!t.isVariadicInUnion)return!1;if(e.details===t.details)return!0;if(e.details.name!==t.details.name||e.details.isParamSpec!==t.details.isParamSpec||e.details.isVariadic!==t.details.isVariadic||e.details.isSynthesized!==t.details.isSynthesized||e.details.declaredVariance!==t.details.declaredVariance||e.scopeId!==t.scopeId)return!1;const o=e.details.boundType,l=t.details.boundType;if(o){if(!l||!N(o,l,{...a,ignoreTypeFlags:!1},r))return!1}else if(l)return!1;const p=e.details.constraints,c=t.details.constraints;if(p.length!==c.length)return!1;for(let e=0;e<p.length;e++)if(!N(p[e],c[e],{...a,ignoreTypeFlags:!1},r))return!1;return!0}case 7:{const t=n;return e.fields===t.fields||0===e.fields.size&&0===t.fields.size}case 1:{const t=n;return e.isIncomplete===t.isIncomplete}}return!0}function D(e,t){if(I(e)){const n=e.subtypes.filter((e=>!t(e)));if(n.length<e.subtypes.length){const t=E(n);return I(t)&&g.addTypeAliasSource(t,e),t}}return e}function F(e,t){return I(e)?e.subtypes.find((e=>t(e))):t(e)?e:void 0}function E(e,t){let n=!1;if(e.some((e=>3===e.category))&&(e=e.filter((e=>(3===e.category&&e.isNoReturn&&(n=!0),3!==e.category)))),0===e.length)return n?u.createNoReturn():u.createNever();let a,r=!0;if(e.length>1)for(let t=1;t<e.length;t++)if(e[t]!==e[0]){r=!1;break}if(r)return e[0];const s=new Set;for(let t=0;t<e.length;t++){const n=e[t];I(n)?(a||(a=e.slice(0,t)),a=a.concat(n.subtypes),n.typeAliasInfo?s.add(n):n.typeAliasSources&&n.typeAliasSources.forEach((e=>{s.add(e)}))):a&&a.push(n)}if(a=null!=a?a:e,a=a.sort(((e,t)=>k(e)&&void 0!==e.literalValue?1:k(t)&&void 0!==t.literalValue?-1:S(e)&&e.isEmptyContainer?1:S(t)&&t.isEmptyContainer?-1:0)),0===a.length)return o.create();const i=g.create();s.size>0&&(i.typeAliasSources=s);let l=!1;return a.forEach(((e,n)=>{0===n?g.addType(i,e):void 0===t||i.subtypes.length<t?function(e,t){if(k(t)&&void 0===t.condition){const n=S(t)?e.literalInstances:e.literalClasses;if(p.isBuiltIn(t,"str")&&void 0!==t.literalValue&&void 0!==n.literalStrMap)return void(n.literalStrMap.has(t.literalValue)||g.addType(e,t));if(p.isBuiltIn(t,"int")&&void 0!==t.literalValue&&void 0!==n.literalIntMap)return void(n.literalIntMap.has(t.literalValue)||g.addType(e,t));if(p.isEnumClass(t)&&void 0!==t.literalValue&&void 0!==n.literalEnumMap){const a=t.literalValue;return void(n.literalEnumMap.has(a.getName())||g.addType(e,t))}}const n=k(t)&&p.isPseudoGenericClass(t);for(let a=0;a<e.subtypes.length;a++){const r=e.subtypes[a];if(N(r,t))return;if(n&&N(r,t,{ignorePseudoGeneric:!0}))return void(e.subtypes[a]=p.cloneForSpecialization(t,t.details.typeParameters.map((()=>o.create())),!0));if(S(r)&&S(t)){if(M(r,t)&&void 0===r.literalValue)return;if(p.isBuiltIn(r,"bool")&&!r.condition&&p.isBuiltIn(t,"bool")&&!t.condition&&void 0!==t.literalValue&&!t.literalValue===r.literalValue)return void(e.subtypes[a]=p.cloneWithLiteral(r,void 0));if(p.isTypedDictClass(r)&&p.isSameGenericClass(r,t)){if(p.isTypedDictNarrower(t,r))return;if(p.isTypedDictNarrower(r,t))return void(e.subtypes[a]=t)}}if(S(t)&&t.isEmptyContainer&&S(r)&&p.isSameGenericClass(r,t))return}g.addType(e,t)}(i,e):l=!0})),l?m.create():1===i.subtypes.length?i.subtypes[0]:i}function M(e,t){return!!N(e,t)||(w(t)&&void 0!==t.literalValue?N(e,t=p.cloneWithLiteral(t,void 0)):!(!S(t)||void 0===t.literalValue)&&N(e,t=p.cloneWithLiteral(t,void 0),{ignoreConditions:!0}))}t.EnumLiteral=r,t.maxTypeRecursionCount=20,function(e){function t(e){const t={...e};return delete t.cached,t}e.isInstantiable=function(e){return 0!=(1&e.flags)},e.isInstance=function(e){return 0!=(2&e.flags)},e.isAmbiguous=function(e){return!!e.isAmbiguous},e.cloneType=t,e.cloneAsSpecialForm=function(e,t){const n={...e};return delete n.cached,t?n.specialForm=t:delete n.specialForm,n},e.cloneTypeAsInstance=function(t,n){(0,a.assert)(e.isInstantiable(t));const r=e.cloneType(t);return void 0===r.instantiableNestingLevel?(r.flags&=-2,r.flags|=2,delete r.instantiableNestingLevel):1===r.instantiableNestingLevel?delete r.instantiableNestingLevel:r.instantiableNestingLevel--,n&&(t.cached||(t.cached={}),t.cached.typeBaseInstanceType=r),r},e.cloneTypeAsInstantiable=function(t,n){const a=e.cloneType(t);return e.isInstance(t)?(a.flags&=-3,a.flags|=1):a.instantiableNestingLevel=void 0===a.instantiableNestingLevel?1:a.instantiableNestingLevel,n&&(t.cached||(t.cached={}),t.cached.typeBaseInstantiableType=a),a},e.cloneForTypeAlias=function(e,n,a,r,s,i,o,l,p){const c=t(e);return c.typeAliasInfo={name:n,fullName:a,moduleName:r,fileUri:s,typeParameters:l,typeArguments:p,typeVarScopeId:i,isPep695Syntax:o},c},e.cloneForCondition=function(e,n){if(void 0===e.condition&&void 0===n)return e;const a=t(e);return a.condition=n,a},e.cloneForAmbiguousType=function(e){if(e.isAmbiguous)return e;const n=t(e);return n.isAmbiguous=!0,n}}(s||(t.TypeBase=s={})),function(e){const t={category:0,flags:3};e.create=function(){return t},e.convertToInstance=function(t){return t.specialForm?e.create():t}}(i||(t.UnboundType=i={})),function(e){const t={category:1,flags:3,isIncomplete:!1},n={category:1,flags:3,isIncomplete:!0};e.create=function(e=!1){return e?n:t},e.createPossibleType=function(e,t){return{category:1,flags:3,isIncomplete:t,possibleType:e}},e.convertToInstance=function(t){return t.specialForm?e.create(t.isIncomplete):t}}(o||(t.UnknownType=o={})),function(e){e.create=function(e,t,n){return{category:7,fields:n||new Map,loaderFields:new Map,flags:1,moduleName:e,fileUri:t}},e.getField=function(e,t){let n=e.fields.get(t);if(e.loaderFields)if(n){if(1===n.getDeclarations().length){const a=e.loaderFields.get(t);a&&!a.isExternallyHidden()&&(n=a)}}else n=e.loaderFields.get(t);return n}}(l||(t.ModuleType=l={})),function(e){function n(e,t=!0){var n;if(t&&(null===(n=e.cached)||void 0===n?void 0:n.typeBaseInstantiableType))return e.cached.typeBaseInstantiableType;const a=s.cloneTypeAsInstantiable(e,t);return t&&(a.includeSubclasses=!0),a}function a(e,t){if(!(1&e.details.flags))return!1;if(void 0!==t){const n=Array.isArray(t)?t:[t];return n.some((t=>t===e.details.name))||n.some((t=>t===e.aliasName))}return!0}function i(n,a,r=0){if(!n.isTypedDictPartial!=!a.isTypedDictPartial)return!1;const s=n.details,i=a.details;if(s===i)return!0;if(s.fullName!==i.fullName||s.flags!==i.flags||s.typeSourceId!==i.typeSourceId||s.baseClasses.length!==i.baseClasses.length||s.typeParameters.length!==i.typeParameters.length)return!1;if(r>t.maxTypeRecursionCount)return!0;if(r++,e.isBuiltIn(n,"NamedTuple")&&e.isBuiltIn(a,"NamedTuple"))return!0;if(e.isBuiltIn(n,"tuple")&&e.isBuiltIn(a,"tuple"))return!0;for(let e=0;e<s.baseClasses.length;e++)if(!N(s.baseClasses[e],i.baseClasses[e],{ignorePseudoGeneric:!0},r))return!1;if((s.declaredMetaclass||i.declaredMetaclass)&&(!s.declaredMetaclass||!i.declaredMetaclass||!N(s.declaredMetaclass,i.declaredMetaclass,{ignorePseudoGeneric:!0},r)))return!1;for(let e=0;e<s.typeParameters.length;e++)if(!N(s.typeParameters[e],i.typeParameters[e],{ignorePseudoGeneric:!0},r))return!1;return!0}e.createInstantiable=function(e,t,n,a,r,s,i,o,l){return{category:6,details:{name:e,fullName:t,moduleName:n,fileUri:a,flags:r,typeSourceId:s,baseClasses:[],declaredMetaclass:i,effectiveMetaclass:o,mro:[],fields:new Map,typeParameters:[],docString:l},flags:1}},e.cloneAsInstance=function(e,t=!0){var n;if(s.isInstance(e))return e;if(t&&(null===(n=e.cached)||void 0===n?void 0:n.typeBaseInstanceType))return e.cached.typeBaseInstanceType;const a=s.cloneTypeAsInstance(e,t);return delete a.specialForm,t&&(a.includeSubclasses=!0),a},e.cloneAsInstantiable=n,e.cloneForSpecialization=function(e,t,n,a=!1,r,i){const l=s.cloneType(e);return l.typeArguments=0===(null==t?void 0:t.length)?void 0:t,l.isTypeArgumentExplicit=n,a&&(l.includeSubclasses=!0),l.tupleTypeArguments=r?r.map((e=>v(e.type)?{type:o.create(),isUnbounded:e.isUnbounded,isOptional:e.isOptional}:e)):void 0,void 0!==i&&(l.isEmptyContainer=i),l},e.cloneIncludeSubclasses=function(e,t=!0){if(!!e.includeSubclasses===t)return e;const n=s.cloneType(e);return n.includeSubclasses=t,n},e.cloneWithLiteral=function(e,t){const n=s.cloneType(e);return n.literalValue=t,delete n.typeAliasInfo,n},e.cloneForTypingAlias=function(e,t){const n=s.cloneType(e);return n.aliasName=t,n},e.cloneForNarrowedTypedDictEntries=function(e,t){const n=s.cloneType(e);return n.typedDictNarrowedEntries=t,n},e.cloneForPartialTypedDict=function(e){const t=s.cloneType(e);return t.isTypedDictPartial=!0,t},e.cloneRemoveTypePromotions=function(e){if(!e.includePromotions)return e;const t=s.cloneType(e);return delete t.includePromotions,t},e.cloneForTypeGuard=function(e,t,n){const a=s.cloneType(e);return a.typeGuardType=t,a.isStrictTypeGuard=n,a},e.cloneForSymbolTableUpdate=function(e){const t=s.cloneType(e);return t.details={...t.details},t.details.fields=new Map(t.details.fields),t.details.mro=Array.from(t.details.mro),t.details.mro[0]=n(t),t},e.cloneForUnpacked=function(e,t=!0){const n=s.cloneType(e);return n.isUnpacked=t,n},e.cloneWithNewFlags=function(e,t){const n=s.cloneType(e);return n.details={...n.details},n.details.flags=t,n},e.isLiteralValueSame=function(e,t){return void 0===e.literalValue?void 0===t.literalValue:void 0!==t.literalValue&&(e.literalValue instanceof r?t.literalValue instanceof r&&e.literalValue.itemName===t.literalValue.itemName:e.literalValue===t.literalValue)},e.isTypedDictNarrowedEntriesSame=function(e,t){if(e.typedDictNarrowedEntries){if(!t.typedDictNarrowedEntries)return!1;const n=e.typedDictNarrowedEntries,a=t.typedDictNarrowedEntries;if(n.size!==a.size)return!1;let r,s;for([r,s]of n.entries()){const e=a.get(r);if(!e)return!1;if(s.isProvided!==e.isProvided)return!1}}else if(t.typedDictNarrowedEntries)return!1;return!0},e.isTypedDictNarrower=function(e,t){var n;const a=t.typedDictNarrowedEntries;if(!a)return!0;const r=null!==(n=e.typedDictNarrowedEntries)&&void 0!==n?n:new Map;let s,i;for([s,i]of a.entries())if(i.isProvided){const e=r.get(s);if(!(null==e?void 0:e.isProvided))return!1}return!0},e.isUnspecialized=function(e){return e.details.typeParameters.length>0&&void 0===e.typeArguments},e.isSpecialBuiltIn=function(e,t){return!!(2&e.details.flags||e.aliasName)&&(void 0===t||e.details.name===t)},e.isBuiltIn=a,e.derivesFromAnyOrUnknown=function(e){return e.details.mro.some((e=>!k(e)))},e.supportsAbstractMethods=function(e){return!!(2048&e.details.flags)},e.isDataClass=function(e){return!!(4&e.details.flags)},e.isSkipSynthesizedDataClassInit=function(e){return!!(16&e.details.flags)},e.isSkipSynthesizedDataClassEq=function(e){return!!(32&e.details.flags)},e.isFrozenDataClass=function(e){return!!(8&e.details.flags)},e.isSynthesizedDataclassOrder=function(e){return!!(64&e.details.flags)},e.isDataClassKeywordOnlyParams=function(e){return!!(4194304&e.details.flags)},e.isGeneratedDataClassSlots=function(e){return!!(67108864&e.details.flags)},e.isSynthesizeDataClassUnsafeHash=function(e){return!!(134217728&e.details.flags)},e.isTypeCheckOnly=function(e){return!!(268435456&e.details.flags)},e.isNewTypeClass=function(e){return!!(536870912&e.details.flags)},e.isValidTypeAliasClass=function(e){return!!(1073741824&e.details.flags)},e.isSpecialFormClass=function(e){return!!(-2147483648&e.details.flags)},e.isTypedDictClass=function(e){return!!(128&e.details.flags)},e.isCanOmitDictValues=function(e){return!!(1024&e.details.flags)},e.isTypedDictMarkedClosed=function(e){return!!(256&e.details.flags)},e.isTypedDictEffectivelyClosed=function(e){return!!(512&e.details.flags)},e.isEnumClass=function(e){return!!(2097152&e.details.flags)},e.isPropertyClass=function(e){return!!(4096&e.details.flags)},e.isClassProperty=function(e){return!!(8388608&e.details.flags)},e.isFinal=function(e){return!!(8192&e.details.flags)},e.isProtocolClass=function(e){return!!(16384&e.details.flags)},e.isDefinedInStub=function(e){return!!(16777216&e.details.flags)},e.isPseudoGenericClass=function(e){return!!(32768&e.details.flags)},e.getDataClassEntries=function(e){var t,n;return null===(n=(t=e.details).synthesizeMethodsDeferred)||void 0===n||n.call(t),e.details.dataClassEntries||[]},e.isRuntimeCheckable=function(e){return!!(65536&e.details.flags)},e.isTypingExtensionClass=function(e){return!!(131072&e.details.flags)},e.isPartiallyEvaluated=function(e){return!!(262144&e.details.flags)},e.hasCustomClassGetItem=function(e){return!!(524288&e.details.flags)},e.isTupleClass=function(e){return!!(1048576&e.details.flags)},e.isReadOnlyInstanceVariables=function(e){return!!(33554432&e.details.flags)},e.getTypeParameters=function(e){return e.details.typeParameters},e.hasUnknownBaseClass=function(e){return e.details.mro.some((e=>_(e)))},e.getSymbolTable=function(e){var t,n;return null===(n=(t=e.details).synthesizeMethodsDeferred)||void 0===n||n.call(t),e.details.fields},e.getInheritedSlotsNames=function(e){var t,n,a,r;return null===(n=(t=e.details).synthesizeMethodsDeferred)||void 0===n||n.call(t),null===(r=(a=e.details).calculateInheritedSlotsNamesDeferred)||void 0===r||r.call(a),e.details.inheritedSlotsNamesCached},e.isHierarchyPartiallyEvaluated=function(t){return e.isPartiallyEvaluated(t)||t.details.mro.some((t=>k(t)&&e.isPartiallyEvaluated(t)))},e.isSameGenericClass=i,e.isDerivedFrom=function t(n,r,s){if(i(n,r))return s&&s.push(n),!0;if(a(n)&&a(r,"object"))return s&&s.push(r),!0;if(e.isBuiltIn(n,"property")&&e.isBuiltIn(r,"property"))return s&&s.push(n),!0;for(const e of n.details.baseClasses)if(w(e)){if(t(e,r,s))return s&&s.push(n),!0}else if(_(e))return s&&s.push(o.create()),!0;return!1},e.getReverseMro=function(e){return e.details.mro.slice(0).reverse()}}(p||(t.ClassType=p={})),t.isPositionOnlySeparator=f,t.isKeywordOnlySeparator=T,function(e){function t(e,t,n,a,r,s){return{category:4,details:{name:e,fullName:t,moduleName:n,flags:a,parameters:[],typeParameters:[],docString:s},flags:r}}function n(e=!1){return[{category:1,name:"args",type:e?o.create():m.create(),hasDeclaredType:!e},{category:2,name:"kwargs",type:e?o.create():m.create(),hasDeclaredType:!e}]}function r(e,t){return(0,a.assert)(t<e.details.parameters.length,"Parameter types array overflow"),e.specializedTypes&&t<e.specializedTypes.parameterTypes.length?e.specializedTypes.parameterTypes[t]:e.details.parameters[t].type}function i(e,t){e.details.parameters.push(t),e.specializedTypes&&e.specializedTypes.parameterTypes.push(t.type)}e.createInstance=function(e,n,a,r,s){return t(e,n,a,r,2,s)},e.createInstantiable=function(e,n){return t("","","",e,1,n)},e.createSynthesizedInstance=function(e,n=0){return t(e,"","",64|n,2)},e.clone=function(e,n=!1,a,s){var i;const o=t(e.details.name,e.details.fullName,e.details.moduleName,e.details.flags,e.flags,e.details.docString);return o.details={...e.details},o.boundToType=null!=a?a:e.boundToType,o.preBoundFlags=o.details.flags,n&&(e.details.parameters.length>0?0===e.details.parameters[0].category&&(e.details.parameters.length>0&&!e.details.parameters[0].isTypeInferred&&(o.strippedFirstParamType=r(e,0)),o.details.parameters=e.details.parameters.slice(1)):n=!1,o.details.flags&=-4,o.details.flags|=4),void 0!==e.typeAliasInfo&&(o.typeAliasInfo=e.typeAliasInfo),e.specializedTypes&&(o.specializedTypes={parameterTypes:n?e.specializedTypes.parameterTypes.slice(1):e.specializedTypes.parameterTypes,parameterDefaultArgs:n?null===(i=e.specializedTypes.parameterDefaultArgs)||void 0===i?void 0:i.slice(1):e.specializedTypes.parameterDefaultArgs,returnType:e.specializedTypes.returnType}),o.inferredReturnType=e.inferredReturnType,o.boundTypeVarScopeId=null!=s?s:e.boundTypeVarScopeId,o},e.cloneAsInstance=function(e){var t;if(null===(t=e.cached)||void 0===t?void 0:t.typeBaseInstanceType)return e.cached.typeBaseInstanceType;const n=s.cloneTypeAsInstance(e,!0);return delete n.specialForm,n},e.cloneAsInstantiable=function(e){var t;return(null===(t=e.cached)||void 0===t?void 0:t.typeBaseInstantiableType)?e.cached.typeBaseInstantiableType:s.cloneTypeAsInstantiable(e,!0)},e.cloneForSpecialization=function(e,n,r){const s=t(e.details.name,e.details.fullName,e.details.moduleName,e.details.flags,e.flags,e.details.docString);return s.details=e.details,(0,a.assert)(n.parameterTypes.length===e.details.parameters.length),n.parameterDefaultArgs&&(0,a.assert)(n.parameterDefaultArgs.length===e.details.parameters.length),s.specializedTypes=n,r&&(s.inferredReturnType=r),s},e.cloneForParamSpec=function(n,a){const r=t(n.details.name,n.details.fullName,n.details.moduleName,n.details.flags,n.flags,n.details.docString);if(r.details={...n.details},r.details.typeParameters=r.details.typeParameters.filter((e=>!r.details.paramSpec||!N(e,r.details.paramSpec))),delete r.details.paramSpec,a){const t=Array.from(n.details.parameters);let s=!1;a.details.parameters.some((e=>f(e)))&&t.length>0&&f(t[t.length-1])&&(t.pop(),s=!0),r.details.parameters=[...t,...a.details.parameters.map((e=>({category:e.category,name:e.name,hasDefault:e.hasDefault,defaultValueExpression:e.defaultValueExpression,isNameSynthesized:e.isNameSynthesized,hasDeclaredType:!0,type:e.type})))],void 0===r.details.docString&&(r.details.docString=a.details.docString),void 0===r.details.deprecatedMessage&&(r.details.deprecatedMessage=a.details.deprecatedMessage),r.details.flags=33031&a.details.flags|64,e.isParamSpecValue(n)&&(r.details.flags|=65536),n.specializedTypes&&(r.specializedTypes={parameterTypes:Array.from(n.specializedTypes.parameterTypes),returnType:n.specializedTypes.returnType},s&&r.specializedTypes.parameterTypes.pop(),n.specializedTypes.parameterDefaultArgs&&(r.specializedTypes.parameterDefaultArgs=Array.from(n.specializedTypes.parameterDefaultArgs),s&&r.specializedTypes.parameterDefaultArgs.pop()),a.details.parameters.forEach((e=>{r.specializedTypes.parameterTypes.push(e.type),r.specializedTypes.parameterDefaultArgs&&r.specializedTypes.parameterDefaultArgs.push(void 0)}))),e.addHigherOrderTypeVarScopeIds(r,a.details.typeVarScopeId),e.addHigherOrderTypeVarScopeIds(r,a.details.higherOrderTypeVarScopeIds),r.details.paramSpec=a.details.paramSpec,r.details.methodClass=a.details.methodClass}return r},e.cloneWithNewFlags=function(e,t){const n=s.cloneType(e);return n.details={...e.details},n.details.flags=t,n},e.cloneWithNewTypeVarScopeId=function(t,n,a,r){const i=s.cloneType(t);return i.details={...t.details},i.details.typeVarScopeId=n,i.details.typeParameters=a,i.trackedSignatures=r,e.addHigherOrderTypeVarScopeIds(i,a.map((e=>e.scopeId))),i},e.cloneWithDocString=function(e,t){const n=s.cloneType(e);return n.details={...e.details},n.details.docString=t,n},e.cloneWithDeprecatedMessage=function(e,t){const n=s.cloneType(e);return n.details={...e.details},n.details.deprecatedMessage=t,n},e.cloneForParamSpecApplication=function(t,n){const a=s.cloneType(t);if(a.details={...t.details},a.details.parameters=a.details.parameters.slice(0,a.details.parameters.length-2),a.specializedTypes&&(a.specializedTypes.parameterTypes=a.specializedTypes.parameterTypes.slice(0,a.specializedTypes.parameterTypes.length-2)),a.details.flags&=-32769,32768&n.details.flags&&(a.details.flags|=32768),n.details.parameters.some((e=>f(e)))&&a.details.parameters.length>0){f(a.details.parameters[a.details.parameters.length-1])&&a.details.parameters.pop()}return n.details.parameters.forEach((e=>{a.details.parameters.push({category:e.category,name:e.name,hasDefault:e.hasDefault,defaultValueExpression:e.defaultValueExpression,isNameSynthesized:e.isNameSynthesized,hasDeclaredType:!0,type:e.type})})),a.details.paramSpec=n.details.paramSpec,a.details.docString||(a.details.docString=n.details.docString),a.details.deprecatedMessage||(a.details.deprecatedMessage=n.details.deprecatedMessage),e.addHigherOrderTypeVarScopeIds(a,n.details.typeVarScopeId),a},e.cloneRemoveParamSpecVariadics=function(e,n){const a=t(e.details.name,e.details.fullName,e.details.moduleName,e.details.flags,e.flags,e.details.docString);return a.details={...e.details},a.details.parameters=a.details.parameters.slice(0,a.details.parameters.length-2),e.specializedTypes&&(a.specializedTypes={...e.specializedTypes},a.specializedTypes.parameterTypes=a.specializedTypes.parameterTypes.slice(0,a.specializedTypes.parameterTypes.length-2),a.specializedTypes.parameterDefaultArgs&&(a.specializedTypes.parameterDefaultArgs=a.specializedTypes.parameterDefaultArgs.slice(0,a.specializedTypes.parameterDefaultArgs.length-2))),a.details.paramSpec||(a.details.paramSpec=n),e.inferredReturnType&&(a.inferredReturnType=e.inferredReturnType),a},e.addDefaultParameters=function(t,a=!1){n(a).forEach((n=>{e.addParameter(t,n)}))},e.addHigherOrderTypeVarScopeIds=function(e,t){t&&(Array.isArray(t)||(t=[t]),e.details.higherOrderTypeVarScopeIds||(e.details.higherOrderTypeVarScopeIds=[]),t.forEach((t=>{t&&t!==e.details.typeVarScopeId&&(e.details.higherOrderTypeVarScopeIds.some((e=>e===t))||e.details.higherOrderTypeVarScopeIds.push(t))})))},e.getDefaultParameters=n,e.hasDefaultParameters=function(t){let n=!1,a=!1;for(let r=0;r<t.details.parameters.length;r++){const s=t.details.parameters[r];if(s.name){if(0===s.category)return!1;if(1===s.category?n=!0:2===s.category&&(a=!0),!_(e.getEffectiveParameterType(t,r)))return!1}}return n&&a},e.isInstanceMethod=function(e){return 0==(7&e.details.flags)},e.isConstructorMethod=function(e){return 0!=(1&e.details.flags)},e.isStaticMethod=function(e){return 0!=(4&e.details.flags)},e.isClassMethod=function(e){return 0!=(2&e.details.flags)},e.isAbstractMethod=function(e){return 0!=(8&e.details.flags)},e.isGenerator=function(e){return 0!=(16&e.details.flags)},e.isSynthesizedMethod=function(e){return 0!=(64&e.details.flags)},e.isTypeCheckOnly=function(e){return 0!=(128&e.details.flags)},e.isOverloaded=function(e){return 0!=(256&e.details.flags)},e.isDefaultParameterCheckDisabled=function(e){return 0!=(32&e.details.flags)},e.isAsync=function(e){return 0!=(512&e.details.flags)},e.isStubDefinition=function(e){return 0!=(2048&e.details.flags)},e.isPyTypedDefinition=function(e){return 0!=(4096&e.details.flags)},e.isFinal=function(e){return 0!=(8192&e.details.flags)},e.hasUnannotatedParams=function(e){return 0!=(16384&e.details.flags)},e.shouldSkipArgsKwargsCompatibilityCheck=function(e){return 0!=(32768&e.details.flags)},e.isParamSpecValue=function(e){return 0!=(65536&e.details.flags)},e.isPartiallyEvaluated=function(e){return!!(131072&e.details.flags)},e.isOverridden=function(e){return!!(262144&e.details.flags)},e.getEffectiveParameterType=r,e.getEffectiveParameterDefaultArgType=function(e,t){var n;if((0,a.assert)(t<e.details.parameters.length,"Parameter types array overflow"),(null===(n=e.specializedTypes)||void 0===n?void 0:n.parameterDefaultArgs)&&t<e.specializedTypes.parameterDefaultArgs.length){const n=e.specializedTypes.parameterDefaultArgs[t];if(n)return n}return e.details.parameters[t].defaultType},e.addParameter=i,e.addPositionOnlyParameterSeparator=function(e){i(e,{category:0,type:m.create()})},e.addKeywordOnlyParameterSeparator=function(e){i(e,{category:1,type:m.create()})},e.getSpecializedReturnType=function(e,t=!0){var n;return(null===(n=e.specializedTypes)||void 0===n?void 0:n.returnType)?e.specializedTypes.returnType:e.details.declaredReturnType?e.details.declaredReturnType:t?e.inferredReturnType:void 0}}(c||(t.FunctionType=c={})),function(e){e.create=function(t){const n={category:5,overloads:[],flags:2};return t.forEach((t=>{e.addOverload(n,t)})),n},e.addOverload=function(e,t){t.overloaded=e,e.overloads.push(t)},e.getOverloads=function(e){return e.overloads.filter((e=>c.isOverloaded(e)))},e.getImplementation=function(e){return e.overloads.find((e=>!c.isOverloaded(e)))}}(d||(t.OverloadedFunctionType=d={})),function(e){const t={category:3,flags:3,isNoReturn:!1},n={category:3,flags:3,isNoReturn:!0};e.createNever=function(){return t},e.createNoReturn=function(){return n},e.convertToInstance=function(t){return t.specialForm?t.isNoReturn?e.createNoReturn():e.createNever():t}}(u||(t.NeverType=u={})),function(e){const t={category:2,isEllipsis:!1,flags:3},n={category:2,isEllipsis:!1,flags:3},a={category:2,isEllipsis:!0,flags:3};e.create=function(e=!1){return e?a:n},e.createSpecialForm=function(){return t}}(m||(t.AnyType=m={})),function(e){e.convertToInstance=function(t){return t.specialForm?e.create():t}}(m||(t.AnyType=m={})),function(e){function t(e,t){return e.typeVar.details.name<t.typeVar.details.name?-1:e.typeVar.details.name>t.typeVar.details.name?1:e.constraintIndex<t.constraintIndex?-1:e.constraintIndex>t.constraintIndex?1:0}e.combine=function(e,n){if(!e)return n;if(!n)return e;const a=Array.from(e);return n.forEach((e=>{a.some((n=>0===t(e,n)))||a.push(e)})),a.sort(t)},e.isSame=function(e,t){return e?!(!t||e.length!==t.length)&&void 0===e.find(((e,n)=>e.typeVar.nameWithScope!==t[n].typeVar.nameWithScope||e.constraintIndex!==t[n].constraintIndex)):!t},e.isCompatible=function(e,t){if(!e||!t)return!0;for(const n of e){let e=!1;const a=t.find((t=>n.typeVar.nameWithScope===t.typeVar.nameWithScope&&(e=!0,n.constraintIndex===t.constraintIndex)));if(e&&!a)return!1}return!0}}(y||(t.TypeCondition=y={})),function(e){e.create=function(){return{category:8,subtypes:[],literalInstances:{},literalClasses:{},flags:3}},e.addType=function(e,t){if(k(t)&&void 0!==t.literalValue&&void 0===t.condition){const n=S(t)?e.literalInstances:e.literalClasses;if(p.isBuiltIn(t,"str"))void 0===n.literalStrMap&&(n.literalStrMap=new Map),n.literalStrMap.set(t.literalValue,t);else if(p.isBuiltIn(t,"int"))void 0===n.literalIntMap&&(n.literalIntMap=new Map),n.literalIntMap.set(t.literalValue,t);else if(p.isEnumClass(t)){void 0===n.literalEnumMap&&(n.literalEnumMap=new Map);const e=t.literalValue;n.literalEnumMap.set(e.getName(),t)}}e.flags&=t.flags,e.subtypes.push(t),A(t)&&t.details.recursiveTypeAliasName&&(e.includesRecursiveTypeAlias=!0)},e.containsType=function(e,t,n,a=0){if(k(t)&&void 0===t.condition&&void 0!==t.literalValue){const n=S(t)?e.literalInstances:e.literalClasses;if(p.isBuiltIn(t,"str")&&void 0!==n.literalStrMap)return n.literalStrMap.has(t.literalValue);if(p.isBuiltIn(t,"int")&&void 0!==n.literalIntMap)return n.literalIntMap.has(t.literalValue);if(p.isEnumClass(t)&&void 0!==n.literalEnumMap){const e=t.literalValue;return n.literalEnumMap.has(e.getName())}}const r=e.subtypes.findIndex(((e,r)=>!(null==n?void 0:n.has(r))&&N(e,t,{},a)));return!(r<0)&&(null==n||n.add(r),!0)},e.addTypeAliasSource=function(e,t){if(8===t.category){const n=t.typeAliasInfo?[t]:t.typeAliasSources;n&&(e.typeAliasSources||(e.typeAliasSources=new Set),n.forEach((t=>{e.typeAliasSources.add(t)})))}}}(g||(t.UnionType=g={})),function(e){function n(e,t){return`${e}.${t}`}function r(e,t,n){return{category:9,details:{name:e,constraints:[],declaredVariance:2,isParamSpec:t,isVariadic:!1,isSynthesized:!1,defaultType:o.create()},flags:n}}e.createInstance=function(e){return r(e,!1,2)},e.createInstantiable=function(e,t=!1){return r(e,t,1)},e.cloneAsInstance=function(e){var t;if((0,a.assert)(s.isInstantiable(e)),null===(t=e.cached)||void 0===t?void 0:t.typeBaseInstanceType)return e.cached.typeBaseInstanceType;const n=s.cloneTypeAsInstance(e,!0);return delete n.specialForm,n},e.cloneAsInstantiable=function(e){var t;return(null===(t=e.cached)||void 0===t?void 0:t.typeBaseInstantiableType)?e.cached.typeBaseInstantiableType:s.cloneTypeAsInstantiable(e,!0)},e.cloneForNewName=function(e,t){const a=s.cloneType(e);return a.details={...e.details},a.details.name=t,a.scopeId&&(a.nameWithScope=n(t,a.scopeId)),a},e.cloneForScopeId=function(e,t,a,r){const i=s.cloneType(e);return i.nameWithScope=n(e.details.name,t),i.scopeId=t,i.scopeName=a,i.scopeType=r,i},e.cloneForUnpacked=function(e,t=!1){(0,a.assert)(e.details.isVariadic);const n=s.cloneType(e);return n.isVariadicUnpacked=!0,n.isVariadicInUnion=t,n},e.cloneForPacked=function(e){(0,a.assert)(e.details.isVariadic);const t=s.cloneType(e);return t.isVariadicUnpacked=!1,t.isVariadicInUnion=!1,t},e.cloneAsInvariant=function(e){if(e.details.isParamSpec||e.details.isVariadic)return e;if(0===e.details.declaredVariance)return e;if(2===e.details.declaredVariance&&void 0===e.details.boundType&&0===e.details.constraints.length)return e;const t=s.cloneType(e);return t.details={...t.details},t.details.declaredVariance=2,t.details.boundType=void 0,t.details.constraints=[],t},e.cloneForParamSpecAccess=function(e,t){const n=s.cloneType(e);return n.paramSpecAccess=t,n},e.cloneAsSpecializedSelf=function(e,t){(0,a.assert)(e.details.isSynthesizedSelf);const n=s.cloneType(e);return n.details={...n.details},n.details.boundType=t,n},e.cloneAsInScopePlaceholder=function(e,n){if(e.isInScopePlaceholder)return e;let a=e.nameWithScope;n&&(a=`${e.nameWithScope}-${n}`);const r=s.cloneType(e);return r.isInScopePlaceholder=!0,r.scopeId=t.InScopePlaceholderScopeId,r.nameWithScope=a,r},e.makeNameWithScope=n,e.addConstraint=function(e,t){e.details.constraints.push(t)},e.getNameWithScope=function(e){return e.nameWithScope||e.details.name},e.getReadableName=function(e){return e.scopeName?`${e.details.name}@${e.scopeName}`:e.details.name},e.getVariance=function(e){var t;const n=null!==(t=e.computedVariance)&&void 0!==t?t:e.details.declaredVariance;return(0,a.assert)(0!==n,"Expected variance to be inferred"),1===n?3:n},e.isTypeAliasPlaceholder=function(e){return!!e.details.recursiveTypeAliasName&&!e.details.boundType}}(h||(t.TypeVarType=h={})),t.isNever=v,t.isAny=function(e){return 2===e.category},t.isUnknown=b,t.isAnyOrUnknown=_,t.isUnbound=C,t.isUnion=I,t.isPossiblyUnbound=function e(t){return!!C(t)||!!I(t)&&void 0!==t.subtypes.find((t=>e(t)))},t.isClass=k,t.isInstantiableClass=w,t.isClassInstance=S,t.isModule=function(e){return 7===e.category},t.isTypeVar=A,t.isVariadicTypeVar=function(e){return 9===e.category&&e.details.isVariadic},t.isUnpackedVariadicTypeVar=x,t.isUnpackedClass=P,t.isUnpacked=function(e){return x(e)||P(e)},t.isParamSpec=function(e){return 9===e.category&&e.details.isParamSpec},t.isFunction=function(e){return 4===e.category},t.isOverloadedFunction=function(e){return 5===e.category},t.getTypeAliasInfo=function(e){return e.typeAliasInfo?e.typeAliasInfo:A(e)&&e.details.recursiveTypeAliasName&&e.details.boundType&&e.details.boundType.typeAliasInfo?e.details.boundType.typeAliasInfo:void 0},t.isTypeSame=N,t.removeUnknownFromUnion=function(e){return D(e,(e=>b(e)))},t.removeUnbound=function(e){return I(e)?D(e,(e=>C(e))):C(e)?o.create():e},t.removeFromUnion=D,t.findSubtype=F,t.combineTypes=E,t.isSameWithoutLiteralValue=M},47476:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.BackgroundAnalysisRunnerBase=t.BackgroundAnalysisBase=void 0;const i=n(48696),o=n(6468),l=n(4732),p=n(48612),c=n(64704),d=n(55484),u=n(57508),m=s(n(83181)),y=n(72484),g=n(24092),h=n(10996),f=n(55084);t.BackgroundAnalysisBase=class{constructor(e){this.console=e,this._onAnalysisCompletion=o.nullCallback}setCompletionCallback(e){this._onAnalysisCompletion=null!=e?e:o.nullCallback}setImportResolver(e){this.enqueueRequest({requestType:"setImportResolver",data:(0,p.serialize)(e.host.kind)})}setConfigOptions(e){this.enqueueRequest({requestType:"setConfigOptions",data:(0,p.serialize)(e)})}setTrackedFiles(e){this.enqueueRequest({requestType:"setTrackedFiles",data:(0,p.serialize)(e)})}setAllowedThirdPartyImports(e){this.enqueueRequest({requestType:"setAllowedThirdPartyImports",data:(0,p.serialize)(e)})}ensurePartialStubPackages(e){this.enqueueRequest({requestType:"ensurePartialStubPackages",data:(0,p.serialize)({executionRoot:e})})}setFileOpened(e,t,n,a){this.enqueueRequest({requestType:"setFileOpened",data:(0,p.serialize)({fileUri:e,version:t,contents:n,options:a})})}updateChainedUri(e,t){this.enqueueRequest({requestType:"updateChainedFileUri",data:(0,p.serialize)({fileUri:e,chainedUri:t})})}setFileClosed(e,t){this.enqueueRequest({requestType:"setFileClosed",data:(0,p.serialize)({fileUri:e,isTracked:t})})}addInterimFile(e){this.enqueueRequest({requestType:"addInterimFile",data:(0,p.serialize)({fileUri:e})})}markAllFilesDirty(e){this.enqueueRequest({requestType:"markAllFilesDirty",data:(0,p.serialize)({evenIfContentsAreSame:e})})}markFilesDirty(e,t){this.enqueueRequest({requestType:"markFilesDirty",data:(0,p.serialize)({fileUris:e,evenIfContentsAreSame:t})})}startAnalysis(e,t){this._startOrResumeAnalysis("analyze",e,t)}async analyzeFile(e,t){(0,c.throwIfCancellationRequested)(t);const{port1:n,port2:a}=new i.MessageChannel,r=(0,p.getBackgroundWaiter)(n),s=(0,c.getCancellationTokenId)(t);this.enqueueRequest({requestType:"analyzeFile",data:(0,p.serialize)({fileUri:e,cancellationId:s}),port:a});const o=await r;return a.close(),n.close(),o}async getDiagnosticsForRange(e,t,n){(0,c.throwIfCancellationRequested)(n);const{port1:a,port2:r}=new i.MessageChannel,s=(0,p.getBackgroundWaiter)(a),o=(0,c.getCancellationTokenId)(n);this.enqueueRequest({requestType:"getDiagnosticsForRange",data:(0,p.serialize)({fileUri:e,range:t,cancellationId:o}),port:r});const l=await s;return r.close(),a.close(),b(l)}async writeTypeStub(e,t,n,a){(0,c.throwIfCancellationRequested)(a);const{port1:r,port2:s}=new i.MessageChannel,o=(0,p.getBackgroundWaiter)(r),l=(0,c.getCancellationTokenId)(a);this.enqueueRequest({requestType:"writeTypeStub",data:(0,p.serialize)({targetImportPath:e,targetIsSingleFile:t,stubPath:n,cancellationId:l}),port:s}),await o,s.close(),r.close()}invalidateAndForceReanalysis(e){this.enqueueRequest({requestType:"invalidateAndForceReanalysis",data:(0,p.serialize)({reason:e})})}restart(){this.enqueueRequest({requestType:"restart",data:null})}shutdown(){this.enqueueRequest({requestType:"shutdown",data:null})}setup(e){this._worker=e,e.on("message",(e=>this.onMessage(e))),e.on("error",(e=>{this.log(u.LogLevel.Error,`Error occurred on background thread: ${JSON.stringify(e)}`)}))}onMessage(e){switch(e.requestType){case"log":{const t=(0,p.deserialize)(e.data);this.log(t.level,t.message);break}case"analysisResult":this._onAnalysisCompletion(v((0,p.deserialize)(e.data)));break;default:m.fail(`${e.requestType} is not expected. Message structure: ${JSON.stringify(e)}`)}}enqueueRequest(e){this._worker&&this._worker.postMessage(e,e.port?[e.port]:void 0)}log(e,t){(0,u.log)(this.console,e,t)}handleAnalysisResponse(e,t,n,a,r){switch(e.requestType){case"analysisResult":this._onAnalysisCompletion(v((0,p.deserialize)(e.data)));break;case"analysisPaused":a.close(),n.close(),this._startOrResumeAnalysis("resumeAnalysis",t,r);break;case"analysisDone":(0,g.disposeCancellationToken)(r),a.close(),n.close();break;default:m.fail(`${e.requestType} is not expected. Message structure: ${JSON.stringify(e)}`)}}_startOrResumeAnalysis(e,t,n){const{port1:a,port2:r}=new i.MessageChannel;a.on("message",(e=>this.handleAnalysisResponse(e,t,a,r,n)));const s=(0,c.getCancellationTokenId)(n);this.enqueueRequest({requestType:e,data:(0,p.serialize)(s),port:r})}};class T extends p.BackgroundThreadBase{constructor(e){super(i.workerData,e),this.serviceProvider=e,this.isCaseSensitive=!0;const t=i.workerData;this.log(u.LogLevel.Info,`Background analysis(${i.threadId}) root directory: ${t.rootUri}`),this._configOptions=new d.ConfigOptions(f.Uri.parse(t.rootUri,e)),this.importResolver=this.createImportResolver(e,this._configOptions,this.createHost());const n=this.getConsole();this.logTracker=new h.LogTracker(n,`BG(${i.threadId})`),this._program=new l.Program(this.importResolver,this._configOptions,e,this.logTracker)}get program(){return this._program}start(){this.log(u.LogLevel.Info,`Background analysis(${i.threadId}) started`),null===i.parentPort||void 0===i.parentPort||i.parentPort.on("message",this._onMessageWrapper.bind(this)),null===i.parentPort||void 0===i.parentPort||i.parentPort.on("error",(e=>m.fail(`failed ${e}`))),null===i.parentPort||void 0===i.parentPort||i.parentPort.on("exit",(e=>{0!==e&&m.fail(`worker stopped with exit code ${e}`)}))}onMessage(e){var t;switch(e.requestType){case"cacheUsageBuffer":null===(t=this.serviceProvider.cacheManager())||void 0===t||t.handleCachedUsageBufferMessage(e);break;case"analyze":{const t=e.port,n=(0,p.deserialize)(e.data),a=(0,g.getCancellationTokenFromId)(n);this.handleAnalyze(t,n,a);break}case"resumeAnalysis":{const t=e.port,n=(0,p.deserialize)(e.data),a=(0,g.getCancellationTokenFromId)(n);this.handleResumeAnalysis(t,n,a);break}case"analyzeFile":(0,p.run)((()=>{const{fileUri:t,cancellationId:n}=(0,p.deserialize)(e.data),a=(0,g.getCancellationTokenFromId)(n);return this.handleAnalyzeFile(t,a)}),e.port);break;case"getDiagnosticsForRange":(0,p.run)((()=>{const{fileUri:t,range:n,cancellationId:a}=(0,p.deserialize)(e.data),r=(0,g.getCancellationTokenFromId)(a);return this.handleGetDiagnosticsForRange(t,n,r)}),e.port);break;case"writeTypeStub":(0,p.run)((()=>{const{targetImportPath:t,targetIsSingleFile:n,stubPath:a,cancellationId:r}=(0,p.deserialize)(e.data),s=(0,g.getCancellationTokenFromId)(r);this.handleWriteTypeStub(t,n,a,s)}),e.port);break;case"setImportResolver":this.handleSetImportResolver((0,p.deserialize)(e.data));break;case"setConfigOptions":this.handleSetConfigOptions((0,p.deserialize)(e.data));break;case"setTrackedFiles":this.handleSetTrackedFiles((0,p.deserialize)(e.data));break;case"setAllowedThirdPartyImports":this.handleSetAllowedThirdPartyImports((0,p.deserialize)(e.data));break;case"ensurePartialStubPackages":{const{executionRoot:t}=(0,p.deserialize)(e.data);this.handleEnsurePartialStubPackages(t);break}case"setFileOpened":{const{fileUri:t,version:n,contents:a,options:r}=(0,p.deserialize)(e.data);this.handleSetFileOpened(t,n,a,r);break}case"updateChainedFileUri":{const{fileUri:t,chainedUri:n}=(0,p.deserialize)(e.data);this.handleUpdateChainedfileUri(t,n);break}case"setFileClosed":{const{fileUri:t,isTracked:n}=(0,p.deserialize)(e.data);this.handleSetFileClosed(t,n);break}case"addInterimFile":{const{fileUri:t}=(0,p.deserialize)(e.data);this.handleAddInterimFile(t);break}case"markAllFilesDirty":{const{evenIfContentsAreSame:t}=(0,p.deserialize)(e.data);this.handleMarkAllFilesDirty(t);break}case"markFilesDirty":{const{fileUris:t,evenIfContentsAreSame:n}=(0,p.deserialize)(e.data);this.handleMarkFilesDirty(t,n);break}case"invalidateAndForceReanalysis":{const{reason:t}=(0,p.deserialize)(e.data);this.handleInvalidateAndForceReanalysis(t);break}case"restart":this.handleRestart();break;case"shutdown":this.handleShutdown();break;default:m.fail(`${e.requestType} is not expected. Message structure: ${JSON.stringify(e)}`)}}handleAnalyze(e,t,n){const a=this.program.getFilesToAnalyzeCount();this.onAnalysisCompletion(e,{diagnostics:[],filesInProgram:this.program.getFileCount(),filesRequiringAnalysis:a,checkingOnlyOpenFiles:this.program.isCheckingOnlyOpenFiles(),fatalErrorOccurred:!1,configParseErrorOccurred:!1,elapsedTime:0}),this.handleResumeAnalysis(e,t,n)}handleResumeAnalysis(e,t,n){(0,o.analyzeProgram)(this.program,{openFilesTimeInMs:50,noOpenFilesTimeInMs:200},this._configOptions,(t=>this.onAnalysisCompletion(e,t)),this.getConsole(),n)?this._analysisPaused(e,t):this.analysisDone(e,t)}handleAnalyzeFile(e,t){return(0,c.throwIfCancellationRequested)(t),this.program.analyzeFile(e,t)}handleGetDiagnosticsForRange(e,t,n){return(0,c.throwIfCancellationRequested)(n),this.program.getDiagnosticsForRange(e,t)}handleWriteTypeStub(e,t,n,a){(0,o.analyzeProgram)(this.program,void 0,this._configOptions,o.nullCallback,this.getConsole(),a),this.program.writeTypeStub(e,t,n,a)}handleSetImportResolver(e){this.importResolver=this.createImportResolver(this.getServiceProvider(),this._configOptions,this.createHost()),this.program.setImportResolver(this.importResolver)}handleSetConfigOptions(e){this._configOptions=e,this.importResolver=this.createImportResolver(this.getServiceProvider(),this._configOptions,this.importResolver.host),this.program.setConfigOptions(this._configOptions),this.program.setImportResolver(this.importResolver)}handleSetTrackedFiles(e){const t=this.program.setTrackedFiles(e);this._reportDiagnostics(t,this.program.getFilesToAnalyzeCount(),0)}handleSetAllowedThirdPartyImports(e){this.program.setAllowedThirdPartyImports(e)}handleEnsurePartialStubPackages(e){const t=this._configOptions.getExecutionEnvironments().find((t=>{var n;return(null===(n=t.root)||void 0===n?void 0:n.toString())===e}));t&&this.importResolver.ensurePartialStubPackages(t)}handleSetFileOpened(e,t,n,a){this.program.setFileOpened(e,t,n,a?{...a,chainedFileUri:f.Uri.fromJsonObj(null==a?void 0:a.chainedFileUri)}:void 0)}handleUpdateChainedfileUri(e,t){this.program.updateChainedUri(e,t)}handleSetFileClosed(e,t){const n=this.program.setFileClosed(e,t);this._reportDiagnostics(n,this.program.getFilesToAnalyzeCount(),0)}handleAddInterimFile(e){this.program.addInterimFile(e)}handleMarkFilesDirty(e,t){this.program.markFilesDirty(e,t)}handleMarkAllFilesDirty(e){this.program.markAllFilesDirty(e)}handleInvalidateAndForceReanalysis(e){this.importResolver.invalidateCache(),this.program.markAllFilesDirty(!0)}handleRestart(){this.importResolver=this.createImportResolver(this.getServiceProvider(),this._configOptions,this.importResolver.host),this.program.setImportResolver(this.importResolver)}handleShutdown(){this._program.dispose(),super.handleShutdown()}analysisDone(e,t){e.postMessage({requestType:"analysisDone",data:t})}onAnalysisCompletion(e,t){e.postMessage({requestType:"analysisResult",data:(0,p.serialize)(t)})}_onMessageWrapper(e){try{return this.onMessage(e)}catch(t){if(this.log(u.LogLevel.Log,`Background analysis exception leak: ${t}`),c.OperationCanceledException.is(t))return void(null===i.parentPort||void 0===i.parentPort||i.parentPort.postMessage({kind:"cancelled",data:t.message}));null===i.parentPort||void 0===i.parentPort||i.parentPort.postMessage({kind:"failed",data:`Exception: for msg ${e.requestType}: ${t.message} in ${t.stack}`})}}_reportDiagnostics(e,t,n){i.parentPort&&this.onAnalysisCompletion(i.parentPort,{diagnostics:e,filesInProgram:this.program.getFileCount(),filesRequiringAnalysis:t,checkingOnlyOpenFiles:this.program.isCheckingOnlyOpenFiles(),fatalErrorOccurred:!1,configParseErrorOccurred:!1,elapsedTime:n})}_analysisPaused(e,t){e.postMessage({requestType:"analysisPaused",data:t})}}function v(e){return e.diagnostics=e.diagnostics.map((e=>({fileUri:f.Uri.fromJsonObj(e.fileUri),version:e.version,diagnostics:b(e.diagnostics)}))),e}function b(e){return e.map((e=>{const t=new y.Diagnostic(e.category,e.message,e.range,e.priority);if(e._actions)for(const n of e._actions)t.addAction(n);if(e._rule&&t.setRule(e._rule),e._relatedInfo)for(const n of e._relatedInfo)t.addRelatedInfo(n.message,n.uri,n.range);return t}))}t.BackgroundAnalysisRunnerBase=T},48612:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.getBackgroundWaiter=t.run=t.deserialize=t.deserializeReviver=t.serialize=t.serializeReplacer=t.BackgroundThreadBase=t.BackgroundConsole=void 0;const i=n(48696),o=n(80232),l=n(64704),p=n(55484),c=n(57508),d=n(86016),u=s(n(83181)),m=n(61328),y=n(5216),g=n(37636),h=n(29484);n(58484);const f=n(55084);class T{get level(){return c.LogLevel.Log}log(e){this.post(c.LogLevel.Log,e)}info(e){this.post(c.LogLevel.Info,e)}warn(e){this.post(c.LogLevel.Warn,e)}error(e){this.post(c.LogLevel.Error,e)}post(e,t){null===i.parentPort||void 0===i.parentPort||i.parentPort.postMessage({requestType:"log",data:b({level:e,message:t})})}}t.BackgroundConsole=T;function v(e){if(f.Uri.is(e)&&void 0!==e.toJsonObj)return{__serialized_uri_val:e.toJsonObj()};if(e instanceof m.PythonVersion)return{__serialized_version_val:e.toString()};if(e instanceof Map)return{__serialized_map_val:[...e]};if(e instanceof Set)return{__serialized_set_val:[...e]};if(e instanceof RegExp)return{__serialized_regexp_val:{source:e.source,flags:e.flags}};if(e instanceof p.ConfigOptions){return{__serialized_config_options:Object.entries(e).reduce(((e,t,n)=>({...e,[t[0]]:t[1]})),{})}}return e}function b(e){return JSON.stringify(e,((e,t)=>v(t)))}function _(e){if(e&&"object"==typeof e){if(void 0!==e.__serialized_uri_val)return f.Uri.fromJsonObj(e.__serialized_uri_val);if(e.__serialized_version_val)return m.PythonVersion.fromString(e.__serialized_version_val);if(e.__serialized_map_val)return new Map(e.__serialized_map_val);if(e.__serialized_set_val)return new Set(e.__serialized_set_val);if(e.__serialized_regexp_val)return new RegExp(e.__serialized_regexp_val.source,e.__serialized_regexp_val.flags);if(e.__serialized_config_options){const t=new p.ConfigOptions(e.__serialized_config_options.projectRoot);return Object.assign(t,e.__serialized_config_options),t}}return e}function C(e){if(e)return JSON.parse(e,((e,t)=>_(t)))}t.BackgroundThreadBase=class{constructor(e,t){let n;(0,l.setCancellationFolderName)(e.cancellationFolderName),this._serviceProvider=null!=t?t:new h.ServiceProvider,this._serviceProvider.tryGet(g.ServiceKeys.console)||this._serviceProvider.add(g.ServiceKeys.console,new T),this._serviceProvider.tryGet(g.ServiceKeys.tempFile)||(n=new y.RealTempFile,this._serviceProvider.add(g.ServiceKeys.tempFile,n)),this._serviceProvider.tryGet(g.ServiceKeys.caseSensitivityDetector)||this._serviceProvider.add(g.ServiceKeys.caseSensitivityDetector,null!=n?n:new y.RealTempFile),this._serviceProvider.tryGet(g.ServiceKeys.fs)||this._serviceProvider.add(g.ServiceKeys.fs,(0,y.createFromRealFileSystem)(this._serviceProvider.get(g.ServiceKeys.caseSensitivityDetector),this.getConsole())),this._serviceProvider.tryGet(g.ServiceKeys.cacheManager)||this._serviceProvider.add(g.ServiceKeys.cacheManager,new o.CacheManager),global.__rootDirectory=f.Uri.parse(e.rootUri,this._serviceProvider).getFilePath()}get fs(){return this._serviceProvider.fs()}log(e,t){null===i.parentPort||void 0===i.parentPort||i.parentPort.postMessage({requestType:"log",data:b({level:e,message:t})})}getConsole(){return this._serviceProvider.console()}getServiceProvider(){return this._serviceProvider}handleShutdown(){const e=this._serviceProvider.tryGet(g.ServiceKeys.tempFile);d.Disposable.is(e)&&e.dispose(),null===i.parentPort||void 0===i.parentPort||i.parentPort.close()}},t.serializeReplacer=v,t.serialize=b,t.deserializeReviver=_,t.deserialize=C,t.run=function(e,t,n=b){try{const a=e();return(0,d.isThenable)(a)?a.then((e=>{t.postMessage({kind:"ok",data:n(e)})}),(e=>{l.OperationCanceledException.is(e)?t.postMessage({kind:"cancelled",data:e.message}):t.postMessage({kind:"failed",data:`Exception: ${e.message} in ${e.stack}`})})):void t.postMessage({kind:"ok",data:n(a)})}catch(e){if(l.OperationCanceledException.is(e))return void t.postMessage({kind:"cancelled",data:e.message});t.postMessage({kind:"failed",data:`Exception: ${e.message} in ${e.stack}`})}},t.getBackgroundWaiter=function(e,t=C){return new Promise(((n,a)=>{e.on("message",(e=>{switch(e.kind){case"ok":n(t(e.data));break;case"cancelled":a(new l.OperationCanceledException);break;case"failed":a(e.data);break;default:u.fail(`unknown kind ${e.kind}`)}}))}))}},63548:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommandResult=void 0;const a=n(6412);var r;!function(e){e.is=function(e){return e&&void 0!==e.label&&e.edits&&a.WorkspaceEdit.is(e.edits)}}(r||(t.CommandResult=r={}))},96016:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DumpFileDebugInfo=t.DumpFileDebugInfoCommand=void 0;const a=n(9316),r=n(28340),s=n(78232),i=n(8312),o=n(64704),l=n(86016),p=n(96193),c=n(55164),d=n(55084),u=n(79428);t.DumpFileDebugInfoCommand=class{constructor(e){this._ls=e}async execute(e,t){if((0,o.throwIfCancellationRequested)(t),!e.arguments||e.arguments.length<2)return[];const n=d.Uri.parse(e.arguments[0],this._ls.serviceProvider),a=await this._ls.getWorkspaceForFile(n);return(new m).dump(a,n,e.arguments,t)}};class m{dump(e,t,n,s){return e.service.run((s=>{const i=n[1],o=e.service.getParseResults(e.service.fs.realCasePath(t));if(!o)return[];const l=[],p={info:e=>{l.push(e)},log:e=>{l.push(e)},error:e=>{l.push(e)},warn:e=>{l.push(e)}};switch(p.info(`* Dump debug info for '${t.toUserVisibleString()}'`),i){case"tokens":p.info(`* Token info (${o.tokenizerOutput.tokens.count} tokens)`);for(let e=0;e<o.tokenizerOutput.tokens.count;e++){const n=o.tokenizerOutput.tokens.getItemAt(e);p.info(`[${e}] ${_(t,n,o.tokenizerOutput.lines)}`)}break;case"nodes":{p.info("* Node info");const e=new v(t,o.tokenizerOutput.lines);e.walk(o.parserOutput.parseTree),p.info(e.output);break}case"types":{const e=s.evaluator,a=n[2],r=n[3];if(!e||!a||!r)return[];p.info("* Type info"),p.info(`${g(t,e,o,a,r)}`);break}case"cachedtypes":{const e=s.evaluator,a=n[2],r=n[3];if(!e||!a||!r)return[];p.info("* Cached Type info"),p.info(`${g(t,e,o,a,r,!0)}`);break}case"codeflowgraph":{const e=s.evaluator,t=n[2];if(!e||void 0===t)return[];const i=(0,r.findNodeByOffset)(o.parserOutput.parseTree,t);if(!i)return[];const l=(0,a.getFlowNode)(i);if(!l)return[];p.info("* CodeFlow Graph"),e.printControlFlowGraph(l,void 0,"Dump CodeFlowGraph",p)}}return e.service.serviceProvider.console().info(l.join("\n")),[]}),s)}}function y(e,t){return JSON.stringify(e,t,2).replace(/\\\\/g,"\\")}function g(e,t,n,a,s,o){var p,d;const m=new v(e,n.tokenizerOutput.lines),g=null!==(p=(0,r.findNodeByOffset)(n.parserOutput.parseTree,a))&&void 0!==p?p:(0,r.findNodeByOffset)(n.parserOutput.parseTree,s);if(!g)return"N/A";const _=new Set;if(38===g.nodeType)switch(null===(d=g.parent)||void 0===d?void 0:d.nodeType){case 10:{const e=o?t.getCachedType(g.parent.name):t.getTypeOfClass(g.parent);return e?y(e,A):"N/A"}case 28:{const e=o?t.getCachedType(g.parent.name):t.getTypeOfFunction(g.parent);return e?y(e,A):"N/A"}}const I=c.TextRange.fromBounds(a,s),k=function(e,t){let n=e;for(;n&&!c.TextRange.containsRange(n,t);)n=n.parent;if(!n)return;for(;!(0,u.isExpressionNode)(n);)n=n.parent;return n}(g,I);if(!k)return"N/A";const w=`Expression node found at ${C(k,n.tokenizerOutput.lines)} from the given span ${C(I,n.tokenizerOutput.lines)}\r\n`,S=o?t.getCachedType(k):t.getType(k);return S?w+y(S,A):w+"No result";function A(e,t){if(void 0!==t){if(!(0,l.isNumber)(t)&&!(0,l.isString)(t)){if(_.has(t))return x(n=t)&&n.details&&P(n.details)?`<cycle> class '${t.details.fullName}' typeSourceId:${t.details.typeSourceId}`:function(e){return x(e)&&e.details&&N(e.details)}(t)?`<cycle> function '${t.details.fullName}' parameter count:${t.details.parameters.length}`:function(e){return x(e)&&e.details&&D(e.details)}(t)?`<cycle> function '${t.details.name}' scope id:${t.nameWithScope}`:void 0;_.add(t)}var n;if(x(this)&&"category"===e)return function(e,t){switch(e){case 0:return"Unbound";case 1:return"Unknown";case 2:return"Any";case 3:return"Never";case 4:return"Function";case 5:return"OverloadedFunction";case 6:return i.TypeBase.isInstantiable(t)?"Class":"Object";case 7:return"Module";case 8:return"Union";case 9:return"TypeVar";default:return`Unknown Value!! (${e})`}}(t,this);if(x(this)&&"flags"===e)return function(e){const t=[];1&e&&t.push("Instantiable");2&e&&t.push("Instance");return 0===t.length?"None":t.join(",")}(t);if(P(this)&&"flags"===e)return h(T,t);if(N(this)&&"flags"===e)return function(e){return h(f,e)}(t);if(D(this)&&"variance"===e)return function(e){switch(e){case 2:return"Invariant";case 3:return"Covariant";case 4:return"Contravariant";default:return`Unknown Value!! (${e})`}}(t);if(function(e){return e.category&&e.type}(this)&&"category"===e)return b(t);if(t.nodeType&&t.id){m.visitNode(t);const e=m.output;return m.reset(),e}return t}}function x(e){return e.category&&e.flags}function P(e){return void 0!==e.name&&void 0!==e.fullName&&void 0!==e.moduleName&&e.baseClasses}function N(e){return void 0!==e.name&&void 0!==e.fullName&&void 0!==e.moduleName&&e.parameters}function D(e){return void 0!==e.name&&e.constraints&&void 0!==e.variance}}function h(e,t){const n=[];return e.forEach((e=>{t&e[0]&&n.push(e[1])})),0===n.length?0===t?"None":"<Unknown>":n.join(",")}t.DumpFileDebugInfo=m;const f=[[8,"AbstractMethod"],[512,"Async"],[2,"ClassMethod"],[1,"ConstructorMethod"],[32,"DisableDefaultChecks"],[8192,"Final"],[16,"Generator"],[256,"Overloaded"],[65536,"ParamSpecValue"],[131072,"PartiallyEvaluated"],[4096,"PyTypedDefinition"],[32768,"SkipArgsKwargsCompatibilityCheck"],[4,"StaticMethod"],[2048,"StubDefinition"],[64,"SynthesizedMethod"],[16384,"UnannotatedParams"]];const T=[[1,"BuiltInClass"],[1024,"CanOmitDictValues"],[8388608,"ClassProperty"],[4,"DataClass"],[4194304,"DataClassKeywordOnlyParams"],[16777216,"DefinedInStub"],[2097152,"EnumClass"],[8192,"Final"],[8,"FrozenDataClass"],[67108864,"GenerateDataClassSlots"],[524288,"HasCustomClassGetItem"],[262144,"PartiallyEvaluated"],[4096,"PropertyClass"],[16384,"ProtocolClass"],[32768,"PseudoGenericClass"],[33554432,"ReadOnlyInstanceVariables"],[65536,"RuntimeCheckable"],[32,"SkipSynthesizedDataClassEq"],[16,"SkipSynthesizedDataClassInit"],[2,"SpecialBuiltIn"],[2048,"SupportsAbstractMethods"],[134217728,"SynthesizeDataClassUnsafeHash"],[64,"SynthesizedDataClassOrder"],[1048576,"TupleClass"],[128,"TypedDictClass"],[131072,"TypingExtensionClass"]];class v extends s.ParseTreeWalker{constructor(e,t){super(),this._uri=e,this._lines=t,this._indentation="",this._output=""}get output(){return this._output}walk(e){const t=this.visitNode(e);t.length>0&&(this._indentation+="  ",this.walkMultiple(t),this._indentation=this._indentation.substr(0,this._indentation.length-2))}reset(){this._indentation="",this._output=""}visitArgument(e){return this._log(`${this._getPrefix(e)} ${function(e){switch(e){case 0:return"Simple";case 1:return"UnpackedList";case 2:return"UnpackedDictionary";default:return`Unknown Value!! (${e})`}}(e.argumentCategory)}`),!0}visitAssert(e){return this._log(`${this._getPrefix(e)}`),!0}visitAssignment(e){return this._log(`${this._getPrefix(e)}`),!0}visitAssignmentExpression(e){return this._log(`${this._getPrefix(e)}`),!0}visitAugmentedAssignment(e){return this._log(`${this._getPrefix(e)} ${I(e.operator)}`),!0}visitAwait(e){return this._log(`${this._getPrefix(e)}`),!0}visitBinaryOperation(e){return this._log(`${this._getPrefix(e)} ${_(this._uri,e.operatorToken,this._lines)} ${I(e.operator)}} parenthesized:(${e.parenthesized})`),!0}visitBreak(e){return this._log(`${this._getPrefix(e)}`),!0}visitCall(e){return this._log(`${this._getPrefix(e)}`),!0}visitClass(e){return this._log(`${this._getPrefix(e)}`),!0}visitTernary(e){return this._log(`${this._getPrefix(e)}`),!0}visitContinue(e){return this._log(`${this._getPrefix(e)}`),!0}visitConstant(e){return this._log(`${this._getPrefix(e)} ${k(e.constType)}`),!0}visitDecorator(e){return this._log(`${this._getPrefix(e)}`),!0}visitDel(e){return this._log(`${this._getPrefix(e)}`),!0}visitDictionary(e){return this._log(`${this._getPrefix(e)}`),!0}visitDictionaryKeyEntry(e){return this._log(`${this._getPrefix(e)}`),!0}visitDictionaryExpandEntry(e){return this._log(`${this._getPrefix(e)}`),!0}visitError(e){return this._log(`${this._getPrefix(e)} ${function(e){switch(e){case 0:return"MissingIn";case 1:return"MissingElse";case 2:return"MissingExpression";case 3:return"MissingIndexOrSlice";case 4:return"MissingDecoratorCallName";case 5:return"MissingCallCloseParen";case 6:return"MissingIndexCloseBracket";case 7:return"MissingMemberAccessName";case 8:return"MissingTupleCloseParen";case 9:return"MissingListCloseBracket";case 10:return"MissingFunctionParameterList";case 11:return"MissingPattern";case 12:return"MissingPatternSubject";case 13:return"MissingDictValue";case 14:return"MaxDepthExceeded";default:return`Unknown Value!! (${e})`}}(e.category)}`),!0}visitEllipsis(e){return this._log(`${this._getPrefix(e)}`),!0}visitIf(e){return this._log(`${this._getPrefix(e)}`),!0}visitImport(e){return this._log(`${this._getPrefix(e)}`),!0}visitImportAs(e){return this._log(`${this._getPrefix(e)}`),!0}visitImportFrom(e){return this._log(`${this._getPrefix(e)} wildcard import:(${e.isWildcardImport}) paren:(${e.usesParens}) wildcard token:(${e.wildcardToken?_(this._uri,e.wildcardToken,this._lines):"N/A"}) missing import keyword:(${e.missingImportKeyword})`),!0}visitImportFromAs(e){return this._log(`${this._getPrefix(e)}`),!0}visitIndex(e){return this._log(`${this._getPrefix(e)}`),!0}visitExcept(e){return this._log(`${this._getPrefix(e)}`),!0}visitFor(e){return this._log(`${this._getPrefix(e)} async:(${e.isAsync})`),!0}visitFormatString(e){return this._log(`${this._getPrefix(e)} f-string`),!0}visitFunction(e){return this._log(`${this._getPrefix(e)} async:(${e.isAsync})`),!0}visitFunctionAnnotation(e){return this._log(`${this._getPrefix(e)} ellipsis:(${e.isParamListEllipsis})`),!0}visitGlobal(e){return this._log(`${this._getPrefix(e)}`),!0}visitLambda(e){return this._log(`${this._getPrefix(e)}`),!0}visitList(e){return this._log(`${this._getPrefix(e)}`),!0}visitListComprehension(e){return this._log(`${this._getPrefix(e)}`),!0}visitListComprehensionFor(e){return this._log(`${this._getPrefix(e)} async:(${e.isAsync})`),!0}visitListComprehensionIf(e){return this._log(`${this._getPrefix(e)}`),!0}visitMemberAccess(e){return this._log(`${this._getPrefix(e)}`),!0}visitModule(e){return this._log(`${this._getPrefix(e)}`),!0}visitModuleName(e){return this._log(`${this._getPrefix(e)} leading dots:(${e.leadingDots}) trailing dot:(${e.hasTrailingDot})`),!0}visitName(e){return this._log(`${this._getPrefix(e)} ${_(this._uri,e.token,this._lines)} ${e.value}`),!0}visitNonlocal(e){return this._log(`${this._getPrefix(e)}`),!0}visitNumber(e){return this._log(`${this._getPrefix(e)} ${e.value} int:(${e.isInteger}) imaginary:(${e.isImaginary})`),!0}visitParameter(e){return this._log(`${this._getPrefix(e)} ${b(e.category)}`),!0}visitPass(e){return this._log(`${this._getPrefix(e)}`),!0}visitRaise(e){return this._log(`${this._getPrefix(e)}`),!0}visitReturn(e){return this._log(`${this._getPrefix(e)}`),!0}visitSet(e){return this._log(`${this._getPrefix(e)}`),!0}visitSlice(e){return this._log(`${this._getPrefix(e)}`),!0}visitStatementList(e){return this._log(`${this._getPrefix(e)}`),!0}visitString(e){return this._log(`${this._getPrefix(e)} ${_(this._uri,e.token,this._lines)} ${e.value}`),!0}visitStringList(e){return this._log(`${this._getPrefix(e)}`),!0}visitSuite(e){return this._log(`${this._getPrefix(e)}`),!0}visitTuple(e){return this._log(`${this._getPrefix(e)} paren:(${e.enclosedInParens})`),!0}visitTry(e){return this._log(`${this._getPrefix(e)}`),!0}visitTypeAnnotation(e){return this._log(`${this._getPrefix(e)}`),!0}visitUnaryOperation(e){return this._log(`${this._getPrefix(e)} ${_(this._uri,e.operatorToken,this._lines)} ${I(e.operator)}`),!0}visitUnpack(e){return this._log(`${this._getPrefix(e)}`),!0}visitWhile(e){return this._log(`${this._getPrefix(e)}`),!0}visitWith(e){return this._log(`${this._getPrefix(e)} async:(${e.isAsync})`),!0}visitWithItem(e){return this._log(`${this._getPrefix(e)}`),!0}visitYield(e){return this._log(`${this._getPrefix(e)}`),!0}visitYieldFrom(e){return this._log(`${this._getPrefix(e)}`),!0}visitCase(e){return this._log(`${this._getPrefix(e)} isIrrefutable: ${e.isIrrefutable}`),!0}visitMatch(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternAs(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternCapture(e){return this._log(`${this._getPrefix(e)} isStar:${e.isStar} isWildcard:${e.isWildcard}`),!0}visitPatternClass(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternClassArgument(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternLiteral(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternMapping(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternMappingExpandEntry(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternMappingKeyEntry(e){return this._log(`${this._getPrefix(e)}`),!0}visitPatternSequence(e){return this._log(`${this._getPrefix(e)} starEntryIndex: ${e.starEntryIndex}`),!0}visitPatternValue(e){return this._log(`${this._getPrefix(e)}`),!0}visitTypeAlias(e){return this._log(`${this._getPrefix(e)}`),!0}visitTypeParameter(e){return this._log(`${this._getPrefix(e)} typeParamCategory:${function(e){switch(e){case u.TypeParameterCategory.TypeVar:return"TypeVar";case u.TypeParameterCategory.TypeVarTuple:return"TypeVarTuple";case u.TypeParameterCategory.ParamSpec:return"ParamSpec"}}(e.typeParamCategory)}`),!0}visitTypeParameterList(e){return this._log(`${this._getPrefix(e)}`),!0}_log(e){this._output+=`${this._indentation}${e}\r\n`}_getPrefix(e){const t=(0,p.convertOffsetToPosition)(e.start,this._lines);return`[${e.id}] '${this._uri.toString()}:${t.line+1}:${t.character+1}' => ${(0,r.printParseNodeType)(e.nodeType)} ${C(e,this._lines)} =>`}}function b(e){switch(e){case 0:return"Simple";case 1:return"VarArgList";case 2:return"VarArgDictionary"}}function _(e,t,n){const a=(0,p.convertOffsetToPosition)(t.start,n);let r=`'${e.toUserVisibleString()}:${a.line+1}:${a.character+1}' (`;var s;return r+=function(e){switch(e){case 0:return"Invalid";case 1:return"EndOfStream";case 2:return"NewLine";case 3:return"Indent";case 4:return"Dedent";case 5:return"String";case 6:return"Number";case 7:return"Identifier";case 8:return"Keyword";case 9:return"Operator";case 10:return"Colon";case 11:return"Semicolon";case 12:return"Comma";case 13:return"OpenParenthesis";case 14:return"CloseParenthesis";case 15:return"OpenBracket";case 16:return"CloseBracket";case 17:return"OpenCurlyBrace";case 18:return"CloseCurlyBrace";case 19:return"Ellipsis";case 20:return"Dot";case 21:return"Arrow";case 22:return"Backtick";default:return`Unknown Value!! (${e})`}}(t.type),r+=(s=t).newLineType?`, ${function(e){switch(e){case 0:return"CarriageReturn";case 1:return"LineFeed";case 2:return"CarriageReturnLineFeed";case 3:return"Implied";default:return`Unknown Value!! (${e})`}}(s.newLineType)}`:"",r+=function(e){return e.operatorType?`, ${I(e.operatorType)}`:""}(t),r+=function(e){return e.keywordType?`, ${k(e.keywordType)}`:""}(t),r+=function(e){return e.flags?`, [${t=e.flags,h(w,t)}]`:"";var t}(t),r+=`, ${C(t,n)}`,r+=") ",r+=JSON.stringify(t),r}function C(e,t){const n=(0,p.convertOffsetsToRange)(e.start,c.TextRange.getEnd(e),t);return`(${n.start.line},${n.start.character})-(${n.end.line},${n.end.character})`}function I(e){switch(e){case 0:return"Add";case 1:return"AddEqual";case 2:return"Assign";case 3:return"BitwiseAnd";case 4:return"BitwiseAndEqual";case 5:return"BitwiseInvert";case 6:return"BitwiseOr";case 7:return"BitwiseOrEqual";case 8:return"BitwiseXor";case 9:return"BitwiseXorEqual";case 10:return"Divide";case 11:return"DivideEqual";case 12:return"Equals";case 13:return"FloorDivide";case 14:return"FloorDivideEqual";case 15:return"GreaterThan";case 16:return"GreaterThanOrEqual";case 17:return"LeftShift";case 18:return"LeftShiftEqual";case 19:return"LessOrGreaterThan";case 20:return"LessThan";case 21:return"LessThanOrEqual";case 22:return"MatrixMultiply";case 23:return"MatrixMultiplyEqual";case 24:return"Mod";case 25:return"ModEqual";case 26:return"Multiply";case 27:return"MultiplyEqual";case 28:return"NotEquals";case 29:return"Power";case 30:return"PowerEqual";case 31:return"RightShift";case 32:return"RightShiftEqual";case 33:return"Subtract";case 34:return"SubtractEqual";case 35:return"Walrus";case 36:return"And";case 37:return"Or";case 38:return"Not";case 39:return"Is";case 40:return"IsNot";case 41:return"In";case 42:return"NotIn";default:return`Unknown Value!! (${e})`}}function k(e){switch(e){case 0:return"And";case 1:return"As";case 2:return"Assert";case 3:return"Async";case 4:return"Await";case 5:return"Break";case 7:return"Class";case 8:return"Continue";case 9:return"Debug";case 10:return"Def";case 11:return"Del";case 12:return"Elif";case 13:return"Else";case 14:return"Except";case 15:return"False";case 16:return"Finally";case 17:return"For";case 18:return"From";case 19:return"Global";case 20:return"If";case 21:return"Import";case 22:return"In";case 23:return"Is";case 24:return"Lambda";case 26:return"None";case 27:return"Nonlocal";case 28:return"Not";case 29:return"Or";case 30:return"Pass";case 31:return"Raise";case 32:return"Return";case 33:return"True";case 34:return"Try";case 36:return"While";case 37:return"With";case 38:return"Yield";default:return`Unknown Value!! (${e})`}}const w=[[32,"Bytes"],[2,"DoubleQuote"],[64,"Format"],[8,"Raw"],[1,"SingleQuote"],[4,"Triplicate"],[16,"Unicode"],[65536,"Unterminated"]]},64704:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.raceCancellation=t.CancellationThrottle=t.FileBasedToken=t.getCancellationTokenId=t.DefaultCancellationProvider=t.CancelAfter=t.onCancellationRequested=t.throwIfCancellationRequested=t.OperationCanceledException=t.setCancellationFolderName=t.getCancellationFolderName=void 0;const a=n(75835),r=n(65872),s=n(86016),i=n(80636);let o;t.getCancellationFolderName=function(){return o},t.setCancellationFolderName=function(e){o=e};class l extends r.ResponseError{constructor(){super(r.LSPErrorCodes.RequestCancelled,"request cancelled"),this.isTypeCacheInvalid=!1}static is(e){return e.code===r.LSPErrorCodes.RequestCancelled}}t.OperationCanceledException=l,t.throwIfCancellationRequested=function(e){if(!(0,s.isDebugMode)()&&e.isCancellationRequested)throw new l};const p=r.Disposable.create((()=>{}));function c(e,t){try{return e.onCancellationRequested(t)}catch{return p}}t.onCancellationRequested=c,t.CancelAfter=function(e,...t){const n=e.createCancellationTokenSource(),a=[];for(const e of t)a.push(c(e,(()=>{n.cancel()})));return a.push(c(n.token,(()=>{a.forEach((e=>e.dispose()))}))),n};t.DefaultCancellationProvider=class{createCancellationTokenSource(){return new a.CancellationTokenSource}},t.getCancellationTokenId=function(e){return e instanceof d?e.id:void 0};class d{constructor(e,t){this._fs=t,this.isCancelled=!1,this.cancellationFilePath=i.UriEx.file(e)}get id(){return this.cancellationFilePath.toString()}get isCancellationRequested(){return!!this.isCancelled||(u.shouldCheck()&&this._pipeExists()&&this.cancel(),this.isCancelled)}get onCancellationRequested(){return this._emitter||(this._emitter=new a.Emitter),this._emitter.event}cancel(){this.isCancelled||(this.isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this._disposeEmitter()))}dispose(){this._disposeEmitter()}_disposeEmitter(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}_pipeExists(){try{return this._fs.statSync(this.cancellationFilePath),!0}catch(e){return!1}}}t.FileBasedToken=d;class u{static shouldCheck(){const e=Date.now().valueOf();return e-this._lastCheckTimestamp>=5&&(this._lastCheckTimestamp=e,!0)}}t.CancellationThrottle=u,u._lastCheckTimestamp=0,t.raceCancellation=async function(e,...t){if(!e)return Promise.race(t);if(e.isCancellationRequested)throw new l;return new Promise(((n,a)=>{if(e.isCancellationRequested)return a(new l);const r=c(e,(()=>{r.dispose(),a(new l)}));Promise.race(t).then(n,a).finally((()=>r.dispose()))}))}},45228:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.CaseSensitivityDetector=void 0,function(e){e.is=function(e){return!!e.isCaseSensitive}}(n||(t.CaseSensitivityDetector=n={}))},28040:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.arrayEquals=t.addIfNotNull=t.getMapValues=t.addIfUnique=t.createMapFromItems=t.removeArrayElements=t.getOrAdd=t.getNestedProperty=t.flatten=t.binarySearchKey=t.binarySearch=t.every=t.some=t.map=t.stableSort=t.cloneAndSort=t.insertAt=t.addRange=t.find=t.appendArray=t.append=t.contains=t.emptyArray=void 0;const a=n(86016);function r(e,t,n=a.equateValues){if(e)for(const a of e)if(n(a,t))return!0;return!1}function s(e,t){return t<0?e.length+t:t}function i(e,t,n,a){if(void 0===t||0===t.length)return e;if(void 0===e)return t.slice(n,a);n=void 0===n?0:s(t,n),a=void 0===a?t.length:s(t,a);for(let r=n;r<a&&r<t.length;r++)void 0!==t[r]&&e.push(t[r]);return e}function o(e,t){return t}function l(e,t){return!!e&&(t?e.some(t):e.length>0)}function p(e,t,n,a,r){if(!l(e))return-1;let s=r||0,i=e.length-1;for(;s<=i;){const r=s+(i-s>>1);switch(a(n(e[r]),t)){case-1:s=r+1;break;case 0:return r;case 1:i=r-1}}return~s}t.emptyArray=[],t.contains=r,t.append=function(e,t){return void 0===t?e:void 0===e?[t]:(e.push(t),e)},t.appendArray=function(e,t){if(t.length<256)e.push(...t);else for(const n of t)e.push(n)},t.find=function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(t(a,n))return a}},t.addRange=i,t.insertAt=function(e,t,n){if(0===t)e.unshift(n);else if(t===e.length)e.push(n);else{for(let n=e.length;n>t;n--)e[n]=e[n-1];e[t]=n}return e},t.cloneAndSort=function(e,t){return 0===e.length?e:e.slice().sort(t)},t.stableSort=function(e,t){const n=function(e){return e.map(o)}(e);return function(e,t,n){t.sort(((t,r)=>n(e[t],e[r])||(0,a.compareValues)(t,r)))}(e,n,t),n.map((t=>e[t]))},t.map=function(e,t){if(e)return e.map(t)},t.some=l,t.every=function(e,t){return!e||e.every(t)},t.binarySearch=function(e,t,n,a,r){return p(e,n(t),n,a,r)},t.binarySearchKey=p,t.flatten=function(e){const t=[];for(const n of e)n&&((0,a.isArray)(n)?i(t,n):t.push(n));return t},t.getNestedProperty=function(e,t){return t.split(".").reduce(((e,t)=>e&&e[t]),e)},t.getOrAdd=function(e,t,n){const a=e.get(t);if(void 0!==a)return a;const r=n();return e.set(t,r),r},t.removeArrayElements=function(e,t){for(let n=0;n<e.length;n++)t(e[n])&&(e.splice(n,1),n--);return e},t.createMapFromItems=function(e,t){return e.map((e=>t(e))).reduce(((t,n,a)=>(t.set(n,(t.get(n)||[]).concat(e[a])),t)),new Map)},t.addIfUnique=function(e,t,n=a.equateValues){return r(e,t,n)||e.push(t),e},t.getMapValues=function(e,t){const n=[];return e.forEach(((e,a)=>{t(a,e)&&n.push(e)})),n},t.addIfNotNull=function(e,t){return void 0===t||e.push(t),e},t.arrayEquals=function(e,t,n){return e.length===t.length&&e.every(((e,a)=>n(e,t[a])))}},52996:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommandLineOptions=t.getDiagnosticSeverityOverrides=void 0,t.getDiagnosticSeverityOverrides=function(){return["error","warning","information","none"]};t.CommandLineOptions=class{constructor(e,t){this.includeFileSpecs=[],this.excludeFileSpecs=[],this.ignoreFileSpecs=[],this.logTypeEvaluationTime=!1,this.typeEvaluationTimeThreshold=50,this.enableAmbientAnalysis=!0,this.executionRoot=e,this.fromVsCodeExtension=t}}},88792:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createCommand=void 0;const a=n(6412),r=n(55084);t.createCommand=function(e,t,...n){const s=n.map((e=>r.Uri.is(e)?e.toString():e));return a.Command.create(e,t,...s)}},55484:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.parseDiagLevel=t.ConfigOptions=t.matchFileSpecs=t.getStrictDiagnosticRuleSet=t.getStandardDiagnosticRuleSet=t.getBasicDiagnosticRuleSet=t.getOffDiagnosticRuleSet=t.getStrictModeNotOverriddenRules=t.getDiagLevelDiagnosticRules=t.getBooleanDiagnosticRules=t.cloneDiagnosticRuleSet=t.SignatureDisplayType=t.ExecutionEnvironment=t.PythonPlatform=void 0;const i=n(67072),o=n(58700),l=s(n(93924)),p=n(28040),c=n(57508),d=n(97652),u=n(61328),m=n(37636),y=n(55084),g=n(80636);var h,f;!function(e){e.Darwin="Darwin",e.Windows="Windows",e.Linux="Linux"}(h||(t.PythonPlatform=h={}));class T{constructor(e,t,n,a,r){this.extraPaths=[],this.name=e,this.root=t,this.pythonVersion=null!=n?n:u.latestStablePythonVersion,this.pythonPlatform=a,this.extraPaths=Array.from(null!=r?r:[])}}function v(e=!1){const t=[d.DiagnosticRule.strictListInference,d.DiagnosticRule.strictSetInference,d.DiagnosticRule.strictDictionaryInference,d.DiagnosticRule.analyzeUnannotatedFunctions,d.DiagnosticRule.strictParameterNoneValue,d.DiagnosticRule.enableExperimentalFeatures,d.DiagnosticRule.deprecateTypingAliases,d.DiagnosticRule.disableBytesTypePromotions];return e&&t.push(d.DiagnosticRule.enableTypeIgnoreComments),t}function b(){return[d.DiagnosticRule.reportGeneralTypeIssues,d.DiagnosticRule.reportPropertyTypeMismatch,d.DiagnosticRule.reportFunctionMemberAccess,d.DiagnosticRule.reportMissingImports,d.DiagnosticRule.reportMissingModuleSource,d.DiagnosticRule.reportInvalidTypeForm,d.DiagnosticRule.reportMissingTypeStubs,d.DiagnosticRule.reportImportCycles,d.DiagnosticRule.reportUnusedImport,d.DiagnosticRule.reportUnusedClass,d.DiagnosticRule.reportUnusedFunction,d.DiagnosticRule.reportUnusedVariable,d.DiagnosticRule.reportDuplicateImport,d.DiagnosticRule.reportWildcardImportFromLibrary,d.DiagnosticRule.reportAbstractUsage,d.DiagnosticRule.reportArgumentType,d.DiagnosticRule.reportAssertTypeFailure,d.DiagnosticRule.reportAssignmentType,d.DiagnosticRule.reportAttributeAccessIssue,d.DiagnosticRule.reportCallIssue,d.DiagnosticRule.reportInconsistentOverload,d.DiagnosticRule.reportIndexIssue,d.DiagnosticRule.reportInvalidTypeArguments,d.DiagnosticRule.reportNoOverloadImplementation,d.DiagnosticRule.reportOperatorIssue,d.DiagnosticRule.reportOptionalSubscript,d.DiagnosticRule.reportOptionalMemberAccess,d.DiagnosticRule.reportOptionalCall,d.DiagnosticRule.reportOptionalIterable,d.DiagnosticRule.reportOptionalContextManager,d.DiagnosticRule.reportOptionalOperand,d.DiagnosticRule.reportRedeclaration,d.DiagnosticRule.reportReturnType,d.DiagnosticRule.reportTypedDictNotRequiredAccess,d.DiagnosticRule.reportUntypedFunctionDecorator,d.DiagnosticRule.reportUntypedClassDecorator,d.DiagnosticRule.reportUntypedBaseClass,d.DiagnosticRule.reportUntypedNamedTuple,d.DiagnosticRule.reportPrivateUsage,d.DiagnosticRule.reportTypeCommentUsage,d.DiagnosticRule.reportPrivateImportUsage,d.DiagnosticRule.reportConstantRedefinition,d.DiagnosticRule.reportDeprecated,d.DiagnosticRule.reportIncompatibleMethodOverride,d.DiagnosticRule.reportIncompatibleVariableOverride,d.DiagnosticRule.reportInconsistentConstructor,d.DiagnosticRule.reportOverlappingOverload,d.DiagnosticRule.reportPossiblyUnboundVariable,d.DiagnosticRule.reportMissingSuperCall,d.DiagnosticRule.reportUninitializedInstanceVariable,d.DiagnosticRule.reportInvalidStringEscapeSequence,d.DiagnosticRule.reportUnknownParameterType,d.DiagnosticRule.reportUnknownArgumentType,d.DiagnosticRule.reportUnknownLambdaType,d.DiagnosticRule.reportUnknownVariableType,d.DiagnosticRule.reportUnknownMemberType,d.DiagnosticRule.reportMissingParameterType,d.DiagnosticRule.reportMissingTypeArgument,d.DiagnosticRule.reportInvalidTypeVarUse,d.DiagnosticRule.reportCallInDefaultInitializer,d.DiagnosticRule.reportUnnecessaryIsInstance,d.DiagnosticRule.reportUnnecessaryCast,d.DiagnosticRule.reportUnnecessaryComparison,d.DiagnosticRule.reportUnnecessaryContains,d.DiagnosticRule.reportAssertAlwaysTrue,d.DiagnosticRule.reportSelfClsParameterName,d.DiagnosticRule.reportImplicitStringConcatenation,d.DiagnosticRule.reportUndefinedVariable,d.DiagnosticRule.reportUnhashable,d.DiagnosticRule.reportUnboundVariable,d.DiagnosticRule.reportInvalidStubStatement,d.DiagnosticRule.reportIncompleteStub,d.DiagnosticRule.reportUnsupportedDunderAll,d.DiagnosticRule.reportUnusedCallResult,d.DiagnosticRule.reportUnusedCoroutine,d.DiagnosticRule.reportUnusedExcept,d.DiagnosticRule.reportUnusedExpression,d.DiagnosticRule.reportUnnecessaryTypeIgnoreComment,d.DiagnosticRule.reportMatchNotExhaustive,d.DiagnosticRule.reportShadowedImports,d.DiagnosticRule.reportImplicitOverride]}function _(){return{printUnknownAsAny:!0,omitTypeArgsIfUnknown:!0,omitUnannotatedParamType:!0,omitConditionalConstraint:!0,pep604Printing:!0,strictListInference:!1,strictSetInference:!1,strictDictionaryInference:!1,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!1,reportGeneralTypeIssues:"none",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"none",reportMissingImports:"warning",reportMissingModuleSource:"warning",reportInvalidTypeForm:"warning",reportMissingTypeStubs:"none",reportImportCycles:"none",reportUnusedImport:"none",reportUnusedClass:"none",reportUnusedFunction:"none",reportUnusedVariable:"none",reportDuplicateImport:"none",reportWildcardImportFromLibrary:"none",reportAbstractUsage:"none",reportArgumentType:"none",reportAssertTypeFailure:"none",reportAssignmentType:"none",reportAttributeAccessIssue:"none",reportCallIssue:"none",reportInconsistentOverload:"none",reportIndexIssue:"none",reportInvalidTypeArguments:"none",reportNoOverloadImplementation:"none",reportOperatorIssue:"none",reportOptionalSubscript:"none",reportOptionalMemberAccess:"none",reportOptionalCall:"none",reportOptionalIterable:"none",reportOptionalContextManager:"none",reportOptionalOperand:"none",reportRedeclaration:"none",reportReturnType:"none",reportTypedDictNotRequiredAccess:"none",reportUntypedFunctionDecorator:"none",reportUntypedClassDecorator:"none",reportUntypedBaseClass:"none",reportUntypedNamedTuple:"none",reportPrivateUsage:"none",reportTypeCommentUsage:"none",reportPrivateImportUsage:"none",reportConstantRedefinition:"none",reportDeprecated:"none",reportIncompatibleMethodOverride:"none",reportIncompatibleVariableOverride:"none",reportInconsistentConstructor:"none",reportOverlappingOverload:"none",reportPossiblyUnboundVariable:"none",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"none",reportUnknownParameterType:"none",reportUnknownArgumentType:"none",reportUnknownLambdaType:"none",reportUnknownVariableType:"none",reportUnknownMemberType:"none",reportMissingParameterType:"none",reportMissingTypeArgument:"none",reportInvalidTypeVarUse:"none",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"none",reportUnnecessaryCast:"none",reportUnnecessaryComparison:"none",reportUnnecessaryContains:"none",reportAssertAlwaysTrue:"none",reportSelfClsParameterName:"none",reportImplicitStringConcatenation:"none",reportUnboundVariable:"none",reportUnhashable:"none",reportUndefinedVariable:"warning",reportInvalidStubStatement:"none",reportIncompleteStub:"none",reportUnsupportedDunderAll:"none",reportUnusedCallResult:"none",reportUnusedCoroutine:"none",reportUnusedExcept:"none",reportUnusedExpression:"none",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"none",reportShadowedImports:"none",reportImplicitOverride:"none"}}function C(){return{printUnknownAsAny:!1,omitTypeArgsIfUnknown:!1,omitUnannotatedParamType:!0,omitConditionalConstraint:!1,pep604Printing:!0,strictListInference:!1,strictSetInference:!1,strictDictionaryInference:!1,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!1,reportGeneralTypeIssues:"error",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"none",reportMissingImports:"error",reportMissingModuleSource:"warning",reportInvalidTypeForm:"error",reportMissingTypeStubs:"none",reportImportCycles:"none",reportUnusedImport:"none",reportUnusedClass:"none",reportUnusedFunction:"none",reportUnusedVariable:"none",reportDuplicateImport:"none",reportWildcardImportFromLibrary:"warning",reportAbstractUsage:"error",reportArgumentType:"error",reportAssertTypeFailure:"error",reportAssignmentType:"error",reportAttributeAccessIssue:"error",reportCallIssue:"error",reportInconsistentOverload:"error",reportIndexIssue:"error",reportInvalidTypeArguments:"error",reportNoOverloadImplementation:"error",reportOperatorIssue:"error",reportOptionalSubscript:"error",reportOptionalMemberAccess:"error",reportOptionalCall:"error",reportOptionalIterable:"error",reportOptionalContextManager:"error",reportOptionalOperand:"error",reportRedeclaration:"error",reportReturnType:"error",reportTypedDictNotRequiredAccess:"error",reportUntypedFunctionDecorator:"none",reportUntypedClassDecorator:"none",reportUntypedBaseClass:"none",reportUntypedNamedTuple:"none",reportPrivateUsage:"none",reportTypeCommentUsage:"none",reportPrivateImportUsage:"error",reportConstantRedefinition:"none",reportDeprecated:"none",reportIncompatibleMethodOverride:"none",reportIncompatibleVariableOverride:"none",reportInconsistentConstructor:"none",reportOverlappingOverload:"none",reportPossiblyUnboundVariable:"none",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"warning",reportUnknownParameterType:"none",reportUnknownArgumentType:"none",reportUnknownLambdaType:"none",reportUnknownVariableType:"none",reportUnknownMemberType:"none",reportMissingParameterType:"none",reportMissingTypeArgument:"none",reportInvalidTypeVarUse:"warning",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"none",reportUnnecessaryCast:"none",reportUnnecessaryComparison:"none",reportUnnecessaryContains:"none",reportAssertAlwaysTrue:"warning",reportSelfClsParameterName:"warning",reportImplicitStringConcatenation:"none",reportUnboundVariable:"error",reportUnhashable:"error",reportUndefinedVariable:"error",reportInvalidStubStatement:"none",reportIncompleteStub:"none",reportUnsupportedDunderAll:"warning",reportUnusedCallResult:"none",reportUnusedCoroutine:"error",reportUnusedExcept:"error",reportUnusedExpression:"warning",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"none",reportShadowedImports:"none",reportImplicitOverride:"none"}}function I(){return{printUnknownAsAny:!1,omitTypeArgsIfUnknown:!1,omitUnannotatedParamType:!0,omitConditionalConstraint:!1,pep604Printing:!0,strictListInference:!1,strictSetInference:!1,strictDictionaryInference:!1,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!1,reportGeneralTypeIssues:"error",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"error",reportMissingImports:"error",reportMissingModuleSource:"warning",reportInvalidTypeForm:"error",reportMissingTypeStubs:"none",reportImportCycles:"none",reportUnusedImport:"none",reportUnusedClass:"none",reportUnusedFunction:"none",reportUnusedVariable:"none",reportDuplicateImport:"none",reportWildcardImportFromLibrary:"warning",reportAbstractUsage:"error",reportArgumentType:"error",reportAssertTypeFailure:"error",reportAssignmentType:"error",reportAttributeAccessIssue:"error",reportCallIssue:"error",reportInconsistentOverload:"error",reportIndexIssue:"error",reportInvalidTypeArguments:"error",reportNoOverloadImplementation:"error",reportOperatorIssue:"error",reportOptionalSubscript:"error",reportOptionalMemberAccess:"error",reportOptionalCall:"error",reportOptionalIterable:"error",reportOptionalContextManager:"error",reportOptionalOperand:"error",reportRedeclaration:"error",reportReturnType:"error",reportTypedDictNotRequiredAccess:"error",reportUntypedFunctionDecorator:"none",reportUntypedClassDecorator:"none",reportUntypedBaseClass:"none",reportUntypedNamedTuple:"none",reportPrivateUsage:"none",reportTypeCommentUsage:"none",reportPrivateImportUsage:"error",reportConstantRedefinition:"none",reportDeprecated:"none",reportIncompatibleMethodOverride:"error",reportIncompatibleVariableOverride:"error",reportInconsistentConstructor:"none",reportOverlappingOverload:"error",reportPossiblyUnboundVariable:"error",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"warning",reportUnknownParameterType:"none",reportUnknownArgumentType:"none",reportUnknownLambdaType:"none",reportUnknownVariableType:"none",reportUnknownMemberType:"none",reportMissingParameterType:"none",reportMissingTypeArgument:"none",reportInvalidTypeVarUse:"warning",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"none",reportUnnecessaryCast:"none",reportUnnecessaryComparison:"none",reportUnnecessaryContains:"none",reportAssertAlwaysTrue:"warning",reportSelfClsParameterName:"warning",reportImplicitStringConcatenation:"none",reportUnboundVariable:"error",reportUnhashable:"error",reportUndefinedVariable:"error",reportInvalidStubStatement:"none",reportIncompleteStub:"none",reportUnsupportedDunderAll:"warning",reportUnusedCallResult:"none",reportUnusedCoroutine:"error",reportUnusedExcept:"error",reportUnusedExpression:"warning",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"none",reportShadowedImports:"none",reportImplicitOverride:"none"}}function k(){return{printUnknownAsAny:!1,omitTypeArgsIfUnknown:!1,omitUnannotatedParamType:!1,omitConditionalConstraint:!1,pep604Printing:!0,strictListInference:!0,strictSetInference:!0,strictDictionaryInference:!0,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!0,reportGeneralTypeIssues:"error",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"error",reportMissingImports:"error",reportMissingModuleSource:"warning",reportInvalidTypeForm:"error",reportMissingTypeStubs:"error",reportImportCycles:"none",reportUnusedImport:"error",reportUnusedClass:"error",reportUnusedFunction:"error",reportUnusedVariable:"error",reportDuplicateImport:"error",reportWildcardImportFromLibrary:"error",reportAbstractUsage:"error",reportArgumentType:"error",reportAssertTypeFailure:"error",reportAssignmentType:"error",reportAttributeAccessIssue:"error",reportCallIssue:"error",reportInconsistentOverload:"error",reportIndexIssue:"error",reportInvalidTypeArguments:"error",reportNoOverloadImplementation:"error",reportOperatorIssue:"error",reportOptionalSubscript:"error",reportOptionalMemberAccess:"error",reportOptionalCall:"error",reportOptionalIterable:"error",reportOptionalContextManager:"error",reportOptionalOperand:"error",reportRedeclaration:"error",reportReturnType:"error",reportTypedDictNotRequiredAccess:"error",reportUntypedFunctionDecorator:"error",reportUntypedClassDecorator:"error",reportUntypedBaseClass:"error",reportUntypedNamedTuple:"error",reportPrivateUsage:"error",reportTypeCommentUsage:"error",reportPrivateImportUsage:"error",reportConstantRedefinition:"error",reportDeprecated:"error",reportIncompatibleMethodOverride:"error",reportIncompatibleVariableOverride:"error",reportInconsistentConstructor:"error",reportOverlappingOverload:"error",reportPossiblyUnboundVariable:"error",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"error",reportUnknownParameterType:"error",reportUnknownArgumentType:"error",reportUnknownLambdaType:"error",reportUnknownVariableType:"error",reportUnknownMemberType:"error",reportMissingParameterType:"error",reportMissingTypeArgument:"error",reportInvalidTypeVarUse:"error",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"error",reportUnnecessaryCast:"error",reportUnnecessaryComparison:"error",reportUnnecessaryContains:"error",reportAssertAlwaysTrue:"error",reportSelfClsParameterName:"error",reportImplicitStringConcatenation:"none",reportUnboundVariable:"error",reportUnhashable:"error",reportUndefinedVariable:"error",reportInvalidStubStatement:"error",reportIncompleteStub:"error",reportUnsupportedDunderAll:"error",reportUnusedCallResult:"none",reportUnusedCoroutine:"error",reportUnusedExcept:"error",reportUnusedExpression:"error",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"error",reportShadowedImports:"none",reportImplicitOverride:"none"}}t.ExecutionEnvironment=T,function(e){e.compact="compact",e.formatted="formatted"}(f||(t.SignatureDisplayType=f={})),t.cloneDiagnosticRuleSet=function(e){return Object.assign({},e)},t.getBooleanDiagnosticRules=v,t.getDiagLevelDiagnosticRules=b,t.getStrictModeNotOverriddenRules=function(){return[d.DiagnosticRule.reportMissingModuleSource]},t.getOffDiagnosticRuleSet=_,t.getBasicDiagnosticRuleSet=C,t.getStandardDiagnosticRuleSet=I,t.getStrictDiagnosticRuleSet=k,t.matchFileSpecs=function(e,t,n=!0){for(const a of e.include)if(g.FileSpec.matchIncludeFileSpec(a.regExp,e.exclude,t,n))return!0;return!1};class w{constructor(e,t){this.include=[],this.exclude=[],this.ignore=[],this.strict=[],this.defineConstant=new Map,this.autoImportCompletions=!0,this.indexing=!1,this.logTypeEvaluationTime=!1,this.typeEvaluationTimeThreshold=50,this.initializedFromJson=!1,this.disableTaggedHints=!1,this.executionEnvironments=[],this.projectRoot=e,this.typeCheckingMode=t,this.diagnosticRuleSet=w.getDiagnosticRuleSet(t),this.functionSignatureDisplay=f.formatted}static getDiagnosticRuleSet(e){return"strict"===e?{printUnknownAsAny:!1,omitTypeArgsIfUnknown:!1,omitUnannotatedParamType:!1,omitConditionalConstraint:!1,pep604Printing:!0,strictListInference:!0,strictSetInference:!0,strictDictionaryInference:!0,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!0,reportGeneralTypeIssues:"error",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"error",reportMissingImports:"error",reportMissingModuleSource:"warning",reportInvalidTypeForm:"error",reportMissingTypeStubs:"error",reportImportCycles:"none",reportUnusedImport:"error",reportUnusedClass:"error",reportUnusedFunction:"error",reportUnusedVariable:"error",reportDuplicateImport:"error",reportWildcardImportFromLibrary:"error",reportAbstractUsage:"error",reportArgumentType:"error",reportAssertTypeFailure:"error",reportAssignmentType:"error",reportAttributeAccessIssue:"error",reportCallIssue:"error",reportInconsistentOverload:"error",reportIndexIssue:"error",reportInvalidTypeArguments:"error",reportNoOverloadImplementation:"error",reportOperatorIssue:"error",reportOptionalSubscript:"error",reportOptionalMemberAccess:"error",reportOptionalCall:"error",reportOptionalIterable:"error",reportOptionalContextManager:"error",reportOptionalOperand:"error",reportRedeclaration:"error",reportReturnType:"error",reportTypedDictNotRequiredAccess:"error",reportUntypedFunctionDecorator:"error",reportUntypedClassDecorator:"error",reportUntypedBaseClass:"error",reportUntypedNamedTuple:"error",reportPrivateUsage:"error",reportTypeCommentUsage:"error",reportPrivateImportUsage:"error",reportConstantRedefinition:"error",reportDeprecated:"error",reportIncompatibleMethodOverride:"error",reportIncompatibleVariableOverride:"error",reportInconsistentConstructor:"error",reportOverlappingOverload:"error",reportPossiblyUnboundVariable:"error",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"error",reportUnknownParameterType:"error",reportUnknownArgumentType:"error",reportUnknownLambdaType:"error",reportUnknownVariableType:"error",reportUnknownMemberType:"error",reportMissingParameterType:"error",reportMissingTypeArgument:"error",reportInvalidTypeVarUse:"error",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"error",reportUnnecessaryCast:"error",reportUnnecessaryComparison:"error",reportUnnecessaryContains:"error",reportAssertAlwaysTrue:"error",reportSelfClsParameterName:"error",reportImplicitStringConcatenation:"none",reportUnboundVariable:"error",reportUnhashable:"error",reportUndefinedVariable:"error",reportInvalidStubStatement:"error",reportIncompleteStub:"error",reportUnsupportedDunderAll:"error",reportUnusedCallResult:"none",reportUnusedCoroutine:"error",reportUnusedExcept:"error",reportUnusedExpression:"error",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"error",reportShadowedImports:"none",reportImplicitOverride:"none"}:"basic"===e?{printUnknownAsAny:!1,omitTypeArgsIfUnknown:!1,omitUnannotatedParamType:!0,omitConditionalConstraint:!1,pep604Printing:!0,strictListInference:!1,strictSetInference:!1,strictDictionaryInference:!1,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!1,reportGeneralTypeIssues:"error",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"none",reportMissingImports:"error",reportMissingModuleSource:"warning",reportInvalidTypeForm:"error",reportMissingTypeStubs:"none",reportImportCycles:"none",reportUnusedImport:"none",reportUnusedClass:"none",reportUnusedFunction:"none",reportUnusedVariable:"none",reportDuplicateImport:"none",reportWildcardImportFromLibrary:"warning",reportAbstractUsage:"error",reportArgumentType:"error",reportAssertTypeFailure:"error",reportAssignmentType:"error",reportAttributeAccessIssue:"error",reportCallIssue:"error",reportInconsistentOverload:"error",reportIndexIssue:"error",reportInvalidTypeArguments:"error",reportNoOverloadImplementation:"error",reportOperatorIssue:"error",reportOptionalSubscript:"error",reportOptionalMemberAccess:"error",reportOptionalCall:"error",reportOptionalIterable:"error",reportOptionalContextManager:"error",reportOptionalOperand:"error",reportRedeclaration:"error",reportReturnType:"error",reportTypedDictNotRequiredAccess:"error",reportUntypedFunctionDecorator:"none",reportUntypedClassDecorator:"none",reportUntypedBaseClass:"none",reportUntypedNamedTuple:"none",reportPrivateUsage:"none",reportTypeCommentUsage:"none",reportPrivateImportUsage:"error",reportConstantRedefinition:"none",reportDeprecated:"none",reportIncompatibleMethodOverride:"none",reportIncompatibleVariableOverride:"none",reportInconsistentConstructor:"none",reportOverlappingOverload:"none",reportPossiblyUnboundVariable:"none",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"warning",reportUnknownParameterType:"none",reportUnknownArgumentType:"none",reportUnknownLambdaType:"none",reportUnknownVariableType:"none",reportUnknownMemberType:"none",reportMissingParameterType:"none",reportMissingTypeArgument:"none",reportInvalidTypeVarUse:"warning",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"none",reportUnnecessaryCast:"none",reportUnnecessaryComparison:"none",reportUnnecessaryContains:"none",reportAssertAlwaysTrue:"warning",reportSelfClsParameterName:"warning",reportImplicitStringConcatenation:"none",reportUnboundVariable:"error",reportUnhashable:"error",reportUndefinedVariable:"error",reportInvalidStubStatement:"none",reportIncompleteStub:"none",reportUnsupportedDunderAll:"warning",reportUnusedCallResult:"none",reportUnusedCoroutine:"error",reportUnusedExcept:"error",reportUnusedExpression:"warning",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"none",reportShadowedImports:"none",reportImplicitOverride:"none"}:"off"===e?{printUnknownAsAny:!0,omitTypeArgsIfUnknown:!0,omitUnannotatedParamType:!0,omitConditionalConstraint:!0,pep604Printing:!0,strictListInference:!1,strictSetInference:!1,strictDictionaryInference:!1,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!1,reportGeneralTypeIssues:"none",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"none",reportMissingImports:"warning",reportMissingModuleSource:"warning",reportInvalidTypeForm:"warning",reportMissingTypeStubs:"none",reportImportCycles:"none",reportUnusedImport:"none",reportUnusedClass:"none",reportUnusedFunction:"none",reportUnusedVariable:"none",reportDuplicateImport:"none",reportWildcardImportFromLibrary:"none",reportAbstractUsage:"none",reportArgumentType:"none",reportAssertTypeFailure:"none",reportAssignmentType:"none",reportAttributeAccessIssue:"none",reportCallIssue:"none",reportInconsistentOverload:"none",reportIndexIssue:"none",reportInvalidTypeArguments:"none",reportNoOverloadImplementation:"none",reportOperatorIssue:"none",reportOptionalSubscript:"none",reportOptionalMemberAccess:"none",reportOptionalCall:"none",reportOptionalIterable:"none",reportOptionalContextManager:"none",reportOptionalOperand:"none",reportRedeclaration:"none",reportReturnType:"none",reportTypedDictNotRequiredAccess:"none",reportUntypedFunctionDecorator:"none",reportUntypedClassDecorator:"none",reportUntypedBaseClass:"none",reportUntypedNamedTuple:"none",reportPrivateUsage:"none",reportTypeCommentUsage:"none",reportPrivateImportUsage:"none",reportConstantRedefinition:"none",reportDeprecated:"none",reportIncompatibleMethodOverride:"none",reportIncompatibleVariableOverride:"none",reportInconsistentConstructor:"none",reportOverlappingOverload:"none",reportPossiblyUnboundVariable:"none",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"none",reportUnknownParameterType:"none",reportUnknownArgumentType:"none",reportUnknownLambdaType:"none",reportUnknownVariableType:"none",reportUnknownMemberType:"none",reportMissingParameterType:"none",reportMissingTypeArgument:"none",reportInvalidTypeVarUse:"none",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"none",reportUnnecessaryCast:"none",reportUnnecessaryComparison:"none",reportUnnecessaryContains:"none",reportAssertAlwaysTrue:"none",reportSelfClsParameterName:"none",reportImplicitStringConcatenation:"none",reportUnboundVariable:"none",reportUnhashable:"none",reportUndefinedVariable:"warning",reportInvalidStubStatement:"none",reportIncompleteStub:"none",reportUnsupportedDunderAll:"none",reportUnusedCallResult:"none",reportUnusedCoroutine:"none",reportUnusedExcept:"none",reportUnusedExpression:"none",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"none",reportShadowedImports:"none",reportImplicitOverride:"none"}:{printUnknownAsAny:!1,omitTypeArgsIfUnknown:!1,omitUnannotatedParamType:!0,omitConditionalConstraint:!1,pep604Printing:!0,strictListInference:!1,strictSetInference:!1,strictDictionaryInference:!1,analyzeUnannotatedFunctions:!0,strictParameterNoneValue:!0,enableExperimentalFeatures:!1,enableTypeIgnoreComments:!0,deprecateTypingAliases:!1,disableBytesTypePromotions:!1,reportGeneralTypeIssues:"error",reportPropertyTypeMismatch:"none",reportFunctionMemberAccess:"error",reportMissingImports:"error",reportMissingModuleSource:"warning",reportInvalidTypeForm:"error",reportMissingTypeStubs:"none",reportImportCycles:"none",reportUnusedImport:"none",reportUnusedClass:"none",reportUnusedFunction:"none",reportUnusedVariable:"none",reportDuplicateImport:"none",reportWildcardImportFromLibrary:"warning",reportAbstractUsage:"error",reportArgumentType:"error",reportAssertTypeFailure:"error",reportAssignmentType:"error",reportAttributeAccessIssue:"error",reportCallIssue:"error",reportInconsistentOverload:"error",reportIndexIssue:"error",reportInvalidTypeArguments:"error",reportNoOverloadImplementation:"error",reportOperatorIssue:"error",reportOptionalSubscript:"error",reportOptionalMemberAccess:"error",reportOptionalCall:"error",reportOptionalIterable:"error",reportOptionalContextManager:"error",reportOptionalOperand:"error",reportRedeclaration:"error",reportReturnType:"error",reportTypedDictNotRequiredAccess:"error",reportUntypedFunctionDecorator:"none",reportUntypedClassDecorator:"none",reportUntypedBaseClass:"none",reportUntypedNamedTuple:"none",reportPrivateUsage:"none",reportTypeCommentUsage:"none",reportPrivateImportUsage:"error",reportConstantRedefinition:"none",reportDeprecated:"none",reportIncompatibleMethodOverride:"error",reportIncompatibleVariableOverride:"error",reportInconsistentConstructor:"none",reportOverlappingOverload:"error",reportPossiblyUnboundVariable:"error",reportMissingSuperCall:"none",reportUninitializedInstanceVariable:"none",reportInvalidStringEscapeSequence:"warning",reportUnknownParameterType:"none",reportUnknownArgumentType:"none",reportUnknownLambdaType:"none",reportUnknownVariableType:"none",reportUnknownMemberType:"none",reportMissingParameterType:"none",reportMissingTypeArgument:"none",reportInvalidTypeVarUse:"warning",reportCallInDefaultInitializer:"none",reportUnnecessaryIsInstance:"none",reportUnnecessaryCast:"none",reportUnnecessaryComparison:"none",reportUnnecessaryContains:"none",reportAssertAlwaysTrue:"warning",reportSelfClsParameterName:"warning",reportImplicitStringConcatenation:"none",reportUnboundVariable:"error",reportUnhashable:"error",reportUndefinedVariable:"error",reportInvalidStubStatement:"none",reportIncompleteStub:"none",reportUnsupportedDunderAll:"warning",reportUnusedCallResult:"none",reportUnusedCoroutine:"error",reportUnusedExcept:"error",reportUnusedExpression:"warning",reportUnnecessaryTypeIgnoreComment:"none",reportMatchNotExhaustive:"none",reportShadowedImports:"none",reportImplicitOverride:"none"}}getDefaultExecEnvironment(){return new T(this._getEnvironmentName(),this.projectRoot,this.defaultPythonVersion,this.defaultPythonPlatform,this.defaultExtraPaths)}findExecEnvironment(e){var t;return null!==(t=this.executionEnvironments.find((t=>{const n=y.Uri.is(t.root)?t.root:this.projectRoot.resolvePaths(t.root||"");return e.startsWith(n)})))&&void 0!==t?t:this.getDefaultExecEnvironment()}getExecutionEnvironments(){return this.executionEnvironments.length>0?this.executionEnvironments:[this.getDefaultExecEnvironment()]}initializeFromJson(e,t,n,a,r){var s;this.initializedFromJson=!0;const o=null!==(s=n.tryGet(m.ServiceKeys.console))&&void 0!==s?s:new c.NullConsole;if(void 0!==e.include)if(Array.isArray(e.include)){this.include=[];e.include.forEach(((e,t)=>{"string"!=typeof e?o.error(`Index ${t} of "include" array should be a string.`):(0,i.isAbsolute)(e)?o.error(`Ignoring path "${e}" in "include" array because it is not relative.`):this.include.push((0,g.getFileSpec)(this.projectRoot,e))}))}else o.error('Config "include" entry must must contain an array.');if(void 0!==e.exclude)if(Array.isArray(e.exclude)){this.exclude=[];e.exclude.forEach(((e,t)=>{"string"!=typeof e?o.error(`Index ${t} of "exclude" array should be a string.`):(0,i.isAbsolute)(e)?o.error(`Ignoring path "${e}" in "exclude" array because it is not relative.`):this.exclude.push((0,g.getFileSpec)(this.projectRoot,e))}))}else o.error('Config "exclude" entry must contain an array.');if(void 0!==e.ignore)if(Array.isArray(e.ignore)){this.ignore=[];e.ignore.forEach(((e,t)=>{"string"!=typeof e?o.error(`Index ${t} of "ignore" array should be a string.`):(0,i.isAbsolute)(e)?o.error(`Ignoring path "${e}" in "ignore" array because it is not relative.`):this.ignore.push((0,g.getFileSpec)(this.projectRoot,e))}))}else o.error('Config "ignore" entry must contain an array.');if(void 0!==e.strict)if(Array.isArray(e.strict)){this.strict=[];e.strict.forEach(((e,t)=>{"string"!=typeof e?o.error(`Index ${t} of "strict" array should be a string.`):(0,i.isAbsolute)(e)?o.error(`Ignoring path "${e}" in "strict" array because it is not relative.`):this.strict.push((0,g.getFileSpec)(this.projectRoot,e))}))}else o.error('Config "strict" entry must contain an array.');let l;void 0!==e.typeCheckingMode&&("off"===e.typeCheckingMode||"basic"===e.typeCheckingMode||"standard"===e.typeCheckingMode||"strict"===e.typeCheckingMode?l=e.typeCheckingMode:o.error('Config "typeCheckingMode" entry must contain "off", "basic", "standard", or "strict".')),void 0!==e.useLibraryCodeForTypes&&("boolean"==typeof e.useLibraryCodeForTypes?this.useLibraryCodeForTypes=e.useLibraryCodeForTypes:o.error('Config "useLibraryCodeForTypes" entry must be true or false.')),this.typeCheckingMode=l||t;const p=w.getDiagnosticRuleSet(this.typeCheckingMode);if(this.diagnosticRuleSet={...p},this.applyDiagnosticOverrides(null==r?void 0:r.diagnosticSeverityOverrides),v(!0).forEach((t=>{this.diagnosticRuleSet[t]=this._convertBoolean(e[t],t,this.diagnosticRuleSet[t])})),b().forEach((t=>{this.diagnosticRuleSet[t]=this._convertDiagnosticLevel(e[t],t,this.diagnosticRuleSet[t])})),this.venvPath=void 0,void 0!==e.venvPath&&("string"!=typeof e.venvPath?o.error('Config "venvPath" field must contain a string.'):this.venvPath=this.projectRoot.resolvePaths(e.venvPath)),this.venv=void 0,void 0!==e.venv&&("string"!=typeof e.venv?o.error('Config "venv" field must contain a string.'):this.venv=e.venv),void 0!==e.extraPaths)if(this.defaultExtraPaths=[],Array.isArray(e.extraPaths)){e.extraPaths.forEach(((e,t)=>{"string"!=typeof e?o.error(`Config "extraPaths" field ${t} must be a string.`):this.defaultExtraPaths.push(this.projectRoot.resolvePaths(e))}))}else o.error('Config "extraPaths" field must contain an array.');if(void 0!==e.pythonVersion)if("string"==typeof e.pythonVersion){const t=u.PythonVersion.fromString(e.pythonVersion);t?this.defaultPythonVersion=t:o.error('Config "pythonVersion" field contains unsupported version.')}else o.error('Config "pythonVersion" field must contain a string.');if((null==r?void 0:r.pythonVersion)&&(this.defaultPythonVersion=r.pythonVersion),this.ensureDefaultPythonVersion(a,o),void 0!==e.pythonPlatform&&("string"!=typeof e.pythonPlatform?o.error('Config "pythonPlatform" field must contain a string.'):this.defaultPythonPlatform=e.pythonPlatform),(null==r?void 0:r.pythonPlatform)&&(this.defaultPythonPlatform=r.pythonPlatform),this.ensureDefaultPythonPlatform(a,o),this.typeshedPath=void 0,void 0!==e.typeshedPath&&("string"!=typeof e.typeshedPath?o.error('Config "typeshedPath" field must contain a string.'):this.typeshedPath=e.typeshedPath?this.projectRoot.resolvePaths(e.typeshedPath):void 0),this.stubPath=void 0,void 0!==e.typingsPath&&("string"!=typeof e.typingsPath?o.error('Config "typingsPath" field must contain a string.'):(o.error('Config "typingsPath" is now deprecated. Please, use stubPath instead.'),this.stubPath=this.projectRoot.resolvePaths(e.typingsPath))),void 0!==e.stubPath&&("string"!=typeof e.stubPath?o.error('Config "stubPath" field must contain a string.'):this.stubPath=this.projectRoot.resolvePaths(e.stubPath)),void 0!==e.verboseOutput&&("boolean"!=typeof e.verboseOutput?o.error('Config "verboseOutput" field must be true or false.'):this.verboseOutput=e.verboseOutput),void 0!==e.defineConstant)if("object"!=typeof e.defineConstant||Array.isArray(e.defineConstant))o.error('Config "defineConstant" field must contain a map indexed by constant names.');else{Object.getOwnPropertyNames(e.defineConstant).forEach((t=>{const n=e.defineConstant[t],a=typeof n;"boolean"!==a&&"string"!==a?o.error(`Defined constant "${t}" must be associated with a boolean or string value.`):this.defineConstant.set(t,n)}))}if(void 0!==e.useLibraryCodeForTypes&&("boolean"!=typeof e.useLibraryCodeForTypes?o.error('Config "useLibraryCodeForTypes" field must be true or false.'):this.useLibraryCodeForTypes=e.useLibraryCodeForTypes),this.executionEnvironments=[],void 0!==e.executionEnvironments)if(Array.isArray(e.executionEnvironments)){e.executionEnvironments.forEach(((e,t)=>{const n=this._initExecutionEnvironmentFromJson(e,t,o,r);n&&this.executionEnvironments.push(n)}))}else o.error('Config "executionEnvironments" field must contain an array.');void 0!==e.autoImportCompletions&&("boolean"!=typeof e.autoImportCompletions?o.error('Config "autoImportCompletions" field must be true or false.'):this.autoImportCompletions=e.autoImportCompletions),void 0!==e.indexing&&("boolean"!=typeof e.indexing?o.error('Config "indexing" field must be true or false.'):this.indexing=e.indexing),void 0!==e.logTypeEvaluationTime&&("boolean"!=typeof e.logTypeEvaluationTime?o.error('Config "logTypeEvaluationTime" field must be true or false.'):this.logTypeEvaluationTime=e.logTypeEvaluationTime),void 0!==e.typeEvaluationTimeThreshold&&("number"!=typeof e.typeEvaluationTimeThreshold?o.error('Config "typeEvaluationTimeThreshold" field must be a number.'):this.typeEvaluationTimeThreshold=e.typeEvaluationTimeThreshold),void 0!==e.functionSignatureDisplay&&("string"!=typeof e.functionSignatureDisplay?o.error('Config "functionSignatureDisplay" field must be true or false.'):"compact"!==e.functionSignatureDisplay&&"formatted"!==e.functionSignatureDisplay||(this.functionSignatureDisplay=e.functionSignatureDisplay))}ensureDefaultPythonPlatform(e,t){void 0===this.defaultPythonPlatform&&(this.defaultPythonPlatform=e.getPythonPlatform(),void 0!==this.defaultPythonPlatform&&t.log(`Assuming Python platform ${this.defaultPythonPlatform}`))}ensureDefaultPythonVersion(e,t){if(void 0!==this.defaultPythonVersion)return;const n=[];this.defaultPythonVersion=e.getPythonVersion(this.pythonPath,n),void 0!==this.defaultPythonVersion&&t.info(`Assuming Python version ${this.defaultPythonVersion.toString()}`);for(const e of n)t.info(e)}ensureDefaultExtraPaths(e,t,n){const a=[];if(t){const t=this.projectRoot.resolvePaths(l.src);e.existsSync(t)&&!e.existsSync(t.resolvePaths("__init__.py"))&&a.push(e.realCasePath(t))}if(n&&n.length>0)for(const t of n){const n=this.projectRoot.resolvePaths(t);a.push(e.realCasePath(n)),(0,g.isDirectory)(e,n)&&(0,p.appendArray)(a,(0,o.getPathsFromPthFiles)(e,n))}a.length>0&&(this.defaultExtraPaths=a)}applyDiagnosticOverrides(e){if(e)for(const t of b()){const n=e[t];void 0!==n&&(this.diagnosticRuleSet[t]=n)}}_getEnvironmentName(){var e;return this.pythonEnvironmentName||(null===(e=this.pythonPath)||void 0===e?void 0:e.toString())||"python"}_convertBoolean(e,t,n){return void 0===e?n:"boolean"==typeof e?!!e:(console.log(`Config "${t}" entry must be true or false.`),n)}_convertDiagnosticLevel(e,t,n){return void 0===e?n:"boolean"==typeof e?e?"error":"none":"string"!=typeof e||"error"!==e&&"warning"!==e&&"information"!==e&&"none"!==e?(console.log(`Config "${t}" entry must be true, false, "error", "warning", "information" or "none".`),n):e}_initExecutionEnvironmentFromJson(e,t,n,a){try{const r=new T(this._getEnvironmentName(),this.projectRoot,this.defaultPythonVersion,this.defaultPythonPlatform,this.defaultExtraPaths);if(e.root&&"string"==typeof e.root?r.root=this.projectRoot.resolvePaths(e.root):n.error(`Config executionEnvironments index ${t}: missing root value.`),e.extraPaths)if(Array.isArray(e.extraPaths)){e.extraPaths.forEach(((e,a)=>{"string"!=typeof e?n.error(`Config executionEnvironments index ${t}: extraPaths field ${a} must be a string.`):r.extraPaths.push(this.projectRoot.resolvePaths(e))}))}else n.error(`Config executionEnvironments index ${t}: extraPaths field must contain an array.`);if(e.pythonVersion)if("string"==typeof e.pythonVersion){const a=u.PythonVersion.fromString(e.pythonVersion);a?r.pythonVersion=a:n.warn(`Config executionEnvironments index ${t} contains unsupported pythonVersion.`)}else n.error(`Config executionEnvironments index ${t} pythonVersion must be a string.`);return(null==a?void 0:a.pythonVersion)&&(r.pythonVersion=a.pythonVersion),e.pythonPlatform&&("string"==typeof e.pythonPlatform?r.pythonPlatform=e.pythonPlatform:n.error(`Config executionEnvironments index ${t} pythonPlatform must be a string.`)),(null==a?void 0:a.pythonPlatform)&&(r.pythonPlatform=a.pythonPlatform),e.name&&("string"==typeof e.name?r.name=e.name:n.error(`Config executionEnvironments index ${t} pythonPlatform must be a string.`)),r}catch{n.error(`Config executionEnvironments index ${t} is not accessible.`)}}}t.ConfigOptions=w,t.parseDiagLevel=function(e){switch(e){case!1:case"none":return"none";case!0:case"error":return"error";case"warning":return"warning";case"information":return"information";default:return}}},57508:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.convertLogLevel=t.log=t.ConsoleWithLogLevel=t.Chainable=t.StderrConsole=t.StandardConsole=t.NullConsole=t.getLevelNumber=t.ConsoleInterface=t.LogLevel=void 0;const i=s(n(83181)),o=n(28040);var l,p;!function(e){e.Error="error",e.Warn="warn",e.Info="info",e.Log="log"}(l||(t.LogLevel=l={})),function(e){e.is=function(e){return void 0!==e.error&&void 0!==e.warn&&void 0!==e.info&&void 0!==e.log}}(p||(t.ConsoleInterface=p={}));const c=new Map([[l.Error,0],[l.Warn,1],[l.Info,2],[l.Log,3]]);function d(e){var t;return null!==(t=c.get(e))&&void 0!==t?t:3}t.getLevelNumber=d;t.NullConsole=class{constructor(){this.logCount=0,this.infoCount=0,this.warnCount=0,this.errorCount=0}log(e){this.logCount++}info(e){this.infoCount++}warn(e){this.warnCount++}error(e){this.errorCount++}};t.StandardConsole=class{constructor(e=l.Log){this._maxLevel=e}get level(){return this._maxLevel}log(e){d(this._maxLevel)>=d(l.Log)&&console.log(e)}info(e){d(this._maxLevel)>=d(l.Info)&&console.info(e)}warn(e){d(this._maxLevel)>=d(l.Warn)&&console.warn(e)}error(e){d(this._maxLevel)>=d(l.Error)&&console.error(e)}};var u;t.StderrConsole=class{constructor(e=l.Log){this._maxLevel=e}get level(){return this._maxLevel}log(e){d(this._maxLevel)>=d(l.Log)&&console.error(e)}info(e){d(this._maxLevel)>=d(l.Info)&&console.error(e)}warn(e){d(this._maxLevel)>=d(l.Warn)&&console.error(e)}error(e){d(this._maxLevel)>=d(l.Error)&&console.error(e)}},function(e){e.is=function(e){return e&&e.addChain&&e.removeChain}}(u||(t.Chainable=u={}));function m(e,t,n){switch(t){case l.Log:e.log(n);break;case l.Info:e.info(n);break;case l.Warn:e.warn(n);break;case l.Error:e.error(n);break;default:i.fail(`${t} is not expected`)}}t.ConsoleWithLogLevel=class{constructor(e,t=""){this._console=e,this._name=t,this._chains=[],this._maxLevel=2,this._disposed=!1}get level(){switch(this._maxLevel){case 0:return l.Error;case 1:return l.Warn;case 2:return l.Info}return l.Log}set level(e){let t=d(e);void 0===t&&(t=d(l.Info)),this._maxLevel=t}dispose(){this._disposed=!0}error(e){this._log(l.Error,`${this._prefix}${e}`)}warn(e){this._log(l.Warn,`${this._prefix}${e}`)}info(e){this._log(l.Info,`${this._prefix}${e}`)}log(e){this._log(l.Log,`${this._prefix}${e}`)}addChain(e){(0,o.addIfUnique)(this._chains,e)}removeChain(e){(0,o.removeArrayElements)(this._chains,(t=>t===e))}get _prefix(){return this._name?`(${this._name}) `:""}_log(e,t){this._disposed||(this._processChains(e,t),this._getNumericalLevel(e)>this._maxLevel||m(this._console,e,t))}_getNumericalLevel(e){const t=d(e);return i.assert(void 0!==t,"Logger: unknown log level."),void 0!==t?t:2}_processChains(e,t){this._chains.forEach((n=>m(n,e,t)))}},t.log=m,t.convertLogLevel=function(e){if(!e)return l.Info;switch(e.toLowerCase()){case"error":return l.Error;case"warning":return l.Warn;case"information":default:return l.Info;case"trace":return l.Log}}},86016:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Disposable=t.containsOnlyWhitespace=t.getEnumNames=t.isDefined=t.isThenable=t.isDebugMode=t.test_setDebugMode=t.toBoolean=t.hasProperty=t.isBoolean=t.isNumber=t.isString=t.isArray=t.compareValues=t.compareComparableValues=t.equateValues=t.toLowerCase=t.identity=t.returnUndefined=t.returnTrue=t.returnFalse=void 0;const a=n(55164);function r(e,t){return e===t?0:void 0===e?-1:void 0===t?1:e<t?-1:1}t.returnFalse=function(){return!1},t.returnTrue=function(){return!0},t.returnUndefined=function(){},t.identity=function(e){return e},t.toLowerCase=function(e){return e.toLowerCase()},t.equateValues=function(e,t){return e===t},t.compareComparableValues=r,t.compareValues=function(e,t){return r(e,t)},t.isArray=function(e){return Array.isArray?Array.isArray(e):e instanceof Array},t.isString=function(e){return"string"==typeof e},t.isNumber=function(e){return"number"==typeof e},t.isBoolean=function(e){return"boolean"==typeof e};const s=Object.prototype.hasOwnProperty;let i;var o;t.hasProperty=function(e,t){return s.call(e,t)},t.toBoolean=function(e){return"TRUE"===(null==e?void 0:e.trim().toUpperCase())},t.test_setDebugMode=function(e){const t=i;return i=e,t},t.isDebugMode=function(){if(void 0===i){const e=process.execArgv.join();i=e.includes("inspect")||e.includes("debug")}return i},t.isThenable=function(e){return"function"==typeof(null==e?void 0:e.then)},t.isDefined=function(e){return void 0!==e},t.getEnumNames=function(e){const t=[];for(const n in e)isNaN(Number(n))&&t.push(n);return t},t.containsOnlyWhitespace=function(e,t){return t&&(e=e.substring(t.start,a.TextRange.getEnd(t))),/^\s*$/.test(e)},function(e){e.is=function(e){return e&&"function"==typeof e.dispose}}(o||(t.Disposable=o={}))},18796:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.randomBytesHex=void 0;const a=n(83181);let r;try{r=n(87968),(null==r?void 0:r.randomBytes)||(r=void 0)}catch{}t.randomBytesHex=function(e){if(r)return r.randomBytes(e).toString("hex");if(crypto){const n=crypto.getRandomValues(new Uint8Array(e));return t=n,[...t].map((e=>e.toString(16).padStart(2,"0"))).join("")}var t;(0,a.fail)("crypto library not found")}},83181:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getSerializableError=t.getErrorString=t.formatEnum=t.getFunctionName=t.assertNever=t.assertEachDefined=t.assertDefined=t.fail=t.assert=void 0;const a=n(28040),r=n(86016);function s(e,t){const n=new Error(e?`Debug Failure. ${e}`:"Debug Failure.");throw Error.captureStackTrace&&Error.captureStackTrace(n,t||s),n}function i(e,t,n){null==e&&s(t,n||i)}t.assert=function e(t,n,a,r){t||(a&&(n+="\r\nVerbose Debug Information: "+("string"==typeof a?a:a())),s(n?"False expression: "+n:"False expression.",r||e))},t.fail=s,t.assertDefined=i,t.assertEachDefined=function e(t,n,a){for(const r of t)i(r,n,a||e)},t.assertNever=function e(t,n="Illegal value:",a){let r="";try{r=JSON.stringify(t)}catch{}s(`${n} ${r}`,a||e)},t.getFunctionName=function(e){if("function"!=typeof e)return"";if((0,r.hasProperty)(e,"name"))return e.name;{const t=Function.prototype.toString.call(e),n=/^function\s+([\w$]+)\s*\(/.exec(t);return n?n[1]:""}},t.formatEnum=function(e=0,t,n){const s=function(e){const t=[];for(const n of Object.keys(e)){const a=e[n];"number"==typeof a&&t.push([a,n])}return(0,a.stableSort)(t,((e,t)=>(0,r.compareValues)(e[0],t[0])))}(t);if(0===e)return s.length>0&&0===s[0][0]?s[0][1]:"0";if(n){let t="",n=e;for(const[a,r]of s){if(a>e)break;0!==a&&a&e&&(t=`${t}${t?"|":""}${r}`,n&=~a)}if(0===n)return t}else for(const[t,n]of s)if(t===e)return n;return e.toString()},t.getErrorString=function(e){return(e.stack?e.stack.toString():void 0)||("string"==typeof e.message?e.message:void 0)||JSON.stringify(e)},t.getSerializableError=function(e){if(!e)return;return JSON.stringify(e).length>2?e:{name:e.name&&(0,r.isString)(e.name)?e.name:"noname",message:e.message&&(0,r.isString)(e.message)?e.message:"nomessage",stack:e.stack&&(0,r.isString)(e.stack)?e.stack:void 0}}},85696:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createDeferredFromPromise=t.createDeferredFrom=t.createDeferred=void 0;class n{constructor(e=null){this._scope=e,this._resolved=!1,this._rejected=!1,this._promise=new Promise(((e,t)=>{this._resolve=e,this._reject=t}))}get promise(){return this._promise}get resolved(){return this._resolved}get rejected(){return this._rejected}get completed(){return this._rejected||this._resolved}resolve(e){this._resolve.apply(this._scope?this._scope:this,arguments),this._resolved=!0}reject(e){this._reject.apply(this._scope?this._scope:this,arguments),this._rejected=!0}}function a(e=null){return new n(e)}t.createDeferred=a,t.createDeferredFrom=function(...e){const t=a();return Promise.all(e).then(t.resolve.bind(t)).catch(t.reject.bind(t)),t},t.createDeferredFromPromise=function(e){const t=a();return e.then(t.resolve.bind(t)).catch(t.reject.bind(t)),t}},72484:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DiagnosticAddendum=t.compareDiagnostics=t.Diagnostic=t.convertLevelToCategory=t.TaskListPriority=void 0;const a=n(28040);var r;!function(e){e.High="High",e.Normal="Normal",e.Low="Low"}(r||(t.TaskListPriority=r={})),t.convertLevelToCategory=function(e){switch(e){case"error":return 0;case"warning":return 1;case"information":return 2;default:throw new Error(`${e} is not expected`)}};t.Diagnostic=class{constructor(e,t,n,a=r.Normal){this.category=e,this.message=t,this.range=n,this.priority=a,this._relatedInfo=[]}addAction(e){void 0===this._actions?this._actions=[e]:this._actions.push(e)}getActions(){return this._actions}setRule(e){this._rule=e}getRule(){return this._rule}addRelatedInfo(e,t,n,a=r.Normal){this._relatedInfo.push({uri:t,message:e,range:n,priority:a})}getRelatedInfo(){return this._relatedInfo}},t.compareDiagnostics=function(e,t){return e.range.start.line<t.range.start.line?-1:e.range.start.line>t.range.start.line?1:e.range.start.character<t.range.start.character?-1:e.range.start.character>t.range.start.character?1:0};class s{constructor(){this._messages=[],this._childAddenda=[]}addMessage(e){this._messages.push(e)}addTextRange(e){this._range=e}createAddendum(){const e=new s;return this.addAddendum(e),e}getString(e=5,t=8){let n=this._getLinesRecursive(e,t);n.length>t&&(n=n.slice(0,t),n.push("  ..."));const a=n.join("\n");return a.length>0?"\n"+a:""}isEmpty(){return 0===this._getMessageCount()}addAddendum(e){this._childAddenda.push(e)}getChildren(){return this._childAddenda}getMessages(){return this._messages}getEffectiveTextRange(){const e=this._getTextRangeRecursive();if(0!==(null==e?void 0:e.length))return e}_getTextRangeRecursive(e=0){if(e>64)return;e++;const t=this._childAddenda.map((t=>t._getTextRangeRecursive(e))).filter((e=>!!e));return t.length>1?{start:0,length:0}:1===t.length?t[0]:this._range?this._range:void 0}_getMessageCount(e=0){if(e>64)return 0;let t=this._messages.length;for(const n of this._childAddenda)t+=n._getMessageCount(e+1);return t}_getLinesRecursive(e,t,n=0){if(e<=0||n>64)return[];let r=[];for(const s of this._childAddenda){const i=this._messages.length>0?e-1:e;if((0,a.appendArray)(r,s._getLinesRecursive(i,t,n+1)),r.length>=t){r=r.slice(0,t);break}}const s=this._messages.length>0?"  ":"";return this._messages.concat(r).map((e=>s+e))}}t.DiagnosticAddendum=s},97652:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.DiagnosticRule=void 0,function(e){e.strictListInference="strictListInference",e.strictSetInference="strictSetInference",e.strictDictionaryInference="strictDictionaryInference",e.analyzeUnannotatedFunctions="analyzeUnannotatedFunctions",e.strictParameterNoneValue="strictParameterNoneValue",e.enableExperimentalFeatures="enableExperimentalFeatures",e.enableTypeIgnoreComments="enableTypeIgnoreComments",e.deprecateTypingAliases="deprecateTypingAliases",e.disableBytesTypePromotions="disableBytesTypePromotions",e.reportGeneralTypeIssues="reportGeneralTypeIssues",e.reportPropertyTypeMismatch="reportPropertyTypeMismatch",e.reportFunctionMemberAccess="reportFunctionMemberAccess",e.reportMissingImports="reportMissingImports",e.reportMissingModuleSource="reportMissingModuleSource",e.reportInvalidTypeForm="reportInvalidTypeForm",e.reportMissingTypeStubs="reportMissingTypeStubs",e.reportImportCycles="reportImportCycles",e.reportUnusedImport="reportUnusedImport",e.reportUnusedClass="reportUnusedClass",e.reportUnusedFunction="reportUnusedFunction",e.reportUnusedVariable="reportUnusedVariable",e.reportDuplicateImport="reportDuplicateImport",e.reportWildcardImportFromLibrary="reportWildcardImportFromLibrary",e.reportAbstractUsage="reportAbstractUsage",e.reportArgumentType="reportArgumentType",e.reportAssertTypeFailure="reportAssertTypeFailure",e.reportAssignmentType="reportAssignmentType",e.reportAttributeAccessIssue="reportAttributeAccessIssue",e.reportCallIssue="reportCallIssue",e.reportInconsistentOverload="reportInconsistentOverload",e.reportIndexIssue="reportIndexIssue",e.reportInvalidTypeArguments="reportInvalidTypeArguments",e.reportNoOverloadImplementation="reportNoOverloadImplementation",e.reportOperatorIssue="reportOperatorIssue",e.reportOptionalSubscript="reportOptionalSubscript",e.reportOptionalMemberAccess="reportOptionalMemberAccess",e.reportOptionalCall="reportOptionalCall",e.reportOptionalIterable="reportOptionalIterable",e.reportOptionalContextManager="reportOptionalContextManager",e.reportOptionalOperand="reportOptionalOperand",e.reportRedeclaration="reportRedeclaration",e.reportReturnType="reportReturnType",e.reportTypedDictNotRequiredAccess="reportTypedDictNotRequiredAccess",e.reportUntypedFunctionDecorator="reportUntypedFunctionDecorator",e.reportUntypedClassDecorator="reportUntypedClassDecorator",e.reportUntypedBaseClass="reportUntypedBaseClass",e.reportUntypedNamedTuple="reportUntypedNamedTuple",e.reportPrivateUsage="reportPrivateUsage",e.reportTypeCommentUsage="reportTypeCommentUsage",e.reportPrivateImportUsage="reportPrivateImportUsage",e.reportConstantRedefinition="reportConstantRedefinition",e.reportDeprecated="reportDeprecated",e.reportIncompatibleMethodOverride="reportIncompatibleMethodOverride",e.reportIncompatibleVariableOverride="reportIncompatibleVariableOverride",e.reportInconsistentConstructor="reportInconsistentConstructor",e.reportOverlappingOverload="reportOverlappingOverload",e.reportPossiblyUnboundVariable="reportPossiblyUnboundVariable",e.reportMissingSuperCall="reportMissingSuperCall",e.reportUninitializedInstanceVariable="reportUninitializedInstanceVariable",e.reportInvalidStringEscapeSequence="reportInvalidStringEscapeSequence",e.reportUnknownParameterType="reportUnknownParameterType",e.reportUnknownArgumentType="reportUnknownArgumentType",e.reportUnknownLambdaType="reportUnknownLambdaType",e.reportUnknownVariableType="reportUnknownVariableType",e.reportUnknownMemberType="reportUnknownMemberType",e.reportMissingParameterType="reportMissingParameterType",e.reportMissingTypeArgument="reportMissingTypeArgument",e.reportInvalidTypeVarUse="reportInvalidTypeVarUse",e.reportCallInDefaultInitializer="reportCallInDefaultInitializer",e.reportUnnecessaryIsInstance="reportUnnecessaryIsInstance",e.reportUnnecessaryCast="reportUnnecessaryCast",e.reportUnnecessaryComparison="reportUnnecessaryComparison",e.reportUnnecessaryContains="reportUnnecessaryContains",e.reportAssertAlwaysTrue="reportAssertAlwaysTrue",e.reportSelfClsParameterName="reportSelfClsParameterName",e.reportImplicitStringConcatenation="reportImplicitStringConcatenation",e.reportUndefinedVariable="reportUndefinedVariable",e.reportUnboundVariable="reportUnboundVariable",e.reportUnhashable="reportUnhashable",e.reportInvalidStubStatement="reportInvalidStubStatement",e.reportIncompleteStub="reportIncompleteStub",e.reportUnsupportedDunderAll="reportUnsupportedDunderAll",e.reportUnusedCallResult="reportUnusedCallResult",e.reportUnusedCoroutine="reportUnusedCoroutine",e.reportUnusedExcept="reportUnusedExcept",e.reportUnusedExpression="reportUnusedExpression",e.reportUnnecessaryTypeIgnoreComment="reportUnnecessaryTypeIgnoreComment",e.reportMatchNotExhaustive="reportMatchNotExhaustive",e.reportShadowedImports="reportShadowedImports",e.reportImplicitOverride="reportImplicitOverride"}(n||(t.DiagnosticRule=n={}))},73664:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TextRangeDiagnosticSink=t.DiagnosticSink=void 0;const a=n(28040),r=n(72484),s=n(96193),i=n(50356);class o{constructor(e){this._diagnosticList=e||[],this._diagnosticMap=new Map}fetchAndClear(){const e=this._diagnosticList;return this._diagnosticList=[],this._diagnosticMap.clear(),e}addError(e,t){return this.addDiagnostic(new r.Diagnostic(0,e,t))}addWarning(e,t){return this.addDiagnostic(new r.Diagnostic(1,e,t))}addInformation(e,t){return this.addDiagnostic(new r.Diagnostic(2,e,t))}addUnusedCode(e,t,n){const a=new r.Diagnostic(3,e,t);return n&&a.addAction(n),this.addDiagnostic(a)}addUnreachableCode(e,t,n){const a=new r.Diagnostic(4,e,t);return n&&a.addAction(n),this.addDiagnostic(a)}addDeprecated(e,t,n){const a=new r.Diagnostic(5,e,t);return n&&a.addAction(n),this.addDiagnostic(a)}addDiagnostic(e){const t=`${e.range.start.line},${e.range.start.character}-${e.range.end.line}-${e.range.end.character}:${(0,i.hashString)(e.message)}}`;return this._diagnosticMap.has(t)||(this._diagnosticList.push(e),this._diagnosticMap.set(t,e)),e}addDiagnostics(e){(0,a.appendArray)(this._diagnosticList,e)}getErrors(){return this._diagnosticList.filter((e=>0===e.category))}getWarnings(){return this._diagnosticList.filter((e=>1===e.category))}getInformation(){return this._diagnosticList.filter((e=>2===e.category))}getUnusedCode(){return this._diagnosticList.filter((e=>3===e.category))}getUnreachableCode(){return this._diagnosticList.filter((e=>4===e.category))}getDeprecated(){return this._diagnosticList.filter((e=>5===e.category))}}t.DiagnosticSink=o;t.TextRangeDiagnosticSink=class extends o{constructor(e,t){super(t),this._lines=e}addDiagnosticWithTextRange(e,t,n){const a=(0,s.convertOffsetsToRange)(n.start,n.start+n.length,this._lines);switch(e){case"error":return this.addError(t,a);case"warning":return this.addWarning(t,a);case"information":return this.addInformation(t,a);default:throw new Error(`${e} is not expected value`)}}addUnusedCodeWithTextRange(e,t,n){return this.addUnusedCode(e,(0,s.convertOffsetsToRange)(t.start,t.start+t.length,this._lines),n)}addUnreachableCodeWithTextRange(e,t,n){return this.addUnreachableCode(e,(0,s.convertOffsetsToRange)(t.start,t.start+t.length,this._lines),n)}addDeprecatedWithTextRange(e,t,n){return this.addDeprecated(e,(0,s.convertOffsetsToRange)(t.start,t.start+t.length,this._lines),n)}}},42580:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileEditAction=t.TextEditAction=void 0;const a=n(55164);var r,s;!function(e){e.is=function(e){return!!e.range&&void 0!==e.replacementText}}(r||(t.TextEditAction=r={})),function(e){e.is=function(e){return void 0!==e.fileUri&&r.is(e)},e.areEqual=function(e,t){return e===t||e.fileUri.equals(t.fileUri)&&(0,a.rangesAreEqual)(e.range,t.range)&&e.replacementText===t.replacementText}}(s||(t.FileEditAction=s={}))},88296:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.expandPathVariables=t.resolvePathWithEnvVariables=void 0;const i=s(n(88558)),o=n(55084),l=n(11699),p=n(37636);function c(e,t,n){const a=(t,n)=>{e=e.replace(t,n)};e=e.replace(/\$\{workspaceFolder\}/g,t.getPath());for(const t of n){if(!t.rootUri)continue;const n=RegExp(`\\$\\{workspaceFolder:${t.workspaceName}\\}`,"g");e=e.replace(n,t.rootUri.getPath())}return void 0!==process.env.HOME&&a(/\$\{env:HOME\}/g,process.env.HOME||""),void 0!==process.env.USERNAME&&a(/\$\{env:USERNAME\}/g,process.env.USERNAME||""),void 0!==process.env.VIRTUAL_ENV&&a(/\$\{env:VIRTUAL_ENV\}/g,process.env.VIRTUAL_ENV||""),i.homedir&&(a(/\/~/g,i.homedir()||process.env.HOME||process.env.USERPROFILE||"~"),a(/^~/g,i.homedir()||process.env.HOME||process.env.USERPROFILE||"~")),e}t.resolvePathWithEnvVariables=function(e,t,n){const a=e.rootUri,r=c(t,null!=a?a:o.Uri.empty(),n),s=e.service.serviceProvider.get(p.ServiceKeys.caseSensitivityDetector);return function(e){const t=/^[a-zA-Z]:\\?/;return/^[a-zA-Z][a-zA-Z0-9+.-]*:\/?\/?/.test(e)&&!t.test(e)}(r)?o.Uri.parse((0,l.normalizeSlashes)(r,"/"),s):a?a.resolvePaths((0,l.normalizeSlashes)(r,"/")):!t.includes("${workspaceFolder")&&(0,l.isRootedDiskPath)((0,l.normalizeSlashes)(r))?o.Uri.file(r,s):void 0},t.expandPathVariables=c},47512:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.ReferenceUseCase=void 0,function(e){e[e.Rename=0]="Rename",e[e.References=1]="References"}(n||(t.ReferenceUseCase=n={}))},44908:()=>{Promise.prototype.ignoreErrors=function(){this.catch((e=>{console.log(e)}))}},24092:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.FileBasedCancellationProvider=t.getCancellationTokenFromId=t.disposeCancellationToken=t.getCancellationStrategyFromArgv=void 0;const i=s(n(2058)),o=s(n(88558)),l=s(n(67072)),p=n(75835),c=n(65872),d=n(64704),u=n(80636);class m{statSync(e){return i.statSync(e.getFilePath())}}class y extends d.FileBasedToken{constructor(e){super(e,new m),this._disposed=!1}get isCancellationRequested(){return this.isCancelled}cancel(){this._disposed||this.isCancelled||(this._createPipe(),super.cancel())}dispose(){this._disposed=!0,super.dispose(),this._removePipe()}_createPipe(){try{i.writeFileSync(this.cancellationFilePath.getFilePath(),"",{flag:"w"})}catch{}}_removePipe(){try{i.unlinkSync(this.cancellationFilePath.getFilePath())}catch{}}}class g{constructor(e,t=!1){this._cancellationId=e,this._ownFile=t}get token(){return this._token||(this._token=this._ownFile?new y(this._cancellationId):new d.FileBasedToken(this._cancellationId,new m)),this._token}cancel(){if(this._token){if(this._token.isCancellationRequested)return;this._token.cancel()}else this._token=c.CancellationToken.Cancelled}dispose(){this._token?this._token instanceof d.FileBasedToken&&this._token.dispose():this._token=c.CancellationToken.None}}function h(e,t){return u.UriEx.file(l.join(function(e){return l.join(o.tmpdir(),"python-languageserver-cancellation",e)}(e),`cancellation-${String(t)}.tmp`)).toString()}class f{constructor(e){this.folderName=e}createCancellationTokenSource(e){return new g(h(this.folderName,e))}}t.getCancellationStrategyFromArgv=function(e){let t;for(let a=0;a<e.length;a++){const r=e[a];if("--cancellationReceive"===r)t=n(e[a+1]);else{const e=r.split("=");"--cancellationReceive"===e[0]&&(t=n(e[1]))}}return t&&!(0,d.getCancellationFolderName)()&&(0,d.setCancellationFolderName)(t.folderName),t=t||c.CancellationReceiverStrategy.Message,{receiver:t,sender:c.CancellationSenderStrategy.Message};function n(e){const t=function(e){const t=/^file:(.+)$/,n=e.match(t);return n?n[1]:void 0}(e);return t?new f(t):void 0}},t.disposeCancellationToken=function(e){e instanceof d.FileBasedToken&&e.dispose()},t.getCancellationTokenFromId=function(e){return e?new d.FileBasedToken(e,new m):c.CancellationToken.None};let T=0;t.FileBasedCancellationProvider=class{constructor(e){this._prefix=e}createCancellationTokenSource(){const e=(0,d.getCancellationFolderName)();return e?new g(h(e,`${this._prefix}-${String(T++)}`),!0):new p.CancellationTokenSource}}},56556:(e,t)=>{var n,a;Object.defineProperty(t,"__esModule",{value:!0}),t.VirtualDirent=t.TempFile=t.FileSystem=void 0,function(e){e.is=function(e){return e.createFileSystemWatcher&&e.createReadStream&&e.createWriteStream&&e.copyFileSync}}(n||(t.FileSystem=n={})),function(e){e.is=function(e){return e.tmpdir&&e.tmpfile}}(a||(t.TempFile=a={}));t.VirtualDirent=class{constructor(e,t){this.name=e,this._file=t}isFile(){return this._file}isDirectory(){return!this._file}isBlockDevice(){return!1}isCharacterDevice(){return!1}isSymbolicLink(){return!1}isFIFO(){return!1}isSocket(){return!1}}},48984:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ignoredWatchEventFunction=t.nullFileWatcherProvider=t.nullFileWatcherHandler=void 0,t.nullFileWatcherHandler={onFileChange(e,t){}},t.nullFileWatcherProvider={createFileWatcher:(e,t)=>n},t.ignoredWatchEventFunction=function(e){const t=e.map((e=>e.toLowerCase()));return e=>{if(!e||e.indexOf("__pycache__")>=0)return!0;const n=e.toLowerCase();return t.every((e=>n.indexOf(e)<0))}};const n={close(){}}},85444:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.FullAccessHost=t.LimitedAccessHost=void 0;const i=s(n(84368)),o=n(64704),l=n(55484),p=n(83181),c=n(33348),d=n(11699),u=n(61328),m=n(55084),y=n(80636),g=n(37636),h=["import os, os.path, sys","normalize = lambda p: os.path.normcase(os.path.normpath(p))","cwd = normalize(os.getcwd())",'orig_sys_path = [p for p in sys.path if p != ""]','sys.path[:] = [p for p in sys.path if p != "" and normalize(p) != cwd]'],f=[...h,"import sys, json","json.dump(dict(path=orig_sys_path, prefix=sys.prefix), sys.stdout)"].join("; "),T=[...h,"import sys, json","json.dump(tuple(sys.version_info), sys.stdout)"].join("; ");class v extends c.NoAccessHost{get kind(){return 1}getPythonPlatform(e){return"darwin"===process.platform?l.PythonPlatform.Darwin:"linux"===process.platform?l.PythonPlatform.Linux:"win32"===process.platform?l.PythonPlatform.Windows:void 0}}t.LimitedAccessHost=v;class b extends v{constructor(e){super(),this.serviceProvider=e}get kind(){return 0}static createHost(e,t){switch(e){case 2:return new c.NoAccessHost;case 1:return new v;case 0:return new b(t);default:(0,p.assertNever)(e)}}getPythonSearchPaths(e,t){const n=null!=t?t:[];let a=this._executePythonInterpreter(null==e?void 0:e.getFilePath(),(e=>this._getSearchPathResultFromInterpreter(e,n)));return a||(a={paths:[],prefix:void 0}),n.push(`Received ${a.paths.length} paths from interpreter`),a.paths.forEach((e=>{n.push(`  ${e}`)})),a}getPythonVersion(e,t){const n=null!=t?t:[];try{const t=["-c",T],a=this._executePythonInterpreter(null==e?void 0:e.getFilePath(),(e=>i.execFileSync(e,t,{encoding:"utf8"}))),r=JSON.parse(a);if(!Array.isArray(r)||r.length<5)return void n.push(`Python version ${a} from interpreter is unexpected format`);const s=new u.PythonVersion(r[0],r[1],r[2],r[3],r[4]);return void 0===s?void n.push(`Python version ${a} from interpreter is unsupported`):s}catch{return void n.push("Unable to get Python version from interpreter")}}runScript(e,t,n,a,r){return(0,o.throwIfCancellationRequested)(r),new Promise(((s,l)=>{let p="",c="";const d=[t.getFilePath(),...n],u=this._executePythonInterpreter(null==e?void 0:e.getFilePath(),(e=>i.spawn(e,d,{cwd:a.getFilePath()}))),m=(0,o.onCancellationRequested)(r,(()=>{if(u)try{u.pid&&null===u.exitCode&&("win32"===process.platform?i.execSync(`taskkill /pid ${u.pid} /T /F > NUL 2>&1`):process.kill(u.pid))}catch{}l(new o.OperationCanceledException)}));u?(u.stdout.on("data",(e=>p=p.concat(e))),u.stderr.on("data",(e=>c=c.concat(e))),u.on("error",(e=>{m.dispose(),l(e)})),u.on("exit",(()=>{m.dispose(),s({stdout:p,stderr:c})}))):(m.dispose(),l(new Error(`Cannot start python interpreter with script ${t}`)))}))}_executePythonInterpreter(e,t){if(e)return t(e);{let e;try{"win32"!==process.platform&&(e=t("python3"))}catch{}return void 0!==e?e:t("python")}}_getSearchPathResultFromInterpreter(e,t){const n={paths:[],prefix:void 0};try{const a=["-c",f];t.push(`Executing interpreter: '${e}'`);const r=i.execFileSync(e,a,{encoding:"utf8"}),s=this.serviceProvider.get(g.ServiceKeys.caseSensitivityDetector);try{const e=JSON.parse(r);for(let a of e.path)if(a=a.trim(),a){const e=(0,d.normalizePath)(a),r=m.Uri.file(e,s);this.serviceProvider.fs().existsSync(r)&&(0,y.isDirectory)(this.serviceProvider.fs(),r)?n.paths.push(r):t.push(`Skipping '${e}' because it is not a valid directory`)}n.prefix=m.Uri.file(e.prefix,s),0===n.paths.length&&t.push("Found no valid directories")}catch(e){throw t.push(`Could not parse output: '${r}'`),e}}catch{return}return n}}t.FullAccessHost=b},33348:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NoAccessHost=void 0;t.NoAccessHost=class{get kind(){return 2}getPythonSearchPaths(e,t){return null==t||t.push("No access to python executable."),{paths:[],prefix:void 0}}getPythonVersion(e,t){}getPythonPlatform(e){}async runScript(e,t,n,a,r){return{stdout:"",stderr:""}}}},56056:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.WindowInterface=void 0,function(e){e.is=function(e){return!!e&&void 0!==e.showErrorMessage&&void 0!==e.showWarningMessage&&void 0!==e.showInformationMessage}}(n||(t.WindowInterface=n={}))},10996:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LogTracker=t.getPathForLogging=void 0;const a=n(57508),r=n(6216);t.getPathForLogging=function(e,t){return e.isMappedUri(t)?e.getOriginalUri(t):t};t.LogTracker=class{constructor(e,t){this._console=e,this.prefix=t,this._dummyState=new s,this._previousTitles=[],this._indentation=""}get logLevel(){const e=this._console.level;return null!=e?e:a.LogLevel.Error}log(e,t,n=-1,r=!1){if(void 0===this._console)return t(this._dummyState);const i=this._console.level;if(void 0===i||i!==a.LogLevel.Log&&i!==a.LogLevel.Info)return t(this._dummyState);const o=this._indentation;this._previousTitles.push(`${o}${e} ...`),this._indentation+="  ";const l=new s;try{return t(l)}finally{const t=l.duration;if(this._indentation=o,this._previousTitles.length>0&&(l.isSuppressed()||t<=n))this._previousTitles.pop();else{this._printPreviousTitles();let n=`[${this.prefix}] ${this._indentation}${e}${l.get()} (${t}ms)`;r&&l.fileReadTotal+l.tokenizeTotal+l.parsingTotal+l.resolveImportsTotal+l.bindingTotal>0&&(n+=` [f:${l.fileReadTotal}, t:${l.tokenizeTotal}, p:${l.parsingTotal}, i:${l.resolveImportsTotal}, b:${l.bindingTotal}]`),this._console.log(n),t>=2e3&&this._console.info(`[${this.prefix}] Long operation: ${e} (${t}ms)`)}}}_printPreviousTitles(){if(this._previousTitles.pop(),!(this._previousTitles.length<=0)){for(const e of this._previousTitles)this._console.log(`[${this.prefix}] ${e}`);this._previousTitles.length=0}}};class s{constructor(){this._start=new r.Duration,this._startFile=r.timingStats.readFileTime.totalTime,this._startToken=r.timingStats.tokenizeFileTime.totalTime,this._startParse=r.timingStats.parseFileTime.totalTime,this._startImport=r.timingStats.resolveImportsTime.totalTime,this._startBind=r.timingStats.bindTime.totalTime}get duration(){return this._start.getDurationInMilliseconds()}get fileReadTotal(){return r.timingStats.readFileTime.totalTime-this._startFile}get tokenizeTotal(){return r.timingStats.tokenizeFileTime.totalTime-this._startToken}get parsingTotal(){return r.timingStats.parseFileTime.totalTime-this._startParse}get resolveImportsTotal(){return r.timingStats.resolveImportsTime.totalTime-this._startImport}get bindingTotal(){return r.timingStats.bindTime.totalTime-this._startBind}add(e){e&&(this._addendum=e)}get(){return this._addendum?` [${this._addendum}]`:""}suppress(){this._suppress=!0}isSuppressed(){return!!this._suppress}}},66112:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getSymbolKind=t.fromLSPAny=t.toLSPAny=void 0;const a=n(65872),r=n(808);t.toLSPAny=function(e){return e},t.fromLSPAny=function(e){return e},t.getSymbolKind=function(e,t,n=""){var s;switch(e.type){case 6:case 7:return a.SymbolKind.Class;case 5:{if(!e.isMethod)return a.SymbolKind.Function;const n=null===(s=null==t?void 0:t.getTypeForDeclaration(e))||void 0===s?void 0:s.type;return n&&(0,r.isMaybeDescriptorInstance)(n,!1)?a.SymbolKind.Property:a.SymbolKind.Method}case 8:return a.SymbolKind.Module;case 2:if("self"===n||"cls"===n||"_"===n)return;return a.SymbolKind.Variable;case 3:return a.SymbolKind.TypeParameter;case 1:if("_"===n)return;return e.isConstant||e.isFinal?a.SymbolKind.Constant:a.SymbolKind.Variable;default:return a.SymbolKind.Variable}}},47604:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getHeapStatistics=void 0,t.getHeapStatistics=function(){try{const e=n(79008).getHeapStatistics;if(e)return e}catch{}return()=>({total_heap_size:0,total_heap_size_executable:0,total_physical_size:0,total_available_size:0,used_heap_size:0,heap_size_limit:0,malloced_memory:0,peak_malloced_memory:0,does_zap_garbage:0,number_of_native_contexts:0,number_of_detached_contexts:0})}()},93924:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.defaultStubsDirectory=t.stubsSuffix=t.src=t.distPackages=t.sitePackages=t.lib64=t.libAlternate=t.lib=t.typeshedFallback=void 0,t.typeshedFallback="typeshed-fallback",t.lib="lib",t.libAlternate="Lib",t.lib64="lib64",t.sitePackages="site-packages",t.distPackages="dist-packages",t.src="src",t.stubsSuffix="-stubs",t.defaultStubsDirectory="typings"},11699:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.isDiskPathRoot=t.isRootedDiskPath=t.getRegexEscapedSeparator=t.hasPythonExtension=t.getWildcardRoot=t.isDirectoryWildcardPatternPresent=t.getWildcardRegexPattern=t.normalizePath=t.stripFileExtension=t.getShortenedFileName=t.getFileName=t.getFileExtension=t.stripTrailingDirectorySeparator=t.hasTrailingDirectorySeparator=t.ensureTrailingDirectorySeparator=t.getRelativePathComponentsFromDirectory=t.getRelativePathFromDirectory=t.getBaseFileName=t.getAnyExtensionFromPath=t.changeAnyExtension=t.containsPath=t.combinePaths=t.resolvePaths=t.normalizeSlashes=t.getRelativePath=t.combinePathComponents=t.reducePathComponents=t.getPathComponents=t.getPathSeparator=t.getRootLength=t.getDirectoryPath=t.FileSpec=void 0;const i=s(n(67072)),o=n(28040),l=n(86016),p=s(n(83181)),c=n(50356),d=/\.pyi?$/;var u;function m(e){return e.substr(0,Math.max(y(e),e.lastIndexOf(i.sep)))}function y(e,t=i.sep){if(e.charAt(0)===t){if(e.charAt(1)!==t)return 1;const n=e.indexOf(t,2);return n<0?e.length:n+1}if(":"===e.charAt(1)){if(e.charAt(2)===t)return 3;if(2===e.length)return 2}return 0}function g(e){return i.sep}function h(e){const t=b(e),n=y(t),a=t.substring(0,n),r=g(),s=t.substring(n).split(r);return s.length>0&&!s[s.length-1]&&s.pop(),f([a,...s])}function f(e){if(!(0,o.some)(e))return[];const t=[e[0]];for(let n=1;n<e.length;n++){const a=e[n];if(a&&"."!==a){if(".."===a)if(t.length>1){if(".."!==t[t.length-1]){t.pop();continue}}else if(t[0])continue;t.push(a)}}return t}function T(e){if(0===e.length)return"";const t=e[0]&&w(e[0]),n=g();return b(t+e.slice(1).join(n))}!function(e){e.is=function(e){const t=e;return t&&!!t.wildcardRoot&&!!t.regExp},e.isInPath=function(e,t){return!!t.find((t=>t.regExp.test(e)))},e.matchesIncludeFileRegex=function(e,t=!0){return!t||d.test(e)},e.matchIncludeFileSpec=function(t,n,a,r=!0){return!(!t.test(a)||e.isInPath(a,n)||!e.matchesIncludeFileRegex(a,r))}}(u||(t.FileSpec=u={})),t.getDirectoryPath=m,t.getRootLength=y,t.getPathSeparator=g,t.getPathComponents=h,t.reducePathComponents=f,t.combinePathComponents=T,t.getRelativePath=function(e,t){if(!e.startsWith(w(t)))return;const n=h(e),a=h(t),r=g();let s=".";for(let e=a.length;e<n.length;e++)s+=r+n[e];return s};const v=e=>"/"===e?"\\":"/";function b(e,t=i.sep){if(e.includes(v(t))){const n=/[\\/]/g;return e.replace(n,t)}return e}function _(e,...t){e&&(e=b(e));for(let n of t)n&&(n=b(n),e=e&&0===y(n)?w(e)+n:n);return e}function C(e,t,n){if(t)return function(e,t,n){if("string"==typeof t)return E(e,t,n)||"";for(const a of t){const t=E(e,a,n);if(t)return t}return""}(A(e),t,n?c.equateStringsCaseInsensitive:c.equateStringsCaseSensitive);const a=I(e),r=a.lastIndexOf(".");return r>=0?a.substring(r):""}function I(e,t,n){if(y(e=b(e))===e.length)return"";const a=(e=A(e)).slice(Math.max(y(e),e.lastIndexOf(i.sep)+1)),r=void 0!==t&&void 0!==n?C(a,t,n):void 0;return r?a.slice(0,a.length-r.length):a}function k(e,t,n){p.assert(y(e)>0==y(t)>0,"Paths must either both be absolute or both be relative");const a="function"==typeof n?n:l.identity,r=function(e,t,n,a){const r=h(e),s=h(t);let i;for(i=0;i<r.length&&i<s.length;i++){const e=a(r[i]),t=a(s[i]);if(!(0===i?c.equateStringsCaseInsensitive:n)(e,t))break}if(0===i)return s;const o=s.slice(i),l=[];for(;i<r.length;i++)l.push("..");return["",...l,...o]}(e,t,"boolean"==typeof n&&n?c.equateStringsCaseInsensitive:c.equateStringsCaseSensitive,a);return r}function w(e){const t=g();return S(e)?e:e+t}function S(e){if(0===e.length)return!1;const t=e.charCodeAt(e.length-1);return 47===t||92===t}function A(e){return S(e)?e.slice(0,e.length-1):e}function x(e,t=!1){if(!t)return i.extname(e);const n=(e=P(e)).indexOf(".");return e.slice(n)}function P(e){return i.basename(e)}function N(e){return b(i.normalize(e))}function D(e){return e.endsWith(".py")||e.endsWith(".pyi")}function F(e=i.sep){return"/"===e?"/":"\\\\"}function E(e,t,n){if(t.startsWith(".")||(t="."+t),e.length>=t.length&&46===e.charCodeAt(e.length-t.length)){const a=e.slice(e.length-t.length);if(n(a,t))return a}}t.normalizeSlashes=b,t.resolvePaths=function(e,...t){return N((0,o.some)(t)?_(e,...t):b(e))},t.combinePaths=_,t.containsPath=function(e,t,n,a){if("string"==typeof n?(e=_(n,e),t=_(n,t)):"boolean"==typeof n&&(a=n),void 0===e||void 0===t)return!1;if(e===t)return!0;const r=h(e),s=h(t);if(s.length<r.length)return!1;const i=a?c.equateStringsCaseInsensitive:c.equateStringsCaseSensitive;for(let e=0;e<r.length;e++){if(!(0===e?c.equateStringsCaseInsensitive:i)(r[e],s[e]))return!1}return!0},t.changeAnyExtension=function(e,t,n,a){const r=void 0!==n&&void 0!==a?C(e,n,a):C(e);return r?e.slice(0,e.length-r.length)+(t.startsWith(".")?t:"."+t):e},t.getAnyExtensionFromPath=C,t.getBaseFileName=I,t.getRelativePathFromDirectory=function(e,t,n){return T(k(e,t,n))},t.getRelativePathComponentsFromDirectory=k,t.ensureTrailingDirectorySeparator=w,t.hasTrailingDirectorySeparator=S,t.stripTrailingDirectorySeparator=A,t.getFileExtension=x,t.getFileName=P,t.getShortenedFileName=function(e,t=15){const n=P(e),a=m(e);return a.length>t?`...${a.slice(a.length-t)}${i.sep}${n}`:e},t.stripFileExtension=function(e,t=!1){const n=x(e,t);return e.substr(0,e.length-n.length)},t.normalizePath=N,t.getWildcardRegexPattern=function(e,t){let n=N(_(e,t));D(n)||(n=w(n));const a=h(n),r=F(g()),s=`(${r}[^${r}][^${r}]*)*?`,i=new RegExp(`[^\\w\\s${r}]`,"g");a.length>0&&(a[0]=A(a[0]),a[0].startsWith("\\\\")&&(a[0]="\\\\"+a[0]));let o="",l=!0;for(let e of a)"**"===e?o+=s:(l||(e=r+e),o+=e.replace(i,(e=>"*"===e?`[^${r}]*`:"?"===e?`[^${r}]`:"\\"+e)),l=!1);return o},t.isDirectoryWildcardPatternPresent=function(e){const t=h(N(e));for(const e of t)if("**"===e)return!0;return!1},t.getWildcardRoot=function(e,t){let n=N(_(e,t));D(n)||(n=w(n));const a=h(n),r=g();if(a.length>0&&(a[0]=A(a[0])),1===a.length&&!a[0])return r;let s="",i=!0;for(let e of a){if("**"===e)break;if(e.match(/[*?]/))break;i||(e=r+e),s+=e,i=!1}return s},t.hasPythonExtension=D,t.getRegexEscapedSeparator=F,t.isRootedDiskPath=function(e){return y(e)>0},t.isDiskPathRoot=function(e){const t=y(e);return t>0&&t===e.length}},96193:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getLineEndOffset=t.getLineEndPosition=t.convertTextRangeToRange=t.convertRangeToTextRange=t.convertPositionToOffset=t.convertOffsetsToRange=t.convertOffsetToPosition=void 0;const a=n(83181),r=n(55164);function s(e,t){if(0===t.end)return{line:0,character:0};const n=e>=t.end?t.count-1:t.getItemContaining(e);(0,a.assert)(n>=0&&n<=t.count);const r=t.getItemAt(n);return(0,a.assert)(void 0!==r),{line:n,character:Math.max(0,Math.min(r.length,e-r.start))}}function i(e,t,n){return{start:s(e,n),end:s(t,n)}}function o(e,t){if(!(e.line>=t.count))return t.getItemAt(e.line).start+e.character}function l(e,t,n){const a=e.lines.getItemAt(n),s=r.TextRange.getEnd(a);let i=0;for(let e=s-1;e>=a.start;e--){const n=t[e];if("\r"!==n&&"\n"!==n)break;i++}return s-i}t.convertOffsetToPosition=s,t.convertOffsetsToRange=i,t.convertPositionToOffset=o,t.convertRangeToTextRange=function(e,t){const n=o(e.start,t);if(void 0===n)return;const a=o(e.end,t);return void 0!==a?r.TextRange.fromBounds(n,a):void 0},t.convertTextRangeToRange=function(e,t){return i(e.start,r.TextRange.getEnd(e),t)},t.getLineEndPosition=function(e,t,n){return s(l(e,t,n),e.lines)},t.getLineEndOffset=l},3948:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ProgressReportTracker=void 0;t.ProgressReportTracker=class{constructor(e){this._reporter=e,this._isDisplayingProgress=!1}isEnabled(e){var t;return!!this._isDisplayingProgress||null!==(t=this._reporter.isEnabled(e))&&void 0!==t&&t}begin(){this._isDisplayingProgress||(this._isDisplayingProgress=!0,this._reporter.begin())}report(e){this._isDisplayingProgress&&this._reporter.report(e)}end(){this._isDisplayingProgress&&(this._isDisplayingProgress=!1,this._reporter.end())}}},61328:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.latestStablePythonVersion=t.pythonVersion3_13=t.pythonVersion3_12=t.pythonVersion3_11=t.pythonVersion3_10=t.pythonVersion3_9=t.pythonVersion3_8=t.pythonVersion3_7=t.pythonVersion3_6=t.pythonVersion3_5=t.pythonVersion3_4=t.pythonVersion3_3=t.pythonVersion3_2=t.pythonVersion3_1=t.pythonVersion3_0=t.PythonVersion=void 0;class n{constructor(e,t,n,a,r){this._major=e,this._minor=t,this._micro=n,this._releaseLevel=a,this._serial=r}get major(){return this._major}get minor(){return this._minor}get micro(){return this._micro}get releaseLevel(){return this._releaseLevel}get serial(){return this._serial}isEqualTo(e){return this.major===e.major&&this.minor===e.minor&&(void 0===this._micro||void 0===e._micro||this._micro===e._micro&&(void 0===this._releaseLevel||void 0===e._releaseLevel||this._releaseLevel===e._releaseLevel&&(void 0===this._serial||void 0===e._serial||this._serial===e._serial)))}isGreaterThan(e){return this.major>e.major||!(this.major<e.major)&&(this.minor>e.minor||!(this.minor<e.minor)&&(!(void 0===this._micro||void 0===e._micro||this._micro<e._micro)&&(this._micro>e._micro||!(void 0===this._releaseLevel||void 0===e._releaseLevel||this._releaseLevel<e._releaseLevel)&&(this._releaseLevel>e._releaseLevel||!(void 0===this._serial||void 0===e._serial||this._serial<e._serial)&&this._serial>e._serial))))}isGreaterOrEqualTo(e){return this.isEqualTo(e)||this.isGreaterThan(e)}isLessThan(e){return!this.isGreaterOrEqualTo(e)}isLessOrEqualTo(e){return!this.isGreaterThan(e)}toMajorMinorString(){return`${this._major}.${this._minor}`}toString(){let e=this.toMajorMinorString();return void 0===this._micro?e:(e+=`.${this._micro}`,void 0===this._releaseLevel?e:(e+=`.${this._releaseLevel}`,void 0===this._serial||(e+=`.${this._serial}`),e))}static fromString(e){const t=e.split(".");if(t.length<2)return;const a=parseInt(t[0],10),r=parseInt(t[1],10);if(isNaN(a)||isNaN(r))return;let s,i,o;if(t.length>=3&&(s=parseInt(t[2],10),isNaN(s)&&(s=void 0)),t.length>=4){["alpha","beta","candidate","final"].some((e=>e===t[3]))&&(i=t[3])}return t.length>=5&&(o=parseInt(t[4],10),isNaN(o)&&(o=void 0)),new n(a,r,s,i,o)}}t.PythonVersion=n,t.pythonVersion3_0=new n(3,0),t.pythonVersion3_1=new n(3,1),t.pythonVersion3_2=new n(3,2),t.pythonVersion3_3=new n(3,3),t.pythonVersion3_4=new n(3,4),t.pythonVersion3_5=new n(3,5),t.pythonVersion3_6=new n(3,6),t.pythonVersion3_7=new n(3,7),t.pythonVersion3_8=new n(3,8),t.pythonVersion3_9=new n(3,9),t.pythonVersion3_10=new n(3,10),t.pythonVersion3_11=new n(3,11),t.pythonVersion3_12=new n(3,12),t.pythonVersion3_13=new n(3,13),t.latestStablePythonVersion=t.pythonVersion3_12},5216:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.RealTempFile=t.WorkspaceFileWatcherProvider=t.RealFileSystem=t.createFromRealFileSystem=void 0;const i=n(78264),o=n(95032),l=s(n(2058)),p=s(n(33736)),c=n(48696),d=n(57508),u=n(48984),m=n(11699),y=n(12448),g=n(55084),h=n(80636),f=n(18796);p.setGracefulCleanup(),t.createFromRealFileSystem=function(e,t,n){return new x(e,null!=t?t:new d.NullConsole,null!=n?n:u.nullFileWatcherProvider)};const T=".zip",v=".egg",b=".jar";function _(e){let t=e.indexOf(T);if(t<=0&&(t=e.indexOf(v),t<=0&&(t=e.indexOf(b),t<=0)))return null;if(e[t-1]===i.ppath.sep)return null;const n=t+4;return e.length>n&&e[n]!==i.ppath.sep?null:e.slice(0,n)}function C(e){return e.endsWith(T)||e.endsWith(v)||e.endsWith(b)}const I=[Buffer.from([80,75,3,4]),Buffer.from([80,75,5,6]),Buffer.from([80,75,7,8])];function k(e,t){let n;try{n=e.openSync(t,"r");const a=Buffer.alloc(4);if(e.readSync(n,a,0,4,0)<4)return!1;for(const e of I)if(0===a.compare(e))return!0;return!1}catch{return!1}finally{void 0!==n&&e.closeSync(n)}}class w extends i.ZipOpenFS{findZip(e){if(this.filter&&!this.filter.test(e))return null;let t="";for(;;){const n=_(e.substr(t.length));if(!n)return null;if(t=this.pathUtils.join(t,n),!1===this.isZip.has(t)){if(this.notZip.has(t))continue;try{if(!this.baseFs.lstatSync(t).isFile()){this.notZip.add(t);continue}if(!k(this.baseFs,t)){this.notZip.add(t);continue}try{this.getZipSync(t,(()=>{}))}catch{this.notZip.add(t);continue}}catch{return null}this.isZip.add(t)}return{archivePath:t,subPath:this.pathUtils.join(i.PortablePath.root,e.substr(t.length))}}}getZipSync(e,t){return super.getZipSync(e,t)}}class S extends i.PosixFS{constructor(){const e=new w({libzip:()=>(0,o.getLibzipSync)(),useCache:!0,maxOpenFiles:80,readOnlyArchives:!0});super(new i.VirtualFS({baseFs:e})),this._eggZipOpenFS=e}isZip(e){return!!this._eggZipOpenFS.findZip(this.mapToBase(e))}}const A=new S;class x{constructor(e,t,n){this._caseSensitiveDectector=e,this._console=t,this._fileWatcherProvider=n}existsSync(e){if(e.isEmpty()||!y.FileUri.isFileUri(e))return!1;const t=e.getFilePath();try{return A.existsSync(t)}catch{return!1}}mkdirSync(e,t){const n=e.getFilePath();A.mkdirSync(n,t)}chdir(e){const t=e.getFilePath();c.isMainThread&&process.chdir(t)}readdirSync(e){const t=e.getFilePath();return A.readdirSync(t)}readdirEntriesSync(e){const t=e.getFilePath();return A.readdirSync(t,{withFileTypes:!0}).map((e=>C(e.name)&&e.isFile()&&A.isZip(t)?{name:e.name,isFile:()=>!1,isDirectory:()=>!0,isBlockDevice:()=>!1,isCharacterDevice:()=>!1,isSymbolicLink:()=>!1,isFIFO:()=>!1,isSocket:()=>!1}:e))}readFileSync(e,t=null){const n=e.getFilePath();return"utf8"===t||"utf-8"===t?A.readFileSync(n,"utf8"):A.readFileSync(n)}writeFileSync(e,t,n){const a=e.getFilePath();A.writeFileSync(a,t,n||void 0)}statSync(e){if(y.FileUri.isFileUri(e)){const t=e.getFilePath(),n=A.statSync(t);return C(t)&&n.isFile()&&A.isZip(t)?(n.isFile=()=>!1,n.isDirectory=()=>!0,n.isZipDirectory=()=>!0,n):n}return{isFile:()=>!1,isDirectory:()=>!1,isBlockDevice:()=>!1,isCharacterDevice:()=>!1,isSymbolicLink:()=>!1,isFIFO:()=>!1,isSocket:()=>!1,dev:0,atimeMs:0,mtimeMs:0,ctimeMs:0,birthtimeMs:0,size:0,blksize:0,blocks:0,ino:0,mode:0,nlink:0,uid:0,gid:0,rdev:0,atime:new Date,mtime:new Date,ctime:new Date,birthtime:new Date}}rmdirSync(e){const t=e.getFilePath();A.rmdirSync(t)}unlinkSync(e){const t=e.getFilePath();A.unlinkSync(t)}realpathSync(e){try{const t=e.getFilePath();return g.Uri.file(A.realpathSync(t),this._caseSensitiveDectector)}catch(t){return e}}getModulePath(){return(0,h.getRootUri)(this._caseSensitiveDectector)||g.Uri.empty()}createFileSystemWatcher(e,t){return this._fileWatcherProvider.createFileWatcher(e.map((e=>e.getFilePath())),t)}createReadStream(e){const t=e.getFilePath();return A.createReadStream(t)}createWriteStream(e){const t=e.getFilePath();return A.createWriteStream(t)}copyFileSync(e,t){const n=e.getFilePath(),a=t.getFilePath();A.copyFileSync(n,a)}readFile(e){const t=e.getFilePath();return A.readFilePromise(t)}async readFileText(e,t){const n=e.getFilePath();if("utf8"===t||"utf-8"===t)return A.readFilePromise(n,"utf8");return(await A.readFilePromise(n)).toString(t)}realCasePath(e){try{if(!this.existsSync(e))return e;const t=l.realpathSync.native(e.getFilePath());return e.getFilePath().toLowerCase()!==t.toLowerCase()||(0,m.getRootLength)(t)!==(0,m.getRootLength)(e.getFilePath())?e:g.Uri.file(t,this._caseSensitiveDectector)}catch(t){return this._console.log(`Failed to get real file system casing for ${e}: ${t}`),e}}isMappedUri(e){return!1}getOriginalUri(e){return e}getMappedUri(e){return e}isInZip(e){const t=e.getFilePath();return/[^\\/]\.(?:egg|zip|jar)[\\/]/.test(t)&&A.isZip(t)}}t.RealFileSystem=x;t.WorkspaceFileWatcherProvider=class{constructor(){this._fileWatchers=[]}createFileWatcher(e,t){const n=this,a={close(){n._fileWatchers=n._fileWatchers.filter((e=>e!==a))},workspacePaths:e,eventHandler:t};return n._fileWatchers.push(a),a}onFileChange(e,t){this._fileWatchers.forEach((n=>{n.workspacePaths.some((e=>t.getFilePath().startsWith(e)))&&n.eventHandler(e,t.getFilePath())}))}};t.RealTempFile=class{constructor(){}tmpdir(){return g.Uri.file(this._getTmpDir().name,this)}tmpfile(e){const t=p.fileSync({dir:this._getTmpDir().name,discardDescriptor:!0,...e});return g.Uri.file(t.name,this)}dispose(){var e;try{null===(e=this._tmpdir)||void 0===e||e.removeCallback(),this._tmpdir=void 0}catch{}}isCaseSensitive(e){return!e.startsWith(y.FileUriSchema)||this._isLocalFileSystemCaseSensitive()}_isLocalFileSystemCaseSensitive(){return void 0===this._caseSensitivity&&(this._caseSensitivity=this._isFileSystemCaseSensitiveInternal()),this._caseSensitivity}_getTmpDir(){return this._tmpdir||(this._tmpdir=p.dirSync({prefix:"pyright"})),this._tmpdir}_isFileSystemCaseSensitiveInternal(){let e;try{let t,n;do{t=`${(0,f.randomBytesHex)(21)}-a`,e=(0,m.combinePaths)(this._getTmpDir().name,t),n=(0,m.combinePaths)(this._getTmpDir().name,t.toUpperCase())}while(l.existsSync(e)||l.existsSync(n));return l.writeFileSync(e,"","utf8"),!l.existsSync(n)}catch(e){return!1}finally{if(e)try{l.unlinkSync(e)}catch(e){}}}}},37636:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ServiceKeys=void 0;const a=n(29484);var r;!function(e){e.fs=new a.ServiceKey,e.console=new a.ServiceKey,e.sourceFileFactory=new a.ServiceKey,e.partialStubs=new a.ServiceKey,e.symbolDefinitionProvider=new a.GroupServiceKey,e.symbolUsageProviderFactory=new a.GroupServiceKey,e.stateMutationListeners=new a.GroupServiceKey,e.tempFile=new a.ServiceKey,e.cacheManager=new a.ServiceKey,e.debugInfoInspector=new a.ServiceKey,e.caseSensitivityDetector=new a.ServiceKey}(r||(t.ServiceKeys=r={}))},29484:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ServiceProvider=t.GroupServiceKey=t.ServiceKey=void 0;const i=n(28040),o=s(n(83181));class l{}t.ServiceKey=class extends l{constructor(){super(...arguments),this.kind="singleton"}};t.GroupServiceKey=class extends l{constructor(){super(...arguments),this.kind="group"}};class p{constructor(){this._container=new Map}add(e,t){"group"!==e.kind?"singleton"!==e.kind?o.assertNever(e,"Unknown key type "+typeof e):void 0!==t?this._container.set(e,t):this.remove(e):this._addGroupService(e,t)}remove(e,t){"group"!==e.kind?"singleton"!==e.kind?o.assertNever(e,"Unknown key type "+typeof e):this._container.delete(e):this._removeGroupService(e,t)}tryGet(e){return this._container.get(e)}get(e){const t=(e.kind,this.tryGet(e));if(void 0===t)throw new Error(`Global service provider not initialized for ${e.toString()}`);return t}clone(){const e=new p;return this._container.forEach(((t,n)=>{"group"===n.kind?e._container.set(n,[...null!=t?t:[]]):e._container.set(n,t)})),e}_addGroupService(e,t){const n=this.tryGet(e);void 0!==n?void 0!==t&&(0,i.addIfUnique)(n,t):this._container.set(e,[t])}_removeGroupService(e,t){const n=this.tryGet(e);void 0!==n&&(0,i.removeArrayElements)(n,(e=>e===t))}}t.ServiceProvider=p},58484:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createServiceProvider=void 0;const a=n(80232),r=n(23260),s=n(41500),i=n(58892),o=n(37636),l=n(45228),p=n(57508),c=n(56556),d=n(29484);t.createServiceProvider=function(...e){const t=new d.ServiceProvider;return e.forEach((e=>{c.FileSystem.is(e)&&t.add(o.ServiceKeys.fs,e),p.ConsoleInterface.is(e)&&t.add(o.ServiceKeys.console,e),r.ISourceFileFactory.is(e)&&t.add(o.ServiceKeys.sourceFileFactory,e),i.SupportPartialStubs.is(e)&&t.add(o.ServiceKeys.partialStubs,e),c.TempFile.is(e)&&t.add(o.ServiceKeys.tempFile,e),l.CaseSensitivityDetector.is(e)&&t.add(o.ServiceKeys.caseSensitivityDetector,e),a.CacheManager.is(e)&&t.add(o.ServiceKeys.cacheManager,e)})),t},d.ServiceProvider.prototype.fs=function(){return this.get(o.ServiceKeys.fs)},d.ServiceProvider.prototype.console=function(){return this.get(o.ServiceKeys.console)},d.ServiceProvider.prototype.partialStubs=function(){return this.get(o.ServiceKeys.partialStubs)},d.ServiceProvider.prototype.tmp=function(){return this.tryGet(o.ServiceKeys.tempFile)},d.ServiceProvider.prototype.sourceFileFactory=function(){return this.tryGet(o.ServiceKeys.sourceFileFactory)||u},d.ServiceProvider.prototype.cacheManager=function(){return this.tryGet(o.ServiceKeys.cacheManager)};const u={createSourceFile:(e,t,n,a,r,i,o,l,p)=>new s.SourceFile(e,t,n,a,r,i,o,l,p)}},50356:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.truncate=t.getLastDottedString=t.getCharacterCount=t.equateStringsCaseSensitive=t.equateStringsCaseInsensitive=t.getStringComparer=t.compareStringsCaseSensitive=t.compareStringsCaseInsensitive=t.hashString=t.isPatternInSymbol=t.computeCompletionSimilarity=void 0;const r=a(n(97392)),s=n(86016);function i(e,t){return e===t?0:void 0===e?-1:void 0===t?1:(0,s.compareComparableValues)(e.toUpperCase(),t.toUpperCase())}function o(e,t){return(0,s.compareComparableValues)(e,t)}t.computeCompletionSimilarity=function(e,t){if(t.startsWith(e))return 1;const n=t.toLocaleLowerCase(),a=e.toLocaleLowerCase();if(n.startsWith(a))return.75;let s=n.length,i=Number.MAX_VALUE;for(;s>0;){const e=(0,r.default)(n.substr(0,s),a);e<i&&(i=e),s--}return i>=e.length?0:.5*((e.length-i)/e.length)},t.isPatternInSymbol=function(e,t){const n=e.toLocaleLowerCase(),a=t.toLocaleLowerCase(),r=n.length,s=a.length;let i=0,o=0;for(;i<r&&o<s;)n[i]===a[o]&&(i+=1),o+=1;return i===r},t.hashString=function(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n)|0;return t},t.compareStringsCaseInsensitive=i,t.compareStringsCaseSensitive=o,t.getStringComparer=function(e){return e?i:o},t.equateStringsCaseInsensitive=function(e,t){return 0===i(e,t)},t.equateStringsCaseSensitive=function(e,t){return 0===o(e,t)},t.getCharacterCount=function(e,t){let n=0;for(let a=0;a<e.length;a++)e[a]===t&&n++;return n},t.getLastDottedString=function(e){const t=e.lastIndexOf(".");return t>0?e.substring(t+1):e},t.truncate=function(e,t){return e.length>t?e.substring(0,t-3)+"...":e}},73468:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.TextEditTracker=void 0;const i=n(9316),o=n(21440),l=s(n(28340)),p=n(28040),c=s(n(83181)),d=n(42580),u=n(96193),m=n(55164),y=n(55084);t.TextEditTracker=class{constructor(e=!0){this._mergeOnlyDuplications=e,this._nodesRemoved=new Map,this._results=new Map,this._pendingNodeToRemove=[]}addEdits(...e){e.forEach((e=>this.addEdit(e.fileUri,e.range,e.replacementText)))}addEdit(e,t,n){const a=(0,p.getOrAdd)(this._results,e.key,(()=>[])),r=this._getEditsToMerge(a,t,n);r.length>0&&(this._removeEdits(a,r),(0,m.extendRange)(t,r.map((e=>e.range)))),a.push({fileUri:e,range:t,replacementText:n})}addEditWithTextRange(e,t,n){const a=(0,i.getFileInfo)(e.parserOutput.parseTree).fileUri;e.text.substr(t.start,t.length)!==n&&this.addEdit(a,(0,u.convertTextRangeToRange)(t,e.tokenizerOutput.lines),n)}deleteImportName(e,t){const n=21===t.nodeType?t.parent.list:t.parent.imports,a=(0,i.getFileInfo)(e.parserOutput.parseTree).fileUri;(0,o.getTextRangeForImportNameDeletion)(e,n,n.findIndex((e=>e===t))).forEach((t=>this.addEditWithTextRange(e,t,""))),this._markNodeRemoved(t,e);let r=0;for(r=n.length-1;r>=0&&this._nodesRemoved.has(n[r]);r--);if(-1===r){const n=t.parent;n&&this.addEdit(a,l.getFullStatementRange(n,e),"")}else if(r>=0&&r<n.length-2){const t=m.TextRange.getEnd(n[r]),a=m.TextRange.getEnd(n[r+1])-t;this.addEditWithTextRange(e,{start:t,length:a},"")}}addOrUpdateImport(e,t,n,a,r,s){r&&this._tryUpdateImport(e,t,n,r,s)||this._addImport(e,t,n,a,r)}removeNodes(...e){this._pendingNodeToRemove.push(...e)}isNodeRemoved(e){return this._nodesRemoved.has(e)}getEdits(e){this._processNodeRemoved(e);const t=[];return this._results.forEach((e=>(0,p.appendArray)(t,e))),t}_addImport(e,t,n,a,r){const s=(0,i.getFileInfo)(e.parserOutput.parseTree).fileUri;this.addEdits(...(0,o.getTextEditsForAutoImportInsertion)(null!=r?r:[],n,t,a,e,(0,u.convertOffsetToPosition)(e.parserOutput.parseTree.length,e.tokenizerOutput.lines)).map((e=>({fileUri:s,range:e.range,replacementText:e.replacementText}))))}_tryUpdateImport(e,t,n,a,r){if(!r)return!1;const s=t.orderedImports.find((e=>22===e.node.nodeType&&(e.moduleName===n.nameForImportFrom||e.moduleName===n.name)));if(!s||22!==s.node.nodeType||s.node.isWildcardImport)return!1;const l=(0,i.getFileInfo)(e.parserOutput.parseTree).fileUri,p=(0,o.getTextEditsForAutoImportSymbolAddition)(a,s,e);if(s.node!==r.currentFromImport)return this.addEdits(...p.map((e=>({fileUri:l,range:e.range,replacementText:e.replacementText})))),!0;const c=r.originalModuleName.split("."),d=n.name.split(".");if(!(0,o.haveSameParentModule)(c,d))return!1;if(1!==a.length||1!==p.length)return!1;const m=this._getDeletionsForSpan(l,p[0].range);if(0===m.length)return this.addEdit(l,p[0].range,p[0].replacementText),!0;const y=c[c.length-1],g=d[d.length-1],h=a[0].alias===g?y:a[0].alias,f=r.currentFromImport.imports.find((e=>{var t;return e.name.value===y&&(null===(t=e.alias)||void 0===t?void 0:t.value)===h}));return!!f&&(this._removeEdits(l,m),f.alias&&this._nodesRemoved.delete(f.alias),this.addEdit(l,(0,u.convertTextRangeToRange)(f.name,e.tokenizerOutput.lines),g),!0)}_getDeletionsForSpan(e,t){return this._getOverlappingForSpan(e,t).filter((e=>""===e.replacementText))}_removeEdits(e,t){var n;y.Uri.is(e)&&(e=null!==(n=this._results.get(e.key))&&void 0!==n?n:[]),(0,p.removeArrayElements)(e,(e=>t.some((t=>d.FileEditAction.areEqual(e,t)))))}_getEditsToMerge(e,t,n){const a=this._getOverlappingForSpan(e,t);return this._mergeOnlyDuplications&&a.length>0?""===n?a.filter((e=>""===e.replacementText)):a.filter((e=>e.replacementText===n&&((0,m.doesRangeContain)(t,e.range)||(0,m.doesRangeContain)(e.range,t)))):a.filter((e=>""===e.replacementText||e.replacementText===n&&((0,m.doesRangeContain)(t,e.range)||(0,m.doesRangeContain)(e.range,t))))}_getOverlappingForSpan(e,t){var n;return y.Uri.is(e)&&(e=null!==(n=this._results.get(e.key))&&void 0!==n?n:[]),e.filter((e=>(0,m.doRangesIntersect)(e.range,t)))}_processNodeRemoved(e){for(;this._pendingNodeToRemove.length>0;){const t=this._pendingNodeToRemove.length,n=this._pendingNodeToRemove[this._pendingNodeToRemove.length-1];if(this._handleImportNameNode(n,e),this._pendingNodeToRemove.length===t){c.assert(`please add handler for ${n.node.nodeType}`),this._pendingNodeToRemove.pop();const e=(0,i.getFileInfo)(n.parseFileResults.parserOutput.parseTree);this.addEdit(e.fileUri,(0,u.convertTextRangeToRange)(n.node,e.lines),"")}}}_handleImportNameNode(e,t){const n=e.node;if(38!==n.nodeType)return!1;const a=e.parseFileResults.parserOutput.parseTree,r=(0,i.getFileInfo)(a),s=(0,o.getContainingImportStatement)(l.findNodeByOffset(a,n.start),t);if(!s)return!1;const p=(0,o.getAllImportNames)(s),c=this._pendingNodeToRemove.filter((e=>p.some((t=>m.TextRange.overlapsRange(e.node,t)))));if(p.length===c.length)return this.addEdit(r.fileUri,l.getFullStatementRange(s,e.parseFileResults),""),this._removeNodesHandled(c),!0;const d=[];for(let e=0;e<p.length;e++){const t=p[e];c.some((e=>m.TextRange.overlapsRange(e.node,t)))&&d.push(e)}if(0===d.length)return!1;return(0,o.getTextRangeForImportNameDeletion)(e.parseFileResults,p,...d).forEach((e=>this.addEdit(r.fileUri,(0,u.convertTextRangeToRange)(e,r.lines),""))),this._removeNodesHandled(c),!0}_removeNodesHandled(e){e.forEach((e=>this._markNodeRemoved(e.node,e.parseFileResults))),(0,p.removeArrayElements)(this._pendingNodeToRemove,(e=>this._nodesRemoved.has(e.node)))}_markNodeRemoved(e,t){this._nodesRemoved.set(e,t),21===e.nodeType?(this._nodesRemoved.set(e.module,t),e.module.nameParts.forEach((e=>this._nodesRemoved.set(e,t))),e.alias&&this._nodesRemoved.set(e.alias,t)):23===e.nodeType&&(this._nodesRemoved.set(e.name,t),e.alias&&this._nodesRemoved.set(e.alias,t))}}},55164:(e,t)=>{var n,a,r;function s(e,t){return e.line<t.line?-1:e.line>t.line?1:e.character<t.character?-1:e.character>t.character?1:0}function i(){return{line:0,character:0}}function o(e,t){return 0===s(e,t)}function l(e){return 0===e.character&&0===e.line}function p(e,t){t&&(Array.isArray(t)?t.forEach((t=>{p(e,t)})):(s(t.start,e.start)<0&&(e.start=t.start),s(t.end,e.end)>0&&(e.end=t.end)))}Object.defineProperty(t,"__esModule",{value:!0}),t.combineRange=t.extendRange=t.isEmptyRange=t.isEmptyPosition=t.getEmptyRange=t.rangesAreEqual=t.positionsAreEqual=t.doesRangeContain=t.doRangesIntersect=t.doRangesOverlap=t.getEmptyPosition=t.comparePositions=t.Range=t.Position=t.TextRange=void 0,function(e){function t(e,t){if(e<0)throw new Error("start must be non-negative");if(t<0)throw new Error("length must be non-negative");return{start:e,length:t}}function n(e){return e.start+e.length}function a(e,t){return t>=e.start&&t<=n(e)}function r(e,t){let a=e;if(t)if(Array.isArray(t))t.forEach((e=>{a=r(a,e)}));else{t.start<a.start&&(a={start:t.start,length:a.length+a.start-t.start});const e=n(t),r=n(a);e>r&&(a={start:a.start,length:a.length+e-r})}return a}e.create=t,e.fromBounds=function(e,n){if(e<0)throw new Error("start must be non-negative");if(e>n)throw new Error("end must be greater than or equal to start");return t(e,n-e)},e.getEnd=n,e.contains=function(e,t){return t>=e.start&&t<n(e)},e.containsRange=function(e,t){return t.start>=e.start&&n(t)<=n(e)},e.overlaps=a,e.overlapsRange=function(e,t){return a(e,t.start)||a(t,e.start)},e.extend=r,e.combine=function(e){if(0===e.length)return;let t={start:e[0].start,length:e[0].length};for(let n=1;n<e.length;n++)t=r(t,e[n]);return t}}(n||(t.TextRange=n={})),function(e){e.is=function(e){const t=e;return t&&void 0!==t.line&&void 0!==t.character},e.print=function(e){return`(${e.line}:${e.character})`}}(a||(t.Position=a={})),function(e){e.is=function(e){const t=e;return t&&void 0!==t.start&&void 0!==t.end},e.print=function(e){return`${a.print(e.start)}-${a.print(e.end)}`}}(r||(t.Range=r={})),t.comparePositions=s,t.getEmptyPosition=i,t.doRangesOverlap=function(e,t){return!(s(t.start,e.end)>=0)&&!(s(e.start,t.end)>=0)},t.doRangesIntersect=function(e,t){return!(s(t.start,e.end)>0)&&!(s(e.start,t.end)>0)},t.doesRangeContain=function e(t,n){return a.is(n)?s(t.start,n)<=0&&s(t.end,n)>=0:e(t,n.start)&&e(t,n.end)},t.positionsAreEqual=o,t.rangesAreEqual=function(e,t){return o(e.start,t.start)&&o(e.end,t.end)},t.getEmptyRange=function(){return{start:{line:0,character:0},end:{line:0,character:0}}},t.isEmptyPosition=l,t.isEmptyRange=function(e){return l(e.start)&&l(e.end)},t.extendRange=p,t.combineRange=function(e){if(0===e.length)return;const t=e[0];for(let n=1;n<e.length;n++)p(t,e[n]);return t}},48256:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getIndexContaining=t.TextRangeCollection=void 0;const a=n(55164);function r(e,t){if(0===e.length)return-1;let n=0,r=e.length-1;for(;n<=r;){const i=Math.floor(n+(r-n)/2),o=s(e,i,n,r);if(void 0===o)return-1;if(a.TextRange.contains(o,t))return i;const l=s(e,i+1,i+1,r);if(void 0===l)return-1;if(i<e.length-1&&a.TextRange.getEnd(o)<=t&&t<l.start)return-1;t<o.start?r=i-1:n=i+1}return-1}function s(e,t,n,a){const r=e[t];if(r)return r;for(let n=t+1;n<=a;n++){const n=e[t];if(n)return n}for(let a=t-1;a>=n;a--){const n=e[t];if(n)return n}}t.TextRangeCollection=class{constructor(e){this._items=e}get start(){return this._items.length>0?this._items[0].start:0}get end(){const e=this._items[this._items.length-1];return this._items.length>0?e.start+e.length:0}get length(){return this.end-this.start}get count(){return this._items.length}contains(e){return e>=this.start&&e<this.end}getItemAt(e){if(e<0||e>=this._items.length)throw new Error("index is out of range");return this._items[e]}getItemAtPosition(e){if(0===this.count)return-1;if(e<this.start)return-1;if(e>this.end)return-1;let t=0,n=this.count-1;for(;t<n;){const a=Math.floor(t+(n-t)/2),r=this._items[a];if(e>=r.start&&(a>=this.count-1||e<this._items[a+1].start))return a;e<r.start?n=a-1:t=a+1}return t}getItemContaining(e){return 0===this.count||e<this.start||e>this.end?-1:r(this._items,e)}},t.getIndexContaining=r},6216:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.timingStats=t.TimingStats=t.TimingStat=t.Duration=void 0;class n{constructor(){this._startTime=Date.now()}getDurationInMilliseconds(){return Date.now()-this._startTime}getDurationInSeconds(){return this.getDurationInMilliseconds()/1e3}}t.Duration=n;class a{constructor(){this.totalTime=0,this.callCount=0,this.isTiming=!1}timeOperation(e,...t){if(this.callCount++,this.isTiming)return e(...t);{this.isTiming=!0;const a=new n,r=e(...t);return this.totalTime+=a.getDurationInMilliseconds(),this.isTiming=!1,r}}subtractFromTime(e){if(this.isTiming){this.isTiming=!1;const t=new n;e(),this.totalTime-=t.getDurationInMilliseconds(),this.isTiming=!0}else e()}printTime(){const e=this.totalTime/1e3;return(Math.round(100*e)/100).toString()+"sec"}}t.TimingStat=a;class r{constructor(){this.totalDuration=new n,this.findFilesTime=new a,this.readFileTime=new a,this.tokenizeFileTime=new a,this.parseFileTime=new a,this.resolveImportsTime=new a,this.cycleDetectionTime=new a,this.bindTime=new a,this.typeCheckerTime=new a,this.typeEvaluationTime=new a}printSummary(e){e.info(`Completed in ${this.totalDuration.getDurationInSeconds()}sec`)}printDetails(e){e.info(""),e.info("Timing stats"),e.info("Find Source Files:    "+this.findFilesTime.printTime()),e.info("Read Source Files:    "+this.readFileTime.printTime()),e.info("Tokenize:             "+this.tokenizeFileTime.printTime()),e.info("Parse:                "+this.parseFileTime.printTime()),e.info("Resolve Imports:      "+this.resolveImportsTime.printTime()),e.info("Bind:                 "+this.bindTime.printTime()),e.info("Check:                "+this.typeCheckerTime.printTime()),e.info("Detect Cycles:        "+this.cycleDetectionTime.printTime())}getTotalDuration(){return this.totalDuration.getDurationInSeconds()}}t.TimingStats=r,t.timingStats=new r},84120:function(e,t,n){var a=this&&this.__decorate||function(e,t,n,a){var r,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var o=e.length-1;o>=0;o--)(r=e[o])&&(i=(s<3?r(i):s>3?r(t,n,i):r(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.BaseUri=void 0;const r=n(28040),s=n(11699),i=n(53036);class o{constructor(e){this._key=e}get key(){return this._key}get fileNameWithoutExtensions(){const e=this.fileName,t=e.lastIndexOf(".");return t>0?e.slice(0,t):e}get packageUri(){return this.addExtension(".py")}get packageStubUri(){return this.addExtension(".pyi")}get initPyUri(){return this.combinePathsUnsafe("__init__.py")}get initPyiUri(){return this.combinePathsUnsafe("__init__.pyi")}get pytypedUri(){return this.combinePathsUnsafe("py.typed")}isEmpty(){return!1}replaceExtension(e){const t=this.getDirectory(),n=this.fileName,a=n.slice(0,n.length-this.lastExtension.length)+e;return t.combinePathsUnsafe(a)}addExtension(e){return this.addPath(e)}hasExtension(e){return this.isCaseSensitive?this.lastExtension===e:this.lastExtension.toLowerCase()===e.toLowerCase()}containsExtension(e){return this.fileName.split(/(?=\.)/g).some((t=>this.isCaseSensitive?t===e:t.toLowerCase()===e.toLowerCase()))}getRootPathLength(){return this.getRootPath().length}isUntitled(){return"untitled"===this.scheme}equals(e){return this.key===(null==e?void 0:e.key)}pathStartsWith(e){return this.getComparablePath().startsWith(e)}pathEndsWith(e){return this.getComparablePath().endsWith(e)}pathIncludes(e){return this.getComparablePath().includes(e)}getRelativePath(e){if(this.scheme===e.scheme&&e.isChild(this)){const t=this.getRelativePathComponents(e);if(t.length>0)return[".",...t].join("/")}}getPathComponents(){return Object.freeze(this.getPathComponentsImpl())}getRelativePathComponents(e){const t=this.getPathComponents(),n=e.getPathComponents();let a;for(a=0;a<t.length&&a<n.length;a++){const e=t[a],r=n[a];if(!(this.isCaseSensitive?e===r:e.toLowerCase()===r.toLowerCase()))break}if(0===a)return n;const r=n.slice(a),s=[];for(;a<t.length;a++)s.push("..");return[...s,...r]}getShortenedFileName(e=15){return(0,s.getShortenedFileName)(this.getPath(),e)}normalizeSlashes(e){return e.includes("\\")?e.replace(/\\/g,"/"):e}static combinePathElements(e,t,...n){for(const a of n)a&&(e&&0===(0,s.getRootLength)(a)?e.endsWith(t)?e+=a:e+=t+a:e=a);return e}reducePathComponents(e){if(!(0,r.some)(e))return[];const t=[e[0]];for(let n=1;n<e.length;n++){const a=e[n];if(a&&"."!==a){if(".."===a)if(t.length>1){if(".."!==t[t.length-1]){t.pop();continue}}else if(t[0])continue;t.push(a)}}return t}}t.BaseUri=o,a([(0,i.cacheProperty)()],o.prototype,"packageUri",null),a([(0,i.cacheProperty)()],o.prototype,"packageStubUri",null),a([(0,i.cacheProperty)()],o.prototype,"initPyUri",null),a([(0,i.cacheProperty)()],o.prototype,"initPyiUri",null),a([(0,i.cacheProperty)()],o.prototype,"pytypedUri",null)},20368:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConstantUri=void 0;const a=n(84120);class r extends a.BaseUri{constructor(e){super(e)}get scheme(){return""}get isCaseSensitive(){return!0}get fileName(){return""}get lastExtension(){return""}get root(){return this}get fragment(){return""}get query(){return""}equals(e){return this===e}toJsonObj(){throw new Error("constant uri can't be serialized")}toString(){return this.key}toUserVisibleString(){return""}matchesRegex(e){return!1}withFragment(e){return this}withQuery(e){return this}addPath(e){return this}getDirectory(){return this}isRoot(){return!1}isChild(e,t){return!1}isLocal(){return!1}startsWith(e,t){return!1}getPathLength(){return 0}resolvePaths(...e){return this}combinePaths(...e){return this}combinePathsUnsafe(...e){return this}getPath(){return""}getFilePath(){return""}stripExtension(){return this}stripAllExtensions(){return this}getRootPath(){return""}getComparablePath(){return""}getPathComponentsImpl(){return[]}}t.ConstantUri=r},98152:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EmptyUri=void 0;const a=n(20368),r="<empty>";class s extends a.ConstantUri{constructor(){super(r)}static get instance(){return s._instance}toJsonObj(){return{_key:r}}static isEmptyUri(e){return(null==e?void 0:e._key)===r}isEmpty(){return!0}toString(){return""}}t.EmptyUri=s,s._instance=new s},12448:function(e,t,n){var a=this&&this.__decorate||function(e,t,n,a){var r,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var o=e.length-1;o>=0;o--)(r=e[o])&&(i=(s<3?r(i):s>3?r(t,n,i):r(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.FileUri=t.FileUriSchema=void 0;const r=n(44328),s=n(86016),i=n(11699),o=n(84120),l=n(53036);t.FileUriSchema="file";class p extends o.BaseUri{constructor(e,t,n,a,r,s){super(s?e:e.toLowerCase()),this._filePath=t,this._query=n,this._fragment=a,this._originalString=r,this._isCaseSensitive=s}get scheme(){return t.FileUriSchema}get fragment(){return this._fragment}get query(){return this._query}get fileName(){return(0,i.getFileName)(this._filePath)}get lastExtension(){return(0,i.getFileExtension)(this._filePath)}get root(){const e=this.getRootPath();return e!==this._filePath?p.createFileUri(e,"","",void 0,this._isCaseSensitive):this}get isCaseSensitive(){return this._isCaseSensitive}static createFileUri(e,t,n,a,r){const s=p._createKey(e,t,n);return new p(s,e,t,n,a,r)}static isFileUri(e){return void 0!==(null==e?void 0:e._filePath)&&void 0!==(null==e?void 0:e._key)}static fromJsonObj(e){if((0,s.isArray)(e)){const t=e;return p.createFileUri(t[1],t[2],t[3],t[4],1===t[5])}return p.createFileUri(e._filePath,e._query,e._fragment,e._originalString,e._isCaseSensitive)}toJsonObj(){return[0,this._filePath,this._query,this._fragment,this._originalString,this._isCaseSensitive?1:0]}matchesRegex(e){return e.test(this._getNormalizedPath())}toString(){return this._formattedString||(this._formattedString=this._originalString||r.URI.file(this._filePath).with({query:this._query,fragment:this._fragment}).toString()),this._formattedString}toUserVisibleString(){return this._filePath}addPath(e){return p.createFileUri(this._filePath+e,"","",void 0,this._isCaseSensitive)}isRoot(){return(0,i.isDiskPathRoot)(this._filePath)}isChild(e){return!!p.isFileUri(e)&&(e._filePath.length<this._filePath.length&&this.startsWith(e))}isLocal(){return!0}startsWith(e){if((null==e?void 0:e.scheme)!==this.scheme)return!1;const t=e;if(this._filePath.length>=t._filePath.length){const e=this._filePath.length>t._filePath.length&&!(0,i.hasTrailingDirectorySeparator)(t._filePath)?(0,i.ensureTrailingDirectorySeparator)(t._filePath):t._filePath;return this.isCaseSensitive?this._filePath.startsWith(e):this._filePath.toLowerCase().startsWith(e.toLowerCase())}return!1}getPathLength(){return this._filePath.length}getPath(){return this._getNormalizedPath()}getFilePath(){return this._filePath}resolvePaths(...e){let t=(0,i.resolvePaths)(this._filePath,...e);return(0,i.hasTrailingDirectorySeparator)(t)&&t.length>1&&(t=t.slice(0,t.length-1)),t!==this._filePath?p.createFileUri(t,"","",void 0,this._isCaseSensitive):this}combinePaths(...e){return e.some((e=>e.includes("..")||e.includes(p._separator)||e.includes("/")||"."===e))?this.resolvePaths(...e):this.combinePathsUnsafe(...e)}combinePathsUnsafe(...e){const t=o.BaseUri.combinePathElements(this._filePath,p._separator,...e);return t!==this._filePath?p.createFileUri(t,"","",void 0,this._isCaseSensitive):this}getDirectory(){const e=this._filePath;let t=(0,i.getDirectoryPath)(e);return(0,i.hasTrailingDirectorySeparator)(t)&&t.length>1&&(t=t.slice(0,-1)),t!==e?p.createFileUri(t,"","",void 0,this._isCaseSensitive):this}withFragment(e){return p.createFileUri(this._filePath,this._query,e,void 0,this._isCaseSensitive)}withQuery(e){return p.createFileUri(this._filePath,e,this._fragment,void 0,this._isCaseSensitive)}stripExtension(){const e=(0,i.stripFileExtension)(this._filePath);return e!==this._filePath?p.createFileUri(e,this._query,this._fragment,void 0,this._isCaseSensitive):this}stripAllExtensions(){const e=(0,i.stripFileExtension)(this._filePath,!0);return e!==this._filePath?p.createFileUri(e,this._query,this._fragment,void 0,this._isCaseSensitive):this}getPathComponentsImpl(){const e=(0,i.getPathComponents)(this._filePath);return e.length>0&&""===e[0]&&e.shift(),e.map((e=>this.normalizeSlashes(e)))}getRootPath(){return this._filePath.slice(0,(0,i.getRootLength)(this._filePath))}getComparablePath(){return this._getNormalizedPath()}static _createKey(e,t,n){return`${e}${t?"?"+t:""}${n?"#"+n:""}`}_getNormalizedPath(){return void 0===this._normalizedPath&&(this._normalizedPath=this.normalizeSlashes(this._filePath)),this._normalizedPath}}t.FileUri=p,p._separator=(0,i.getPathSeparator)(""),a([(0,l.cacheProperty)()],p.prototype,"fileName",null),a([(0,l.cacheProperty)()],p.prototype,"lastExtension",null),a([(0,l.cacheProperty)()],p.prototype,"root",null),a([(0,l.cacheMethodWithNoArgs)()],p.prototype,"getDirectory",null),a([(0,l.cacheStaticFunc)()],p,"createFileUri",null)},53036:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.cacheStaticFunc=t.cacheMethodWithNoArgs=t.cacheProperty=void 0;const n=new Map;t.cacheProperty=function(){return function(e,t,n){const a=n.get;return n.get=function(...e){const n=a.apply(this,e);return Object.defineProperty(this,t,{get:()=>n}),n},n}},t.cacheMethodWithNoArgs=function(){return function(e,t,n){const a=n.value;return n.value=function(...e){const n=a.apply(this,e);return this[t]=()=>n,n},n}},t.cacheStaticFunc=function(){return function(e,t,a){const r=a.value;return a.value=function(...e){const a=`${t}+${null==e?void 0:e.map((e=>null==e?void 0:e.toString())).join(",")}`;let s;return n.has(a)?s=n.get(a):(s=r.apply(this,e),n.set(a,s)),s},a}}},55084:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Uri=void 0;const a=n(44328),r=n(45228),s=n(86016),i=n(11699),o=n(37636),l=n(20368),p=n(98152),c=n(12448),d=n(41536);function u(e){let t;return t=e.authority&&"/"===e.path[0]&&1===e.path.length?`//${e.authority}${e.path}`:e.fsPath,t.match(/^\/[a-zA-Z]:\//)&&(t=t.slice(1)),"win32"===(null===process||void 0===process?void 0:process.platform)&&(t=t.replace(/\//g,"\\")),t}function m(e){const t=a.URI.isUri(e)?e:a.URI.parse(e),n=t.path.length>0?a.Utils.resolvePath(t):t,r=n.toString();return{uri:n,str:r}}var y;!function(e){e.file=function(e,t,n=!1){t=r.CaseSensitivityDetector.is(t)?t:t.get(o.ServiceKeys.caseSensitivityDetector);const s=(e=n&&!(0,i.isRootedDiskPath)(e)?(0,i.combinePaths)(process.cwd(),e):e).startsWith("file:")?m(e):m(a.URI.file((0,i.normalizeSlashes)(e)));return c.FileUri.createFileUri(u(s.uri),s.uri.query,s.uri.fragment,s.str,t.isCaseSensitive(s.str))},e.parse=function(t,n){if(!t)return e.empty();n=r.CaseSensitivityDetector.is(n)?n:n.get(o.ServiceKeys.caseSensitivityDetector);const a=m(t);return a.uri.scheme===c.FileUriSchema?c.FileUri.createFileUri(u(a.uri),a.uri.query,a.uri.fragment,a.str,n.isCaseSensitive(a.str)):d.WebUri.createWebUri(a.uri.scheme,a.uri.authority,a.uri.path,a.uri.query,a.uri.fragment,a.str)},e.constant=function(e){return new l.ConstantUri(e)},e.empty=function(){return p.EmptyUri.instance},e.DefaultWorkspaceRootComponent="<default workspace root>",e.DefaultWorkspaceRootPath=`/${e.DefaultWorkspaceRootComponent}`,e.defaultWorkspace=function(t){return t=r.CaseSensitivityDetector.is(t)?t:t.get(o.ServiceKeys.caseSensitivityDetector),e.file(e.DefaultWorkspaceRootPath,t)},e.fromJsonObj=function(e){return(0,s.isArray)(e)&&0===e[0]||c.FileUri.isFileUri(e)?c.FileUri.fromJsonObj(e):d.WebUri.isWebUri(e)?d.WebUri.fromJsonObj(e):p.EmptyUri.isEmptyUri(e)?p.EmptyUri.instance:e},e.is=function(e){return!!e&&"string"==typeof e._key}}(y||(t.Uri=y={}))},80636:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UriEx=t.encodeUri=t.getRootUri=t.deduplicateFolders=t.getDirectoryChangeKind=t.getFileSpec=t.hasPythonExtension=t.getWildcardRoot=t.getWildcardRegexPattern=t.getFileSystemEntriesFromDirEntries=t.getFileSystemEntries=t.tryRealpath=t.tryStat=t.isFile=t.isDirectory=t.directoryExists=t.fileExists=t.getFileSize=t.makeDirectories=t.forEachAncestorDirectory=t.FileSpec=void 0;const a=n(11699),r=n(55084),s=n(37636),i=n(45228),o=/\.pyi?$/;var l,p;function c(e,t){try{if(e.existsSync(t))return e.statSync(t)}catch(e){return}}function d(e,t,n){const a=e.sort(((e,t)=>e.name<t.name?-1:e.name>t.name?1:0)),r=[],s=[];for(const e of a){if("."===e.name||".."===e.name)continue;const a=n.combinePaths(e.name);if(e.isFile())r.push(a);else if(e.isDirectory())s.push(a);else if(e.isSymbolicLink()){const e=c(t,a);(null==e?void 0:e.isFile())?r.push(a):(null==e?void 0:e.isDirectory())&&s.push(a)}}return{files:r,directories:s}}function u(e,t){const n=e.resolvePaths(t),r=Array.from(n.getPathComponents()),s=(0,a.getRegexEscapedSeparator)("/"),i=`(${s}[^${s}][^${s}]*)*?`,o=new RegExp(`[^\\w\\s${s}]`,"g");r.length>0&&(r[0]=(0,a.stripTrailingDirectorySeparator)(r[0]));let l="",p=!0;for(let e of r)"**"===e?l+=i:(p||(e=s+e),l+=e.replace(o,(e=>"*"===e?`[^${s}]*`:"?"===e?`[^${s}]`:"\\"+e)),p=!1);return l}function m(e,t){const n=e.resolvePaths(t),a=Array.from(n.getPathComponents());let r=n.root;a.length>0&&a.shift();for(const e of a){if("**"===e)break;if(/[*?]/.test(e))break;r=r.resolvePaths(e)}return r}function y(e,t,n){try{const a=e.statSync(t);switch(n){case 0:return a.isFile();case 1:return a.isDirectory();default:return!1}}catch(e){return!1}}!function(e){e.is=function(e){const t=e;return t&&!!t.wildcardRoot&&!!t.regExp},e.isInPath=function(e,t){return!!t.find((t=>e.matchesRegex(t.regExp)))},e.matchesIncludeFileRegex=function(e,t=!0){return!t||e.matchesRegex(o)},e.matchIncludeFileSpec=function(t,n,a,r=!0){return!(!a.matchesRegex(t)||e.isInPath(a,n)||!e.matchesIncludeFileRegex(a,r))}}(l||(t.FileSpec=l={})),t.forEachAncestorDirectory=function(e,t){for(;;){const n=t(e);if(void 0!==n)return n;const a=e.getDirectory();if(a.equals(e))return;e=a}},t.makeDirectories=function(e,t,n){if(!t.startsWith(n))return;const a=t.getPathComponents(),r=n.getPathComponents();let s=n;for(let t=r.length;t<a.length;t++)s=s.combinePaths(a[t]),e.existsSync(s)||e.mkdirSync(s)},t.getFileSize=function(e,t){const n=c(e,t);return(null==n?void 0:n.isFile())?n.size:0},t.fileExists=function(e,t){return y(e,t,0)},t.directoryExists=function(e,t){return y(e,t,1)},t.isDirectory=function(e,t){var n,a;return null!==(a=null===(n=c(e,t))||void 0===n?void 0:n.isDirectory())&&void 0!==a&&a},t.isFile=function(e,t,n=!1){var a,r;const s=c(e,t);return!!(null==s?void 0:s.isFile())||!!n&&(null!==(r=null===(a=null==s?void 0:s.isZipDirectory)||void 0===a?void 0:a.call(s))&&void 0!==r&&r)},t.tryStat=c,t.tryRealpath=function(e,t){try{return e.realCasePath(t)}catch(e){return}},t.getFileSystemEntries=function(e,t){try{return d(e.readdirEntriesSync(t),e,t)}catch(e){return{files:[],directories:[]}}},t.getFileSystemEntriesFromDirEntries=d,t.getWildcardRegexPattern=u,t.getWildcardRoot=m,t.hasPythonExtension=function(e){return e.hasExtension(".py")||e.hasExtension(".pyi")},t.getFileSpec=function(e,t){let n=u(e,t);n=`^(${n})($|${(0,a.getRegexEscapedSeparator)("/")})`;const r=new RegExp(n,e.isCaseSensitive?void 0:"i");return{wildcardRoot:m(e,t),regExp:r,hasDirectoryWildcard:(0,a.isDirectoryWildcardPatternPresent)(t)}},t.getDirectoryChangeKind=function(e,t,n){if(t.equals(n))return"Same";const a=t.getRelativePathComponents(n);return 2===a.length&&".."===a[0]&&".."!==a[1]?"Renamed":"Moved"},t.deduplicateFolders=function(e){const t=new Map;return e.forEach((e=>{e.forEach((e=>{if(!t.has(e.key)){for(const n of t){if(e.startsWith(n[1]))return;if(n[1].startsWith(e))return t.delete(n[0]),void t.set(e.key,e)}t.set(e.key,e)}}))})),[...t.values()]},t.getRootUri=function(e){if(e=i.CaseSensitivityDetector.is(e)?e:e.get(s.ServiceKeys.caseSensitivityDetector),global.__rootDirectory)return r.Uri.file(global.__rootDirectory,e)},t.encodeUri=function(e,t){return e.getOriginalUri(t).toString()},function(e){e.file=function(e,t,n){const s=a(t);return r.Uri.file(e,s,n)},e.parse=function(e,t){const n=a(t);return r.Uri.parse(e,n)};const t={isCaseSensitive:()=>!0},n={isCaseSensitive:()=>!1};function a(e){return void 0===e||e?t:n}}(p||(t.UriEx=p={}))},41536:function(e,t,n){var a=this&&this.__decorate||function(e,t,n,a){var r,s=arguments.length,i=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var o=e.length-1;o>=0;o--)(r=e[o])&&(i=(s<3?r(i):s>3?r(t,n,i):r(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.WebUri=void 0;const r=n(11699),s=n(84120),i=n(53036),o=n(44328);class l extends s.BaseUri{constructor(e,t,n,a,r,s,i){super(e),this._scheme=t,this._authority=n,this._path=a,this._query=r,this._fragment=s,this._originalString=i}get scheme(){return this._scheme}get isCaseSensitive(){return!0}get fragment(){return this._fragment}get query(){return this._query}get root(){const e=this.getRootPath();return e!==this._path?l.createWebUri(this._scheme,this._authority,e,"","",void 0):this}get fileName(){const e=this._path.split("/");return e[e.length-1]}get lastExtension(){const e=this.fileName,t=e.lastIndexOf(".");return t>=0?e.slice(t):""}static createWebUri(e,t,n,a,r,s){const i=l._createKey(e,t,n,a,r);return new l(i,e,t,n,a,r,s)}toString(){if(!this._originalString){const e=o.URI.revive({scheme:this._scheme,authority:this._authority,path:this._path,query:this._query,fragment:this._fragment});this._originalString=e.toString()}return this._originalString}toUserVisibleString(){return this.toString()}static isWebUri(e){return void 0!==(null==e?void 0:e._scheme)&&void 0!==(null==e?void 0:e._key)}static fromJsonObj(e){return l.createWebUri(e._scheme,e._authority,e._path,e._query,e._fragment,e._originalString)}toJsonObj(){return{_scheme:this._scheme,_authority:this._authority,_path:this._path,_query:this._query,_fragment:this._fragment,_originalString:this._originalString,_key:this.key}}matchesRegex(e){return e.test(this._path)}addPath(e){const t=this._path+e;return l.createWebUri(this._scheme,this._authority,t,this._query,this._fragment,void 0)}isRoot(){return this._path===this.getRootPath()&&this._path.length>0}isChild(e){return!!l.isWebUri(e)&&(e._path.length<this._path.length&&this.startsWith(e))}isLocal(){return!1}startsWith(e){if((null==e?void 0:e.scheme)!==this.scheme)return!1;const t=e;if(this._path.length>=t._path.length){const e=this._path.length>t._path.length&&!(0,r.hasTrailingDirectorySeparator)(t._path)?`${t._path}/`:t._path;return this._path.startsWith(e)}return!1}getPathLength(){return this._path.length}getPath(){return this._path}getFilePath(){return""}resolvePaths(...e){let t=this.normalizeSlashes((0,r.resolvePaths)(this._path,...e));return(0,r.hasTrailingDirectorySeparator)(t)&&t.length>1&&(t=t.slice(0,t.length-1)),t!==this._path?l.createWebUri(this._scheme,this._authority,t,"","",void 0):this}combinePaths(...e){return e.some((e=>e.includes("..")||e.includes("/")||"."===e))?this.resolvePaths(...e):this.combinePathsUnsafe(...e)}combinePathsUnsafe(...e){const t=s.BaseUri.combinePathElements(this._path,"/",...e);return t!==this._path?l.createWebUri(this._scheme,this._authority,t,"","",void 0):this}getDirectory(){if(0===this._path.length)return this;const e=this._path.lastIndexOf("/"),t=e>0?this._path.slice(0,e):0===e?"/":"";return l.createWebUri(this._scheme,this._authority,t,this._query,this._fragment,void 0)}withFragment(e){return l.createWebUri(this._scheme,this._authority,this._path,this._query,e,void 0)}withQuery(e){return l.createWebUri(this._scheme,this._authority,this._path,e,this._fragment,void 0)}stripExtension(){const e=this._path,t=e.lastIndexOf(".");return t>0?l.createWebUri(this._scheme,this._authority,e.slice(0,t),this._query,this._fragment,void 0):this}stripAllExtensions(){const e=this._path,t=e.lastIndexOf("/"),n=e.indexOf(".",t>0?t:0);return n>0?l.createWebUri(this._scheme,this._authority,e.slice(0,n),this._query,this._fragment,void 0):this}getPathComponentsImpl(){const e=this.getRootPath(),t=this._path.slice(e.length).split("/");return this.reducePathComponents([e,...t]).map((e=>this.normalizeSlashes(e)))}getRootPath(){const e=(0,r.getRootLength)(this._path,"/");return this._path.slice(0,e)}getComparablePath(){return this._path}static _createKey(e,t,n,a,r){return`${e}:${t}${n}${a?"?"+a:""}${r?"#"+r:""}`}}t.WebUri=l,a([(0,i.cacheProperty)()],l.prototype,"root",null),a([(0,i.cacheProperty)()],l.prototype,"fileName",null),a([(0,i.cacheProperty)()],l.prototype,"lastExtension",null),a([(0,i.cacheMethodWithNoArgs)()],l.prototype,"getDirectory",null),a([(0,i.cacheStaticFunc)()],l,"createWebUri",null)},62164:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.generateWorkspaceEdit=t.applyDocumentChanges=t.applyWorkspaceEdit=t.applyTextEditsToString=t.appendToWorkspaceEdit=t.convertToWorkspaceEdit=t.convertToFileTextEdits=t.convertToTextEdits=void 0;const a=n(65872),r=n(15684),s=n(28040),i=n(86016),o=n(83181),l=n(96193),p=n(55164),c=n(55084),d=n(80636);function u(e,t,n){t.forEach((t=>{const a=(0,d.encodeUri)(e,t.fileUri);n.changes[a]=n.changes[a]||[],n.changes[a].push({range:t.range,newText:t.replacementText})}))}function m(e,t,n){var a,s,i,o;if(!t.isOpenByClient){const n=t.sourceFile.getFileContent();e.setFileOpened(t.sourceFile.getUri(),0,null!=n?n:"",{isTracked:t.isTracked,ipythonMode:t.sourceFile.getIPythonMode(),chainedFileUri:null===(a=t.chainedSourceFile)||void 0===a?void 0:a.sourceFile.getUri()})}const l=null!==(s=t.sourceFile.getClientVersion())&&void 0!==s?s:0,p=t.sourceFile.getUri(),c=p.getFilePath(),d=r.TextDocument.create(c,"python",l,null!==(i=t.sourceFile.getOpenFileContents())&&void 0!==i?i:"");e.setFileOpened(p,l+1,r.TextDocument.applyEdits(d,n),{isTracked:t.isTracked,ipythonMode:t.sourceFile.getIPythonMode(),chainedFileUri:null===(o=t.chainedSourceFile)||void 0===o?void 0:o.sourceFile.getUri()})}t.convertToTextEdits=function(e){return e.map((e=>({range:e.range,newText:e.replacementText})))},t.convertToFileTextEdits=function(e,t){return t.map((t=>({fileUri:e,...t})))},t.convertToWorkspaceEdit=function(e,t,n,r="default"){return(0,i.isArray)(t)?function(e,t){const n={changes:{}};return u(e,t,n),n}(e,t):function(e,t,n,r="default"){const i={documentChanges:[],changeAnnotations:n};for(const n of t.fileOperations)switch(n.kind){case"create":i.documentChanges.push(a.CreateFile.create((0,d.encodeUri)(e,n.fileUri),void 0,r));break;case"rename":case"delete":break;default:(0,o.assertNever)(n)}const l=(0,s.createMapFromItems)(t.edits,(t=>(0,d.encodeUri)(e,t.fileUri)));for(const[e,t]of l)i.documentChanges.push(a.TextDocumentEdit.create({uri:e,version:null},Array.from(t.map((e=>({range:e.range,newText:e.replacementText,annotationId:r}))))));for(const n of t.fileOperations)switch(n.kind){case"create":break;case"rename":i.documentChanges.push(a.RenameFile.create((0,d.encodeUri)(e,n.oldFileUri),(0,d.encodeUri)(e,n.newFileUri),void 0,r));break;case"delete":i.documentChanges.push(a.DeleteFile.create((0,d.encodeUri)(e,n.fileUri),void 0,r));break;default:(0,o.assertNever)(n)}return i}(e,t,n,r)},t.appendToWorkspaceEdit=u,t.applyTextEditsToString=function(e,t,n){const a=e.map((e=>{var a;return{range:null!==(a=(0,l.convertRangeToTextRange)(e.range,t))&&void 0!==a?a:{start:n.length,length:0},text:e.replacementText}})).sort(((e,t)=>{const n=t.range.start-e.range.start;return 0!==n?n:p.TextRange.getEnd(t.range)-p.TextRange.getEnd(e.range)}));let r=n;for(const e of a)r=r.substr(0,e.range.start)+e.text+r.substr(p.TextRange.getEnd(e.range));return r},t.applyWorkspaceEdit=function(e,t,n){if(t.changes)for(const a of Object.entries(t.changes)){const t=c.Uri.parse(a[0],e.serviceProvider),r=e.getSourceFileInfo(t);r&&r.isTracked&&(m(e,r,a[1]),n.set(t.key,t))}if(t.documentChanges)for(const r of t.documentChanges)if(a.TextDocumentEdit.is(r)){const t=c.Uri.parse(r.textDocument.uri,e.serviceProvider),s=e.getSourceFileInfo(t);if(!s||!s.isTracked)continue;m(e,s,r.edits.filter((e=>a.TextEdit.is(e)))),n.set(t.key,t)}},t.applyDocumentChanges=m,t.generateWorkspaceEdit=function(e,t,n,a){var r;const s={changes:{}};for(const i of a.values()){const a=t.backgroundAnalysisProgram.program.getBoundSourceFile(i),o=n.backgroundAnalysisProgram.program.getBoundSourceFile(i);if(!a||!o)continue;const p=a.getParseResults();p&&(s.changes[(0,d.encodeUri)(e,i)]=[{range:(0,l.convertTextRangeToRange)(p.parserOutput.parseTree,p.tokenizerOutput.lines),newText:null!==(r=o.getFileContent())&&void 0!==r?r:""}])}return s}},35016:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LanguageServerBase=t.VSDiagnosticRank=t.VSDiagnosticTag=void 0,n(44908);const a=n(65872),r=n(52240),s=n(15684),i=n(95156),o=n(19016),l=n(41500),p=n(63548),c=n(64704),d=n(28040),u=n(52996),m=n(55484),y=n(57508),g=n(72484),h=n(66112),f=n(3948),T=n(37636),v=n(55084),b=n(80636),_=n(24712),C=n(38796),I=n(94576),k=n(46772),w=n(92544),S=n(72952),A=n(58184),x=n(8560),P=n(67192),N=n(3784),D=n(85759),F=n(82096),E=n(95960),M=n(20840),O=(0,r.attachWorkDone)(void 0,void 0);var z,V;!function(e){e.BuildError=-1,e.IntellisenseError=-2,e.PotentialDuplicate=-3,e.HiddenInErrorList=-4,e.VisibleInErrorList=-5,e.HiddenInEditor=-6,e.SuppressEditorToolTip=-7,e.EditAndContinueError=-8,e.TaskItem=-9}(z||(t.VSDiagnosticTag=z={})),function(e){e.Highest=100,e.High=200,e.Default=300,e.Low=400,e.Lowest=500}(V||(t.VSDiagnosticRank=V={}));t.LanguageServerBase=class{constructor(e,t){var n,r;this.serverOptions=e,this.connection=t,this._lastTriggerKind=a.CompletionTriggerKind.Invoked,this._initialized=!1,this.client={hasConfigurationCapability:!1,hasVisualStudioExtensionsCapability:!1,hasWorkspaceFoldersCapability:!1,hasWatchFileCapability:!1,hasWatchFileRelativePathCapability:!1,hasActiveParameterCapability:!1,hasSignatureLabelOffsetCapability:!1,hasHierarchicalDocumentSymbolCapability:!1,hasWindowProgressCapability:!1,hasGoToDeclarationCapability:!1,hasDocumentChangeCapability:!1,hasDocumentAnnotationCapability:!1,hasCompletionCommitCharCapability:!1,hoverContentFormat:a.MarkupKind.PlainText,completionDocFormat:a.MarkupKind.PlainText,completionSupportsSnippet:!1,signatureDocFormat:a.MarkupKind.PlainText,supportsDeprecatedDiagnosticTag:!1,supportsUnnecessaryDiagnosticTag:!1,supportsTaskItemDiagnosticTag:!1,completionItemResolveSupportsAdditionalTextEdits:!1},this.openFileMap=new Map,this.documentsWithDiagnostics=new Set,global.__rootDirectory=e.rootDirectory.getFilePath(),this.console.info(`${e.productName} language server ${e.version&&e.version+" "}starting`),this.console.info(`Server root directory: ${e.rootDirectory}`),this.fs=this.serverOptions.serviceProvider.fs(),this.caseSensitiveDetector=this.serverOptions.serviceProvider.get(T.ServiceKeys.caseSensitivityDetector),this.workspaceFactory=new M.WorkspaceFactory(this.console,!1,this.createAnalyzerServiceForWorkspace.bind(this),this.isPythonPathImmutable.bind(this),this.onWorkspaceCreated.bind(this),this.onWorkspaceRemoved.bind(this),this.serviceProvider);const s=this.fs.getModulePath();s&&this.fs.existsSync(s)&&this.fs.chdir(s),this.setupConnection(null!==(n=e.supportedCommands)&&void 0!==n?n:[],null!==(r=e.supportedCodeActions)&&void 0!==r?r:[]),this._progressReporter=new f.ProgressReportTracker(this.createProgressReporter()),this.connection.listen()}get console(){return this.serverOptions.serviceProvider.console()}get window(){return this.connection.window}get supportAdvancedEdits(){return this.client.hasDocumentChangeCapability&&this.client.hasDocumentAnnotationCapability}get serviceProvider(){return this.serverOptions.serviceProvider}dispose(){var e;this.workspaceFactory.clear(),this.openFileMap.clear(),null===(e=this._workspaceFoldersChangedDisposable)||void 0===e||e.dispose()}createAnalyzerService(e,t,n){var a;this.console.info(`Starting service instance "${e}"`);const r=(0,o.getNextServiceId)(e),s=new o.AnalyzerService(e,this.serverOptions.serviceProvider,{console:this.console,hostFactory:this.createHost.bind(this),importResolverFactory:this.createImportResolver.bind(this),backgroundAnalysis:t?t.backgroundAnalysis:this.createBackgroundAnalysis(r),maxAnalysisTime:this.serverOptions.maxAnalysisTimeInForeground,backgroundAnalysisProgramFactory:this.createBackgroundAnalysisProgram.bind(this),cancellationProvider:this.serverOptions.cancellationProvider,libraryReanalysisTimeProvider:n,serviceId:r,fileSystem:null!==(a=null==t?void 0:t.fs)&&void 0!==a?a:this.serverOptions.serviceProvider.fs()});return s.setCompletionCallback((e=>this.onAnalysisCompletedHandler(s.fs,e))),s}async getWorkspaces(){const e=[...this.workspaceFactory.items()];for(const t of e)await t.isInitialized.promise;return e}async getWorkspaceForFile(e,t){return this.workspaceFactory.getWorkspaceForFile(e,t)}async getContainingWorkspacesForFile(e){return this.workspaceFactory.getContainingWorkspacesForFile(e)}reanalyze(){this.workspaceFactory.items().forEach((e=>{e.service.invalidateAndForceReanalysis(i.InvalidatedReason.Reanalyzed)}))}restart(){this.workspaceFactory.items().forEach((e=>{e.service.restart()}))}updateSettingsForAllWorkspaces(){const e=[];this.workspaceFactory.items().forEach((t=>{t.isInitialized=t.isInitialized.reset(),e.push(this.updateSettingsForWorkspace(t,t.isInitialized))})),Promise.all(e).then((()=>{this._setupFileWatcher()}))}async updateSettingsForWorkspace(e,t,n){var a;null==t||t.markCalled(),n=null!=n?n:await this.getSettings(e),this.console.level=null!==(a=n.logLevel)&&void 0!==a?a:y.LogLevel.Info,n.pythonPath=this.workspaceFactory.applyPythonPath(e,n.pythonPath?n.pythonPath:void 0),this.updateOptionsAndRestartService(e,n),e.disableLanguageServices=!!n.disableLanguageServices,e.disableTaggedHints=!!n.disableTaggedHints,e.disableOrganizeImports=!!n.disableOrganizeImports,null==t||t.resolve()}updateOptionsAndRestartService(e,t,n){var a;_.AnalyzerServiceExecutor.runWithOptions(e,t,n),e.searchPathsToWatch=null!==(a=e.service.librarySearchUrisToWatch)&&void 0!==a?a:[]}isPythonPathImmutable(e){return!1}async getConfiguration(e,t){if(this.client.hasConfigurationCapability){const n={};return void 0!==e&&(n.scopeUri=e.toString()),void 0!==t&&(n.section=t),this.connection.workspace.getConfiguration(n)}if(this.defaultClientConfig)return(0,d.getNestedProperty)(this.defaultClientConfig,t)}isOpenFilesOnly(e){return"workspace"!==e}getSeverityOverrides(e){const t=(0,m.parseDiagLevel)(e);if(t)return(0,u.getDiagnosticSeverityOverrides)().includes(t)?t:void 0}getDiagnosticRuleName(e){const t=e;if((0,m.getDiagLevelDiagnosticRules)().includes(t))return t}createBackgroundAnalysisProgram(e,t,n,a,r,s){return new i.BackgroundAnalysisProgram(e,t,n,a,r,s,void 0)}setupConnection(e,t){this.connection.onInitialize((n=>this.initialize(n,e,t))),this.connection.onInitialized((()=>this.onInitialized())),this.connection.onDidChangeConfiguration((e=>this.onDidChangeConfiguration(e))),this.connection.onCodeAction(((e,t)=>this.executeCodeAction(e,t))),this.connection.onDefinition((async(e,t)=>this.onDefinition(e,t))),this.connection.onDeclaration((async(e,t)=>this.onDeclaration(e,t))),this.connection.onTypeDefinition((async(e,t)=>this.onTypeDefinition(e,t))),this.connection.onReferences((async(e,t,n,a)=>this.onReferences(e,t,n,a))),this.connection.onDocumentSymbol((async(e,t)=>this.onDocumentSymbol(e,t))),this.connection.onWorkspaceSymbol((async(e,t,n,a)=>this.onWorkspaceSymbol(e,t,a))),this.connection.onHover((async(e,t)=>this.onHover(e,t))),this.connection.onDocumentHighlight((async(e,t)=>this.onDocumentHighlight(e,t))),this.connection.onSignatureHelp((async(e,t)=>this.onSignatureHelp(e,t))),this.connection.onCompletion(((e,t)=>this.onCompletion(e,t))),this.connection.onCompletionResolve((async(e,t)=>this.onCompletionResolve(e,t))),this.connection.onPrepareRename((async(e,t)=>this.onPrepareRenameRequest(e,t))),this.connection.onRenameRequest((async(e,t)=>this.onRenameRequest(e,t)));const n=this.connection.languages.callHierarchy;n.onPrepare((async(e,t)=>this.onCallHierarchyPrepare(e,t))),n.onIncomingCalls((async(e,t)=>this.onCallHierarchyIncomingCalls(e,t))),n.onOutgoingCalls((async(e,t)=>this.onCallHierarchyOutgoingCalls(e,t))),this.connection.onDidOpenTextDocument((async e=>this.onDidOpenTextDocument(e))),this.connection.onDidChangeTextDocument((async e=>this.onDidChangeTextDocument(e))),this.connection.onDidCloseTextDocument((async e=>this.onDidCloseTextDocument(e))),this.connection.onDidChangeWatchedFiles((e=>this.onDidChangeWatchedFiles(e))),this.connection.onExecuteCommand((async(e,t,n)=>this.onExecuteCommand(e,t,n))),this.connection.onShutdown((async e=>this.onShutdown(e)))}initialize(e,t,n){var r,s,i,o,l,p,c,d,u,m,y,g,h,f,T,v,b,_,C,I,k,w,S,A,x,P,N,D,F,M,O,z,V,U,R,L,j,B,q,W,G,K,$,H;e.locale&&(0,E.setLocaleOverride)(e.locale);const Z=e.capabilities;this.client.hasConfigurationCapability=!!(null===(r=Z.workspace)||void 0===r?void 0:r.configuration),this.client.hasWatchFileCapability=!!(null===(i=null===(s=Z.workspace)||void 0===s?void 0:s.didChangeWatchedFiles)||void 0===i?void 0:i.dynamicRegistration),this.client.hasWatchFileRelativePathCapability=!!(null===(l=null===(o=Z.workspace)||void 0===o?void 0:o.didChangeWatchedFiles)||void 0===l?void 0:l.relativePatternSupport),this.client.hasWorkspaceFoldersCapability=!!(null===(p=Z.workspace)||void 0===p?void 0:p.workspaceFolders),this.client.hasVisualStudioExtensionsCapability=!!Z._vs_supportsVisualStudioExtensions,this.client.hasActiveParameterCapability=!!(null===(u=null===(d=null===(c=Z.textDocument)||void 0===c?void 0:c.signatureHelp)||void 0===d?void 0:d.signatureInformation)||void 0===u?void 0:u.activeParameterSupport),this.client.hasSignatureLabelOffsetCapability=!!(null===(h=null===(g=null===(y=null===(m=Z.textDocument)||void 0===m?void 0:m.signatureHelp)||void 0===y?void 0:y.signatureInformation)||void 0===g?void 0:g.parameterInformation)||void 0===h?void 0:h.labelOffsetSupport),this.client.hasHierarchicalDocumentSymbolCapability=!!(null===(T=null===(f=Z.textDocument)||void 0===f?void 0:f.documentSymbol)||void 0===T?void 0:T.hierarchicalDocumentSymbolSupport),this.client.hasDocumentChangeCapability=!!(null===(b=null===(v=Z.workspace)||void 0===v?void 0:v.workspaceEdit)||void 0===b?void 0:b.documentChanges)&&!!(null===(_=Z.workspace.workspaceEdit)||void 0===_?void 0:_.resourceOperations),this.client.hasDocumentAnnotationCapability=!!(null===(I=null===(C=Z.workspace)||void 0===C?void 0:C.workspaceEdit)||void 0===I?void 0:I.changeAnnotationSupport),this.client.hasCompletionCommitCharCapability=!!(null===(S=null===(w=null===(k=Z.textDocument)||void 0===k?void 0:k.completion)||void 0===w?void 0:w.completionList)||void 0===S?void 0:S.itemDefaults)&&!!(null===(A=Z.textDocument.completion.completionItem)||void 0===A?void 0:A.commitCharactersSupport),this.client.hoverContentFormat=this._getCompatibleMarkupKind(null===(P=null===(x=Z.textDocument)||void 0===x?void 0:x.hover)||void 0===P?void 0:P.contentFormat),this.client.completionDocFormat=this._getCompatibleMarkupKind(null===(F=null===(D=null===(N=Z.textDocument)||void 0===N?void 0:N.completion)||void 0===D?void 0:D.completionItem)||void 0===F?void 0:F.documentationFormat),this.client.completionSupportsSnippet=!!(null===(z=null===(O=null===(M=Z.textDocument)||void 0===M?void 0:M.completion)||void 0===O?void 0:O.completionItem)||void 0===z?void 0:z.snippetSupport),this.client.signatureDocFormat=this._getCompatibleMarkupKind(null===(R=null===(U=null===(V=Z.textDocument)||void 0===V?void 0:V.signatureHelp)||void 0===U?void 0:U.signatureInformation)||void 0===R?void 0:R.documentationFormat);const Y=(null===(B=null===(j=null===(L=Z.textDocument)||void 0===L?void 0:L.publishDiagnostics)||void 0===j?void 0:j.tagSupport)||void 0===B?void 0:B.valueSet)||[];this.client.supportsUnnecessaryDiagnosticTag=Y.some((e=>e===a.DiagnosticTag.Unnecessary)),this.client.supportsDeprecatedDiagnosticTag=Y.some((e=>e===a.DiagnosticTag.Deprecated)),this.client.supportsTaskItemDiagnosticTag=this.client.hasVisualStudioExtensionsCapability,this.client.hasWindowProgressCapability=!!(null===(q=Z.window)||void 0===q?void 0:q.workDoneProgress),this.client.hasGoToDeclarationCapability=!!(null===(W=Z.textDocument)||void 0===W?void 0:W.declaration),this.client.completionItemResolveSupportsAdditionalTextEdits=!!(null===(H=null===($=null===(K=null===(G=Z.textDocument)||void 0===G?void 0:G.completion)||void 0===K?void 0:K.completionItem)||void 0===$?void 0:$.resolveSupport)||void 0===H?void 0:H.properties.some((e=>"additionalTextEdits"===e))),this.workspaceFactory.handleInitialize(e);return{capabilities:{textDocumentSync:a.TextDocumentSyncKind.Incremental,definitionProvider:{workDoneProgress:!0},declarationProvider:{workDoneProgress:!0},typeDefinitionProvider:{workDoneProgress:!0},referencesProvider:{workDoneProgress:!0},documentSymbolProvider:{workDoneProgress:!0},workspaceSymbolProvider:{workDoneProgress:!0},hoverProvider:{workDoneProgress:!0},documentHighlightProvider:{workDoneProgress:!0},renameProvider:{prepareProvider:!0,workDoneProgress:!0},completionProvider:{triggerCharacters:this.client.hasVisualStudioExtensionsCapability?[".","[","@",'"',"'"]:[".","[",'"',"'"],resolveProvider:!0,workDoneProgress:!0,completionItem:{labelDetailsSupport:!0}},signatureHelpProvider:{triggerCharacters:["(",",",")"],workDoneProgress:!0},codeActionProvider:{codeActionKinds:n,workDoneProgress:!0},executeCommandProvider:{commands:t,workDoneProgress:!0},callHierarchyProvider:!0,workspace:{workspaceFolders:{supported:!0,changeNotifications:!0}}}}}onInitialized(){this._initialized=!0,this.client.hasWorkspaceFoldersCapability?(this._workspaceFoldersChangedDisposable=this.connection.workspace.onDidChangeWorkspaceFolders((e=>{this.workspaceFactory.handleWorkspaceFoldersChanged(e),this._setupFileWatcher()})),this._setupFileWatcher()):this.updateSettingsForAllWorkspaces()}onDidChangeConfiguration(e){this.console.log("Received updated settings"),(null==e?void 0:e.settings)&&(this.defaultClientConfig=null==e?void 0:e.settings),this.updateSettingsForAllWorkspaces()}async onDefinition(e,t){return this.getDefinitions(e,t,this.client.hasGoToDeclarationCapability?k.DefinitionFilter.PreferSource:k.DefinitionFilter.All,((e,t,n,a,r)=>e.service.run((e=>new k.DefinitionProvider(e,t,n,a,r).getDefinitions()),r)))}async onDeclaration(e,t){return this.getDefinitions(e,t,this.client.hasGoToDeclarationCapability?k.DefinitionFilter.PreferStubs:k.DefinitionFilter.All,((e,t,n,a,r)=>e.service.run((e=>new k.DefinitionProvider(e,t,n,a,r).getDefinitions()),r)))}async onTypeDefinition(e,t){return this.getDefinitions(e,t,k.DefinitionFilter.All,((e,t,n,a,r)=>e.service.run((e=>new k.TypeDefinitionProvider(e,t,n,r).getDefinitions()),r)))}async getDefinitions(e,t,n,r){this.recordUserInteractionTime();const s=this.decodeUri(e.textDocument.uri),i=await this.getWorkspaceForFile(s);if(i.disableLanguageServices)return;const o=r(i,s,e.position,n,t);return o?o.filter((e=>this.canNavigateToFile(e.uri,i.service.fs))).map((e=>a.Location.create((0,b.encodeUri)(i.service.fs,e.uri),e.range))):void 0}async onReferences(e,t,n,a,r,s){this._pendingFindAllRefsCancellationSource&&(this._pendingFindAllRefsCancellationSource.cancel(),this._pendingFindAllRefsCancellationSource=void 0);const i=await this.getProgressReporter(n,E.Localizer.CodeAction.findingReferences(),t),o=i.source;this._pendingFindAllRefsCancellationSource=o;try{const n=this.decodeUri(e.textDocument.uri),i=await this.getWorkspaceForFile(n);if(i.disableLanguageServices)return;return i.service.run((t=>new P.ReferencesProvider(t,o.token,r,s).reportReferences(n,e.position,e.context.includeDeclaration,a)),t)}finally{i.reporter.done(),o.dispose()}}async onDocumentSymbol(e,t){this.recordUserInteractionTime();const n=this.decodeUri(e.textDocument.uri),a=await this.getWorkspaceForFile(n);if(!a.disableLanguageServices)return a.service.run((e=>new S.DocumentSymbolProvider(e,n,this.client.hasHierarchicalDocumentSymbolCapability,{includeAliases:!1},t).getSymbols()),t)}onWorkspaceSymbol(e,t,n){const a=new F.WorkspaceSymbolProvider(this.workspaceFactory.items(),n,e.query,t).reportSymbols();return Promise.resolve(a)}async onHover(e,t){const n=this.decodeUri(e.textDocument.uri);return(await this.getWorkspaceForFile(n)).service.run((a=>new A.HoverProvider(a,n,e.position,this.client.hoverContentFormat,t).getHover()),t)}async onDocumentHighlight(e,t){const n=this.decodeUri(e.textDocument.uri);return(await this.getWorkspaceForFile(n)).service.run((a=>new w.DocumentHighlightProvider(a,n,e.position,t).getDocumentHighlight()),t)}async onSignatureHelp(e,t){const n=this.decodeUri(e.textDocument.uri),a=await this.getWorkspaceForFile(n);if(!a.disableLanguageServices)return a.service.run((a=>new D.SignatureHelpProvider(a,n,e.position,this.client.signatureDocFormat,this.client.hasSignatureLabelOffsetCapability,this.client.hasActiveParameterCapability,e.context,t).getSignatureHelp()),t)}setCompletionIncomplete(e,t){var n,r;const s=this._lastTriggerKind!==a.CompletionTriggerKind.TriggerForIncompleteCompletions||(null===(n=e.context)||void 0===n?void 0:n.triggerKind)!==a.CompletionTriggerKind.TriggerForIncompleteCompletions;this._lastTriggerKind=null===(r=e.context)||void 0===r?void 0:r.triggerKind,t&&(t.isIncomplete=s)}async onCompletion(e,t){const n=this.decodeUri(e.textDocument.uri),a=await this.getWorkspaceForFile(n);return a.disableLanguageServices?null:a.service.run((a=>{var r;const s=new I.CompletionProvider(a,n,e.position,{format:this.client.completionDocFormat,snippet:this.client.completionSupportsSnippet,lazyEdit:!1,triggerCharacter:null===(r=null==e?void 0:e.context)||void 0===r?void 0:r.triggerCharacter},t).getCompletions();return this.setCompletionIncomplete(e,s),s}),t)}async onCompletionResolve(e,t){const n=(0,h.fromLSPAny)(e.data);if(n&&n.uri){const a=this.decodeUri(n.uri);(await this.getWorkspaceForFile(a)).service.run((r=>new I.CompletionProvider(r,a,n.position,{format:this.client.completionDocFormat,snippet:this.client.completionSupportsSnippet,lazyEdit:!1},t).resolveCompletionItem(e)),t)}return e}async onPrepareRenameRequest(e,t){const n=this.decodeUri(e.textDocument.uri),a=n.isUntitled(),r=await this.getWorkspaceForFile(n);return r.disableLanguageServices?null:r.service.run((s=>new N.RenameProvider(s,n,e.position,t).canRenameSymbol(r.kinds.includes(M.WellKnownWorkspaceKinds.Default),a)),t)}async onRenameRequest(e,t){const n=this.decodeUri(e.textDocument.uri),a=n.isUntitled(),r=await this.getWorkspaceForFile(n);if(!r.disableLanguageServices)return r.service.run((s=>new N.RenameProvider(s,n,e.position,t).renameSymbol(e.newName,r.kinds.includes(M.WellKnownWorkspaceKinds.Default),a)),t)}async onCallHierarchyPrepare(e,t){const n=this.decodeUri(e.textDocument.uri),a=await this.getWorkspaceForFile(n);return a.disableLanguageServices?null:a.service.run((a=>new C.CallHierarchyProvider(a,n,e.position,t).onPrepare()),t)}async onCallHierarchyIncomingCalls(e,t){const n=this.decodeUri(e.item.uri),a=await this.getWorkspaceForFile(n);return a.disableLanguageServices?null:a.service.run((a=>new C.CallHierarchyProvider(a,n,e.item.range.start,t).getIncomingCalls()),t)}async onCallHierarchyOutgoingCalls(e,t){const n=this.decodeUri(e.item.uri),a=await this.getWorkspaceForFile(n);return a.disableLanguageServices?null:a.service.run((a=>new C.CallHierarchyProvider(a,n,e.item.range.start,t).getOutgoingCalls()),t)}async onDidOpenTextDocument(e,t=l.IPythonMode.None){const n=this.decodeUri(e.textDocument.uri);let a=this.openFileMap.get(n.key);a?(this.console.error(`Received redundant open text document command for ${n}`),s.TextDocument.update(a,[{text:e.textDocument.text}],e.textDocument.version)):a=s.TextDocument.create(e.textDocument.uri,"python",e.textDocument.version,e.textDocument.text),this.openFileMap.set(n.key,a);(await this.getContainingWorkspacesForFile(n)).forEach((a=>{a.service.setFileOpened(n,e.textDocument.version,e.textDocument.text,t)}))}async onDidChangeTextDocument(e,t=l.IPythonMode.None){this.recordUserInteractionTime();const n=this.decodeUri(e.textDocument.uri),a=this.openFileMap.get(n.key);if(!a)return void this.console.error(`Received change text document command for closed file ${n}`);s.TextDocument.update(a,e.contentChanges,e.textDocument.version);const r=a.getText();(await this.getContainingWorkspacesForFile(n)).forEach((a=>{a.service.updateOpenFileContents(n,e.textDocument.version,r,t)}))}async onDidCloseTextDocument(e){const t=this.decodeUri(e.textDocument.uri);(await this.getContainingWorkspacesForFile(t)).forEach((e=>{e.service.setFileClosed(t)})),this.openFileMap.delete(t.key)}onDidChangeWatchedFiles(e){e.changes.forEach((e=>{const t=this.fs.realCasePath(this.decodeUri(e.uri)),n=1===e.type?"add":"change";this.serverOptions.fileWatcherHandler.onFileChange(n,t)}))}async onExecuteCommand(e,t,n){this._pendingCommandCancellationSource&&(this._pendingCommandCancellationSource.cancel(),this._pendingCommandCancellationSource=void 0);const r=async t=>{const n=await this.executeCommand(e,t);return a.WorkspaceEdit.is(n)&&this.connection.workspace.applyEdit({label:`Command '${e.command}'`,edit:n,metadata:{isRefactoring:this.isRefactoringCommand(e.command)}}),p.CommandResult.is(n)&&await this.connection.workspace.applyEdit({label:n.label,edit:n.edits,metadata:{isRefactoring:this.isRefactoringCommand(e.command)}}),n};if(!this.isLongRunningCommand(e.command)){return await r(t)}{const e=await this.getProgressReporter(n,E.Localizer.CodeAction.executingCommand(),t),a=e.source;this._pendingCommandCancellationSource=a;try{return await r(a.token)}finally{e.reporter.done(),a.dispose()}}}onShutdown(e){return this.workspaceFactory.clear(),this.openFileMap.clear(),Promise.resolve()}convertDiagnostics(e,t){return[{uri:(0,b.encodeUri)(e,t.fileUri),version:t.version,diagnostics:this._convertDiagnostics(e,t.diagnostics)}]}getDiagCode(e,t){return t}onAnalysisCompletedHandler(e,t){if(t.diagnostics.forEach((t=>{this.canNavigateToFile(t.fileUri,e)&&this.sendDiagnostics(this.convertDiagnostics(e,t))})),this._progressReporter.isEnabled(t))if(t.filesRequiringAnalysis>0){this._progressReporter.begin();const e=1===t.filesRequiringAnalysis?E.Localizer.CodeAction.filesToAnalyzeOne():E.Localizer.CodeAction.filesToAnalyzeCount().format({count:t.filesRequiringAnalysis});this._progressReporter.report(e)}else this._progressReporter.end();else this._progressReporter.end()}onWorkspaceCreated(e){this._initialized&&this.updateSettingsForWorkspace(e,e.isInitialized).ignoreErrors()}onWorkspaceRemoved(e){const t=[...this.documentsWithDiagnostics],n=this.workspaceFactory.items().filter((t=>t!==e));for(const a of t){const t=this.decodeUri(a);if(e.service.isTracked(t)){if(n.some((e=>e.service.isTracked(t))))continue;this.sendDiagnostics([{uri:a,diagnostics:[]}])}}}createAnalyzerServiceForWorkspace(e,t,n,a){return this.createAnalyzerService(e,a,(()=>5e3))}recordUserInteractionTime(){this.workspaceFactory.items().forEach((e=>{e.service.recordUserInteractionTime()}))}getDocumentationUrlForDiagnostic(e){const t=e.getRule();if(t)return`https://github.com/microsoft/pyright/blob/main/docs/configuration.md#${t}`}canNavigateToFile(e,t){return(0,x.canNavigateToFile)(t,e)}async getProgressReporter(e,t,n){if(e.constructor!==O.constructor)return{reporter:e,source:(0,c.CancelAfter)(this.serverOptions.cancellationProvider,n)};const a=await this.connection.window.createWorkDoneProgress();return a.begin(t,void 0,void 0,!0),{reporter:a,source:(0,c.CancelAfter)(this.serverOptions.cancellationProvider,n,a.token)}}sendDiagnostics(e){for(const t of e)0===t.diagnostics.length?this.documentsWithDiagnostics.delete(t.uri):this.documentsWithDiagnostics.add(t.uri),this.connection.sendDiagnostics(t)}decodeUri(e){return v.Uri.parse(e,this.serverOptions.serviceProvider)}_setupFileWatcher(){if(!this.client.hasWatchFileCapability)return;const e=a.WatchKind.Create|a.WatchKind.Change|a.WatchKind.Delete,t=[...o.configFileNames.map((t=>({globPattern:`**/${t}`,kind:e}))),{globPattern:"**",kind:e}];if(this.client.hasWatchFileRelativePathCapability){(0,b.deduplicateFolders)(this.workspaceFactory.getNonDefaultWorkspaces().map((e=>e.searchPathsToWatch.filter((t=>!t.startsWith(e.rootUri)))))).forEach((n=>{const a=(0,b.isFile)(this.fs,n,!0)?{baseUri:n.getDirectory().toString(),pattern:n.fileName}:{baseUri:n.toString(),pattern:"**"};t.push({globPattern:a,kind:e})}))}this.connection.client.register(a.DidChangeWatchedFilesNotification.type,{watchers:t}).then((e=>{this._lastFileWatcherRegistration&&this._lastFileWatcherRegistration.dispose(),this._lastFileWatcherRegistration=e}))}_getCompatibleMarkupKind(e){const t=[a.MarkupKind.PlainText,a.MarkupKind.Markdown];for(const n of null!=e?e:[])if(t.includes(n))return n;return a.MarkupKind.PlainText}_convertDiagnostics(e,t){const n=[];return t.forEach((t=>{const r=function(e){switch(e){case 0:return a.DiagnosticSeverity.Error;case 1:return a.DiagnosticSeverity.Warning;case 2:case 6:return a.DiagnosticSeverity.Information;case 3:case 4:case 5:return a.DiagnosticSeverity.Hint}}(t.category),s=t.getRule(),i=this.getDiagCode(t,s),o=a.Diagnostic.create(t.range,t.message,r,i,this.serverOptions.productName);if(3===t.category||4===t.category){if(o.tags=[a.DiagnosticTag.Unnecessary],o.severity=a.DiagnosticSeverity.Hint,!this.client.supportsUnnecessaryDiagnosticTag)return}else if(5===t.category){if(o.tags=[a.DiagnosticTag.Deprecated],o.severity=a.DiagnosticSeverity.Hint,!this.client.supportsDeprecatedDiagnosticTag)return}else if(6===t.category){switch(o.tags=[z.TaskItem],t.priority){case g.TaskListPriority.High:o._vs_diagnosticRank=V.High;break;case g.TaskListPriority.Normal:o._vs_diagnosticRank=V.Default;break;case g.TaskListPriority.Low:o._vs_diagnosticRank=V.Low}if(!this.client.supportsTaskItemDiagnosticTag)return}if(s){const e=this.getDocumentationUrlForDiagnostic(t);e&&(o.codeDescription={href:e})}const l=t.getRelatedInfo();l.length>0&&(o.relatedInformation=l.filter((t=>this.canNavigateToFile(t.uri,e))).map((t=>a.DiagnosticRelatedInformation.create(a.Location.create((0,b.encodeUri)(e,t.uri),t.range),t.message)))),n.push(o)})),n}}},24712:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AnalyzerServiceExecutor=void 0;const a=n(58700),r=n(19016),s=n(52996),i=n(57508),o=n(20840);class l{static runWithOptions(e,t,n,r=!0){const o=function(e,t,n,r,o){var l,p,c,d,u,m,y;const g=new s.CommandLineOptions(e,!0);g.checkOnlyOpenFiles=t.openFilesOnly,g.useLibraryCodeForTypes=t.useLibraryCodeForTypes,g.typeCheckingMode=t.typeCheckingMode,g.autoImportCompletions=t.autoImportCompletions,g.indexing=t.indexing,g.taskListTokens=t.taskListTokens,g.logTypeEvaluationTime=null!==(l=t.logTypeEvaluationTime)&&void 0!==l&&l,g.typeEvaluationTimeThreshold=null!==(p=t.typeEvaluationTimeThreshold)&&void 0!==p?p:50,g.enableAmbientAnalysis=n,g.pythonEnvironmentName=o,g.disableTaggedHints=t.disableTaggedHints,n?(g.watchForSourceChanges=t.watchForSourceChanges,g.watchForLibraryChanges=t.watchForLibraryChanges,g.watchForConfigChanges=t.watchForConfigChanges):(g.watchForSourceChanges=!1,g.watchForLibraryChanges=!1,g.watchForConfigChanges=!1);t.venvPath&&(g.venvPath=t.venvPath.getFilePath());t.pythonPath&&((0,a.isPythonBinary)(t.pythonPath.getFilePath())||(g.pythonPath=t.pythonPath.getFilePath()));t.typeshedPath&&(g.typeshedPath=t.typeshedPath.getFilePath());t.stubPath&&(g.stubPath=t.stubPath.getFilePath());t.logLevel===i.LogLevel.Log&&(g.verboseOutput=!0);r&&(g.typeStubTargetImportName=r);return g.autoSearchPaths=t.autoSearchPaths,g.extraPaths=null!==(d=null===(c=t.extraPaths)||void 0===c?void 0:c.map((e=>e.getFilePath())))&&void 0!==d?d:[],g.diagnosticSeverityOverrides=t.diagnosticSeverityOverrides,g.includeFileSpecs=null!==(u=t.includeFileSpecs)&&void 0!==u?u:[],g.excludeFileSpecs=null!==(m=t.excludeFileSpecs)&&void 0!==m?m:[],g.ignoreFileSpecs=null!==(y=t.ignoreFileSpecs)&&void 0!==y?y:[],g}(e.rootUri,t,r,n,e.pythonEnvironmentName);e.service.setOptions(o)}static async cloneService(e,t,n){const a="cloned service",s=(0,r.getNextServiceId)(a);n=null!=n?n:{};const i={...t,workspaceName:"temp workspace for cloned service",rootUri:t.rootUri,pythonPath:t.pythonPath,pythonPathKind:t.pythonPathKind,kinds:[...t.kinds,o.WellKnownWorkspaceKinds.Cloned],service:t.service.clone(a,s,n.useBackgroundAnalysis?e.createBackgroundAnalysis(s):void 0,n.fileSystem),disableLanguageServices:!0,disableTaggedHints:!0,disableOrganizeImports:!0,disableWorkspaceSymbol:!0,isInitialized:(0,o.createInitStatus)(),searchPathsToWatch:[]},p=await e.getSettings(t);return l.runWithOptions(i,p,n.typeStubTargetImportName,!1),i.service}}t.AnalyzerServiceExecutor=l},87472:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.convertSymbolKindToCompletionItemKind=t.AutoImporter=t.addModuleSymbolsMap=t.buildModuleSymbolsMap=void 0;const i=n(65872),o=n(21440),l=n(408),p=s(n(80944)),c=n(8e4),d=n(64704),u=n(28040),m=n(11699),y=s(n(50356)),g=n(94576);function h(e,t){e.forEach((e=>{if(e.shadows.length>0)return;const n=e.sourceFile.getUri(),a=e.sourceFile.getModuleSymbolTable();if(!a)return;const r=(0,m.stripFileExtension)(n.fileName);p.isPrivateOrProtectedName(r)||t.set(n.key,{uri:n,forEach(t){a.forEach(((n,a)=>{if(!(0,c.isVisibleExternally)(n))return;const r=n.getDeclarations();if(!r||0===r.length)return;const s=r[0];if(!s)return;if(8===s.type&&(0,l.isUserCode)(e))return;const o=1!==s.type||s.isConstant||s.isFinal?void 0:i.SymbolKind.Variable;t({symbol:n,kind:o},a,!(0,l.isUserCode)(e))}))}})}))}t.buildModuleSymbolsMap=function(e){const t=new Map;return h(e,t),t},t.addModuleSymbolsMap=h;function f(e){switch(e){case i.SymbolKind.File:return i.CompletionItemKind.File;case i.SymbolKind.Module:case i.SymbolKind.Namespace:return i.CompletionItemKind.Module;case i.SymbolKind.Package:return i.CompletionItemKind.Folder;case i.SymbolKind.Class:return i.CompletionItemKind.Class;case i.SymbolKind.Method:return i.CompletionItemKind.Method;case i.SymbolKind.Property:return i.CompletionItemKind.Property;case i.SymbolKind.Field:return i.CompletionItemKind.Field;case i.SymbolKind.Constructor:return i.CompletionItemKind.Constructor;case i.SymbolKind.Enum:return i.CompletionItemKind.Enum;case i.SymbolKind.Interface:return i.CompletionItemKind.Interface;case i.SymbolKind.Function:return i.CompletionItemKind.Function;case i.SymbolKind.Variable:case i.SymbolKind.Array:return i.CompletionItemKind.Variable;case i.SymbolKind.String:return i.CompletionItemKind.Constant;case i.SymbolKind.Number:case i.SymbolKind.Boolean:return i.CompletionItemKind.Value;case i.SymbolKind.Constant:case i.SymbolKind.Null:return i.CompletionItemKind.Constant;case i.SymbolKind.Object:case i.SymbolKind.Key:return i.CompletionItemKind.Value;case i.SymbolKind.EnumMember:return i.CompletionItemKind.EnumMember;case i.SymbolKind.Struct:return i.CompletionItemKind.Struct;case i.SymbolKind.Event:return i.CompletionItemKind.Event;case i.SymbolKind.Operator:return i.CompletionItemKind.Operator;case i.SymbolKind.TypeParameter:return i.CompletionItemKind.TypeParameter;default:return}}t.AutoImporter=class{constructor(e,t,n,a,r,s,i){this.execEnvironment=e,this.importResolver=t,this.parseResults=n,this._invocationPosition=a,this._excludes=r,this.moduleSymbolMap=s,this.options=i,this._importStatements=(0,o.getTopLevelImports)(this.parseResults.parserOutput.parseTree,!0)}getAutoImportCandidates(e,t,n,a){const r=[];return this.getCandidates(e,t,n,a).forEach((e=>(0,u.appendArray)(r,e))),r}getCandidates(e,t,n,a){const r=new Map,s=new Map;return this.addImportsFromModuleMap(e,t,n,s,r,a),this.addImportsFromImportAliasMap(s,n,r,a),r}addImportsFromModuleMap(e,t,n,a,r,s){this.moduleSymbolMap.forEach(((i,o)=>{const l=this.isStubFileOrHasInit(this.moduleSymbolMap,i.uri);this.processModuleSymbolTable(i,i.uri,e,t,l,n,a,r,s)}))}addImportsFromImportAliasMap(e,t,n,a){(0,d.throwIfCancellationRequested)(a),e.forEach((e=>{e.forEach(((e,a)=>{var r,s;if(t){if(this._importStatements.mapByFilePath.has(e.importParts.fileUri.key))return;if(e.importParts.importFrom){const t=this._importStatements.orderedImports.find((t=>t.moduleName===e.importParts.importFrom));if(t&&22===t.node.nodeType&&t.node.imports.some((t=>t.name.value===e.importParts.symbolName)))return}}if(this._containsName(e.importParts.importName,e.importParts.importFrom,n))return;const i=this._getTextEditsForAutoImportByFilePath({name:e.importParts.symbolName,alias:t},{name:null!==(r=e.importParts.importFrom)&&void 0!==r?r:e.importParts.importName},e.importParts.importName,e.importGroup,e.importParts.fileUri);this._addResult(n,{name:e.importParts.importName,alias:t,symbol:e.symbol,kind:null!==(s=e.itemKind)&&void 0!==s?s:f(e.kind),source:e.importParts.importFrom,insertionText:i.insertionText,edits:i.edits,declUri:e.importParts.fileUri,originalName:a,originalDeclUri:e.fileUri})}))}))}processModuleSymbolTable(e,t,n,a,r,s,o,l,p){(0,d.throwIfCancellationRequested)(p);const[c,u,m]=this._getImportPartsForSymbols(t);if(!c)return;const g=y.getCharacterCount(c,".");if(e.forEach(((e,i,p)=>{var d;if(!this._shouldIncludeVariable(e,i,r.isStub,p))return;if(!this._isSimilar(n,i,a))return;if(this._containsName(i,c,l))return;if(e.importAlias)return void this._addToImportAliasMap(e.importAlias,{importParts:{symbolName:i,importName:i,importFrom:c,fileUri:t,dotCount:g,moduleNameAndType:m},importGroup:u,symbol:e.symbol,kind:e.importAlias.kind,itemKind:e.importAlias.itemKind,fileUri:e.importAlias.moduleUri},o);const y=this.getNameForImportFrom(p,t),h=this._getTextEditsForAutoImportByFilePath({name:i,alias:s},{name:c,nameForImportFrom:y},i,u,t);this._addResult(l,{name:i,alias:s,symbol:e.symbol,source:c,kind:null!==(d=e.itemKind)&&void 0!==d?d:f(e.kind),insertionText:h.insertionText,edits:h.edits,declUri:t,originalName:i,originalDeclUri:t})})),!r.isStub&&!r.hasInit)return;const h=this._getImportParts(t);if(!h)return;if(!this._isSimilar(n,h.importName,a))return;this._containsName(h.importName,h.importFrom,l)||this._addToImportAliasMap({moduleUri:t,originalName:h.importName,kind:i.SymbolKind.Module,itemKind:i.CompletionItemKind.Module},{importParts:h,importGroup:u,kind:i.SymbolKind.Module,itemKind:i.CompletionItemKind.Module,fileUri:t},o)}getNameForImportFrom(e,t){}isStubFileOrHasInit(e,t){const n=t.getDirectory(),a=n.initPyUri,r=n.initPyiUri;return{isStub:t.hasExtension(".pyi"),hasInit:e.has(a.key)||e.has(r.key)}}_shouldIncludeVariable(e,t,n,a){var r;return!(!n&&e.kind===i.SymbolKind.Variable)||(!(!this.options.allowVariableInAll||a||!(null===(r=e.symbol)||void 0===r?void 0:r.isInDunderAll()))||p.isPublicConstantOrTypeAlias(t))}_addToImportAliasMap(e,t,n){if(!n.has(e.moduleUri.key)){const a=new Map;return a.set(e.originalName,t),void n.set(e.moduleUri.key,a)}const a=n.get(e.moduleUri.key);if(!a.has(e.originalName))return void a.set(e.originalName,t);const r=a.get(e.originalName);this._compareImportAliasData(r,t)<=0||a.set(e.originalName,t)}_compareImportAliasData(e,t){const n=e.importGroup-t.importGroup;if(0!==n)return n;const a=e.importParts.dotCount-t.importParts.dotCount;return 0!==a?a:e.symbol&&!t.symbol?-1:!e.symbol&&t.symbol?1:y.getStringComparer()(e.importParts.importName,t.importParts.importName)}_getImportPartsForSymbols(e){const t=this._importStatements.mapByFilePath.get(e.key);if(t)return[t.moduleName,(0,o.getImportGroup)(t),{importType:2,isLocalTypingsFile:!1,moduleName:t.moduleName}];{const t=this._getModuleNameAndTypeFromFilePath(e);return[t.moduleName,(0,o.getImportGroupFromModuleNameAndType)(t),t]}}_getImportParts(e){return t("__init__"===(0,m.stripFileExtension)(e.fileName)?this._getModuleNameAndTypeFromFilePath(e.getDirectory()):this._getModuleNameAndTypeFromFilePath(e));function t(t){const n=t.moduleName;if(!n)return;const a=n.lastIndexOf("."),r=a>0?n.substring(a+1):void 0,s=a>0?n.substring(0,a):void 0;return{symbolName:r,importName:null!=r?r:n,importFrom:s,fileUri:e,dotCount:y.getCharacterCount(n,"."),moduleNameAndType:t}}}_isSimilar(e,t,n){if(1===n)return e===t;if(e.length<=0||t.length<=0)return!1;if(!this.options.patternMatcher){const n="_"!==e[0]&&"_"===t[0]&&t.length>1?1:0;return e[0].toLocaleLowerCase()===t[n].toLocaleLowerCase()&&y.isPatternInSymbol(e,t)}return this.options.patternMatcher(e,t)}_shouldExclude(e){return this._excludes.has(e,g.CompletionMap.labelOnlyIgnoringAutoImports)}_containsName(e,t,n){if(this._shouldExclude(e))return!0;const a=n.get(e);return!!(null==a?void 0:a.some((e=>e.source===t)))}_getModuleNameAndTypeFromFilePath(e){return this.importResolver.getModuleNameForImport(e,this.execEnvironment)}_getTextEditsForAutoImportByFilePath(e,t,n,a,r){var s,i,l,p,c,d,u,m,y;const g=this._importStatements.mapByFilePath.get(r.key);if(g){if(20===g.node.nodeType){const t=null===(i=null===(s=g.subnode)||void 0===s?void 0:s.alias)||void 0===i?void 0:i.value;if(e.name)return{insertionText:`${null!=t?t:g.moduleName}.${e.name}`,edits:[]};if(t)return{insertionText:`${t}`,edits:[]}}if(e.name&&22===g.node.nodeType&&!g.node.isWildcardImport){const a=g.node.imports.find((t=>t.name.value===e.name));if(a){const t=null===(l=a.alias)||void 0===l?void 0:l.value;return{insertionText:`${null!=t?t:e.name}`,edits:[]}}if(t.name===g.moduleName)return{insertionText:null!==(p=e.alias)&&void 0!==p?p:n,edits:this.options.lazyEdit?void 0:(0,o.getTextEditsForAutoImportSymbolAddition)(e,g,this.parseResults)}}}else if(e.name){const a=this._importStatements.orderedImports.find((e=>e.moduleName===t.name));if(a&&22===a.node.nodeType&&!a.node.isWildcardImport){const t=a.node.imports.find((t=>t.name.value===e.name));if(!t)return{insertionText:null!==(d=e.alias)&&void 0!==d?d:n,edits:this.options.lazyEdit?void 0:(0,o.getTextEditsForAutoImportSymbolAddition)(e,a,this.parseResults)};{const e=null===(c=t.alias)||void 0===c?void 0:c.value;if(e)return{insertionText:`${e}`,edits:[]}}}const s=null===(u=this._importStatements.implicitImports)||void 0===u?void 0:u.get(r.key);if(s){const t=null===(m=s.alias)||void 0===m?void 0:m.value;return{insertionText:`${null!=t?t:s.name.value}.${e.name}`,edits:[]}}}return{insertionText:null!==(y=e.alias)&&void 0!==y?y:n,edits:this.options.lazyEdit?void 0:(0,o.getTextEditsForAutoImportInsertion)(e,t,this._importStatements,a,this.parseResults,this._invocationPosition)}}_addResult(e,t){let n=e.get(t.name);n||(n=[],e.set(t.name,n)),n.push(t)}},t.convertSymbolKindToCompletionItemKind=f},38796:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CallHierarchyProvider=void 0;const i=n(65872),o=s(n(61340)),l=s(n(28340)),p=n(78232),c=n(408),d=n(808),u=n(8312),m=n(64704),y=n(28040),g=n(86016),h=n(47512),f=n(66112),T=n(96193),v=n(37636),b=n(55164),_=n(55084),C=n(80636),I=n(67192),k=n(91604),w=n(8560);t.CallHierarchyProvider=class{constructor(e,t,n,a){this._program=e,this._fileUri=t,this._position=n,this._token=a,this._parseResults=this._program.getParseResults(this._fileUri)}onPrepare(){var e;if((0,m.throwIfCancellationRequested)(this._token),!this._parseResults)return null;const t=this._getDeclaration();if(!t||0===t.declarations.length)return null;const{targetDecl:n,callItemUri:a,symbolName:r}=this._getTargetDeclaration(t);if(5!==n.type&&6!==n.type&&8!==n.type)return null;if(8===n.type){const e=this._evaluator.resolveAliasDeclaration(n,!0);if(!e)return null;if(5!==e.type&&6!==e.type)return null}const s={name:r,kind:null!==(e=(0,f.getSymbolKind)(n,this._evaluator,r))&&void 0!==e?e:i.SymbolKind.Module,uri:(0,C.encodeUri)(this._program.fileSystem,a),range:n.range,selectionRange:n.range};return(0,w.canNavigateToFile)(this._program.fileSystem,_.Uri.parse(s.uri,this._program.serviceProvider))?[s]:null}getIncomingCalls(){if((0,m.throwIfCancellationRequested)(this._token),!this._parseResults)return null;const e=this._getDeclaration();if(!e||0===e.declarations.length)return null;const{targetDecl:t,symbolName:n}=this._getTargetDeclaration(e),a=[],r=8===t.type?[this._program.getSourceFileInfo(this._fileUri)]:this._program.getSourceFileInfoList();for(const e of r)if((0,c.isUserCode)(e)||e.isOpenByClient){const r=e.sourceFile.getUri(),s=this._getIncomingCallsForDeclaration(r,n,t);s&&(0,y.appendArray)(a,s),this._program.handleMemoryHighUsage()}return 0===a.length?null:a.filter((e=>(0,w.canNavigateToFile)(this._program.fileSystem,_.Uri.parse(e.from.uri,this._program.serviceProvider))))}getOutgoingCalls(){var e;if((0,m.throwIfCancellationRequested)(this._token),!this._parseResults)return null;const t=this._getDeclaration();if(!t||0===t.declarations.length)return null;const{targetDecl:n}=this._getTargetDeclaration(t);let a;const r=this._evaluator.resolveAliasDeclaration(n,!0);if(!r)return null;if(5===r.type)a=r.node;else if(6===r.type){const t=null===(e=this._evaluator.getTypeForDeclaration(r))||void 0===e?void 0:e.type;if(t&&(0,u.isInstantiableClass)(t)){const e=(0,d.lookUpClassMember)(t,"__init__",22);if(e){const t=this._evaluator.getTypeOfMember(e);if(t&&(0,u.isFunction)(t)){const t=e.symbol.getDeclarations();if(t&&t.length>0){const e=t[0];5===e.type&&(a=e.node)}}}}}if(!a)return null;const s=new S(this._program.fileSystem,a,this._parseResults,this._evaluator,this._token).findCalls();return 0===s.length?null:s.filter((e=>(0,w.canNavigateToFile)(this._program.fileSystem,_.Uri.parse(e.to.uri,this._program.serviceProvider))))}get _evaluator(){return this._program.evaluator}_getTargetDeclaration(e){const t=e.declarations,n=e.nodeAtOffset;let a,r,s=t[0];for(const e of t)if((o.hasTypeForDeclaration(e)||!o.hasTypeForDeclaration(s))&&(5===e.type||6===e.type)&&(s=e,e.node===n))break;return 8===s.type?(a=e.nodeAtOffset.value,r=this._fileUri):(a=o.getNameFromDeclaration(s)||e.symbolNames[0],r=s.uri),{targetDecl:s,callItemUri:r,symbolName:a}}_getIncomingCallsForDeclaration(e,t,n){(0,m.throwIfCancellationRequested)(this._token);const a=new A(this._program,e,t,n,this._token).findCalls();return a.length>0?a:void 0}_getDeclaration(){return I.ReferencesProvider.getDeclarationForPosition(this._program,this._fileUri,this._position,void 0,h.ReferenceUseCase.References,this._token)}};class S extends p.ParseTreeWalker{constructor(e,t,n,a,r){super(),this._fs=e,this._parseRoot=t,this._parseResults=n,this._evaluator=a,this._cancellationToken=r,this._outgoingCalls=[]}findCalls(){return this.walk(this._parseRoot),this._outgoingCalls}visitCall(e){let t;if((0,m.throwIfCancellationRequested)(this._cancellationToken),38===e.leftExpression.nodeType?t=e.leftExpression:35===e.leftExpression.nodeType&&(t=e.leftExpression.memberName),t){const e=this._evaluator.getDeclarationsForNameNode(t);e&&e.forEach((e=>{this._addOutgoingCallForDeclaration(t,e)}))}return!0}visitMemberAccess(e){(0,m.throwIfCancellationRequested)(this._cancellationToken);const t=this._evaluator.getType(e.leftExpression);return t&&(0,d.doForEachSubtype)(t,(t=>{let n=t;if(n=this._evaluator.makeTopLevelTypeVarsConcrete(n),!(0,u.isClassInstance)(n))return;const a=(0,d.lookUpObjectMember)(n,e.memberName.value);if(!a)return;const r=this._evaluator.getTypeOfMember(a),s=a.symbol.getDeclarations();r&&(0,u.isClassInstance)(r)&&u.ClassType.isPropertyClass(r)&&s.forEach((t=>{this._addOutgoingCallForDeclaration(e.memberName,t)}))})),!0}_addOutgoingCallForDeclaration(e,t){var n,a;const r=this._evaluator.resolveAliasDeclaration(t,!0);if(!r)return;if(5!==r.type&&6!==r.type)return;const s={name:e.value,kind:null!==(n=(0,f.getSymbolKind)(r,this._evaluator,e.value))&&void 0!==n?n:i.SymbolKind.Module,uri:(0,C.encodeUri)(this._fs,r.uri),range:r.range,selectionRange:r.range};let l=this._outgoingCalls.find((e=>e.to.uri===s.uri&&(0,b.rangesAreEqual)(e.to.range,s.range)));l||(l={to:s,fromRanges:[]},this._outgoingCalls.push(l)),l&&l.to.name!==e.value&&(l.to.name=null!==(a=o.getNameFromDeclaration(r))&&void 0!==a?a:e.value);const p=(0,T.convertOffsetsToRange)(e.start,e.start+e.length,this._parseResults.tokenizerOutput.lines);l.fromRanges.push(p)}}class A extends p.ParseTreeWalker{constructor(e,t,n,a,r){var s;super(),this._program=e,this._fileUri=t,this._symbolName=n,this._targetDeclaration=a,this._cancellationToken=r,this._incomingCalls=[],this._declarations=[],this._parseResults=this._program.getParseResults(this._fileUri),this._usageProviders=(null!==(s=this._program.serviceProvider.tryGet(v.ServiceKeys.symbolUsageProviderFactory))&&void 0!==s?s:[]).map((e=>e.tryCreateProvider(h.ReferenceUseCase.References,[this._targetDeclaration],this._cancellationToken))).filter(g.isDefined),this._declarations.push(this._targetDeclaration),this._usageProviders.forEach((e=>e.appendDeclarationsTo(this._declarations)))}findCalls(){return this.walk(this._parseResults.parserOutput.parseTree),this._incomingCalls}visitCall(e){let t;if((0,m.throwIfCancellationRequested)(this._cancellationToken),38===e.leftExpression.nodeType?t=e.leftExpression:35===e.leftExpression.nodeType&&(t=e.leftExpression.memberName),t&&t.value===this._symbolName){const e=this._getDeclarations(t);if(e)if(8===this._targetDeclaration.type){const n=this._evaluator.resolveAliasDeclaration(this._targetDeclaration,!0);n&&e.some((e=>o.areDeclarationsSame(e,n)))&&this._addIncomingCallForDeclaration(t)}else e.some((e=>this._declarations.some((t=>o.areDeclarationsSame(e,t)))))&&this._addIncomingCallForDeclaration(t)}return!0}visitMemberAccess(e){if((0,m.throwIfCancellationRequested)(this._cancellationToken),e.memberName.value===this._symbolName){const t=this._evaluator.getType(e.leftExpression);t&&(0,d.doForEachSubtype)(t,(t=>{let n=t;if(n=this._evaluator.makeTopLevelTypeVarsConcrete(n),!(0,u.isClassInstance)(n))return;const a=(0,d.lookUpObjectMember)(n,e.memberName.value);if(!a)return;const r=this._evaluator.getTypeOfMember(a),s=a.symbol.getDeclarations();r&&s.some((e=>o.areDeclarationsSame(e,this._targetDeclaration)))&&this._addIncomingCallForDeclaration(e.memberName)}))}return!0}get _evaluator(){return this._program.evaluator}_getDeclarations(e){const t=k.DocumentSymbolCollector.getDeclarationsForNode(this._program,e,!0,this._cancellationToken),n=[...t];return this._usageProviders.forEach((a=>a.appendDeclarationsAt(e,t,n))),n}_addIncomingCallForDeclaration(e){let t,n=l.getExecutionScopeNode(e);for(;n&&76===n.nodeType;)n=l.getExecutionScopeNode(n);if(!n)return;if(36===n.nodeType){const e=(0,T.convertOffsetsToRange)(0,0,this._parseResults.tokenizerOutput.lines),n=this._fileUri.fileName;t={name:`(module) ${n}`,kind:i.SymbolKind.Module,uri:(0,C.encodeUri)(this._program.fileSystem,this._fileUri),range:e,selectionRange:e}}else if(30===n.nodeType){const e=(0,T.convertOffsetsToRange)(n.start,n.start+n.length,this._parseResults.tokenizerOutput.lines);t={name:"(lambda)",kind:i.SymbolKind.Function,uri:(0,C.encodeUri)(this._program.fileSystem,this._fileUri),range:e,selectionRange:e}}else{const e=(0,T.convertOffsetsToRange)(n.name.start,n.name.start+n.name.length,this._parseResults.tokenizerOutput.lines);t={name:n.name.value,kind:i.SymbolKind.Function,uri:(0,C.encodeUri)(this._program.fileSystem,this._fileUri),range:e,selectionRange:e}}let a=this._incomingCalls.find((e=>e.from.uri===t.uri&&(0,b.rangesAreEqual)(e.from.range,t.range)));a||(a={from:t,fromRanges:[]},this._incomingCalls.push(a));const r=(0,T.convertOffsetsToRange)(e.start,e.start+e.length,this._parseResults.tokenizerOutput.lines);a.fromRanges.push(r)}}},99324:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CodeActionProvider=void 0;const a=n(65872),r=n(64704),s=n(88792),i=n(62164),o=n(95960);t.CodeActionProvider=class{static mightSupport(e){return!e||0===e.length||e.some((e=>e.startsWith(a.CodeActionKind.QuickFix)))}static async getCodeActionsForPosition(e,t,n,l,p){(0,r.throwIfCancellationRequested)(p);const c=[];if(!e.rootUri||e.disableLanguageServices)return c;if(!this.mightSupport(l))return c;const d=await e.service.getDiagnosticsForRange(t,n,p),u=d.find((e=>{const t=e.getActions();return t&&t.find((e=>"pyright.createtypestub"===e.action))}));if(u){const n=u.getActions().find((e=>"pyright.createtypestub"===e.action));if(n){const r=a.CodeAction.create(o.Localizer.CodeAction.createTypeStubFor().format({moduleName:n.moduleName}),(0,s.createCommand)(o.Localizer.CodeAction.createTypeStub(),"pyright.createtypestub",e.rootUri.toString(),n.moduleName,t.toString()),a.CodeActionKind.QuickFix);c.push(r)}}const m=d.find((e=>{const t=e.getActions();return t&&t.find((e=>"renameShadowedFile"===e.action))}));if(m){const t=m.getActions().find((e=>"renameShadowedFile"===e.action));if(t){const n=o.Localizer.CodeAction.renameShadowedFile().format({oldFile:t.oldUri.getShortenedFileName(),newFile:t.newUri.getShortenedFileName()}),r={edits:[],fileOperations:[{kind:"rename",oldFileUri:t.oldUri,newFileUri:t.newUri}]},s=(0,i.convertToWorkspaceEdit)(e.service.fs,r),l=a.CodeAction.create(n,s,a.CodeActionKind.QuickFix);c.push(l)}}return c}}},94576:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.CompletionMap=t.CompletionProvider=t.indexValueDetail=t.autoImportDetail=void 0;const i=n(65872),o=s(n(9316)),l=n(65392),p=n(61340),c=n(74124),d=n(29332),u=n(92488),m=s(n(28340)),y=n(28340),g=n(69160),h=n(76392),f=s(n(80944)),T=n(8e4),v=n(45468),b=n(58260),_=n(3388),C=n(8312),I=n(808),k=n(64704),w=n(28040),S=s(n(83181)),A=n(83181),x=n(66112),P=n(96193),N=n(61328),D=s(n(50356)),F=n(55164),E=n(55084),M=n(62164),O=n(95960),z=n(79428),V=n(87472),U=n(900),R=n(91604),L=n(19428);var j,B;!function(e){const t=["True","False","None","and","or","not","is","lambda","yield","assert","break","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","nonlocal","pass","raise","return","try","type","while","with"],n=[...t,"async","await"],a=[...n,"case","match"];e.forVersion=function(e){return e.isGreaterOrEqualTo(N.pythonVersion3_10)?a:e.isGreaterOrEqualTo(N.pythonVersion3_5)?n:t}}(j||(j={})),function(e){e[e.LikelyKeyword=0]="LikelyKeyword",e[e.RecentImportModuleName=1]="RecentImportModuleName",e[e.ImportModuleName=2]="ImportModuleName",e[e.LiteralValue=3]="LiteralValue",e[e.NamedParameter=4]="NamedParameter",e[e.RecentKeywordOrSymbol=5]="RecentKeywordOrSymbol",e[e.RecentAutoImport=6]="RecentAutoImport",e[e.Keyword=7]="Keyword",e[e.EnumMember=8]="EnumMember",e[e.NormalSymbol=9]="NormalSymbol",e[e.PrivateSymbol=10]="PrivateSymbol",e[e.DunderSymbol=11]="DunderSymbol",e[e.AutoImport=12]="AutoImport"}(B||(B={})),t.autoImportDetail=O.Localizer.Completion.autoImportDetail(),t.indexValueDetail=O.Localizer.Completion.indexValueDetail();class q{constructor(e,t,n,a,r){this.program=e,this.fileUri=t,this.position=n,this.options=a,this.cancellationToken=r,this._stringLiteralContainer=void 0,this.execEnv=this.configOptions.findExecEnvironment(this.fileUri),this.parseResults=this.program.getParseResults(this.fileUri),this.sourceMapper=this.program.getSourceMapper(this.fileUri,this.cancellationToken,!0)}getCompletions(){if(!this.program.getSourceFileInfo(this.fileUri))return null;const e=this._getCompletions();return i.CompletionList.create(null==e?void 0:e.toArray())}resolveCompletionItem(e){(0,k.throwIfCancellationRequested)(this.cancellationToken);const t=(0,x.fromLSPAny)(e.data),n=e.label;let a="";t.autoImportText&&(a=t.autoImportText);const r=q._mostRecentCompletions.findIndex((e=>e.label===n&&e.autoImportText===a));if(r>0&&(q._mostRecentCompletions=q._mostRecentCompletions.splice(r,1)),0!==r&&q._mostRecentCompletions.unshift({label:n,autoImportText:a}),q._mostRecentCompletions.length>128&&q._mostRecentCompletions.pop(),t.symbolLabel)if(t.moduleUri&&d.ImportResolver.isSupportedImportSourceFile(E.Uri.parse(t.moduleUri,this.program.serviceProvider))){const n=(0,b.getModuleDocStringFromUris)([E.Uri.parse(t.moduleUri,this.program.serviceProvider)],this.sourceMapper);if(!n)return;if(this.options.format===i.MarkupKind.Markdown){const t=(0,c.convertDocStringToMarkdown)(n);e.documentation={kind:i.MarkupKind.Markdown,value:t}}else if(this.options.format===i.MarkupKind.PlainText){const t=(0,c.convertDocStringToPlainText)(n);e.documentation={kind:i.MarkupKind.PlainText,value:t}}}else if(this.itemToResolve=e,t.autoImportText){if(!e.additionalTextEdits){const e=new W;this.addAutoImportCompletions(t.symbolLabel,1,!1,e)}}else this.getCompletions()}get evaluator(){return this.program.evaluator}get importResolver(){return this.program.importResolver}get configOptions(){return this.program.configOptions}getMethodOverrideCompletions(e,t,n){var a,r;const s=m.getEnclosingClass(t,!0);if(!s)return;const o=this.evaluator.getTypeOfClass(s);if(!o)return;const l=new Map;for(let e=1;e<o.classType.details.mro.length;e++){const t=o.classType.details.mro[e];(0,C.isInstantiableClass)(t)&&(0,I.getMembersForClass)(t,l,!1)}const p=null!==(a=null==n?void 0:n.some((e=>m.checkDecorator(e,"staticmethod"))))&&void 0!==a&&a,c=null!==(r=null==n?void 0:n.some((e=>m.checkDecorator(e,"classmethod"))))&&void 0!==r&&r,d=new W;return l.forEach(((n,a)=>{var r;let s=(0,T.getLastTypedDeclarationForSymbol)(n);if(s&&5===s.type&&D.isPatternInSymbol(t.value,a)){const l=null===(r=this.evaluator.getTypeForDeclaration(s))||void 0===r?void 0:r.type;if(!l)return;let u=(0,C.isClassInstance)(l)&&C.ClassType.isPropertyClass(l);if(f.isDunderName(a)&&(u=!1),!(0,C.isFunction)(l)&&!u)return;if(u){const e=n.getTypedDeclarations();e.length>0&&5===e[0].type&&(s=e[0])}const m=(0,C.isFunction)(l)&&C.FunctionType.isStaticMethod(l),y=(0,C.isFunction)(l)&&C.FunctionType.isClassMethod(l)&&"__init_subclass__"!==a;if(p!==m||c!==y)return;const g=this._printMethodSignature(o.classType,s);let T;if((0,h.isStubFile)(this.fileUri))T=`${g}: ...`;else{T=`${g}:\n${this.printOverriddenMethodBody(o.classType,m,u,s,s.node.isAsync)}`}const v=this.createReplaceEdits(e,t,T);this.addSymbol(a,n,t.value,d,{funcParensDisabled:!0,edits:{format:this.options.snippet?i.InsertTextFormat.Snippet:void 0,textEdit:v}})}})),d}printOverriddenMethodBody(e,t,n,a,r){let s=this.parseResults.tokenizerOutput.predominantTabSequence;if(1===e.details.baseClasses.length&&(0,C.isClass)(e.details.baseClasses[0])&&"builtins.object"===e.details.baseClasses[0].details.fullName)return s+=this.options.snippet?"${0:pass}":"pass",s;if(0===a.node.parameters.length)return s+=this.options.snippet?"${0:pass}":"pass",s;const i=function(e){const t=[];let n=!1;for(const a of e)a.name&&t.push([a,0===a.category&&!!a.name&&n]),1===a.category&&(n=!0);return t}(t?a.node.parameters:a.node.parameters.slice(1));return"__init__"!==a.node.name.value&&(s+="return "),r&&(s+="await "),n?s+`super().${a.node.name.value}`:s+`super().${a.node.name.value}(${i.map((function(e){var t;const n=null===(t=e[0].name)||void 0===t?void 0:t.value;if(1===e[0].category)return`*${n}`;if(2===e[0].category)return`**${n}`;return e[1]?`${n}=${n}`:n})).join(", ")})`}createReplaceEdits(e,t,n){const a=38===(null==t?void 0:t.nodeType)?this.position.character-e.length+t.value.length:this.position.character,r={start:{line:this.position.line,character:this.position.character-e.length},end:{line:this.position.line,character:a}};return i.TextEdit.replace(r,n)}shouldProcessDeclaration(e){return!0}addSymbol(e,t,n,a,r){var s,o,l,p;this.program.handleMemoryHighUsage();let c=(0,T.getLastTypedDeclarationForSymbol)(t);if(!c){const e=t.getDeclarations();e.length>0&&(c=e[e.length-1])}if(!this.shouldProcessDeclaration(c))return;c=c?null!==(s=this.evaluator.resolveAliasDeclaration(c,!0))&&void 0!==s?s:c:void 0;const d=r.autoImportSource?this.getAutoImportText(e,r.autoImportSource,r.autoImportAlias):void 0;if(this.itemToResolve){const n=(0,x.fromLSPAny)(this.itemToResolve.data);if(n.symbolLabel!==e)return;if(void 0===this.itemToResolve.additionalTextEdits&&void 0!==(null===(o=r.edits)||void 0===o?void 0:o.additionalTextEdits)&&(this.itemToResolve.additionalTextEdits=(0,M.convertToTextEdits)(r.edits.additionalTextEdits)),n.autoImportText)return;const a=this.evaluator.getEffectiveTypeOfSymbol(t);if(!a)return;const s=(0,U.getTypeDetail)(this.evaluator,a,c,e,r,this.configOptions.functionSignatureDisplay),l=(0,L.getDocumentationPartsForTypeAndDecl)(this.sourceMapper,a,c,this.evaluator,{name:e,symbol:t,boundObjectOrClass:r.boundObjectOrClass});this.options.format===i.MarkupKind.Markdown||this.options.format===i.MarkupKind.PlainText?this.itemToResolve.documentation=(0,U.getCompletionItemDocumentation)(s,l,this.options.format):(0,A.fail)(`Unsupported markup type: ${this.options.format}`)}else if(c){let t=this._convertDeclarationTypeToItemKind(c);1===c.type&&r.boundObjectOrClass&&(0,C.isInstantiableClass)(r.boundObjectOrClass)&&C.ClassType.isEnumClass(r.boundObjectOrClass)&&3===(null===(l=c.node.parent)||void 0===l?void 0:l.nodeType)&&(t=i.CompletionItemKind.EnumMember),this.addNameToCompletions(null!==(p=r.autoImportAlias)&&void 0!==p?p:e,t,n,a,{autoImportText:d,extraCommitChars:r.extraCommitChars,funcParensDisabled:r.funcParensDisabled,edits:r.edits})}else{const s=t.getSynthesizedType();if(s){const t=this._convertTypeToItemKind(s);this.addNameToCompletions(e,t,n,a,{extraCommitChars:r.extraCommitChars,funcParensDisabled:r.funcParensDisabled,edits:r.edits})}}}getMemberAccessCompletions(e,t){const n=new Map,a=new W;let r=this.evaluator.getType(e);return r?(r=this.evaluator.makeTopLevelTypeVarsConcrete(r),(0,C.isUnknown)(r)&&r.possibleType&&(r=this.evaluator.makeTopLevelTypeVarsConcrete(r.possibleType)),(0,I.doForEachSubtype)(r,(r=>{if(r=this.evaluator.makeTopLevelTypeVarsConcrete(r),(0,C.isClass)(r)){const e=C.TypeBase.isInstance(r);if(C.ClassType.isEnumClass(r)&&e){const e=r.details.baseClasses.find((e=>(0,C.isClass)(e)&&C.ClassType.isBuiltIn(e,"Enum")));if(!e)return;(0,I.getMembersForClass)(e,n,!0)}else(0,I.getMembersForClass)(r,n,e)}else if((0,C.isModule)(r))(0,I.getMembersForModule)(r,n);else if((0,C.isFunction)(r)||(0,C.isOverloadedFunction)(r)){const t=this.evaluator.getBuiltInType(e,"function");t&&(0,C.isInstantiableClass)(t)&&(0,I.getMembersForClass)(t,n,!0)}else if((0,I.isNoneInstance)(r)){const t=this.evaluator.getBuiltInType(e,"object");t&&(0,C.isInstantiableClass)(t)&&(0,I.getMembersForClass)(t,n,C.TypeBase.isInstance(r))}this._addSymbolsForSymbolTable(n,(()=>!0),t,e,!1,(0,C.isClass)(r)?r:void 0,a)})),a):a}addAutoImportCompletions(e,t,n,a){if(!this.configOptions.autoImportCompletions)return;const r=this.program.getSourceFileInfo(this.fileUri),s=(0,V.buildModuleSymbolsMap)(this.program.getSourceFileInfoList().filter((e=>e!==r))),i=new V.AutoImporter(this.execEnv,this.importResolver,this.parseResults,this.position,a,s,{lazyEdit:n}),o=[];(0,w.appendArray)(o,i.getAutoImportCandidates(e,t,void 0,this.cancellationToken)),this.addImportResults(o,e,a)}addImportResults(e,t,n){var a,r;for(const s of e)s.symbol?this.addSymbol(s.name,s.symbol,t,n,{extraCommitChars:!0,autoImportSource:s.source,autoImportAlias:s.alias,edits:{textEdit:this.createReplaceEdits(t,void 0,s.insertionText),additionalTextEdits:s.edits}}):this.addNameToCompletions(null!==(a=s.alias)&&void 0!==a?a:s.name,null!==(r=s.kind)&&void 0!==r?r:i.CompletionItemKind.Module,t,n,{extraCommitChars:!0,autoImportText:this.getAutoImportText(s.name,s.source,s.alias),edits:{textEdit:this.createReplaceEdits(t,void 0,s.insertionText),additionalTextEdits:s.edits}})}addExtraCommitChar(e){}addNameToCompletions(e,n,a,r,s){var o,l,p,d;if(!(!!(null==s?void 0:s.autoImportText)||D.isPatternInSymbol(a,e)))return;if(r.has(e,W.matchKindAndImportText,n,null===(o=null==s?void 0:s.autoImportText)||void 0===o?void 0:o.importText))return;const u=i.CompletionItem.create(e);u.kind=n,(null==s?void 0:s.extraCommitChars)&&this.addExtraCommitChar(u);const m={uri:this.fileUri.toString(),position:this.position};if(!(null==s?void 0:s.funcParensDisabled)&&this.options.snippet||(m.funcParensDisabled=!0),(null==s?void 0:s.moduleUri)&&(m.moduleUri=s.moduleUri.toString()),u.data=(0,x.toLSPAny)(m),(null==s?void 0:s.sortText)||(null==s?void 0:s.itemDetail)?(u.sortText=s.sortText,u.detail=s.itemDetail):(null==s?void 0:s.autoImportText)?(u.sortText=this._makeSortText(B.AutoImport,`${e}.${this._formatInteger(s.autoImportText.source.length,2)}.${s.autoImportText.source}`,s.autoImportText.importText),m.autoImportText=s.autoImportText.importText,u.detail=t.autoImportDetail,s.autoImportText.source&&(u.labelDetails={description:s.autoImportText.source})):n===i.CompletionItemKind.EnumMember?u.sortText=this._makeSortText(B.EnumMember,e):f.isDunderName(e)?u.sortText=this._makeSortText(B.DunderSymbol,e):""===a&&f.isPrivateOrProtectedName(e)?u.sortText=this._makeSortText(B.PrivateSymbol,e):u.sortText=this._makeSortText(B.NormalSymbol,e),m.symbolLabel=e,this.options.format===i.MarkupKind.Markdown){let e="";(null==s?void 0:s.autoImportText)&&(e+=s.autoImportText.importText,(s.typeDetail||s.documentation)&&(e+="\n\n")),(null==s?void 0:s.typeDetail)&&(e+="```python\n"+s.typeDetail+"\n```\n"),(null==s?void 0:s.documentation)&&(e+="---\n",e+=(0,c.convertDocStringToMarkdown)(s.documentation)),e=e.trimEnd(),e&&(u.documentation={kind:i.MarkupKind.Markdown,value:e})}else if(this.options.format===i.MarkupKind.PlainText){let e="";(null==s?void 0:s.autoImportText)&&(e+=s.autoImportText.importText,(s.typeDetail||s.documentation)&&(e+="\n\n")),(null==s?void 0:s.typeDetail)&&(e+=s.typeDetail+"\n"),(null==s?void 0:s.documentation)&&(e+="\n"+(0,c.convertDocStringToPlainText)(s.documentation)),e=e.trimEnd(),e&&(u.documentation={kind:i.MarkupKind.PlainText,value:e})}else(0,A.fail)(`Unsupported markup type: ${this.options.format}`);if((null===(l=null==s?void 0:s.edits)||void 0===l?void 0:l.format)&&(u.insertTextFormat=s.edits.format),(null===(p=null==s?void 0:s.edits)||void 0===p?void 0:p.textEdit)&&(u.textEdit=s.edits.textEdit),(null===(d=null==s?void 0:s.edits)||void 0===d?void 0:d.additionalTextEdits)&&(u.additionalTextEdits=(0,M.convertToTextEdits)(s.edits.additionalTextEdits),this.itemToResolve)){(0,x.fromLSPAny)(this.itemToResolve.data).autoImportText===m.autoImportText&&(this.itemToResolve.additionalTextEdits=u.additionalTextEdits)}r.set(u)}getAutoImportText(e,t,n){const a=(0,L.getAutoImportText)(e,t,n);let r="";return this.options.format===i.MarkupKind.Markdown?r=`\`\`\`\n${a}\n\`\`\``:this.options.format===i.MarkupKind.PlainText?r=a:(0,A.fail)(`Unsupported markup type: ${this.options.format}`),{source:null!=t?t:"",importText:r}}get _fileContents(){var e,t;return null!==(t=null===(e=this.parseResults)||void 0===e?void 0:e.text)&&void 0!==t?t:""}_getCompletions(){var e,t;const n=(0,P.convertPositionToOffset)(this.position,this.parseResults.tokenizerOutput.lines);if(void 0===n)return;let a=m.findNodeByOffset(this.parseResults.parserOutput.parseTree,n);const r=m.getTokenOverlapping(this.parseResults.tokenizerOutput.tokens,n);if(5===(null==r?void 0:r.type)){const e=r;this._stringLiteralContainer=F.TextRange.contains(e,n)||65536&e.flags?e:void 0}else if(a){const e=m.getParentNodeOfType(a,27);e&&(this._stringLiteralContainer=e.token)}const s=a,i=a?m.getNodeDepth(a):0;if(!s||38!==s.nodeType){let t=n,r=!1;for(;t>=0;){t--;const n=this._fileContents.substr(t,1);if("("===n||"\n"===n||"}"===n)break;","===n&&(r=!0);const o=m.findNodeByOffset(this.parseResults.parserOutput.parseTree,t);if(o&&o!==s){m.getNodeDepth(o)>i&&(a=o,r&&23===(null===(e=a.parent)||void 0===e?void 0:e.nodeType)&&(a=a.parent));break}}}if(void 0===a)return;const o=this.parseResults.tokenizerOutput.lines.getItemAt(this.position.line),l=this._fileContents.substr(o.start,o.length),p=l.substr(0,this.position.character),c=l.substr(this.position.character),d=p.search(/\w+$/),u=d>=0?p.substr(d):"";if(this._isWithinComment(n))return;let y=a;for(;y&&0!==y.nodeType;)y=y.parent;let g=y||a;for(;;){if((0,k.throwIfCancellationRequested)(this.cancellationToken),49===g.nodeType)return this._getLiteralCompletions(g,n,u,p,c);if(48===g.nodeType||27===g.nodeType)return;if(37===g.nodeType)return this._getImportModuleCompletions(g);if(0===g.nodeType)return this._getExpressionErrorCompletions(g,n,u,p,c);if(35===g.nodeType)return this.getMemberAccessCompletions(g.leftExpression,u);if(15===g.nodeType){const e=new W;if(this._tryAddTypedDictKeysFromDictionary(g,void 0,u,p,c,e))return e}const e=m.getFirstAncestorOrSelfOfKind(g,17);if(e&&15===(null===(t=e.parent)||void 0===t?void 0:t.nodeType)){const t=e.parent;if(t.trailingCommaToken&&t.trailingCommaToken.start<n){const e=new W;if(this._tryAddTypedDictKeysFromDictionary(t,void 0,u,p,c,e))return e}}if(38===g.nodeType){const e=this._tryGetNameCompletions(g,n,u,p,c);if(e||void 0===e)return e}if(31===g.nodeType&&"["===this.options.triggerCharacter)return;if(22===g.nodeType)return this._getImportFromCompletions(g,n,u);if((0,z.isExpressionNode)(g))return this._getExpressionCompletions(g,u,p,c);if(50===g.nodeType){if(g.parent&&25===g.parent.nodeType&&!g.parent.name&&g.parent.typeExpression&&F.TextRange.getEnd(g.parent.typeExpression)<n&&n<=g.parent.exceptSuite.start)return;if(g.parent&&10===g.parent.nodeType&&(!g.parent.name||!g.parent.name.value)&&0===g.parent.arguments.length&&n<=g.parent.suite.start)return;return this._getStatementCompletions(g,u,p,c)}if(36===g.nodeType)return this._getStatementCompletions(g,u,p,c);if(41===g.nodeType&&0===g.length&&g.parent&&30===g.parent.nodeType)return;if(!g.parent)break;g=g.parent}}_tryGetNameCompletions(e,t,n,a,r){var s,i,o;if(!e.parent)return!1;if(21!==e.parent.nodeType||e.parent.alias!==e){if(37===e.parent.nodeType){if(e.parent.parent&&21===e.parent.parent.nodeType&&!e.parent.parent.alias&&F.TextRange.getEnd(e.parent.parent)<t)return;return this._getImportModuleCompletions(e.parent)}if(23===e.parent.nodeType){if(e.parent.alias===e)return;const a=e.parent.parent;if(a&&22===a.nodeType){if(!e.parent.alias&&F.TextRange.getEnd(e.parent)<t)return;return e.parent.name===e?this._getImportFromCompletions(a,t,n):this._getImportFromCompletions(a,t,"")}return!1}if(35===e.parent.nodeType&&e===e.parent.memberName)return this.getMemberAccessCompletions(e.parent.leftExpression,n);if(25!==e.parent.nodeType||e!==e.parent.name){if(28===e.parent.nodeType&&e===e.parent.name)return(null===(s=e.parent.decorators)||void 0===s?void 0:s.some((e=>this._isOverload(e))))?this._getMethodOverloadsCompletions(n,e):void 0;if(!(41===e.parent.nodeType&&e===e.parent.name||10===e.parent.nodeType&&e===e.parent.name||26===e.parent.nodeType&&F.TextRange.contains(e.parent.targetExpression,e.start)||33===e.parent.nodeType&&F.TextRange.contains(e.parent.targetExpression,e.start))){if(3===e.parent.nodeType||4===e.parent.nodeType){if((4===e.parent.nodeType?e.parent.name:e.parent.leftExpression)!==e||0===n.length)return!1;const t=this.evaluator.getDeclarationsForNameNode(e);if(1!==(null==t?void 0:t.length)||!(0,l.isVariableDeclaration)(t[0])||t[0].node!==e)return!1;const s=this._getExpressionCompletions(e,n,a,r);return s&&s.delete(e.value),s}if(47===e.parent.nodeType&&50===(null===(i=e.parent.parent)||void 0===i?void 0:i.nodeType)&&10===(null===(o=e.parent.parent.parent)||void 0===o?void 0:o.nodeType)){const t=this._getClassVariableCompletions(e);if(t)return t}return!1}}}}_isWithinComment(e){var t,n;const a=function(e,t){const n=t.getItemAtPosition(e);if(n<0)return;let a=t.getItemAt(n);if(e>a.start&&e<a.start+a.length)return;for(let e=n-1;e>=0;e--){const n=t.getItemAt(e);if(a.start!==n.start)break;a=n}if(e<=a.start)return a;return S.assert(n+1<t.length),t.getItemAt(n+1)}(e,this.parseResults.tokenizerOutput.tokens);return!!a&&(null!==(n=null===(t=a.comments)||void 0===t?void 0:t.some((t=>F.TextRange.overlaps(t,e))))&&void 0!==n&&n)}_getExpressionErrorCompletions(e,t,n,a,r){var s;switch(e.category){case 0:return this._createSingleKeywordCompletion("in");case 1:return this._createSingleKeywordCompletion("else");case 7:case 2:{const t=this.parseResults.tokenizerOutput,s=(0,P.convertPositionToOffset)(this.position,t.lines),i=m.getTokenIndexAtLeft(t.tokens,s),o=m.getTokenAtIndex(t.tokens,i),l=m.getTokenAtIndex(t.tokens,i-1);if(2===e.category){if(20===(null==o?void 0:o.type)||19===(null==o?void 0:o.type))break;if(8!==(null==o?void 0:o.type)||F.TextRange.getEnd(o)!==s)return this._getExpressionCompletions(e,n,a,r);if(20!==(null==l?void 0:l.type))return this._getExpressionCompletions(e,n,a,r);const t=F.TextRange.getEnd(l),i=m.findNodeByOffset(this.parseResults.parserOutput.parseTree,t);if(0!==(null==i?void 0:i.nodeType)||7!==i.category)return this._getExpressionCompletions(e,n,a,r);e=i}else if(7===e.category&&!(20!==(null==o?void 0:o.type)&&19!==(null==o?void 0:o.type)||20!==(null==l?void 0:l.type)&&19!==(null==l?void 0:l.type)))return;return this._getMissingMemberAccessNameCompletions(e,n)}case 4:return this._getExpressionCompletions(e,n,a,r);case 11:case 3:{let s=this._getLiteralCompletions(e,t,n,a,r);return s||(s=this._getExpressionCompletions(e,n,a,r)),s}case 10:if(e.child&&38===e.child.nodeType)return(null===(s=e.decorators)||void 0===s?void 0:s.some((e=>this._isOverload(e))))?this._getMethodOverloadsCompletions(n,e.child):this.getMethodOverrideCompletions(n,e.child,e.decorators)}}_getMissingMemberAccessNameCompletions(e,t){if(e.child&&(0,z.isExpressionNode)(e.child))return this.getMemberAccessCompletions(e.child,t)}_isOverload(e){return m.checkDecorator(e,"overload")}_createSingleKeywordCompletion(e){const t=i.CompletionItem.create(e);t.kind=i.CompletionItemKind.Keyword,t.sortText=this._makeSortText(B.LikelyKeyword,e);const n=new W;return n.set(t),n}_addClassVariableTypeAnnotationCompletions(e,t,n){var a,r,s,o;if(!(54===(null===(a=t.parent)||void 0===a?void 0:a.nodeType)&&38===t.parent.valueExpression.nodeType&&t.parent.typeAnnotation===t&&47===(null===(r=t.parent.parent)||void 0===r?void 0:r.nodeType)&&50===(null===(s=t.parent.parent.parent)||void 0===s?void 0:s.nodeType)&&10===(null===(o=t.parent.parent.parent.parent)||void 0===o?void 0:o.nodeType)))return;const p=m.getEnclosingClass(t,!1);if(!p)return;const c=this.evaluator.getTypeOfClass(p);if(!c)return;const d=t.parent.valueExpression.value,u=(0,I.lookUpClassMember)(c.classType,d,17);if(u){const t=this.evaluator.getTypeOfMember(u),a=this.evaluator.printType(t,{enforcePythonSyntax:!0,expandTypeAlias:!1});return void this.addNameToCompletions(a,i.CompletionItemKind.Reference,e,n,{sortText:this._makeSortText(B.LikelyKeyword,a)})}const y=new Map;for(const e of c.classType.details.mro)e!==c.classType&&(0,C.isInstantiableClass)(e)&&(0,I.getMembersForClass)(e,y,!1);const g=y.get(d);if(!g)return;const f=g.getDeclarations().filter((e=>(0,l.isVariableDeclaration)(e)&&"builtins"!==e.moduleName));if(0===f.length||f.some((e=>e.node&&m.getEnclosingClass(e.node,!1)===p)))return;const T=f.filter((e=>e.typeAnnotationNode));if(0===T.length)return;const v=(0,h.isStubFile)(this.fileUri)?3:2,b=`${m.printExpression(T[T.length-1].typeAnnotationNode,v)}`;this.addNameToCompletions(b,i.CompletionItemKind.Reference,e,n,{sortText:this._makeSortText(B.LikelyKeyword,b)})}_getClassVariableCompletions(e){const t=m.getEnclosingClass(e,!1);if(!t)return;const n=this.evaluator.getTypeOfClass(t);if(!n)return;const a=new Map;for(const e of n.classType.details.mro)(0,C.isInstantiableClass)(e)&&(0,I.getMembersForClass)(e,a,!1);const r=new W;return a.forEach(((n,a)=>{if(f.isPrivateName(a)||n.isPrivateMember()||n.isExternallyHidden()||!D.isPatternInSymbol(e.value,a))return;const s=n.getDeclarations().filter((e=>(0,l.isVariableDeclaration)(e)&&"builtins"!==e.moduleName));0===s.length||s.some((e=>e.node&&m.getEnclosingClass(e.node,!1)===t))||this.addSymbol(a,n,e.value,r,{})})),r.size>0?r:void 0}_getMethodOverloadsCompletions(e,t){var n;const a=function(e,t){const n=m.getEnclosingClass(t,!1);if(n){const t=e.getTypeOfClass(n);if(!t)return;const a=new Map;for(const e of t.classType.details.mro)(0,C.isInstantiableClass)(e)&&(0,I.getMembersForClass)(e,a,!1);return a}const a=m.getEnclosingModule(t);if(a){const e=o.getScope(a);return null==e?void 0:e.symbolTable}return}(this.evaluator,t);if(!a)return;const r=28===(null===(n=t.parent)||void 0===n?void 0:n.nodeType)||void 0,s=new W,i=m.getEnclosingFunction(t);return a.forEach(((n,a)=>{const o=(0,T.getLastTypedDeclarationForSymbol)(n);if(!o||5!==o.type)return;if(!o.node.decorators.some((e=>this._isOverload(e))))return;const l=n.getDeclarations();if((1!==l.length||!l.some((e=>e.node===i)))&&D.isPatternInSymbol(t.value,a)){const i=this.createReplaceEdits(e,t,o.node.name.value);this.addSymbol(a,n,t.value,s,{funcParensDisabled:r,edits:{textEdit:i}})}})),s}_printMethodSignature(e,t){const n=t.node;let a;(0,h.isStubFile)(this.fileUri)?a=!0:e.details.moduleName===t.moduleName&&(a=!1);const r=(0,h.isStubFile)(this.fileUri)?3:2,s=n.parameters.map(((e,t)=>{let s="";1===e.category?s+="*":2===e.category&&(s+="**"),e.name&&(s+=e.name.value);const i=m.getTypeAnnotationForParameter(n,t);if(i&&(s+=": "+m.printExpression(i,r)),e.defaultValue){s+=i?" = ":"=";s+=(null!=a?a:!m.isSimpleDefault(e.defaultValue))?"...":m.printExpression(e.defaultValue,r)}return s||e.name||0!==e.category?s:"/"})).join(", ");let i=n.name.value+"("+s+")";return n.returnTypeAnnotation?i+=" -> "+m.printExpression(n.returnTypeAnnotation,r):n.functionAnnotationComment&&(i+=" -> "+m.printExpression(n.functionAnnotationComment.returnTypeAnnotation,r)),i}_getStatementCompletions(e,t,n,a){return this._getExpressionCompletions(e,t,n,a)}_getExpressionCompletions(e,t,n,a){var r,s;if(!this._isIndexArgument(e)&&40===e.nodeType)return;if(59===(null===(r=e.parent)||void 0===r?void 0:r.nodeType)&&e.parent===(null===(s=e.parent.target)||void 0===s?void 0:s.parent))return;const o=new W;return".."===n.slice(-2)||(this._addClassVariableTypeAnnotationCompletions(t,e,o),this._addCallArgumentCompletions(e,t,n,a,!1,o),this._addSymbols(e,t,o),this._findMatchingKeywords(j.forVersion(this.execEnv.pythonVersion),t).map((e=>{if(o.has(e))return;const t=i.CompletionItem.create(e);t.kind=i.CompletionItemKind.Keyword,t.sortText=this._makeSortText(B.Keyword,e),o.set(t)})),t.startsWith("_")||this.itemToResolve||this.addAutoImportCompletions(t,.25,this.options.lazyEdit,o),this._tryAddLiterals(e,t,n,a,o)),o}_isIndexArgument(e){const t=e.parent;return t&&1===t.nodeType&&0===t.argumentCategory&&t.parent&&24===t.parent.nodeType&&t.parent.baseExpression&&38===t.parent.baseExpression.nodeType}_addCallArgumentCompletions(e,t,n,a,r,s){const i=(0,P.convertPositionToOffset)(this.position,this.parseResults.tokenizerOutput.lines),o=(0,y.getCallNodeAndActiveParameterIndex)(e,i,this.parseResults.tokenizerOutput.tokens);if(!o)return;const l=this.evaluator.getCallSignatureInfo(o.callNode,o.activeIndex,o.activeOrFake);if(l){const e=(0,P.convertOffsetToPosition)(l.callNode.leftExpression.start+l.callNode.leftExpression.length,this.parseResults.tokenizerOutput.lines);(0,F.comparePositions)(this.position,e)>0&&(r||this._addNamedParameters(l,t,s),this._addLiteralValuesForArgument(l,t,n,a,s))}}_addLiteralValuesForArgument(e,t,n,a,r){e.signatures.forEach((e=>{if(!e.activeParam)return;const s=e.type,i=s.details.parameters.indexOf(e.activeParam);if(i<0)return;const o=s.details.parameters[i].type;this._addLiteralValuesForTargetType(o,t,n,a,r)}))}_addLiteralValuesForTargetType(e,t,n,a,r){const s=this._getQuoteInfo(t,n);this._getSubTypesWithLiteralValues(e).forEach((e=>{if(C.ClassType.isBuiltIn(e,"str")){const n=(0,_.printLiteralValue)(e,s.quoteCharacter);void 0===s.stringValue?this.addNameToCompletions(n,i.CompletionItemKind.Constant,t,r,{sortText:this._makeSortText(B.LiteralValue,e.literalValue)}):this._addStringLiteralToCompletions(n.substr(1,n.length-2),s,a,r)}}))}_getDictExpressionStringKeys(e,t){const n=function(e){if(15===e.nodeType)return e;let t=e;for(;t&&15!==t.nodeType&&45!==t.nodeType;)if(t=t.parent,!t)return;return t}(e);return n?n.entries.flatMap((e=>17!==e.nodeType||(null==t?void 0:t.has(e.keyExpression.id))?[]:48===e.keyExpression.nodeType?[e.keyExpression.strings.map((e=>e.value)).join("")]:[])):[]}_getSubTypesWithLiteralValues(e){const t=[];return(0,I.doForEachSubtype)(e,(e=>{(0,C.isClassInstance)(e)&&(0,I.isLiteralType)(e)&&t.push(e)})),t}_getIndexKeyType(e){const t=this.evaluator.getBoundMagicMethod(e,"__getitem__");if(t){const e=[];if((0,I.doForEachSignature)(t,(t=>{t.details.parameters.length>=1&&0===t.details.parameters[0].category&&e.push(C.FunctionType.getEffectiveParameterType(t,0))})),e.length>0)return(0,C.combineTypes)(e)}}_getIndexKeys(e,t){var n,a,r,s,i,o,l,p,c;const d=this.evaluator.getType(e.baseExpression);if(!d||!(0,C.isClassInstance)(d))return[];const u=this._getIndexKeyType(d);if(u){const e=[];if(this._getSubTypesWithLiteralValues(u).forEach((t=>{(C.ClassType.isBuiltIn(t,"str")||C.ClassType.isBuiltIn(t,"int")||C.ClassType.isBuiltIn(t,"bool")||C.ClassType.isBuiltIn(t,"bytes")||C.ClassType.isEnumClass(t))&&e.push((0,_.printLiteralValue)(t,this.parseResults.tokenizerOutput.predominantSingleQuoteCharacter))})),e.length>0)return e}if(38!==e.baseExpression.nodeType)return[];const y=null!==(n=this.evaluator.getDeclarationsForNameNode(e.baseExpression))&&void 0!==n?n:[],g=y.length>0?y[0]:void 0;if(!g||1!==g.type&&2!==g.type)return[];if(!g.uri.equals(this.fileUri))return[];let h=e.baseExpression;if(g.node){const e=m.getEvaluationScopeNode(g.node).node;(null===(a=m.getFileInfoFromNode(h))||void 0===a?void 0:a.fileUri.equals(null===(r=m.getFileInfoFromNode(e))||void 0===r?void 0:r.fileUri))&&(h=e)}const f=R.DocumentSymbolCollector.collectFromNode(this.program,e.baseExpression,this.cancellationToken,h),T=new Set;for(const e of f){const n=54===(null===(s=e.node.parent)||void 0===s?void 0:s.nodeType)?e.node.parent:e.node;if(3===(null===(i=n.parent)||void 0===i?void 0:i.nodeType)||4===(null===(o=n.parent)||void 0===o?void 0:o.nodeType)){if(15===n.parent.rightExpression.nodeType){const e=n.parent.rightExpression;for(const t of e.entries.filter((e=>17===e.nodeType))){const e=this.parseResults.text.substr(t.keyExpression.start,t.keyExpression.length).trim();e.length>0&&T.add(e)}}if(9===n.parent.rightExpression.nodeType){const e=n.parent.rightExpression,t=this.evaluator.getType(e.leftExpression);if(!t||!(0,C.isInstantiableClass)(t)||!C.ClassType.isBuiltIn(t,"dict"))continue;for(const t of e.arguments){const e=null!==(p=null===(l=t.name)||void 0===l?void 0:l.value.trim())&&void 0!==p?p:"",n=this.parseResults.tokenizerOutput.predominantSingleQuoteCharacter;e.length>0&&T.add(`${n}${e}${n}`)}}}if(24===(null===(c=n.parent)||void 0===c?void 0:c.nodeType)&&1===n.parent.items.length&&0!==n.parent.items[0].valueExpression.nodeType&&!F.TextRange.containsRange(n.parent,t)){const e=n.parent.items[0],t=this.parseResults.text.substr(e.valueExpression.start,e.valueExpression.length).trim();t.length>0&&T.add(t)}}return Array.from(T)}_getLiteralCompletions(e,t,n,a,r){if(('"'===this.options.triggerCharacter||"'"===this.options.triggerCharacter)&&e.start!==t-1)return;const s=new W;return this._tryAddLiterals(e,n,a,r,s)?s:void 0}_tryAddLiterals(e,n,a,r,s){var o,l,p,c,d,u;const m=function(e){var t;if(!e.parent)return;if(49!==e.nodeType)return{parent:e.parent,child:e};if(!e.parent.parent)return;if(48!==(null===(t=e.parent)||void 0===t?void 0:t.nodeType)||e.parent.strings.length>1)return;return{parent:e.parent.parent,child:e.parent}}(e);if(!m)return!1;const y=3===m.parent.nodeType?m.parent.rightExpression===m.child?m.child:void 0:(0,z.isExpressionNode)(m.child)?m.child:void 0;if(y){const e=this.evaluator.getExpectedType(y);if(e&&(0,I.containsLiteralType)(e.type))return this._addLiteralValuesForTargetType(e.type,n,a,r,s),!0}const g=m.parent;if(g){let t;if(17===g.nodeType&&g.keyExpression===m.child&&15===(null===(o=g.parent)||void 0===o?void 0:o.nodeType)?t=g.parent:45===(null==g?void 0:g.nodeType)&&(t=g),t&&this._tryAddTypedDictKeysFromDictionary(t,49===e.nodeType?e:void 0,n,a,r,s))return!0}const h=m.parent;if(1===h.nodeType&&24===(null===(l=h.parent)||void 0===l?void 0:l.nodeType)){const o=49===e.nodeType?a:"";if(this._tryAddTypedDictKeysFromIndexer(h.parent,n,o,r,s))return!0;const l=this._getQuoteInfo(n,o),p=this._getIndexKeys(h.parent,e);let c=!1;for(const a of p){if(s.has(a))continue;const o=/^["|'].*["|']$/.test(a);if(49!==e.nodeType||o)if(c=!0,o){const e=a.substr(1,a.length-2);this._addStringLiteralToCompletions(e,l,r,s,t.indexValueDetail)}else this.addNameToCompletions(a,i.CompletionItemKind.Constant,n,s,{sortText:this._makeSortText(B.LiteralValue,a),itemDetail:t.indexValueDetail})}if(c)return!0}const f=m.parent;if(7===f.nodeType&&[2,12,28].includes(f.operator)){const e=this.evaluator.getType(f.leftExpression);if(e&&(0,I.containsLiteralType)(e))return this._addLiteralValuesForTargetType(e,n,a,r,s),!0}const T=m.parent;if(4===T.nodeType&&T.rightExpression===m.child){const e=this.evaluator.getType(T.name);if(e&&(0,I.containsLiteralType)(e))return this._addLiteralValuesForTargetType(e,n,a,r,s),!0}const v=m.parent;if(64===v.nodeType&&0===v.pattern.nodeType&&11===v.pattern.category&&v.suite===m.child&&63===(null===(p=v.parent)||void 0===p?void 0:p.nodeType)){const e=this.evaluator.getType(v.parent.subjectExpression);if(e&&(0,I.containsLiteralType)(e))return this._addLiteralValuesForTargetType(e,n,a,r,s),!0}const b=m.parent;if((67===b.nodeType||69===b.nodeType)&&66===(null===(c=b.parent)||void 0===c?void 0:c.nodeType)&&64===(null===(d=b.parent.parent)||void 0===d?void 0:d.nodeType)&&63===(null===(u=b.parent.parent.parent)||void 0===u?void 0:u.nodeType)){const e=this.evaluator.getType(b.parent.parent.parent.subjectExpression);if(e&&(0,I.containsLiteralType)(e))return this._addLiteralValuesForTargetType(e,n,a,r,s),!0}if(49===e.nodeType){const t=(0,P.convertPositionToOffset)(this.position,this.parseResults.tokenizerOutput.lines),i=e.parent.start<t&&t<F.TextRange.getEnd(e);return this._addCallArgumentCompletions(e,n,a,r,i,s),!0}return!1}_tryAddTypedDictKeys(e,t,n,a,r,s){let i=[];if((0,I.doForEachSubtype)(e,(e=>{(0,C.isClassInstance)(e)&&C.ClassType.isTypedDictClass(e)&&i.push(e)})),0===i.length)return!1;i=this._tryNarrowTypedDicts(i,t);const o=this._getQuoteInfo(n,a),l=new Set(t);return i.forEach((e=>{(0,v.getTypedDictMembersForClass)(this.evaluator,e,!0).knownItems.forEach(((e,t)=>{l.has(t)||s.has(t)||(l.add(t),this._addStringLiteralToCompletions(t,o,r,s))}))})),!0}_tryAddTypedDictKeysFromDictionary(e,t,n,a,r,s){var i;const o=this.evaluator.getExpectedType(e);if(!o)return!1;if(m.getNodeDepth(o.node)<m.getNodeDepth(e))return!1;const l=this._getDictExpressionStringKeys(e,t?new Set([null===(i=t.parent)||void 0===i?void 0:i.id]):void 0);return this._tryAddTypedDictKeys(o.type,l,n,a,r,s)}_tryNarrowTypedDicts(e,t){const n=e.flatMap((e=>{const n=(0,v.getTypedDictMembersForClass)(this.evaluator,e,!0);for(let e=0;e<t.length;e++)if(!n.knownItems.has(t[e]))return[];return[e]}));return 0===n.length?e:n}_getQuoteInfo(e,t){let n,a=e,r=this.parseResults.tokenizerOutput.predominantSingleQuoteCharacter;if(!this._stringLiteralContainer)return{priorWord:e,priorText:t,filterText:a,stringValue:n,quoteCharacter:r};if(void 0!==t){const e=t.lastIndexOf("'"),a=t.lastIndexOf('"');e>a?(n=t.substr(e+1),r="'"):a>e&&(n=t.substr(a+1),r='"')}return 64&this._stringLiteralContainer.flags&&(r=1&this._stringLiteralContainer.flags?'"':"'"),n&&(a=n),{priorWord:e,priorText:t,filterText:a,stringValue:n,quoteCharacter:r}}_tryAddTypedDictKeysFromIndexer(e,t,n,a,r){if(!e)return!1;const s=this.evaluator.getType(e.baseExpression);return!!s&&this._tryAddTypedDictKeys(s,[],t,n,a,r)}_addStringLiteralToCompletions(e,t,n,a,r){if(!D.isPatternInSymbol(t.filterText||"",e))return;const s=`${t.quoteCharacter}${e}${t.quoteCharacter}`;if(a.has(s))return;const o=i.CompletionItem.create(s);o.kind=i.CompletionItemKind.Constant,o.sortText=this._makeSortText(B.LiteralValue,s);let l=this.position.character;void 0!==t.stringValue?l-=t.stringValue.length+1:t.priorWord&&(l-=t.priorWord.length);let p=this.position.character;void 0!==n&&n.startsWith(t.quoteCharacter)&&p++;const c={start:{line:this.position.line,character:l},end:{line:this.position.line,character:p}};o.textEdit=i.TextEdit.replace(c,s),o.detail=r,a.set(o)}_getImportFromCompletions(e,t,n){var a;if(e.isWildcardImport)return;const r=o.getImportInfo(e.module);if(!r)return;const s=new W,i=r.resolvedUris.length>0?r.resolvedUris[r.resolvedUris.length-1]:E.Uri.empty(),p=this.program.getParseResults(i);if(!p)return this._addImplicitImportsToCompletion(r,e,n,s),s;const c=null===(a=o.getScope(p.parserOutput.parseTree))||void 0===a?void 0:a.symbolTable;return c?(this._addSymbolsForSymbolTable(c,((n,a)=>n.getDeclarations().some((e=>!(0,l.isIntrinsicDeclaration)(e)))&&!e.imports.find((e=>e.name.value===a&&!(F.TextRange.contains(e,t)||F.TextRange.getEnd(e)===t)))),n,e,!0,void 0,s),this._addImplicitImportsToCompletion(r,e,n,s),s):s}_addImplicitImportsToCompletion(e,t,n,a){e.implicitImports.forEach((e=>{t.imports.find((t=>t.name.value===e.name))||this.addNameToCompletions(e.name,i.CompletionItemKind.Module,n,a,{moduleUri:e.uri})}))}_findMatchingKeywords(e,t){return e.filter((e=>!t||D.isPatternInSymbol(t,e)))}_addNamedParameters(e,t,n){const a=new Set;e.signatures.forEach((e=>{this._addNamedParametersToMap(e.type,a)})),e.signatures.forEach((e=>{var t;if(e.type.boundToType){Array.from((null===(t=e.type.boundToType.details.typedDictEntries)||void 0===t?void 0:t.knownItems.keys())||[]).forEach((e=>a.add(e)))}})),e.callNode.arguments.forEach((e=>{e.name&&a.delete(e.name.value)})),a.forEach((e=>{if(D.isPatternInSymbol(t,e)){const t=e+"=";if(n.has(t))return;const a=i.CompletionItem.create(t);a.kind=i.CompletionItemKind.Variable;const r={uri:this.fileUri.toString(),position:this.position};a.data=(0,x.toLSPAny)(r),a.sortText=this._makeSortText(B.NamedParameter,e),a.filterText=e,n.set(a)}}))}_addNamedParametersToMap(e,t){(0,u.getParameterListDetails)(e).params.forEach((e=>{e.param.name&&e.source!==u.ParameterSource.PositionOnly&&(f.isPrivateOrProtectedName(e.param.name)||t.add(e.param.name))}))}_addSymbols(e,t,n){let a=e;for(;a;){let r=(0,g.getScopeForNode)(a);if(r){for(;r;)this._addSymbolsForSymbolTable(r.symbolTable,(()=>!0),t,e,!1,void 0,n),r=r.parent;if(10===a.nodeType){const r=this.evaluator.getTypeOfClass(a);r&&(0,C.isInstantiableClass)(r.classType)&&r.classType.details.mro.forEach(((a,r)=>{(0,C.isInstantiableClass)(a)&&this._addSymbolsForSymbolTable(C.ClassType.getSymbolTable(a),(e=>!!e.isClassMember()&&e.getDeclarations().some((e=>1===e.type))),t,e,!1,void 0,n)}))}break}a=a.parent}}_addSymbolsForSymbolTable(e,t,n,a,r,s,i){const o=m.isWithinAnnotationComment(a)||m.isWithinTypeAnnotation(a,!1);e.forEach(((e,l)=>{if(!(!(0,T.isVisibleExternally)(e)&&!e.getDeclarations().some((e=>(0,p.isDefinedInFile)(e,this.fileUri))))&&t(e,l)&&!i.has(l)){const t=!this._shouldShowAutoParensForClass(e,a);this.addSymbol(l,e,n,i,{boundObjectOrClass:s,funcParensDisabled:r||o||t,extraCommitChars:!r&&!!n})}}))}_shouldShowAutoParensForClass(e,t){var n,a;if(e.getDeclarations().every((e=>6!==e.type)))return!0;if(1===(null===(n=t.parent)||void 0===n?void 0:n.nodeType)&&10!==(null===(a=t.parent.parent)||void 0===a?void 0:a.nodeType))return!0;const r=m.getTokenIndexAtLeft(this.parseResults.tokenizerOutput.tokens,t.start),s=m.getTokenAtIndex(this.parseResults.tokenizerOutput.tokens,r);return s&&9===s.type&&2===s.operatorType}_getRecentListIndex(e,t){return q._mostRecentCompletions.findIndex((n=>n.label===e&&n.autoImportText===t))}_makeSortText(e,t,n=""){const a=this._getRecentListIndex(t,n);return a>=0&&(e===B.AutoImport?e=B.RecentAutoImport:e===B.ImportModuleName?e=B.RecentImportModuleName:e!==B.Keyword&&e!==B.NormalSymbol&&e!==B.PrivateSymbol&&e!==B.DunderSymbol||(e=B.RecentKeywordOrSymbol)),this._formatInteger(e,2)+"."+this._formatInteger(a,4)+"."+t}_formatInteger(e,t){const n="0".charCodeAt(0);let a="";for(let r=0;r<t;r++){let t=Math.floor(e%10);t<0&&(t=9),a=String.fromCharCode(t+n)+a,e=Math.floor(e/10)}return a}_convertDeclarationTypeToItemKind(e){const t=this.evaluator.resolveAliasDeclaration(e,!0);if(!t)return i.CompletionItemKind.Variable;switch(t.type){case 0:return"class"===t.intrinsicType?i.CompletionItemKind.Class:i.CompletionItemKind.Variable;case 2:case 4:return i.CompletionItemKind.Variable;case 3:return i.CompletionItemKind.TypeParameter;case 1:return t.isConstant||t.isFinal?i.CompletionItemKind.Constant:i.CompletionItemKind.Variable;case 5:if(this._isPossiblePropertyDeclaration(t)){const e=this.evaluator.getTypeOfFunction(t.node);if(e&&(0,I.isMaybeDescriptorInstance)(e.decoratedType,!1))return i.CompletionItemKind.Property}return t.isMethod?i.CompletionItemKind.Method:i.CompletionItemKind.Function;case 6:case 7:return i.CompletionItemKind.Class;case 8:return i.CompletionItemKind.Module}}_convertTypeToItemKind(e){switch(e.category){case 7:return i.CompletionItemKind.Module;case 6:return i.CompletionItemKind.Class;case 4:case 5:return(0,I.isMaybeDescriptorInstance)(e,!1)?i.CompletionItemKind.Property:i.CompletionItemKind.Function;case 9:return i.CompletionItemKind.TypeParameter;default:return i.CompletionItemKind.Variable}}_getImportModuleCompletions(e){const t={leadingDots:e.leadingDots,hasTrailingDot:e.hasTrailingDot||!1,nameParts:e.nameParts.map((e=>e.value)),importedSymbols:new Set},n=this.importResolver.getCompletionSuggestions(this.fileUri,this.execEnv,t),a=new W;if(!e.hasTrailingDot&&e.parent&&22===e.parent.nodeType&&e.parent.missingImportKeyword){const e="import",t=i.CompletionItem.create(e);t.kind=i.CompletionItemKind.Keyword,t.sortText=this._makeSortText(B.Keyword,e),a.set(t)}return n.forEach(((e,t)=>{this.addNameToCompletions(t,i.CompletionItemKind.Module,"",a,{sortText:this._makeSortText(B.ImportModuleName,t),moduleUri:e})})),a}_isPossiblePropertyDeclaration(e){return e.isMethod&&e.node.decorators.length>0}}t.CompletionProvider=q,q._mostRecentCompletions=[];class W{constructor(){this._completions=new Map}get size(){return this._completions.size}set(e){const t=this._completions.get(e.label);t?Array.isArray(t)?t.push(e):this._completions.set(e.label,[t,e]):this._completions.set(e.label,e)}get(e){return this._completions.get(e)}has(e,t,n,a){const r=this._completions.get(e);return!!r&&(!t||t(r,n,a))}clear(){this._completions.clear()}delete(e){return this._completions.delete(e)}toArray(){var e;const t=[];return null===(e=this._completions)||void 0===e||e.forEach((e=>{Array.isArray(e)?e.forEach((e=>{t.push(e)})):t.push(e)})),t}static matchKindAndImportText(e,t,n){var a;return Array.isArray(e)?!!e.find((e=>{var a;return e.kind===t&&(null===(a=G(e))||void 0===a?void 0:a.autoImportText)===n})):e.kind===t&&(null===(a=G(e))||void 0===a?void 0:a.autoImportText)===n}static labelOnlyIgnoringAutoImports(e){var t;if(Array.isArray(e)){if(e.find((e=>{var t;return!(null===(t=G(e))||void 0===t?void 0:t.autoImportText)})))return!0}else if(!(null===(t=G(e))||void 0===t?void 0:t.autoImportText))return!0;return!1}}function G(e){return(0,x.fromLSPAny)(e.data)}t.CompletionMap=W},900:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getCompletionItemDocumentation=t.getTypeDetail=void 0;const a=n(6412),r=n(74124),s=n(808),i=n(8312),o=n(19428);t.getTypeDetail=function(e,t,n,a,r,l){if(!n)return(0,i.isModule)(t)?a:void 0;switch(n.type){case 0:case 1:case 2:case 3:{let n=!1;if(t&&i.TypeBase.isInstantiable(t)){const e=(0,i.getTypeAliasInfo)(t);e&&e.name===a&&(n=!0)}return 5===t.category||4===t.category?(0,o.getToolTipForType)(t,"",a,e,!1,l):a+": "+e.printType(t,{expandTypeAlias:n})}case 5:{const n=(null==r?void 0:r.boundObjectOrClass)&&((0,i.isFunction)(t)||(0,i.isOverloadedFunction)(t))?e.bindFunctionToClassOrObject(r.boundObjectOrClass,t):t;if(!n)return;if((0,s.isProperty)(n)&&(null==r?void 0:r.boundObjectOrClass)&&(0,i.isClassInstance)(r.boundObjectOrClass)){const t=e.getGetterTypeFromProperty(n,!0)||i.UnknownType.create();return a+": "+e.printType(t)+" (property)"}return(0,o.getToolTipForType)(n,"",a,e,!1,l)}case 6:case 7:return"class "+a+"()";default:return a}},t.getCompletionItemDocumentation=function(e,t,n){if(n===a.MarkupKind.Markdown){let n="```python\n"+e+"\n```\n";return t&&(n+="---\n",n+=(0,r.convertDocStringToMarkdown)(t)),n=n.trimEnd(),{kind:a.MarkupKind.Markdown,value:n}}if(n===a.MarkupKind.PlainText){let n=e+"\n";return t&&(n+="\n",n+=(0,r.convertDocStringToPlainText)(t)),n=n.trimEnd(),{kind:a.MarkupKind.PlainText,value:n}}}},46772:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.TypeDefinitionProvider=t.DefinitionProvider=t.filterDefinitions=t.addDeclarationsToDefinitions=t.DefinitionFilter=void 0;const i=n(9316),o=n(65392),l=s(n(28340)),p=n(76392),c=n(808),d=n(8312),u=n(64704),m=n(28040),y=n(86016),g=n(96193),h=n(37636),f=n(55164);var T;function v(e,t,n,a){n&&n.forEach((n=>{var r;let s=e.resolveAliasDeclaration(n,!0,{allowExternallyHiddenAccess:!0});if(!s||s.uri.isEmpty())return;if(8===s.type&&(s.isUnresolved||(0,o.isUnresolvedAliasDeclaration)(s)))return;if(8===s.type&&s.symbolName&&s.submoduleFallback&&!s.submoduleFallback.uri.isEmpty()&&(s=s.submoduleFallback),I(a,{uri:s.uri,range:s.range}),(0,o.isFunctionDeclaration)(s)){const t=null===(r=e.getTypeForDeclaration(s))||void 0===r?void 0:r.type;if(t&&(0,d.isOverloadedFunction)(t))for(const e of t.overloads.map((e=>e.details.declaration)).filter(y.isDefined))I(a,{uri:e.uri,range:e.range})}if(!(0,p.isStubFile)(s.uri))return;if(8===s.type)return void t.findModules(s.uri).map((e=>{var t;return null===(t=(0,i.getFileInfo)(e))||void 0===t?void 0:t.fileUri})).filter(y.isDefined).forEach((e=>I(a,{uri:e,range:{start:{line:0,character:0},end:{line:0,character:0}}})));const l=t.findDeclarations(s);for(const e of l)e&&!e.uri.isEmpty()&&I(a,{uri:e.uri,range:e.range})}))}function b(e,t){if(e===T.All)return t;const n=e===T.PreferStubs,a=e=>n===(0,p.isStubFile)(e.uri);return t.find(a)?t.filter(a):t}!function(e){e.All="all",e.PreferSource="preferSource",e.PreferStubs="preferStubs"}(T||(t.DefinitionFilter=T={})),t.addDeclarationsToDefinitions=v,t.filterDefinitions=b;class _{constructor(e,t,n,a,r,s,i){this.sourceMapper=e,this.evaluator=t,this._serviceProvider=n,this.node=a,this.offset=r,this._filter=s,this.token=i}getDefinitionsForNode(e,t){var n;(0,u.throwIfCancellationRequested)(this.token);const a=[],r=null===(n=this._serviceProvider)||void 0===n?void 0:n.tryGet(h.ServiceKeys.symbolDefinitionProvider);if(r&&r.forEach((n=>{const r=n.tryGetDeclarations(e,t,this.token);this.resolveDeclarations(r,a)})),0===a.length)if(38===e.nodeType){const t=this.evaluator.getDeclarationsForNameNode(e);this.resolveDeclarations(t,a)}else if(49===e.nodeType){const t=this.evaluator.getDeclarationsForStringNode(e);this.resolveDeclarations(t,a)}if(0!==a.length)return b(this._filter,a)}resolveDeclarations(e,t){v(this.evaluator,this.sourceMapper,e,t)}}t.DefinitionProvider=class extends _{constructor(e,t,n,a,r){const s=e.getSourceMapper(t,r),i=e.getParseResults(t),{node:o,offset:l}=C(i,n);super(s,e.evaluator,e.serviceProvider,o,l,a,r)}static getDefinitionsForNode(e,t,n,a,r){return new _(e,t,void 0,n,a,T.All,r).getDefinitionsForNode(n,a)}getDefinitions(){if(void 0!==this.node)return this.getDefinitionsForNode(this.node,this.offset)}};function C(e,t){if(!e)return{node:void 0,offset:0};const n=(0,g.convertPositionToOffset)(t,e.tokenizerOutput.lines);return void 0===n?{node:void 0,offset:0}:{node:l.findNodeByOffset(e.parserOutput.parseTree,n),offset:n}}function I(e,t){for(const n of e)if(n.uri.equals(t.uri)&&(0,f.rangesAreEqual)(n.range,t.range))return;e.push(t)}t.TypeDefinitionProvider=class extends _{constructor(e,t,n,a){const r=e.getSourceMapper(t,a,!1,!0),s=e.getParseResults(t),{node:i,offset:o}=C(s,n);super(r,e.evaluator,e.serviceProvider,i,o,T.All,a),this._fileUri=t}getDefinitions(){var e;if((0,u.throwIfCancellationRequested)(this.token),void 0===this.node)return;const t=[];if(38===this.node.nodeType){const n=this.evaluator.getType(this.node);if(n){let a=[];(0,c.doForEachSubtype)(n,(e=>{6===(null==e?void 0:e.category)&&(0,m.appendArray)(a,this.sourceMapper.findClassDeclarationsByType(this._fileUri,e))})),0===a.length&&(a=null!==(e=this.evaluator.getDeclarationsForNameNode(this.node))&&void 0!==e?e:[]),this.resolveDeclarations(a,t)}}else if(49===this.node.nodeType){const e=this.evaluator.getDeclarationsForStringNode(this.node);this.resolveDeclarations(e,t)}return 0!==t.length?t:void 0}}},92544:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentHighlightProvider=void 0;const i=n(65872),o=s(n(28340)),l=n(64704),p=n(47512),c=n(96193),d=n(55164),u=n(91604);t.DocumentHighlightProvider=class{constructor(e,t,n,a){this._program=e,this._fileUri=t,this._position=n,this._token=a,this._parseResults=this._program.getParseResults(this._fileUri)}getDocumentHighlight(){if((0,l.throwIfCancellationRequested)(this._token),!this._parseResults)return;const e=(0,c.convertPositionToOffset)(this._position,this._parseResults.tokenizerOutput.lines);if(void 0===e)return;const t=o.findNodeByOffset(this._parseResults.parserOutput.parseTree,e);if(void 0===t)return;if(38!==t.nodeType)return;const n=u.DocumentSymbolCollector.collectFromNode(this._program,t,this._token,this._parseResults.parserOutput.parseTree,{treatModuleInImportAndFromImportSame:!0,useCase:p.ReferenceUseCase.References}),a=this._parseResults.tokenizerOutput.lines;return n.map((e=>({kind:38===e.node.nodeType&&o.isWriteAccess(e.node)?i.DocumentHighlightKind.Write:i.DocumentHighlightKind.Read,range:(0,c.convertOffsetsToRange)(e.range.start,d.TextRange.getEnd(e.range),a)})))}}},91604:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.addDeclarationIfUnique=t.getDeclarationsForNameNode=t.DocumentSymbolCollector=t.AliasResolver=void 0;const i=s(n(9316)),o=n(65392),l=n(61340),p=n(28340),c=n(78232),d=s(n(69160)),u=n(41500),m=n(408),y=n(76392),g=n(64704),h=n(28040),f=n(86016),T=n(83181),v=n(47512),b=n(37636);class _{constructor(e){this._evaluator=e,this._caches=[void 0,void 0]}resolve(e,t){const n=t?0:1;if(this._caches[n]&&this._caches[n].original===e)return this._caches[n].resolved;const a=this._evaluator.resolveAliasDeclaration(e,t,{allowExternallyHiddenAccess:!0,skipFileNeededCheck:!0});return this._caches[n]={original:e,resolved:a},a}}t.AliasResolver=_;class C extends c.ParseTreeWalker{constructor(e,t,n,a,r,s){var i,o,l,p,c;super(),this._program=e,this._startingNode=a,this._cancellationToken=r,this._results=[],this._dunderAllNameNodes=new Set,this._symbolNames=new Set,this._declarations=[],this._aliasResolver=new _(this._program.evaluator),t.forEach((e=>this._symbolNames.add(e))),this._declarations.push(...n),this._treatModuleInImportAndFromImportSame=null!==(i=null==s?void 0:s.treatModuleInImportAndFromImportSame)&&void 0!==i&&i,this._skipUnreachableCode=null===(o=null==s?void 0:s.skipUnreachableCode)||void 0===o||o,this._useCase=null!==(l=null==s?void 0:s.useCase)&&void 0!==l?l:v.ReferenceUseCase.References,this._usageProviders=null!==(p=null==s?void 0:s.providers)&&void 0!==p?p:(null!==(c=this._program.serviceProvider.tryGet(b.ServiceKeys.symbolUsageProviderFactory))&&void 0!==c?c:[]).map((e=>e.tryCreateProvider(this._useCase,n,this._cancellationToken))).filter(f.isDefined),void 0===(null==s?void 0:s.providers)&&this._usageProviders.forEach((e=>{e.appendSymbolNamesTo(this._symbolNames),e.appendDeclarationsTo(this._declarations)})),this._setDunderAllNodes(this._startingNode)}static collectFromNode(e,t,n,a,r){const s=this.getDeclarationsForNode(e,t,!0,n);if(!(a=null!=a?a:(0,p.getModuleNode)(t)))return[];return new C(e,[t.value],s,a,n,r).collect()}static getDeclarationsForNode(e,t,n,a){(0,g.throwIfCancellationRequested)(a);const r=e.evaluator;if(!r)return[];const s=I(r,t,!1),l=i.getFileInfo(t),p=l.fileUri,c=[],d=e.getSourceMapper(p,a);s.forEach((e=>{const t=r.resolveAliasDeclaration(e,n);if(t&&(k(c,t),d&&(0,y.isStubFile)(t.uri))){const e=d.findDeclarations(t);for(const t of e)t&&!t.uri.isEmpty()&&k(c,t)}}));const h=e.getSourceFileInfo(p);if(h&&h.sourceFile.getIPythonMode()===u.IPythonMode.CellDocs){let n=l.builtinsScope;for(;n&&4===n.type;){f(null==n?void 0:n.lookUpSymbol(t.value),c),n=null==n?void 0:n.parent}(0,m.collectImportedByCells)(e,h).forEach((n=>{var a;const r=null===(a=e.getParseResults(n.sourceFile.getUri()))||void 0===a?void 0:a.parserOutput.parseTree;if(r){const e=i.getScope(r);f(null==e?void 0:e.lookUpSymbol(t.value),c)}}))}return c;function f(e,t){null==e||e.getDeclarations().filter((e=>!(0,o.isAliasDeclaration)(e))).forEach((e=>{const a=r.resolveAliasDeclaration(e,n);a&&k(t,a)}))}}collect(){return this.walk(this._startingNode),this._results}walk(e){this._skipUnreachableCode&&i.isCodeUnreachable(e)||super.walk(e)}visitName(e){if((0,g.throwIfCancellationRequested)(this._cancellationToken),!this._symbolNames.has(e.value))return!1;if(this._declarations.length>0){const t=I(this._evaluator,e,this._skipUnreachableCode);t&&t.length>0&&this._resultsContainsDeclaration(e,t)&&this._addResult(e)}else this._addResult(e);return!1}visitStringList(e){if(this._declarations.some((t=>{var n;return(null===(n=t.node)||void 0===n?void 0:n.id)===e.id}))){const t=e.strings.find((e=>this._symbolNames.has(e.value)));t&&49===t.nodeType&&this._addResult(t)}return super.visitStringList(e)}visitString(e){return(0,g.throwIfCancellationRequested)(this._cancellationToken),this._dunderAllNameNodes.has(e)&&this._addResult(e),!1}get _evaluator(){return this._program.evaluator}_addResult(e){const t=38===e.nodeType?e.token:(0,p.getStringNodeValueRange)(e);this._results.push({node:e,range:t})}_isDeclarationAllowed(e){return this._declarations.some((t=>(0,l.areDeclarationsSame)(t,e,this._treatModuleInImportAndFromImportSame,!0)))}_resultsContainsDeclaration(e,t){const n=[...t];return this._usageProviders.forEach((a=>a.appendDeclarationsAt(e,t,n))),n.some((e=>{const t=this._aliasResolver.resolve(e,!1);if(!t)return!1;if(this._isDeclarationAllowed(t))return!0;const n=this._getResolveAliasDeclaration(t);return!(!n||n===t)&&this._isDeclarationAllowed(n)}))}_getResolveAliasDeclaration(e){if(n(e))return(0,l.getDeclarationsWithUsesLocalNameRemoved)([e])[0];const t=this._aliasResolver.resolve(e,!0);return n(t)?(0,l.getDeclarationsWithUsesLocalNameRemoved)([t])[0]:t;function n(e){return!!e&&8===e.type&&e.node&&e.usesLocalName&&21===e.node.nodeType}}_setDunderAllNodes(e){if(36!==e.nodeType)return;const t=i.getDunderAllInfo(e);if(!t)return;const n=d.getScopeForNode(e);n&&t.stringNodes.forEach((e=>{if(!this._symbolNames.has(e.value))return;const t=n.lookUpSymbolRecursive(e.value);t&&this._resultsContainsDeclaration(e,t.symbol.getDeclarations())&&this._dunderAllNameNodes.add(e)}))}}function I(e,t,n=!0){var a;return 37!==(null===(a=t.parent)||void 0===a?void 0:a.nodeType)?function(e,t,n=!0){var a,r;(0,T.assert)(37!==(null===(a=t.parent)||void 0===a?void 0:a.nodeType));let s=e.getDeclarationsForNameNode(t,n)||[];23===(null===(r=t.parent)||void 0===r?void 0:r.nodeType)&&(s=s.filter((e=>e.node===t.parent)));if(0===s.length){const n=e.getType(t);if(7===(null==n?void 0:n.category))return[(0,l.createSynthesizedAliasDeclaration)(n.fileUri)]}for(const t of s.filter((e=>(0,o.isAliasDeclaration)(e)&&!e.loadSymbolsFromPath))){const a=t.node;23!==a.nodeType&&(0,h.appendArray)(s,e.getDeclarationsForNameNode(a.module.nameParts[0],n)||[])}return s}(e,t,n):function(e,t){var n,a,r,s,i;(0,T.assert)(37===(null===(n=t.parent)||void 0===n?void 0:n.nodeType));const p=t.parent;if(21===(null===(a=p.parent)||void 0===a?void 0:a.nodeType)||22===(null===(r=p.parent)||void 0===r?void 0:r.nodeType)){const n=p.nameParts.findIndex((e=>e===t));if(0===n){const n=[];if((0,h.appendArray)(n,(null===(s=e.getDeclarationsForNameNode(p.nameParts[0]))||void 0===s?void 0:s.filter((e=>(0,o.isAliasDeclaration)(e))))||[]),0===n.length||21!==p.parent.nodeType)return n;const a=1===p.nameParts.length&&21===p.parent.nodeType&&!!p.parent.alias,r=a?p.parent.alias.value:p.nameParts[0].value,c=null===(i=d.getScopeForNode(t))||void 0===i?void 0:i.lookUpSymbolRecursive(r);if(c&&1===p.nameParts.length){let e=[];(0,h.appendArray)(e,c.symbol.getDeclarations().filter((e=>(0,o.isAliasDeclaration)(e)))),e.length>1&&(e=e.filter((e=>void 0!==e.firstNamePart?e.firstNamePart===p.nameParts[0].value:e.node===p.parent))),a&&(e=(0,l.getDeclarationsWithUsesLocalNameRemoved)(e)),(0,h.appendArray)(n,e)}return n}return n>0&&e.getDeclarationsForNameNode(p.nameParts[n])||[]}return[]}(e,t)}function k(e,t){for(const n of e)if((0,l.areDeclarationsSame)(n,t,!1,!0))return;e.push(t)}t.DocumentSymbolCollector=C,t.getDeclarationsForNameNode=I,t.addDeclarationIfUnique=k},72952:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentSymbolProvider=t.convertToFlatSymbols=void 0;const a=n(65872),r=n(9316),s=n(64704),i=n(80636),o=n(9988);function l(e,t,n){const a=[];for(const r of n)p(e.fileSystem,a,t,r);return a}t.convertToFlatSymbols=l;function p(e,t,n,r,s){const o={name:r.name,kind:r.kind,location:a.Location.create((0,i.encodeUri)(e,n),r.range)};if(r.tags&&(o.tags=r.tags),s&&(o.containerName=s.name),t.push(o),r.children)for(const a of r.children)p(e,t,n,a,r)}t.DocumentSymbolProvider=class{constructor(e,t,n,a,r){this.program=e,this.uri=t,this._supportHierarchicalDocumentSymbol=n,this._indexOptions=a,this._token=r,this._parseResults=this.program.getParseResults(this.uri)}getSymbols(){if(!this._parseResults)return[];const e=this.getHierarchicalSymbols();return this._supportHierarchicalDocumentSymbol?e:l(this.program,this.uri,e)}getHierarchicalSymbols(){const e=[],t=this.program.getParseResults(this.uri);if(!t)return e;const n=(0,r.getFileInfo)(t.parserOutput.parseTree);if(!n)return e;const a=o.SymbolIndexer.indexSymbols(n,t,this._indexOptions,this._token);return this.appendDocumentSymbolsRecursive(a,e),e}appendDocumentSymbolsRecursive(e,t){if((0,s.throwIfCancellationRequested)(this._token),e)for(const n of e){if(n.alias)continue;if(!n.name)continue;const e=[];this.appendDocumentSymbolsRecursive(n.children,e);const a={name:n.name,kind:n.kind,range:n.range,selectionRange:n.selectionRange,children:e};t.push(a)}}}},58184:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.HoverProvider=t.getVariableTypeText=t.addDocumentationResultsPart=t.convertHoverResults=void 0;const i=n(65872),o=n(65392),l=n(74124),p=s(n(28340)),c=n(808),d=n(8312),u=n(64704),m=n(83181),y=n(96193),g=n(55164),h=n(19428);function f(e,t){if(!e)return null;const n=e.parts.map((e=>{if(e.python){if(t===i.MarkupKind.Markdown)return"```python\n"+e.text+"\n```\n";if(t===i.MarkupKind.PlainText)return e.text+"\n\n";(0,m.fail)(`Unsupported markup type: ${t}`)}return e.text})).join("").trimEnd();return{contents:{kind:t,value:n},range:e.range}}function T(e,t,n){if(e){if(t===i.MarkupKind.Markdown){const t=(0,l.convertDocStringToMarkdown)(e);return n.length>0&&t.length>0&&n.push({text:"---\n"}),void n.push({text:t,python:!1})}t!==i.MarkupKind.PlainText?(0,m.fail)(`Unsupported markup type: ${t}`):n.push({text:(0,l.convertDocStringToPlainText)(e),python:!1})}}function v(e,t,n,a,r,s){let i,o=t.isConstant||e.isFinalVariableDeclaration(t)?"constant":"variable",l=!1;if(a.typeAliasInfo&&38===r.nodeType){const e=(0,d.getTypeAliasInfo)(a);(null==e?void 0:e.name)===r.value&&((0,d.isTypeVar)(a)?(o=a.details.isParamSpec?"param spec":"type variable",i=a.details.name):(l=!0,o="type alias"))}if(4===a.category||5===a.category)return(0,h.getToolTipForType)(a,o,n,e,!1,s);return`(${o}) `+(i||n+": "+e.printType((0,h.getTypeForToolTip)(e,r),{expandTypeAlias:l}))}t.convertHoverResults=f,t.addDocumentationResultsPart=T,t.getVariableTypeText=v;class b{constructor(e,t,n,a,r){this._program=e,this._fileUri=t,this._position=n,this._format=a,this._token=r,this._parseResults=this._program.getParseResults(this._fileUri),this._sourceMapper=this._program.getSourceMapper(this._fileUri,this._token,!0)}getHover(){return f(this._getHoverResult(),this._format)}static getPrimaryDeclaration(e){const t=e[0];return 8===t.type&&e.length>1||1===t.type&&e.length>1&&t.isDefinedBySlots?e[1]:t}get _evaluator(){return this._program.evaluator}get _functionSignatureDisplay(){return this._program.configOptions.functionSignatureDisplay}_getHoverResult(){var e;if((0,u.throwIfCancellationRequested)(this._token),!this._parseResults)return null;const t=(0,y.convertPositionToOffset)(this._position,this._parseResults.tokenizerOutput.lines);if(void 0===t)return null;const n=p.findNodeByOffset(this._parseResults.parserOutput.parseTree,t);if(void 0===n)return null;const a={parts:[],range:{start:(0,y.convertOffsetToPosition)(n.start,this._parseResults.tokenizerOutput.lines),end:(0,y.convertOffsetToPosition)(g.TextRange.getEnd(n),this._parseResults.tokenizerOutput.lines)}};if(38===n.nodeType){const e=this._evaluator.getDeclarationsForNameNode(n);if(e&&e.length>0){const t=b.getPrimaryDeclaration(e);this._addResultsForDeclaration(a.parts,t,n)}else if((!n.parent||37!==n.parent.nodeType)&&0===a.parts.length){const e=this._getType(n);let t;if((0,d.isModule)(e))t="(module) "+n.value;else{let a="function",r=!1;(0,c.isMaybeDescriptorInstance)(e,!1)&&(r=!0,a="property"),t=(0,h.getToolTipForType)(e,a,n.value,this._evaluator,r,this._functionSignatureDisplay)}this._addResultsPart(a.parts,t,!0),this._addDocumentationPart(a.parts,n,void 0)}}else if(49===n.nodeType){const t=null===(e=this._evaluator.getExpectedType(n))||void 0===e?void 0:e.type;void 0!==t&&this._tryAddPartsForTypedDictKey(n,t,a.parts)}return a.parts.length>0?a:null}_addResultsForDeclaration(e,t,n){var a,r,s;const i=this._evaluator.resolveAliasDeclaration(t,!0);if(i&&!(0,o.isUnresolvedAliasDeclaration)(i))switch(i.type){case 0:this._addResultsPart(e,n.value+this._getTypeText(n),!0),this._addDocumentationPart(e,n,i);break;case 1:{let r=n;21===t.node.nodeType||23===t.node.nodeType?t.node.alias&&n!==t.node.alias&&38===i.node.nodeType&&(r=i.node):1===(null===(a=n.parent)||void 0===a?void 0:a.nodeType)&&n.parent.name===n&&38===t.node.nodeType&&(r=t.node);const s=this._getType(r),o=v(this._evaluator,i,n.value,s,r,this._functionSignatureDisplay);this._addResultsPart(e,o,!0),this._addDocumentationPart(e,n,i);break}case 2:this._addResultsPart(e,"(parameter) "+n.value+this._getTypeText(n),!0),i.docString&&this._addResultsPart(e,i.docString),this._addDocumentationPart(e,n,i);break;case 3:{const t=p.getParentNodeOfType(n,76),a=10===(null===(r=null==t?void 0:t.parent)||void 0===r?void 0:r.nodeType);this._addResultsPart(e,"(type parameter) "+n.value+this._getTypeText(n,{printTypeVarVariance:a}),!0),this._addDocumentationPart(e,n,i);break}case 6:case 7:{if(this._addInitOrNewMethodInsteadIfCallNode(n,e,i))return;const t=6===i.type?i.node.name:n;this._addResultsPart(e,"(class) "+t.value,!0),this._addDocumentationPart(e,n,i);break}case 5:{let t="function",a=!1;if(i.isMethod){const e=null===(s=this._evaluator.getTypeForDeclaration(i))||void 0===s?void 0:s.type;a=!!e&&(0,c.isMaybeDescriptorInstance)(e,!1),t=a?"property":"method"}let r=this._getType(n);const o=this._getType(i.node.name);r=(0,d.isAnyOrUnknown)(r)?o:r;const l=(0,h.getToolTipForType)(r,t,n.value,this._evaluator,a,this._functionSignatureDisplay);this._addResultsPart(e,l,!0),this._addDocumentationPart(e,n,i);break}case 8:this._addResultsPart(e,"(module) "+n.value,!0),this._addDocumentationPart(e,n,i);break;case 4:{const t=n.value+this._getTypeText(n,{expandTypeAlias:!0});this._addResultsPart(e,`(type alias) ${t}`,!0),this._addDocumentationPart(e,n,i);break}default:(0,m.assertNever)(i)}else this._addResultsPart(e,"(import) "+n.value+this._getTypeText(n),!0)}_tryAddPartsForTypedDictKey(e,t,n){(0,c.doForEachSubtype)(t,(t=>{var a,r;if((0,d.isClassInstance)(t)&&d.ClassType.isTypedDictClass(t)){const s=null===(a=t.details.typedDictEntries)||void 0===a?void 0:a.knownItems.get(e.value);if(s){n.length>0&&n.push({text:"\n\n---\n"});const a="(key) "+e.value+": "+this._evaluator.printType(s.valueType);this._addResultsPart(n,a,!0);const i=null===(r=d.ClassType.getSymbolTable(t).get(e.value))||void 0===r?void 0:r.getDeclarations();if(void 0!==i&&0!==(null==i?void 0:i.length)){const e=i[0];1===e.type&&void 0!==e.docString&&this._addDocumentationPartForType(n,t,e)}}}}))}_addInitOrNewMethodInsteadIfCallNode(e,t,n){const a=(0,h.getClassAndConstructorTypes)(e,this._evaluator);if(!a)return!1;if(a.methodType&&((0,d.isFunction)(a.methodType)||(0,d.isOverloadedFunction)(a.methodType))){this._addResultsPart(t,(0,h.getConstructorTooltip)(e.value,a.methodType,this._evaluator,this._functionSignatureDisplay),!0);return this._addDocumentationPartForType(t,a.methodType,n)||this._addDocumentationPartForType(t,a.classType,n),!0}return!1}_getType(e){return(0,h.getTypeForToolTip)(this._evaluator,e)}_getTypeText(e,t){const n=this._getType(e);return": "+this._evaluator.printType(n,t)}_addDocumentationPart(e,t,n){const a=this._getType(t);this._addDocumentationPartForType(e,a,n,t.value)}_addDocumentationPartForType(e,t,n,a){const r=(0,h.getDocumentationPartsForTypeAndDecl)(this._sourceMapper,t,n,this._evaluator,{name:a});return T(r,this._format,e),!!r}_addResultsPart(e,t,n=!1){e.push({python:n,text:t})}}t.HoverProvider=b},8560:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertDocumentRangeToLocation=t.convertDocumentRangesToLocation=t.canNavigateToFile=void 0;const a=n(6412),r=n(80636);function s(e,t){return!e.isInZip(t)}function i(e,t){if(s(e,t.uri))return a.Location.create((0,r.encodeUri)(e,t.uri),t.range)}t.canNavigateToFile=s,t.convertDocumentRangesToLocation=function(e,t,n=i){return t.map((t=>n(e,t))).filter((e=>!!e))},t.convertDocumentRangeToLocation=i},67192:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ReferencesProvider=t.FindReferencesTreeWalker=t.ReferencesResult=void 0;const i=n(65392),o=n(61340),l=s(n(28340)),p=n(408),c=n(8e4),d=n(8312),u=n(64704),m=n(28040),y=n(86016),g=n(83181),h=n(47512),f=n(96193),T=n(37636),v=n(55164),b=n(91604),_=n(8560);class C{constructor(e,t,n,a,r,s,o){this.requiresGlobalSearch=e,this.nodeAtOffset=t,this.symbolNames=n,this.declarations=a,this.useCase=r,this.providers=s,this._reporter=o,this._locations=[],this.nonImportDeclarations=a.filter((e=>{var t;if(!(0,i.isAliasDeclaration)(e))return!0;if(!e.usesLocalName||!e.node)return!1;if(22===e.node.nodeType)return!1;const a=null===(t=e.node.alias)||void 0===t?void 0:t.value;return!!n.some((e=>e===a))}))}get containsOnlyImportDecls(){return this.declarations.length>0&&0===this.nonImportDeclarations.length}get locations(){return this._locations}addLocations(...e){0!==e.length&&(this._reporter&&this._reporter(e),(0,m.appendArray)(this._locations,e))}}t.ReferencesResult=C;class I{constructor(e,t,n,a,r,s=I.createDocumentRange){this._program=e,this._fileUri=t,this._referencesResult=n,this._includeDeclaration=a,this._cancellationToken=r,this._createDocumentRange=s,this._parseResults=this._program.getParseResults(this._fileUri)}findReferences(e){var t;void 0===e&&(e=null===(t=this._parseResults)||void 0===t?void 0:t.parserOutput.parseTree);const n=[];if(!this._parseResults)return n;const a=new b.DocumentSymbolCollector(this._program,this._referencesResult.symbolNames,this._referencesResult.declarations,e,this._cancellationToken,{treatModuleInImportAndFromImportSame:!0,skipUnreachableCode:!1,useCase:this._referencesResult.useCase,providers:this._referencesResult.providers});for(const e of a.collect())(this._includeDeclaration||e.node!==this._referencesResult.nodeAtOffset)&&n.push(this._createDocumentRange(this._fileUri,e,this._parseResults));return n}static createDocumentRange(e,t,n){return{uri:e,range:{start:(0,f.convertOffsetToPosition)(t.range.start,n.tokenizerOutput.lines),end:(0,f.convertOffsetToPosition)(v.TextRange.getEnd(t.range),n.tokenizerOutput.lines)}}}}t.FindReferencesTreeWalker=I;class k{constructor(e,t,n,a){this._program=e,this._token=t,this._createDocumentRange=n,this._convertToLocation=a}reportReferences(e,t,n,a){const r=this._program.getSourceFileInfo(e);if(!r)return;if(!this._program.getParseResults(e))return;const s=[],i=a?e=>a.report((0,_.convertDocumentRangesToLocation)(this._program.fileSystem,e,this._convertToLocation)):e=>(0,m.appendArray)(s,(0,_.convertDocumentRangesToLocation)(this._program.fileSystem,e,this._convertToLocation)),o=(0,p.isUserCode)(r),l=k.getDeclarationForPosition(this._program,e,t,i,h.ReferenceUseCase.References,this._token);if(!l)return;l.requiresGlobalSearch||this.addReferencesToResult(r.sourceFile.getUri(),n,l);for(const e of this._program.getSourceFileInfoList())if((0,u.throwIfCancellationRequested)(this._token),e.isOpenByClient||!o||(0,p.isUserCode)(e)){const t=e.sourceFile.getFileContent();t&&!l.symbolNames.some((e=>t.search(e)>=0))||this.addReferencesToResult(e.sourceFile.getUri(),n,l),this._program.handleMemoryHighUsage()}if(n)for(const e of l.declarations){if((0,u.throwIfCancellationRequested)(this._token),l.locations.some((t=>t.uri.equals(e.uri))))continue;const t=this._program.getSourceFileInfo(e.uri);if(!t)continue;const a=new C(l.requiresGlobalSearch,l.nodeAtOffset,l.symbolNames,l.declarations,l.useCase,l.providers);this.addReferencesToResult(t.sourceFile.getUri(),n,a);for(const t of a.locations)t.uri.equals(e.uri)&&(0,v.doesRangeContain)(e.range,t.range)&&l.addLocations(t)}const c=new Set,d=[];for(const e of s){const t=`${e.uri.toString()}:${e.range.start.line}:${e.range.start.character}`;c.has(t)||(c.add(t),d.push(e))}return d}addReferencesToResult(e,t,n){if(!this._program.getParseResults(e))return;const a=new I(this._program,e,n,t,this._token,this._createDocumentRange);n.addLocations(...a.findReferences())}static getDeclarationForNode(e,t,n,a,r,s){var i;(0,u.throwIfCancellationRequested)(s);const p=b.DocumentSymbolCollector.getDeclarationsForNode(e,n,!1,s);if(0===p.length)return;const m=function(e,t,n,a){const r=e.lookUpSymbolRecursive(n,n.value,!1);if(r&&!s(r.symbol))return!1;return a.some((e=>{var n,a;if(!e.uri.equals(t))return!0;const r=l.getEvaluationScopeNode(e.node).node;return 36===r.nodeType||10===r.nodeType||35===(null===(a=null===(n=e.node)||void 0===n?void 0:n.parent)||void 0===a?void 0:a.nodeType)&&e.node===e.node.parent.memberName}));function s(e,t=0){return!(t>d.maxTypeRecursionCount)&&(t++,!!(0,c.isVisibleExternally)(e)&&e.getDeclarations().reduce(((e,n)=>{if(!e)return!1;switch(n.type){case 8:case 0:case 7:return e;case 6:case 5:case 2:return e&&i(n.node.name,t);case 3:return!1;case 1:case 4:return 38===n.node.nodeType&&(e&&i(n.node,t));default:(0,g.assertNever)(n)}}),!0))}function i(t,n){const a=l.getEvaluationScopeNode(t).node;switch(a.nodeType){case 10:case 28:{const t=a.name,r=e.lookUpSymbolRecursive(t,t.value,!1);return!r||s(r.symbol,n)}case 30:case 32:case 76:return!1;case 36:return!0;default:(0,g.assertNever)(a)}}}(e.evaluator,t,n,p),h=new Set(p.map((e=>(0,o.getNameFromDeclaration)(e))).filter((e=>!!e)));h.add(n.value);const f=(null!==(i=e.serviceProvider.tryGet(T.ServiceKeys.symbolUsageProviderFactory))&&void 0!==i?i:[]).map((e=>e.tryCreateProvider(r,p,s))).filter(y.isDefined);return f.forEach((e=>{e.appendSymbolNamesTo(h),e.appendDeclarationsTo(p)})),new C(m,n,Array.from(h.values()),p,r,f,a)}static getDeclarationForPosition(e,t,n,a,r,s){(0,u.throwIfCancellationRequested)(s);const i=e.getParseResults(t);if(!i)return;const o=(0,f.convertPositionToOffset)(n,i.tokenizerOutput.lines);if(void 0===o)return;const p=l.findNodeByOffset(i.parserOutput.parseTree,o);return void 0!==p&&38===p.nodeType?this.getDeclarationForNode(e,t,p,a,r,s):void 0}}t.ReferencesProvider=k},3784:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RenameProvider=void 0;const a=n(408),r=n(64704),s=n(83181),i=n(47512),o=n(96193),l=n(62164),p=n(67192);class c{constructor(e,t,n,a){this._program=e,this._fileUri=t,this._position=n,this._token=a,this._parseResults=this._program.getParseResults(this._fileUri)}canRenameSymbol(e,t){if((0,r.throwIfCancellationRequested)(this._token),!this._parseResults)return null;const n=this._getReferenceResult();if(!n)return null;return"none"===c.getRenameSymbolMode(this._program,this._fileUri,n,e,t)?null:(0,o.convertTextRangeToRange)(n.nodeAtOffset,this._parseResults.tokenizerOutput.lines)}renameSymbol(e,t,n){var i;if((0,r.throwIfCancellationRequested)(this._token),!this._parseResults)return null;const o=this._getReferenceResult();if(!o)return null;const d=new p.ReferencesProvider(this._program,this._token),u=c.getRenameSymbolMode(this._program,this._fileUri,o,t,n);switch(u){case"singleFileMode":d.addReferencesToResult(this._fileUri,!0,o);break;case"multiFileMode":for(const e of this._program.getSourceFileInfoList()){if((0,a.isUserCode)(e)){const t=null!==(i=e.sourceFile.getFileContent())&&void 0!==i?i:"";if(!o.symbolNames.some((e=>t.search(e)>=0)))continue;d.addReferencesToResult(e.sourceFile.getUri(),!0,o)}this._program.handleMemoryHighUsage()}break;case"none":return null;default:(0,s.assertNever)(u)}const m=[];return o.locations.forEach((t=>{m.push({fileUri:t.uri,range:t.range,replacementText:e})})),(0,l.convertToWorkspaceEdit)(this._program.fileSystem,{edits:m,fileOperations:[]})}static getRenameSymbolMode(e,t,n,r,s){const i=e.getSourceFileInfo(t),o=(0,a.isUserCode)(i);return r||o&&!n.requiresGlobalSearch||!o&&i.isOpenByClient&&n.declarations.every((t=>e.getSourceFileInfo(t.uri)===i))?"singleFileMode":n.declarations.every((t=>(0,a.isUserCode)(e.getSourceFileInfo(t.uri))))?"multiFileMode":"none"}_getReferenceResult(){const e=p.ReferencesProvider.getDeclarationForPosition(this._program,this._fileUri,this._position,void 0,i.ReferenceUseCase.Rename,this._token);if(e&&!e.containsOnlyImportDecls&&0!==e.nonImportDeclarations.length)return new p.ReferencesResult(e.requiresGlobalSearch,e.nodeAtOffset,e.symbolNames,e.nonImportDeclarations,e.useCase,e.providers)}}t.RenameProvider=c},85759:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.SignatureHelpProvider=void 0;const i=n(65872),o=n(74124),l=n(99216),p=s(n(28340)),c=n(28340),d=n(64704),u=n(96193),m=n(19428);t.SignatureHelpProvider=class{constructor(e,t,n,a,r,s,i,o){this._program=e,this._fileUri=t,this._position=n,this._format=a,this._hasSignatureLabelOffsetCapability=r,this._hasActiveParameterCapability=s,this._context=i,this._token=o,this._parseResults=this._program.getParseResults(this._fileUri),this._sourceMapper=this._program.getSourceMapper(this._fileUri,this._token,!0)}getSignatureHelp(){return this._convert(this._getSignatureHelp())}get _evaluator(){return this._program.evaluator}_getSignatureHelp(){var e;if((0,d.throwIfCancellationRequested)(this._token),!this._parseResults)return;const t=(0,u.convertPositionToOffset)(this._position,this._parseResults.tokenizerOutput.lines);if(void 0===t)return;let n=p.findNodeByOffset(this._parseResults.parserOutput.parseTree,t);const a=n,r=n?p.getNodeDepth(n):0;let s=t-1;for(;s>=0;){const e=this._parseResults.text.substr(s,1);if(","===e||"("===e)break;const t=p.findNodeByOffset(this._parseResults.parserOutput.parseTree,s);if(t&&t!==a){p.getNodeDepth(t)>r&&(n=t);break}s--}if(void 0===n)return;const i=(0,c.getCallNodeAndActiveParameterIndex)(n,t,this._parseResults.tokenizerOutput.tokens);if(!i)return;const o=this._evaluator.getCallSignatureInfo(i.callNode,i.activeIndex,i.activeOrFake);if(!o)return;return{signatures:o.signatures.map((e=>this._makeSignature(o.callNode,e))),callHasParameters:!!(null===(e=o.callNode.arguments)||void 0===e?void 0:e.length)}}_convert(e){var t,n,a;if(!e)return;const r=e.signatures.map((e=>{let t=[];e.parameters&&(t=e.parameters.map((e=>i.ParameterInformation.create(this._hasSignatureLabelOffsetCapability?[e.startOffset,e.endOffset]:e.text,e.documentation))));const n=i.SignatureInformation.create(e.label,void 0,...t);return void 0!==e.documentation&&(n.documentation=e.documentation),void 0!==e.activeParameter&&(n.activeParameter=e.activeParameter),n})),s=t=>{var n;return void 0!==t.activeParameter||!e.callHasParameters&&!(null===(n=t.parameters)||void 0===n?void 0:n.length)};let o=r.findIndex(s);-1===o&&(o=void 0);let l=void 0!==o?r[o].activeParameter:void 0;if((null===(t=this._context)||void 0===t?void 0:t.isRetrigger)&&this._context.triggerKind!==i.SignatureHelpTriggerKind.Invoked){const e=null===(n=this._context.activeSignatureHelp)||void 0===n?void 0:n.activeSignature;if(void 0!==e&&e<r.length){const t=r[e];s(t)&&(o=e,l=null!==(a=t.activeParameter)&&void 0!==a?a:void 0)}}return(this._hasActiveParameterCapability||void 0===o)&&(l=Math.max(...r.map((e=>{var t,n;return null!==(n=null===(t=e.parameters)||void 0===t?void 0:t.length)&&void 0!==n?n:0})))),{signatures:r,activeSignature:o,activeParameter:l}}_makeSignature(e,t){var n;const a=t.type,r=this._evaluator.printFunctionParts(a,1024),s=[],p=null!==(n=(0,m.getFunctionDocStringFromType)(a,this._sourceMapper,this._evaluator))&&void 0!==n?n:this._getDocStringFromCallNode(e);let c,d="(";const u=a.details.parameters;r[0].forEach(((e,n)=>{let a="";n<u.length?a=u[n].name||"":u.length>0&&(a=u[u.length-1].name||""),s.push({startOffset:d.length,endOffset:d.length+e.length,text:e,documentation:(0,l.extractParameterDocumentation)(p||"",a)}),a&&t.activeParam&&t.activeParam.name===a&&(c=n),d+=e,n<r[0].length-1&&(d+=", ")})),d+=") -> "+r[1],t.activeParam&&void 0===c&&(c=u.indexOf(t.activeParam),-1===c&&(c=void 0));const y={label:d,parameters:s,activeParameter:c};return p&&(this._format===i.MarkupKind.Markdown?y.documentation={kind:i.MarkupKind.Markdown,value:(0,o.convertDocStringToMarkdown)(p)}:y.documentation={kind:i.MarkupKind.PlainText,value:(0,o.convertDocStringToPlainText)(p)}),y}_getDocStringFromCallNode(e){var t;let n;const a=e.leftExpression;if(38===a.nodeType?n=a:35===a.nodeType&&(n=a.memberName),n)for(const e of null!==(t=this._evaluator.getDeclarationsForNameNode(n))&&void 0!==t?t:[]){const t=this._evaluator.resolveAliasDeclaration(e,!0);if(!t)continue;const a=this._evaluator.getType(n);if(!a)continue;const r=(0,m.getDocumentationPartsForTypeAndDecl)(this._sourceMapper,a,t,this._evaluator);if(r)return r}}}},9988:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.SymbolIndexer=void 0;const i=s(n(9316)),o=n(8e4),l=n(64704),p=n(66112),c=n(96193),d=n(87472);function u(e,t,n,a,r,s){(0,l.throwIfCancellationRequested)(s);const y=i.getScope(n);if(!y)return;y.symbolTable.forEach(((n,i)=>{if(n.isIgnoredForProtocolMatch())return;let l=(0,o.getLastTypedDeclarationForSymbol)(n);!l&&n.hasDeclarations()&&(l=n.getDeclarations()[0]),l&&(8!==l.type||m(l,a))&&function(e,t,n,a,r,s,i,o){const l=(0,p.getSymbolKind)(n,void 0,s);if(void 0===l)return;let y=n.range,g=y;const h=[];6!==n.type&&5!==n.type||(u(e,t,n.node,a,h,o),g=(0,c.convertOffsetsToRange)(n.node.start,n.node.start+n.node.length,t.tokenizerOutput.lines));if(8===n.type){if(!m(n,a))return;21===n.node.nodeType&&n.node.alias&&(y=g=(0,c.convertTextRangeToRange)(n.node.alias.token,t.tokenizerOutput.lines))}const f={name:s,externallyVisible:r,kind:l,itemKind:(0,d.convertSymbolKindToCompletionItemKind)(l),alias:void 0,range:g,selectionRange:y,children:h};i.push(f)}(e,t,l,a,(0,o.isVisibleExternally)(n),i,r,s)}))}function m(e,t){return!!t.includeAliases&&((21===e.node.nodeType||23===e.node.nodeType)&&void 0!==e.node.alias)}t.SymbolIndexer=class{static indexSymbols(e,t,n,a){const r=[];return u(e,t,t.parserOutput.parseTree,n,r,a),r}}},19428:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.getTypeForToolTip=t.limitOverloadBasedOnCall=t.bindFunctionToClassOrObjectToolTip=t.getClassAndConstructorTypes=t.combineExpressionTypes=t.getAutoImportText=t.getDocumentationPartsForTypeAndDecl=t.getOverloadedFunctionDocStringsFromType=t.getFunctionDocStringFromType=t.getConstructorTooltip=t.getFunctionTooltip=t.getOverloadedFunctionTooltip=t.getToolTipForType=void 0;const i=s(n(28340)),o=n(58260),l=n(808),p=n(8312),c=n(55484),d=n(86016),u=4;function m(e,t,n,a=70){let r="";const s=p.OverloadedFunctionType.getOverloads(e).map((e=>y("",e.details.name,e,t,!1,n)));for(let e=0;e<s.length;e++)0!==e&&s[e].length>a&&s[e-1].length<=a&&(r+="\n"),r+=s[e]+": ...",e<s.length-1&&(r+="\n",s[e].length>a&&(r+="\n"));return r}function y(e,t,n,a,r=!1,s){const i=0===e.length?"":`(${e}) `,o=s===c.SignatureDisplayType.formatted?"\n"+" ".repeat(u):"",l=a.printFunctionParts(n),d=`${g(l,o,s)} -> ${l[1]}`;if(p.TypeBase.isInstantiable(n))return`${i}${t}: type[${d}]`;const m=r?": ":"";let y="";return r||(y="def ",p.FunctionType.isAsync(n)&&(y="async "+y)),`${i}${y}${t}${m}${d}`}function g(e,t,n){return n===c.SignatureDisplayType.formatted&&e.length>0&&e[0].length>1?`(${t}${e[0].join(","+t)}\n)`:`(${e[0].join(", ")})`}function h(e,t,n){const a=e.details.declaration,r=a?i.getEnclosingClass(a.node):void 0,s=r?n.getTypeOfClass(r):void 0;return(0,o.getFunctionDocStringInherited)(e,a,t,null==s?void 0:s.classType)}function f(e,t,n){if(0===e.overloads.length)return[];const a=e.overloads[0].details.declaration,r=a?i.getEnclosingClass(a.node):void 0,s=r?n.getTypeOfClass(r):void 0;return(0,o.getOverloadedFunctionDocStringsInherited)(e,e.overloads.map((e=>e.details.declaration)).filter(d.isDefined),t,n,null==s?void 0:s.classType)}function T(e,t,n,a,r){const s=e.bindFunctionToClassOrObject(n,a,void 0,r);if(s)return v(e,s,t)}function v(e,t,n){if(!(0,p.isOverloadedFunction)(t)||38!==n.nodeType)return t;const a=i.getCallForName(n);if(!a)return t;const r=e.getTypeResult(a);return r&&r.overloadsUsedForCall&&0!==r.overloadsUsedForCall.length?1===r.overloadsUsedForCall.length?r.overloadsUsedForCall[0]:p.OverloadedFunctionType.create(r.overloadsUsedForCall):t}function b(e,t){var n;const a=null!==(n=e.getType(t))&&void 0!==n?n:p.UnknownType.create();return v(e,a,t)}t.getToolTipForType=function(e,t,n,a,r,s){let i="";return(0,p.isOverloadedFunction)(e)?(i=t.length>0?`(${t})\n`:"",i+=`${m(e,a,s)}`):(0,p.isFunction)(e)?i=`${y(t,n,e,a,r,s)}`:(i=t.length>0?`(${t}) `:"",i+=`${n}: ${a.printType(e)}`),i},t.getOverloadedFunctionTooltip=m,t.getFunctionTooltip=y,t.getConstructorTooltip=function e(t,n,a,r){let s="";if((0,p.isOverloadedFunction)(n)){n.overloads.map((n=>e(t,n,a,r))).forEach(((e,t)=>{s+=e+": ...\n\n"}))}else if((0,p.isFunction)(n)){const e=r===c.SignatureDisplayType.formatted?"\n"+" ".repeat(u):" ",i=g(a.printFunctionParts(n),e,r);s+=`class ${t}${i}`}return s},t.getFunctionDocStringFromType=h,t.getOverloadedFunctionDocStringsFromType=f,t.getDocumentationPartsForTypeAndDecl=function(e,t,n,a,r){var s;const i=function(e,t,n,a){var r;if(t){if(4===t.type)return t.docString;if(1===t.type){if(t.typeAliasName&&t.docString)return t.docString;const n=null!==(r=null==a?void 0:a.getDeclarations().find((e=>1===e.type&&!!e.docString)))&&void 0!==r?r:t,s=(0,o.getVariableDocString)(n,e);if(s)return s}if(5===t.type){const a=(0,o.getPropertyDocStringInherited)(t,e,n);if(a)return a}}}(e,n,a,null==r?void 0:r.symbol);let l;if(8===(null==n?void 0:n.type)){if(8===n.type&&n.node&&21===n.node.nodeType&&(null==r?void 0:r.name)&&!n.node.alias){const e=n.node.module.nameParts.find((e=>e.value===r.name));if(e){const t=null!==(s=a.getDeclarationsForNameNode(e))&&void 0!==s?s:[n];n=t.length>0?t[0]:n}}l=(0,o.getModuleDocStringFromUris)([n.uri],e)}return l=null!=l?l:t?function(e,t,n,a,r){if((0,p.isModule)(t)){const a=(0,o.getModuleDocString)(t,n,e);if(a)return a}else if((0,p.isInstantiableClass)(t)){const a=(0,o.getClassDocString)(t,n,e);if(a)return a}else if((0,p.isFunction)(t)){const n=r?a.bindFunctionToClassOrObject(r,t):t;if(n&&(0,p.isFunction)(n)){const t=h(n,e,a);if(t)return t}}else if((0,p.isOverloadedFunction)(t)){const n=r?a.bindFunctionToClassOrObject(r,t):t;if(n&&(0,p.isOverloadedFunction)(n)){const t=f(n,e,a).find((e=>e));if(t)return t}}}(e,t,n,a,null==r?void 0:r.boundObjectOrClass):void 0,i&&l&&i!==l?`${i}\n\n${l}`:i||l},t.getAutoImportText=function(e,t,n){let a;return a=t?`from ${t} import ${e}`:`import ${e}`,n&&(a=`${a} as ${n}`),a},t.combineExpressionTypes=function(e,t){const n=e.map((e=>t.getType(e)||p.UnknownType.create()));let a=(0,p.combineTypes)(n);return 1===n.length&&6===a.category&&p.ClassType.isBuiltIn(a,"list")&&a.typeArguments?a=a.typeArguments[0]:1===n.length&&6===a.category&&p.ClassType.isBuiltIn(a,"range")&&(a=t.getBuiltInObject(e[0],"int")),a},t.getClassAndConstructorTypes=function(e,t){var n,a;let r=e;if((35===(null===(n=null==r?void 0:r.parent)||void 0===n?void 0:n.nodeType)&&e===r.parent.memberName||24===(null===(a=null==r?void 0:r.parent)||void 0===a?void 0:a.nodeType))&&(r=e.parent),!r||!r.parent||9!==r.parent.nodeType||r.parent.leftExpression!==r)return;const s=b(t,e);if(!(0,p.isInstantiableClass)(s))return;const i=b(t,r.parent);if(!(0,p.isClassInstance)(i))return;let o;const c=(0,l.lookUpClassMember)(s,"__init__",16);if(c){const n=t.getTypeOfMember(c);((0,p.isFunction)(n)||(0,p.isOverloadedFunction)(n))&&(o=T(t,e,i,n))}if(!o||o&&(0,p.isFunction)(o)&&(p.FunctionType.hasDefaultParameters(o)||0===o.details.parameters.length)){const n=(0,l.lookUpClassMember)(s,"__new__",20);if(n){const a=t.getTypeOfMember(n);((0,p.isFunction)(a)||(0,p.isOverloadedFunction)(a))&&(o=T(t,e,i,a,!0))}}return{methodType:o,classType:s}},t.bindFunctionToClassOrObjectToolTip=T,t.limitOverloadBasedOnCall=v,t.getTypeForToolTip=b},82096:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSymbolProvider=void 0;const i=n(9316),o=n(408),l=n(64704),p=n(28040),c=s(n(50356)),d=n(80636),u=n(9988);t.WorkspaceSymbolProvider=class{constructor(e,t,n,a){this._workspaces=e,this._query=n,this._token=a,this._allSymbols=[],this._reporter=t?e=>t.report(e):e=>(0,p.appendArray)(this._allSymbols,e)}reportSymbols(){for(const e of this._workspaces)e.disableLanguageServices||e.disableWorkspaceSymbol||e.isInitialized.resolved()&&e.service.run((e=>{this._reportSymbolsForProgram(e)}),this._token);return this._allSymbols}getSymbolsForDocument(e,t){const n=[],a=e.getParseResults(t);if(!a)return n;const r=(0,i.getFileInfo)(a.parserOutput.parseTree);if(!r)return n;const s=u.SymbolIndexer.indexSymbols(r,a,{includeAliases:!1},this._token);return this.appendWorkspaceSymbolsRecursive(s,e,t,"",n),n}appendWorkspaceSymbolsRecursive(e,t,n,a,r){if((0,l.throwIfCancellationRequested)(this._token),e)for(const s of e)if(!s.alias){if(c.isPatternInSymbol(this._query,s.name)){const e={uri:(0,d.encodeUri)(t.fileSystem,n),range:s.selectionRange},i={name:s.name,kind:s.kind,location:e};a.length&&(i.containerName=a),r.push(i)}this.appendWorkspaceSymbolsRecursive(s.children,t,n,this._getContainerName(a,s.name),r)}}_reportSymbolsForProgram(e){if(this._query)for(const t of e.getSourceFileInfoList()){if(!(0,o.isUserCode)(t))continue;const n=this.getSymbolsForDocument(e,t.sourceFile.getUri());n.length>0&&this._reporter(n),e.handleMemoryHighUsage()}}_getContainerName(e,t){return e.length>0?`${e}.${t}`:t}}},95960:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LocAddendum=t.LocMessage=t.Localizer=t.loadStringsForLocale=t.getLocaleFromEnv=t.setLocaleOverride=t.getRawStringFromMap=t.setGetRawString=t.ParameterizedString=void 0;const a=n(83181),r=n(82080),s=n(41440),i=n(99488),o=n(15808),l=n(36626),p=n(25696),c=n(77388),d=n(84444),u=n(28146),m=n(55352),y=n(72266),g=n(26624),h=n(89400),f=n(84870),T=n(25392);class v{constructor(e){this._formatString=e}format(e){let t=this._formatString;return Object.keys(e).forEach((n=>{t=t.replace(new RegExp(`{${n}}`,"g"),e[n].toString())})),t}getFormatString(){return this._formatString}}t.ParameterizedString=v;const b="en-us",_=new Map([["cs",r],["de",s],["en-us",i],["en",i],["es",o],["fr",l],["it",p],["ja",c],["ko",d],["pl",u],["pt-br",m],["qps-ploc",y],["ru",g],["tr",h],["zh-cn",f],["zh-tw",T]]);let C,I={};let k,w=function(e){void 0===C&&(C=function(){I=function(){const e=_.get(b);if(e)return e;return console.error("Could not load default strings"),{}}();return x(A(),_)}());const t=e.split("."),n=S(C,t)||S(I,t);if(n)return n;(0,a.fail)(`Missing localized string for key "${e}"`)};function S(e,t){let n=e;for(const e of t){if(!n[e])return;n=n[e]}return n}function A(){if(k)return k;try{const e=null===process||void 0===process?void 0:process.env,t=null==e?void 0:e.VSCODE_NLS_CONFIG;if(t)try{return JSON.parse(t).locale}catch{}const n=(null==e?void 0:e.LC_ALL)||(null==e?void 0:e.LC_MESSAGES)||(null==e?void 0:e.LANG)||(null==e?void 0:e.LANGUAGE);if(n){const e=n.split(".");if(e.length>0&&e[0])return e[0]}}catch{}return b}function x(e,t){if(e===b)return{};let n=t.get(e);if(void 0!==n)return n;const a=e.split("-");return a.length>0&&a[0]&&(n=t.get(a[0]),void 0!==n)?n:{}}var P;t.setGetRawString=function(e){const t=w;return w=e,t},t.getRawStringFromMap=S,t.setLocaleOverride=function(e){C=void 0,k=e.toLowerCase()},t.getLocaleFromEnv=A,t.loadStringsForLocale=x,function(e){let t,n,a,r;!function(e){e.abstractMethodInvocation=()=>new v(w("Diagnostic.abstractMethodInvocation")),e.annotatedParamCountMismatch=()=>new v(w("Diagnostic.annotatedParamCountMismatch")),e.annotatedTypeArgMissing=()=>w("Diagnostic.annotatedTypeArgMissing"),e.annotationBytesString=()=>w("Diagnostic.annotationBytesString"),e.annotationFormatString=()=>w("Diagnostic.annotationFormatString"),e.annotationNotSupported=()=>w("Diagnostic.annotationNotSupported"),e.annotationRawString=()=>w("Diagnostic.annotationRawString"),e.annotationSpansStrings=()=>w("Diagnostic.annotationSpansStrings"),e.annotationStringEscape=()=>w("Diagnostic.annotationStringEscape"),e.argAssignment=()=>new v(w("Diagnostic.argAssignment")),e.argAssignmentFunction=()=>new v(w("Diagnostic.argAssignmentFunction")),e.argAssignmentParam=()=>new v(w("Diagnostic.argAssignmentParam")),e.argAssignmentParamFunction=()=>new v(w("Diagnostic.argAssignmentParamFunction")),e.argMissingForParam=()=>new v(w("Diagnostic.argMissingForParam")),e.argMissingForParams=()=>new v(w("Diagnostic.argMissingForParams")),e.argMorePositionalExpectedCount=()=>new v(w("Diagnostic.argMorePositionalExpectedCount")),e.argMorePositionalExpectedOne=()=>w("Diagnostic.argMorePositionalExpectedOne"),e.argPositional=()=>w("Diagnostic.argPositional"),e.argPositionalExpectedCount=()=>new v(w("Diagnostic.argPositionalExpectedCount")),e.argPositionalExpectedOne=()=>w("Diagnostic.argPositionalExpectedOne"),e.argTypePartiallyUnknown=()=>w("Diagnostic.argTypePartiallyUnknown"),e.argTypeUnknown=()=>w("Diagnostic.argTypeUnknown"),e.assertAlwaysTrue=()=>w("Diagnostic.assertAlwaysTrue"),e.assertTypeArgs=()=>w("Diagnostic.assertTypeArgs"),e.assertTypeTypeMismatch=()=>new v(w("Diagnostic.assertTypeTypeMismatch")),e.assignmentExprContext=()=>w("Diagnostic.assignmentExprContext"),e.assignmentExprComprehension=()=>new v(w("Diagnostic.assignmentExprComprehension")),e.assignmentExprInSubscript=()=>w("Diagnostic.assignmentExprInSubscript"),e.assignmentInProtocol=()=>w("Diagnostic.assignmentInProtocol"),e.assignmentTargetExpr=()=>w("Diagnostic.assignmentTargetExpr"),e.asyncNotInAsyncFunction=()=>w("Diagnostic.asyncNotInAsyncFunction"),e.awaitIllegal=()=>w("Diagnostic.awaitIllegal"),e.awaitNotAllowed=()=>w("Diagnostic.awaitNotAllowed"),e.awaitNotInAsync=()=>w("Diagnostic.awaitNotInAsync"),e.backticksIllegal=()=>w("Diagnostic.backticksIllegal"),e.baseClassCircular=()=>w("Diagnostic.baseClassCircular"),e.baseClassFinal=()=>new v(w("Diagnostic.baseClassFinal")),e.baseClassIncompatible=()=>new v(w("Diagnostic.baseClassIncompatible")),e.baseClassInvalid=()=>w("Diagnostic.baseClassInvalid"),e.baseClassMethodTypeIncompatible=()=>new v(w("Diagnostic.baseClassMethodTypeIncompatible")),e.baseClassVariableTypeIncompatible=()=>new v(w("Diagnostic.baseClassVariableTypeIncompatible")),e.baseClassUnknown=()=>w("Diagnostic.baseClassUnknown"),e.binaryOperationNotAllowed=()=>w("Diagnostic.binaryOperationNotAllowed"),e.bindTypeMismatch=()=>new v(w("Diagnostic.bindTypeMismatch")),e.breakOutsideLoop=()=>w("Diagnostic.breakOutsideLoop"),e.callableExtraArgs=()=>w("Diagnostic.callableExtraArgs"),e.callableFirstArg=()=>w("Diagnostic.callableFirstArg"),e.callableNotInstantiable=()=>new v(w("Diagnostic.callableNotInstantiable")),e.callableSecondArg=()=>w("Diagnostic.callableSecondArg"),e.casePatternIsIrrefutable=()=>w("Diagnostic.casePatternIsIrrefutable"),e.classAlreadySpecialized=()=>new v(w("Diagnostic.classAlreadySpecialized")),e.classDecoratorTypeUnknown=()=>w("Diagnostic.classDecoratorTypeUnknown"),e.classDefinitionCycle=()=>new v(w("Diagnostic.classDefinitionCycle")),e.classGetItemClsParam=()=>w("Diagnostic.classGetItemClsParam"),e.classMethodClsParam=()=>w("Diagnostic.classMethodClsParam"),e.classNotRuntimeSubscriptable=()=>new v(w("Diagnostic.classNotRuntimeSubscriptable")),e.classPatternBuiltInArgPositional=()=>w("Diagnostic.classPatternBuiltInArgPositional"),e.classPatternPositionalArgCount=()=>new v(w("Diagnostic.classPatternPositionalArgCount")),e.classPatternTypeAlias=()=>new v(w("Diagnostic.classPatternTypeAlias")),e.classPropertyDeprecated=()=>w("Diagnostic.classPropertyDeprecated"),e.classTypeParametersIllegal=()=>w("Diagnostic.classTypeParametersIllegal"),e.classVarNotAllowed=()=>w("Diagnostic.classVarNotAllowed"),e.classVarFirstArgMissing=()=>w("Diagnostic.classVarFirstArgMissing"),e.classVarOverridesInstanceVar=()=>new v(w("Diagnostic.classVarOverridesInstanceVar")),e.classVarTooManyArgs=()=>w("Diagnostic.classVarTooManyArgs"),e.classVarWithTypeVar=()=>w("Diagnostic.classVarWithTypeVar"),e.clsSelfParamTypeMismatch=()=>new v(w("Diagnostic.clsSelfParamTypeMismatch")),e.codeTooComplexToAnalyze=()=>w("Diagnostic.codeTooComplexToAnalyze"),e.collectionAliasInstantiation=()=>new v(w("Diagnostic.collectionAliasInstantiation")),e.comparisonAlwaysFalse=()=>new v(w("Diagnostic.comparisonAlwaysFalse")),e.comparisonAlwaysTrue=()=>new v(w("Diagnostic.comparisonAlwaysTrue")),e.comprehensionInDict=()=>w("Diagnostic.comprehensionInDict"),e.comprehensionInSet=()=>w("Diagnostic.comprehensionInSet"),e.concatenateContext=()=>w("Diagnostic.concatenateContext"),e.concatenateParamSpecMissing=()=>w("Diagnostic.concatenateParamSpecMissing"),e.concatenateTypeArgsMissing=()=>w("Diagnostic.concatenateTypeArgsMissing"),e.conditionalOperandInvalid=()=>new v(w("Diagnostic.conditionalOperandInvalid")),e.constantRedefinition=()=>new v(w("Diagnostic.constantRedefinition")),e.constructorNoArgs=()=>new v(w("Diagnostic.constructorNoArgs")),e.coroutineInConditionalExpression=()=>w("Diagnostic.coroutineInConditionalExpression"),e.constructorParametersMismatch=()=>new v(w("Diagnostic.constructorParametersMismatch")),e.containmentAlwaysFalse=()=>new v(w("Diagnostic.containmentAlwaysFalse")),e.containmentAlwaysTrue=()=>new v(w("Diagnostic.containmentAlwaysTrue")),e.continueInFinally=()=>w("Diagnostic.continueInFinally"),e.continueOutsideLoop=()=>w("Diagnostic.continueOutsideLoop"),e.dataClassBaseClassFrozen=()=>w("Diagnostic.dataClassBaseClassFrozen"),e.dataClassBaseClassNotFrozen=()=>w("Diagnostic.dataClassBaseClassNotFrozen"),e.dataClassConverterFunction=()=>new v(w("Diagnostic.dataClassConverterFunction")),e.dataClassConverterOverloads=()=>new v(w("Diagnostic.dataClassConverterOverloads")),e.dataClassFieldInheritedDefault=()=>new v(w("Diagnostic.dataClassFieldInheritedDefault")),e.dataClassFieldWithDefault=()=>w("Diagnostic.dataClassFieldWithDefault"),e.dataClassFieldWithoutAnnotation=()=>w("Diagnostic.dataClassFieldWithoutAnnotation"),e.dataClassFieldWithPrivateName=()=>w("Diagnostic.dataClassFieldWithPrivateName"),e.dataClassPostInitParamCount=()=>new v(w("Diagnostic.dataClassPostInitParamCount")),e.dataClassPostInitType=()=>new v(w("Diagnostic.dataClassPostInitType")),e.dataClassSlotsOverwrite=()=>w("Diagnostic.dataClassSlotsOverwrite"),e.dataClassTransformExpectedBoolLiteral=()=>w("Diagnostic.dataClassTransformExpectedBoolLiteral"),e.dataClassTransformFieldSpecifier=()=>new v(w("Diagnostic.dataClassTransformFieldSpecifier")),e.dataClassTransformPositionalParam=()=>w("Diagnostic.dataClassTransformPositionalParam"),e.dataClassTransformUnknownArgument=()=>new v(w("Diagnostic.dataClassTransformUnknownArgument")),e.dataProtocolInSubclassCheck=()=>w("Diagnostic.dataProtocolInSubclassCheck"),e.declaredReturnTypePartiallyUnknown=()=>new v(w("Diagnostic.declaredReturnTypePartiallyUnknown")),e.declaredReturnTypeUnknown=()=>w("Diagnostic.declaredReturnTypeUnknown"),e.defaultValueContainsCall=()=>w("Diagnostic.defaultValueContainsCall"),e.defaultValueNotAllowed=()=>w("Diagnostic.defaultValueNotAllowed"),e.deprecatedClass=()=>new v(w("Diagnostic.deprecatedClass")),e.deprecatedConstructor=()=>new v(w("Diagnostic.deprecatedConstructor")),e.deprecatedDescriptorDeleter=()=>new v(w("Diagnostic.deprecatedDescriptorDeleter")),e.deprecatedDescriptorGetter=()=>new v(w("Diagnostic.deprecatedDescriptorGetter")),e.deprecatedDescriptorSetter=()=>new v(w("Diagnostic.deprecatedDescriptorSetter")),e.deprecatedFunction=()=>new v(w("Diagnostic.deprecatedFunction")),e.deprecatedMethod=()=>new v(w("Diagnostic.deprecatedMethod")),e.deprecatedPropertyDeleter=()=>new v(w("Diagnostic.deprecatedPropertyDeleter")),e.deprecatedPropertyGetter=()=>new v(w("Diagnostic.deprecatedPropertyGetter")),e.deprecatedPropertySetter=()=>new v(w("Diagnostic.deprecatedPropertySetter")),e.deprecatedType=()=>new v(w("Diagnostic.deprecatedType")),e.dictExpandIllegalInComprehension=()=>w("Diagnostic.dictExpandIllegalInComprehension"),e.dictInAnnotation=()=>w("Diagnostic.dictInAnnotation"),e.dictKeyValuePairs=()=>w("Diagnostic.dictKeyValuePairs"),e.dictUnpackIsNotMapping=()=>w("Diagnostic.dictUnpackIsNotMapping"),e.delTargetExpr=()=>w("Diagnostic.delTargetExpr"),e.dunderAllSymbolNotPresent=()=>new v(w("Diagnostic.dunderAllSymbolNotPresent")),e.duplicateArgsParam=()=>w("Diagnostic.duplicateArgsParam"),e.duplicateBaseClass=()=>w("Diagnostic.duplicateBaseClass"),e.duplicateCatchAll=()=>w("Diagnostic.duplicateCatchAll"),e.duplicateEnumMember=()=>new v(w("Diagnostic.duplicateEnumMember")),e.duplicateGenericAndProtocolBase=()=>w("Diagnostic.duplicateGenericAndProtocolBase"),e.duplicateImport=()=>new v(w("Diagnostic.duplicateImport")),e.duplicateKwargsParam=()=>w("Diagnostic.duplicateKwargsParam"),e.duplicateKeywordOnly=()=>w("Diagnostic.duplicateKeywordOnly"),e.duplicateParam=()=>new v(w("Diagnostic.duplicateParam")),e.duplicateCapturePatternTarget=()=>new v(w("Diagnostic.duplicateCapturePatternTarget")),e.duplicateStarPattern=()=>w("Diagnostic.duplicateStarPattern"),e.duplicateStarStarPattern=()=>w("Diagnostic.duplicateStarStarPattern"),e.duplicatePositionOnly=()=>w("Diagnostic.duplicatePositionOnly"),e.duplicateUnpack=()=>w("Diagnostic.duplicateUnpack"),e.ellipsisAfterUnpacked=()=>w("Diagnostic.ellipsisAfterUnpacked"),e.ellipsisContext=()=>w("Diagnostic.ellipsisContext"),e.ellipsisSecondArg=()=>w("Diagnostic.ellipsisSecondArg"),e.enumClassOverride=()=>new v(w("Diagnostic.enumClassOverride")),e.exceptionGroupIncompatible=()=>w("Diagnostic.exceptionGroupIncompatible"),e.exceptionTypeIncorrect=()=>new v(w("Diagnostic.exceptionTypeIncorrect")),e.exceptionTypeNotClass=()=>new v(w("Diagnostic.exceptionTypeNotClass")),e.exceptionTypeNotInstantiable=()=>new v(w("Diagnostic.exceptionTypeNotInstantiable")),e.expectedAfterDecorator=()=>w("Diagnostic.expectedAfterDecorator"),e.expectedArrow=()=>w("Diagnostic.expectedArrow"),e.expectedAsAfterException=()=>w("Diagnostic.expectedAsAfterException"),e.expectedAssignRightHandExpr=()=>w("Diagnostic.expectedAssignRightHandExpr"),e.expectedBinaryRightHandExpr=()=>w("Diagnostic.expectedBinaryRightHandExpr"),e.expectedBoolLiteral=()=>w("Diagnostic.expectedBoolLiteral"),e.expectedCase=()=>w("Diagnostic.expectedCase"),e.expectedClassName=()=>w("Diagnostic.expectedClassName"),e.expectedCloseBrace=()=>w("Diagnostic.expectedCloseBrace"),e.expectedCloseBracket=()=>w("Diagnostic.expectedCloseBracket"),e.expectedCloseParen=()=>w("Diagnostic.expectedCloseParen"),e.expectedColon=()=>w("Diagnostic.expectedColon"),e.expectedComplexNumberLiteral=()=>w("Diagnostic.expectedComplexNumberLiteral"),e.expectedDecoratorExpr=()=>w("Diagnostic.expectedDecoratorExpr"),e.expectedDecoratorName=()=>w("Diagnostic.expectedDecoratorName"),e.expectedDecoratorNewline=()=>w("Diagnostic.expectedDecoratorNewline"),e.expectedDelExpr=()=>w("Diagnostic.expectedDelExpr"),e.expectedElse=()=>w("Diagnostic.expectedElse"),e.expectedEquals=()=>w("Diagnostic.expectedEquals"),e.expectedExceptionClass=()=>w("Diagnostic.expectedExceptionClass"),e.expectedExceptionObj=()=>w("Diagnostic.expectedExceptionObj"),e.expectedExpr=()=>w("Diagnostic.expectedExpr"),e.expectedImport=()=>w("Diagnostic.expectedImport"),e.expectedImportAlias=()=>w("Diagnostic.expectedImportAlias"),e.expectedImportSymbols=()=>w("Diagnostic.expectedImportSymbols"),e.expectedIdentifier=()=>w("Diagnostic.expectedIdentifier"),e.expectedIndentedBlock=()=>w("Diagnostic.expectedIndentedBlock"),e.expectedIn=()=>w("Diagnostic.expectedIn"),e.expectedInExpr=()=>w("Diagnostic.expectedInExpr"),e.expectedFunctionAfterAsync=()=>w("Diagnostic.expectedFunctionAfterAsync"),e.expectedFunctionName=()=>w("Diagnostic.expectedFunctionName"),e.expectedMemberName=()=>w("Diagnostic.expectedMemberName"),e.expectedModuleName=()=>w("Diagnostic.expectedModuleName"),e.expectedNameAfterAs=()=>w("Diagnostic.expectedNameAfterAs"),e.expectedNamedParameter=()=>w("Diagnostic.expectedNamedParameter"),e.expectedNewline=()=>w("Diagnostic.expectedNewline"),e.expectedNewlineOrSemicolon=()=>w("Diagnostic.expectedNewlineOrSemicolon"),e.expectedOpenParen=()=>w("Diagnostic.expectedOpenParen"),e.expectedParamName=()=>w("Diagnostic.expectedParamName"),e.expectedPatternExpr=()=>w("Diagnostic.expectedPatternExpr"),e.expectedPatternSubjectExpr=()=>w("Diagnostic.expectedPatternSubjectExpr"),e.expectedPatternValue=()=>w("Diagnostic.expectedPatternValue"),e.expectedReturnExpr=()=>w("Diagnostic.expectedReturnExpr"),e.expectedSliceIndex=()=>w("Diagnostic.expectedSliceIndex"),e.expectedTypeNotString=()=>w("Diagnostic.expectedTypeNotString"),e.expectedTypeParameterName=()=>w("Diagnostic.expectedTypeParameterName"),e.expectedYieldExpr=()=>w("Diagnostic.expectedYieldExpr"),e.finalClassIsAbstract=()=>new v(w("Diagnostic.finalClassIsAbstract")),e.finalContext=()=>w("Diagnostic.finalContext"),e.finalMethodOverride=()=>new v(w("Diagnostic.finalMethodOverride")),e.finalNonMethod=()=>new v(w("Diagnostic.finalNonMethod")),e.finalReassigned=()=>new v(w("Diagnostic.finalReassigned")),e.finalRedeclaration=()=>new v(w("Diagnostic.finalRedeclaration")),e.finalRedeclarationBySubclass=()=>new v(w("Diagnostic.finalRedeclarationBySubclass")),e.finalTooManyArgs=()=>w("Diagnostic.finalTooManyArgs"),e.finalUnassigned=()=>new v(w("Diagnostic.finalUnassigned")),e.formatStringBrace=()=>w("Diagnostic.formatStringBrace"),e.formatStringBytes=()=>w("Diagnostic.formatStringBytes"),e.formatStringDebuggingIllegal=()=>w("Diagnostic.formatStringDebuggingIllegal"),e.formatStringEscape=()=>w("Diagnostic.formatStringEscape"),e.formatStringExpectedConversion=()=>w("Diagnostic.formatStringExpectedConversion"),e.formatStringInPattern=()=>w("Diagnostic.formatStringInPattern"),e.formatStringIllegal=()=>w("Diagnostic.formatStringIllegal"),e.formatStringNestedFormatSpecifier=()=>w("Diagnostic.formatStringNestedFormatSpecifier"),e.formatStringNestedQuote=()=>w("Diagnostic.formatStringNestedQuote"),e.formatStringUnicode=()=>w("Diagnostic.formatStringUnicode"),e.formatStringUnterminated=()=>w("Diagnostic.formatStringUnterminated"),e.functionDecoratorTypeUnknown=()=>w("Diagnostic.functionDecoratorTypeUnknown"),e.functionInConditionalExpression=()=>w("Diagnostic.functionInConditionalExpression"),e.functionTypeParametersIllegal=()=>w("Diagnostic.functionTypeParametersIllegal"),e.futureImportLocationNotAllowed=()=>w("Diagnostic.futureImportLocationNotAllowed"),e.generatorAsyncReturnType=()=>new v(w("Diagnostic.generatorAsyncReturnType")),e.generatorNotParenthesized=()=>w("Diagnostic.generatorNotParenthesized"),e.generatorSyncReturnType=()=>new v(w("Diagnostic.generatorSyncReturnType")),e.genericBaseClassNotAllowed=()=>w("Diagnostic.genericBaseClassNotAllowed"),e.genericClassAssigned=()=>w("Diagnostic.genericClassAssigned"),e.genericClassDeleted=()=>w("Diagnostic.genericClassDeleted"),e.genericInstanceVariableAccess=()=>w("Diagnostic.genericInstanceVariableAccess"),e.genericNotAllowed=()=>w("Diagnostic.genericNotAllowed"),e.genericTypeAliasBoundTypeVar=()=>new v(w("Diagnostic.genericTypeAliasBoundTypeVar")),e.genericTypeArgMissing=()=>w("Diagnostic.genericTypeArgMissing"),e.genericTypeArgTypeVar=()=>w("Diagnostic.genericTypeArgTypeVar"),e.genericTypeArgUnique=()=>w("Diagnostic.genericTypeArgUnique"),e.globalReassignment=()=>new v(w("Diagnostic.globalReassignment")),e.globalRedefinition=()=>new v(w("Diagnostic.globalRedefinition")),e.implicitStringConcat=()=>w("Diagnostic.implicitStringConcat"),e.importCycleDetected=()=>w("Diagnostic.importCycleDetected"),e.importDepthExceeded=()=>new v(w("Diagnostic.importDepthExceeded")),e.importResolveFailure=()=>new v(w("Diagnostic.importResolveFailure")),e.importSourceResolveFailure=()=>new v(w("Diagnostic.importSourceResolveFailure")),e.importSymbolUnknown=()=>new v(w("Diagnostic.importSymbolUnknown")),e.incompatibleMethodOverride=()=>new v(w("Diagnostic.incompatibleMethodOverride")),e.inconsistentIndent=()=>w("Diagnostic.inconsistentIndent"),e.inconsistentTabs=()=>w("Diagnostic.inconsistentTabs"),e.initMethodSelfParamTypeVar=()=>w("Diagnostic.initMethodSelfParamTypeVar"),e.initMustReturnNone=()=>w("Diagnostic.initMustReturnNone"),e.initSubclassClsParam=()=>w("Diagnostic.initSubclassClsParam"),e.initSubclassCallFailed=()=>w("Diagnostic.initSubclassCallFailed"),e.initVarNotAllowed=()=>w("Diagnostic.initVarNotAllowed"),e.instanceMethodSelfParam=()=>w("Diagnostic.instanceMethodSelfParam"),e.instanceVarOverridesClassVar=()=>new v(w("Diagnostic.instanceVarOverridesClassVar")),e.instantiateAbstract=()=>new v(w("Diagnostic.instantiateAbstract")),e.instantiateProtocol=()=>new v(w("Diagnostic.instantiateProtocol")),e.internalBindError=()=>new v(w("Diagnostic.internalBindError")),e.internalParseError=()=>new v(w("Diagnostic.internalParseError")),e.internalTypeCheckingError=()=>new v(w("Diagnostic.internalTypeCheckingError")),e.invalidIdentifierChar=()=>w("Diagnostic.invalidIdentifierChar"),e.invalidStubStatement=()=>w("Diagnostic.invalidStubStatement"),e.invalidTokenChars=()=>new v(w("Diagnostic.invalidTokenChars")),e.isInstanceInvalidType=()=>new v(w("Diagnostic.isInstanceInvalidType")),e.isSubclassInvalidType=()=>new v(w("Diagnostic.isSubclassInvalidType")),e.keyValueInSet=()=>w("Diagnostic.keyValueInSet"),e.keywordArgInTypeArgument=()=>w("Diagnostic.keywordArgInTypeArgument"),e.keywordOnlyAfterArgs=()=>w("Diagnostic.keywordOnlyAfterArgs"),e.keywordParameterMissing=()=>w("Diagnostic.keywordParameterMissing"),e.keywordSubscriptIllegal=()=>w("Diagnostic.keywordSubscriptIllegal"),e.lambdaReturnTypeUnknown=()=>w("Diagnostic.lambdaReturnTypeUnknown"),e.lambdaReturnTypePartiallyUnknown=()=>new v(w("Diagnostic.lambdaReturnTypePartiallyUnknown")),e.listAssignmentMismatch=()=>new v(w("Diagnostic.listAssignmentMismatch")),e.listInAnnotation=()=>w("Diagnostic.listInAnnotation"),e.literalNamedUnicodeEscape=()=>w("Diagnostic.literalNamedUnicodeEscape"),e.literalUnsupportedType=()=>w("Diagnostic.literalUnsupportedType"),e.literalEmptyArgs=()=>w("Diagnostic.literalEmptyArgs"),e.literalNotAllowed=()=>w("Diagnostic.literalNotAllowed"),e.literalNotCallable=()=>w("Diagnostic.literalNotCallable"),e.matchIncompatible=()=>w("Diagnostic.matchIncompatible"),e.matchIsNotExhaustive=()=>w("Diagnostic.matchIsNotExhaustive"),e.maxParseDepthExceeded=()=>w("Diagnostic.maxParseDepthExceeded"),e.memberAccess=()=>new v(w("Diagnostic.memberAccess")),e.memberDelete=()=>new v(w("Diagnostic.memberDelete")),e.memberSet=()=>new v(w("Diagnostic.memberSet")),e.metaclassConflict=()=>w("Diagnostic.metaclassConflict"),e.metaclassDuplicate=()=>w("Diagnostic.metaclassDuplicate"),e.metaclassIsGeneric=()=>w("Diagnostic.metaclassIsGeneric"),e.methodNotDefined=()=>new v(w("Diagnostic.methodNotDefined")),e.methodNotDefinedOnType=()=>new v(w("Diagnostic.methodNotDefinedOnType")),e.methodOrdering=()=>w("Diagnostic.methodOrdering"),e.methodOverridden=()=>new v(w("Diagnostic.methodOverridden")),e.methodReturnsNonObject=()=>new v(w("Diagnostic.methodReturnsNonObject")),e.missingSuperCall=()=>new v(w("Diagnostic.missingSuperCall")),e.moduleAsType=()=>w("Diagnostic.moduleAsType"),e.moduleNotCallable=()=>w("Diagnostic.moduleNotCallable"),e.moduleUnknownMember=()=>new v(w("Diagnostic.moduleUnknownMember")),e.namedExceptAfterCatchAll=()=>w("Diagnostic.namedExceptAfterCatchAll"),e.namedParamAfterParamSpecArgs=()=>new v(w("Diagnostic.namedParamAfterParamSpecArgs")),e.namedTupleEmptyName=()=>w("Diagnostic.namedTupleEmptyName"),e.namedTupleEntryRedeclared=()=>new v(w("Diagnostic.namedTupleEntryRedeclared")),e.namedTupleFirstArg=()=>w("Diagnostic.namedTupleFirstArg"),e.namedTupleMultipleInheritance=()=>w("Diagnostic.namedTupleMultipleInheritance"),e.namedTupleNameKeyword=()=>w("Diagnostic.namedTupleNameKeyword"),e.namedTupleNameType=()=>w("Diagnostic.namedTupleNameType"),e.namedTupleNameUnique=()=>w("Diagnostic.namedTupleNameUnique"),e.namedTupleNoTypes=()=>w("Diagnostic.namedTupleNoTypes"),e.namedTupleSecondArg=()=>w("Diagnostic.namedTupleSecondArg"),e.newClsParam=()=>w("Diagnostic.newClsParam"),e.newTypeAnyOrUnknown=()=>w("Diagnostic.newTypeAnyOrUnknown"),e.newTypeBadName=()=>w("Diagnostic.newTypeBadName"),e.newTypeLiteral=()=>w("Diagnostic.newTypeLiteral"),e.newTypeNameMismatch=()=>w("Diagnostic.newTypeNameMismatch"),e.newTypeNotAClass=()=>w("Diagnostic.newTypeNotAClass"),e.newTypeParamCount=()=>w("Diagnostic.newTypeParamCount"),e.newTypeProtocolClass=()=>w("Diagnostic.newTypeProtocolClass"),e.nonDefaultAfterDefault=()=>w("Diagnostic.nonDefaultAfterDefault"),e.noneNotCallable=()=>w("Diagnostic.noneNotCallable"),e.noneNotIterable=()=>w("Diagnostic.noneNotIterable"),e.noneNotSubscriptable=()=>w("Diagnostic.noneNotSubscriptable"),e.noneNotUsableWith=()=>w("Diagnostic.noneNotUsableWith"),e.noneOperator=()=>new v(w("Diagnostic.noneOperator")),e.noneUnknownMember=()=>new v(w("Diagnostic.noneUnknownMember")),e.nonLocalNoBinding=()=>new v(w("Diagnostic.nonLocalNoBinding")),e.nonLocalReassignment=()=>new v(w("Diagnostic.nonLocalReassignment")),e.nonLocalRedefinition=()=>new v(w("Diagnostic.nonLocalRedefinition")),e.nonLocalInModule=()=>w("Diagnostic.nonLocalInModule"),e.noOverload=()=>new v(w("Diagnostic.noOverload")),e.noReturnContainsReturn=()=>w("Diagnostic.noReturnContainsReturn"),e.noReturnContainsYield=()=>w("Diagnostic.noReturnContainsYield"),e.noReturnReturnsNone=()=>w("Diagnostic.noReturnReturnsNone"),e.notRequiredArgCount=()=>w("Diagnostic.notRequiredArgCount"),e.notRequiredNotInTypedDict=()=>w("Diagnostic.notRequiredNotInTypedDict"),e.objectNotCallable=()=>new v(w("Diagnostic.objectNotCallable")),e.obscuredClassDeclaration=()=>new v(w("Diagnostic.obscuredClassDeclaration")),e.obscuredFunctionDeclaration=()=>new v(w("Diagnostic.obscuredFunctionDeclaration")),e.obscuredMethodDeclaration=()=>new v(w("Diagnostic.obscuredMethodDeclaration")),e.obscuredParameterDeclaration=()=>new v(w("Diagnostic.obscuredParameterDeclaration")),e.obscuredTypeAliasDeclaration=()=>new v(w("Diagnostic.obscuredTypeAliasDeclaration")),e.obscuredVariableDeclaration=()=>new v(w("Diagnostic.obscuredVariableDeclaration")),e.operatorLessOrGreaterDeprecated=()=>w("Diagnostic.operatorLessOrGreaterDeprecated"),e.optionalExtraArgs=()=>w("Diagnostic.optionalExtraArgs"),e.orPatternIrrefutable=()=>w("Diagnostic.orPatternIrrefutable"),e.orPatternMissingName=()=>w("Diagnostic.orPatternMissingName"),e.overlappingKeywordArgs=()=>new v(w("Diagnostic.overlappingKeywordArgs")),e.overlappingOverload=()=>new v(w("Diagnostic.overlappingOverload")),e.overloadAbstractMismatch=()=>new v(w("Diagnostic.overloadAbstractMismatch")),e.overloadClassMethodInconsistent=()=>new v(w("Diagnostic.overloadClassMethodInconsistent")),e.overloadFinalInconsistencyImpl=()=>new v(w("Diagnostic.overloadFinalInconsistencyImpl")),e.overloadFinalInconsistencyNoImpl=()=>new v(w("Diagnostic.overloadFinalInconsistencyNoImpl")),e.overloadImplementationMismatch=()=>new v(w("Diagnostic.overloadImplementationMismatch")),e.overloadReturnTypeMismatch=()=>new v(w("Diagnostic.overloadReturnTypeMismatch")),e.overloadStaticMethodInconsistent=()=>new v(w("Diagnostic.overloadStaticMethodInconsistent")),e.overloadWithoutImplementation=()=>new v(w("Diagnostic.overloadWithoutImplementation")),e.overriddenMethodNotFound=()=>new v(w("Diagnostic.overriddenMethodNotFound")),e.overrideDecoratorMissing=()=>new v(w("Diagnostic.overrideDecoratorMissing")),e.paramAfterKwargsParam=()=>w("Diagnostic.paramAfterKwargsParam"),e.paramAlreadyAssigned=()=>new v(w("Diagnostic.paramAlreadyAssigned")),e.paramAnnotationMissing=()=>new v(w("Diagnostic.paramAnnotationMissing")),e.paramNameMissing=()=>new v(w("Diagnostic.paramNameMissing")),e.paramSpecArgsKwargsUsage=()=>w("Diagnostic.paramSpecArgsKwargsUsage"),e.paramSpecArgsMissing=()=>new v(w("Diagnostic.paramSpecArgsMissing")),e.paramSpecArgsUsage=()=>w("Diagnostic.paramSpecArgsUsage"),e.paramSpecAssignedName=()=>new v(w("Diagnostic.paramSpecAssignedName")),e.paramSpecContext=()=>w("Diagnostic.paramSpecContext"),e.paramSpecDefaultNotTuple=()=>w("Diagnostic.paramSpecDefaultNotTuple"),e.paramSpecFirstArg=()=>w("Diagnostic.paramSpecFirstArg"),e.paramSpecKwargsUsage=()=>w("Diagnostic.paramSpecKwargsUsage"),e.paramSpecNotUsedByOuterScope=()=>new v(w("Diagnostic.paramSpecNotUsedByOuterScope")),e.paramSpecScopedToReturnType=()=>new v(w("Diagnostic.paramSpecScopedToReturnType")),e.paramSpecUnknownArg=()=>w("Diagnostic.paramSpecUnknownArg"),e.paramSpecUnknownMember=()=>new v(w("Diagnostic.paramSpecUnknownMember")),e.paramSpecUnknownParam=()=>new v(w("Diagnostic.paramSpecUnknownParam")),e.paramTypeCovariant=()=>w("Diagnostic.paramTypeCovariant"),e.paramTypeUnknown=()=>new v(w("Diagnostic.paramTypeUnknown")),e.paramAssignmentMismatch=()=>new v(w("Diagnostic.paramAssignmentMismatch")),e.paramTypePartiallyUnknown=()=>new v(w("Diagnostic.paramTypePartiallyUnknown")),e.parenthesizedContextManagerIllegal=()=>w("Diagnostic.parenthesizedContextManagerIllegal"),e.patternNeverMatches=()=>new v(w("Diagnostic.patternNeverMatches")),e.positionArgAfterNamedArg=()=>w("Diagnostic.positionArgAfterNamedArg"),e.privateImportFromPyTypedModule=()=>new v(w("Diagnostic.privateImportFromPyTypedModule")),e.positionOnlyAfterArgs=()=>w("Diagnostic.positionOnlyAfterArgs"),e.positionOnlyAfterKeywordOnly=()=>w("Diagnostic.positionOnlyAfterKeywordOnly"),e.positionOnlyAfterNon=()=>w("Diagnostic.positionOnlyAfterNon"),e.positionOnlyIncompatible=()=>w("Diagnostic.positionOnlyIncompatible"),e.positionOnlyFirstParam=()=>w("Diagnostic.positionOnlyFirstParam"),e.privateUsedOutsideOfClass=()=>new v(w("Diagnostic.privateUsedOutsideOfClass")),e.privateUsedOutsideOfModule=()=>new v(w("Diagnostic.privateUsedOutsideOfModule")),e.propertyOverridden=()=>new v(w("Diagnostic.propertyOverridden")),e.propertyStaticMethod=()=>w("Diagnostic.propertyStaticMethod"),e.protectedUsedOutsideOfClass=()=>new v(w("Diagnostic.protectedUsedOutsideOfClass")),e.protocolBaseClass=()=>new v(w("Diagnostic.protocolBaseClass")),e.protocolBaseClassWithTypeArgs=()=>w("Diagnostic.protocolBaseClassWithTypeArgs"),e.protocolIllegal=()=>w("Diagnostic.protocolIllegal"),e.protocolNotAllowed=()=>w("Diagnostic.protocolNotAllowed"),e.protocolUnsafeOverlap=()=>new v(w("Diagnostic.protocolUnsafeOverlap")),e.protocolVarianceContravariant=()=>new v(w("Diagnostic.protocolVarianceContravariant")),e.protocolVarianceCovariant=()=>new v(w("Diagnostic.protocolVarianceCovariant")),e.protocolVarianceInvariant=()=>new v(w("Diagnostic.protocolVarianceInvariant")),e.pyrightCommentInvalidDiagnosticBoolValue=()=>w("Diagnostic.pyrightCommentInvalidDiagnosticBoolValue"),e.pyrightCommentInvalidDiagnosticSeverityValue=()=>w("Diagnostic.pyrightCommentInvalidDiagnosticSeverityValue"),e.pyrightCommentMissingDirective=()=>w("Diagnostic.pyrightCommentMissingDirective"),e.pyrightCommentNotOnOwnLine=()=>w("Diagnostic.pyrightCommentNotOnOwnLine"),e.pyrightCommentUnknownDirective=()=>new v(w("Diagnostic.pyrightCommentUnknownDirective")),e.pyrightCommentUnknownDiagnosticRule=()=>new v(w("Diagnostic.pyrightCommentUnknownDiagnosticRule")),e.readOnlyArgCount=()=>w("Diagnostic.readOnlyArgCount"),e.readOnlyNotInTypedDict=()=>w("Diagnostic.readOnlyNotInTypedDict"),e.recursiveDefinition=()=>new v(w("Diagnostic.recursiveDefinition")),e.relativeImportNotAllowed=()=>w("Diagnostic.relativeImportNotAllowed"),e.requiredArgCount=()=>w("Diagnostic.requiredArgCount"),e.requiredNotInTypedDict=()=>w("Diagnostic.requiredNotInTypedDict"),e.returnInAsyncGenerator=()=>w("Diagnostic.returnInAsyncGenerator"),e.returnMissing=()=>new v(w("Diagnostic.returnMissing")),e.returnOutsideFunction=()=>w("Diagnostic.returnOutsideFunction"),e.returnTypeContravariant=()=>w("Diagnostic.returnTypeContravariant"),e.returnTypeMismatch=()=>new v(w("Diagnostic.returnTypeMismatch")),e.returnTypeUnknown=()=>w("Diagnostic.returnTypeUnknown"),e.returnTypePartiallyUnknown=()=>new v(w("Diagnostic.returnTypePartiallyUnknown")),e.revealLocalsArgs=()=>w("Diagnostic.revealLocalsArgs"),e.revealLocalsNone=()=>w("Diagnostic.revealLocalsNone"),e.revealTypeArgs=()=>w("Diagnostic.revealTypeArgs"),e.revealTypeExpectedTextArg=()=>w("Diagnostic.revealTypeExpectedTextArg"),e.revealTypeExpectedTextMismatch=()=>new v(w("Diagnostic.revealTypeExpectedTextMismatch")),e.revealTypeExpectedTypeMismatch=()=>new v(w("Diagnostic.revealTypeExpectedTypeMismatch")),e.selfTypeContext=()=>w("Diagnostic.selfTypeContext"),e.selfTypeMetaclass=()=>w("Diagnostic.selfTypeMetaclass"),e.selfTypeWithTypedSelfOrCls=()=>w("Diagnostic.selfTypeWithTypedSelfOrCls"),e.setterGetterTypeMismatch=()=>w("Diagnostic.setterGetterTypeMismatch"),e.starPatternInAsPattern=()=>w("Diagnostic.starPatternInAsPattern"),e.starPatternInOrPattern=()=>w("Diagnostic.starPatternInOrPattern"),e.singleOverload=()=>new v(w("Diagnostic.singleOverload")),e.slotsAttributeError=()=>new v(w("Diagnostic.slotsAttributeError")),e.slotsClassVarConflict=()=>new v(w("Diagnostic.slotsClassVarConflict")),e.starStarWildcardNotAllowed=()=>w("Diagnostic.starStarWildcardNotAllowed"),e.staticClsSelfParam=()=>w("Diagnostic.staticClsSelfParam"),e.stdlibModuleOverridden=()=>new v(w("Diagnostic.stdlibModuleOverridden")),e.stringNonAsciiBytes=()=>w("Diagnostic.stringNonAsciiBytes"),e.stringNotSubscriptable=()=>w("Diagnostic.stringNotSubscriptable"),e.stringUnsupportedEscape=()=>w("Diagnostic.stringUnsupportedEscape"),e.stringUnterminated=()=>w("Diagnostic.stringUnterminated"),e.stubFileMissing=()=>new v(w("Diagnostic.stubFileMissing")),e.stubUsesGetAttr=()=>w("Diagnostic.stubUsesGetAttr"),e.sublistParamsIncompatible=()=>w("Diagnostic.sublistParamsIncompatible"),e.superCallArgCount=()=>w("Diagnostic.superCallArgCount"),e.superCallFirstArg=()=>new v(w("Diagnostic.superCallFirstArg")),e.superCallSecondArg=()=>new v(w("Diagnostic.superCallSecondArg")),e.superCallZeroArgForm=()=>w("Diagnostic.superCallZeroArgForm"),e.superCallZeroArgFormStaticMethod=()=>w("Diagnostic.superCallZeroArgFormStaticMethod"),e.symbolIsUnbound=()=>new v(w("Diagnostic.symbolIsUnbound")),e.symbolIsUndefined=()=>new v(w("Diagnostic.symbolIsUndefined")),e.symbolIsPossiblyUnbound=()=>new v(w("Diagnostic.symbolIsPossiblyUnbound")),e.symbolOverridden=()=>new v(w("Diagnostic.symbolOverridden")),e.ternaryNotAllowed=()=>w("Diagnostic.ternaryNotAllowed"),e.totalOrderingMissingMethod=()=>w("Diagnostic.totalOrderingMissingMethod"),e.trailingCommaInFromImport=()=>w("Diagnostic.trailingCommaInFromImport"),e.tryWithoutExcept=()=>w("Diagnostic.tryWithoutExcept"),e.tupleAssignmentMismatch=()=>new v(w("Diagnostic.tupleAssignmentMismatch")),e.tupleInAnnotation=()=>w("Diagnostic.tupleInAnnotation"),e.tupleIndexOutOfRange=()=>new v(w("Diagnostic.tupleIndexOutOfRange")),e.typeAliasIllegalExpressionForm=()=>w("Diagnostic.typeAliasIllegalExpressionForm"),e.typeAliasIsRecursiveDirect=()=>new v(w("Diagnostic.typeAliasIsRecursiveDirect")),e.typeAliasNotInModuleOrClass=()=>w("Diagnostic.typeAliasNotInModuleOrClass"),e.typeAliasRedeclared=()=>new v(w("Diagnostic.typeAliasRedeclared")),e.typeAliasStatementIllegal=()=>w("Diagnostic.typeAliasStatementIllegal"),e.typeAliasStatementBadScope=()=>w("Diagnostic.typeAliasStatementBadScope"),e.typeAliasTypeBaseClass=()=>w("Diagnostic.typeAliasTypeBaseClass"),e.typeAliasTypeMustBeAssigned=()=>w("Diagnostic.typeAliasTypeMustBeAssigned"),e.typeAliasTypeNameArg=()=>w("Diagnostic.typeAliasTypeNameArg"),e.typeAliasTypeNameMismatch=()=>w("Diagnostic.typeAliasTypeNameMismatch"),e.typeAliasTypeParamInvalid=()=>w("Diagnostic.typeAliasTypeParamInvalid"),e.typeAnnotationCall=()=>w("Diagnostic.typeAnnotationCall"),e.typeAnnotationVariable=()=>w("Diagnostic.typeAnnotationVariable"),e.typeAnnotationWithCallable=()=>w("Diagnostic.typeAnnotationWithCallable"),e.typeArgListExpected=()=>w("Diagnostic.typeArgListExpected"),e.typeArgListNotAllowed=()=>w("Diagnostic.typeArgListNotAllowed"),e.typeArgsExpectingNone=()=>new v(w("Diagnostic.typeArgsExpectingNone")),e.typeArgsMismatchOne=()=>new v(w("Diagnostic.typeArgsMismatchOne")),e.typeArgsMissingForAlias=()=>new v(w("Diagnostic.typeArgsMissingForAlias")),e.typeArgsMissingForClass=()=>new v(w("Diagnostic.typeArgsMissingForClass")),e.typeArgsTooFew=()=>new v(w("Diagnostic.typeArgsTooFew")),e.typeArgsTooMany=()=>new v(w("Diagnostic.typeArgsTooMany")),e.typeAssignmentMismatch=()=>new v(w("Diagnostic.typeAssignmentMismatch")),e.typeAssignmentMismatchWildcard=()=>new v(w("Diagnostic.typeAssignmentMismatchWildcard")),e.typeCallNotAllowed=()=>w("Diagnostic.typeCallNotAllowed"),e.typeCheckOnly=()=>new v(w("Diagnostic.typeCheckOnly")),e.typeCommentDeprecated=()=>w("Diagnostic.typeCommentDeprecated"),e.typedDictAccess=()=>w("Diagnostic.typedDictAccess"),e.typedDictAssignedName=()=>new v(w("Diagnostic.typedDictAssignedName")),e.typedDictBadVar=()=>w("Diagnostic.typedDictBadVar"),e.typedDictBaseClass=()=>w("Diagnostic.typedDictBaseClass"),e.typedDictBoolParam=()=>new v(w("Diagnostic.typedDictBoolParam")),e.typedDictClosedExtras=()=>new v(w("Diagnostic.typedDictClosedExtras")),e.typedDictClosedNoExtras=()=>new v(w("Diagnostic.typedDictClosedNoExtras")),e.typedDictDelete=()=>w("Diagnostic.typedDictDelete"),e.typedDictEmptyName=()=>w("Diagnostic.typedDictEmptyName"),e.typedDictEntryName=()=>w("Diagnostic.typedDictEntryName"),e.typedDictEntryUnique=()=>w("Diagnostic.typedDictEntryUnique"),e.typedDictExtraArgs=()=>w("Diagnostic.typedDictExtraArgs"),e.typedDictFieldNotRequiredRedefinition=()=>new v(w("Diagnostic.typedDictFieldNotRequiredRedefinition")),e.typedDictFieldReadOnlyRedefinition=()=>new v(w("Diagnostic.typedDictFieldReadOnlyRedefinition")),e.typedDictFieldRequiredRedefinition=()=>new v(w("Diagnostic.typedDictFieldRequiredRedefinition")),e.typedDictFirstArg=()=>w("Diagnostic.typedDictFirstArg"),e.typedDictInitsubclassParameter=()=>new v(w("Diagnostic.typedDictInitsubclassParameter")),e.typedDictNotAllowed=()=>w("Diagnostic.typedDictNotAllowed"),e.typedDictSecondArgDict=()=>w("Diagnostic.typedDictSecondArgDict"),e.typedDictSecondArgDictEntry=()=>w("Diagnostic.typedDictSecondArgDictEntry"),e.typedDictSet=()=>w("Diagnostic.typedDictSet"),e.typeExpectedClass=()=>new v(w("Diagnostic.typeExpectedClass")),e.typeGuardArgCount=()=>w("Diagnostic.typeGuardArgCount"),e.typeGuardParamCount=()=>w("Diagnostic.typeGuardParamCount"),e.typeIsReturnType=()=>new v(w("Diagnostic.typeIsReturnType")),e.typeNotAwaitable=()=>new v(w("Diagnostic.typeNotAwaitable")),e.typeNotIntantiable=()=>new v(w("Diagnostic.typeNotIntantiable")),e.typeNotIterable=()=>new v(w("Diagnostic.typeNotIterable")),e.typeNotSpecializable=()=>new v(w("Diagnostic.typeNotSpecializable")),e.typeNotSubscriptable=()=>new v(w("Diagnostic.typeNotSubscriptable")),e.typeNotUsableWith=()=>new v(w("Diagnostic.typeNotUsableWith")),e.typeNotSupportBinaryOperator=()=>new v(w("Diagnostic.typeNotSupportBinaryOperator")),e.typeNotSupportBinaryOperatorBidirectional=()=>new v(w("Diagnostic.typeNotSupportBinaryOperatorBidirectional")),e.typeNotSupportUnaryOperator=()=>new v(w("Diagnostic.typeNotSupportUnaryOperator")),e.typeNotSupportUnaryOperatorBidirectional=()=>new v(w("Diagnostic.typeNotSupportUnaryOperatorBidirectional")),e.typeParameterBoundNotAllowed=()=>w("Diagnostic.typeParameterBoundNotAllowed"),e.typeParameterConstraintTuple=()=>w("Diagnostic.typeParameterConstraintTuple"),e.typeParameterExistingTypeParameter=()=>new v(w("Diagnostic.typeParameterExistingTypeParameter")),e.typeParametersMissing=()=>w("Diagnostic.typeParametersMissing"),e.typeParameterNotDeclared=()=>new v(w("Diagnostic.typeParameterNotDeclared")),e.typePartiallyUnknown=()=>new v(w("Diagnostic.typePartiallyUnknown")),e.typeUnknown=()=>new v(w("Diagnostic.typeUnknown")),e.typeVarAssignedName=()=>new v(w("Diagnostic.typeVarAssignedName")),e.typeVarAssignmentMismatch=()=>new v(w("Diagnostic.typeVarAssignmentMismatch")),e.typeVarBoundAndConstrained=()=>w("Diagnostic.typeVarBoundAndConstrained"),e.typeVarBoundGeneric=()=>w("Diagnostic.typeVarBoundGeneric"),e.typeVarConstraintGeneric=()=>w("Diagnostic.typeVarConstraintGeneric"),e.typeVarDefaultBoundMismatch=()=>w("Diagnostic.typeVarDefaultBoundMismatch"),e.typeVarDefaultConstraintMismatch=()=>w("Diagnostic.typeVarDefaultConstraintMismatch"),e.typeVarDefaultIllegal=()=>w("Diagnostic.typeVarDefaultIllegal"),e.typeVarDefaultInvalidTypeVar=()=>new v(w("Diagnostic.typeVarDefaultInvalidTypeVar")),e.typeVarFirstArg=()=>w("Diagnostic.typeVarFirstArg"),e.typeVarNoMember=()=>new v(w("Diagnostic.typeVarNoMember")),e.typeVarNotSubscriptable=()=>new v(w("Diagnostic.typeVarNotSubscriptable")),e.typeVarNotUsedByOuterScope=()=>new v(w("Diagnostic.typeVarNotUsedByOuterScope")),e.typeVarPossiblyUnsolvable=()=>new v(w("Diagnostic.typeVarPossiblyUnsolvable")),e.typeVarScopedToReturnType=()=>new v(w("Diagnostic.typeVarScopedToReturnType")),e.typeVarSingleConstraint=()=>w("Diagnostic.typeVarSingleConstraint"),e.typeVarsNotInGenericOrProtocol=()=>w("Diagnostic.typeVarsNotInGenericOrProtocol"),e.typeVarTupleContext=()=>w("Diagnostic.typeVarTupleContext"),e.typeVarTupleDefaultNotUnpacked=()=>w("Diagnostic.typeVarTupleDefaultNotUnpacked"),e.typeVarTupleMustBeUnpacked=()=>w("Diagnostic.typeVarTupleMustBeUnpacked"),e.typeVarTupleConstraints=()=>w("Diagnostic.typeVarTupleConstraints"),e.typeVarTupleUnknownParam=()=>new v(w("Diagnostic.typeVarTupleUnknownParam")),e.typeVarUnknownParam=()=>new v(w("Diagnostic.typeVarUnknownParam")),e.typeVarUsedByOuterScope=()=>new v(w("Diagnostic.typeVarUsedByOuterScope")),e.typeVarUsedOnlyOnce=()=>new v(w("Diagnostic.typeVarUsedOnlyOnce")),e.typeVarVariance=()=>w("Diagnostic.typeVarVariance"),e.typeVarWithDefaultFollowsVariadic=()=>new v(w("Diagnostic.typeVarWithDefaultFollowsVariadic")),e.typeVarWithoutDefault=()=>new v(w("Diagnostic.typeVarWithoutDefault")),e.unaccessedClass=()=>new v(w("Diagnostic.unaccessedClass")),e.unaccessedFunction=()=>new v(w("Diagnostic.unaccessedFunction")),e.unaccessedImport=()=>new v(w("Diagnostic.unaccessedImport")),e.unaccessedSymbol=()=>new v(w("Diagnostic.unaccessedSymbol")),e.unaccessedVariable=()=>new v(w("Diagnostic.unaccessedVariable")),e.unannotatedFunctionSkipped=()=>new v(w("Diagnostic.unannotatedFunctionSkipped")),e.unaryOperationNotAllowed=()=>w("Diagnostic.unaryOperationNotAllowed"),e.unexpectedAsyncToken=()=>w("Diagnostic.unexpectedAsyncToken"),e.unexpectedExprToken=()=>w("Diagnostic.unexpectedExprToken"),e.unexpectedIndent=()=>w("Diagnostic.unexpectedIndent"),e.unexpectedUnindent=()=>w("Diagnostic.unexpectedUnindent"),e.unhashableDictKey=()=>w("Diagnostic.unhashableDictKey"),e.unhashableSetEntry=()=>w("Diagnostic.unhashableSetEntry"),e.unionForwardReferenceNotAllowed=()=>w("Diagnostic.unionForwardReferenceNotAllowed"),e.unionSyntaxIllegal=()=>w("Diagnostic.unionSyntaxIllegal"),e.unionTypeArgCount=()=>w("Diagnostic.unionTypeArgCount"),e.uninitializedAbstractVariables=()=>new v(w("Diagnostic.uninitializedAbstractVariables")),e.uninitializedInstanceVariable=()=>new v(w("Diagnostic.uninitializedInstanceVariable")),e.unionUnpackedTuple=()=>w("Diagnostic.unionUnpackedTuple"),e.unionUnpackedTypeVarTuple=()=>w("Diagnostic.unionUnpackedTypeVarTuple"),e.unnecessaryCast=()=>new v(w("Diagnostic.unnecessaryCast")),e.unnecessaryIsInstanceAlways=()=>new v(w("Diagnostic.unnecessaryIsInstanceAlways")),e.unnecessaryIsSubclassAlways=()=>new v(w("Diagnostic.unnecessaryIsSubclassAlways")),e.unnecessaryPyrightIgnore=()=>w("Diagnostic.unnecessaryPyrightIgnore"),e.unnecessaryPyrightIgnoreRule=()=>new v(w("Diagnostic.unnecessaryPyrightIgnoreRule")),e.unnecessaryTypeIgnore=()=>w("Diagnostic.unnecessaryTypeIgnore"),e.unpackArgCount=()=>w("Diagnostic.unpackArgCount"),e.unpackedArgInTypeArgument=()=>w("Diagnostic.unpackedArgInTypeArgument"),e.unpackedArgWithVariadicParam=()=>w("Diagnostic.unpackedArgWithVariadicParam"),e.unpackedDictArgumentNotMapping=()=>w("Diagnostic.unpackedDictArgumentNotMapping"),e.unpackedDictSubscriptIllegal=()=>w("Diagnostic.unpackedDictSubscriptIllegal"),e.unpackedSubscriptIllegal=()=>w("Diagnostic.unpackedSubscriptIllegal"),e.unpackedTypedDictArgument=()=>w("Diagnostic.unpackedTypedDictArgument"),e.unpackedTypeVarTupleExpected=()=>new v(w("Diagnostic.unpackedTypeVarTupleExpected")),e.unpackExpectedTypedDict=()=>w("Diagnostic.unpackExpectedTypedDict"),e.unpackExpectedTypeVarTuple=()=>w("Diagnostic.unpackExpectedTypeVarTuple"),e.unpackIllegalInComprehension=()=>w("Diagnostic.unpackIllegalInComprehension"),e.unpackInAnnotation=()=>w("Diagnostic.unpackInAnnotation"),e.unpackInDict=()=>w("Diagnostic.unpackInDict"),e.unpackInSet=()=>w("Diagnostic.unpackInSet"),e.unpackNotAllowed=()=>w("Diagnostic.unpackNotAllowed"),e.unpackOperatorNotAllowed=()=>w("Diagnostic.unpackOperatorNotAllowed"),e.unpackTuplesIllegal=()=>w("Diagnostic.unpackTuplesIllegal"),e.unreachableCode=()=>w("Diagnostic.unreachableCode"),e.unreachableExcept=()=>w("Diagnostic.unreachableExcept"),e.unsupportedDunderAllOperation=()=>w("Diagnostic.unsupportedDunderAllOperation"),e.unusedCallResult=()=>new v(w("Diagnostic.unusedCallResult")),e.unusedCoroutine=()=>w("Diagnostic.unusedCoroutine"),e.unusedExpression=()=>w("Diagnostic.unusedExpression"),e.varAnnotationIllegal=()=>w("Diagnostic.varAnnotationIllegal"),e.variableFinalOverride=()=>new v(w("Diagnostic.variableFinalOverride")),e.variadicTypeArgsTooMany=()=>w("Diagnostic.variadicTypeArgsTooMany"),e.variadicTypeParamTooManyAlias=()=>new v(w("Diagnostic.variadicTypeParamTooManyAlias")),e.variadicTypeParamTooManyClass=()=>new v(w("Diagnostic.variadicTypeParamTooManyClass")),e.walrusIllegal=()=>w("Diagnostic.walrusIllegal"),e.walrusNotAllowed=()=>w("Diagnostic.walrusNotAllowed"),e.wildcardInFunction=()=>w("Diagnostic.wildcardInFunction"),e.wildcardPatternTypeUnknown=()=>w("Diagnostic.wildcardPatternTypeUnknown"),e.wildcardPatternTypePartiallyUnknown=()=>w("Diagnostic.wildcardPatternTypePartiallyUnknown"),e.wildcardLibraryImport=()=>w("Diagnostic.wildcardLibraryImport"),e.yieldFromIllegal=()=>w("Diagnostic.yieldFromIllegal"),e.yieldFromOutsideAsync=()=>w("Diagnostic.yieldFromOutsideAsync"),e.yieldOutsideFunction=()=>w("Diagnostic.yieldOutsideFunction"),e.yieldWithinListCompr=()=>w("Diagnostic.yieldWithinListCompr"),e.zeroCaseStatementsFound=()=>w("Diagnostic.zeroCaseStatementsFound"),e.zeroLengthTupleNotAllowed=()=>w("Diagnostic.zeroLengthTupleNotAllowed")}(t=e.Diagnostic||(e.Diagnostic={})),function(e){e.annotatedNotAllowed=()=>w("DiagnosticAddendum.annotatedNotAllowed"),e.argParam=()=>new v(w("DiagnosticAddendum.argParam")),e.argParamFunction=()=>new v(w("DiagnosticAddendum.argParamFunction")),e.argsParamMissing=()=>new v(w("DiagnosticAddendum.argsParamMissing")),e.argsPositionOnly=()=>new v(w("DiagnosticAddendum.argsPositionOnly")),e.argumentType=()=>new v(w("DiagnosticAddendum.argumentType")),e.argumentTypes=()=>new v(w("DiagnosticAddendum.argumentTypes")),e.assignToNone=()=>w("DiagnosticAddendum.assignToNone"),e.asyncHelp=()=>w("DiagnosticAddendum.asyncHelp"),e.baseClassIncompatible=()=>new v(w("DiagnosticAddendum.baseClassIncompatible")),e.baseClassIncompatibleSubclass=()=>new v(w("DiagnosticAddendum.baseClassIncompatibleSubclass")),e.baseClassOverriddenType=()=>new v(w("DiagnosticAddendum.baseClassOverriddenType")),e.baseClassOverridesType=()=>new v(w("DiagnosticAddendum.baseClassOverridesType")),e.bytesTypePromotions=()=>w("DiagnosticAddendum.bytesTypePromotions"),e.conditionalRequiresBool=()=>new v(w("DiagnosticAddendum.conditionalRequiresBool")),e.dataClassFrozen=()=>new v(w("DiagnosticAddendum.dataClassFrozen")),e.dataClassFieldLocation=()=>w("DiagnosticAddendum.dataClassFieldLocation"),e.dataProtocolUnsupported=()=>new v(w("DiagnosticAddendum.dataProtocolUnsupported")),e.descriptorAccessBindingFailed=()=>new v(w("DiagnosticAddendum.descriptorAccessBindingFailed")),e.descriptorAccessCallFailed=()=>new v(w("DiagnosticAddendum.descriptorAccessCallFailed")),e.finalMethod=()=>w("DiagnosticAddendum.finalMethod"),e.functionParamDefaultMissing=()=>new v(w("DiagnosticAddendum.functionParamDefaultMissing")),e.functionParamName=()=>new v(w("DiagnosticAddendum.functionParamName")),e.functionParamPositionOnly=()=>new v(w("DiagnosticAddendum.functionParamPositionOnly")),e.functionReturnTypeMismatch=()=>new v(w("DiagnosticAddendum.functionReturnTypeMismatch")),e.functionTooFewParams=()=>new v(w("DiagnosticAddendum.functionTooFewParams")),e.genericClassNotAllowed=()=>w("DiagnosticAddendum.genericClassNotAllowed"),e.incompatibleGetter=()=>w("DiagnosticAddendum.incompatibleGetter"),e.incompatibleSetter=()=>w("DiagnosticAddendum.incompatibleSetter"),e.incompatibleDeleter=()=>w("DiagnosticAddendum.incompatibleDeleter"),e.initMethodLocation=()=>new v(w("DiagnosticAddendum.initMethodLocation")),e.initMethodSignature=()=>new v(w("DiagnosticAddendum.initMethodSignature")),e.initSubclassLocation=()=>new v(w("DiagnosticAddendum.initSubclassLocation")),e.invariantSuggestionDict=()=>w("DiagnosticAddendum.invariantSuggestionDict"),e.invariantSuggestionList=()=>w("DiagnosticAddendum.invariantSuggestionList"),e.invariantSuggestionSet=()=>w("DiagnosticAddendum.invariantSuggestionSet"),e.functionTooManyParams=()=>new v(w("DiagnosticAddendum.functionTooManyParams")),e.keyNotRequired=()=>new v(w("DiagnosticAddendum.keyNotRequired")),e.keyReadOnly=()=>new v(w("DiagnosticAddendum.keyReadOnly")),e.keyRequiredDeleted=()=>new v(w("DiagnosticAddendum.keyRequiredDeleted")),e.keyUndefined=()=>new v(w("DiagnosticAddendum.keyUndefined")),e.kwargsParamMissing=()=>new v(w("DiagnosticAddendum.kwargsParamMissing")),e.listAssignmentMismatch=()=>new v(w("DiagnosticAddendum.listAssignmentMismatch")),e.literalAssignmentMismatch=()=>new v(w("DiagnosticAddendum.literalAssignmentMismatch")),e.matchIsNotExhaustiveType=()=>new v(w("DiagnosticAddendum.matchIsNotExhaustiveType")),e.matchIsNotExhaustiveHint=()=>w("DiagnosticAddendum.matchIsNotExhaustiveHint"),e.memberAssignment=()=>new v(w("DiagnosticAddendum.memberAssignment")),e.memberIsAbstract=()=>new v(w("DiagnosticAddendum.memberIsAbstract")),e.memberIsAbstractMore=()=>new v(w("DiagnosticAddendum.memberIsAbstractMore")),e.memberIsClassVarInProtocol=()=>new v(w("DiagnosticAddendum.memberIsClassVarInProtocol")),e.memberIsFinalInProtocol=()=>new v(w("DiagnosticAddendum.memberIsFinalInProtocol")),e.memberIsInitVar=()=>new v(w("DiagnosticAddendum.memberIsInitVar")),e.memberIsInvariant=()=>new v(w("DiagnosticAddendum.memberIsInvariant")),e.memberIsNotClassVarInClass=()=>new v(w("DiagnosticAddendum.memberIsNotClassVarInClass")),e.memberIsNotClassVarInProtocol=()=>new v(w("DiagnosticAddendum.memberIsNotClassVarInProtocol")),e.memberIsNotFinalInProtocol=()=>new v(w("DiagnosticAddendum.memberIsNotFinalInProtocol")),e.memberIsWritableInProtocol=()=>new v(w("DiagnosticAddendum.memberIsWritableInProtocol")),e.memberSetClassVar=()=>new v(w("DiagnosticAddendum.memberSetClassVar")),e.memberTypeMismatch=()=>new v(w("DiagnosticAddendum.memberTypeMismatch")),e.memberUnknown=()=>new v(w("DiagnosticAddendum.memberUnknown")),e.metaclassConflict=()=>new v(w("DiagnosticAddendum.metaclassConflict")),e.missingGetter=()=>w("DiagnosticAddendum.missingGetter"),e.missingSetter=()=>w("DiagnosticAddendum.missingSetter"),e.missingDeleter=()=>w("DiagnosticAddendum.missingDeleter"),e.namedParamMissingInDest=()=>new v(w("DiagnosticAddendum.namedParamMissingInDest")),e.namedParamMissingInSource=()=>new v(w("DiagnosticAddendum.namedParamMissingInSource")),e.namedParamTypeMismatch=()=>new v(w("DiagnosticAddendum.namedParamTypeMismatch")),e.namedTupleNotAllowed=()=>w("DiagnosticAddendum.namedTupleNotAllowed"),e.newMethodLocation=()=>new v(w("DiagnosticAddendum.newMethodLocation")),e.newMethodSignature=()=>new v(w("DiagnosticAddendum.newMethodSignature")),e.noneNotAllowed=()=>w("DiagnosticAddendum.noneNotAllowed"),e.newTypeClassNotAllowed=()=>w("DiagnosticAddendum.newTypeClassNotAllowed"),e.noOverloadAssignable=()=>new v(w("DiagnosticAddendum.noOverloadAssignable")),e.orPatternMissingName=()=>new v(w("DiagnosticAddendum.orPatternMissingName")),e.overloadIndex=()=>new v(w("DiagnosticAddendum.overloadIndex")),e.overloadSignature=()=>w("DiagnosticAddendum.overloadSignature"),e.overloadNotAssignable=()=>new v(w("DiagnosticAddendum.overloadNotAssignable")),e.overriddenMethod=()=>w("DiagnosticAddendum.overriddenMethod"),e.overriddenSymbol=()=>w("DiagnosticAddendum.overriddenSymbol"),e.overrideIsInvariant=()=>w("DiagnosticAddendum.overrideIsInvariant"),e.overrideInvariantMismatch=()=>new v(w("DiagnosticAddendum.overrideInvariantMismatch")),e.overrideNoOverloadMatches=()=>w("DiagnosticAddendum.overrideNoOverloadMatches"),e.overrideNotClassMethod=()=>w("DiagnosticAddendum.overrideNotClassMethod"),e.overrideNotInstanceMethod=()=>w("DiagnosticAddendum.overrideNotInstanceMethod"),e.overrideNotStaticMethod=()=>w("DiagnosticAddendum.overrideNotStaticMethod"),e.overrideOverloadNoMatch=()=>w("DiagnosticAddendum.overrideOverloadNoMatch"),e.overrideOverloadOrder=()=>w("DiagnosticAddendum.overrideOverloadOrder"),e.overrideParamKeywordNoDefault=()=>new v(w("DiagnosticAddendum.overrideParamKeywordNoDefault")),e.overrideParamKeywordType=()=>new v(w("DiagnosticAddendum.overrideParamKeywordType")),e.overrideParamName=()=>new v(w("DiagnosticAddendum.overrideParamName")),e.overrideParamNameExtra=()=>new v(w("DiagnosticAddendum.overrideParamNameExtra")),e.overrideParamNameMissing=()=>new v(w("DiagnosticAddendum.overrideParamNameMissing")),e.overrideParamNamePositionOnly=()=>new v(w("DiagnosticAddendum.overrideParamNamePositionOnly")),e.overrideParamNoDefault=()=>new v(w("DiagnosticAddendum.overrideParamNoDefault")),e.overrideParamType=()=>new v(w("DiagnosticAddendum.overrideParamType")),e.overridePositionalParamCount=()=>new v(w("DiagnosticAddendum.overridePositionalParamCount")),e.overrideReturnType=()=>new v(w("DiagnosticAddendum.overrideReturnType")),e.overrideType=()=>new v(w("DiagnosticAddendum.overrideType")),e.paramAssignment=()=>new v(w("DiagnosticAddendum.paramAssignment")),e.paramSpecMissingInOverride=()=>w("DiagnosticAddendum.paramSpecMissingInOverride"),e.paramType=()=>new v(w("DiagnosticAddendum.paramType")),e.privateImportFromPyTypedSource=()=>new v(w("DiagnosticAddendum.privateImportFromPyTypedSource")),e.propertyAccessFromProtocolClass=()=>w("DiagnosticAddendum.propertyAccessFromProtocolClass"),e.propertyMethodIncompatible=()=>new v(w("DiagnosticAddendum.propertyMethodIncompatible")),e.propertyMethodMissing=()=>new v(w("DiagnosticAddendum.propertyMethodMissing")),e.propertyMissingDeleter=()=>new v(w("DiagnosticAddendum.propertyMissingDeleter")),e.propertyMissingSetter=()=>new v(w("DiagnosticAddendum.propertyMissingSetter")),e.protocolIncompatible=()=>new v(w("DiagnosticAddendum.protocolIncompatible")),e.protocolMemberMissing=()=>new v(w("DiagnosticAddendum.protocolMemberMissing")),e.protocolRequiresRuntimeCheckable=()=>w("DiagnosticAddendum.protocolRequiresRuntimeCheckable"),e.protocolSourceIsNotConcrete=()=>new v(w("DiagnosticAddendum.protocolSourceIsNotConcrete")),e.protocolUnsafeOverlap=()=>new v(w("DiagnosticAddendum.protocolUnsafeOverlap")),e.pyrightCommentIgnoreTip=()=>w("DiagnosticAddendum.pyrightCommentIgnoreTip"),e.readOnlyAttribute=()=>new v(w("DiagnosticAddendum.readOnlyAttribute")),e.seeDeclaration=()=>w("DiagnosticAddendum.seeDeclaration"),e.seeClassDeclaration=()=>w("DiagnosticAddendum.seeClassDeclaration"),e.seeFunctionDeclaration=()=>w("DiagnosticAddendum.seeFunctionDeclaration"),e.seeMethodDeclaration=()=>w("DiagnosticAddendum.seeMethodDeclaration"),e.seeParameterDeclaration=()=>w("DiagnosticAddendum.seeParameterDeclaration"),e.seeTypeAliasDeclaration=()=>w("DiagnosticAddendum.seeTypeAliasDeclaration"),e.seeVariableDeclaration=()=>w("DiagnosticAddendum.seeVariableDeclaration"),e.tupleEntryTypeMismatch=()=>new v(w("DiagnosticAddendum.tupleEntryTypeMismatch")),e.tupleAssignmentMismatch=()=>new v(w("DiagnosticAddendum.tupleAssignmentMismatch")),e.tupleSizeIndeterminateSrc=()=>new v(w("DiagnosticAddendum.tupleSizeIndeterminateSrc")),e.tupleSizeIndeterminateSrcDest=()=>new v(w("DiagnosticAddendum.tupleSizeIndeterminateSrcDest")),e.tupleSizeMismatch=()=>new v(w("DiagnosticAddendum.tupleSizeMismatch")),e.tupleSizeMismatchIndeterminateDest=()=>new v(w("DiagnosticAddendum.tupleSizeMismatchIndeterminateDest")),e.typeAliasInstanceCheck=()=>w("DiagnosticAddendum.typeAliasInstanceCheck"),e.typeAssignmentMismatch=()=>new v(w("DiagnosticAddendum.typeAssignmentMismatch")),e.typeBound=()=>new v(w("DiagnosticAddendum.typeBound")),e.typeConstrainedTypeVar=()=>new v(w("DiagnosticAddendum.typeConstrainedTypeVar")),e.typedDictBaseClass=()=>new v(w("DiagnosticAddendum.typedDictBaseClass")),e.typedDictClassNotAllowed=()=>w("DiagnosticAddendum.typedDictClassNotAllowed"),e.typedDictExtraFieldNotAllowed=()=>new v(w("DiagnosticAddendum.typedDictExtraFieldNotAllowed")),e.typedDictExtraFieldTypeMismatch=()=>new v(w("DiagnosticAddendum.typedDictExtraFieldTypeMismatch")),e.typedDictFieldMissing=()=>new v(w("DiagnosticAddendum.typedDictFieldMissing")),e.typedDictClosedExtraNotAllowed=()=>new v(w("DiagnosticAddendum.typedDictClosedExtraNotAllowed")),e.typedDictClosedExtraTypeMismatch=()=>new v(w("DiagnosticAddendum.typedDictClosedExtraTypeMismatch")),e.typedDictClosedFieldNotRequired=()=>new v(w("DiagnosticAddendum.typedDictClosedFieldNotRequired")),e.typedDictFieldNotReadOnly=()=>new v(w("DiagnosticAddendum.typedDictFieldNotReadOnly")),e.typedDictFieldNotRequired=()=>new v(w("DiagnosticAddendum.typedDictFieldNotRequired")),e.typedDictFieldRequired=()=>new v(w("DiagnosticAddendum.typedDictFieldRequired")),e.typedDictFieldTypeMismatch=()=>new v(w("DiagnosticAddendum.typedDictFieldTypeMismatch")),e.typedDictFieldUndefined=()=>new v(w("DiagnosticAddendum.typedDictFieldUndefined")),e.typedDictFinalMismatch=()=>new v(w("DiagnosticAddendum.typedDictFinalMismatch")),e.typedDictKeyAccess=()=>new v(w("DiagnosticAddendum.typedDictKeyAccess")),e.typedDictNotAllowed=()=>w("DiagnosticAddendum.typedDictNotAllowed"),e.typeIncompatible=()=>new v(w("DiagnosticAddendum.typeIncompatible")),e.typeNotClass=()=>new v(w("DiagnosticAddendum.typeNotClass")),e.typeParamSpec=()=>new v(w("DiagnosticAddendum.typeParamSpec")),e.typeNotStringLiteral=()=>new v(w("DiagnosticAddendum.typeNotStringLiteral")),e.typeOfSymbol=()=>new v(w("DiagnosticAddendum.typeOfSymbol")),e.typeUnsupported=()=>new v(w("DiagnosticAddendum.typeUnsupported")),e.typeVarDefaultOutOfScope=()=>new v(w("DiagnosticAddendum.typeVarDefaultOutOfScope")),e.typeVarIsContravariant=()=>new v(w("DiagnosticAddendum.typeVarIsContravariant")),e.typeVarIsCovariant=()=>new v(w("DiagnosticAddendum.typeVarIsCovariant")),e.typeVarIsInvariant=()=>new v(w("DiagnosticAddendum.typeVarIsInvariant")),e.typeVarsMissing=()=>new v(w("DiagnosticAddendum.typeVarsMissing")),e.typeVarNotAllowed=()=>w("DiagnosticAddendum.typeVarNotAllowed"),e.typeVarTupleRequiresKnownLength=()=>w("DiagnosticAddendum.typeVarTupleRequiresKnownLength"),e.typeVarUnnecessarySuggestion=()=>new v(w("DiagnosticAddendum.typeVarUnnecessarySuggestion")),e.typeVarUnsolvableRemedy=()=>w("DiagnosticAddendum.typeVarUnsolvableRemedy"),e.unhashableType=()=>new v(w("DiagnosticAddendum.unhashableType")),e.uninitializedAbstractVariable=()=>new v(w("DiagnosticAddendum.uninitializedAbstractVariable")),e.unreachableExcept=()=>new v(w("DiagnosticAddendum.unreachableExcept")),e.useDictInstead=()=>w("DiagnosticAddendum.useDictInstead"),e.useListInstead=()=>w("DiagnosticAddendum.useListInstead"),e.useTupleInstead=()=>w("DiagnosticAddendum.useTupleInstead"),e.useTypeInstead=()=>w("DiagnosticAddendum.useTypeInstead"),e.varianceMismatchForClass=()=>new v(w("DiagnosticAddendum.varianceMismatchForClass")),e.varianceMismatchForTypeAlias=()=>new v(w("DiagnosticAddendum.varianceMismatchForTypeAlias"))}(n=e.DiagnosticAddendum||(e.DiagnosticAddendum={})),function(e){e.createTypeStub=()=>w("CodeAction.createTypeStub"),e.createTypeStubFor=()=>new v(w("CodeAction.createTypeStubFor")),e.executingCommand=()=>w("CodeAction.executingCommand"),e.filesToAnalyzeOne=()=>w("CodeAction.filesToAnalyzeOne"),e.filesToAnalyzeCount=()=>new v(w("CodeAction.filesToAnalyzeCount")),e.findingReferences=()=>w("CodeAction.findingReferences"),e.organizeImports=()=>w("CodeAction.organizeImports"),e.renameShadowedFile=()=>new v(w("CodeAction.renameShadowedFile"))}(a=e.CodeAction||(e.CodeAction={})),function(e){e.autoImportDetail=()=>w("Completion.autoImportDetail"),e.indexValueDetail=()=>w("Completion.indexValueDetail")}(r=e.Completion||(e.Completion={}))}(P||(t.Localizer=P={})),t.LocMessage=P.Diagnostic,t.LocAddendum=P.DiagnosticAddendum},47200:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getConnectionOptions=t.run=void 0;const a=n(34360),r=n(48696),s=n(24092);function i(){return{cancellationStrategy:(0,s.getCancellationStrategyFromArgv)(process.argv)}}t.run=function(e,t){n(31080).install(),r.isMainThread?e((0,a.createConnection)(i())):t()},t.getConnectionOptions=i},70184:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CharacterStream=void 0;const a=n(34296);t.CharacterStream=class{constructor(e){this._text=e,this._position=0,this._currentChar=e.length>0?e.charCodeAt(0):0,this._isEndOfStream=0===e.length}get position(){return this._position}set position(e){this._position=e,this._checkBounds()}get currentChar(){return this._currentChar}get nextChar(){return this.position+1<this._text.length?this._text.charCodeAt(this.position+1):0}get prevChar(){return this.position-1>=0?this._text.charCodeAt(this.position-1):0}get length(){return this._text.length}getText(){return this._text}getCurrentChar(){return this._currentChar}isEndOfStream(){return this._isEndOfStream}lookAhead(e){const t=this._position+e;return t<0||t>=this._text.length?0:this._text.charCodeAt(t)}advance(e){this.position+=e}moveNext(){return this._position<this._text.length-1?(this._position+=1,this._currentChar=this._text.charCodeAt(this._position),!0):(this.advance(1),!this.isEndOfStream())}isAtWhiteSpace(){return(0,a.isWhiteSpace)(this.currentChar)}isAtLineBreak(){return(0,a.isLineBreak)(this.currentChar)}skipLineBreak(){13===this._currentChar?(this.moveNext(),10===this.currentChar&&this.moveNext()):10===this._currentChar&&this.moveNext()}skipWhitespace(){for(;!this.isEndOfStream()&&this.isAtWhiteSpace();)this.moveNext()}skipToEol(){for(;!this.isEndOfStream()&&!this.isAtLineBreak();)this.moveNext()}skipToWhitespace(){for(;!this.isEndOfStream()&&!this.isAtWhiteSpace();)this.moveNext()}charCodeAt(e){return this._text.charCodeAt(e)}_checkBounds(){this._position<0&&(this._position=0),this._isEndOfStream=this._position>=this._text.length,this._isEndOfStream&&(this._position=this._text.length),this._currentChar=this._isEndOfStream?0:this._text.charCodeAt(this._position)}}},34296:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.isBinary=t.isOctal=t.isHex=t.isDecimal=t.isNumber=t.isLineBreak=t.isWhiteSpace=t.isSurrogateChar=t.isIdentifierChar=t.isIdentifierStartChar=void 0;const i=s(n(90452));var o;!function(e){e[e.NotIdentifierChar=0]="NotIdentifierChar",e[e.StartIdentifierChar=1]="StartIdentifierChar",e[e.IdentifierChar=2]="IdentifierChar",e[e.SurrogateChar=3]="SurrogateChar"}(o||(o={}));const l=256,p=new Array(l),c={},d={};let u=!1;function m(e){return e>=48&&e<=57||95===e}function y(e,t){if(c[e]!==o.SurrogateChar)return o.NotIdentifierChar;const n=d[e];return n?n[t]:o.NotIdentifierChar}t.isIdentifierStartChar=function(e,t){if(e<l)return p[e]===o.StartIdentifierChar;let n;return u||(_(!1),u=!0),n=void 0!==t?y(e,t):c[e],n===o.StartIdentifierChar},t.isIdentifierChar=function(e,t){return e<l?p[e]===o.StartIdentifierChar||p[e]===o.IdentifierChar:(u||(_(!1),u=!0),void 0!==t?y(e,t):c[e]===o.StartIdentifierChar||c[e]===o.IdentifierChar)},t.isSurrogateChar=function(e){return!(e<l)&&(u||(_(!1),u=!0),c[e]===o.SurrogateChar)},t.isWhiteSpace=function(e){return 32===e||9===e||12===e},t.isLineBreak=function(e){return 13===e||10===e},t.isNumber=function(e){return e>=48&&e<=57||95===e},t.isDecimal=m,t.isHex=function(e){return m(e)||e>=97&&e<=102||e>=65&&e<=70||95===e},t.isOctal=function(e){return e>=48&&e<=55||95===e},t.isBinary=function(e){return 48===e||49===e||95===e};const g=[[95,6277,6278,8472,8494,12443,12444],i.unicodeLu,i.unicodeLl,i.unicodeLt,i.unicodeLo,i.unicodeLm,i.unicodeNl],h=[i.unicodeLuSurrogate,i.unicodeLlSurrogate,i.unicodeLoSurrogate,i.unicodeLmSurrogate,i.unicodeNlSurrogate],f=[[183,903,4969,4970,4971,4972,4973,4974,4975,4976,4977,6618],i.unicodeMn,i.unicodeMc,i.unicodeNd,i.unicodePc],T=[i.unicodeMnSurrogate,i.unicodeMcSurrogate,i.unicodeNdSurrogate];function v(e,t,n,a,r){for(let s=0;s<e.length;s++){const i=e[s];let o,p;Array.isArray(i)?(o=i[0],p=i[1]):o=p=i;for(let e=o;e<=p;e++)e<l?a[e]=t:r[e]=t;if(n&&o>=l)break}}function b(e,t){for(const n in e)d[n]||(d[n]={},c[n]=o.SurrogateChar),v(e[n],t,!1,d[n],d[n])}function _(e){if(p.fill(o.NotIdentifierChar),f.forEach((t=>{v(t,o.IdentifierChar,e,p,c)})),g.forEach((t=>{v(t,o.StartIdentifierChar,e,p,c)})),!e){for(const e of T)b(e,o.IdentifierChar);for(const e of h)b(e,o.StartIdentifierChar)}}_(!0)},79428:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StringListNode=t.FormatStringNode=t.StringNode=t.NumberNode=t.EllipsisNode=t.ConstantNode=t.NameNode=t.LambdaNode=t.MemberAccessNode=t.YieldFromNode=t.YieldNode=t.SliceNode=t.IndexNode=t.ListComprehensionNode=t.CallNode=t.TupleNode=t.UnpackNode=t.TernaryNode=t.AwaitNode=t.AugmentedAssignmentNode=t.FunctionAnnotationNode=t.TypeAnnotationNode=t.TypeAliasNode=t.TypeParameterListNode=t.TypeParameterNode=t.TypeParameterCategory=t.AssignmentNode=t.AssignmentExpressionNode=t.BinaryOperationNode=t.UnaryOperationNode=t.ErrorNode=t.isExpressionNode=t.StatementListNode=t.DecoratorNode=t.WithItemNode=t.WithNode=t.ClassNode=t.ParameterNode=t.FunctionNode=t.ExceptNode=t.TryNode=t.ListComprehensionIfNode=t.ListComprehensionForNode=t.ForNode=t.WhileNode=t.IfNode=t.SuiteNode=t.ModuleNode=t.extendRange=t.getNextNodeId=void 0,t.PatternValueNode=t.PatternMappingExpandEntryNode=t.PatternMappingKeyEntryNode=t.PatternMappingNode=t.PatternCaptureNode=t.PatternClassArgumentNode=t.PatternClassNode=t.PatternLiteralNode=t.PatternAsNode=t.PatternSequenceNode=t.CaseNode=t.MatchNode=t.RaiseNode=t.ReturnNode=t.ContinueNode=t.BreakNode=t.AssertNode=t.NonlocalNode=t.GlobalNode=t.ImportFromAsNode=t.ImportFromNode=t.ImportAsNode=t.ModuleNameNode=t.ImportNode=t.PassNode=t.DelNode=t.ArgumentNode=t.ListNode=t.SetNode=t.DictionaryExpandEntryNode=t.DictionaryKeyEntryNode=t.DictionaryNode=void 0;const a=n(55164);let r=1;function s(e,t){const n=a.TextRange.extend(e,t),r=e;r.start=n.start,r.length=n.length}var i,o,l,p,c,d,u,m,y,g,h,f,T,v,b,_,C,I,k,w,S,A,x,P,N,D,F,E,M,O,z,V,U,R,L,j,B,q,W,G,K,$,H,Z,Y,J,Q,X,ee,te,ne,ae,re,se,ie,oe,le,pe,ce,de,ue,me,ye,ge,he,fe,Te,ve,be,_e,Ce,Ie,ke,we,Se,Ae,xe,Pe,Ne;t.getNextNodeId=function(){return r++},t.extendRange=s,function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:36,id:r++,statements:[]}}}(i||(t.ModuleNode=i={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:50,id:r++,statements:[]}}}(o||(t.SuiteNode=o={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:19,id:r++,testExpression:t,ifSuite:n,elseSuite:a};return t.parent=i,n.parent=i,s(i,t),s(i,n),a&&(s(i,a),a.parent=i),i}}(l||(t.IfNode=l={})),function(e){e.create=function(e,t,n){const a={start:e.start,length:e.length,nodeType:57,id:r++,testExpression:t,whileSuite:n};return t.parent=a,n.parent=a,s(a,n),a}}(p||(t.WhileNode=p={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:26,id:r++,targetExpression:t,iterableExpression:n,forSuite:a};return t.parent=i,n.parent=i,a.parent=i,s(i,a),i}}(c||(t.ForNode=c={})),function(e){e.create=function(e,t,n){const a={start:e.start,length:e.length,nodeType:33,id:r++,targetExpression:t,iterableExpression:n};return t.parent=a,n.parent=a,s(a,t),s(a,n),a}}(d||(t.ListComprehensionForNode=d={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:34,id:r++,testExpression:t};return t.parent=n,s(n,t),n}}(u||(t.ListComprehensionIfNode=u={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:53,id:r++,trySuite:t,exceptClauses:[]};return t.parent=n,s(n,t),n}}(m||(t.TryNode=m={})),function(e){e.create=function(e,t,n){const a={start:e.start,length:e.length,nodeType:25,id:r++,exceptSuite:t,isExceptGroup:n};return t.parent=a,s(a,t),a}}(y||(t.ExceptNode=y={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:28,id:r++,decorators:[],name:t,typeParameters:a,parameters:[],suite:n};return t.parent=i,n.parent=i,a&&(a.parent=i),s(i,n),i}}(g||(t.FunctionNode=g={})),function(e){e.create=function(e,t){return{start:e.start,length:e.length,nodeType:41,id:r++,category:t}}}(h||(t.ParameterNode=h={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:10,id:r++,decorators:[],name:t,typeParameters:a,arguments:[],suite:n};return t.parent=i,n.parent=i,a&&(a.parent=i),s(i,n),i},e.createDummyForDecorators=function(e){const t={start:e[0].start,length:0,nodeType:10,id:r++,decorators:e,name:{start:e[0].start,length:0,id:0,nodeType:38,token:{type:7,start:0,length:0,comments:[],value:""},value:""},arguments:[],suite:{start:e[0].start,length:0,id:0,nodeType:50,statements:[]}};return e.forEach((e=>{e.parent=t,s(t,e)})),t.name.parent=t,t.suite.parent=t,t}}(f||(t.ClassNode=f={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:58,id:r++,withItems:[],suite:t};return t.parent=n,s(n,t),n}}(T||(t.WithNode=T={})),function(e){e.create=function(e){const t={start:e.start,length:e.length,nodeType:59,id:r++,expression:e};return e.parent=t,t}}(v||(t.WithItemNode=v={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:13,id:r++,expression:t};return t.parent=n,s(n,t),n}}(b||(t.DecoratorNode=b={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:47,id:r++,statements:[]}}}(_||(t.StatementListNode=_={})),t.isExpressionNode=function(e){switch(e.nodeType){case 0:case 55:case 7:case 4:case 54:case 6:case 51:case 56:case 52:case 9:case 32:case 24:case 46:case 60:case 61:case 35:case 30:case 38:case 11:case 18:case 40:case 49:case 27:case 48:case 15:case 31:case 45:return!0;default:return!1}},function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:0,id:r++,category:t,child:n,decorators:a};return n&&(n.parent=i,s(i,n)),a&&(a.forEach((e=>{e.parent=i})),a.length>0&&s(i,a[0])),i}}(C||(t.ErrorNode=C={})),function(e){e.create=function(e,t,n){var a;const i={start:e.start,length:e.length,nodeType:55,id:r++,operator:n,operatorToken:e,expression:t};return t.parent=i,i.maxChildDepth=1+(null!==(a=t.maxChildDepth)&&void 0!==a?a:0),s(i,t),i}}(I||(t.UnaryOperationNode=I={})),function(e){e.create=function(e,t,n,a){var i,o;const l={start:e.start,length:e.length,nodeType:7,id:r++,leftExpression:e,operatorToken:n,operator:a,rightExpression:t};return e.parent=l,t.parent=l,l.maxChildDepth=1+Math.max(null!==(i=e.maxChildDepth)&&void 0!==i?i:0,null!==(o=t.maxChildDepth)&&void 0!==o?o:0),s(l,t),l}}(k||(t.BinaryOperationNode=k={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:4,id:r++,name:e,rightExpression:t};return e.parent=n,t.parent=n,s(n,t),n}}(w||(t.AssignmentExpressionNode=w={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:3,id:r++,leftExpression:e,rightExpression:t};return e.parent=n,t.parent=n,s(n,t),n}}(S||(t.AssignmentNode=S={})),function(e){e[e.TypeVar=0]="TypeVar",e[e.TypeVarTuple=1]="TypeVarTuple",e[e.ParamSpec=2]="ParamSpec"}(A||(t.TypeParameterCategory=A={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:75,id:r++,name:e,typeParamCategory:t,boundExpression:n,defaultExpression:a};return e.parent=i,n&&(n.parent=i,s(i,n)),a&&(a.parent=i,s(i,a)),i}}(x||(t.TypeParameterNode=x={})),function(e){e.create=function(e,t,n){const a={start:e.start,length:e.length,nodeType:76,id:r++,parameters:n};return s(a,t),n.forEach((e=>{s(a,e),e.parent=a})),a}}(P||(t.TypeParameterListNode=P={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:77,id:r++,name:t,typeParameters:a,expression:n};return t.parent=i,n.parent=i,a&&(a.parent=i),s(i,n),i}}(N||(t.TypeAliasNode=N={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:54,id:r++,valueExpression:e,typeAnnotation:t};return e.parent=n,t.parent=n,s(n,t),n}}(D||(t.TypeAnnotationNode=D={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:62,id:r++,isParamListEllipsis:t,paramTypeAnnotations:n,returnTypeAnnotation:a};return n.forEach((e=>{e.parent=i})),a.parent=i,s(i,a),i}}(F||(t.FunctionAnnotationNode=F={})),function(e){e.create=function(e,t,n,a){const i={start:e.start,length:e.length,nodeType:5,id:r++,leftExpression:e,operator:n,rightExpression:t,destExpression:a};return e.parent=i,t.parent=i,a.parent=i,s(i,t),i}}(E||(t.AugmentedAssignmentNode=E={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:6,id:r++,expression:t};return t.parent=n,s(n,t),n}}(M||(t.AwaitNode=M={})),function(e){e.create=function(e,t,n){const a={start:e.start,length:e.length,nodeType:51,id:r++,ifExpression:e,testExpression:t,elseExpression:n};return e.parent=a,t.parent=a,n.parent=a,s(a,n),a}}(O||(t.TernaryNode=O={})),function(e){e.create=function(e,t){const n={starToken:e,start:e.start,length:e.length,nodeType:56,id:r++,expression:t};return t.parent=n,s(n,t),n}}(z||(t.UnpackNode=z={})),function(e){e.create=function(e,t){return{start:e.start,length:e.length,nodeType:52,id:r++,expressions:[],enclosedInParens:t}}}(V||(t.TupleNode=V={})),function(e){e.create=function(e,t,n){var a;const i={start:e.start,length:e.length,nodeType:9,id:r++,leftExpression:e,arguments:t,trailingComma:n};return e.parent=i,i.maxChildDepth=1+(null!==(a=e.maxChildDepth)&&void 0!==a?a:0),t.length>0&&(t.forEach((e=>{e.parent=i})),s(i,t[t.length-1])),i}}(U||(t.CallNode=U={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:32,id:r++,expression:e,forIfNodes:[],isGenerator:t};return e.parent=n,n}}(R||(t.ListComprehensionNode=R={})),function(e){e.create=function(e,t,n,a){var i;const o={start:e.start,length:e.length,nodeType:24,id:r++,baseExpression:e,items:t,trailingComma:n};return e.parent=o,t.forEach((e=>{e.parent=o})),s(o,a),o.maxChildDepth=1+(null!==(i=e.maxChildDepth)&&void 0!==i?i:0),o}}(L||(t.IndexNode=L={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:46,id:r++}}}(j||(t.SliceNode=j={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:60,id:r++,expression:t};return t&&(t.parent=n,s(n,t)),n}}(B||(t.YieldNode=B={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:61,id:r++,expression:t};return t.parent=n,s(n,t),n}}(q||(t.YieldFromNode=q={})),function(e){e.create=function(e,t){var n;const a={start:e.start,length:e.length,nodeType:35,id:r++,leftExpression:e,memberName:t};return e.parent=a,t.parent=a,s(a,t),a.maxChildDepth=1+(null!==(n=e.maxChildDepth)&&void 0!==n?n:0),a}}(W||(t.MemberAccessNode=W={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:30,id:r++,parameters:[],expression:t};return t.parent=n,s(n,t),n}}(G||(t.LambdaNode=G={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:38,id:r++,token:e,value:e.value}}}(K||(t.NameNode=K={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:11,id:r++,constType:e.keywordType}}}($||(t.ConstantNode=$={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:18,id:r++}}}(H||(t.EllipsisNode=H={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:40,id:r++,value:e.value,isInteger:e.isInteger,isImaginary:e.isImaginary}}}(Z||(t.NumberNode=Z={})),function(e){e.create=function(e,t){return{start:e.start,length:e.length,nodeType:49,id:r++,token:e,value:t}}}(Y||(t.StringNode=Y={})),function(e){e.create=function(e,t,n,a,i){const o={start:e.start,length:e.length,nodeType:27,id:r++,token:e,middleTokens:n,fieldExpressions:a,formatExpressions:i,value:""};return a.forEach((e=>{e.parent=o,s(o,e)})),i&&i.forEach((e=>{e.parent=o,s(o,e)})),t&&s(o,t),o}}(J||(t.FormatStringNode=J={})),function(e){e.create=function(e){const t={start:e[0].start,length:e[0].length,nodeType:48,id:r++,strings:e};return e.length>0&&(e.forEach((e=>{e.parent=t})),s(t,e[e.length-1])),t}}(Q||(t.StringListNode=Q={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:15,id:r++,entries:[]}}}(X||(t.DictionaryNode=X={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:17,id:r++,keyExpression:e,valueExpression:t};return e.parent=n,t.parent=n,s(n,t),n}}(ee||(t.DictionaryKeyEntryNode=ee={})),function(e){e.create=function(e){const t={start:e.start,length:e.length,nodeType:16,id:r++,expandExpression:e};return e.parent=t,t}}(te||(t.DictionaryExpandEntryNode=te={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:45,id:r++,entries:[]}}}(ne||(t.SetNode=ne={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:31,id:r++,entries:[]}}}(ae||(t.ListNode=ae={})),function(e){e.create=function(e,t,n){const a={start:e?e.start:t.start,length:e?e.length:t.length,nodeType:1,id:r++,valueExpression:t,argumentCategory:n};return t.parent=a,s(a,t),a}}(re||(t.ArgumentNode=re={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:14,id:r++,expressions:[]}}}(se||(t.DelNode=se={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:42,id:r++}}}(ie||(t.PassNode=ie={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:20,id:r++,list:[]}}}(oe||(t.ImportNode=oe={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:37,id:r++,leadingDots:0,nameParts:[]}}}(le||(t.ModuleNameNode=le={})),function(e){e.create=function(e){const t={start:e.start,length:e.length,nodeType:21,id:r++,module:e};return e.parent=t,t}}(pe||(t.ImportAsNode=pe={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:22,id:r++,module:t,imports:[],isWildcardImport:!1,usesParens:!1};return t.parent=n,s(n,t),n}}(ce||(t.ImportFromNode=ce={})),function(e){e.create=function(e){const t={start:e.start,length:e.length,nodeType:23,id:r++,name:e};return e.parent=t,t}}(de||(t.ImportFromAsNode=de={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:29,id:r++,nameList:[]}}}(ue||(t.GlobalNode=ue={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:39,id:r++,nameList:[]}}}(me||(t.NonlocalNode=me={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:2,id:r++,testExpression:t};return t.parent=n,s(n,t),n}}(ye||(t.AssertNode=ye={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:8,id:r++}}}(ge||(t.BreakNode=ge={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:12,id:r++}}}(he||(t.ContinueNode=he={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:44,id:r++}}}(fe||(t.ReturnNode=fe={})),function(e){e.create=function(e){return{start:e.start,length:e.length,nodeType:43,id:r++}}}(Te||(t.RaiseNode=Te={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:63,id:r++,subjectExpression:t,cases:[]};return t.parent=n,s(n,t),n}}(ve||(t.MatchNode=ve={})),function(e){e.create=function(e,t,n,a,i){const o={start:e.start,length:e.length,nodeType:64,id:r++,pattern:t,isIrrefutable:n,guardExpression:a,suite:i};return s(o,i),t.parent=o,i.parent=o,a&&(a.parent=o),o}}(be||(t.CaseNode=be={})),function(e){e.create=function(e,t){const n=t.findIndex((e=>1===e.orPatterns.length&&69===e.orPatterns[0].nodeType&&e.orPatterns[0].isStar)),a={start:e.start,length:e.length,nodeType:65,id:r++,entries:t,starEntryIndex:n>=0?n:void 0};return t.length>0&&s(a,t[t.length-1]),t.forEach((e=>{e.parent=a})),a}}(_e||(t.PatternSequenceNode=_e={})),function(e){e.create=function(e,t){const n={start:e[0].start,length:e[0].length,nodeType:66,id:r++,orPatterns:e,target:t};return e.length>1&&s(n,e[e.length-1]),e.forEach((e=>{e.parent=n})),t&&(s(n,t),t.parent=n),n}}(Ce||(t.PatternAsNode=Ce={})),function(e){e.create=function(e){const t={start:e.start,length:e.length,nodeType:67,id:r++,expression:e};return e.parent=t,t}}(Ie||(t.PatternLiteralNode=Ie={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:68,id:r++,className:e,arguments:t};return e.parent=n,t.forEach((e=>{e.parent=n})),t.length>0&&s(n,t[t.length-1]),n}}(ke||(t.PatternClassNode=ke={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:74,id:r++,pattern:e,name:t};return e.parent=n,t&&(s(n,t),t.parent=n),n}}(we||(t.PatternClassArgumentNode=we={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:69,id:r++,target:e,isStar:void 0!==t,isWildcard:"_"===e.value};return e.parent=n,t&&s(n,t),n}}(Se||(t.PatternCaptureNode=Se={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:70,id:r++,entries:t};return t.length>0&&s(n,t[t.length-1]),t.forEach((e=>{e.parent=n})),n}}(Ae||(t.PatternMappingNode=Ae={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:71,id:r++,keyPattern:e,valuePattern:t};return e.parent=n,t.parent=n,s(n,t),n}}(xe||(t.PatternMappingKeyEntryNode=xe={})),function(e){e.create=function(e,t){const n={start:e.start,length:e.length,nodeType:72,id:r++,target:t};return t.parent=n,s(n,t),n}}(Pe||(t.PatternMappingExpandEntryNode=Pe={})),function(e){e.create=function(e){const t={start:e.start,length:e.length,nodeType:73,id:r++,expression:e};return e.parent=t,t}}(Ne||(t.PatternValueNode=Ne={}))},87368:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Parser=t.ParseOptions=void 0;const i=n(41500),o=n(28040),l=n(83181),p=n(72484),c=n(73664),d=n(96193),u=n(61328),m=n(55164),y=n(6216),g=n(95960),h=n(79428),f=s(n(70736)),T=n(71424),v=n(2572);class b{constructor(){this.isStubFile=!1,this.pythonVersion=u.latestStablePythonVersion,this.reportInvalidStringEscapeSequence=!1,this.skipFunctionAndClassBody=!1,this.ipythonMode=i.IPythonMode.None,this.reportErrorsForParsedStringContents=!1}}t.ParseOptions=b;const _=256;class C{constructor(){this._tokenIndex=0,this._areErrorsSuppressed=!1,this._parseOptions=new b,this._diagSink=new c.DiagnosticSink,this._isInLoop=!1,this._isInFunction=!1,this._isInFinally=!1,this._isParsingTypeAnnotation=!1,this._isParsingIndexTrailer=!1,this._isParsingQuotedText=!1,this._futureImports=new Set,this._importedModules=[],this._containsWildcardImport=!1,this._assignmentExpressionsAllowed=!0,this._typingImportAliases=[],this._typingSymbolAliases=new Map}parseSourceFile(e,t,n){y.timingStats.tokenizeFileTime.timeOperation((()=>{this._startNewParse(e,0,e.length,t,n)}));const a=h.ModuleNode.create({start:0,length:e.length});return y.timingStats.parseFileTime.timeOperation((()=>{for(;!this._atEof();)if(!this._consumeTokenIfType(2)){const e=this._peekToken();if(3===e.type){this._getNextToken();const t=e;t.isIndentAmbiguous?this._addSyntaxError(g.LocMessage.inconsistentTabs(),t):this._addSyntaxError(g.LocMessage.unexpectedIndent(),e)}const t=this._parseStatement();t?(t.parent=a,a.statements.push(t)):this._consumeTokensUntilType([2])}})),(0,l.assert)(void 0!==this._tokenizerOutput),{text:e,parserOutput:{parseTree:a,importedModules:this._importedModules,futureImports:this._futureImports,containsWildcardImport:this._containsWildcardImport,typingSymbolAliases:this._typingSymbolAliases},tokenizerOutput:this._tokenizerOutput}}parseTextExpression(e,t,n,a,r=0,s=0,i){const o=new c.DiagnosticSink;let l;if(this._startNewParse(e,t,n,a,o,s),i&&(this._typingSymbolAliases=new Map(i)),1===r)this._isParsingQuotedText=!0,l=this._parseTypeAnnotation();else if(2===r)this._isParsingQuotedText=!0,l=this._parseFunctionTypeAnnotation();else{const e=this._parseTestOrStarExpressionList(!1,!0);e.parseError?l=e.parseError:(0===e.list.length&&this._addSyntaxError(g.LocMessage.expectedExpr(),this._peekToken()),l=this._makeExpressionOrTuple(e,!1))}return 2===this._peekTokenType()&&this._getNextToken(),this._atEof()||this._addSyntaxError(g.LocMessage.unexpectedExprToken(),this._peekToken()),{parseTree:l,lines:this._tokenizerOutput.lines,diagnostics:o.fetchAndClear()}}_startNewParse(e,t,n,a,r,s=0){this._fileContents=e,this._parseOptions=a,this._diagSink=r;const i=new T.Tokenizer;this._tokenizerOutput=i.tokenize(e,t,n,s,this._parseOptions.ipythonMode),this._tokenIndex=0}_parseStatement(){switch(this._consumeTokenIfType(4)&&this._addSyntaxError(g.LocMessage.unexpectedUnindent(),this._peekToken()),this._peekKeywordType()){case 20:return this._parseIfStatement();case 36:return this._parseWhileStatement();case 17:return this._parseForStatement();case 34:return this._parseTryStatement();case 37:return this._parseWithStatement();case 10:return this._parseFunctionDef();case 7:return this._parseClassDef();case 3:return this._parseAsyncStatement();case 25:{const e=this._peekToken(1);let t=!1;if(10===e.type||11===e.type||12===e.type||20===e.type||2===e.type||1===e.type)t=!0;else if(9===e.type){const n=e;26!==n.operatorType&&0!==n.operatorType&&5!==n.operatorType&&33!==n.operatorType&&(t=!0)}if(!t){const e=this._parseMatchStatement();if(e)return e}break}}return 22===this._peekOperatorType()?this._parseDecorated():this._parseSimpleStatement()}_parseAsyncStatement(){const e=this._getKeywordToken(3);switch(this._peekKeywordType()){case 10:return this._parseFunctionDef(e);case 37:return this._parseWithStatement(e);case 17:return this._parseForStatement(e)}this._addSyntaxError(g.LocMessage.unexpectedAsyncToken(),e)}_parseTypeAliasStatement(){const e=this._getKeywordToken(35);!this._parseOptions.isStubFile&&this._getLanguageVersion().isLessThan(u.pythonVersion3_12)&&this._addSyntaxError(g.LocMessage.typeAliasStatementIllegal(),e);const t=this._getTokenIfIdentifier();(0,l.assert)(void 0!==t);const n=h.NameNode.create(t);let a;15===this._peekToken().type&&(a=this._parseTypeParameterList());const r=this._peekToken();9!==r.type||2!==r.operatorType?this._addSyntaxError(g.LocMessage.expectedEquals(),r):this._getNextToken();const s=this._isParsingTypeAnnotation;this._isParsingTypeAnnotation=!0;const i=this._parseTestExpression(!1);return this._isParsingTypeAnnotation=s,h.TypeAliasNode.create(e,n,i,a)}_parseTypeParameterList(){const e=[],t=this._getNextToken();for((0,l.assert)(15===t.type);;){if(16===this._peekToken().type){0===e.length&&this._addSyntaxError(g.LocMessage.typeParametersMissing(),this._peekToken());break}const t=this._parseTypeParameter();if(!t)break;if(e.push(t),!this._consumeTokenIfType(12))break}const n=this._peekToken();return 16!==n.type?(this._addSyntaxError(g.LocMessage.expectedCloseBracket(),this._peekToken()),this._consumeTokensUntilType([2,16,10])):this._getNextToken(),h.TypeParameterListNode.create(t,n,e)}_parseTypeParameter(){let e=h.TypeParameterCategory.TypeVar;this._consumeTokenIfOperator(26)?e=h.TypeParameterCategory.TypeVarTuple:this._consumeTokenIfOperator(29)&&(e=h.TypeParameterCategory.ParamSpec);const t=this._getTokenIfIdentifier();if(!t)return void this._addSyntaxError(g.LocMessage.expectedTypeParameterName(),this._peekToken());const n=h.NameNode.create(t);let a,r;return this._consumeTokenIfType(10)&&(a=this._parseExpression(!1),e!==h.TypeParameterCategory.TypeVar&&this._addSyntaxError(g.LocMessage.typeParameterBoundNotAllowed(),a)),this._consumeTokenIfOperator(2)&&(r=this._parseExpression(e===h.TypeParameterCategory.TypeVarTuple),!this._parseOptions.isStubFile&&this._getLanguageVersion().isLessThan(u.pythonVersion3_13)&&this._addSyntaxError(g.LocMessage.typeVarDefaultIllegal(),r)),h.TypeParameterNode.create(n,e,a,r)}_parseMatchStatement(){let e=!1;if(this._suppressErrors((()=>{const t=this._tokenIndex;this._getKeywordToken(25);const n=this._parseTestOrStarListAsExpression(!0,!0,12,(()=>g.LocMessage.expectedReturnExpr()));e=0!==n.nodeType&&10===this._peekToken().type,this._tokenIndex=t})),!e)return;const t=this._getKeywordToken(25),n=this._parseTestOrStarListAsExpression(!0,!0,12,(()=>g.LocMessage.expectedReturnExpr())),a=h.MatchNode.create(t,n),r=this._peekToken();if(this._consumeTokenIfType(10)){if((0,h.extendRange)(a,r),this._consumeTokenIfType(2)){const e=this._peekToken();if(this._consumeTokenIfType(3)){const t=e;t.isIndentAmbiguous&&this._addSyntaxError(g.LocMessage.inconsistentTabs(),t)}else this._addSyntaxError(g.LocMessage.expectedIndentedBlock(),this._peekToken());for(;;){const e=this._peekToken();if(3===e.type){this._getNextToken();const t=e;t.isIndentAmbiguous?this._addSyntaxError(g.LocMessage.inconsistentTabs(),t):this._addSyntaxError(g.LocMessage.unexpectedIndent(),e)}const t=this._parseCaseStatement();t?(t.parent=a,a.cases.push(t)):this._consumeTokensUntilType([2,10])&&this._getNextToken();const n=this._peekToken();if(this._consumeTokenIfType(4)){n.matchesIndent||this._addSyntaxError(g.LocMessage.inconsistentIndent(),n),n.isDedentAmbiguous&&this._addSyntaxError(g.LocMessage.inconsistentTabs(),n);break}if(1===this._peekTokenType())break}}else this._addSyntaxError(g.LocMessage.expectedNewline(),r);a.cases.length>0?(0,h.extendRange)(a,a.cases[a.cases.length-1]):this._addSyntaxError(g.LocMessage.zeroCaseStatementsFound(),t)}else this._addSyntaxError(g.LocMessage.expectedColon(),r),this._consumeTokensUntilType([2,10])&&this._getNextToken();this._getLanguageVersion().isLessThan(u.pythonVersion3_10)&&this._addSyntaxError(g.LocMessage.matchIncompatible(),t);for(let e=0;e<a.cases.length-1;e++){const t=a.cases[e];!t.guardExpression&&t.isIrrefutable&&this._addSyntaxError(g.LocMessage.casePatternIsIrrefutable(),t.pattern)}return a}_parseCaseStatement(){const e=this._peekToken();if(!this._consumeTokenIfKeyword(6))return void this._addSyntaxError(g.LocMessage.expectedCase(),e);const t=this._parsePatternSequence();let n,a;if(t.parseError)n=t.parseError;else if(0===t.list.length)this._addSyntaxError(g.LocMessage.expectedPatternExpr(),this._peekToken()),n=h.ErrorNode.create(e,11);else if(1!==t.list.length||t.trailingComma)n=h.PatternSequenceNode.create(t.list[0],t.list);else{const e=t.list[0].orPatterns[0];n=69===e.nodeType&&e.isStar?h.PatternSequenceNode.create(t.list[0],t.list):t.list[0]}if(0!==n.nodeType){const e=new Map,t=new Map;this._reportDuplicatePatternCaptureTargets(n,e,t)}this._consumeTokenIfKeyword(20)&&(a=this._parseTestExpression(!0));const r=this._parseSuite(this._isInFunction);return h.CaseNode.create(e,n,this._isPatternIrrefutable(n),a,r)}_isPatternIrrefutable(e){return 69===e.nodeType||66===e.nodeType&&e.orPatterns.some((e=>this._isPatternIrrefutable(e)))}_reportDuplicatePatternCaptureTargets(e,t,n){const a=e=>{t.has(e.value)||n.has(e.value)?this._addSyntaxError(g.LocMessage.duplicateCapturePatternTarget().format({name:e.value}),e):n.set(e.value,e)};switch(e.nodeType){case 65:e.entries.forEach((e=>{this._reportDuplicatePatternCaptureTargets(e,t,n)}));break;case 68:e.arguments.forEach((e=>{this._reportDuplicatePatternCaptureTargets(e.pattern,t,n)}));break;case 66:{e.target&&a(e.target);const t=e.orPatterns.map((e=>{const t=new Map;return this._reportDuplicatePatternCaptureTargets(e,n,t),t})),r=new Map;t.forEach((e=>{e.forEach((e=>{r.has(e.value)||(r.set(e.value,e),a(e))}))}));break}case 69:e.isWildcard||a(e.target);break;case 70:e.entries.forEach((e=>{72===e.nodeType?a(e.target):(this._reportDuplicatePatternCaptureTargets(e.keyPattern,t,n),this._reportDuplicatePatternCaptureTargets(e.valuePattern,t,n))}))}}_getPatternTargetNames(e,t){switch(e.nodeType){case 65:e.entries.forEach((e=>{this._getPatternTargetNames(e,t)}));break;case 68:e.arguments.forEach((e=>{this._getPatternTargetNames(e.pattern,t)}));break;case 66:e.target&&t.add(e.target.value),e.orPatterns.forEach((e=>{this._getPatternTargetNames(e,t)}));break;case 69:e.isWildcard||t.add(e.target.value);break;case 70:e.entries.forEach((e=>{72===e.nodeType?t.add(e.target.value):(this._getPatternTargetNames(e.keyPattern,t),this._getPatternTargetNames(e.valuePattern,t))}))}}_parsePatternSequence(){const e=this._parseExpressionListGeneric((()=>this._parsePatternAs())),t=e.list.filter((e=>1===e.orPatterns.length&&69===e.orPatterns[0].nodeType&&e.orPatterns[0].isStar));return t.length>1&&this._addSyntaxError(g.LocMessage.duplicateStarPattern(),t[1].orPatterns[0]),e}_parsePatternAs(){const e=[];for(;;){const t=this._parsePatternAtom();if(e.push(t),!this._consumeTokenIfOperator(6))break}let t;if(e.length>1&&e.forEach((e=>{69===e.nodeType&&e.isStar&&this._addSyntaxError(g.LocMessage.starPatternInOrPattern(),e)})),this._consumeTokenIfKeyword(1)){const e=this._getTokenIfIdentifier();e?t=h.NameNode.create(e):this._addSyntaxError(g.LocMessage.expectedNameAfterAs(),this._peekToken())}t&&1===e.length&&69===e[0].nodeType&&e[0].isStar&&this._addSyntaxError(g.LocMessage.starPatternInAsPattern(),e[0]),e.forEach(((t,n)=>{n<e.length-1&&this._isPatternIrrefutable(t)&&this._addSyntaxError(g.LocMessage.orPatternIrrefutable(),t)}));const n=new Set;return e.forEach((e=>{this._getPatternTargetNames(e,n)})),e.forEach((e=>{const t=new Set;if(this._getPatternTargetNames(e,t),t.size<n.size){const a=Array.from(n.keys()).filter((e=>!t.has(e))),r=new p.DiagnosticAddendum;r.addMessage(g.LocAddendum.orPatternMissingName().format({name:a.map((e=>`"${e}"`)).join(", ")})),this._addSyntaxError(g.LocMessage.orPatternMissingName()+r.getString(),e)}})),h.PatternAsNode.create(e,t)}_parsePatternAtom(){const e=this._parsePatternLiteral();if(e)return e;const t=this._parsePatternCaptureOrValue();if(t){const e=this._peekToken();if(0===t.nodeType||!this._consumeTokenIfType(13))return t;const n=this._parseClassPatternArgList(),a=69===t.nodeType?t.target:t.expression,r=h.PatternClassNode.create(a,n);return this._consumeTokenIfType(14)||(this._addSyntaxError(g.LocMessage.expectedCloseParen(),e),this._consumeTokensUntilType([2]),(0,h.extendRange)(r,this._peekToken())),r}const n=this._peekToken();if(26===this._peekOperatorType()){const e=this._getNextToken(),t=this._getTokenIfIdentifier();return t?h.PatternCaptureNode.create(h.NameNode.create(t),e):(this._addSyntaxError(g.LocMessage.expectedIdentifier(),this._peekToken()),h.ErrorNode.create(e,2))}if(13===n.type||15===n.type){const e=this._getNextToken(),t=this._parsePatternSequence();let a;if(t.parseError)a=t.parseError;else if(1!==t.list.length||t.trailingComma||13!==e.type)a=h.PatternSequenceNode.create(e,t.list);else{const r=t.list[0].orPatterns[0];a=69===r.nodeType&&r.isStar?h.PatternSequenceNode.create(e,t.list):t.list[0],(0,h.extendRange)(a,n)}const r=this._peekToken();return this._consumeTokenIfType(13===n.type?14:16)?(0,h.extendRange)(a,r):(this._addSyntaxError(13===n.type?g.LocMessage.expectedCloseParen():g.LocMessage.expectedCloseBracket(),n),this._consumeTokensUntilType([10,13===n.type?14:16])),a}if(17===n.type){const e=this._getNextToken(),t=this._parsePatternMapping(e),a=this._peekToken();return this._consumeTokenIfType(18)?(0,h.extendRange)(t,a):(this._addSyntaxError(g.LocMessage.expectedCloseBrace(),n),this._consumeTokensUntilType([10,18])),t}return this._handleExpressionParseError(11,g.LocMessage.expectedPatternExpr())}_parseClassPatternArgList(){const e=[];let t=!1;for(;;){const n=this._peekTokenType();if(14===n||2===n||1===n)break;const a=this._parseClassPatternArgument();if(a.name?t=!0:t&&!a.name&&this._addSyntaxError(g.LocMessage.positionArgAfterNamedArg(),a),e.push(a),!this._consumeTokenIfType(12))break}return e}_parseClassPatternArgument(){const e=this._peekToken(),t=this._peekToken(1);let n;if((7===e.type||8===e.type)&&9===t.type&&2===t.operatorType){const e=this._getTokenIfIdentifier();void 0!==e&&(n=h.NameNode.create(e),this._getNextToken())}const a=this._parsePatternAs();return h.PatternClassArgumentNode.create(a,n)}_parsePatternLiteral(){const e=this._peekToken(),t=this._peekOperatorType();if(6===e.type||33===t)return this._parsePatternLiteralNumber();if(5===e.type){const e=this._parseAtom();return(0,l.assert)(48===e.nodeType),e.strings.forEach((e=>{27===e.nodeType&&this._addSyntaxError(g.LocMessage.formatStringInPattern(),e)})),h.PatternLiteralNode.create(e)}if(8===e.type){const t=e;if(15===t.keywordType||33===t.keywordType||26===t.keywordType)return h.PatternLiteralNode.create(this._parseAtom())}}_parsePatternLiteralNumber(){const e=this._parseArithmeticExpression();let t,n;return 7===e.nodeType?33!==e.operator&&0!==e.operator||(t=e.leftExpression,n=e.rightExpression):t=e,t&&(55===t.nodeType&&33===t.operator&&(t=t.expression),(40!==t.nodeType||void 0!==n&&t.isImaginary)&&(this._addSyntaxError(g.LocMessage.expectedComplexNumberLiteral(),e),n=void 0)),n&&(55===n.nodeType&&33===n.operator&&(n=n.expression),40===n.nodeType&&n.isImaginary||this._addSyntaxError(g.LocMessage.expectedComplexNumberLiteral(),e)),h.PatternLiteralNode.create(e)}_parsePatternMapping(e){const t=this._parseExpressionListGeneric((()=>this._parsePatternMappingItem()));if(t.list.length>0){const n=t.list.filter((e=>72===e.nodeType));return n.length>1&&this._addSyntaxError(g.LocMessage.duplicateStarStarPattern(),n[1]),h.PatternMappingNode.create(e,t.list)}return t.parseError||h.ErrorNode.create(this._peekToken(),11)}_parsePatternMappingItem(){let e;const t=this._peekToken();if(this._consumeTokenIfOperator(29)){const e=this._getTokenIfIdentifier();if(!e)return this._addSyntaxError(g.LocMessage.expectedIdentifier(),this._peekToken()),h.ErrorNode.create(this._peekToken(),11);const n=h.NameNode.create(e);return"_"===e.value&&this._addSyntaxError(g.LocMessage.starStarWildcardNotAllowed(),n),h.PatternMappingExpandEntryNode.create(t,n)}const n=this._parsePatternLiteral();if(n)e=n;else{const t=this._parsePatternCaptureOrValue();t&&(73===t.nodeType?e=t:(this._addSyntaxError(g.LocMessage.expectedPatternValue(),t),e=h.ErrorNode.create(this._peekToken(),11)))}let a;return e||(this._addSyntaxError(g.LocMessage.expectedPatternExpr(),this._peekToken()),e=h.ErrorNode.create(this._peekToken(),11)),this._consumeTokenIfType(10)?a=this._parsePatternAs():(this._addSyntaxError(g.LocMessage.expectedColon(),this._peekToken()),a=h.ErrorNode.create(this._peekToken(),11)),h.PatternMappingKeyEntryNode.create(e,a)}_parsePatternCaptureOrValue(){const e=this._peekToken();if(7===e.type||8===e.type){let e;for(;;){const t=this._getTokenIfIdentifier();if(!t){this._addSyntaxError(g.LocMessage.expectedIdentifier(),this._peekToken());break}{const n=h.NameNode.create(t);e=e?h.MemberAccessNode.create(e,n):n}if(!this._consumeTokenIfType(20))break}return e?35===e.nodeType?h.PatternValueNode.create(e):h.PatternCaptureNode.create(e):(this._addSyntaxError(g.LocMessage.expectedIdentifier(),this._peekToken()),h.ErrorNode.create(this._peekToken(),11))}}_parseIfStatement(e=20){const t=this._getKeywordToken(e),n=this._parseTestExpression(!0),a=this._parseSuite(this._isInFunction),r=h.IfNode.create(t,n,a);return this._consumeTokenIfKeyword(13)?(r.elseSuite=this._parseSuite(this._isInFunction),r.elseSuite.parent=r,(0,h.extendRange)(r,r.elseSuite)):12===this._peekKeywordType()&&(r.elseSuite=this._parseIfStatement(12),r.elseSuite.parent=r,(0,h.extendRange)(r,r.elseSuite)),r}_parseLoopSuite(){const e=this._isInLoop,t=this._isInFinally;let n;this._isInLoop=!0,this._isInFinally=!1;const a=this._parseSuite(this._isInFunction,!1,(()=>{const e=this._getTypeAnnotationCommentText();e&&(n=e)}));return this._isInLoop=e,this._isInFinally=t,n&&(a.typeComment=n),a}_parseSuite(e=!1,t=!1,n){const a=this._peekToken(),r=h.SuiteNode.create(a);if(!this._consumeTokenIfType(10)&&(this._addSyntaxError(g.LocMessage.expectedColon(),a),this._consumeTokensUntilType([2,10])))if(10===this._peekTokenType())this._getNextToken();else if(3!==this._peekToken(1).type)return this._getNextToken(),r;if(t){if(this._consumeTokenIfType(2)){let e=0;for(;;){const t=this._getNextToken();if(3===t.type&&e++,4===t.type&&(t.isDedentAmbiguous&&this._addSyntaxError(g.LocMessage.inconsistentTabs(),t),e--,0===e))break;if(1===t.type)break}}else this._parseSimpleStatement();return this._tokenIndex>0&&(0,h.extendRange)(r,this._tokenizerOutput.tokens.getItemAt(this._tokenIndex-1)),r}n&&n();const s=this._isInFunction;if(this._isInFunction=e,this._consumeTokenIfType(2)){n&&n();const e=this._peekToken();if(!this._consumeTokenIfType(3))return this._addSyntaxError(g.LocMessage.expectedIndentedBlock(),this._peekToken()),r;const t=e;for(t.isIndentAmbiguous&&this._addSyntaxError(g.LocMessage.inconsistentTabs(),t);;){const e=this._peekToken();if(3===e.type){this._getNextToken();const t=e;t.isIndentAmbiguous?this._addSyntaxError(g.LocMessage.inconsistentTabs(),t):this._addSyntaxError(g.LocMessage.unexpectedIndent(),e)}else if(4===e.type){const n=e;if(n.matchesIndent||this._addSyntaxError(g.LocMessage.inconsistentIndent(),n),n.isDedentAmbiguous&&this._addSyntaxError(g.LocMessage.inconsistentTabs(),n),r.statements.length>0?this._consumeTokenIfType(4):(0,h.extendRange)(r,n),!t||n.indentAmount<t.indentAmount)break;if(n.indentAmount===t.indentAmount){const e=this._peekToken();if(this._consumeTokenIfType(4)){(0,h.extendRange)(r,e);break}}}const n=this._parseStatement();if(n?(n.parent=r,r.statements.push(n)):this._consumeTokensUntilType([2]),1===this._peekTokenType())break}}else{const e=this._parseSimpleStatement();r.statements.push(e),e.parent=r}return r.statements.length>0&&(0,h.extendRange)(r,r.statements[r.statements.length-1]),this._isInFunction=s,r}_parseForStatement(e){const t=this._getKeywordToken(17),n=this._parseExpressionListAsPossibleTuple(2,(()=>g.LocMessage.expectedExpr()),t);let a,r,s;if(this._consumeTokenIfKeyword(22)){if(a=this._parseTestOrStarListAsExpression(!1,!0,2,(()=>g.LocMessage.expectedInExpr())),r=this._parseLoopSuite(),this._getLanguageVersion().isLessThan(u.pythonVersion3_9)&&!this._parseOptions.isStubFile&&52===a.nodeType&&!a.enclosedInParens){let e=!1;a.expressions.forEach((t=>{56!==t.nodeType||e||(this._addSyntaxError(g.LocMessage.unpackOperatorNotAllowed(),t),e=!0)}))}this._consumeTokenIfKeyword(13)&&(s=this._parseSuite(this._isInFunction))}else a=this._handleExpressionParseError(0,g.LocMessage.expectedIn()),r=h.SuiteNode.create(this._peekToken());const i=h.ForNode.create(t,n,a,r);return i.elseSuite=s,s&&((0,h.extendRange)(i,s),s.parent=i),e&&(i.isAsync=!0,i.asyncToken=e,(0,h.extendRange)(i,e)),r.typeComment&&(i.typeComment=r.typeComment),i}_tryParseListComprehension(e,t){const n=this._tryParseCompForStatement();if(!n)return;56===e.nodeType?this._addSyntaxError(g.LocMessage.unpackIllegalInComprehension(),e):16===e.nodeType&&this._addSyntaxError(g.LocMessage.dictExpandIllegalInComprehension(),e);const a=h.ListComprehensionNode.create(e,t),r=[n];for(;;){const e=this._tryParseCompForStatement()||this._tryParseCompIfStatement();if(!e)break;e.parent=a,r.push(e)}return a.forIfNodes=r,r.length>0&&(r.forEach((e=>{e.parent=a})),(0,h.extendRange)(a,r[r.length-1])),a}_tryParseCompForStatement(){const e=this._peekKeywordType();if(3===e){const e=this._peekToken(1);if(8!==e.type||17!==e.keywordType)return}else if(17!==e)return;let t;3===this._peekKeywordType()&&(t=this._getKeywordToken(3));const n=this._getKeywordToken(17),a=this._parseExpressionListAsPossibleTuple(2,(()=>g.LocMessage.expectedExpr()),n);let r;this._consumeTokenIfKeyword(22)?this._disallowAssignmentExpression((()=>{r=this._parseOrTest()})):r=this._handleExpressionParseError(0,g.LocMessage.expectedIn());const s=h.ListComprehensionForNode.create(t||n,a,r);return t&&(s.isAsync=!0,s.asyncToken=t),s}_tryParseCompIfStatement(){if(20!==this._peekKeywordType())return;const e=this._getKeywordToken(20),t=this._tryParseLambdaExpression()||this._parseAssignmentExpression(!0);return h.ListComprehensionIfNode.create(e,t)}_parseWhileStatement(){const e=this._getKeywordToken(36),t=h.WhileNode.create(e,this._parseTestExpression(!0),this._parseLoopSuite());return this._consumeTokenIfKeyword(13)&&(t.elseSuite=this._parseSuite(this._isInFunction),t.elseSuite.parent=t,(0,h.extendRange)(t,t.elseSuite)),t}_parseTryStatement(){const e=this._getKeywordToken(34),t=this._parseSuite(this._isInFunction),n=h.TryNode.create(e,t);let a=!1;for(;;){const e=this._peekToken();if(!this._consumeTokenIfKeyword(14))break;const t=this._peekToken();let r,s,i=!1;if(this._consumeTokenIfOperator(26)&&(this._getLanguageVersion().isLessThan(u.pythonVersion3_11)&&!this._parseOptions.isStubFile&&this._addSyntaxError(g.LocMessage.exceptionGroupIncompatible(),t),i=!0),10!==this._peekTokenType())if(r=this._parseTestExpression(!0),this._consumeTokenIfKeyword(1))s=this._getTokenIfIdentifier(),s||this._addSyntaxError(g.LocMessage.expectedNameAfterAs(),this._peekToken());else{const e=this._peekToken();this._consumeTokenIfType(12)&&(this._addSyntaxError(g.LocMessage.expectedAsAfterException(),e),this._parseTestExpression(!1))}r?a&&this._addSyntaxError(g.LocMessage.namedExceptAfterCatchAll(),r):(a&&this._addSyntaxError(g.LocMessage.duplicateCatchAll(),e),a=!0);const o=this._parseSuite(this._isInFunction),l=h.ExceptNode.create(e,o,i);r&&(l.typeExpression=r,l.typeExpression.parent=l),s&&(l.name=h.NameNode.create(s),l.name.parent=l),n.exceptClauses.push(l),l.parent=n}return n.exceptClauses.length>0&&((0,h.extendRange)(n,n.exceptClauses[n.exceptClauses.length-1]),this._consumeTokenIfKeyword(13)&&(n.elseSuite=this._parseSuite(this._isInFunction),n.elseSuite.parent=n,(0,h.extendRange)(n,n.elseSuite))),this._consumeTokenIfKeyword(16)&&(n.finallySuite=this._parseSuite(this._isInFunction),n.finallySuite.parent=n,(0,h.extendRange)(n,n.finallySuite)),n.finallySuite||0!==n.exceptClauses.length||this._addSyntaxError(g.LocMessage.tryWithoutExcept(),e),n}_parseFunctionDef(e,t){const n=this._getKeywordToken(10),a=this._getTokenIfIdentifier();if(!a)return this._addSyntaxError(g.LocMessage.expectedFunctionName(),n),h.ErrorNode.create(n,10,void 0,t);let r;15===this._peekToken().type&&(r=this._parseTypeParameterList(),!this._parseOptions.isStubFile&&this._getLanguageVersion().isLessThan(u.pythonVersion3_12)&&this._addSyntaxError(g.LocMessage.functionTypeParametersIllegal(),r));const s=this._peekToken();if(!this._consumeTokenIfType(13))return this._addSyntaxError(g.LocMessage.expectedOpenParen(),this._peekToken()),h.ErrorNode.create(a,10,h.NameNode.create(a),t);const i=this._parseVarArgsList(14,!0);let o,l;this._consumeTokenIfType(14)||(this._addSyntaxError(g.LocMessage.expectedCloseParen(),s),this._consumeTokensUntilType([10])),this._consumeTokenIfType(21)&&(o=this._parseTypeAnnotation());const p=this._parseSuite(!0,this._parseOptions.skipFunctionAndClassBody,(()=>{l||(l=this._getTypeAnnotationCommentText())})),c=h.FunctionNode.create(n,h.NameNode.create(a),p,r);return e&&(c.isAsync=!0,(0,h.extendRange)(c,e)),c.parameters=i,i.forEach((e=>{e.parent=c})),t&&(c.decorators=t,t.forEach((e=>{e.parent=c})),t.length>0&&(0,h.extendRange)(c,t[0])),o&&(c.returnTypeAnnotation=o,c.returnTypeAnnotation.parent=c,(0,h.extendRange)(c,o)),l&&this._parseFunctionTypeAnnotationComment(l,c),c}_parseVarArgsList(e,t){const n=new Map,a=[];let r=!1,s=!1,i=!1,o=!1,l=!1,p=!1,c=!1;for(;this._peekTokenType()!==e;){const d=this._parseParameter(t);if(!d){this._consumeTokensUntilType([e]);break}if(d.name){const e=d.name.value;n.has(e)?this._addSyntaxError(g.LocMessage.duplicateParam().format({name:e}),d.name):n.set(e,e)}else 0===d.category&&0===a.length&&this._addSyntaxError(g.LocMessage.positionOnlyFirstParam(),d);0===d.category&&(d.name?(i&&(l=!0),d.defaultValue?r=!0:!r||i||p||s||(this._addSyntaxError(g.LocMessage.nonDefaultAfterDefault(),d),s=!0)):(o?this._addSyntaxError(g.LocMessage.duplicatePositionOnly(),d):i?this._addSyntaxError(g.LocMessage.positionOnlyAfterKeywordOnly(),d):p&&this._addSyntaxError(g.LocMessage.positionOnlyAfterArgs(),d),o=!0)),a.push(d),1===d.category&&(d.name?((i||p)&&this._addSyntaxError(g.LocMessage.duplicateArgsParam(),d),p=!0):(i?this._addSyntaxError(g.LocMessage.duplicateKeywordOnly(),d):p&&this._addSyntaxError(g.LocMessage.keywordOnlyAfterArgs(),d),i=!0)),2===d.category?(c&&this._addSyntaxError(g.LocMessage.duplicateKwargsParam(),d),c=!0,i&&!l&&this._addSyntaxError(g.LocMessage.keywordParameterMissing(),d)):c&&this._addSyntaxError(g.LocMessage.paramAfterKwargsParam(),d);const u=this._consumeTokenIfType(12);if(t&&!d.typeAnnotation){const e=this._parseVariableTypeAnnotationComment();e&&(d.typeAnnotationComment=e,d.typeAnnotationComment.parent=d,(0,h.extendRange)(d,d.typeAnnotationComment))}if(!u)break}if(a.length>0){const e=a[a.length-1];1!==e.category||e.name||this._addSyntaxError(g.LocMessage.expectedNamedParameter(),e)}return a}_parseParameter(e){let t=0,n=0;const a=this._peekToken();this._consumeTokenIfOperator(26)?t=1:this._consumeTokenIfOperator(29)?t=2:this._consumeTokenIfOperator(10)&&(this._getLanguageVersion().isLessThan(u.pythonVersion3_8)&&!this._parseOptions.isStubFile&&this._addSyntaxError(g.LocMessage.positionOnlyIncompatible(),a),n=1);const r=this._getTokenIfIdentifier();if(!r){if(1===t){return h.ParameterNode.create(a,1)}if(1===n){return h.ParameterNode.create(a,0)}if(13===this._peekTokenType()){const e=this._getNextToken();this._consumeTokensUntilType([14])&&this._getNextToken(),this._addSyntaxError(g.LocMessage.sublistParamsIncompatible(),e)}else this._addSyntaxError(g.LocMessage.expectedParamName(),this._peekToken())}let s=0;1===t?s=1:2===t&&(s=2);const i=h.ParameterNode.create(a,s);return r&&(i.name=h.NameNode.create(r),i.name.parent=i,(0,h.extendRange)(i,r)),e&&this._consumeTokenIfType(10)&&(i.typeAnnotation=this._parseTypeAnnotation(1===s),i.typeAnnotation.parent=i,(0,h.extendRange)(i,i.typeAnnotation)),this._consumeTokenIfOperator(2)&&(i.defaultValue=this._parseTestExpression(!1),i.defaultValue.parent=i,(0,h.extendRange)(i,i.defaultValue),t>0&&this._addSyntaxError(g.LocMessage.defaultValueNotAllowed(),i.defaultValue)),i}_parseWithStatement(e){const t=this._getKeywordToken(37);let n=[];const a=this._peekToken();let r,s=!1;if(13===a.type){const e=this._tokenIndex;this._suppressErrors((()=>{for(this._getNextToken();n.push(this._parseWithItem()),this._consumeTokenIfType(12)&&14!==this._peekToken().type;);14===this._peekToken().type&&10===this._peekToken(1).type&&(s=1!==n.length||void 0!==n[0].target),this._tokenIndex=e,n=[]}))}for(s&&(this._consumeTokenIfType(13),this._getLanguageVersion().isLessThan(u.pythonVersion3_9)&&this._addSyntaxError(g.LocMessage.parenthesizedContextManagerIllegal(),a));n.push(this._parseWithItem()),this._consumeTokenIfType(12)&&14!==this._peekToken().type;);s&&(this._consumeTokenIfType(14)||this._addSyntaxError(g.LocMessage.expectedCloseParen(),a));const i=this._parseSuite(this._isInFunction,!1,(()=>{const e=this._getTypeAnnotationCommentText();e&&(r=e)})),o=h.WithNode.create(t,i);return e&&(o.isAsync=!0,o.asyncToken=e,(0,h.extendRange)(o,e)),r&&(o.typeComment=r),o.withItems=n,n.forEach((e=>{e.parent=o})),o}_parseWithItem(){const e=this._parseTestExpression(!0),t=h.WithItemNode.create(e);return this._consumeTokenIfKeyword(1)&&(t.target=this._parseExpression(!1),t.target.parent=t,(0,h.extendRange)(t,t.target)),t}_parseDecorated(){const e=[];for(;22===this._peekOperatorType();)e.push(this._parseDecorator());const t=this._peekToken();if(8===t.type)if(3===t.keywordType){if(this._getNextToken(),10===this._peekKeywordType())return this._parseFunctionDef(t,e);this._addSyntaxError(g.LocMessage.expectedFunctionAfterAsync(),this._peekToken())}else{if(10===t.keywordType)return this._parseFunctionDef(void 0,e);if(7===t.keywordType)return this._parseClassDef(e)}return this._addSyntaxError(g.LocMessage.expectedAfterDecorator(),this._peekToken()),h.ClassNode.createDummyForDecorators(e)}_parseDecorator(){const e=this._getNextToken();(0,l.assert)(22===e.operatorType);const t=this._parseTestExpression(!0);if(this._getLanguageVersion().isLessThan(u.pythonVersion3_9)){let e=!1;(this._isNameOrMemberAccessExpression(t)||9===t.nodeType&&this._isNameOrMemberAccessExpression(t.leftExpression))&&(e=!0),e||this._addSyntaxError(g.LocMessage.expectedDecoratorExpr(),t)}const n=h.DecoratorNode.create(e,t);return this._consumeTokenIfType(2)||(this._addSyntaxError(g.LocMessage.expectedDecoratorNewline(),this._peekToken()),this._consumeTokensUntilType([2])),n}_isNameOrMemberAccessExpression(e){return 38===e.nodeType||35===e.nodeType&&this._isNameOrMemberAccessExpression(e.leftExpression)}_parseClassDef(e){const t=this._getKeywordToken(7);let n,a=this._getTokenIfIdentifier();a||(this._addSyntaxError(g.LocMessage.expectedClassName(),this._peekToken()),a=v.IdentifierToken.create(0,0,"",void 0));15===this._peekToken().type&&(n=this._parseTypeParameterList(),!this._parseOptions.isStubFile&&this._getLanguageVersion().isLessThan(u.pythonVersion3_12)&&this._addSyntaxError(g.LocMessage.classTypeParametersIllegal(),n));let r=[];const s=this._peekToken();this._consumeTokenIfType(13)&&(r=this._parseArgList().args,this._consumeTokenIfType(14)||this._addSyntaxError(g.LocMessage.expectedCloseParen(),s));const i=this._parseSuite(!1,this._parseOptions.skipFunctionAndClassBody),o=h.ClassNode.create(t,h.NameNode.create(a),i,n);return o.arguments=r,r.forEach((e=>{e.parent=o})),e&&(o.decorators=e,e.length>0&&(e.forEach((e=>{e.parent=o})),(0,h.extendRange)(o,e[0]))),o}_parsePassStatement(){return h.PassNode.create(this._getKeywordToken(30))}_parseBreakStatement(){const e=this._getKeywordToken(5);return this._isInLoop||this._addSyntaxError(g.LocMessage.breakOutsideLoop(),e),h.BreakNode.create(e)}_parseContinueStatement(){const e=this._getKeywordToken(8);return this._isInLoop?this._isInFinally&&this._addSyntaxError(g.LocMessage.continueInFinally(),e):this._addSyntaxError(g.LocMessage.continueOutsideLoop(),e),h.ContinueNode.create(e)}_parseReturnStatement(){const e=this._getKeywordToken(32),t=h.ReturnNode.create(e);if(this._isInFunction||this._addSyntaxError(g.LocMessage.returnOutsideFunction(),e),!this._isNextTokenNeverExpression()){const e=this._parseTestOrStarListAsExpression(!0,!0,2,(()=>g.LocMessage.expectedReturnExpr()));this._reportConditionalErrorForStarTupleElement(e),t.returnExpression=e,t.returnExpression.parent=t,(0,h.extendRange)(t,e)}return t}_parseFromStatement(){const e=this._getKeywordToken(18),t=this._parseDottedModuleName(!0),n=h.ImportFromNode.create(e,t),a=0===t.leadingDots&&1===t.nameParts.length&&"__future__"===t.nameParts[0].value,r=this._peekToken();if(this._consumeTokenIfKeyword(21)){(0,h.extendRange)(n,r);const e=this._peekToken();if(this._consumeTokenIfOperator(26))(0,h.extendRange)(n,e),n.isWildcardImport=!0,n.wildcardToken=e,this._containsWildcardImport=!0;else{const e=this._peekToken(),t=this._consumeTokenIfType(13);let r;for(;;){const e=this._getTokenIfIdentifier();if(!e)break;r=void 0;const t=h.ImportFromAsNode.create(h.NameNode.create(e));if(this._consumeTokenIfKeyword(1)){const e=this._getTokenIfIdentifier();e?(t.alias=h.NameNode.create(e),t.alias.parent=t,(0,h.extendRange)(t,e)):this._addSyntaxError(g.LocMessage.expectedImportAlias(),this._peekToken())}n.imports.push(t),t.parent=n,(0,h.extendRange)(n,t),a&&this._futureImports.add(e.value);const s=this._peekToken();if(!this._consumeTokenIfType(12))break;r=s}if(0===n.imports.length&&this._addSyntaxError(g.LocMessage.expectedImportSymbols(),this._peekToken()),t){n.usesParens=!0;const t=this._peekToken();this._consumeTokenIfType(14)?(0,h.extendRange)(n,t):this._addSyntaxError(g.LocMessage.expectedCloseParen(),e)}else r&&this._addSyntaxError(g.LocMessage.trailingCommaInFromImport(),r)}}else this._addSyntaxError(g.LocMessage.expectedImport(),this._peekToken()),t.hasTrailingDot||(n.missingImportKeyword=!0);this._importedModules.push({nameNode:n.module,leadingDots:n.module.leadingDots,nameParts:n.module.nameParts.map((e=>e.value)),importedSymbols:new Set(n.imports.map((e=>e.name.value)))});let s=!1;if(1===n.module.nameParts.length){const e=n.module.nameParts[0].value;"typing"!==e&&"typing_extensions"!==e||(s=!0)}if(s){const e=["Literal","TypeAlias","Annotated"];n.isWildcardImport?e.forEach((e=>{this._typingSymbolAliases.set(e,e)})):n.imports.forEach((t=>{var n;e.some((e=>e===t.name.value))&&this._typingSymbolAliases.set((null===(n=t.alias)||void 0===n?void 0:n.value)||t.name.value,t.name.value)}))}return n}_parseImportStatement(){var e;const t=this._getKeywordToken(21),n=h.ImportNode.create(t);for(;;){const t=this._parseDottedModuleName(),a=h.ImportAsNode.create(t);if(this._consumeTokenIfKeyword(1)){const e=this._getTokenIfIdentifier();e?(a.alias=h.NameNode.create(e),a.alias.parent=a,(0,h.extendRange)(a,a.alias)):this._addSyntaxError(g.LocMessage.expectedImportAlias(),this._peekToken())}a.module.leadingDots>0&&this._addSyntaxError(g.LocMessage.relativeImportNotAllowed(),a.module),n.list.push(a),a.parent=n;const r=a.module.nameParts.map((e=>e.value));if(a.alias||a.module.leadingDots>0||0===a.module.nameParts.length?this._importedModules.push({nameNode:a.module,leadingDots:a.module.leadingDots,nameParts:r,importedSymbols:void 0}):a.module.nameParts.forEach(((e,t)=>{this._importedModules.push({nameNode:a.module,leadingDots:a.module.leadingDots,nameParts:r.slice(0,t+1),importedSymbols:void 0})})),1===t.nameParts.length){const n=t.nameParts[0].value;"typing"!==n&&"typing_extensions"!==n||this._typingImportAliases.push((null===(e=a.alias)||void 0===e?void 0:e.value)||n)}if(!this._consumeTokenIfType(12))break}return n.list.length>0&&(0,h.extendRange)(n,n.list[n.list.length-1]),n}_parseDottedModuleName(e=!1){var t;const n=h.ModuleNameNode.create(this._peekToken());for(;;){const e=null!==(t=this._getTokenIfType(19))&&void 0!==t?t:this._getTokenIfType(20);if(!e)break;19===e.type?n.leadingDots+=3:n.leadingDots++,(0,h.extendRange)(n,e)}for(;;){const t=this._getTokenIfIdentifier();if(!t){(!e||0===n.leadingDots||n.nameParts.length>0)&&(this._addSyntaxError(g.LocMessage.expectedModuleName(),this._peekToken()),n.hasTrailingDot=!0);break}const a=h.NameNode.create(t);n.nameParts.push(a),a.parent=n,(0,h.extendRange)(n,a);const r=this._peekToken();if(!this._consumeTokenIfType(20))break;(0,h.extendRange)(n,r)}return n}_parseGlobalStatement(){const e=this._getKeywordToken(19),t=h.GlobalNode.create(e);return t.nameList=this._parseNameList(),t.nameList.length>0&&(t.nameList.forEach((e=>{e.parent=t})),(0,h.extendRange)(t,t.nameList[t.nameList.length-1])),t}_parseNonlocalStatement(){const e=this._getKeywordToken(27),t=h.NonlocalNode.create(e);return t.nameList=this._parseNameList(),t.nameList.length>0&&(t.nameList.forEach((e=>{e.parent=t})),(0,h.extendRange)(t,t.nameList[t.nameList.length-1])),t}_parseNameList(){const e=[];for(;;){const t=this._getTokenIfIdentifier();if(!t){this._addSyntaxError(g.LocMessage.expectedIdentifier(),this._peekToken());break}if(e.push(h.NameNode.create(t)),!this._consumeTokenIfType(12))break}return e}_parseRaiseStatement(){const e=this._getKeywordToken(31),t=h.RaiseNode.create(e);return this._isNextTokenNeverExpression()||(t.typeExpression=this._parseTestExpression(!0),t.typeExpression.parent=t,(0,h.extendRange)(t,t.typeExpression),this._consumeTokenIfKeyword(18)?(t.valueExpression=this._parseTestExpression(!0),t.valueExpression.parent=t,(0,h.extendRange)(t,t.valueExpression)):this._consumeTokenIfType(12)&&(t.valueExpression=this._parseTestExpression(!0),t.valueExpression.parent=t,(0,h.extendRange)(t,t.valueExpression),this._consumeTokenIfType(12)&&(t.tracebackExpression=this._parseTestExpression(!0),t.tracebackExpression.parent=t,(0,h.extendRange)(t,t.tracebackExpression)))),t}_parseAssertStatement(){const e=this._getKeywordToken(2),t=this._parseTestExpression(!1),n=h.AssertNode.create(e,t);if(this._consumeTokenIfType(12)){const e=this._parseTestExpression(!1);n.exceptionExpression=e,n.exceptionExpression.parent=n,(0,h.extendRange)(n,e)}return n}_parseDelStatement(){const e=this._getKeywordToken(11),t=this._parseExpressionList(!0);t.parseError||0!==t.list.length||this._addSyntaxError(g.LocMessage.expectedDelExpr(),this._peekToken());const n=h.DelNode.create(e);return n.expressions=t.list,n.expressions.length>0&&(n.expressions.forEach((e=>{e.parent=n})),(0,h.extendRange)(n,n.expressions[n.expressions.length-1])),n}_parseYieldExpression(){const e=this._getKeywordToken(38),t=this._peekToken();if(this._consumeTokenIfKeyword(18))return this._getLanguageVersion().isLessThan(u.pythonVersion3_3)&&this._addSyntaxError(g.LocMessage.yieldFromIllegal(),t),h.YieldFromNode.create(e,this._parseTestExpression(!1));let n;return this._isNextTokenNeverExpression()||(n=this._parseTestOrStarListAsExpression(!1,!0,2,(()=>g.LocMessage.expectedYieldExpr())),this._reportConditionalErrorForStarTupleElement(n)),h.YieldNode.create(e,n)}_tryParseYieldExpression(){if(38===this._peekKeywordType())return this._parseYieldExpression()}_parseSimpleStatement(){const e=h.StatementListNode.create(this._peekToken());for(;;){if(0===this._peekTokenType()){const e=this._getNextToken(),t=this._fileContents.substr(e.start,e.length).charCodeAt(0);this._addSyntaxError(g.LocMessage.invalidTokenChars().format({text:`\\u${t.toString(16)}`}),e),this._consumeTokensUntilType([2]);break}const t=this._parseSmallStatement();if(e.statements.push(t),t.parent=e,(0,h.extendRange)(e,t),0===t.nodeType)break;if(!this._consumeTokenIfType(11))break;const n=this._peekTokenType();if(2===n||1===n)break}return this._consumeTokenIfType(2)||this._addSyntaxError(g.LocMessage.expectedNewlineOrSemicolon(),this._peekToken()),e}_parseSmallStatement(){switch(this._peekKeywordType()){case 30:return this._parsePassStatement();case 5:return this._parseBreakStatement();case 8:return this._parseContinueStatement();case 32:return this._parseReturnStatement();case 18:return this._parseFromStatement();case 21:return this._parseImportStatement();case 19:return this._parseGlobalStatement();case 27:return this._parseNonlocalStatement();case 31:return this._parseRaiseStatement();case 2:return this._parseAssertStatement();case 11:return this._parseDelStatement();case 38:return this._parseYieldExpression();case 35:{const e=this._peekToken(1),t=this._peekToken(2);let n=!0;if(7!==e.type&&8!==e.type||(15===t.type||9===t.type&&2===t.operatorType)&&(n=!1),!n)return this._parseTypeAliasStatement();break}}return this._parseExpressionStatement()}_makeExpressionOrTuple(e,t){if(1===e.list.length&&!e.trailingComma)return 56===e.list[0].nodeType&&this._addSyntaxError(g.LocMessage.unpackOperatorNotAllowed(),e.list[0]),e.list[0];const n=e.list.length>0?e.list[0]:this._peekToken(-1),a=h.TupleNode.create(n,t);return a.expressions=e.list,e.list.length>0&&(e.list.forEach((e=>{e.parent=a})),(0,h.extendRange)(a,e.list[e.list.length-1])),a}_parseExpressionListAsPossibleTuple(e,t,n){if(this._isNextTokenNeverExpression())return this._addSyntaxError(t(),n),h.ErrorNode.create(n,e);const a=this._parseExpressionList(!0);return a.parseError?a.parseError:this._makeExpressionOrTuple(a,!1)}_parseTestListAsExpression(e,t){if(this._isNextTokenNeverExpression())return this._handleExpressionParseError(e,t());const n=this._parseTestExpressionList();return n.parseError?n.parseError:this._makeExpressionOrTuple(n,!1)}_parseTestOrStarListAsExpression(e,t,n,a){if(this._isNextTokenNeverExpression())return this._handleExpressionParseError(n,a());const r=this._parseTestOrStarExpressionList(e,t);return r.parseError?r.parseError:this._makeExpressionOrTuple(r,!1)}_parseExpressionList(e){return this._parseExpressionListGeneric((()=>this._parseExpression(e)))}_parseTestExpressionList(){return this._parseExpressionListGeneric((()=>this._parseTestExpression(!1)))}_parseTestOrStarExpressionList(e,t){const n=this._parseExpressionListGeneric((()=>this._parseTestOrStarExpression(e)));if(!t&&!n.parseError){let e=!1;for(const t of n.list)if(56===t.nodeType){if(e){this._addSyntaxError(g.LocMessage.duplicateUnpack(),t);break}e=!0}}return n}_parseExpression(e){const t=this._peekToken();return e&&this._consumeTokenIfOperator(26)?h.UnpackNode.create(t,this._parseExpression(!1)):this._parseBitwiseOrExpression()}_parseTestOrStarExpression(e){return 26===this._peekOperatorType()?this._parseExpression(!0):this._parseTestExpression(e)}_parseTestExpression(e){if(24===this._peekKeywordType())return this._parseLambdaExpression();const t=this._parseAssignmentExpression(!e);if(0===t.nodeType)return t;if(!this._consumeTokenIfKeyword(20))return t;const n=this._parseOrTest();if(0===n.nodeType)return n;if(!this._consumeTokenIfKeyword(13))return h.TernaryNode.create(t,n,this._handleExpressionParseError(1,g.LocMessage.expectedElse()));const a=this._parseTestExpression(!0);return h.TernaryNode.create(t,n,a)}_parseAssignmentExpression(e=!1){const t=this._parseOrTest();if(0===t.nodeType)return t;if(38!==t.nodeType)return t;const n=this._peekToken();if(!this._consumeTokenIfOperator(35))return t;this._assignmentExpressionsAllowed&&!e||this._addSyntaxError(g.LocMessage.walrusNotAllowed(),n),this._getLanguageVersion().isLessThan(u.pythonVersion3_8)&&this._addSyntaxError(g.LocMessage.walrusIllegal(),n);const a=this._parseTestExpression(!1);return h.AssignmentExpressionNode.create(t,a)}_parseOrTest(){let e=this._parseAndTest();if(0===e.nodeType)return e;for(;;){const t=this._peekToken();if(!this._consumeTokenIfKeyword(29))break;const n=this._parseAndTest();e=this._createBinaryOperationNode(e,n,t,37)}return e}_parseAndTest(){let e=this._parseNotTest();if(0===e.nodeType)return e;for(;;){const t=this._peekToken();if(!this._consumeTokenIfKeyword(0))break;const n=this._parseNotTest();e=this._createBinaryOperationNode(e,n,t,36)}return e}_parseNotTest(){const e=this._peekToken();if(this._consumeTokenIfKeyword(28)){const t=this._parseNotTest();return this._createUnaryOperationNode(e,t,38)}return this._parseComparison()}_parseComparison(){let e=this._parseBitwiseOrExpression();if(0===e.nodeType)return e;for(;;){let t;const n=this._peekToken();if(T.Tokenizer.isOperatorComparison(this._peekOperatorType()))t=this._peekOperatorType(),19===t&&(this._addSyntaxError(g.LocMessage.operatorLessOrGreaterDeprecated(),n),t=28),this._getNextToken();else if(this._consumeTokenIfKeyword(22))t=41;else if(this._consumeTokenIfKeyword(23))t=this._consumeTokenIfKeyword(28)?40:39;else if(28===this._peekKeywordType()){const e=this._peekToken(1);8===e.type&&22===e.keywordType&&(this._getNextToken(),this._getNextToken(),t=42)}if(void 0===t)break;const a=this._parseComparison();e=this._createBinaryOperationNode(e,a,n,t)}return e}_parseBitwiseOrExpression(){let e=this._parseBitwiseXorExpression();if(0===e.nodeType)return e;for(;;){const t=this._peekToken();if(!this._consumeTokenIfOperator(6))break;const n=this._parseBitwiseXorExpression();e=this._createBinaryOperationNode(e,n,t,6)}return e}_parseBitwiseXorExpression(){let e=this._parseBitwiseAndExpression();if(0===e.nodeType)return e;for(;;){const t=this._peekToken();if(!this._consumeTokenIfOperator(8))break;const n=this._parseBitwiseAndExpression();e=this._createBinaryOperationNode(e,n,t,8)}return e}_parseBitwiseAndExpression(){let e=this._parseShiftExpression();if(0===e.nodeType)return e;for(;;){const t=this._peekToken();if(!this._consumeTokenIfOperator(3))break;const n=this._parseShiftExpression();e=this._createBinaryOperationNode(e,n,t,3)}return e}_parseShiftExpression(){let e=this._parseArithmeticExpression();if(0===e.nodeType)return e;let t=this._peekToken(),n=this._peekOperatorType();for(;17===n||31===n;){this._getNextToken();const a=this._parseArithmeticExpression();e=this._createBinaryOperationNode(e,a,t,n),t=this._peekToken(),n=this._peekOperatorType()}return e}_parseArithmeticExpression(){let e=this._parseArithmeticTerm();if(0===e.nodeType)return e;let t=this._peekToken(),n=this._peekOperatorType();for(;0===n||33===n;){this._getNextToken();const a=this._parseArithmeticTerm();if(0===a.nodeType)return a;e=this._createBinaryOperationNode(e,a,t,n),t=this._peekToken(),n=this._peekOperatorType()}return e}_parseArithmeticTerm(){let e=this._parseArithmeticFactor();if(0===e.nodeType)return e;let t=this._peekToken(),n=this._peekOperatorType();for(;26===n||22===n||10===n||24===n||13===n;){this._getNextToken();const a=this._parseArithmeticFactor();e=this._createBinaryOperationNode(e,a,t,n),t=this._peekToken(),n=this._peekOperatorType()}return e}_parseArithmeticFactor(){const e=this._peekToken(),t=this._peekOperatorType();if(0===t||33===t||5===t){this._getNextToken();const n=this._parseArithmeticFactor();return this._createUnaryOperationNode(e,n,t)}const n=this._parseAtomExpression();if(0===n.nodeType)return n;const a=this._peekToken();if(this._consumeTokenIfOperator(29)){const e=this._parseArithmeticFactor();return this._createBinaryOperationNode(n,e,a,29)}return n}_isTypingAnnotation(e,t){if(38===e.nodeType){if(this._typingSymbolAliases.get(e.value)===t)return!0}else if(35===e.nodeType&&38===e.leftExpression.nodeType&&e.memberName.value===t){const t=e.leftExpression.value;return this._typingImportAliases.some((e=>e===t))}return!1}_parseAtomExpression(){let e;4===this._peekKeywordType()&&(e=this._getKeywordToken(4),this._getLanguageVersion().isLessThan(u.pythonVersion3_5)&&this._addSyntaxError(g.LocMessage.awaitIllegal(),e));let t=this._parseAtom();if(0===t.nodeType)return t;for(;;){const e=this._peekToken();if(this._consumeTokenIfType(13)){const n=this._isParsingTypeAnnotation;this._isParsingTypeAnnotation=!1;const a=this._parseArgList(),r=h.CallNode.create(t,a.args,a.trailingComma);(a.args.length>1||a.trailingComma)&&a.args.forEach((e=>{32===e.valueExpression.nodeType&&(e.valueExpression.isParenthesized||this._addSyntaxError(g.LocMessage.generatorNotParenthesized(),e.valueExpression))}));const s=this._peekToken();let i=!1;if(this._consumeTokenIfType(14)?((0,h.extendRange)(r,s),i=!0):(this._addSyntaxError(g.LocMessage.expectedCloseParen(),e),this._consumeTokensUntilType([2]),(0,h.extendRange)(r,this._peekToken())),this._isParsingTypeAnnotation=n,t=r,void 0!==t.maxChildDepth&&t.maxChildDepth>=_&&(t=h.ErrorNode.create(t,14),this._addSyntaxError(g.LocMessage.maxParseDepthExceeded(),t)),!i)break}else if(this._consumeTokenIfType(15)){const n=this._isParsingIndexTrailer,a=this._isParsingTypeAnnotation;(this._isTypingAnnotation(t,"Literal")||this._isTypingAnnotation(t,"Annotated"))&&(this._isParsingTypeAnnotation=!1),this._isParsingIndexTrailer=!0;const r=this._parseSubscriptList();this._isParsingTypeAnnotation=a,this._isParsingIndexTrailer=n;const s=this._peekToken(),i=h.IndexNode.create(t,r.list,r.trailingComma,s);(0,h.extendRange)(i,i),this._consumeTokenIfType(16)||this._handleExpressionParseError(6,g.LocMessage.expectedCloseBracket(),e,i),t=i,void 0!==t.maxChildDepth&&t.maxChildDepth>=_&&(t=h.ErrorNode.create(t,14),this._addSyntaxError(g.LocMessage.maxParseDepthExceeded(),t))}else{if(!this._consumeTokenIfType(20))break;{const n=this._getTokenIfIdentifier();if(!n)return this._handleExpressionParseError(7,g.LocMessage.expectedMemberName(),e,t,[8]);t=h.MemberAccessNode.create(t,h.NameNode.create(n)),void 0!==t.maxChildDepth&&t.maxChildDepth>=_&&(t=h.ErrorNode.create(t,14),this._addSyntaxError(g.LocMessage.maxParseDepthExceeded(),t))}}}return e?h.AwaitNode.create(e,t):t}_parseSubscriptList(){const e=[];let t=!1,n=!1;for(;;){const a=this._peekToken();if(10!==a.type&&this._isNextTokenNeverExpression())break;let r=0;this._consumeTokenIfOperator(26)?r=1:this._consumeTokenIfOperator(29)&&(r=2);const s=this._tokenIndex;let i,o=this._parsePossibleSlice();if(0===r)if(this._consumeTokenIfOperator(2)){const e=o;o=this._parsePossibleSlice(),38===e.nodeType?i=e.token:this._addSyntaxError(g.LocMessage.expectedParamName(),e)}else 38===o.nodeType&&35===this._peekOperatorType()&&(this._tokenIndex=s,o=this._parseTestExpression(!0),!this._parseOptions.isStubFile&&this._getLanguageVersion().isLessThan(u.pythonVersion3_10)&&this._addSyntaxError(g.LocMessage.assignmentExprInSubscript(),o));const l=h.ArgumentNode.create(a,o,r);if(i&&(l.name=h.NameNode.create(i),l.name.parent=l),l.name?t=!0:t&&0===l.argumentCategory&&this._addSyntaxError(g.LocMessage.positionArgAfterNamedArg(),l),e.push(l),l.name&&this._addSyntaxError(g.LocMessage.keywordSubscriptIllegal(),l.name),0!==r){const e=this._parseOptions.isStubFile||this._isParsingQuotedText||this._getLanguageVersion().isGreaterOrEqualTo(u.pythonVersion3_11);1!==r||e||this._addSyntaxError(g.LocMessage.unpackedSubscriptIllegal(),l),2===r&&this._addSyntaxError(g.LocMessage.unpackedDictSubscriptIllegal(),l)}if(!this._consumeTokenIfType(12)){n=!1;break}n=!0}if(0===e.length){const t=this._handleExpressionParseError(3,g.LocMessage.expectedSliceIndex(),void 0,void 0,[16]);e.push(h.ArgumentNode.create(this._peekToken(),t,0))}return{list:e,trailingComma:n}}_parsePossibleSlice(){const e=this._peekToken(),t=[void 0,void 0,void 0];let n=0,a=!1;for(;;){const e=this._peekTokenType();if(16===e||12===e)break;if(10!==e){const e=this._parseOptions.isStubFile||this._getLanguageVersion().isGreaterOrEqualTo(u.pythonVersion3_10);t[n]=this._parseTestExpression(e)}if(n++,n>=3||!this._consumeTokenIfType(10))break;a=!0}if(!a)return t[0]?t[0]:h.ErrorNode.create(this._peekToken(),3);const r=h.SliceNode.create(e);r.startValue=t[0],r.startValue&&(r.startValue.parent=r),r.endValue=t[1],r.endValue&&(r.endValue.parent=r),r.stepValue=t[2],r.stepValue&&(r.stepValue.parent=r);const s=t[2]||t[1]||t[0];return s&&(0,h.extendRange)(r,s),r}_parseArgList(){const e=[];let t=!1,n=!1;for(;;){const a=this._peekTokenType();if(14===a||2===a||1===a)break;n=!1;const r=this._parseArgument();if(r.name?t=!0:t&&0===r.argumentCategory&&this._addSyntaxError(g.LocMessage.positionArgAfterNamedArg(),r),e.push(r),!this._consumeTokenIfType(12))break;n=!0}return{args:e,trailingComma:n}}_parseArgument(){const e=this._peekToken();let t=0;this._consumeTokenIfOperator(26)?t=1:this._consumeTokenIfOperator(29)&&(t=2);let n,a=this._parseTestExpression(!0);if(0===t)if(this._consumeTokenIfOperator(2)){const e=a;a=this._parseTestExpression(!1),38===e.nodeType?n=e.token:this._addSyntaxError(g.LocMessage.expectedParamName(),e)}else{const e=this._tryParseListComprehension(a,!0);e&&(a=e)}const r=h.ArgumentNode.create(e,a,t);return n&&(r.name=h.NameNode.create(n),r.name.parent=r),r}_parseAtom(){const e=this._peekToken();if(19===e.type)return h.EllipsisNode.create(this._getNextToken());if(6===e.type)return h.NumberNode.create(this._getNextToken());if(7===e.type)return h.NameNode.create(this._getNextToken());if(5===e.type||24===e.type)return this._parseStringList();if(22===e.type){this._getNextToken(),this._addSyntaxError(g.LocMessage.backticksIllegal(),e);const t=this._parseTestListAsExpression(2,(()=>g.LocMessage.expectedExpr()));return this._consumeTokenIfType(22),t}if(13===e.type){const e=this._parseTupleAtom();return 55!==e.nodeType&&6!==e.nodeType&&7!==e.nodeType||(e.parenthesized=!0),48===e.nodeType&&(e.isParenthesized=!0),32===e.nodeType&&(e.isParenthesized=!0),e}if(15===e.type)return this._parseListAtom();if(17===e.type)return this._parseDictionaryOrSetAtom();if(8===e.type){const t=e;if(15===t.keywordType||33===t.keywordType||9===t.keywordType||26===t.keywordType)return h.ConstantNode.create(this._getNextToken());const n=this._getTokenIfIdentifier();if(n)return h.NameNode.create(n)}return this._handleExpressionParseError(2,g.LocMessage.expectedExpr())}_handleExpressionParseError(e,t,n,a,r){var s;this._addSyntaxError(t,null!=n?n:this._peekToken());const i=[2];r&&(0,o.appendArray)(i,r);const l=this._peekToken(),p=i.some((e=>l.type===e))?null!==(s=null!=n?n:a)&&void 0!==s?s:m.TextRange.create(l.start,0):l,c=h.ErrorNode.create(p,e,a);return this._consumeTokensUntilType(i),c}_parseLambdaExpression(e=!0){const t=this._getKeywordToken(24),n=this._parseVarArgsList(10,!1);let a;this._consumeTokenIfType(10)||this._addSyntaxError(g.LocMessage.expectedColon(),this._peekToken()),a=e?this._parseTestExpression(!1):this._tryParseLambdaExpression(!1)||this._parseOrTest();const r=h.LambdaNode.create(t,a);return r.parameters=n,n.forEach((e=>{e.parent=r})),r}_tryParseLambdaExpression(e=!0){if(24===this._peekKeywordType())return this._parseLambdaExpression(e)}_parseTupleAtom(){var e;const t=this._getNextToken();(0,l.assert)(13===t.type);const n=this._tryParseYieldExpression();if(n)return 14!==this._peekTokenType()?this._handleExpressionParseError(8,g.LocMessage.expectedCloseParen(),t,n):((0,h.extendRange)(n,this._getNextToken()),n);const a=this._parseTestListWithComprehension(!0),r=this._makeExpressionOrTuple(a,!0);return(0,h.extendRange)(r,t),14!==this._peekTokenType()?this._handleExpressionParseError(8,g.LocMessage.expectedCloseParen(),t,null!==(e=a.parseError)&&void 0!==e?e:r):((0,h.extendRange)(r,this._getNextToken()),r)}_parseListAtom(){var e;const t=this._getNextToken();(0,l.assert)(15===t.type);const n=this._parseTestListWithComprehension(!1),a=this._peekToken();return this._consumeTokenIfType(16)?r():this._handleExpressionParseError(9,g.LocMessage.expectedCloseBracket(),t,null!==(e=n.parseError)&&void 0!==e?e:r());function r(){const e=h.ListNode.create(t);return a&&(0,h.extendRange)(e,a),n.list.length>0&&(n.list.forEach((t=>{t.parent=e})),(0,h.extendRange)(e,n.list[n.list.length-1])),e.entries=n.list,e}}_parseTestListWithComprehension(e){let t=!1;return this._parseExpressionListGeneric((()=>{let n=this._parseTestOrStarExpression(!0);const a=this._tryParseListComprehension(n,e);return a&&(n=a,t=!0),n}),(()=>this._isNextTokenNeverExpression()),(()=>t))}_parseDictionaryOrSetAtom(){const e=this._getNextToken();(0,l.assert)(17===e.type);const t=[],n=[];let a,r=!1,s=!1,i=!1,o=!0;for(;18!==this._peekTokenType();){let e,p,c;a=void 0;const d=this._peekToken();if(this._consumeTokenIfOperator(29)?e=this._parseExpression(!1):(p=this._parseTestOrStarExpression(!1),this._consumeTokenIfType(10)&&(c=this._parseTestExpression(!1))),p&&c)if(56===p.nodeType&&this._addSyntaxError(g.LocMessage.unpackInDict(),p),s)this._addSyntaxError(g.LocMessage.keyValueInSet(),c);else{const e=h.DictionaryKeyEntryNode.create(p,c);let n=e;const a=this._tryParseListComprehension(e,!1);a&&(n=a,i=!0,o||this._addSyntaxError(g.LocMessage.comprehensionInDict(),n)),t.push(n),r=!0}else if(e)if(s)this._addSyntaxError(g.LocMessage.unpackInSet(),e);else{const n=h.DictionaryExpandEntryNode.create(e);(0,h.extendRange)(n,d);let a=n;const s=this._tryParseListComprehension(n,!1);s&&(a=s,i=!0,o||this._addSyntaxError(g.LocMessage.comprehensionInDict(),e)),t.push(a),r=!0}else if((0,l.assert)(void 0!==p),p)if(r){const e=h.ErrorNode.create(this._peekToken(),13),n=h.DictionaryKeyEntryNode.create(p,e);t.push(n),this._addSyntaxError(g.LocMessage.dictKeyValuePairs(),p)}else{const e=this._tryParseListComprehension(p,!1);e&&(p=e,i=!0,o||this._addSyntaxError(g.LocMessage.comprehensionInSet(),p)),n.push(p),s=!0}if(i)break;if(12!==this._peekTokenType())break;a=this._getNextToken(),o=!1}let p=this._peekToken();if(this._consumeTokenIfType(18)||(this._addSyntaxError(g.LocMessage.expectedCloseBrace(),e),p=void 0),s){const t=h.SetNode.create(e);return p&&(0,h.extendRange)(t,p),n.length>0&&(0,h.extendRange)(t,n[n.length-1]),n.forEach((e=>{e.parent=t})),t.entries=n,t}const c=h.DictionaryNode.create(e);return a&&(c.trailingCommaToken=a,(0,h.extendRange)(c,a)),p&&(0,h.extendRange)(c,p),t.length>0&&(t.forEach((e=>{e.parent=c})),(0,h.extendRange)(c,t[t.length-1])),c.entries=t,c}_parseExpressionListGeneric(e,t=(()=>this._isNextTokenNeverExpression()),n=(()=>!1)){let a=!1;const r=[];let s;for(;!t();){const t=e();if(0===t.nodeType){s=t;break}if(r.push(t),n())break;if(!this._consumeTokenIfType(12)){a=!1;break}a=!0}return{trailingComma:a,list:r,parseError:s}}_parseExpressionStatement(){var e,t;let n,a=this._parseTestOrStarListAsExpression(!1,!1,2,(()=>g.LocMessage.expectedExpr()));if(0===a.nodeType)return a;if(this._consumeTokenIfType(10)){if(n=this._parseTypeAnnotation(),a=h.TypeAnnotationNode.create(a,n),!this._parseOptions.isStubFile&&this._getLanguageVersion().isLessThan(u.pythonVersion3_6)&&this._addSyntaxError(g.LocMessage.varAnnotationIllegal(),n),!this._consumeTokenIfOperator(2))return a;const t=this._isTypingAnnotation(n,"TypeAlias"),r=this._isParsingTypeAnnotation;t&&(this._isParsingTypeAnnotation=!0);const s=null!==(e=this._tryParseYieldExpression())&&void 0!==e?e:this._parseTestOrStarListAsExpression(!1,!0,2,(()=>g.LocMessage.expectedAssignRightHandExpr()));return this._isParsingTypeAnnotation=r,h.AssignmentNode.create(a,s)}if(this._consumeTokenIfOperator(2))return this._parseChainAssignments(a);if(T.Tokenizer.isOperatorAssignment(this._peekOperatorType())){const e=this._getNextToken(),n=null!==(t=this._tryParseYieldExpression())&&void 0!==t?t:this._parseTestListAsExpression(2,(()=>g.LocMessage.expectedBinaryRightHandExpr())),r=Object.assign({},a);return r.id=(0,h.getNextNodeId)(),h.AugmentedAssignmentNode.create(a,n,e.operatorType,r)}return a}_parseChainAssignments(e){var t;const n=[e];let a;for(;a=null!==(t=this._tryParseYieldExpression())&&void 0!==t?t:this._parseTestOrStarListAsExpression(!1,!0,2,(()=>g.LocMessage.expectedAssignRightHandExpr())),0!==a.nodeType&&this._consumeTokenIfOperator(2);)n.push(a);let r=h.AssignmentNode.create(n[0],a);const s=this._parseVariableTypeAnnotationComment();return s&&(n.length>1?r.chainedTypeAnnotationComment=s:(r.typeAnnotationComment=s,r.typeAnnotationComment.parent=r,(0,h.extendRange)(r,r.typeAnnotationComment))),n.forEach(((e,t)=>{t>0&&(r=h.AssignmentNode.create(e,r))})),r}_parseFunctionTypeAnnotation(){const e=this._peekToken();if(!this._consumeTokenIfType(13))return void this._addSyntaxError(g.LocMessage.expectedOpenParen(),this._peekToken());let t=[];for(;;){const e=this._peekTokenType();if(14===e||2===e||1===e)break;this._consumeTokenIfOperator(26)||this._consumeTokenIfOperator(29);const n=this._parseTypeAnnotation();if(t.push(n),!this._consumeTokenIfType(12))break}if(this._consumeTokenIfType(14)||(this._addSyntaxError(g.LocMessage.expectedCloseParen(),e),this._consumeTokensUntilType([10])),!this._consumeTokenIfType(21))return void this._addSyntaxError(g.LocMessage.expectedArrow(),this._peekToken());const n=this._parseTypeAnnotation();let a=!1;return 1===t.length&&18===t[0].nodeType&&(t=[],a=!0),h.FunctionAnnotationNode.create(e,a,t,n)}_parseTypeAnnotation(e=!1){const t=this._isParsingTypeAnnotation;this._isParsingTypeAnnotation=!0;const n=this._peekToken(),a=this._consumeTokenIfOperator(26);a&&e&&!this._parseOptions.isStubFile&&!this._isParsingQuotedText&&this._getLanguageVersion().isLessThan(u.pythonVersion3_11)&&this._addSyntaxError(g.LocMessage.unpackedSubscriptIllegal(),n);let r=this._parseTestExpression(!1);return a&&(r=h.UnpackNode.create(n,r)),this._isParsingTypeAnnotation=t,r}_reportStringTokenErrors(e,t){65536&e.flags&&this._addSyntaxError(g.LocMessage.stringUnterminated(),e),(null==t?void 0:t.nonAsciiInBytes)&&this._addSyntaxError(g.LocMessage.stringNonAsciiBytes(),e),64&e.flags&&(this._getLanguageVersion().isLessThan(u.pythonVersion3_6)&&this._addSyntaxError(g.LocMessage.formatStringIllegal(),e),32&e.flags&&this._addSyntaxError(g.LocMessage.formatStringBytes(),e),16&e.flags&&this._addSyntaxError(g.LocMessage.formatStringUnicode(),e))}_makeStringNode(e){const t=f.getUnescapedString(e);return this._reportStringTokenErrors(e,t),h.StringNode.create(e,t.value)}_getTypeAnnotationCommentText(){if(0===this._tokenIndex)return;const e=this._tokenizerOutput.tokens.getItemAt(this._tokenIndex-1),t=this._tokenizerOutput.tokens.getItemAt(this._tokenIndex);if(e.start+e.length===t.start)return;const n=this._fileContents.slice(e.start+e.length,t.start).match(/^(\s*#\s*type:\s*)([^\r\n]*)/);if(!n)return;const a=n[2];if(a.trim().match(/^ignore(\s|\[|$)/))return;const r=e.start+e.length+n[1].length;return v.StringToken.create(r,a.length,0,a,0,void 0)}_parseVariableTypeAnnotationComment(){const e=this._getTypeAnnotationCommentText();if(!e)return;const t=this._makeStringNode(e),n=h.StringListNode.create([t]),a=(new C).parseTextExpression(this._fileContents,e.start,e.length,this._parseOptions,1,void 0,this._typingSymbolAliases);return a.diagnostics.forEach((e=>{this._addSyntaxError(e.message,n)})),a.parseTree?((0,l.assert)(62!==a.parseTree.nodeType),a.parseTree):void 0}_parseFunctionTypeAnnotationComment(e,t){const n=this._makeStringNode(e),a=h.StringListNode.create([n]),r=(new C).parseTextExpression(this._fileContents,e.start,e.length,this._parseOptions,2,void 0,this._typingSymbolAliases);if(r.diagnostics.forEach((e=>{this._addSyntaxError(e.message,a)})),!r.parseTree||62!==r.parseTree.nodeType)return;const s=r.parseTree;t.functionAnnotationComment=s,s.parent=t,(0,h.extendRange)(t,s)}_parseFStringReplacementField(e,t,n,a=0){var r;let s=this._getNextToken();(0,l.assert)(17===s.type);const i=null!==(r=this._tryParseYieldExpression())&&void 0!==r?r:this._parseTestOrStarListAsExpression(!0,!0,2,(()=>g.LocMessage.expectedExpr()));return e.push(i),0!==i.nodeType&&(s=this._peekToken(),9===s.type&&2===s.operatorType&&(this._parseOptions.pythonVersion.isLessThan(u.pythonVersion3_8)&&this._addSyntaxError(g.LocMessage.formatStringDebuggingIllegal(),s),this._getNextToken(),s=this._peekToken()),23===s.type&&(this._getNextToken(),s=this._peekToken(),7!==s.type?this._addSyntaxError(g.LocMessage.formatStringExpectedConversion(),s):(this._getNextToken(),s=this._peekToken())),10===s.type&&(this._getNextToken(),this._parseFStringFormatString(e,t,n,a),s=this._peekToken()),18!==s.type?(this._addSyntaxError(g.LocMessage.formatStringUnterminated(),s),!1):(this._getNextToken(),!0))}_parseFStringFormatString(e,t,n,a){for(;;){const r=this._peekToken();if(18===r.type||26===r.type)break;if(25!==r.type){if(17!==r.type)break;2===a&&this._addSyntaxError(g.LocMessage.formatStringNestedFormatSpecifier(),r),this._parseFStringReplacementField(e,t,n,a+1)}else this._getNextToken()}}_parseFormatString(e){const t=[],n=[],a=[];let r;for(;;){const s=this._peekToken();if(26===s.type){r=s,0!=(65536&r.flags)&&this._addSyntaxError(g.LocMessage.stringUnterminated(),e),this._getNextToken();break}if(25!==s.type){if(17!==s.type){this._consumeTokensUntilType([26])&&this._getNextToken(),this._addSyntaxError(18===s.type?g.LocMessage.formatStringBrace():g.LocMessage.stringUnterminated(),s);break}if(!this._parseFStringReplacementField(n,t,a)){this._consumeTokensUntilType([26,2])&&26===this._peekToken().type&&this._getNextToken();break}}else t.push(s),this._getNextToken()}return this._reportStringTokenErrors(e),h.FormatStringNode.create(e,r,t,n,a)}_createBinaryOperationNode(e,t,n,a){return void 0!==e.maxChildDepth&&e.maxChildDepth>=_&&(e=h.ErrorNode.create(e,14),this._addSyntaxError(g.LocMessage.maxParseDepthExceeded(),e)),void 0!==t.maxChildDepth&&t.maxChildDepth>=_&&(t=h.ErrorNode.create(t,14),this._addSyntaxError(g.LocMessage.maxParseDepthExceeded(),t)),h.BinaryOperationNode.create(e,t,n,a)}_createUnaryOperationNode(e,t,n){return void 0!==t.maxChildDepth&&t.maxChildDepth>=_&&(t=h.ErrorNode.create(t,14),this._addSyntaxError(g.LocMessage.maxParseDepthExceeded(),t)),h.UnaryOperationNode.create(e,t,n)}_parseStringList(){const e=[];for(;;){const t=this._peekToken();if(5===t.type)e.push(this._makeStringNode(this._getNextToken()));else{if(24!==t.type)break;e.push(this._parseFormatString(this._getNextToken()))}}const t=h.StringListNode.create(e);if(this._isParsingTypeAnnotation)if(t.strings.length>1)this._isParsingQuotedText&&this._addSyntaxError(g.LocMessage.annotationSpansStrings(),t);else if(27===t.strings[0].nodeType)this._isParsingQuotedText&&this._addSyntaxError(g.LocMessage.annotationFormatString(),t);else{const e=t.strings[0].token,n=f.getUnescapedString(t.strings[0].token).value,a=e.start,r=e.prefixLength+e.quoteMarkLength;if(n.length!==e.length-r-e.quoteMarkLength)this._isParsingQuotedText&&this._addSyntaxError(g.LocMessage.annotationStringEscape(),t);else if(0==(104&e.flags)){const e=(new C).parseTextExpression(this._fileContents,a+r,n.length,this._parseOptions,1,0!=(4&t.strings[0].token.flags)?1:0,this._typingSymbolAliases);(0===e.diagnostics.length||this._parseOptions.reportErrorsForParsedStringContents)&&(e.diagnostics.forEach((e=>{this._addSyntaxError(e.message,t)})),e.parseTree&&((0,l.assert)(62!==e.parseTree.nodeType),t.typeAnnotation=e.parseTree,t.typeAnnotation.parent=t))}}return t}_reportConditionalErrorForStarTupleElement(e){if(52===e.nodeType&&!e.enclosedInParens&&!this._parseOptions.pythonVersion.isGreaterOrEqualTo(u.pythonVersion3_8))for(const t of e.expressions)if(56===t.nodeType)return void this._addSyntaxError(g.LocMessage.unpackTuplesIllegal(),t)}_isNextTokenNeverExpression(){switch(this._peekToken().type){case 8:switch(this._peekKeywordType()){case 17:case 22:case 20:return!0}break;case 9:switch(this._peekOperatorType()){case 1:case 34:case 27:case 11:case 25:case 4:case 7:case 9:case 18:case 32:case 30:case 14:case 2:return!0}break;case 3:case 4:case 2:case 1:case 11:case 14:case 16:case 18:case 12:case 10:case 23:case 25:case 26:return!0}return!1}_disallowAssignmentExpression(e){const t=this._assignmentExpressionsAllowed;this._assignmentExpressionsAllowed=!1,e(),this._assignmentExpressionsAllowed=t}_getNextToken(){const e=this._tokenizerOutput.tokens.getItemAt(this._tokenIndex);return this._atEof()||this._tokenIndex++,e}_atEof(){return this._tokenIndex>=this._tokenizerOutput.tokens.count-1}_peekToken(e=0){return this._tokenIndex+e<0?this._tokenizerOutput.tokens.getItemAt(0):this._tokenIndex+e>=this._tokenizerOutput.tokens.count?this._tokenizerOutput.tokens.getItemAt(this._tokenizerOutput.tokens.count-1):this._tokenizerOutput.tokens.getItemAt(this._tokenIndex+e)}_peekTokenType(){return this._peekToken().type}_peekKeywordType(){const e=this._peekToken();if(8===e.type)return e.keywordType}_peekOperatorType(){const e=this._peekToken();if(9===e.type)return e.operatorType}_getTokenIfIdentifier(){const e=this._peekToken();if(7===e.type)return this._getNextToken();if(0===e.type)return this._getNextToken(),this._addSyntaxError(g.LocMessage.invalidIdentifierChar(),e),v.IdentifierToken.create(e.start,e.length,"",e.comments);if(8===e.type){const t=this._peekKeywordType();if(v.softKeywords.find((e=>e===t))){const t=this._fileContents.substr(e.start,e.length);return this._getNextToken(),v.IdentifierToken.create(e.start,e.length,t,e.comments)}}}_consumeTokensUntilType(e){for(;;){const t=this._peekToken();if(e.some((e=>e===t.type)))return!0;if(1===t.type)return!1;this._getNextToken()}}_getTokenIfType(e){if(this._peekTokenType()===e)return this._getNextToken()}_consumeTokenIfType(e){return!!this._getTokenIfType(e)}_consumeTokenIfKeyword(e){return this._peekKeywordType()===e&&(this._getNextToken(),!0)}_consumeTokenIfOperator(e){return this._peekOperatorType()===e&&(this._getNextToken(),!0)}_getKeywordToken(e){const t=this._getNextToken();return(0,l.assert)(8===t.type),(0,l.assert)(t.keywordType===e),t}_getLanguageVersion(){return this._parseOptions.pythonVersion}_suppressErrors(e){const t=this._areErrorsSuppressed;try{this._areErrorsSuppressed=!0,e()}finally{this._areErrorsSuppressed=t}}_addSyntaxError(e,t){(0,l.assert)(void 0!==t),this._areErrorsSuppressed||this._diagSink.addError(e,(0,d.convertOffsetsToRange)(t.start,t.start+t.length,this._tokenizerOutput.lines))}}t.Parser=C},70736:(e,t)=>{function n(e,t){const n=e.valueParts.join(""),a=t!==n?n:t;return{...e,value:a}}function a(e){return e>=48&&e<=57||(e>=97&&e<=122||e>=65&&e<=90)}function r(e){return e>=48&&e<=55}function s(e){return e>=48&&e<=57||(e>=97&&e<=102||e>=65&&e<=70)}function i(e){return e>=48&&e<=57?e-48:e>=97&&e<=102?e-97+10:e>=65&&e<=70?e-65+10:0}Object.defineProperty(t,"__esModule",{value:!0}),t.getUnescapedString=void 0,t.getUnescapedString=function(e){const t=e.escapedValue,o=0!=(8&e.flags);if(o)return{value:t,unescapeErrors:[],nonAsciiInBytes:!1};const l=[];for(let e=0;e<t.length;e++)l.push(t.charCodeAt(e));const p=0!=(32&e.flags);if(!l.some((e=>13===e||10===e||92===e)))return{value:t,unescapeErrors:[],nonAsciiInBytes:p&&l.some((e=>e>=128))};let c=0;const d={valueParts:[],unescapeErrors:[],nonAsciiInBytes:!1},u=()=>{o||d.unescapeErrors.push({offset:c-1,length:2,errorType:0})},m=(e=0)=>c+e>=l.length?3:l[c+e],y=e=>{let t=!1,n=0,a="";for(let a=0;a<e;a++){const e=m(1+a);if(!s(e)){t=!0;break}n=16*n+i(e)}return t?(u(),a="\\"+String.fromCharCode(m()),c++):(a=String.fromCharCode(n),c+=1+e),a},g=e=>{const t=String.fromCharCode(e);d.valueParts.push(t)};for(;;){let e=m();if(3===e)return n(d,t);if(92===e){if(c++,o){g(e);continue}e=m();let t="";if(13===e||10===e)13===e&&10===m(1)&&(o&&(t+=String.fromCharCode(e)),c++,e=m()),o&&(t="\\"+t+String.fromCharCode(e)),c++;else if(o)t="\\"+String.fromCharCode(e),c++;else switch(e){case 92:case 39:case 34:t=String.fromCharCode(e),c++;break;case 97:t="",c++;break;case 98:t="\b",c++;break;case 102:t="\f",c++;break;case 110:t="\n",c++;break;case 114:t="\r",c++;break;case 116:t="\t",c++;break;case 118:t="\v",c++;break;case 120:t=y(2);break;case 78:{let n=!1,r=1;if(123!==m(r))n=!0;else for(r++;;){const e=m(r);if(125===e)break;if(!a(e)&&45!==e&&32!==(h=e)&&9!==h){n=!0;break}r++}n?(u(),t="\\"+String.fromCharCode(e),c++):(t="-",c+=1+r);break}case 117:t=y(4);break;case 85:t=y(8);break;default:if(r(e)){let n=e-48;c++,e=m(),r(e)&&(n=8*n+e-48,c++,e=m(),r(e)&&(n=8*n+e-48,c++)),t=String.fromCharCode(n)}else t="\\",u()}d.valueParts.push(t)}else 10===e||13===e?(13===e&&10===m(1)&&(g(e),c++,e=m()),g(e),c++):(p&&e>=128&&(d.nonAsciiInBytes=!0),g(e),c++)}var h}},71424:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Tokenizer=void 0;const a=n(28340),r=n(41500),s=n(48256),i=n(34296),o=n(70184),l=n(2572),p=new Map([["and",0],["as",1],["assert",2],["async",3],["await",4],["break",5],["case",6],["class",7],["continue",8],["__debug__",9],["def",10],["del",11],["elif",12],["else",13],["except",14],["finally",16],["for",17],["from",18],["global",19],["if",20],["import",21],["in",22],["is",23],["lambda",24],["match",25],["nonlocal",27],["not",28],["or",29],["pass",30],["raise",31],["return",32],["try",34],["type",35],["while",36],["with",37],["yield",38],["False",15],["None",26],["True",33]]),c=new Set(["match","case","type"]),d={0:3,1:4,2:4,3:2,4:4,5:1,6:2,7:4,8:2,9:4,10:2,11:4,12:10,13:2,14:4,15:10,16:10,17:2,18:4,19:26,20:10,21:10,22:2,23:4,24:2,25:4,26:2,27:4,28:10,29:2,30:4,31:2,32:4,33:2,34:4,36:2,37:2,38:1,39:2,40:2,41:2,42:2};t.Tokenizer=class{constructor(){this._cs=new o.CharacterStream(""),this._tokens=[],this._prevLineStart=0,this._parenDepth=0,this._lineRanges=[],this._indentAmounts=[],this._typeIgnoreLines=new Map,this._pyrightIgnoreLines=new Map,this._fStringStack=[],this._crCount=0,this._crLfCount=0,this._lfCount=0,this._indentCount=0,this._indentTabCount=0,this._indentSpacesTotal=0,this._singleQuoteCount=0,this._doubleQuoteCount=0,this._ipythonMode=r.IPythonMode.None}tokenize(e,t,n,a=0,i=r.IPythonMode.None){if(void 0===t)t=0;else if(t<0||t>e.length)throw new Error(`Invalid range start (start=${t}, text.length=${e.length})`);if(void 0===n)n=e.length;else{if(n<0||t+n>e.length)throw new Error(`Invalid range length (start=${t}, length=${n}, text.length=${e.length})`);t+n<e.length&&(e=e.slice(0,t+n))}this._cs=new o.CharacterStream(e),this._cs.position=t,this._tokens=[],this._prevLineStart=0,this._parenDepth=a,this._lineRanges=[],this._indentAmounts=[],this._ipythonMode=i;const p=t+n;for(0===t&&this._readIndentationAfterNewLine();!(this._cs.isEndOfStream()||(this._addNextToken(),this._cs.position>=p)););for(;this._activeFString;)this._tokens.push(l.FStringEndToken.create(this._cs.position,0,65536|this._activeFString.startToken.flags)),this._activeFString=this._fStringStack.pop();if(0!==this._tokens.length&&2===this._tokens[this._tokens.length-1].type||this._tokens.push(l.NewLineToken.create(this._cs.position,0,3,this._getComments())),this._setIndent(this._cs.position,0,0,!1,!1),this._tokens.push(l.Token.create(1,this._cs.position,0,this._getComments())),this._addLineRange(),this._lineRanges.length>0){const t=this._lineRanges[this._lineRanges.length-1],n=e.charCodeAt(t.start+t.length-1);13!==n&&10!==n||this._lineRanges.push({start:this._cs.position,length:0})}let c="\n";this._crCount>this._crLfCount&&this._crCount>this._lfCount?c="\r":this._crLfCount>this._crCount&&this._crLfCount>this._lfCount&&(c="\r\n");let d="    ",u=!1;if(this._indentTabCount>this._indentCount/2)u=!0,d="\t";else if(this._indentCount>0){u=!0;let e=Math.round(this._indentSpacesTotal/this._indentCount);e<1?e=1:e>8&&(e=8),d="";for(let t=0;t<e;t++)d+=" "}return{tokens:new s.TextRangeCollection(this._tokens),lines:new s.TextRangeCollection(this._lineRanges),typeIgnoreLines:this._typeIgnoreLines,typeIgnoreAll:this._typeIgnoreAll,pyrightIgnoreLines:this._pyrightIgnoreLines,predominantEndOfLineSequence:c,hasPredominantTabSequence:u,predominantTabSequence:d,predominantSingleQuoteCharacter:this._singleQuoteCount>=this._doubleQuoteCount?"'":'"'}}static getOperatorInfo(e){return d[e]}static isPythonKeyword(e,t=!1){return!!p.get(e)&&(!!t||!c.has(e))}static isOperatorAssignment(e){return void 0!==e&&void 0!==d[e]&&0!=(4&d[e])}static isOperatorComparison(e){return void 0!==e&&void 0!==d[e]&&0!=(8&d[e])}_addNextToken(){!this._activeFString||this._activeFString.activeReplacementField&&!this._activeFString.activeReplacementField.inFormatSpecifier?this._cs.skipWhitespace():this._handleFStringMiddle(),this._cs.isEndOfStream()||this._handleCharacter()||this._cs.moveNext()}_handleCharacter(){var e,t;const n=this._getStringPrefixLength();if(n>=0){let e="";n>0&&(e=this._cs.getText().slice(this._cs.position,this._cs.position+n),this._cs.advance(n));const t=this._getQuoteTypeFlags(e);if(0!==t)return this._handleString(t,n),!0}if(35===this._cs.currentChar)return this._handleComment(),!0;if(this._ipythonMode){const e=this._getIPythonMagicsKind();if("line"===e)return this._handleIPythonMagics(37===this._cs.currentChar?1:2),!0;if("cell"===e)return this._handleIPythonMagics(37===this._cs.currentChar?3:4),!0}switch(this._cs.currentChar){case 65279:return 0!==this._cs.position&&this._handleInvalid();case 13:{const e=10===this._cs.nextChar?2:1,t=2===e?2:0;return this._handleNewLine(e,t),!0}case 10:return this._handleNewLine(1,1),!0;case 92:return 13===this._cs.nextChar?(10===this._cs.lookAhead(2)?this._cs.advance(3):this._cs.advance(2),this._addLineRange(),!0):10===this._cs.nextChar?(this._cs.advance(2),this._addLineRange(),!0):this._handleInvalid();case 40:this._parenDepth++,this._tokens.push(l.Token.create(13,this._cs.position,1,this._getComments()));break;case 41:this._parenDepth>0&&this._parenDepth--,this._tokens.push(l.Token.create(14,this._cs.position,1,this._getComments()));break;case 91:this._parenDepth++,this._tokens.push(l.Token.create(15,this._cs.position,1,this._getComments()));break;case 93:this._parenDepth>0&&this._parenDepth--,this._tokens.push(l.Token.create(16,this._cs.position,1,this._getComments()));break;case 123:this._parenDepth++,this._tokens.push(l.Token.create(17,this._cs.position,1,this._getComments())),this._activeFString&&(this._activeFString.activeReplacementField&&!this._activeFString.activeReplacementField.inFormatSpecifier||(this._activeFString.activeReplacementField&&this._activeFString.replacementFieldStack.push(this._activeFString.activeReplacementField),this._activeFString.activeReplacementField={inFormatSpecifier:!1,parenDepth:this._parenDepth}));break;case 125:this._activeFString&&(null===(e=this._activeFString.activeReplacementField)||void 0===e?void 0:e.parenDepth)===this._parenDepth&&(this._activeFString.activeReplacementField=this._activeFString.replacementFieldStack.pop()),this._parenDepth>0&&this._parenDepth--,this._tokens.push(l.Token.create(18,this._cs.position,1,this._getComments()));break;case 44:this._tokens.push(l.Token.create(12,this._cs.position,1,this._getComments()));break;case 96:this._tokens.push(l.Token.create(22,this._cs.position,1,this._getComments()));break;case 59:this._tokens.push(l.Token.create(11,this._cs.position,1,this._getComments()));break;case 58:if(!(61!==this._cs.nextChar||this._activeFString&&this._activeFString.activeReplacementField&&this._activeFString.activeReplacementField.parenDepth===this._parenDepth)){this._tokens.push(l.OperatorToken.create(this._cs.position,2,35,this._getComments())),this._cs.advance(1);break}this._tokens.push(l.Token.create(10,this._cs.position,1,this._getComments())),(null===(t=this._activeFString)||void 0===t?void 0:t.activeReplacementField)&&this._parenDepth===this._activeFString.activeReplacementField.parenDepth&&(this._activeFString.activeReplacementField.inFormatSpecifier=!0);break;default:if(this._isPossibleNumber()&&this._tryNumber())return!0;if(46===this._cs.currentChar){if(46===this._cs.nextChar&&46===this._cs.lookAhead(2))return this._tokens.push(l.Token.create(19,this._cs.position,3,this._getComments())),this._cs.advance(3),!0;this._tokens.push(l.Token.create(20,this._cs.position,1,this._getComments()));break}return!(!this._tryIdentifier()&&!this._tryOperator())||this._handleInvalid()}return!1}_addLineRange(){const e=this._cs.position-this._prevLineStart;e>0&&this._lineRanges.push({start:this._prevLineStart,length:e}),this._prevLineStart=this._cs.position}_handleNewLine(e,t){0===this._parenDepth&&3!==t&&(0!==this._tokens.length&&2===this._tokens[this._tokens.length-1].type||this._tokens.push(l.NewLineToken.create(this._cs.position,e,t,this._getComments()))),0===t?this._crCount++:2===t?this._crLfCount++:this._lfCount++,this._cs.advance(e),this._addLineRange(),this._readIndentationAfterNewLine()}_readIndentationAfterNewLine(){let e=0,t=0,n=!1,a=!1;const r=this._cs.position;for(;!this._cs.isEndOfStream();)switch(this._cs.currentChar){case 32:e++,t++,a=!0,this._cs.moveNext();break;case 9:e++,t+=8-t%8,n=!0,this._cs.moveNext();break;case 12:e=0,t=0,n=!1,a=!1,this._cs.moveNext();break;default:return void this._setIndent(r,e,t,a,n);case 35:case 10:case 13:return}}_setIndent(e,t,n,a,r){if(!(this._parenDepth>0))if(0===this._indentAmounts.length)n>0&&(this._indentCount++,r&&this._indentTabCount++,this._indentSpacesTotal+=n,this._indentAmounts.push({tab1Spaces:t,tab8Spaces:n,isSpacePresent:a,isTabPresent:r}),this._tokens.push(l.IndentToken.create(e,t,n,!1,this._getComments())));else{const s=this._indentAmounts[this._indentAmounts.length-1];if(s.tab8Spaces<n){const i=(s.isSpacePresent&&r||s.isTabPresent&&a)&&s.tab1Spaces>=t;this._indentCount++,r&&this._indentTabCount++,this._indentSpacesTotal+=n-this._indentAmounts[this._indentAmounts.length-1].tab8Spaces,this._indentAmounts.push({tab1Spaces:t,tab8Spaces:n,isSpacePresent:a,isTabPresent:r}),this._tokens.push(l.IndentToken.create(e,t,n,i,this._getComments()))}else if(s.tab8Spaces===n)(s.isSpacePresent&&r||s.isTabPresent&&a)&&this._tokens.push(l.IndentToken.create(e,t,n,!0,this._getComments()));else{let e=s.isSpacePresent&&r||s.isTabPresent&&a;const t=[];for(;this._indentAmounts.length>0&&this._indentAmounts[this._indentAmounts.length-1].tab8Spaces>n;)t.push(this._indentAmounts.length>1?this._indentAmounts[this._indentAmounts.length-2].tab8Spaces:0),this._indentAmounts.pop();t.forEach(((a,r)=>{const s=r<t.length-1||a===n,i=r<t.length-1?a:n;this._tokens.push(l.DedentToken.create(this._cs.position,0,i,s,e,this._getComments())),e=!1}))}}}_tryIdentifier(){const e=()=>{for(;;)if((0,i.isIdentifierChar)(this._cs.currentChar))this._cs.moveNext();else{if(!(0,i.isIdentifierChar)(this._cs.currentChar,this._cs.nextChar))break;this._cs.moveNext(),this._cs.moveNext()}},t=this._cs.position;if((0,i.isIdentifierStartChar)(this._cs.currentChar)?(this._cs.moveNext(),e()):(0,i.isIdentifierStartChar)(this._cs.currentChar,this._cs.nextChar)&&(this._cs.moveNext(),this._cs.moveNext(),e()),this._cs.position>t){const e=this._cs.getText().slice(t,this._cs.position);return p.has(e)?this._tokens.push(l.KeywordToken.create(t,this._cs.position-t,p.get(e),this._getComments())):this._tokens.push(l.IdentifierToken.create(t,this._cs.position-t,e,this._getComments())),!0}return!1}_isPossibleNumber(){return!!(0,i.isDecimal)(this._cs.currentChar)||!(46!==this._cs.currentChar||!(0,i.isDecimal)(this._cs.nextChar))}_tryNumber(){const e=this._cs.position;if(48===this._cs.currentChar){let t=0,n=0;if(120!==this._cs.nextChar&&88!==this._cs.nextChar||!(0,i.isHex)(this._cs.lookAhead(2)))if(98!==this._cs.nextChar&&66!==this._cs.nextChar||!(0,i.isBinary)(this._cs.lookAhead(2))){if((111===this._cs.nextChar||79===this._cs.nextChar)&&(0,i.isOctal)(this._cs.lookAhead(2))){for(this._cs.advance(2),n=2;(0,i.isOctal)(this._cs.currentChar);)this._cs.moveNext();t=8}}else{for(this._cs.advance(2),n=2;(0,i.isBinary)(this._cs.currentChar);)this._cs.moveNext();t=2}else{for(this._cs.advance(2),n=2;(0,i.isHex)(this._cs.currentChar);)this._cs.moveNext();t=16}if(t>0){const a=this._cs.getText().slice(e,this._cs.position),r=a.replace(/_/g,"");let s=parseInt(r.slice(n),t);if(!isNaN(s)){const t=BigInt(r);return(!isFinite(s)||s<Number.MIN_SAFE_INTEGER||s>Number.MAX_SAFE_INTEGER)&&(s=t),this._tokens.push(l.NumberToken.create(e,a.length,s,!0,!1,this._getComments())),!0}}}let t=!1,n=!1;if(this._cs.currentChar>=49&&this._cs.currentChar<=57){for(;(0,i.isDecimal)(this._cs.currentChar);)n=!0,this._cs.moveNext();t=46!==this._cs.currentChar&&101!==this._cs.currentChar&&69!==this._cs.currentChar}if(48===this._cs.currentChar){for(n=!0;48===this._cs.currentChar||95===this._cs.currentChar;)this._cs.moveNext();t=46!==this._cs.currentChar&&101!==this._cs.currentChar&&69!==this._cs.currentChar&&(this._cs.currentChar<49||this._cs.currentChar>57)}if(t){let t=this._cs.getText().slice(e,this._cs.position);const n=t.replace(/_/g,"");let a=parseInt(n,10);if(!isNaN(a)){let r=!1;const s=BigInt(n);return(!isFinite(a)||s<Number.MIN_SAFE_INTEGER||s>Number.MAX_SAFE_INTEGER)&&(a=s),106!==this._cs.currentChar&&74!==this._cs.currentChar||(r=!0,t+=String.fromCharCode(this._cs.currentChar),this._cs.moveNext()),this._tokens.push(l.NumberToken.create(e,t.length,a,!0,r,this._getComments())),!0}}if(this._cs.position=e,(n||46===this._cs.currentChar&&this._cs.nextChar>=48&&this._cs.nextChar<=57)&&this._skipFloatingPointCandidate()){let t=this._cs.getText().slice(e,this._cs.position);const n=parseFloat(t);if(!isNaN(n)){let a=!1;return 106!==this._cs.currentChar&&74!==this._cs.currentChar||(a=!0,t+=String.fromCharCode(this._cs.currentChar),this._cs.moveNext()),this._tokens.push(l.NumberToken.create(e,this._cs.position-e,n,!1,a,this._getComments())),!0}}return this._cs.position=e,!1}_tryOperator(){var e,t;let n=0;const a=this._cs.nextChar;let r;switch(this._cs.currentChar){case 43:n=61===a?2:1,r=2===n?1:0;break;case 38:n=61===a?2:1,r=2===n?4:3;break;case 124:n=61===a?2:1,r=2===n?7:6;break;case 94:n=61===a?2:1,r=2===n?9:8;break;case 61:if((null===(e=this._activeFString)||void 0===e?void 0:e.activeReplacementField)&&(null===(t=this._activeFString)||void 0===t?void 0:t.activeReplacementField.parenDepth)===this._parenDepth&&!this._activeFString.activeReplacementField.inFormatSpecifier&&61!==a){n=1,r=2;break}n=61===a?2:1,r=2===n?12:2;break;case 33:if(61!==a)return!!this._activeFString&&(this._tokens.push(l.Token.create(23,this._cs.position,1,this._getComments())),this._cs.advance(1),!0);n=2,r=28;break;case 37:n=61===a?2:1,r=2===n?25:24;break;case 126:n=1,r=5;break;case 45:if(62===a)return this._tokens.push(l.Token.create(21,this._cs.position,2,this._getComments())),this._cs.advance(2),!0;n=61===a?2:1,r=2===n?34:33;break;case 42:42===a?(n=61===this._cs.lookAhead(2)?3:2,r=3===n?30:29):(n=61===a?2:1,r=2===n?27:26);break;case 47:47===a?(n=61===this._cs.lookAhead(2)?3:2,r=3===n?14:13):(n=61===a?2:1,r=2===n?11:10);break;case 60:60===a?(n=61===this._cs.lookAhead(2)?3:2,r=3===n?18:17):62===a?(n=2,r=19):(n=61===a?2:1,r=2===n?21:20);break;case 62:62===a?(n=61===this._cs.lookAhead(2)?3:2,r=3===n?32:31):(n=61===a?2:1,r=2===n?16:15);break;case 64:n=61===a?2:1,r=2===n?23:22;break;default:return!1}return this._tokens.push(l.OperatorToken.create(this._cs.position,n,r,this._getComments())),this._cs.advance(n),n>0}_handleInvalid(){const e=this._cs.position;for(;10!==this._cs.currentChar&&13!==this._cs.currentChar&&!this._cs.isAtWhiteSpace()&&!this._cs.isEndOfStream();)(0,i.isSurrogateChar)(this._cs.currentChar)?(this._cs.moveNext(),this._cs.moveNext()):this._cs.moveNext();const t=this._cs.position-e;return t>0&&(this._tokens.push(l.Token.create(0,e,t,this._getComments())),!0)}_getComments(){const e=this._comments;return this._comments=void 0,e}_getIPythonMagicsKind(){if(37!==(e=this._cs.currentChar)&&33!==e)return;var e;const t=this._tokens.length>0?this._tokens[this._tokens.length-1]:void 0;if(void 0===t||(0,a.isWhitespace)(t))return this._cs.nextChar===this._cs.currentChar?(this._cs.moveNext(),"cell"):"line"}_handleIPythonMagics(e){const t=this._cs.position+1;let n=t;do{if(this._cs.skipToEol(),1===e||2===e){const e=this._cs.position-n;if(!this._cs.getText().slice(n,n+e).match(/\\\s*$/))break}this._cs.moveNext(),n=this._cs.position+1}while(!this._cs.isEndOfStream());const a=this._cs.position-t,r=l.Comment.create(t,a,this._cs.getText().slice(t,t+a),e);this._addComments(r)}_handleComment(){var e,t;const n=this._cs.position+1;this._cs.skipToEol();const a=this._cs.position-n,r=l.Comment.create(n,a,this._cs.getText().slice(n,n+a)),s=r.value.match(/((^|#)\s*)type:\s*ignore(\s*\[([\s*\w-,]*)\]|\s|$)/);if(s){const t=n+(null!==(e=s.index)&&void 0!==e?e:0),a={range:{start:t+s[1].length,length:s[0].length-s[1].length},rulesList:this._getIgnoreCommentRulesList(t,s)};this._tokens.findIndex((e=>2!==e.type&&e&&3!==e.type))<0?this._typeIgnoreAll=a:this._typeIgnoreLines.set(this._lineRanges.length,a)}const i=r.value.match(/((^|#)\s*)pyright:\s*ignore(\s*\[([\s*\w-,]*)\]|\s|$)/);if(i){const e=n+(null!==(t=i.index)&&void 0!==t?t:0),a={range:{start:e+i[1].length,length:i[0].length-i[1].length},rulesList:this._getIgnoreCommentRulesList(e,i)};this._pyrightIgnoreLines.set(this._lineRanges.length,a)}this._addComments(r)}_getIgnoreCommentRulesList(e,t){if(t.length<5||void 0===t[4])return;const n=t[4].split(","),a=[];let r=e+t[0].indexOf("[")+1;for(const e of n){const t=e.trimStart();r+=e.length-t.length;const n=t.trimEnd();n.length>0&&a.push({range:{start:r,length:n.length},text:n}),r+=t.length+1}return a}_addComments(e){this._comments?this._comments.push(e):this._comments=[e]}_getStringPrefixLength(){if(39===this._cs.currentChar||34===this._cs.currentChar)return 0;if(39===this._cs.nextChar||34===this._cs.nextChar)switch(this._cs.currentChar){case 102:case 70:case 114:case 82:case 98:case 66:case 117:case 85:return 1}if(39===this._cs.lookAhead(2)||34===this._cs.lookAhead(2)){switch(this._cs.getText().slice(this._cs.position,this._cs.position+2).toLowerCase()){case"rf":case"fr":case"ur":case"ru":case"br":case"rb":return 2}}return-1}_getQuoteTypeFlags(e){let t=0;e=e.toLowerCase();for(let n=0;n<e.length;n++)switch(e[n]){case"u":t|=16;break;case"b":t|=32;break;case"r":t|=8;break;case"f":t|=64}return 39===this._cs.currentChar?(t|=1,39===this._cs.nextChar&&39===this._cs.lookAhead(2)&&(t|=4)):34===this._cs.currentChar&&(t|=2,34===this._cs.nextChar&&34===this._cs.lookAhead(2)&&(t|=4)),t}_handleString(e,t){var n;const a=this._cs.position-t;if(64&e){4&e?this._cs.advance(3):this._cs.moveNext();const n=this._cs.position,r=l.FStringStartToken.create(a,n-a,e,t,this._getComments()),s={startToken:r,replacementFieldStack:[]};this._activeFString&&this._fStringStack.push(this._activeFString),this._activeFString=s,this._tokens.push(r)}else{4&e?this._cs.advance(3):(this._cs.moveNext(),1&e?this._singleQuoteCount++:this._doubleQuoteCount++);const r=this._skipToEndOfStringLiteral(e),s=this._cs.position;if(0!=(65536&r.flags)&&(null===(n=this._activeFString)||void 0===n?void 0:n.activeReplacementField)&&0==(120&e)){const t=7;if((this._activeFString.startToken.flags&t)==(e&t)){for(this._cs.position=a;this._activeFString.replacementFieldStack.length>0;)this._activeFString.activeReplacementField=this._activeFString.replacementFieldStack.pop();return this._parenDepth=this._activeFString.activeReplacementField.parenDepth-1,void(this._activeFString.activeReplacementField=void 0)}}this._tokens.push(l.StringToken.create(a,s-a,r.flags,r.escapedValue,t,this._getComments()))}}_handleFStringMiddle(){var e;const t=this._activeFString,n=!!(null===(e=this._activeFString.activeReplacementField)||void 0===e?void 0:e.inFormatSpecifier),a=this._cs.position,r=t.startToken.flags,s=this._skipToEndOfStringLiteral(r,n),i=this._cs.position,o=0!=(65536&s.flags),p=0!=(128&s.flags),c=0!=(256&s.flags),d=!o&&!p&&!c;let u=i-a;d&&(u-=t.startToken.quoteMarkLength),(u>0||o)&&this._tokens.push(l.FStringMiddleToken.create(a,u,s.flags,s.escapedValue)),d?(this._tokens.push(l.FStringEndToken.create(a+u,t.startToken.quoteMarkLength,s.flags)),this._activeFString=this._fStringStack.pop()):o&&(this._activeFString=this._fStringStack.pop())}_skipToEndOfStringLiteral(e,t=!1){const n=1&e?39:34,a=0!=(4&e),r=0!=(64&e);let s=!1;const i=this._cs.position;let o=0;const l=()=>this._cs.getText().slice(i,i+o);for(;;){if(this._cs.isEndOfStream())return e|=65536,{escapedValue:l(),flags:e};if(92===this._cs.currentChar)if(o++,this._cs.moveNext(),s||78!==this._cs.getCurrentChar()||123!==this._cs.nextChar){const e=39===this._cs.getCurrentChar()||34===this._cs.getCurrentChar(),t=13===this._cs.getCurrentChar()||10===this._cs.getCurrentChar(),n=92===this._cs.getCurrentChar();(!r||n||e||t)&&(t?(13===this._cs.getCurrentChar()&&10===this._cs.nextChar&&(o++,this._cs.moveNext()),o++,this._cs.moveNext(),this._addLineRange()):(o++,this._cs.moveNext()))}else e|=512,s=!0;else if(10===this._cs.currentChar||13===this._cs.currentChar){if(!a&&!r)return e|=65536,{escapedValue:l(),flags:e};13===this._cs.currentChar&&10===this._cs.nextChar&&(o++,this._cs.moveNext()),o++,this._cs.moveNext(),this._addLineRange()}else{if(!a&&this._cs.currentChar===n){this._cs.moveNext();break}if(a&&this._cs.currentChar===n&&this._cs.nextChar===n&&this._cs.lookAhead(2)===n){this._cs.advance(3);break}if(!s&&r&&123===this._cs.currentChar){if(t||123!==this._cs.nextChar){e|=128;break}o++,this._cs.moveNext(),o++,this._cs.moveNext()}else if(s&&125===this._cs.currentChar)s=!1,o++,this._cs.moveNext();else if(r&&125===this._cs.currentChar){if(t||125!==this._cs.nextChar){e|=256;break}o++,this._cs.moveNext(),o++,this._cs.moveNext()}else o++,this._cs.moveNext()}}return{escapedValue:l(),flags:e}}_skipFloatingPointCandidate(){const e=this._cs.position;return this._skipFractionalNumber(),this._cs.position>e&&(101!==this._cs.currentChar&&69!==this._cs.currentChar||(this._cs.moveNext(),this._skipDecimalNumber(!0))),this._cs.position>e}_skipFractionalNumber(){this._skipDecimalNumber(!1),46===this._cs.currentChar&&this._cs.moveNext(),this._skipDecimalNumber(!1)}_skipDecimalNumber(e){for(!e||45!==this._cs.currentChar&&43!==this._cs.currentChar||this._cs.moveNext();(0,i.isDecimal)(this._cs.currentChar);)this._cs.moveNext()}}},2572:(e,t)=>{var n,a,r,s,i,o,l,p,c,d,u,m,y;Object.defineProperty(t,"__esModule",{value:!0}),t.IdentifierToken=t.OperatorToken=t.NumberToken=t.FStringEndToken=t.FStringMiddleToken=t.FStringStartToken=t.StringToken=t.KeywordToken=t.NewLineToken=t.DedentToken=t.IndentToken=t.Token=t.Comment=t.softKeywords=void 0,t.softKeywords=[9,25,6,35],function(e){e.create=function(e,t,n,a=0){return{type:a,start:e,length:t,value:n}}}(n||(t.Comment=n={})),function(e){e.create=function(e,t,n,a){return{start:t,length:n,type:e,comments:a}}}(a||(t.Token=a={})),function(e){e.create=function(e,t,n,a,r){return{start:e,length:t,type:3,isIndentAmbiguous:a,comments:r,indentAmount:n}}}(r||(t.IndentToken=r={})),function(e){e.create=function(e,t,n,a,r,s){return{start:e,length:t,type:4,comments:s,indentAmount:n,matchesIndent:a,isDedentAmbiguous:r}}}(s||(t.DedentToken=s={})),function(e){e.create=function(e,t,n,a){return{start:e,length:t,type:2,comments:a,newLineType:n}}}(i||(t.NewLineToken=i={})),function(e){e.create=function(e,t,n,a){return{start:e,length:t,type:8,comments:a,keywordType:n}}}(o||(t.KeywordToken=o={})),function(e){e.create=function(e,t,n,a,r,s){return{start:e,length:t,type:5,flags:n,escapedValue:a,prefixLength:r,quoteMarkLength:4&n?3:1,comments:s}}}(l||(t.StringToken=l={})),function(e){e.create=function(e,t,n,a,r){return{start:e,length:t,type:24,flags:n,prefixLength:a,quoteMarkLength:4&n?3:1,comments:r}}}(p||(t.FStringStartToken=p={})),function(e){e.create=function(e,t,n,a){return{start:e,length:t,type:25,flags:n,escapedValue:a}}}(c||(t.FStringMiddleToken=c={})),function(e){e.create=function(e,t,n){return{start:e,length:t,type:26,flags:n}}}(d||(t.FStringEndToken=d={})),function(e){e.create=function(e,t,n,a,r,s){return{start:e,length:t,type:6,isInteger:a,isImaginary:r,value:n,comments:s}}}(u||(t.NumberToken=u={})),function(e){e.create=function(e,t,n,a){return{start:e,length:t,type:9,operatorType:n,comments:a}}}(m||(t.OperatorToken=m={})),function(e){e.create=function(e,t,n,a){return{start:e,length:t,type:7,value:n.normalize("NFKC"),comments:a}}}(y||(t.IdentifierToken=y={}))},90452:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.unicodePc=t.unicodeNdSurrogate=t.unicodeNd=t.unicodeMcSurrogate=t.unicodeMc=t.unicodeMnSurrogate=t.unicodeMn=t.unicodeNlSurrogate=t.unicodeNl=t.unicodeLmSurrogate=t.unicodeLm=t.unicodeLoSurrogate=t.unicodeLo=t.unicodeLt=t.unicodeLlSurrogate=t.unicodeLl=t.unicodeLuSurrogate=t.unicodeLu=void 0,t.unicodeLu=[[65,90],[192,214],[216,222],256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,298,300,302,304,306,308,310,313,315,317,319,321,323,325,327,330,332,334,336,338,340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,372,374,[376,377],379,381,[385,386],388,[390,391],[393,395],[398,401],[403,404],[406,408],[412,413],[415,416],418,420,[422,423],425,428,[430,431],[433,435],437,[439,440],444,452,455,458,461,463,465,467,469,471,473,475,478,480,482,484,486,488,490,492,494,497,500,[502,504],506,508,510,512,514,516,518,520,522,524,526,528,530,532,534,536,538,540,542,544,546,548,550,552,554,556,558,560,562,[570,571],[573,574],577,[579,582],584,586,588,590,880,882,886,895,902,[904,906],908,[910,911],[913,929],[931,939],975,[978,980],984,986,988,990,992,994,996,998,1e3,1002,1004,1006,1012,1015,[1017,1018],[1021,1071],1120,1122,1124,1126,1128,1130,1132,1134,1136,1138,1140,1142,1144,1146,1148,1150,1152,1162,1164,1166,1168,1170,1172,1174,1176,1178,1180,1182,1184,1186,1188,1190,1192,1194,1196,1198,1200,1202,1204,1206,1208,1210,1212,1214,[1216,1217],1219,1221,1223,1225,1227,1229,1232,1234,1236,1238,1240,1242,1244,1246,1248,1250,1252,1254,1256,1258,1260,1262,1264,1266,1268,1270,1272,1274,1276,1278,1280,1282,1284,1286,1288,1290,1292,1294,1296,1298,1300,1302,1304,1306,1308,1310,1312,1314,1316,1318,1320,1322,1324,1326,[1329,1366],[4256,4293],4295,4301,[5024,5109],[7312,7354],[7357,7359],7680,7682,7684,7686,7688,7690,7692,7694,7696,7698,7700,7702,7704,7706,7708,7710,7712,7714,7716,7718,7720,7722,7724,7726,7728,7730,7732,7734,7736,7738,7740,7742,7744,7746,7748,7750,7752,7754,7756,7758,7760,7762,7764,7766,7768,7770,7772,7774,7776,7778,7780,7782,7784,7786,7788,7790,7792,7794,7796,7798,7800,7802,7804,7806,7808,7810,7812,7814,7816,7818,7820,7822,7824,7826,7828,7838,7840,7842,7844,7846,7848,7850,7852,7854,7856,7858,7860,7862,7864,7866,7868,7870,7872,7874,7876,7878,7880,7882,7884,7886,7888,7890,7892,7894,7896,7898,7900,7902,7904,7906,7908,7910,7912,7914,7916,7918,7920,7922,7924,7926,7928,7930,7932,7934,[7944,7951],[7960,7965],[7976,7983],[7992,7999],[8008,8013],8025,8027,8029,8031,[8040,8047],[8120,8123],[8136,8139],[8152,8155],[8168,8172],[8184,8187],8450,8455,[8459,8461],[8464,8466],8469,[8473,8477],8484,8486,8488,[8490,8493],[8496,8499],[8510,8511],8517,8579,[11264,11311],11360,[11362,11364],11367,11369,11371,[11373,11376],11378,11381,[11390,11392],11394,11396,11398,11400,11402,11404,11406,11408,11410,11412,11414,11416,11418,11420,11422,11424,11426,11428,11430,11432,11434,11436,11438,11440,11442,11444,11446,11448,11450,11452,11454,11456,11458,11460,11462,11464,11466,11468,11470,11472,11474,11476,11478,11480,11482,11484,11486,11488,11490,11499,11501,11506,42560,42562,42564,42566,42568,42570,42572,42574,42576,42578,42580,42582,42584,42586,42588,42590,42592,42594,42596,42598,42600,42602,42604,42624,42626,42628,42630,42632,42634,42636,42638,42640,42642,42644,42646,42648,42650,42786,42788,42790,42792,42794,42796,42798,42802,42804,42806,42808,42810,42812,42814,42816,42818,42820,42822,42824,42826,42828,42830,42832,42834,42836,42838,42840,42842,42844,42846,42848,42850,42852,42854,42856,42858,42860,42862,42873,42875,[42877,42878],42880,42882,42884,42886,42891,42893,42896,42898,42902,42904,42906,42908,42910,42912,42914,42916,42918,42920,[42922,42926],[42928,42932],42934,42936,42938,42940,42942,42944,42946,[42948,42951],42953,42960,42966,42968,42997,[65313,65338],[66560,66599],[66736,66771],[66928,66938],[66940,66954],[66956,66962],[66964,66965],[68736,68786],[71840,71871],[93760,93791],[119808,119833],[119860,119885],[119912,119937],119964,[119966,119967],119970,[119973,119974],[119977,119980],[119982,119989],[120016,120041],[120068,120069],[120071,120074],[120077,120084],[120086,120092],[120120,120121],[120123,120126],[120128,120132],120134,[120138,120144],[120172,120197],[120224,120249],[120276,120301],[120328,120353],[120380,120405],[120432,120457],[120488,120512],[120546,120570],[120604,120628],[120662,120686],[120720,120744],120778,[125184,125217]],t.unicodeLuSurrogate={55297:[[56320,56359],[56496,56531],[56688,56698],[56700,56714],[56716,56722],[56724,56725]],55299:[[56448,56498]],55302:[[56480,56511]],55323:[[56896,56927]],55349:[[56320,56345],[56372,56397],[56424,56449],56476,[56478,56479],56482,[56485,56486],[56489,56492],[56494,56501],[56528,56553],[56580,56581],[56583,56586],[56589,56596],[56598,56604],[56632,56633],[56635,56638],[56640,56644],56646,[56650,56656],[56684,56709],[56736,56761],[56788,56813],[56840,56865],[56892,56917],[56944,56969],[57e3,57024],[57058,57082],[57116,57140],[57174,57198],[57232,57256],57290],55354:[[56576,56609]]},t.unicodeLle3,8005],[8016,8023],[8032,8039],[8048,8061],[8064,8071],[8080,8087],[8096,8103],[8112,8116],[8118,8119],8126,[8130,8132],[8134,8135],[8144,8147],[8150,8151],[8160,8167],[8178,8180],[8182,8183],8458,[8462,8463],8467,8495,8500,8505,[8508,8509],[8518,8521],8526,8580,[11312,11359],11361,[11365,11366],11368,11370,11372,11377,[11379,11380],[11382,11387],11393,11395,11397,11399,11401,11403,11405,11407,11409,11411,11413,11415,11417,11419,11421,11423,11425,11427,11429,11431,11433,11435,11437,11439,11441,11443,11445,11447,11449,11451,11453,11455,11457,11459,11461,11463,11465,11467,11469,11471,11473,11475,11477,11479,11481,11483,11485,11487,11489,[11491,11492],11500,11502,11507,[11520,11557],11559,11565,42561,42563,42565,42567,42569,42571,42573,42575,42577,42579,42581,42583,42585,42587,42589,42591,42593,42595,42597,42599,42601,42603,42605,42625,42627,42629,42631,42633,42635,42637,42639,42641,42643,42645,42647,42649,42651,42787,42789,42791,42793,42795,42797,[42799,42801],42803,42805,42807,42809,42811,42813,42815,42817,42819,42821,42823,42825,42827,42829,42831,42833,42835,42837,42839,42841,42843,42845,42847,42849,42851,42853,42855,42857,42859,42861,42863,[42865,42872],42874,42876,42879,42881,42883,42885,42887,42892,42894,42897,[42899,42901],42903,42905,42907,42909,42911,42913,42915,42917,42919,42921,42927,42933,42935,42937,42939,42941,42943,42945,42947,42952,42954,42961,42963,42965,42967,42969,42998,43002,[43824,43866],[43872,43880],[43888,43967],[64256,64262],[64275,64279],[65345,65370],[66600,66639],[66776,66811],[66967,66977],[66979,66993],[66995,67001],[67003,67004],[68800,68850],[71872,71903],[93792,93823],[119834,119859],[119886,119892],[119894,119911],[119938,119963],[119990,119993],119995,[119997,120003],[120005,120015],[120042,120067],[120094,120119],[120146,120171],[120198,120223],[120250,120275],[120302,120327],[120354,120379],[120406,120431],[120458,120485],[120514,120538],[120540,120545],[120572,120596],[120598,120603],[120630,120654],[120656,120661],[120688,120712],[120714,120719],[120746,120770],[120772,120777],120779,[122624,122633],[122635,122654],[122661,122666],[125218,125251]],t.unicodeLlSurrogate={55297:[[56360,56399],[56536,56571],[56727,56737],[56739,56753],[56755,56761],[56763,56764]],55299:[[56512,56562]],55302:[[56512,56543]],55323:[[56928,56959]],55349:[[56346,56371],[56398,56404],[56406,56423],[56450,56475],[56502,56505],56507,[56509,56515],[56517,56527],[56554,56579],[56606,56631],[56658,56683],[56710,56735],[56762,56787],[56814,56839],[56866,56891],[56918,56943],[56970,56997],[57026,57050],[57052,57057],[57084,57108],[57110,57115],[57142,57166],[57168,57173],[57200,57224],[57226,57231],[57258,57282],[57284,57289],57291],55351:[[57088,57097],[57099,57118],[57125,57130]],55354:[[56610,56643]]},t.unicodeLt=[453,456,459,498,[8072,8079],[8088,8095],[8104,8111],8124,8140,8188],t.unicodeLo=[170,186,443,[448,451],660,[1488,1514],[1519,1522],[1568,1599],[1601,1610],[1646,1647],[1649,1747],1749,[1774,1775],[1786,1788],1791,1808,[1810,1839],[1869,1957],1969,[1994,2026],[2048,2069],[2112,2136],[2144,2154],[2160,2183],[2185,2190],[2208,2248],[2308,2361],2365,2384,[2392,2401],[2418,2432],[2437,2444],[2447,2448],[2451,2472],[2474,2480],2482,[2486,2489],2493,2510,[2524,2525],[2527,2529],[2544,2545],2556,[2565,2570],[2575,2576],[2579,2600],[2602,2608],[2610,2611],[2613,2614],[2616,2617],[2649,2652],2654,[2674,2676],[2693,2701],[2703,2705],[2707,2728],[2730,2736],[2738,2739],[2741,2745],2749,2768,[2784,2785],2809,[2821,2828],[2831,2832],[2835,2856],[2858,2864],[2866,2867],[2869,2873],2877,[2908,2909],[2911,2913],2929,2947,[2949,2954],[2958,2960],[2962,2965],[2969,2970],2972,[2974,2975],[2979,2980],[2984,2986],[2990,3001],3024,[3077,3084],[3086,3088],[3090,3112],[3114,3129],3133,[3160,3162],3165,[3168,3169],3200,[3205,3212],[3214,3216],[3218,3240],[3242,3251],[3253,3257],3261,[3293,3294],[3296,3297],[3313,3314],[3332,3340],[3342,3344],[3346,3386],3389,3406,[3412,3414],[3423,3425],[3450,3455],[3461,3478],[3482,3505],[3507,3515],3517,[3520,3526],[3585,3632],[3634,3635],[3648,3653],[3713,3714],3716,[3718,3722],[3724,3747],3749,[3751,3760],[3762,3763],3773,[3776,3780],[3804,3807],3840,[3904,3911],[3913,3948],[3976,3980],[4096,4138],4159,[4176,4181],[4186,4189],4193,[4197,4198],[4206,4208],[4213,4225],4238,[4352,4680],[4682,4685],[4688,4694],4696,[4698,4701],[4704,4744],[4746,4749],[4752,4784],[4786,4789],[4792,4798],4800,[4802,4805],[4808,4822],[4824,4880],[4882,4885],[4888,4954],[4992,5007],[5121,5740],[5743,5759],[5761,5786],[5792,5866],[5873,5880],[5888,5905],[5919,5937],[5952,5969],[5984,5996],[5998,6e3],[6016,6067],6108,[6176,6210],[6212,6264],[6272,6276],[6279,6312],6314,[6320,6389],[6400,6430],[6480,6509],[6512,6516],[6528,6571],[6576,6601],[6656,6678],[6688,6740],[6917,6963],[6981,6988],[7043,7072],[7086,7087],[7098,7141],[7168,7203],[7245,7247],[7258,7287],[7401,7404],[7406,7411],[7413,7414],7418,[8501,8504],[11568,11623],[11648,11670],[11680,11686],[11688,11694],[11696,11702],[11704,11710],[11712,11718],[11720,11726],[11728,11734],[11736,11742],12294,12348,[12353,12438],12447,[12449,12538],12543,[12549,12591],[12593,12686],[12704,12735],[12784,12799],[13312,19903],[19968,40980],[40982,42124],[42192,42231],[42240,42507],[42512,42527],[42538,42539],42606,[42656,42725],42895,42999,[43003,43009],[43011,43013],[43015,43018],[43020,43042],[43072,43123],[43138,43187],[43250,43255],43259,[43261,43262],[43274,43301],[43312,43334],[43360,43388],[43396,43442],[43488,43492],[43495,43503],[43514,43518],[43520,43560],[43584,43586],[43588,43595],[43616,43631],[43633,43638],43642,[43646,43695],43697,[43701,43702],[43705,43709],43712,43714,[43739,43740],[43744,43754],43762,[43777,43782],[43785,43790],[43793,43798],[43808,43814],[43816,43822],[43968,44002],[44032,55203],[55216,55238],[55243,55291],[63744,64109],[64112,64217],64285,[64287,64296],[64298,64310],[64312,64316],64318,[64320,64321],[64323,64324],[64326,64433],[64467,64829],[64848,64911],[64914,64967],[65008,65019],[65136,65140],[65142,65276],[65382,65391],[65393,65437],[65440,65470],[65474,65479],[65482,65487],[65490,65495],[65498,65500],[65536,65547],[65549,65574],[65576,65594],[65596,65597],[65599,65613],[65616,65629],[65664,65786],[66176,66204],[66208,66256],[66304,66335],[66349,66368],[66370,66377],[66384,66421],[66432,66461],[66464,66499],[66504,66511],[66640,66717],[66816,66855],[66864,66915],[67072,67382],[67392,67413],[67424,67431],[67584,67589],67592,[67594,67637],[67639,67640],67644,[67647,67669],[67680,67702],[67712,67742],[67808,67826],[67828,67829],[67840,67861],[67872,67897],[67968,68023],[68030,68031],68096,[68112,68115],[68117,68119],[68121,68149],[68192,68220],[68224,68252],[68288,68295],[68297,68324],[68352,68405],[68416,68437],[68448,68466],[68480,68497],[68608,68680],[68864,68899],[69248,69289],[69296,69297],[69376,69404],69415,[69424,69445],[69488,69505],[69552,69572],[69600,69622],[69635,69687],[69745,69746],69749,[69763,69807],[69840,69864],[69891,69926],69956,69959,[69968,70002],70006,[70019,70066],[70081,70084],70106,70108,[70144,70161],[70163,70187],[70207,70208],[70272,70278],70280,[70282,70285],[70287,70301],[70303,70312],[70320,70366],[70405,70412],[70415,70416],[70419,70440],[70442,70448],[70450,70451],[70453,70457],70461,70480,[70493,70497],[70656,70708],[70727,70730],[70751,70753],[70784,70831],[70852,70853],70855,[71040,71086],[71128,71131],[71168,71215],71236,[71296,71338],71352,[71424,71450],[71488,71494],[71680,71723],[71935,71942],71945,[71948,71955],[71957,71958],[71960,71983],71999,72001,[72096,72103],[72106,72144],72161,72163,72192,[72203,72242],72250,72272,[72284,72329],72349,[72368,72440],[72704,72712],[72714,72750],72768,[72818,72847],[72960,72966],[72968,72969],[72971,73008],73030,[73056,73061],[73063,73064],[73066,73097],73112,[73440,73458],73474,[73476,73488],[73490,73523],73648,[73728,74649],[74880,75075],[77712,77808],[77824,78895],[78913,78918],[82944,83526],[92160,92728],[92736,92766],[92784,92862],[92880,92909],[92928,92975],[93027,93047],[93053,93071],[93952,94026],94032,[94208,100343],[100352,101589],[101632,101640],[110592,110882],110898,[110928,110930],110933,[110948,110951],[110960,111355],[113664,113770],[113776,113788],[113792,113800],[113808,113817],122634,[123136,123180],123214,[123536,123565],[123584,123627],[124112,124138],[124896,124902],[124904,124907],[124909,124910],[124912,124926],[124928,125124],[126464,126467],[126469,126495],[126497,126498],126500,126503,[126505,126514],[126516,126519],126521,126523,126530,126535,126537,126539,[126541,126543],[126545,126546],126548,126551,126553,126555,126557,126559,[126561,126562],126564,[126567,126570],[126572,126578],[126580,126583],[126585,126588],126590,[126592,126601],[126603,126619],[126625,126627],[126629,126633],[126635,126651],[131072,173791],[173824,177977],[177984,178205],[178208,183969],[183984,191456],[191472,192093],[194560,195101],[196608,201546],[201552,205743]],t.unicodeLoSurrogate={55296:[[56320,56331],[56333,56358],[56360,56378],[56380,56381],[56383,56397],[56400,56413],[56448,56570],[56960,56988],[56992,57040],[57088,57119],[57133,57152],[57154,57161],[57168,57205],[57216,57245],[57248,57283],[57288,57295]],55297:[[56400,56477],[56576,56615],[56624,56675],[56832,57142],[57152,57173],[57184,57191]],55298:[[56320,56325],56328,[56330,56373],[56375,56376],56380,[56383,56405],[56416,56438],[56448,56478],[56544,56562],[56564,56565],[56576,56597],[56608,56633],[56704,56759],[56766,56767],56832,[56848,56851],[56853,56855],[56857,56885],[56928,56956],[56960,56988],[57024,57031],[57033,57060],[57088,57141],[57152,57173],[57184,57202],[57216,57233]],55299:[[56320,56392],[56576,56611],[56960,57001],[57008,57009],[57088,57116],57127,[57136,57157],[57200,57217],[57264,57284],[57312,57334]],55300:[[56323,56375],[56433,56434],56437,[56451,56495],[56528,56552],[56579,56614],56644,56647,[56656,56690],56694,[56707,56754],[56769,56772],56794,56796,[56832,56849],[56851,56875],[56895,56896],[56960,56966],56968,[56970,56973],[56975,56989],[56991,57e3],[57008,57054],[57093,57100],[57103,57104],[57107,57128],[57130,57136],[57138,57139],[57141,57145],57149,57168,[57181,57185]],55301:[[56320,56372],[56391,56394],[56415,56417],[56448,56495],[56516,56517],56519,[56704,56750],[56792,56795],[56832,56879],56900,[56960,57002],57016,[57088,57114],[57152,57158]],55302:[[56320,56363],[56575,56582],56585,[56588,56595],[56597,56598],[56600,56623],56639,56641,[56736,56743],[56746,56784],56801,56803,56832,[56843,56882],56890,56912,[56924,56969],56989,[57008,57080]],55303:[[56320,56328],[56330,56366],56384,[56434,56463],[56576,56582],[56584,56585],[56587,56624],56646,[56672,56677],[56679,56680],[56682,56713],56728,[57056,57074],57090,[57092,57104],[57106,57139],57264],55304:[[56320,57241]],55305:[[56448,56643]],55307:[[57232,57328]],55308:[[56320,57343]],55309:[[56320,56367],[56385,56390]],55313:[[56320,56902]],55322:[[56320,56888],[56896,56926],[56944,57022],[57040,57069],[57088,57135],[57187,57207],[57213,57231]],55323:[[57088,57162],57168],55324:[[56320,57343]],55325:[[56320,57343]],55326:[[56320,57343]],55327:[[56320,57343]],55328:[[56320,57343]],55329:[[56320,57335]],55330:[[56320,57343]],55331:[[56320,56533],[56576,56584]],55340:[[56320,56610],56626,[56656,56658],56661,[56676,56679],[56688,57083]],55343:[[56320,56426],[56432,56444],[56448,56456],[56464,56473]],55351:[57098],55352:[[56576,56620],56654,[56976,57005],[57024,57067]],55353:[[56528,56554],[57312,57318],[57320,57323],[57325,57326],[57328,57342]],55354:[[56320,56516]],55355:[[56832,56835],[56837,56863],[56865,56866],56868,56871,[56873,56882],[56884,56887],56889,56891,56898,56903,56905,56907,[56909,56911],[56913,56914],56916,56919,56921,56923,56925,56927,[56929,56930],56932,[56935,56938],[56940,56946],[56948,56951],[56953,56956],56958,[56960,56969],[56971,56987],[56993,56995],[56997,57001],[57003,57019]],55360:[[56320,57343]],55361:[[56320,57343]],55362:[[56320,57343]],55363:[[56320,57343]],55364:[[56320,57343]],55365:[[56320,57343]],55366:[[56320,57343]],55367:[[56320,57343]],55368:[[56320,57343]],55369:[[56320,57343]],55370:[[56320,57343]],55371:[[56320,57343]],55372:[[56320,57343]],55373:[[56320,57343]],55374:[[56320,57343]],55375:[[56320,57343]],55376:[[56320,57343]],55377:[[56320,57343]],55378:[[56320,57343]],55379:[[56320,57343]],55380:[[56320,57343]],55381:[[56320,57343]],55382:[[56320,57343]],55383:[[56320,57343]],55384:[[56320,57343]],55385:[[56320,57343]],55386:[[56320,57343]],55387:[[56320,57343]],55388:[[56320,57343]],55389:[[56320,57343]],55390:[[56320,57343]],55391:[[56320,57343]],55392:[[56320,57343]],55393:[[56320,57343]],55394:[[56320,57343]],55395:[[56320,57343]],55396:[[56320,57343]],55397:[[56320,57343]],55398:[[56320,57343]],55399:[[56320,57343]],55400:[[56320,57343]],55401:[[56320,57055],[57088,57343]],55402:[[56320,57343]],55403:[[56320,57343]],55404:[[56320,57343]],55405:[[56320,57145],[57152,57343]],55406:[[56320,56349],[56352,57343]],55407:[[56320,57343]],55408:[[56320,57343]],55409:[[56320,57343]],55410:[[56320,57343]],55411:[[56320,56993],[57008,57343]],55412:[[56320,57343]],55413:[[56320,57343]],55414:[[56320,57343]],55415:[[56320,57343]],55416:[[56320,57343]],55417:[[56320,57343]],55418:[[56320,57312],[57328,57343]],55419:[[56320,56925]],55422:[[56320,56861]],55424:[[56320,57343]],55425:[[56320,57343]],55426:[[56320,57343]],55427:[[56320,57343]],55428:[[56320,57162],[57168,57343]],55429:[[56320,57343]],55430:[[56320,57343]],55431:[[56320,57343]],55432:[[56320,57263]]},t.unicodeLm=[[688,705],[710,721],[736,740],748,750,884,890,1369,1600,[1765,1766],[2036,2037],2042,2074,2084,2088,2249,2417,3654,3782,4348,6103,6211,6823,[7288,7293],[7468,7530],7544,[7579,7615],8305,8319,[8336,8348],[11388,11389],11631,11823,12293,[12337,12341],12347,[12445,12446],[12540,12542],40981,[42232,42237],42508,42623,[42652,42653],[42775,42783],42864,42888,[42994,42996],[43e3,43001],43471,43494,43632,43741,[43763,43764],[43868,43871],43881,65392,[65438,65439],[67456,67461],[67463,67504],[67506,67514],[92992,92995],[94099,94111],[94176,94177],94179,[110576,110579],[110581,110587],[110589,110590],[122928,122989],[123191,123197],124139,125259],t.unicodeLmSurrogate={55297:[[57216,57221],[57223,57264],[57266,57274]],55322:[[57152,57155]],55323:[[57235,57247],[57312,57313],57315],55339:[[57328,57331],[57333,57339],[57341,57342]],55352:[[56368,56429],[56631,56637]],55353:[56555],55354:[56651]},t.unicodeNl=[[5870,5872],[8544,8578],[8581,8584],12295,[12321,12329],[12344,12346],[42726,42735],[65856,65908],66369,66378,[66513,66517],[74752,74862]],t.unicodeNlSurrogate={55296:[[56640,56692],57153,57162,[57297,57301]],55305:[[56320,56430]]},t.unicodeMn=[[768,879],[1155,1159],[1425,1469],1471,[1473,1474],[1476,1477],1479,[1552,1562],[1611,1631],1648,[1750,1756],[1759,1764],[1767,1768],[1770,1773],1809,[1840,1866],[1958,1968],[2027,2035],2045,[2070,2073],[2075,2083],[2085,2087],[2089,2093],[2137,2139],[2200,2207],[2250,2273],[2275,2306],2362,2364,[2369,2376],2381,[2385,2391],[2402,2403],2433,2492,[2497,2500],2509,[2530,2531],2558,[2561,2562],2620,[2625,2626],[2631,2632],[2635,2637],2641,[2672,2673],2677,[2689,2690],2748,[2753,2757],[2759,2760],2765,[2786,2787],[2810,2815],2817,2876,2879,[2881,2884],2893,[2901,2902],[2914,2915],2946,3008,3021,3072,3076,3132,[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3170,3171],3201,3260,3263,3270,[3276,3277],[3298,3299],[3328,3329],[3387,3388],[3393,3396],3405,[3426,3427],3457,3530,[3538,3540],3542,3633,[3636,3642],[3655,3662],3761,[3764,3772],[3784,3790],[3864,3865],3893,3895,3897,[3953,3966],[3968,3972],[3974,3975],[3981,3991],[3993,4028],4038,[4141,4144],[4146,4151],[4153,4154],[4157,4158],[4184,4185],[4190,4192],[4209,4212],4226,[4229,4230],4237,4253,[4957,4959],[5906,5908],[5938,5939],[5970,5971],[6002,6003],[6068,6069],[6071,6077],6086,[6089,6099],6109,[6155,6157],6159,[6277,6278],6313,[6432,6434],[6439,6440],6450,[6457,6459],[6679,6680],6683,6742,[6744,6750],6752,6754,[6757,6764],[6771,6780],6783,[6832,6845],[6847,6862],[6912,6915],6964,[6966,6970],6972,6978,[7019,7027],[7040,7041],[7074,7077],[7080,7081],[7083,7085],7142,[7144,7145],7149,[7151,7153],[7212,7219],[7222,7223],[7376,7378],[7380,7392],[7394,7400],7405,7412,[7416,7417],[7616,7679],[8400,8412],8417,[8421,8432],[11503,11505],11647,[11744,11775],[12330,12333],[12441,12442],42607,[42612,42621],[42654,42655],[42736,42737],43010,43014,43019,[43045,43046],43052,[43204,43205],[43232,43249],43263,[43302,43309],[43335,43345],[43392,43394],43443,[43446,43449],[43452,43453],43493,[43561,43566],[43569,43570],[43573,43574],43587,43596,43644,43696,[43698,43700],[43703,43704],[43710,43711],43713,[43756,43757],43766,44005,44008,44013,64286,[65024,65039],[65056,65071],66045,66272,[66422,66426],[68097,68099],[68101,68102],[68108,68111],[68152,68154],68159,[68325,68326],[68900,68903],[69291,69292],[69373,69375],[69446,69456],[69506,69509],69633,[69688,69702],69744,[69747,69748],[69759,69761],[69811,69814],[69817,69818],69826,[69888,69890],[69927,69931],[69933,69940],70003,[70016,70017],[70070,70078],[70089,70092],70095,[70191,70193],70196,[70198,70199],70206,70209,70367,[70371,70378],[70400,70401],[70459,70460],70464,[70502,70508],[70512,70516],[70712,70719],[70722,70724],70726,70750,[70835,70840],70842,[70847,70848],[70850,70851],[71090,71093],[71100,71101],[71103,71104],[71132,71133],[71219,71226],71229,[71231,71232],71339,71341,[71344,71349],71351,[71453,71455],[71458,71461],[71463,71467],[71727,71735],[71737,71738],[71995,71996],71998,72003,[72148,72151],[72154,72155],72160,[72193,72202],[72243,72248],[72251,72254],72263,[72273,72278],[72281,72283],[72330,72342],[72344,72345],[72752,72758],[72760,72765],72767,[72850,72871],[72874,72880],[72882,72883],[72885,72886],[73009,73014],73018,[73020,73021],[73023,73029],73031,[73104,73105],73109,73111,[73459,73460],[73472,73473],[73526,73530],73536,73538,78912,[78919,78933],[92912,92916],[92976,92982],94031,[94095,94098],94180,[113821,113822],[118528,118573],[118576,118598],[119143,119145],[119163,119170],[119173,119179],[119210,119213],[119362,119364],[121344,121398],[121403,121452],121461,121476,[121499,121503],[121505,121519],[122880,122886],[122888,122904],[122907,122913],[122915,122916],[122918,122922],123023,[123184,123190],123566,[123628,123631],[124140,124143],[125136,125142],[125252,125258],[917760,917999]],t.unicodeMnSurrogate={55296:[56829,57056,[57206,57210]],55298:[[56833,56835],[56837,56838],[56844,56847],[56888,56890],56895,[57061,57062]],55299:[[56612,56615],[57003,57004],[57085,57087],[57158,57168],[57218,57221]],55300:[56321,[56376,56390],56432,[56435,56436],[56447,56449],[56499,56502],[56505,56506],56514,[56576,56578],[56615,56619],[56621,56628],56691,[56704,56705],[56758,56766],[56777,56780],56783,[56879,56881],56884,[56886,56887],56894,56897,57055,[57059,57066],[57088,57089],[57147,57148],57152,[57190,57196],[57200,57204]],55301:[[56376,56383],[56386,56388],56390,56414,[56499,56504],56506,[56511,56512],[56514,56515],[56754,56757],[56764,56765],[56767,56768],[56796,56797],[56883,56890],56893,[56895,56896],57003,57005,[57008,57013],57015,[57117,57119],[57122,57125],[57127,57131]],55302:[[56367,56375],[56377,56378],[56635,56636],56638,56643,[56788,56791],[56794,56795],56800,[56833,56842],[56883,56888],[56891,56894],56903,[56913,56918],[56921,56923],[56970,56982],[56984,56985]],55303:[[56368,56374],[56376,56381],56383,[56466,56487],[56490,56496],[56498,56499],[56501,56502],[56625,56630],56634,[56636,56637],[56639,56645],56647,[56720,56721],56725,56727,[57075,57076],[57088,57089],[57142,57146],57152,57154],55309:[56384,[56391,56405]],55322:[[57072,57076],[57136,57142]],55323:[57167,[57231,57234],57316],55343:[[56477,56478]],55347:[[57088,57133],[57136,57158]],55348:[[56679,56681],[56699,56706],[56709,56715],[56746,56749],[56898,56900]],55350:[[56832,56886],[56891,56940],56949,56964,[56987,56991],[56993,57007]],55352:[[56320,56326],[56328,56344],[56347,56353],[56355,56356],[56358,56362],56463,[56624,56630],57006,[57068,57071]],55353:[[56556,56559]],55354:[[56528,56534],[56644,56650]],56128:[[56576,56815]]},t.unicodeMc=[2307,2363,[2366,2368],[2377,2380],[2382,2383],[2434,2435],[2494,2496],[2503,2504],[2507,2508],2519,2563,[2622,2624],2691,[2750,2752],2761,[2763,2764],[2818,2819],2878,2880,[2887,2888],[2891,2892],2903,[3006,3007],[3009,3010],[3014,3016],[3018,3020],3031,[3073,3075],[3137,3140],[3202,3203],3262,[3264,3268],[3271,3272],[3274,3275],[3285,3286],3315,[3330,3331],[3390,3392],[3398,3400],[3402,3404],3415,[3458,3459],[3535,3537],[3544,3551],[3570,3571],[3902,3903],3967,[4139,4140],4145,4152,[4155,4156],[4182,4183],[4194,4196],[4199,4205],[4227,4228],[4231,4236],4239,[4250,4252],5909,5940,6070,[6078,6085],[6087,6088],[6435,6438],[6441,6443],[6448,6449],[6451,6456],[6681,6682],6741,6743,6753,[6755,6756],[6765,6770],6916,6965,6971,[6973,6977],[6979,6980],7042,7073,[7078,7079],7082,7143,[7146,7148],7150,[7154,7155],[7204,7211],[7220,7221],7393,7415,[12334,12335],[43043,43044],43047,[43136,43137],[43188,43203],[43346,43347],43395,[43444,43445],[43450,43451],[43454,43456],[43567,43568],[43571,43572],43597,43643,43645,43755,[43758,43759],43765,[44003,44004],[44006,44007],[44009,44010],44012,69632,69634,69762,[69808,69810],[69815,69816],69932,[69957,69958],70018,[70067,70069],[70079,70080],70094,[70188,70190],[70194,70195],70197,[70368,70370],[70402,70403],[70462,70463],[70465,70468],[70471,70472],[70475,70477],70487,[70498,70499],[70709,70711],[70720,70721],70725,[70832,70834],70841,[70843,70846],70849,[71087,71089],[71096,71099],71102,[71216,71218],[71227,71228],71230,71340,[71342,71343],71350,[71456,71457],71462,[71724,71726],71736,[71984,71989],[71991,71992],71997,72e3,72002,[72145,72147],[72156,72159],72164,72249,[72279,72280],72343,72751,72766,72873,72881,72884,[73098,73102],[73107,73108],73110,[73461,73462],73475,[73524,73525],[73534,73535],73537,[94033,94087],[94192,94193],[119141,119142],[119149,119154]],t.unicodeMcSurrogate={55300:[56320,56322,56450,[56496,56498],[56503,56504],56620,[56645,56646],56706,[56755,56757],[56767,56768],56782,[56876,56878],[56882,56883],56885,[57056,57058],[57090,57091],[57150,57151],[57153,57156],[57159,57160],[57163,57165],57175,[57186,57187]],55301:[[56373,56375],[56384,56385],56389,[56496,56498],56505,[56507,56510],56513,[56751,56753],[56760,56763],56766,[56880,56882],[56891,56892],56894,57004,[57006,57007],57014,[57120,57121],57126],55302:[[56364,56366],56376,[56624,56629],[56631,56632],56637,56640,56642,[56785,56787],[56796,56799],56804,56889,[56919,56920],56983],55303:[56367,56382,56489,56497,56500,[56714,56718],[56723,56724],56726,[57077,57078],57091,[57140,57141],[57150,57151],57153],55323:[[57169,57223],[57328,57329]],55348:[[56677,56678],[56685,56690]]},t.unicodeNd=[[48,57],[1632,1641],[1776,1785],[1984,1993],[2406,2415],[2534,2543],[2662,2671],[2790,2799],[2918,2927],[3046,3055],[3174,3183],[3302,3311],[3430,3439],[3558,3567],[3664,3673],[3792,3801],[3872,3881],[4160,4169],[4240,4249],[6112,6121],[6160,6169],[6470,6479],[6608,6617],[6784,6793],[6800,6809],[6992,7001],[7088,7097],[7232,7241],[7248,7257],[42528,42537],[43216,43225],[43264,43273],[43472,43481],[43504,43513],[43600,43609],[44016,44025],[65296,65305],[66720,66729],[68912,68921],[69734,69743],[69872,69881],[69942,69951],[70096,70105],[70384,70393],[70736,70745],[70864,70873],[71248,71257],[71360,71369],[71472,71481],[71904,71913],[72016,72025],[72784,72793],[73040,73049],[73120,73129],[73552,73561],[92768,92777],[92864,92873],[93008,93017],[120782,120831],[123200,123209],[123632,123641],[124144,124153],[125264,125273],[130032,130041]],t.unicodeNdSurrogate={55297:[[56480,56489]],55299:[[56624,56633]],55300:[[56422,56431],[56560,56569],[56630,56639],[56784,56793],[57072,57081]],55301:[[56400,56409],[56528,56537],[56912,56921],[57024,57033],[57136,57145]],55302:[[56544,56553],[56656,56665]],55303:[[56400,56409],[56656,56665],[56736,56745],[57168,57177]],55322:[[56928,56937],[57024,57033],[57168,57177]],55349:[[57294,57343]],55352:[[56640,56649],[57072,57081]],55353:[[56560,56569]],55354:[[56656,56665]],55358:[[57328,57337]]},t.unicodePc=[95,[8255,8256],8276,[65075,65076],[65101,65103],65343]},58892:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PyrightFileSystem=t.SupportPartialStubs=void 0;const a=n(65940),r=n(93924),s=n(80636),i=n(79284);var o;!function(e){e.is=function(e){return e.isPartialStubPackagesScanned&&e.isPathScanned&&e.processPartialStubPackages&&e.clearPartialStubs}}(o||(t.SupportPartialStubs=o={}));class l extends i.ReadOnlyAugmentedFileSystem{constructor(e){super(e),this._rootSearched=new Set,this._partialStubPackagePaths=new Set}mkdirSync(e,t){this.realFS.mkdirSync(e,t)}chdir(e){this.realFS.chdir(e)}writeFileSync(e,t,n){this.realFS.writeFileSync(this.getOriginalPath(e),t,n)}rmdirSync(e){this.realFS.rmdirSync(this.getOriginalPath(e))}unlinkSync(e){this.realFS.unlinkSync(this.getOriginalPath(e))}createWriteStream(e){return this.realFS.createWriteStream(this.getOriginalPath(e))}copyFileSync(e,t){this.realFS.copyFileSync(this.getOriginalPath(e),this.getOriginalPath(t))}isPartialStubPackagesScanned(e){return!!e.root&&this.isPathScanned(e.root)}isPathScanned(e){return this._rootSearched.has(e.key)}processPartialStubPackages(e,t,n,i){var o;const l=null!=i?i:this._allowMoving.bind(this);for(const i of e){if(this._rootSearched.add(i.key),!this.realFS.existsSync(i)||!(0,s.isDirectory)(this.realFS,i))continue;let e=[];try{e=this.realFS.readdirEntriesSync(i)}catch{}const p=i.equals(n);for(const n of e){const e=i.combinePaths(n.name);if(!(n.isSymbolicLink()?!!(null===(o=(0,s.tryStat)(this.realFS,e))||void 0===o?void 0:o.isDirectory()):n.isDirectory())||!n.name.endsWith(r.stubsSuffix))continue;const c=(0,a.getPyTypedInfo)(this.realFS,e);if(!c||!c.isPartiallyTyped)continue;let d;this._partialStubPackagePaths.add(e.key);const u=n.name.substr(0,n.name.length-r.stubsSuffix.length);for(const n of t){const t=n.combinePaths(u);try{const n=(0,s.tryStat)(this.realFS,t);if(!(null==n?void 0:n.isDirectory()))continue;if(!l(p,(0,a.getPyTypedInfo)(this.realFS,t),c))continue;d=null!=d?d:this._getRelativePathPartialStubs(e);for(const n of d){const a=e.resolvePaths(n),r=t.resolvePaths(n);this.recordMovedEntry(r,a,t)}}catch{}}}}}clearPartialStubs(){super.clear(),this._rootSearched.clear(),this._partialStubPackagePaths.clear()}isMovedEntry(e){return this._partialStubPackagePaths.has(e.key)||super.isMovedEntry(e)}_allowMoving(e,t,n){return!e||(!t||t.isPartiallyTyped)}_getRelativePathPartialStubs(e){const t=[],n=a=>{for(const r of this.realFS.readdirEntriesSync(a)){const i=a.combinePaths(r.name);let o=r.isDirectory(),l=r.isFile();if(r.isSymbolicLink()){const e=(0,s.tryStat)(this.realFS,i);e&&(o=e.isDirectory(),l=e.isFile())}if(o&&n(i),l&&r.name.endsWith(".pyi")){const n=e.getRelativePathComponents(i).join("/");n&&t.push(n)}}};return n(e),t}}t.PyrightFileSystem=l},79284:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ReadOnlyAugmentedFileSystem=void 0;const a=n(28040),r=n(56556);t.ReadOnlyAugmentedFileSystem=class{constructor(e){this.realFS=e,this._entryMap=new Map,this._reverseEntryMap=new Map,this._folderMap=new Map}existsSync(e){return!this.isMovedEntry(e)&&this.realFS.existsSync(this.getOriginalPath(e))}mkdirSync(e,t){throw new Error("Operation is not allowed.")}chdir(e){throw new Error("Operation is not allowed.")}readdirEntriesSync(e){const t=[],n=this._folderMap.get(e.key);return n&&!this.realFS.existsSync(e)||(0,a.appendArray)(t,this.realFS.readdirEntriesSync(e).filter((t=>!this.isMovedEntry(e.combinePaths(t.name))&&!(null==n?void 0:n.some((e=>e.name===t.name)))))),n?t.concat(n.map((e=>new r.VirtualDirent(e.name,e.isFile)))):t}readdirSync(e){return this.readdirEntriesSync(e).map((e=>e.name))}readFileSync(e,t){return this.realFS.readFileSync(this.getOriginalPath(e),t)}writeFileSync(e,t,n){throw new Error("Operation is not allowed.")}statSync(e){return this.realFS.statSync(this.getOriginalPath(e))}rmdirSync(e){throw new Error("Operation is not allowed.")}unlinkSync(e){throw new Error("Operation is not allowed.")}realpathSync(e){return this._entryMap.has(e.key)?e:this.realFS.realpathSync(e)}getModulePath(){return this.realFS.getModulePath()}createFileSystemWatcher(e,t){return this.realFS.createFileSystemWatcher(e,t)}createReadStream(e){return this.realFS.createReadStream(this.getOriginalPath(e))}createWriteStream(e){throw new Error("Operation is not allowed.")}copyFileSync(e,t){throw new Error("Operation is not allowed.")}readFile(e){return this.realFS.readFile(this.getOriginalPath(e))}readFileText(e,t){return this.realFS.readFileText(this.getOriginalPath(e),t)}realCasePath(e){return this.realFS.realCasePath(e)}isMappedUri(e){return this._entryMap.has(e.key)||this.realFS.isMappedUri(e)}getOriginalUri(e){return this.realFS.getOriginalUri(this.getOriginalPath(e))}getMappedUri(e){var t;const n=this.realFS.getMappedUri(e);return null!==(t=this._reverseEntryMap.get(n.key))&&void 0!==t?t:n}isInZip(e){return this.realFS.isInZip(e)}recordMovedEntry(e,t,n){this._entryMap.set(e.key,t),this._reverseEntryMap.set(t.key,e);const r=e.getDirectory(),s=(0,a.getOrAdd)(this._folderMap,r.key,(()=>[])),i=e.fileName;s.some((e=>e.name===i))||s.push({name:i,isFile:!0});const o=n.getRelativePathComponents(r);for(let e=0;e<o.length;e++){const t=n.combinePaths(...o.slice(0,e+1)),r=t.getDirectory().key,s=(0,a.getOrAdd)(this._folderMap,r,(()=>[])),i=t.fileName;s.some((e=>e.name===i))||s.push({name:i,isFile:!1})}}getOriginalPath(e){var t;return null!==(t=this._entryMap.get(e.key))&&void 0!==t?t:e}isMovedEntry(e){return this._reverseEntryMap.has(e.key)}clear(){this._entryMap.clear(),this._reverseEntryMap.clear(),this._folderMap.clear()}}},20840:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceFactory=t.createInitStatus=t.WorkspacePythonPathKind=t.WellKnownWorkspaceKinds=void 0;const a=n(85696),r=n(55084);let s=0;var i,o;function l(){let e=!1;const t=(0,a.createDeferred)(),n={promise:t.promise,resolve:()=>{e=!0,t.resolve()},markCalled:()=>{e=!0},reset:()=>e?l():n,resolved:()=>t.resolved};return n}!function(e){e.Default="default",e.Regular="regular",e.Limited="limited",e.Cloned="cloned",e.Test="test"}(i||(t.WellKnownWorkspaceKinds=i={})),function(e){e.Immutable="immutable",e.Mutable="mutable"}(o||(t.WorkspacePythonPathKind=o={})),t.createInitStatus=l;function p(e){return!!e.rootUri}t.WorkspaceFactory=class{constructor(e,t,n,a,r,i,o){this._console=e,this._isWeb=t,this._createService=n,this._isPythonPathImmutable=a,this._onWorkspaceCreated=r,this._onWorkspaceRemoved=i,this._serviceProvider=o,this._defaultWorkspacePath="<default>",this._map=new Map,this._id=s++,this._console.log(`WorkspaceFactory ${this._id} created`)}handleInitialize(e){e.workspaceFolders?e.workspaceFolders.forEach((e=>{this._add(r.Uri.parse(e.uri,this._serviceProvider),e.name,void 0,o.Mutable,[i.Regular])})):e.rootPath&&this._add(r.Uri.file(e.rootPath,this._serviceProvider),"",void 0,o.Mutable,[i.Regular])}handleWorkspaceFoldersChanged(e){e.removed.forEach((e=>{const t=r.Uri.parse(e.uri,this._serviceProvider);this.getNonDefaultWorkspaces().filter((e=>e.rootUri.equals(t))).forEach((e=>{this._remove(e)}))})),e.added.forEach((e=>{const t=r.Uri.parse(e.uri,this._serviceProvider),n=this.items().filter((e=>t.startsWith(e.rootUri)))[0],a=this._add(t,e.name,void 0,o.Mutable,[i.Regular]);n&&this._mimicOpenFiles(n,a,(e=>e.startsWith(t)))}))}items(){return Array.from(this._map.values())}applyPythonPath(e,t){if(e.pythonPathKind===o.Mutable&&t){const n=e.pythonPath;e.pythonPath=t;const a=this._getWorkspaceKey(e),r=this._map.get(a);r&&(r.pythonPath=t),n&&!t.equals(n)&&r&&this._moveImmutableFilesToCorrectWorkspace(n,r)}return e.pythonPath}clear(){this._map.forEach((e=>{e.isInitialized.resolve(),e.service.dispose()})),this._map.clear(),this._console.log(`WorkspaceFactory ${this._id} clear`)}hasMultipleWorkspaces(e){if(0===this._map.size||1===this._map.size)return!1;let t=0;for(const n of this._map)if(e&&!n[1].kinds.some((t=>t===e))||t++,t>1)return!0;return!1}getContainingWorkspace(e,t){return this._getBestRegularWorkspace(this.getNonDefaultWorkspaces(i.Regular).filter((t=>e.startsWith(t.rootUri))),t)}moveFiles(e,t,n){if(t!==n)try{e.forEach((e=>{var a,r;const s=t.service.backgroundAnalysisProgram.program.getSourceFileInfo(e);if(s){const i=null!==(a=s.sourceFile.getClientVersion())&&void 0!==a?a:null,o=s.sourceFile.getFileContent()||"",l=s.sourceFile.getIPythonMode(),p=null===(r=s.chainedSourceFile)||void 0===r?void 0:r.sourceFile.getUri();t.service.setFileClosed(e,!1),n.service.setFileOpened(e,i,o,l,p)}})),this.removeUnused(t)}catch(e){this._console.error(e.toString())}}getNonDefaultWorkspaces(e){const t=[];return this._map.forEach((n=>{n.rootUri&&(e&&!n.kinds.some((t=>t===e))||t.push(n))})),t}async getWorkspaceForFile(e,t){await Promise.all(this.items().map((e=>e.isInitialized.promise)));const n=await this._getOrCreateBestWorkspaceForFile(e,t);return await n.isInitialized.promise,n}getWorkspaceForFileSync(e,t){return this._getOrCreateBestWorkspaceFileSync(e,t)}async getContainingWorkspacesForFile(e){await Promise.all(this.items().map((e=>e.isInitialized.promise)));const t=this.getContainingWorkspacesForFileSync(e);return await Promise.all(t.map((e=>e.isInitialized.promise))),t}getContainingWorkspacesForFileSync(e){let t=this.items().filter((t=>t.service.isTracked(e)));return 0===t.length&&t.push(this._getOrCreateBestWorkspaceFileSync(e,void 0)),this._isPythonPathImmutable(e)&&(t=t.filter((e=>e.pythonPathKind===o.Immutable))),t}removeUnused(e){0===e.service.getOpenFiles().filter((e=>this._isPythonPathImmutable(e))).length&&e.pythonPathKind===o.Immutable&&this._remove(e)}async _moveImmutableFilesToCorrectWorkspace(e,t){var n;const a=t.service.getOpenFiles().filter((e=>this._isPythonPathImmutable(e))),r=this.items().find((e=>e.pythonPath===t.pythonPath&&e!==t)),s=null!==(n=null==r?void 0:r.service.getOpenFiles().filter((e=>this._isPythonPathImmutable(e))))&&void 0!==n?n:[];if(a.length>0){const n=this._getOrCreateBestWorkspaceFileSync(a[0],e);n!==t&&this.moveFiles(a,t,n)}r&&(this.moveFiles(s,r,t),this.removeUnused(r))}_add(e,t,n,a,s){const o=null!=e?e:r.Uri.empty();s.includes(i.Default)||o.isLocal()&&!this._isWeb||(s=[...s,i.Limited]);const p={workspaceName:t,rootUri:e,kinds:s,pythonPath:n,pythonPathKind:a,service:this._createService(t,o,s),disableLanguageServices:!1,disableTaggedHints:!1,disableOrganizeImports:!1,disableWorkspaceSymbol:!1,isInitialized:l(),searchPathsToWatch:[],pythonEnvironmentName:null==n?void 0:n.toString()},c=this._getWorkspaceKey(p);return this._remove(p),this._console.log(`WorkspaceFactory ${this._id} add ${c}`),this._map.set(c,p),this._onWorkspaceCreated(p),p}_remove(e){const t=this._getWorkspaceKey(e),n=this._map.get(t);n&&(n.isInitialized.resolve(),this._onWorkspaceRemoved(n),n.service.dispose(),this._console.log(`WorkspaceFactory ${this._id} remove ${t}`),this._map.delete(t))}_getDefaultWorkspaceKey(e){return`${this._defaultWorkspacePath}:${void 0!==e?e:o.Mutable}`}_getWorkspaceKey(e){return`${e.kinds.includes(i.Default)?this._defaultWorkspacePath:e.rootUri}:${e.pythonPathKind===o.Mutable?e.pythonPathKind:e.pythonPath}`}async _getOrCreateBestWorkspaceForFile(e,t){var n;let a=this._getBestWorkspaceForFile(e,t);return await a.isInitialized.promise,void 0===t||(null===(n=a.pythonPath)||void 0===n?void 0:n.equals(t))||(a=this._createImmutableCopy(a,t)),a}_getOrCreateBestWorkspaceFileSync(e,t){var n;let a=this._getBestWorkspaceForFile(e,t);return void 0===t||(null===(n=a.pythonPath)||void 0===n?void 0:n.equals(t))||(a=this._createImmutableCopy(a,t)),a}_mimicOpenFiles(e,t,n){var a;const r=e.service.getOpenFiles().filter((e=>!this._isPythonPathImmutable(e)));for(const s of r){const r=e.service.backgroundAnalysisProgram.program.getSourceFileInfo(s);if(r&&n(s)){const e=r.sourceFile,n=e.getFileContent();t.service.setFileOpened(s,e.getClientVersion()||null,n||"",e.getIPythonMode(),null===(a=r.chainedSourceFile)||void 0===a?void 0:a.sourceFile.getUri())}}}_createImmutableCopy(e,t){const n=this._add(e.rootUri,e.workspaceName,t,o.Immutable,e.kinds);return this._mimicOpenFiles(e,n,(()=>!0)),n}_getBestWorkspaceForFile(e,t){var n;let a;const r=this.getNonDefaultWorkspaces(i.Regular),s=this.items().filter((t=>t.service.isTracked(e))).filter(p);return a=this._getBestRegularWorkspace(s,t),void 0===a&&r.every((e=>e.rootUri.getPathLength()===r[0].rootUri.getPathLength()))&&(a=this._getBestRegularWorkspace(r,t)),void 0!==a&&(null===(n=a.pythonPath)||void 0===n?void 0:n.equals(t))||(a=this._getBestRegularWorkspace(r.filter((t=>t.service.hasSourceFile(e))),t)||a),void 0===a&&(a=this._getOrCreateDefaultWorkspace(t)),a}_getOrCreateDefaultWorkspace(e){let t=this._map.get(this._getDefaultWorkspaceKey(e));return t||(t=this._add(void 0,this._defaultWorkspacePath,e,void 0!==e?o.Immutable:o.Mutable,[i.Default])),t}_getLongestPathWorkspace(e){const t=e.reduce(((e,t)=>e?t.rootUri.getPathLength()>e.getPathLength()?t.rootUri:e:t.rootUri),r.Uri.empty());return e.find((e=>e.rootUri===t))}_getBestRegularWorkspace(e,t){if(0!==e.length){if(1===e.length)return e[0];if(void 0!==t){const n=e.filter((e=>e.pythonPath===t));if(n.length>0)return this._getLongestPathWorkspace(n)}return this._getLongestPathWorkspace(e)}}}},82080:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Vytvořit zástupná procedura typu","createTypeStubFor":"Vytvořit zástupnou proceduru typu pro modul {moduleName}","executingCommand":"Spouští se příkaz","filesToAnalyzeCount":"Počet souborů k analýze: {count}","filesToAnalyzeOne":"1 soubor k analýze","findingReferences":"Hledají se odkazy","organizeImports":"Uspořádat direktivy Import","renameShadowedFile":"Přejmenovat „{oldFile}“ na „{newFile}“"},"Completion":{"autoImportDetail":"Automatický import","indexValueDetail":"Hodnota indexu"},"Diagnostic":{"abstractMethodInvocation":"Metodu „{method}“ nelze volat, protože je abstraktní a neimplementovaná.","annotatedParamCountMismatch":"Počet poznámek parametrů se neshoduje: očekával(o/y) se {expected}, ale přijal(o/y) se {received}.","annotatedTypeArgMissing":"Byl očekáván jeden argument typu a jedna nebo více poznámek pro Annotated","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Poznámky typu nemůžou používat formátovací řetězcové literály (f-strings)","annotationNotSupported":"Poznámka typu není pro tento příkaz podporována","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Poznámky typu nemůžou zahrnovat více řetězcových literálů","annotationStringEscape":"Poznámky typu nemůžou obsahovat řídicí znaky","argAssignment":"Argument typu {argType} není možné přiřadit k parametru typu {paramType}","argAssignmentFunction":"Argument typu {argType} není možné přiřadit k parametru typu {paramType} ve funkci {functionName}","argAssignmentParam":"Argument typu {argType} není možné přiřadit k parametru {paramName} typu {paramType}","argAssignmentParamFunction":"Argument typu {argType} není možné přiřadit k parametru {paramName} typu {paramType} ve funkci {functionName}","argMissingForParam":"Chybí argument pro parametr {name}","argMissingForParams":"Chybí argumenty pro parametry {names}","argMorePositionalExpectedCount":"Očekával se tento počet dalších pozičních argumentů: {expected}","argMorePositionalExpectedOne":"Očekával se 1 další poziční argument","argPositional":"Očekávaný poziční argument","argPositionalExpectedCount":"Očekávaný počet pozičních argumentů: {expected}","argPositionalExpectedOne":"Očekával se 1 poziční argument","argTypePartiallyUnknown":"Typ argumentu je částečně neznámý","argTypeUnknown":"Typ argumentu je neznámý","assertAlwaysTrue":"Výraz Assert se vždy vyhodnotí jako true","assertTypeArgs":"assert_type očekává dva poziční argumenty","assertTypeTypeMismatch":"Neshoda assert_type: očekávalo se {expected}, ale přijalo se {received}","assignmentExprComprehension":"Cíl výrazu přiřazení „{name}“ nemůže používat stejný název jako porozumění cíli","assignmentExprContext":"Výraz přiřazení musí být uvnitř modulu, funkce nebo výrazu lambda","assignmentExprInSubscript":"Výrazy přiřazení v dolním indexu se podporují jenom v Pythonu 3.10 a novějším","assignmentInProtocol":"Proměnné instance nebo třídy v rámci třídy Protocol musí být explicitně deklarovány v těle třídy","assignmentTargetExpr":"Výraz nemůže být cílem přiřazení","asyncNotInAsyncFunction":"Použití „async“ není povolené mimo funkci async","awaitIllegal":"Použití operátoru await vyžaduje Python 3.5 nebo novější","awaitNotAllowed":"Poznámky typu nemůžou používat „await“.","awaitNotInAsync":"Operátor await je povolený jenom v rámci asynchronní funkce","backticksIllegal":"V Pythonu 3.x nejsou podporovány výrazy obklopené zpětnými tečkami; místo toho použijte repr","baseClassCircular":"Třída se nemůže odvozovat od sebe sama","baseClassFinal":"Základní třída {type} je označená jako final a nemůže být podtřídou","baseClassIncompatible":"Základní třídy typu {type} jsou vzájemně nekompatibilní","baseClassInvalid":"Argument třídy musí být základní třída","baseClassMethodTypeIncompatible":"Základní třídy pro třídu {classType} definují metodu {name} nekompatibilním způsobem","baseClassUnknown":"Typ základní třídy je neznámý, co zakrývá typ odvozené třídy","baseClassVariableTypeIncompatible":"Základní třídy pro třídu {classType} definují proměnnou {name} nekompatibilním způsobem","binaryOperationNotAllowed":"Binární operátor není v poznámce typu povolený","bindTypeMismatch":"Nepovedlo se vytvořit vazbu metody „{methodName}“, protože „{type}“ nejde přiřadit k parametru „{paramName}“","breakOutsideLoop":"„break“ se dá použít jenom ve smyčce","callableExtraArgs":"Pro Callable se očekávaly pouze dva argumenty typu","callableFirstArg":"Očekával se seznam typů parametrů nebo ...","callableNotInstantiable":"Není možné vytvořit instanci typu {type}","callableSecondArg":"Očekával se návratový typ jako druhý argument typu pro Callable","casePatternIsIrrefutable":"Nevyvratitelný vzorec je povolený jenom pro poslední výraz velikosti písmen","classAlreadySpecialized":"Typ {type} je už specializovaný","classDecoratorTypeUnknown":"Dekoratér netypové třídy překrývá typ třídy. dekoratér se ignoruje","classDefinitionCycle":"Definice třídy pro „{name}“ závisí sama na sobě","classGetItemClsParam":"Přepsání __class_getitem__ by mělo mít parametr cls","classMethodClsParam":"Metody třídy by měly mít parametr „cls“","classNotRuntimeSubscriptable":"Dolní index pro třídu {name} vygeneruje výjimku modulu runtime; anotaci typu uzavřete do uvozovek","classPatternBuiltInArgPositional":"Vzor třídy přijímá pouze poziční dílčí vzor","classPatternPositionalArgCount":"Příliš mnoho pozičních vzorů pro třídu \\"{type}\\"; očekávalo se {expected}, ale přijalo se {received}","classPatternTypeAlias":"Typ „{type}“ nelze použít ve vzorci třídy, protože se jedná o specializovaný alias typu","classPropertyDeprecated":"Vlastnosti třídy jsou v Pythonu 3.11 zastaralé a v Pythonu 3.13 se nebudou podporovat.","classTypeParametersIllegal":"Syntaxe parametru typu třídy vyžaduje Python 312 nebo novější","classVarFirstArgMissing":"Za ClassVar byl očekáván argument typu","classVarNotAllowed":"ClassVar se v tomto kontextu nepovoluje","classVarOverridesInstanceVar":"Proměnná třídy {name} přepíše proměnnou instance se stejným názvem ve třídě {className}","classVarTooManyArgs":"Za „ClassVar“ byl očekáván pouze jeden argument typu","classVarWithTypeVar":"Typ ClassVar nemůže obsahovat proměnné typu","clsSelfParamTypeMismatch":"Typ parametru „{name}“ musí být nadtyp třídy „{classType}“","codeTooComplexToAnalyze":"Kód je příliš složitý na analýzu; snižte složitost refaktorizací do podprogramů nebo redukcí podmíněných cest kódu","collectionAliasInstantiation":"Nelze vytvořit instanci typu „{type}“. Použijte místo toho „{alias}“","comparisonAlwaysFalse":"Podmínka se vždy vyhodnotí jako False, protože typy {leftType} a {rightType} se nepřekrývají","comparisonAlwaysTrue":"Podmínka se vždy vyhodnotí jako True, protože typy {leftType} a {rightType} se nepřekrývají","comprehensionInDict":"Porozumění není možné použít s jinými položkami slovníku","comprehensionInSet":"Porozumění nelze použít s jinými položkami sady","concatenateContext":"Možnost „Concatenate“ není v tomto kontextu povolená.","concatenateParamSpecMissing":"Poslední argument typu pro „Concatenate“ musí být „ParamSpec“ nebo „...“","concatenateTypeArgsMissing":"Možnost „Concatenate“ vyžaduje alespoň dva argumenty typu","conditionalOperandInvalid":"Neplatný podmíněný operand typu {type}","constantRedefinition":"„{name}“ je konstanta (protože je velkými písmeny) a nedá se předefinovat","constructorNoArgs":"Pro konstruktor {type} nebyly očekávány žádné argumenty","constructorParametersMismatch":"Neshoda mezi signaturou __new__ a __init__ ve třídě“ {classType}“","containmentAlwaysFalse":"Výraz se vždy vyhodnotí jako False, protože typy „{leftType}“ a „{rightType}“ se nepřekrývají","containmentAlwaysTrue":"Výraz se vždy vyhodnotí jako True, protože typy „{leftType}“ a „{rightType}“ se nepřekrývají.","continueInFinally":"continue není možné použít v klauzuli finally","continueOutsideLoop":"continue se dá použít jenom ve smyčce","coroutineInConditionalExpression":"Podmíněný výraz odkazuje na korutinu, která se vždy vyhodnotí jako True.","dataClassBaseClassFrozen":"Nezablokovaná třída nemůže dědit z zmrazené třídy","dataClassBaseClassNotFrozen":"Zablokovaná třída nemůže dědit z třídy, která není zablokovaná","dataClassConverterFunction":"Argument typu {argType} není platný převaděč pro pole {fieldName} typu {fieldType}","dataClassConverterOverloads":"Žádná přetížení {funcName} nejsou platné převaděče pro pole {fieldName} typu {fieldType}","dataClassFieldWithDefault":"Pole bez výchozích hodnot se nemůžou zobrazit po polích s výchozími hodnotami","dataClassFieldWithPrivateName":"Pole datové třídy nemůže používat privátní název","dataClassFieldWithoutAnnotation":"Pole dataclass bez poznámky typu způsobí výjimku modulu runtime","dataClassPostInitParamCount":"Datová třída __post_init__ má nesprávný počet parametrů; počet polí InitVar je {expected}","dataClassPostInitType":"Neshoda typu parametru metody __post_init__ datové třídy pro pole {fieldName}","dataClassSlotsOverwrite":"__slots__ je už ve třídě definovaný","dataClassTransformExpectedBoolLiteral":"Očekával se výraz, který se staticky vyhodnotí jako True nebo False","dataClassTransformFieldSpecifier":"Očekávala se řazená kolekce členů tříd nebo funkcí, ale přijatý typ „{type}“","dataClassTransformPositionalParam":"Všechny argumenty dataclass_transform musí být argumenty klíčových slov","dataClassTransformUnknownArgument":"Argument {name} není v dataclass_transform podporován","dataProtocolInSubclassCheck":"Datové protokoly (které zahrnují atributy bez metody) nejsou ve voláních issubclass povolené.","declaredReturnTypePartiallyUnknown":"Deklarovaný návratový typ {returnType} je částečně neznámý","declaredReturnTypeUnknown":"Deklarovaný návratový typ je neznámý","defaultValueContainsCall":"Volání funkcí a měnitelné objekty nejsou povoleny ve výrazu výchozí hodnoty parametru","defaultValueNotAllowed":"Parametr s * nebo ** nemůže mít výchozí hodnotu","delTargetExpr":"Výraz se nedá odstranit","deprecatedClass":"Třída {name} je zastaralá","deprecatedConstructor":"Konstruktor pro třídu {name} je zastaralý","deprecatedDescriptorDeleter":"Metoda „__delete__“ pro popisovač „{name}“ je zastaralá","deprecatedDescriptorGetter":"Metoda „__get__“ pro popisovač „{name}“ je zastaralá","deprecatedDescriptorSetter":"Metoda „__set__“ pro popisovač „{name}“ je zastaralá","deprecatedFunction":"Funkce {name} je zastaralá.","deprecatedMethod":"Metoda {name} ve třídě {className} je zastaralá.","deprecatedPropertyDeleter":"Odstraňovač pro vlastnost „{name}“ je zastaralý","deprecatedPropertyGetter":"Metoda getter pro vlastnost „{name}“ je zastaralá","deprecatedPropertySetter":"Metoda setter pro vlastnost „{name}“ je zastaralá","deprecatedType":"Tento typ je zastaralý jako Python {version}; místo toho použijte {replacement}","dictExpandIllegalInComprehension":"Rozšíření slovníku není v porozumění povoleno","dictInAnnotation":"Výraz slovníku není v poznámce typu povolený","dictKeyValuePairs":"Položky slovníku musí obsahovat páry klíč/hodnota","dictUnpackIsNotMapping":"Očekávalo se mapování pro operátor rozbalení slovníku","dunderAllSymbolNotPresent":"{name} je zadáno v __all__, ale v modulu se nenachází","duplicateArgsParam":"Je povolený jenom jeden parametr *","duplicateBaseClass":"Duplicitní základní třída není povolena","duplicateCapturePatternTarget":"Cíl zachytávání {name} se v rámci stejného vzoru nemůže vyskytovat více než jednou","duplicateCatchAll":"Je povolena pouze jedna klauzule catch-all except","duplicateEnumMember":"Člen výčtu {name} je už deklarovaný","duplicateGenericAndProtocolBase":"Je povolena pouze jedna základní třída Generic nebo Protocol**","duplicateImport":"Import {importName} je importován více než jednou","duplicateKeywordOnly":"Je povolený jenom jeden oddělovač *","duplicateKwargsParam":"Je povolený jenom jeden parametr **","duplicateParam":"duplicitní parametr {name}","duplicatePositionOnly":"Je povolený jenom jeden parametr „/“","duplicateStarPattern":"V sekvenci vzorů je povolený jenom jeden vzor „*“","duplicateStarStarPattern":"Je povolena pouze jedna položka „**“","duplicateUnpack":"V seznamu je povolena pouze jedna operace rozbalení","ellipsisAfterUnpacked":"„…“ nelze použít s rozbalenou kolekcí TypeVarTuple nebo řazenou kolekcí členů.","ellipsisContext":"„...“ se v tomto kontextu nepovoluje","ellipsisSecondArg":"„...“ je povoleno pouze jako druhý ze dvou argumentů","enumClassOverride":"Třída výčtu {name} je konečná a nemůže být podtřídou","exceptionGroupIncompatible":"Syntaxe skupiny výjimek (except*) vyžaduje Python 3.11 nebo novější","exceptionTypeIncorrect":"„{type}“ se neodvozuje od BaseException","exceptionTypeNotClass":"{type} není platná třída výjimky","exceptionTypeNotInstantiable":"Konstruktor pro výjimku typu {type} vyžaduje jeden nebo více argumentů","expectedAfterDecorator":"Očekávaná deklarace funkce nebo třídy po dekoratéru","expectedArrow":"Byl očekáván znak -> následovaný anotací návratového typu","expectedAsAfterException":"Za typem výjimky byl očekáván znak „as“","expectedAssignRightHandExpr":"Byl očekáván výraz napravo od znaku =","expectedBinaryRightHandExpr":"Očekával se výraz napravo od operátoru","expectedBoolLiteral":"Očekávala se hodnota True nebo False","expectedCase":"Očekával se příkaz case","expectedClassName":"Očekával se název třídy","expectedCloseBrace":"{ nebyla uzavřena","expectedCloseBracket":"[ nebyla uzavřena","expectedCloseParen":"( nebyla uzavřena","expectedColon":"Očekával se znak :","expectedComplexNumberLiteral":"Očekával se komplexní číselný literál pro porovnávání vzorů","expectedDecoratorExpr":"Forma výrazu není podporována pro dekorátor před verzí Python 3.9","expectedDecoratorName":"Očekával se název dekoratéru","expectedDecoratorNewline":"Na konci dekoratéru byl očekáván nový řádek","expectedDelExpr":"Za del se očekával výraz","expectedElse":"Očekávalo se else","expectedEquals":"Očekával se znak =","expectedExceptionClass":"Neplatná třída nebo objekt výjimky","expectedExceptionObj":"Byl očekáván objekt výjimky, třída výjimky nebo None","expectedExpr":"Očekávaný výraz","expectedFunctionAfterAsync":"Očekávaná definice funkce po „async“","expectedFunctionName":"Za def se očekával název funkce","expectedIdentifier":"Očekávaný identifikátor","expectedImport":"Očekával se import","expectedImportAlias":"Za as byl očekáván symbol","expectedImportSymbols":"Po importu se očekával jeden nebo více názvů symbolů","expectedIn":"Očekávalo se in","expectedInExpr":"Za in byl očekáván výraz","expectedIndentedBlock":"Očekával se odsazený blok","expectedMemberName":"Za znakem . byl očekáván název člena","expectedModuleName":"Očekávaný název modulu","expectedNameAfterAs":"Za „as“ se očekával název symbolu","expectedNamedParameter":"Parametr klíčového slova musí následovat za znakem *","expectedNewline":"Očekával se nový řádek","expectedNewlineOrSemicolon":"Příkazy musí být oddělené novými řádky nebo středníky","expectedOpenParen":"Očekával se znak „(“","expectedParamName":"Očekával se název parametru","expectedPatternExpr":"Očekávaný výraz vzoru","expectedPatternSubjectExpr":"Očekávaný výraz předmětu vzoru","expectedPatternValue":"Očekávaný výraz hodnoty vzoru ve formátu a.b","expectedReturnExpr":"Za return se očekával výraz","expectedSliceIndex":"Očekávaný výraz indexu nebo řezu","expectedTypeNotString":"Očekával se typ, ale přijal se řetězcový literál","expectedTypeParameterName":"Očekávaný název parametru typu","expectedYieldExpr":"Očekávaný výraz v příkazu yield","finalClassIsAbstract":"Třída „{type}“ je označená jako konečná a musí implementovat všechny abstraktní symboly","finalContext":"Final se v tomto kontextu nepovoluje","finalMethodOverride":"Metoda {name} nemůže přepsat konečnou metodu definovanou ve třídě {className}","finalNonMethod":"Funkci „{name}“ nelze označit @final, protože se nejedná o metodu.","finalReassigned":"„{name}“ se deklaruje jako Final a nedá se znovu přiřadit","finalRedeclaration":"{name} se dříve deklarovalo jako Final","finalRedeclarationBySubclass":"{name} se nedá deklarovat znovu, protože nadřazená třída {className} ji deklaruje jako final","finalTooManyArgs":"Za Final byl očekáván jeden argument typu","finalUnassigned":"{name} se deklaruje jako final, ale hodnota není přiřazená","formatStringBrace":"Jednoduchá pravá složená závorka není v literálu f-string povolena. použijte dvojitou pravou složenou závorku","formatStringBytes":"Formátovací řetězcové literály (f-strings) nemůžou být binární","formatStringDebuggingIllegal":"Specifikátor ladění F-string „=“ vyžaduje Python 3.8 nebo novější","formatStringEscape":"Řídicí sekvence (zpětné lomítko) není povolená v části výrazu f-string před Python 3.12","formatStringExpectedConversion":"V řetězci f-string byl za znakem ! očekáván specifikátor převodu","formatStringIllegal":"Formátovací řetězcové literály (f-string) vyžadují Python 3.6 nebo novější","formatStringInPattern":"Formátovací řetězec není ve vzoru povolený","formatStringNestedFormatSpecifier":"Příliš hluboko vnořené výrazy v rámci specifikátoru formátovacího řetězce","formatStringNestedQuote":"Řetězce vnořené v řetězci f-string nemůžou používat stejný znak uvozovek jako řetězec f-string před Python 3.12","formatStringUnicode":"Formátovací řetězcové literály (f-strings) nemůžou být unicode","formatStringUnterminated":"Neukončený výraz v f-string; očekává se „}“","functionDecoratorTypeUnknown":"Dekorátor netypové funkce překrývá typ funkce; ignoruje se dekoratér","functionInConditionalExpression":"Podmíněný výraz odkazuje na funkci, která se vždy vyhodnotí jako True","functionTypeParametersIllegal":"Syntaxe parametru typu funkce vyžaduje Python 3.12 nebo novější","futureImportLocationNotAllowed":"Importy z __future__ musí být na začátku souboru","generatorAsyncReturnType":"Návratový typ funkce asynchronního generátoru musí být kompatibilní s typem AsyncGenerator[{yieldType}, Any]","generatorNotParenthesized":"Výrazy generátoru musí být v závorkách, pokud nejsou jediným argumentem","generatorSyncReturnType":"Návratový typ funkce generátoru musí být kompatibilní s Generator[{yieldType}, Any, Any]","genericBaseClassNotAllowed":"Základní třídu „Generic“ nejde použít se syntaxí parametru typu","genericClassAssigned":"Obecný typ třídy není možné přiřadit","genericClassDeleted":"Obecný typ třídy nelze odstranit","genericInstanceVariableAccess":"Přístup k obecné proměnné instance prostřednictvím třídy je nejednoznačný.","genericNotAllowed":"Generic není v tomto kontextu platný","genericTypeAliasBoundTypeVar":"Alias obecného typu v rámci třídy nemůže používat proměnné vázaného typu {names}","genericTypeArgMissing":"Generic vyžaduje alespoň jeden argument typu","genericTypeArgTypeVar":"Argument typu pro Generic musí být proměnná typu","genericTypeArgUnique":"Argumenty typu pro Generic musí být jedinečné","globalReassignment":"{name} je přiřazen před globální deklarací","globalRedefinition":"Název {name} už je deklarován jako globální","implicitStringConcat":"Implicitní zřetězení řetězců není povolené","importCycleDetected":"V řetězci importu byl zjištěn cyklus","importDepthExceeded":"Hloubka řetězu importu překročila {depth}","importResolveFailure":"Import {importName} se nepovedlo vyřešit","importSourceResolveFailure":"Import {importName} se nepovedlo přeložit ze zdroje","importSymbolUnknown":"{name} je neznámý symbol importu","incompatibleMethodOverride":"Metoda {name} přepisuje třídu {className} nekompatibilním způsobem","inconsistentIndent":"Množství zrušeného odsazení neodpovídá předchozímu odsazení","inconsistentTabs":"Nekonzistentní použití tabulátorů a mezer v odsazení","initMustReturnNone":"Návratový typ __init__ musí být None","initSubclassCallFailed":"Nesprávné argumenty klíčového slova pro metodu __init_subclass__","initSubclassClsParam":"Přepsání __init_subclass__ by mělo mít parametr cls","initVarNotAllowed":"InitVar se v tomto kontextu nepovoluje.","instanceMethodSelfParam":"Metody instance by měly mít parametr self","instanceVarOverridesClassVar":"Proměnná instance „{name}“ přepíše proměnnou třídy se stejným názvem ve třídě „{className}“","instantiateAbstract":"Nelze vytvořit instanci abstraktní třídy „{type}“","instantiateProtocol":"Nelze vytvořit instanci třídy protokolu „{type}“","internalBindError":"Při vytváření vazby souboru {file} došlo k vnitřní chybě: {message}","internalParseError":"Při analýze souboru {file} došlo k vnitřní chybě: {message}","internalTypeCheckingError":"Při kontrole typu souboru {file} došlo k vnitřní chybě: {message}","invalidIdentifierChar":"Neplatný znak v identifikátoru","invalidStubStatement":"Příkaz je v souboru zástupné procedury typu bezvýznamný","invalidTokenChars":"Neplatný znak „{text}“ v tokenu","isInstanceInvalidType":"Druhý argument pro „isinstance“ musí být třída nebo řazená kolekce členů tříd","isSubclassInvalidType":"Druhý argument pro issubclass musí být třída nebo řazená kolekce členů tříd","keyValueInSet":"Páry klíč-hodnota nejsou v rámci sady povoleny","keywordArgInTypeArgument":"Argumenty klíčových slov nelze použít v seznamech argumentů typu","keywordOnlyAfterArgs":"Oddělovač argumentů jen pro klíčová slova není povolený za parametrem *","keywordParameterMissing":"Jeden nebo více parametrů klíčového slova musí následovat za parametrem „*“","keywordSubscriptIllegal":"Argumenty klíčových slov v dolních indexech nejsou podporovány","lambdaReturnTypePartiallyUnknown":"Návratový typ lambda {returnType} je částečně neznámý","lambdaReturnTypeUnknown":"Návratový typ výrazu lambda je neznámý","listAssignmentMismatch":"Výraz s typem {type} se nedá přiřadit k cílovému seznamu","listInAnnotation":"Výraz seznamu není v poznámce typu povolený","literalEmptyArgs":"Za literálem se očekával jeden nebo více argumentů typu","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"„Literal“ nejde v tomto kontextu použít bez argumentu typu.","literalNotCallable":"Není možné vytvořit instanci typu literálu","literalUnsupportedType":"Argumenty typu pro Literal musí být None, hodnota literálu (int, bool, str nebo bytes) nebo hodnota výčtu","matchIncompatible":"Příkazy match vyžadují Python 3.10 nebo novější","matchIsNotExhaustive":"Případy v rámci příkazu match nezpracovávají kompletně všechny hodnoty","maxParseDepthExceeded":"Byla překročena maximální hloubka analýzy; rozdělte výraz na dílčí výrazy","memberAccess":"Není možné získat přístup ke členu {name} pro typ {type}","memberDelete":"Není možné odstranit člena {name} pro typ {type}","memberSet":"Nelze přiřadit člena „{name}“ pro typ „{type}“","metaclassConflict":"Metatřída odvozené třídy musí být podtřídou metatříd všech jejích základních tříd","metaclassDuplicate":"Je možné zadat pouze jednu metatřídu","metaclassIsGeneric":"Metatřída nemůže být obecná","methodNotDefined":"Metoda {name} není definována","methodNotDefinedOnType":"Metoda {name} není u typu {type} definována","methodOrdering":"Není možné vytvořit konzistentní řazení metod","methodOverridden":"„{name}“ přepisuje metodu se stejným názvem ve třídě „{className}“ s nekompatibilním typem {type}","methodReturnsNonObject":"Metoda {name} nevrací objekt","missingSuperCall":"Metoda {methodName} nevolá metodu se stejným názvem v nadřazené třídě","moduleAsType":"Modul nejde použít jako typ","moduleNotCallable":"Modul není volatelný","moduleUnknownMember":"Člen „{memberName}“ není známým členem modulu „{moduleName}“","namedExceptAfterCatchAll":"Za klauzulí catch-all except se nemůže objevit pojmenovaná klauzule except","namedParamAfterParamSpecArgs":"Parametr klíčového slova {name} se nemůže objevit v signatuře za parametrem argumentů ParamSpec","namedTupleEmptyName":"Názvy v pojmenované řazené kolekci členů nemůžou být prázdné.","namedTupleEntryRedeclared":"{name} nejde přepsat, protože nadřazená třída {className} je pojmenovaná řazená kolekce členů.","namedTupleFirstArg":"Jako první argument byl očekáván název pojmenované třídy řazené kolekce členů","namedTupleMultipleInheritance":"Vícenásobná dědičnost s NamedTuple se nepodporuje","namedTupleNameKeyword":"Názvy polí nemůžou být klíčové slovo.","namedTupleNameType":"Očekávala se řazená kolekce členů se dvěma položkami určující název a typ položky","namedTupleNameUnique":"Názvy v pojmenované řazené kolekci členů musí být jedinečné","namedTupleNoTypes":"namedtuple neposkytuje žádné typy pro položky řazené kolekce členů; místo toho použijte NamedTuple","namedTupleSecondArg":"Jako druhý argument byl očekáván pojmenovaný seznam řazené kolekce členů","newClsParam":"Přepsání __new__ by mělo mít parametr cls","newTypeAnyOrUnknown":"Druhý argument pro NewType musí být známá třída, nikoli Any nebo Unknown.","newTypeBadName":"Prvním argumentem pro NewType musí být řetězcový literál","newTypeLiteral":"Typ NewType není možné použít s typem Literal","newTypeNameMismatch":"Typ NewType musí být přiřazen proměnné se stejným názvem.","newTypeNotAClass":"Očekávaná třída jako druhý argument pro NewType","newTypeParamCount":"NewType vyžaduje dva poziční argumenty","newTypeProtocolClass":"NewType nelze použít se strukturálním typem (protokol nebo třída TypedDict).","noOverload":"Zadaným argumentům neodpovídají žádná přetížení pro {name}","noReturnContainsReturn":"Funkce s deklarovaným návratovým typem NoReturn nemůže obsahovat příkaz return","noReturnContainsYield":"Funkce s deklarovaným návratovým typem NoReturn nemůže obsahovat příkaz yield","noReturnReturnsNone":"Funkce s deklarovaným návratovým typem „NoReturn“ nemůže vrátit „None“.","nonDefaultAfterDefault":"Nevýchozí argument následuje za výchozím argumentem","nonLocalInModule":"Nemístní deklarace není povolená na úrovni modulu","nonLocalNoBinding":"Nenašla se žádná vazba pro nemístní {name}","nonLocalReassignment":"{name} je přiřazeno před nemístní deklarací","nonLocalRedefinition":"{name} již bylo deklarováno jako nemístní","noneNotCallable":"Objekt typu „None“ nelze volat.","noneNotIterable":"Objekt typu None není možné použít jako iterovatelnou hodnotu","noneNotSubscriptable":"Objekt typu “None“ nelze zadat jako dolní index","noneNotUsableWith":"Objekt typu None není možné použít s with","noneOperator":"Operátor {operator} se pro None nepodporuje","noneUnknownMember":"{name} není známým členem None","notRequiredArgCount":"Za NotRequired byl očekáván jeden argument typu","notRequiredNotInTypedDict":"NotRequired není v tomto kontextu povolené","objectNotCallable":"Objekt typu {type} není možné volat","obscuredClassDeclaration":"Deklarace třídy {name} je zakrytá deklarací stejného jména","obscuredFunctionDeclaration":"Deklarace funkce {name} je zakrytá deklarací stejného názvu","obscuredMethodDeclaration":"Deklarace metody {name} je zakrytá deklarací stejného názvu","obscuredParameterDeclaration":"Deklarace parametru {name} je zakrytá deklarací stejného názvu","obscuredTypeAliasDeclaration":"Deklarace aliasu typu {name} je zakrytá deklarací stejného názvu","obscuredVariableDeclaration":"Deklarace {name} je zakrytá deklarací stejného názvu","operatorLessOrGreaterDeprecated":"Operátor <> se v Pythonu 3 nepodporuje; místo toho použijte !=","optionalExtraArgs":"Za nepovinnou hodnotou se očekával jeden argument typu","orPatternIrrefutable":"Nevratný vzor je povolený jenom jako poslední dílčí vzorec ve vzorci „or“","orPatternMissingName":"Všechny dílčí vzory v rámci vzoru or musí cílit na stejné názvy","overlappingKeywordArgs":"Slovník silného typu se překrývá s parametrem klíčového slova: {names}","overlappingOverload":"Přetížení {obscured} pro {name} se nikdy nepoužije, protože jeho parametry se překrývají s přetížením {obscuredBy}","overloadAbstractMismatch":"Přetížené metody musí být všechny abstraktní nebo ne","overloadClassMethodInconsistent":"Přetížení pro {name} používají @classmethod nekonzistentně.","overloadFinalInconsistencyImpl":"Přetížení pro „{name}“ je označené @final ale implementace není","overloadFinalInconsistencyNoImpl":"Přetížení {index} pro „{name}“ je označené @final ale přetížení 1 není","overloadImplementationMismatch":"Přetížená implementace není konzistentní se signaturou přetížení {index}","overloadReturnTypeMismatch":"Přetížení {prevIndex} pro {name} se překrývá s přetížením {newIndex} a vrací nekompatibilní typ","overloadStaticMethodInconsistent":"Přetížení pro {name} používají @staticmethod nekonzistentně.","overloadWithoutImplementation":"„{name}“ je označen(é/o) jako přetížení, ale není zadaná žádná implementace","overriddenMethodNotFound":"Metoda „{name}“ je označená jako přepsání, ale neexistuje žádná základní metoda se stejným názvem","overrideDecoratorMissing":"Metoda „{name}“ není označená jako přepsání, ale přepisuje metodu ve třídě „{className}“","paramAfterKwargsParam":"Parametr nemůže následovat za parametrem „**“","paramAlreadyAssigned":"Parametr {name} je už přiřazený","paramAnnotationMissing":"Chybí poznámka typu pro parametr „{name}“","paramAssignmentMismatch":"Výraz typu „{sourceType}“ nelze přiřadit k parametru typu „{paramType}“","paramNameMissing":"Žádný parametr s názvem {name}","paramSpecArgsKwargsUsage":"Členy argumentů args a kwargs parametru ParamSpec se musí vyskytovat v signatuře funkce","paramSpecArgsMissing":"Chybí argumenty pro parametr ParamSpec {type}","paramSpecArgsUsage":"Člen „args“ parametru ParamSpec je platný jenom v případě, že se používá s parametrem *args","paramSpecAssignedName":"Parametr ParamSpec musí být přiřazen proměnné s názvem {name}","paramSpecContext":"ParamSpec se v tomto kontextu nepovoluje","paramSpecDefaultNotTuple":"Očekávaly se tři tečky, výraz řazené kolekce členů nebo Parametr ParamSpec pro výchozí hodnotu ParamSpec","paramSpecFirstArg":"Očekával se název parametru ParamSpec jako první argument","paramSpecKwargsUsage":"Člen kwargs parametru ParamSpec je platný jenom v případě, že se používá s parametrem **kwargs","paramSpecNotUsedByOuterScope":"Parametr ParamSpec {name} nemá v tomto kontextu žádný význam","paramSpecScopedToReturnType":"Parametr ParamSpec {name} je vymezený na volatelnou proměnnou v rámci návratového typu a nedá se na něj odkazovat v těle funkce jazyka","paramSpecUnknownArg":"Parametr ParamSpec nepodporuje více než jeden argument","paramSpecUnknownMember":"{name} není známý člen ParamSpec","paramSpecUnknownParam":"„{name}“ je neznámý parametr parametru ParamSpec","paramTypeCovariant":"Proměnnou kovariantní typu není možné použít v typu parametru","paramTypePartiallyUnknown":"Typ parametru {paramName} je částečně neznámý","paramTypeUnknown":"Typ parametru {paramName} je neznámý","parenthesizedContextManagerIllegal":"Závorky v příkazu with vyžadují Python 3.9 nebo novější","patternNeverMatches":"Vzor se nikdy nebude shodovat s typem předmětu {type}","positionArgAfterNamedArg":"Poziční argument se nemůže objevit za argumenty klíčového slova","positionOnlyAfterArgs":"Oddělovač parametrů jen pro pozici není povolený za parametrem *.","positionOnlyAfterKeywordOnly":"Parametr / se musí zobrazit před parametrem *","positionOnlyAfterNon":"Parametr jen pro pozici není povolený za parametrem, který není jen pro pozici.","positionOnlyFirstParam":"Oddělovač parametrů jen pro pozici není povolený jako první parametr.","positionOnlyIncompatible":"Oddělovač parametrů jen pro pozici vyžaduje Python 3.8 nebo novější.","privateImportFromPyTypedModule":"{name} se neexportuje z modulu {module}","privateUsedOutsideOfClass":"{name} je privátní a používá se mimo třídu, ve které je deklarovaná","privateUsedOutsideOfModule":"{name} je privátní a používá se mimo modul, ve kterém je deklarován","propertyOverridden":"„{name}“ nesprávně přepíše vlastnost se stejným názvem ve třídě {className}","propertyStaticMethod":"Statické metody nejsou povoleny pro metodu getter, setter nebo deleter vlastnosti","protectedUsedOutsideOfClass":"„{name}“ je chráněn(ý/o/é) a používá se mimo třídu, ve které je deklarovaná","protocolBaseClass":"Třída protokolu „{classType}“ se nemůže odvozovat od třídy,která není protokolem „{baseType}“","protocolBaseClassWithTypeArgs":"Argumenty typu nejsou u třídy Protocol povoleny při použití syntaxe parametru typu","protocolIllegal":"Použití protokolu vyžaduje Python 3.7 nebo novější","protocolNotAllowed":"„Protocol“ nejde v tomto kontextu použít.","protocolUnsafeOverlap":"Třída se nebezpečně překrývá s názvem „{name}“ a může vytvořit shodu při spuštění.","protocolVarianceContravariant":"Proměnná typu „{variable}“ použitá v obecném protokolu „{class}“ by měla být kontravariantní","protocolVarianceCovariant":"Proměnná typu „{variable}“ použitá v obecném protokolu „{class}“ by měla být kovariantní","protocolVarianceInvariant":"Proměnná typu „{variable}“ použitá v obecném protokolu „{class}“ by měla být invariantní","pyrightCommentInvalidDiagnosticBoolValue":"Za direktivou komentářů Pyright musí následovat znak =a hodnota true nebo false","pyrightCommentInvalidDiagnosticSeverityValue":"Za direktivou komentářů Pyright musí následovat = a hodnota true, false, error, warning, information nebo none","pyrightCommentMissingDirective":"Za komentářem Pyright musí následovat direktiva (základní nebo striktní) nebo diagnostické pravidlo","pyrightCommentNotOnOwnLine":"Komentáře Pyright používané k řízení nastavení na úrovni souborů se musí zobrazovat na vlastním řádku","pyrightCommentUnknownDiagnosticRule":"{rule} je neznámé diagnostické pravidlo pro komentář pyright","pyrightCommentUnknownDiagnosticSeverityValue":"{value} je neplatná hodnota pro komentář pyright; očekávalo se true, false, error, warning, information nebo none","pyrightCommentUnknownDirective":"Direktiva {directive} je neznámá direktiva pro komentář pyright; očekávalo se strict nebo basic","readOnlyArgCount":"Za „ReadOnly“ se očekával jeden argument typu","readOnlyNotInTypedDict":"ReadOnly není v tomto kontextu povolené","recursiveDefinition":"Typ „{name}“ nelze určit, protože odkazuje sám na sebe","relativeImportNotAllowed":"Relativní importy se nedají použít s formulářem importu .a; místo toho použijte from . import a","requiredArgCount":"Za povinným argumentem se očekával jeden argument typu","requiredNotInTypedDict":"Required není v tomto kontextu povoleno","returnInAsyncGenerator":"Příkaz Return s hodnotou není v asynchronním generátoru povolený","returnMissing":"Funkce s deklarovaným návratovým typem „{returnType}“ musí vracet hodnotu na všech cestách kódu","returnOutsideFunction":"„return“ se dá použít jenom v rámci funkce","returnTypeContravariant":"Kontravariantní proměnnou typu nejde použít v návratovém typu","returnTypeMismatch":"Výraz typu {exprType} není možné přiřadit k návratového typu {returnType}","returnTypePartiallyUnknown":"Návratový typ {returnType} je částečně neznámý","returnTypeUnknown":"Návratový typ je neznámý","revealLocalsArgs":"Pro volání reveal_locals se neočekávaly žádné argumenty","revealLocalsNone":"V tomto oboru nejsou žádné místní hodnoty","revealTypeArgs":"Pro volání reveal_type byl očekáván jeden poziční argument","revealTypeExpectedTextArg":"Argument „expected_text“ pro funkci „reveal_type“ musí být hodnota literálu str","revealTypeExpectedTextMismatch":"Neshoda typu textu; očekávaný počet: {expected}, počet, který byl přijat: {received}","revealTypeExpectedTypeMismatch":"Neshoda typů; Očekával(o/y) se „{expected}“, ale přijal(o/y) se „{received}“","selfTypeContext":"Self není v tomto kontextu platné","selfTypeMetaclass":"„Self“ nelze použít v rámci metatřídy (podtřídy „type“).","selfTypeWithTypedSelfOrCls":"Self není možné použít ve funkci s parametrem self nebo cls, která má jinou poznámku typu než Self","setterGetterTypeMismatch":"Typ hodnoty metody setter vlastnosti není možné přiřadit návratového typu getter","singleOverload":"{name} je označené jako přetížení, ale chybí další přetížení","slotsAttributeError":"„{name}“ není zadaný v __slots__","slotsClassVarConflict":"{name} je v konfliktu s proměnnou instance deklarovanou v __slots__","starPatternInAsPattern":"Vzor hvězdy se nedá použít s cílem as","starPatternInOrPattern":"Vzor hvězdy nemůže být ORed v jiných vzorech","starStarWildcardNotAllowed":"** není možné použít se zástupným znakem _","staticClsSelfParam":"Statické metody by neměly přijímat parametr self nebo cls","stdlibModuleOverridden":"„{path}“ přepisuje modul stdlib „{name}“","stringNonAsciiBytes":"Znak jiný než ASCII není povolený v bajtech řetězcového literálu","stringNotSubscriptable":"Řetězcový výraz není možné v poznámce typu zadat jako dolní index uzavření celé poznámky do uvozovek","stringUnsupportedEscape":"Nepodporovaná řídicí sekvence v řetězcovém literálu","stringUnterminated":"Řetězcový literál je neukončený","stubFileMissing":"Soubor zástupné procedury pro {importName} se nenašel","stubUsesGetAttr":"Soubor zástupné procedury typu je neúplný; __getattr__ zakrývá typové chyby pro modul","sublistParamsIncompatible":"Parametry podsestavy nejsou v Python 3.x podporované","superCallArgCount":"Pro volání „super“ se očekávaly maximálně dva argumenty","superCallFirstArg":"Jako první argument pro volání super se očekával typ třídy, ale přijal se {type}","superCallSecondArg":"Druhý argument volání super musí být objekt nebo třída odvozená z typu {type}","superCallZeroArgForm":"Forma nulového argumentu „super“ volání je platná pouze v rámci metody.","superCallZeroArgFormStaticMethod":"Forma nulového argumentu „super“ volání není platná v rámci statické metody.","symbolIsPossiblyUnbound":"{name} je pravděpodobně nevázané","symbolIsUnbound":"Název {name} je nevázaný","symbolIsUndefined":"{name} není definované","symbolOverridden":"{name} přepíše symbol stejného názvu ve třídě {className}","ternaryNotAllowed":"Výraz ternary není v poznámce typu povolený.","totalOrderingMissingMethod":"Třída musí definovat jednu z __lt__, __le__, __gt__ nebo __ge__, aby bylo možné používat total_ordering","trailingCommaInFromImport":"Koncová čárka není povolena bez okolních závorek","tryWithoutExcept":"Příkaz Try musí mít alespoň jednu klauzuli except nebo finally","tupleAssignmentMismatch":"Výraz s typem „{type}“ se nedá přiřadit cílové řazené kolekci členů","tupleInAnnotation":"Výraz řazené kolekce členů není v poznámce typu povolený","tupleIndexOutOfRange":"Index {index} je pro typ {type} mimo rozsah","typeAliasIllegalExpressionForm":"Neplatný formulář výrazu pro definici aliasu typu","typeAliasIsRecursiveDirect":"Alias typu „{name}“ nemůže ve své definici používat sám sebe","typeAliasNotInModuleOrClass":"Typ TypeAlias je možné definovat pouze v rámci oboru modulu nebo třídy","typeAliasRedeclared":"{name} se deklaruje jako TypAlias a dá se přiřadit jenom jednou","typeAliasStatementBadScope":"Příkaz type se dá použít jenom v rámci oboru modulu nebo třídy.","typeAliasStatementIllegal":"Příkaz alias typu vyžaduje Python 3.12 nebo novější","typeAliasTypeBaseClass":"Alias typu definovaný v příkazu „typ“ nejde použít jako základní třídu","typeAliasTypeMustBeAssigned":"Typ TypeAliasType musí být přiřazen proměnné se stejným názvem jako alias typu","typeAliasTypeNameArg":"První argument typeAliasType musí být řetězcový literál představující název aliasu typu","typeAliasTypeNameMismatch":"Název aliasu typu se musí shodovat s názvem proměnné, ke které je přiřazená","typeAliasTypeParamInvalid":"Seznam parametrů typu musí být řazená kolekce členů obsahující pouze typeVar, TypeVarTuple nebo ParamSpec","typeAnnotationCall":"Výraz volání není ve výrazu typu povolený","typeAnnotationVariable":"Proměnná není ve výrazu typu povolená","typeAnnotationWithCallable":"Argument typu pro „type“ musí být třída; volatelné objekty se nepodporují.","typeArgListExpected":"Očekával se parametr ParamSpec, tři tečky nebo seznam typů","typeArgListNotAllowed":"Výraz seznamu není pro tento argument typu povolený","typeArgsExpectingNone":"Pro třídu {name} se neočekávaly žádné argumenty typu","typeArgsMismatchOne":"Očekával se jeden argument typu, ale bylo přijato {received}","typeArgsMissingForAlias":"Pro alias obecného typu {name} se očekávaly argumenty typu","typeArgsMissingForClass":"Očekávané argumenty typu pro obecnou třídu „{name}“","typeArgsTooFew":"Pro {name} se zadalo příliš málo argumentů typu. Očekávalo se {expected}, ale přijalo se {received}","typeArgsTooMany":"Pro „{name}“ se zadalo příliš mnoho argumentů typu. Očekával(o/y) se {expected}, ale přijal(o/y) se {received}","typeAssignmentMismatch":"Výraz typu {sourceType} není možné přiřadit deklarovanému typu {destType}","typeAssignmentMismatchWildcard":"Symbol importu {name} má typ {sourceType}, který nejde přiřadit deklarovanému typu {destType}.","typeCallNotAllowed":"Volání type() by se nemělo používat v poznámce typu","typeCheckOnly":"Název {name} je označený jako @type_check_only a dá se použít jenom v poznámkách typu","typeCommentDeprecated":"Použití komentářů typu je zastaralé místo toho použít anotaci typu","typeExpectedClass":"Očekával se výraz typu, ale přijal se {type}","typeGuardArgCount":"Za TypeGuard nebo TypeIs byl očekáván jeden argument typu.","typeGuardParamCount":"Funkce a metody ochrany typů definované uživatelem musí mít alespoň jeden vstupní parametr","typeIsReturnType":"Návratový typ TypeIs ({returnType}) není konzistentní s typem parametru hodnoty ({type}).","typeNotAwaitable":"„{type}“ se nedá očekávat.","typeNotIntantiable":"Není možné vytvořit instanci {type}","typeNotIterable":"{type} není možné iterovat","typeNotSpecializable":"Nepovedlo se specializovat typ „{type}“","typeNotSubscriptable":"Objekt typu {type} není možné zadat jako dolní index","typeNotSupportBinaryOperator":"Operátor „{operator}“ se pro typy „{leftType}“ a „{rightType}“ nepodporuje","typeNotSupportBinaryOperatorBidirectional":"Operátor {operator} není podporován pro typy „{leftType}“ a „{rightType}“, pokud se očekává typ „{expectedType}“","typeNotSupportUnaryOperator":"Operátor {operator} se pro typ {type} nepodporuje","typeNotSupportUnaryOperatorBidirectional":"Operátor {operator} není podporován pro typ {type}, když očekávaný typ je {expectedType}","typeNotUsableWith":"Objekt typu {type} není možné použít s typem with, protože neimplementuje metodu {method}","typeParameterBoundNotAllowed":"Vazbu nebo omezení nelze použít s parametrem variadického typu ani s parametrem ParamSpec","typeParameterConstraintTuple":"Omezení parametru typu musí být řazená kolekce členů dvou nebo více typů","typeParameterExistingTypeParameter":"Parametr typu {name} se už používá","typeParameterNotDeclared":"Parametr typu {name} není zahrnutý v seznamu parametrů typu pro kontejner {container}","typeParametersMissing":"Musí být zadán alespoň jeden parametr typu","typePartiallyUnknown":"Typ {name} je částečně neznámý","typeUnknown":"Typ {name} je neznámý","typeVarAssignedName":"Typ TypeVar musí být přiřazen proměnné s názvem {name}","typeVarAssignmentMismatch":"Typ „{type}“ se nedá přiřadit proměnné typu „{name}“","typeVarBoundAndConstrained":"TypeVar nemůže být současně vázaný i omezený","typeVarBoundGeneric":"Vázaný typ TypeVar nemůže být obecný","typeVarConstraintGeneric":"Typ omezení TypeVar nemůže být obecný","typeVarDefaultBoundMismatch":"Výchozí typ TypeVar musí být podtyp vázaného typu","typeVarDefaultConstraintMismatch":"Výchozí typ TypeVar musí být jeden z omezených typů","typeVarDefaultIllegal":"Výchozí typy proměnných typů vyžadují Python 3.13 nebo novější","typeVarDefaultInvalidTypeVar":"Parametr typu {name} má výchozí typ, který odkazuje na jednu nebo více proměnných typu, které jsou mimo obor","typeVarFirstArg":"Očekával se název TypeVar jako první argument","typeVarNoMember":"TypeVar {type} nemá žádného člena {name}","typeVarNotSubscriptable":"TypeVar {type} není možné zadat jako dolní index","typeVarNotUsedByOuterScope":"Proměnná typu {name} nemá v tomto kontextu žádný význam","typeVarPossiblyUnsolvable":"Proměnná typu „{name}“ může být nevyřešená, pokud volající nezadá žádný argument pro parametr „{param}“","typeVarScopedToReturnType":"Proměnná typu „{name}“ je vymezená na volatelnou proměnnou v rámci návratového typu a nedá se na to odkazovat v těle funkce","typeVarSingleConstraint":"TypeVar musí mít alespoň dva omezené typy","typeVarTupleConstraints":"TypeVarTuple nemůže mít omezení hodnoty","typeVarTupleContext":"TypeVarTuple se v tomto kontextu nepovoluje","typeVarTupleDefaultNotUnpacked":"Výchozí typ TypeVarTuple musí být rozbalený řazená kolekce členů nebo TypeVarTuple","typeVarTupleMustBeUnpacked":"Pro hodnotu TypeVarTuple se vyžaduje operátor rozbalení","typeVarTupleUnknownParam":"{name} je neznámý parametr pro TypeVarTuple","typeVarUnknownParam":"„{name}“ je neznámý parametr pro TypeVar","typeVarUsedByOuterScope":"TypeVar „{name}“ se už používá ve vnějším oboru","typeVarUsedOnlyOnce":"TypeVar {name} se v signatuře obecné funkce zobrazuje jenom jednou","typeVarVariance":"TypeVar nemůže být kovariantní i kontravariantní","typeVarWithDefaultFollowsVariadic":"TypeVar {typeVarName} má výchozí hodnotu a nemůže následovat po typeVarTuple {variadicName}.","typeVarWithoutDefault":"„{name}“ se v seznamu parametrů typu nemůže zobrazit za „{other}“ , protože nemá žádný výchozí typ","typeVarsNotInGenericOrProtocol":"Generic[] nebo Protocol[] musí obsahovat všechny proměnné typu","typedDictAccess":"Nepovedlo se získat přístup k položce v TypedDict","typedDictAssignedName":"TypedDict se musí přiřadit proměnné s názvem „{name}“.","typedDictBadVar":"Třídy TypedDict můžou obsahovat jenom poznámky typu","typedDictBaseClass":"Všechny základní třídy pro třídy TypedDict musí být také třídami TypedDict","typedDictBoolParam":"Očekávalo se, že parametr {name} bude mít hodnotu True nebo False","typedDictClosedExtras":"Základní třída {name} je uzavřená třída TypedDict; Další položky musí být typu {type}.","typedDictClosedNoExtras":"Základní třída {name} je uzavřená hodnota TypedDict; Položky navíc nejsou povolené.","typedDictDelete":"Nepovedlo se odstranit položku v TypedDict","typedDictEmptyName":"Názvy v rámci TypedDict nemůžou být prázdné","typedDictEntryName":"Očekával se řetězcový literál pro název položky slovníku","typedDictEntryUnique":"Názvy ve slovníku musí být jedinečné","typedDictExtraArgs":"Nadbytečné argumenty TypedDict nejsou podporovány","typedDictFieldNotRequiredRedefinition":"Položka TypedDict {name} nejde předefinovat jako NotRequired.","typedDictFieldReadOnlyRedefinition":"Položka TypedDict {name} nejde předefinovat jako ReadOnly.","typedDictFieldRequiredRedefinition":"Položka TypedDict {name} nejde předefinovat jako Required.","typedDictFirstArg":"Jako první argument byl očekáván název třídy TypedDict","typedDictInitsubclassParameter":"TypedDict nepodporuje parametr __init_subclass__ „{name}“.","typedDictNotAllowed":"„TypedDict“ se v tomto kontextu nedá použít.","typedDictSecondArgDict":"Jako druhý parametr se očekával parametr diktování nebo klíčového slova","typedDictSecondArgDictEntry":"Očekávaná jednoduchá položka slovníku","typedDictSet":"Nelze přiřadit položku v TypedDict","unaccessedClass":"Třída „{name}“ není přístupná","unaccessedFunction":"Funkce {name} není přístupná","unaccessedImport":"Import {name} není přístupný","unaccessedSymbol":"{name} není přístupné","unaccessedVariable":"Proměnná {name} není přístupná","unannotatedFunctionSkipped":"Analýza funkce „{name}“ se přeskočila, protože není označená","unaryOperationNotAllowed":"Unární operátor není v poznámce typu povolený.","unexpectedAsyncToken":"Očekávalo se, že za async bude následovat def, with nebo for","unexpectedExprToken":"Neočekávaný token na konci výrazu","unexpectedIndent":"Neočekávané odsazení","unexpectedUnindent":"Neočekává se unindent","unhashableDictKey":"Klíč slovníku musí být hashovatelný","unhashableSetEntry":"Položka sady musí být hashovatelná","uninitializedAbstractVariables":"Proměnné definované v abstraktní základní třídě nejsou inicializovány v konečné třídě {classType}","uninitializedInstanceVariable":"Proměnná instance {name} není inicializována v těle třídy nebo v metodě __init__","unionForwardReferenceNotAllowed":"Syntaxi sjednocení není možné použít s operandem řetězce; použijte uvozovky kolem celého výrazu","unionSyntaxIllegal":"Alternativní syntaxe pro sjednocení vyžaduje Python 3.10 nebo novější","unionTypeArgCount":"Sjednocení vyžaduje dva nebo více argumentů typu","unionUnpackedTuple":"Sjednocení nemůže obsahovat rozbalenou řazenou kolekci členů.","unionUnpackedTypeVarTuple":"Sjednocení nemůže obsahovat rozbalený typ TypeVarTuple.","unnecessaryCast":"Nepotřebné volání„přetypování“; Typ už je „{type}“.","unnecessaryIsInstanceAlways":"Zbytečné volání isinstance; {testType} je vždy instancí třídy {classType}","unnecessaryIsSubclassAlways":"Nepotřebné volání issubclass; „{testType}“ je vždy podtřídou třídy „{classType}“","unnecessaryPyrightIgnore":"Nepotřebný komentář „# pyright: ignore“","unnecessaryPyrightIgnoreRule":"Nepotřebné pravidlo # pyright: ignore: {name}","unnecessaryTypeIgnore":"Nepotřebný komentář „# type: ignore“","unpackArgCount":"Po rozbalení „Unpack“ se očekával jeden argument typu","unpackExpectedTypeVarTuple":"Jako argument typu pro rozbalení byl očekáván typ TypeVarTuple nebo řazená kolekce členů","unpackExpectedTypedDict":"Byl očekáván argument typu TypedDict pro rozbalení Unpack","unpackIllegalInComprehension":"Operace rozbalení není v porozumění povolená","unpackInAnnotation":"V poznámce typu není povolený operátor rozbalení","unpackInDict":"Operace rozbalení není ve slovnících povolena","unpackInSet":"Operátor rozbalení není v sadě povolený","unpackNotAllowed":"Rozbalení se v tomto kontextu nepovoluje","unpackOperatorNotAllowed":"Operace rozbalení není v tomto kontextu povolená","unpackTuplesIllegal":"Operace rozbalení není povolená v řazených kolekcích členů před Pythonem 3.8","unpackedArgInTypeArgument":"Rozbalené argumenty není možné použít v seznamech argumentů typu","unpackedArgWithVariadicParam":"Pro parametr TypeVarTuple nejde použít rozbalený argument","unpackedDictArgumentNotMapping":"Výraz argumentu za ** musí být mapování s typem klíče str","unpackedDictSubscriptIllegal":"Operátor rozbalení slovníku v dolním indexu není povolený","unpackedSubscriptIllegal":"Operátor rozbalení v dolním indexu vyžaduje Python 3.11 nebo novější","unpackedTypeVarTupleExpected":"Byl očekáván rozbalený typ TypeVarTuple; použijte Unpack[{name1}] nebo *{name2}","unpackedTypedDictArgument":"Nepovedlo se spárovat nebalený argument TypedDict s parametry","unreachableCode":"Kód je nedostupný","unreachableExcept":"Klauzule Except je nedosažitelná, protože výjimka je již zpracována","unsupportedDunderAllOperation":"Operace s __all__ se nepodporuje, takže exportovaný seznam symbolů nemusí být správný","unusedCallResult":"Výsledek výrazu volání je typu „{type}“ a nepoužívá se. přiřadit proměnné „_“, pokud je to záměrné","unusedCoroutine":"Výsledek volání asynchronní funkce se nepoužívá; použijte operátor await nebo přiřaďte výsledek proměnné","unusedExpression":"Hodnota výrazu se nepoužívá","varAnnotationIllegal":"Poznámky typu pro proměnné vyžadují Python 3.6 nebo novější; pro kompatibilitu s předchozími verzemi použijte komentáře typu","variableFinalOverride":"Proměnná {name} je označená jako final a přepíše proměnnou non-Final se stejným názvem ve třídě {className}","variadicTypeArgsTooMany":"Seznam argumentů typů může mít maximálně jeden rozbalený typ TypeVarTuple nebo řazenou kolekci členů","variadicTypeParamTooManyAlias":"Alias typu může mít maximálně jeden parametr typu TypeVarTuple, ale přijal několik ({names})","variadicTypeParamTooManyClass":"Obecná třída může mít maximálně jeden parametr typu TypeVarTuple, ale přijala více ({names})","walrusIllegal":"Operátor := vyžaduje Python 3.8 nebo novější","walrusNotAllowed":"Operátor := není v tomto kontextu povolen bez okolních závorek","wildcardInFunction":"Import se zástupnými znaky není v rámci třídy nebo funkce povolen","wildcardLibraryImport":"Import se zástupnými znaky z knihovny není povolený","wildcardPatternTypePartiallyUnknown":"Typ zachycený vzorem se zástupnými znaky je částečně neznámý","wildcardPatternTypeUnknown":"Typ zachycený vzorem se zástupnými znaky je neznámý","yieldFromIllegal":"Použití příkazu yield from vyžaduje Python 3.3 nebo novější","yieldFromOutsideAsync":"yield from není v asynchronní funkci povoleno","yieldOutsideFunction":"„yield“ není povoleno mimo funkci nebo lambdu","yieldWithinListCompr":"yield není povolen uvnitř seznamu porozumění","zeroCaseStatementsFound":"Výraz shody obsahovat alespoň jeden výraz velikosti písmen","zeroLengthTupleNotAllowed":"Řazená kolekce členů s nulovou délkou není v tomto kontextu povolená"},"DiagnosticAddendum":{"annotatedNotAllowed":"Speciální formulář s poznámkami nejde použít s kontrolami instancí a tříd.","argParam":"Argument odpovídá parametru {paramName}","argParamFunction":"Argument odpovídá parametru {paramName} ve funkci {functionName}","argsParamMissing":"Parametr „*{paramName}“ nemá žádný odpovídající parametr","argsPositionOnly":"Neshoda parametrů pouze s pozicí; Očekával(o/y) se {expected}, ale přijal(o/y) se {received}","argumentType":"Typ argumentu je {type}","argumentTypes":"Typy argumentů: ({types})","assignToNone":"Typ není možné přiřadit typu None","asyncHelp":"Měli jste na mysli „async s“?","baseClassIncompatible":"Základní třída {baseClass} není kompatibilní s typem {type}","baseClassIncompatibleSubclass":"Základní třída {baseClass} je odvozená od třídy {subclass}, která není kompatibilní s typem {type}","baseClassOverriddenType":"Základní třída {baseClass} poskytuje typ {type}, který je přepsán","baseClassOverridesType":"Základní třída „{baseClass}“ přepisuje typ „{type}“","bytesTypePromotions":"Pokud chcete povolit chování povýšení typu pro „bytearray“ a „memoryview“, nastavte disableBytesTypePromotions na false","conditionalRequiresBool":"Metoda __bool__ pro typ {operandType} vrací typ {boolReturnType} místo bool","dataClassFieldLocation":"Deklarace pole","dataClassFrozen":"{name} je zablokované","dataProtocolUnsupported":"„{name}“ je datový protokol.","descriptorAccessBindingFailed":"Nepovedlo se vytvořit vazbu metody {name} pro třídu popisovače {className}.","descriptorAccessCallFailed":"Nepovedlo se volat metodu {name} pro třídu popisovače {className}.","finalMethod":"Konečná metoda","functionParamDefaultMissing":"V parametru „{name}“ chybí výchozí argument","functionParamName":"Neshoda názvu parametru: {destName} a {srcName}","functionParamPositionOnly":"Neshoda parametrů pouze s pozicí; Parametr „{name}“ není jen pro pozici.","functionReturnTypeMismatch":"Návratový typ funkce „{sourceType}“ není kompatibilní s typem „{destType}“","functionTooFewParams":"Funkce přijímá příliš málo pozičních parametrů; očekávaný počet: {expected}, počet, který byl přijat: {received}","functionTooManyParams":"Funkce přijímá příliš mnoho pozičních parametrů; očekávaný počet: {expected}, počet, který byl přijat: {received}","genericClassNotAllowed":"Obecný typ s argumenty obecného typu se pro kontroly instancí nebo tříd nepovoluje.","incompatibleDeleter":"Metoda odstranění vlastnosti je nekompatibilní","incompatibleGetter":"Metoda getter vlastnosti je nekompatibilní","incompatibleSetter":"Metoda setter vlastnosti je nekompatibilní","initMethodLocation":"Metoda __init__ je definována ve třídě {type}","initMethodSignature":"Podpis __init__ je {type}","initSubclassLocation":"Metoda __init_subclass__ je definována ve třídě {name}.","invariantSuggestionDict":"Zvažte přepnutí z „diktování“ na „mapování“, které je v typu hodnoty kovariantní","invariantSuggestionList":"Zvažte přepnutí ze „seznamu“ na „sekvenci“, která je kovavariantní","invariantSuggestionSet":"Zvažte přepnutí ze „seznamu“ na „sekvenci“, která je kovavariantní","keyNotRequired":"„{name}! není v typu „{type}“ povinný klíč, takže přístup může vést k výjimce modulu runtime","keyReadOnly":"{name} je klíč jen pro čtení v {type}","keyRequiredDeleted":"{name} je povinný klíč a nedá se odstranit","keyUndefined":"{name} není definovaný klíč v typu {type}","kwargsParamMissing":"Parametr „**{paramName}“ nemá žádný odpovídající parametr","listAssignmentMismatch":"Typ {type} není kompatibilní s cílovým seznamem","literalAssignmentMismatch":"{sourceType} se nedá přiřadit k typu {destType}","matchIsNotExhaustiveHint":"Pokud není zamýšleno vyčerpávající zpracování, přidejte case _: pass","matchIsNotExhaustiveType":"Nezpracovaný typ: {type}","memberAssignment":"Výraz typu „{type}“ nelze přiřadit členu „{name}“ třídy „{classType}“","memberIsAbstract":"„{type}.{name}“ není implementováno.","memberIsAbstractMore":"a tento počet dalších: {count}...","memberIsClassVarInProtocol":"„{name}“ je v protokolu definován jako ClassVar.","memberIsFinalInProtocol":"{name} je v protokolu označený jako Final","memberIsInitVar":"Člen {name} je pole jen pro inicializaci","memberIsInvariant":"{name} je invariantní, protože je proměnlivé","memberIsNotClassVarInClass":"„{name}“ musí být definováno jako ClassVar, aby bylo kompatibilní s protokolem.","memberIsNotClassVarInProtocol":"„{name}“ není v protokolu definován jako ClassVar.","memberIsNotFinalInProtocol":"„{name}“ není v protokolu označeno jako Final","memberIsWritableInProtocol":"{name} se dá zapisovat do protokolu.","memberSetClassVar":"Člen „{name}“ nelze přiřadit prostřednictvím instance třídy, protože se jedná o třídu ClassVar","memberTypeMismatch":"{name} je nekompatibilní typ","memberUnknown":"Člen {name} je neznámý","metaclassConflict":"Metatřída {metaclass1} je v konfliktu s metatřídou {metaclass2}.","missingDeleter":"Chybí metoda odstranění vlastnosti","missingGetter":"Chybí metoda getter vlastnosti","missingSetter":"Chybí metoda nastavovacího kódu vlastnosti","namedParamMissingInDest":"V cíli chybí parametr klíčového slova {name}","namedParamMissingInSource":"Ve zdroji chybí parametr klíčového slova „{name}“","namedParamTypeMismatch":"Parametr klíčového slova {name} typu {sourceType} není možné přiřadit typu {destType}","namedTupleNotAllowed":"NamedTuple se nedá použít pro kontroly instancí nebo tříd.","newMethodLocation":"Metoda __new__ je definována ve třídě {type}","newMethodSignature":"Podpis __new__ je {type}","newTypeClassNotAllowed":"Třídu vytvořenou pomocí newType nelze použít s kontrolami instancí a tříd.","noOverloadAssignable":"Typ {type} neodpovídá žádné přetížené funkci","noneNotAllowed":"Žádné se nedají použít pro kontroly instancí nebo tříd.","orPatternMissingName":"Chybějící názvy: {name}","overloadIndex":"Přetížení {index} je nejbližší shoda.","overloadNotAssignable":"Nejméně jedno přetížení {name} není možné přiřadit","overloadSignature":"Tady je definován podpis přetížení","overriddenMethod":"Přepsaná metoda","overriddenSymbol":"Přepsaný symbol","overrideInvariantMismatch":"Typ přepsání „{overrideType}“není stejný jako základní typ „{baseType}“","overrideIsInvariant":"Proměnná je proměnlivá, takže její typ je invariantní","overrideNoOverloadMatches":"Signatura přetížení v přepsání není kompatibilní se základní metodou","overrideNotClassMethod":"Základní metoda je deklarována jako metoda classmethod, ale přepsání není","overrideNotInstanceMethod":"Základní metoda je deklarována jako instanční metoda, ale přepsání není","overrideNotStaticMethod":"Základní metoda je deklarována jako staticmethod, ale přepsání není","overrideOverloadNoMatch":"Přepsání nezahrnuje všechna přetížení metody základní třídy","overrideOverloadOrder":"Přetížení přepisované metody musí být ve stejném pořadí jako základní metoda","overrideParamKeywordNoDefault":"Neshoda parametru klíčového slova „{name}“: základní parametr má výchozí hodnotu argumentu, parametr pro přepsání ne","overrideParamKeywordType":"Neshoda typu parametru klíčového slova „{name}“: základní parametr je typu „{baseType}“, parametr přepsání je typu „{overrideType}“","overrideParamName":"Neshoda názvu parametru {index}: základní parametr má název „{baseName}“, parametr přepsání má název „{overrideName}“","overrideParamNameExtra":"V základu chybí parametr {name}","overrideParamNameMissing":"V přepsání chybí parametr „{name}“","overrideParamNamePositionOnly":"Neshoda parametru {index}: základní parametr {baseName} je parametr klíčového slova, přepisující parametr je pouze pozice","overrideParamNoDefault":"Neshoda parametru {index}: Základní parametr má výchozí hodnotu argumentu, parametr přepsání se neshoduje.","overrideParamType":"Neshoda typu parametru {index}: Základní parametr je typu „{baseType}“, parametr přepsání je typu „{overrideType}“.","overridePositionalParamCount":"Neshoda počtu pozičních parametrů; Základní metoda má „{baseCount}“, ale přepsání má {overrideCount}","overrideReturnType":"Neshoda návratového typu: Základní metoda vrací typ {baseType}, přepsání vrací typ {overrideType}","overrideType":"Základní třída definuje typ jako {type}","paramAssignment":"Parametr {index}: Typ {sourceType} není možné přiřadit typu {destType}","paramSpecMissingInOverride":"V metodě přepsání chybí parametry ParamSpec","paramType":"Typ parametru je {paramType}","privateImportFromPyTypedSource":"Místo toho importovat z modulu {module}","propertyAccessFromProtocolClass":"Vlastnost definovaná v rámci třídy protokolu není přístupná jako proměnná třídy","propertyMethodIncompatible":"Metoda vlastnosti {name} není kompatibilní","propertyMethodMissing":"V přepsání chybí metoda vlastnosti „{name}“","propertyMissingDeleter":"Vlastnost {name} nemá definovaný odstraňovač","propertyMissingSetter":"Vlastnost {name} nemá definovanou metodu setter","protocolIncompatible":"{sourceType} není kompatibilní s protokolem {destType}","protocolMemberMissing":"{name} není k dispozici","protocolRequiresRuntimeCheckable":"Třída protokolu musí být @runtime_checkable, aby se použila při kontrolách instancí a tříd.","protocolSourceIsNotConcrete":"„{sourceType}“ není konkrétní typ třídy a nedá se přiřadit k typu „{destType}“","protocolUnsafeOverlap":"Atributy „{name}“ mají stejné názvy jako protokol.","pyrightCommentIgnoreTip":"Pokud chcete potlačit diagnostiku pro jeden řádek, použijte # pyright: ignore[<diagnostic rules>]","readOnlyAttribute":"Atribut {name} je jen pro čtení","seeClassDeclaration":"Viz deklarace třídy","seeDeclaration":"Viz deklarace","seeFunctionDeclaration":"Viz deklarace funkce","seeMethodDeclaration":"Viz deklarace metody","seeParameterDeclaration":"Viz deklarace parametru","seeTypeAliasDeclaration":"Zobrazit deklaraci aliasu typu","seeVariableDeclaration":"Zobrazit deklaraci proměnné","tupleAssignmentMismatch":"Typ „{type}“ není kompatibilní s cílovou řazenou kolekcí členů","tupleEntryTypeMismatch":"Položka řazené kolekce členů {entry} je nesprávného typu","tupleSizeIndeterminateSrc":"Neshoda velikosti řazené kolekce členů; Očekávalo se {expected}, ale přijalo se neurčité.","tupleSizeIndeterminateSrcDest":"Neshoda velikosti řazené kolekce členů; Očekávalo se min. {expected}, ale přijalo se neurčité.","tupleSizeMismatch":"Neshoda velikosti řazené kolekce členů; Očekávalo se {expected}, ale přijalo se {received}.","tupleSizeMismatchIndeterminateDest":"Neshoda velikosti řazené kolekce členů; Očekávalo se min. {expected}, ale přijalo se {received}.","typeAliasInstanceCheck":"Alias typu vytvořený pomocí příkazu „typ“ se nedá použít s kontrolami instancí a tříd","typeAssignmentMismatch":"Typ {sourceType} se nedá přiřadit k typu {destType}","typeBound":"Typ {sourceType} je nekompatibilní s vázaným typem {destType} pro proměnnou typu {name}","typeConstrainedTypeVar":"Typ {type} není kompatibilní s proměnnou omezeného typu {name}","typeIncompatible":"{sourceType} není kompatibilní s typem {destType}","typeNotClass":"{type} není třída","typeNotStringLiteral":"„{type}“ není řetězcový literál","typeOfSymbol":"Typ „{name}“ je „{type}“","typeParamSpec":"Typ {type} není kompatibilní s parametrem ParamSpec {name}","typeUnsupported":"Typ {type} není podporován","typeVarDefaultOutOfScope":"Proměnná typu {name} není v oboru","typeVarIsContravariant":"Parametr typu „{name}“ je kontravariantní, ale „{sourceType}“ není nadtyp „{destType}“.","typeVarIsCovariant":"Parametr typu „{name}“ je kovariantní, ale „{sourceType}“ není podtyp „{destType}“.","typeVarIsInvariant":"Parametr typu „{name}“ je invariantní, ale „{sourceType}“ není stejný jako „{destType}“.","typeVarNotAllowed":"TypeVar se pro kontroly instancí nebo tříd nepovoluje.","typeVarTupleRequiresKnownLength":"Typ TypeVarTuple nemůže být vázaný na řazenou kolekci členů neznámé délky","typeVarUnnecessarySuggestion":"Místo toho použijte {type}.","typeVarUnsolvableRemedy":"Zadejte přetížení, které určuje návratový typ, pokud argument není zadán","typeVarsMissing":"Chybějící proměnné typu: {names}","typedDictBaseClass":"Třída „{type}“ není TypedDict.","typedDictClassNotAllowed":"Třída TypedDict není povolená pro kontroly instancí nebo tříd.","typedDictClosedExtraNotAllowed":"Do {name} nejde přidat položku.","typedDictClosedExtraTypeMismatch":"Nelze přidat položku {name} s typem {type}.","typedDictClosedFieldNotRequired":"Nelze přidat položku {name}, protože musí být NotRequired.","typedDictExtraFieldNotAllowed":"{name} není k dispozici v {type}","typedDictExtraFieldTypeMismatch":"Typ {name} není kompatibilní s typem __extra_items__ v typu {type}.","typedDictFieldMissing":"V {type} chybí {name}","typedDictFieldNotReadOnly":"{name} není v {type} jen pro čtení","typedDictFieldNotRequired":"{name} se v typu {type} nevyžaduje","typedDictFieldRequired":"{name} se vyžaduje v {type}","typedDictFieldTypeMismatch":"Typ {type} se nedá přiřadit k položce {name}","typedDictFieldUndefined":"{name} je nedefinovaná položka v typu {type}","typedDictFinalMismatch":"{sourceType} není kompatibilní s {destType} z důvodu neshody @final","typedDictKeyAccess":"Použít [\\"{name}\\"] k odkazování na položku v TypedDict","typedDictNotAllowed":"TypedDict se nedá použít pro kontroly instancí nebo tříd.","unhashableType":"Typ „{type}“ nejde zatřiďovat","uninitializedAbstractVariable":"Proměnná instance {name} je definovaná v abstraktní základní třídě {classType}, ale neinicializovala se","unreachableExcept":"{exceptionType} je podtřídou {parentType}","useDictInstead":"Označte typ slovníku pomocí Dict[T1, T2]","useListInstead":"Použijte List[T] k označení typu seznamu nebo Union[T1, T2] k označení typu sjednocení","useTupleInstead":"Použijte tuple[T1, ..., Tn] k označení typu řazené kolekce členů nebo Union[T1, T2] k označení typu sjednocení","useTypeInstead":"Místo toho použít Type[T]","varianceMismatchForClass":"Odchylka argumentu typu „{typeVarName}“ není kompatibilní se základní třídou „{className}“","varianceMismatchForTypeAlias":"Rozptyl argumentu typu „{typeVarName}“ není kompatibilní s typem „{typeAliasParam}“"}}')},41440:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Typstub erstellen","createTypeStubFor":"Typstub für \\"{moduleName}\\" erstellen","executingCommand":"Der Befehl wird ausgeführt.","filesToAnalyzeCount":"{count} Dateien zu analysieren","filesToAnalyzeOne":"1 zu analysierende Datei","findingReferences":"Verweise werden gesucht","organizeImports":"Import-Direktiven organisieren","renameShadowedFile":"\\"{oldFile}\\" in \\"{newFile}\\" umbenennen"},"Completion":{"autoImportDetail":"Autoimport","indexValueDetail":"Indexwert"},"Diagnostic":{"abstractMethodInvocation":"Die Methode „{method}“ kann nicht aufgerufen werden, da sie abstrakt und nicht implementiert ist.","annotatedParamCountMismatch":"Nicht übereinstimmende Parameteranmerkungsanzahl: {expected} erwartet, aber {received} empfangen","annotatedTypeArgMissing":"Es wurde ein Typargument und mindestens eine Anmerkung für \\"Annotated\\" erwartet.","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Typanmerkungen können keine Formatzeichenfolgenliterale (f-strings) verwenden.","annotationNotSupported":"Typanmerkung wird für diese Anweisung nicht unterstützt.","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Typanmerkungen dürfen nicht mehrere Zeichenfolgenliterale umfassen.","annotationStringEscape":"Typanmerkungen dürfen keine Escapezeichen enthalten.","argAssignment":"Ein Argument vom Typ \\"{argType}\\" kann dem Parameter vom Typ \\"{paramType}\\" nicht zugewiesen werden.","argAssignmentFunction":"Ein Argument vom Typ \\"{argType}\\" kann dem Parameter vom Typ \\"{paramType}\\" in der Funktion \\"{functionName}\\" nicht zugewiesen werden.","argAssignmentParam":"Ein Argument vom Typ \\"{argType}\\" kann dem Parameter \\"{paramName}\\" vom Typ \\"{paramType}\\" nicht zugewiesen werden.","argAssignmentParamFunction":"Ein Argument vom Typ \\"{argType}\\" kann dem Parameter \\"{paramName}\\" vom Typ \\"{paramType}\\" in der Funktion \\"{functionName}\\" nicht zugewiesen werden.","argMissingForParam":"Für Parameter {name} fehlt ein Argument.","argMissingForParams":"Fehlende Argumente für die Parameter {names}","argMorePositionalExpectedCount":"Es wurden {expected} weitere Positionsargumente erwartet.","argMorePositionalExpectedOne":"Es wurde 1 weiteres Positionsargument erwartet.","argPositional":"Positionsargument erwartet","argPositionalExpectedCount":"Es wurden {expected} Positionsargumente erwartet.","argPositionalExpectedOne":"Es wurde 1 Positionsargument erwartet.","argTypePartiallyUnknown":"Der Argumenttyp ist teilweise unbekannt","argTypeUnknown":"Argumenttyp ist unbekannt","assertAlwaysTrue":"Assertausdruck wird immer als True ausgewertet.","assertTypeArgs":"\\"assert_type\\" erwartet zwei Positionsargumente.","assertTypeTypeMismatch":"\\"assert_type\\" Konflikt: \\"{expected}\\" erwartet, aber \\"{received}\\" empfangen","assignmentExprComprehension":"Ziel des Zuweisungsausdrucks \\"{name}\\" kann nicht denselben Namen wie das Verständnis für das Ziel verwenden.","assignmentExprContext":"Der Zuweisungsausdruck muss sich innerhalb des Moduls, der Funktion oder der Lambdafunktion befinden.","assignmentExprInSubscript":"Zuweisungsausdrücke innerhalb eines Tiefgestellten werden nur in Python 3.10 und höher unterstützt.","assignmentInProtocol":"Instanzen- oder Klassenvariablen innerhalb einer Protokollklasse müssen explizit innerhalb des Klassentexts deklariert werden.","assignmentTargetExpr":"Der Ausdruck kann kein Zuweisungsziel sein.","asyncNotInAsyncFunction":"Die Verwendung von \\"async\\" ist außerhalb einer asynchronen Funktion nicht zulässig.","awaitIllegal":"Die Verwendung von \\"await\\" erfordert Python 3.5 oder höher.","awaitNotAllowed":"Typanmerkungen können „await“ nicht verwenden.","awaitNotInAsync":"\\"await\\" ist nur innerhalb einer asynchronen Funktion zulässig.","backticksIllegal":"Ausdrücke, die von Backticks umgeben sind, werden in Python 3.x nicht unterstützt; verwenden Sie stattdessen repr","baseClassCircular":"Die Klasse kann nicht von sich selbst abgeleitet werden.","baseClassFinal":"Die Basisklasse \\"{type}\\" ist als final gekennzeichnet und kann nicht als Unterklasse verwendet werden.","baseClassIncompatible":"Basisklassen von {type} sind gegenseitig inkompatibel.","baseClassInvalid":"Das Argument für die Klasse muss eine Basisklasse sein.","baseClassMethodTypeIncompatible":"Basisklassen für die Klasse \\"{classType}\\" definieren die Methode \\"{name}\\" auf inkompatible Weise.","baseClassUnknown":"Der Basisklassentyp ist unbekannt, sodass der Typ der abgeleiteten Klasse verdeckt wird.","baseClassVariableTypeIncompatible":"Basisklassen für die Klasse \\"{classType}\\" definieren die Variable \\"{name}\\" auf inkompatible Weise.","binaryOperationNotAllowed":"Binärer Operator in Typanmerkung nicht zulässig","bindTypeMismatch":"Die Methode \\"{methodName}\\" konnte nicht gebunden werden, da \\"{type}\\" dem Parameter \\"{paramName}\\" nicht zugewiesen werden kann.","breakOutsideLoop":"\\"break\\" kann nur innerhalb einer Schleife verwendet werden.","callableExtraArgs":"Es wurden nur zwei Typargumente für \\"Callable\\" erwartet.","callableFirstArg":"Parametertypliste oder \\"...\\" erwartet.","callableNotInstantiable":"Der Typ \\"{type}\\" kann nicht instanziiert werden.","callableSecondArg":"Rückgabetyp als zweites Typargument für \\"Callable\\" erwartet","casePatternIsIrrefutable":"Ein unwiderlegbares Muster ist nur für die letzte case-Anweisung zulässig.","classAlreadySpecialized":"Der Typ \\"{type}\\" ist bereits spezialisiert.","classDecoratorTypeUnknown":"Der nicht typisierte Klassendekorator verdeckt den Typ der Klasse; Decorator wird ignoriert.","classDefinitionCycle":"Die Klassendefinition für \\"{name}\\" hängt von sich selbst ab.","classGetItemClsParam":"__class_getitem__ Außerkraftsetzung sollte einen \\"cls\\"-Parameter annehmen.","classMethodClsParam":"Klassenmethoden sollten einen \\"cls\\"-Parameter verwenden.","classNotRuntimeSubscriptable":"Durch das Tiefstellungsskript für die Klasse \\"{name}\\" wird eine Laufzeitausnahme generiert; schließen Sie die Typanmerkung in Anführungszeichen ein","classPatternBuiltInArgPositional":"Das Klassenmuster akzeptiert nur positionsbezogenes Untermuster.","classPatternPositionalArgCount":"Zu viele Positionsmuster für Klasse \\"{type}\\". Erwartet: {expected}, empfangen: {received}.","classPatternTypeAlias":"\\"{type}\\" kann nicht in einem Klassenmuster verwendet werden, da es sich um einen spezialisierten Typalias handelt.","classPropertyDeprecated":"Klasseneigenschaften sind in Python 3.11 veraltet und werden in Python 3.13 nicht unterstützt.","classTypeParametersIllegal":"Die Syntax des Klassentypparameters erfordert Python 3.12 oder höher.","classVarFirstArgMissing":"Nach \\"ClassVar\\" wurde ein Typargument erwartet.","classVarNotAllowed":"\\"ClassVar\\" ist in diesem Kontext nicht zulässig.","classVarOverridesInstanceVar":"Die Klassenvariable \\"{name}\\" überschreibt die Instanzvariable desselben Namens in der Klasse \\"{className}\\"","classVarTooManyArgs":"Nach \\"ClassVar\\" wird ein Typargument erwartet.","classVarWithTypeVar":"Der Typ \\"ClassVar\\" darf keine Typvariablen enthalten.","clsSelfParamTypeMismatch":"Der Typ des Parameters \\"{name}\\" muss ein Obertyp seiner Klasse \\"{classType}\\" sein","codeTooComplexToAnalyze":"Der Code ist zu komplex für die Analyse; verringern Sie die Komplexität durch Refactoring in Unterroutinen oder durch Reduzieren bedingter Codepfade","collectionAliasInstantiation":"Der Typ \\"{type}\\" kann nicht instanziiert werden, verwenden Sie stattdessen \\"{alias}\\".","comparisonAlwaysFalse":"Die Bedingung wird immer als False ausgewertet, da die Typen \\"{leftType}\\" und \\"{rightType}\\" keine Überlappung aufweisen.","comparisonAlwaysTrue":"Die Bedingung wird immer als True ausgewertet, da die Typen \\"{leftType}\\" und \\"{rightType}\\" keine Überlappung aufweisen.","comprehensionInDict":"Verständnis kann nicht mit anderen Wörterbucheinträgen verwendet werden.","comprehensionInSet":"Verständnis kann nicht mit anderen Satzeinträgen verwendet werden.","concatenateContext":"„Verketten“ ist in diesem Kontext nicht zulässig.","concatenateParamSpecMissing":"Das letzte Typargument für \\"Concatenate\\" muss ein ParamSpec oder \\"...\\" sein.","concatenateTypeArgsMissing":"\\"Verketten\\" erfordert mindestens zwei Typargumente.","conditionalOperandInvalid":"Ungültiger bedingter Operand vom Typ \\"{type}\\"","constantRedefinition":"\\"{name}\\" ist konstant (da es sich um Großbuchstaben handelt) und kann nicht neu definiert werden.","constructorNoArgs":"Es wurden keine Argumente für \\"{type}\\" Konstruktor erwartet.","constructorParametersMismatch":"Keine Übereinstimmung zwischen der Signatur von __new__ und __init__ in der Klasse \\"{classType}\\"","containmentAlwaysFalse":"Der Ausdruck wird immer als False ausgewertet, da die Typen \\"{leftType}\\" und \\"{rightType}\\" keine Überlappung aufweisen.","containmentAlwaysTrue":"Der Ausdruck wird immer als True ausgewertet, da die Typen \\"{leftType}\\" und \\"{rightType}\\" keine Überlappung aufweisen.","continueInFinally":"\\"continue\\" kann nicht innerhalb einer finally-Klausel verwendet werden.","continueOutsideLoop":"\\"continue\\" kann nur innerhalb einer Schleife verwendet werden.","coroutineInConditionalExpression":"Bedingter Ausdruck verweist auf eine Coroutine, die immer zu \\"True\\" ausgewertet wird.","dataClassBaseClassFrozen":"Eine nicht fixierte Klasse kann nicht von einer fixierten Klasse erben.","dataClassBaseClassNotFrozen":"Eine fixierte Klasse kann nicht von einer nicht fixierten Klasse erben.","dataClassConverterFunction":"Das Argument vom Typ \\"{argType}\\" ist kein gültiger Konverter für das Feld \\"{fieldName}\\" vom Typ \\"{fieldType}\\"","dataClassConverterOverloads":"Keine Überladungen von \\"{funcName}\\" sind gültige Konverter für das Feld \\"{fieldName}\\" vom Typ \\"{fieldType}\\"","dataClassFieldWithDefault":"Felder ohne Standardwerte dürfen nicht nach Feldern mit Standardwerten angezeigt werden.","dataClassFieldWithPrivateName":"Das Feld \\"Dataclass\\" kann keinen privaten Namen verwenden.","dataClassFieldWithoutAnnotation":"Datenklassenfeld ohne Typanmerkung verursacht eine Laufzeitausnahme","dataClassPostInitParamCount":"Dataclass __post_init__ falsche Parameteranzahl; Anzahl von InitVar-Feldern ist {expected}","dataClassPostInitType":"Dataclass __post_init__ Methodenparametertypkonflikt für Feld \\"{fieldName}\\"","dataClassSlotsOverwrite":"__slots__ ist bereits in der Klasse definiert.","dataClassTransformExpectedBoolLiteral":"Es wurde ein Ausdruck erwartet, der statisch als True oder False ausgewertet wird.","dataClassTransformFieldSpecifier":"Es wurde ein Tupel von Klassen oder Funktionen erwartet, es wurde jedoch der Typ \\"{type}\\" empfangen","dataClassTransformPositionalParam":"Alle Argumente für \\"dataclass_transform\\" müssen Schlüsselwortargumente sein.","dataClassTransformUnknownArgument":"Argument \\"{name}\\" wird von dataclass_transform nicht unterstützt.","dataProtocolInSubclassCheck":"Datenprotokolle (die Nicht-Methodenattribute enthalten) sind in „issubclass“-Aufrufen nicht zulässig.","declaredReturnTypePartiallyUnknown":"Der deklarierte Rückgabetyp \\"{returnType}\\" ist teilweise unbekannt.","declaredReturnTypeUnknown":"Unbekannter Rückgabetyp deklariert","defaultValueContainsCall":"Funktionsaufrufe und änderbare Objekte sind innerhalb des Parameterstandardwertausdrucks nicht zulässig.","defaultValueNotAllowed":"Ein Parameter mit \\"*\\" oder \\"**\\" darf keinen Standardwert aufweisen.","delTargetExpr":"Der Ausdruck kann nicht gelöscht werden","deprecatedClass":"Die Klasse \\"{name}\\" ist veraltet.","deprecatedConstructor":"Der Konstruktor für die Klasse \\"{name}\\" ist veraltet.","deprecatedDescriptorDeleter":"Die Methode \\"__delete__\\" für den Deskriptor \\"{name}\\" ist veraltet.","deprecatedDescriptorGetter":"Die Methode \\"__get__\\" für den Deskriptor \\"{name}\\" ist veraltet.","deprecatedDescriptorSetter":"Die Methode \\"__set__\\" für den Deskriptor \\"{name}\\" ist veraltet.","deprecatedFunction":"Die Funktion \\"{name}\\" ist veraltet.","deprecatedMethod":"Die Methode \\"{name}\\" in der Klasse \\"{className}\\" ist veraltet.","deprecatedPropertyDeleter":"Der Deleter für die Eigenschaft \\"{name}\\" ist veraltet.","deprecatedPropertyGetter":"Der Getter für die Eigenschaft \\"{name}\\" ist veraltet.","deprecatedPropertySetter":"Der Setter für die Eigenschaft \\"{name}\\" ist veraltet.","deprecatedType":"Dieser Typ ist ab python-{version} veraltet; verwenden Sie stattdessen \\"{replacement}\\"","dictExpandIllegalInComprehension":"Wörterbucherweiterung ist im Verständnis nicht zulässig.","dictInAnnotation":"Ein Wörterbuchausdruck ist in der Typanmerkung nicht zulässig.","dictKeyValuePairs":"Wörterbucheinträge müssen Schlüssel-Wert-Paare enthalten.","dictUnpackIsNotMapping":"Es wird eine Zuordnung für den Operator zum Entpacken des Wörterbuchs erwartet.","dunderAllSymbolNotPresent":"\\"{name}\\" ist in __all__ angegeben, aber nicht im Modul vorhanden.","duplicateArgsParam":"Es ist nur ein \\"*\\"-Parameter zulässig.","duplicateBaseClass":"Doppelte Basisklasse nicht zulässig","duplicateCapturePatternTarget":"\\"{name}\\" des Erfassungsziels darf nicht mehrmals innerhalb desselben Musters vorkommen.","duplicateCatchAll":"Es ist nur eine catch-all except-Klausel zulässig.","duplicateEnumMember":"Der Enumerationsmember \\"{name}\\" wurde bereits deklariert.","duplicateGenericAndProtocolBase":"Es ist nur eine Generic[...]- oder ein Protocol[...]-Basisklasse zulässig.","duplicateImport":"\\"{importName}\\" wurde mehrmals importiert.","duplicateKeywordOnly":"Es ist nur ein \\"*\\"-Trennzeichen zulässig.","duplicateKwargsParam":"Es ist nur ein \\"**\\"-Parameter zulässig.","duplicateParam":"Doppelter Parameter \\"{name}\\"","duplicatePositionOnly":"Es ist nur ein \\"/\\"-Parameter zulässig.","duplicateStarPattern":"In einer Mustersequenz ist nur ein \\"*\\"-Muster zulässig.","duplicateStarStarPattern":"Es ist nur ein \\"**\\"-Eintrag zulässig.","duplicateUnpack":"In der Liste ist nur ein Vorgang zum Entpacken zulässig.","ellipsisAfterUnpacked":"„...“ kann nicht mit einem entpackten „TypeVarTuple“ oder „Tupel“ verwendet werden.","ellipsisContext":"\\"...\\" ist in diesem Kontext nicht zulässig.","ellipsisSecondArg":"\\"...\\" ist nur als zweites von zwei Argumenten zulässig.","enumClassOverride":"Die Enumerationsklasse \\"{name}\\" ist final und kann nicht in eine Unterklasse aufgenommen werden.","exceptionGroupIncompatible":"Die Ausnahmegruppensyntax (\\"except*\\") erfordert Python 3.11 oder höher.","exceptionTypeIncorrect":"\\"{type}\\" ist nicht von BaseException abgeleitet.","exceptionTypeNotClass":"\\"{type}\\" ist keine gültige Ausnahmeklasse.","exceptionTypeNotInstantiable":"Der Konstruktor für den Ausnahmetyp \\"{type}\\" erfordert mindestens ein Argument.","expectedAfterDecorator":"Es wurde eine Funktions- oder Klassendeklaration nach dem Decorator erwartet.","expectedArrow":"\\"->\\" gefolgt von Rückgabetypanmerkung erwartet","expectedAsAfterException":"\\"as\\" nach Ausnahmetyp erwartet","expectedAssignRightHandExpr":"Ausdruck rechts von \\"=\\" erwartet","expectedBinaryRightHandExpr":"Ausdruck rechts vom Operator","expectedBoolLiteral":"\\"True\\" oder \\"False\\" erwartet","expectedCase":"\\"case\\"-Anweisung erwartet","expectedClassName":"Klassenname erwartet","expectedCloseBrace":"\\"{\\" wurde nicht geschlossen.","expectedCloseBracket":"\\"[\\" wurde nicht geschlossen.","expectedCloseParen":"\\"(\\" wurde nicht geschlossen.","expectedColon":"\\":\\" erwartet","expectedComplexNumberLiteral":"Für den Musterabgleich wurde ein komplexes Zahlenliteral erwartet.","expectedDecoratorExpr":"Das Ausdrucksformular wird für den Decorator vor Python 3.9 nicht unterstützt.","expectedDecoratorName":"Decoratorname erwartet","expectedDecoratorNewline":"Am Ende des Decorators wurde eine neue Zeile erwartet.","expectedDelExpr":"Ausdruck nach \\"del\\" erwartet","expectedElse":"Unerwartetes \\"else\\"","expectedEquals":"\\"=\\" erwartet","expectedExceptionClass":"Ungültige Ausnahmeklasse oder ungültiges Objekt.","expectedExceptionObj":"Ausnahmeobjekt, Ausnahmeklasse oder None erwartet","expectedExpr":"Ausdruck erwartet.","expectedFunctionAfterAsync":"Funktionsdefinition nach \\"async\\" erwartet","expectedFunctionName":"Funktionsname nach \\"def\\" erwartet","expectedIdentifier":"Bezeichner erwartet","expectedImport":"\\"import\\" erwartet","expectedImportAlias":"Symbol nach \\"as\\" erwartet","expectedImportSymbols":"Nach dem Import wurde mindestens ein Symbolname erwartet.","expectedIn":"\\"in\\" wurde erwartet.","expectedInExpr":"Ausdruck nach \\"in\\" erwartet","expectedIndentedBlock":"Eingerückter Block erwartet","expectedMemberName":"Membername nach \\".\\" erwartet","expectedModuleName":"Modulname erwartet","expectedNameAfterAs":"Symbolname nach \\"as\\" erwartet","expectedNamedParameter":"Der Schlüsselwortparameter muss auf \\"*\\" folgen.","expectedNewline":"Zeilenumbruch erwartet","expectedNewlineOrSemicolon":"Anweisungen müssen durch Zeilenumbrüche oder Semikolons getrennt werden.","expectedOpenParen":"\\"(\\" erwartet","expectedParamName":"Parametername erwartet","expectedPatternExpr":"Musterausdruck erwartet","expectedPatternSubjectExpr":"Musterbetreffausdruck erwartet","expectedPatternValue":"Es wurde ein Musterwertausdruck im Format \\"a.b\\" erwartet.","expectedReturnExpr":"Ausdruck nach \\"return\\" erwartet","expectedSliceIndex":"Index- oder Sliceausdruck erwartet","expectedTypeNotString":"Typ erwartet, aber Zeichenfolgenliteral empfangen","expectedTypeParameterName":"Name für Typparameter erwartet","expectedYieldExpr":"Ausdruck in yield-Anweisung erwartet","finalClassIsAbstract":"Die Klasse „{type}“ ist als abgeschlossen markiert und muss alle abstrakten Symbole implementieren.","finalContext":"\\"Final\\" ist in diesem Kontext nicht zulässig.","finalMethodOverride":"Die Methode \\"{name}\\" kann die in der Klasse definierte endgültige Methode \\"{className}\\" nicht überschreiben.","finalNonMethod":"Die Funktion „{name}“ kann nicht @final markiert werden, da sie keine Methode ist.","finalReassigned":"\\"{name}\\" ist als \\"Final\\" deklariert und kann nicht neu zugewiesen werden.","finalRedeclaration":"\\"{name}\\" wurde zuvor als \\"Final\\" deklariert.","finalRedeclarationBySubclass":"\\"{name}\\" kann nicht neu deklariert werden, da die übergeordnete Klasse \\"{className}\\" es als Final deklariert.","finalTooManyArgs":"Nach \\"Final\\" wurde ein einzelnes Typargument erwartet.","finalUnassigned":"\\"{name}\\" ist als Final deklariert, aber der Wert ist nicht zugewiesen.","formatStringBrace":"Eine einzelne schließende geschweifte Klammer ist innerhalb des f-string-Literals nicht zulässig; verwenden Sie doppelte schließende geschweifte Klammern.","formatStringBytes":"Formatzeichenfolgenliterale (f-strings) dürfen nicht binär sein.","formatStringDebuggingIllegal":"Der F-String-Debugspezifizierer \\"=\\" erfordert Python 3.8 oder höher.","formatStringEscape":"Escapesequenz (umgekehrter Schrägstrich) ist im Ausdrucksteil der f-Zeichenfolge vor Python 3.12 nicht zulässig.","formatStringExpectedConversion":"Nach \\"!\\" in f-string wurde ein Konvertierungsspezifizierer erwartet.","formatStringIllegal":"Formatzeichenfolgenliterale (f-strings) erfordern Python 3.6 oder höher.","formatStringInPattern":"Die Formatzeichenfolge ist im Muster nicht zulässig.","formatStringNestedFormatSpecifier":"Ausdrücke sind zu tief im Formatzeichenfolgenspezifizierer geschachtelt.","formatStringNestedQuote":"Zeichenfolgen, die in einer f-Zeichenfolge geschachtelt sind, dürfen nicht dasselbe Anführungszeichen wie die f-Zeichenfolge vor Python 3.12 verwenden.","formatStringUnicode":"Formatzeichenfolgenliterale (f-strings) dürfen nicht Unicode sein.","formatStringUnterminated":"Nicht abgeschlossener Ausdruck in f-string; \\"}\\" wird erwartet.","functionDecoratorTypeUnknown":"Ein nicht typisierter Funktionsdekorator verdeckt den Funktionstyp; Decorator wird ignoriert.","functionInConditionalExpression":"Bedingter Ausdruck verweist auf eine Funktion, die immer zu \\"True\\" ausgewertet wird.","functionTypeParametersIllegal":"Die Syntax des Funktionstypparameters erfordert Python 3.12 oder höher.","futureImportLocationNotAllowed":"Importe von __future__ müssen am Anfang der Datei auftreten","generatorAsyncReturnType":"Der Rückgabetyp der asynchronen Generatorfunktion muss mit \\"AsyncGenerator[{yieldType}, Any]\\" kompatibel sein.","generatorNotParenthesized":"Generatorausdrücke müssen in Klammern gesetzt werden, wenn sie nicht das einzige Argument sind.","generatorSyncReturnType":"Der Rückgabetyp der Generatorfunktion muss mit \\"Generator[{yieldType}, Any, Any]\\" kompatibel sein.","genericBaseClassNotAllowed":"Die Basisklasse \\"Generic\\" kann nicht mit der Typparametersyntax verwendet werden.","genericClassAssigned":"Der generische Klassentyp kann nicht zugewiesen werden.","genericClassDeleted":"Der generische Klassentyp kann nicht gelöscht werden.","genericInstanceVariableAccess":"Der Zugriff auf die generische Instanzvariable über die Klasse ist mehrdeutig.","genericNotAllowed":"\\"Generic\\" ist in diesem Kontext nicht gültig.","genericTypeAliasBoundTypeVar":"Der generische Typalias innerhalb der Klasse kann keine gebundenen Typvariablen {names} verwenden.","genericTypeArgMissing":"\\"Generic\\" erfordert mindestens ein Typargument.","genericTypeArgTypeVar":"Das Typargument für \\"Generic\\" muss eine Typvariable sein.","genericTypeArgUnique":"Typargumente für \\"Generic\\" müssen eindeutig sein.","globalReassignment":"\\"{name}\\" wird vor einer globalen Deklaration zugewiesen.","globalRedefinition":"\\"{name}\\" wurde bereits als global deklariert.","implicitStringConcat":"Implizite Zeichenfolgenverkettung nicht zulässig","importCycleDetected":"Zyklus in Importkette erkannt","importDepthExceeded":"Importkettentiefe überschritten {depth}","importResolveFailure":"Import \\"{importName}\\" konnte nicht aufgelöst werden.","importSourceResolveFailure":"Import \\"{importName}\\" konnte aus der Quelle nicht aufgelöst werden.","importSymbolUnknown":"\\"{name}\\" ist ein unbekanntes Importsymbol.","incompatibleMethodOverride":"Die Methode \\"{name}\\" überschreibt die Klasse \\"{className}\\" auf inkompatible Weise.","inconsistentIndent":"Der Betrag für Nichteinzug stimmt nicht mit dem vorherigen Einzug überein.","inconsistentTabs":"Inkonsistente Verwendung von Tabulatoren und Leerzeichen im Einzug.","initMustReturnNone":"Der Rückgabetyp von \\"__init__\\" muss \\"None\\" sein.","initSubclassCallFailed":"Falsche Schlüsselwortargumente für __init_subclass__ Methode.","initSubclassClsParam":"__init_subclass__ Außerkraftsetzung sollte einen \\"cls\\"-Parameter annehmen.","initVarNotAllowed":"„ClassVar“ ist in diesem Kontext nicht zulässig.","instanceMethodSelfParam":"Instanzmethoden sollten einen \\"self\\"-Parameter verwenden.","instanceVarOverridesClassVar":"Die Instanzvariable \\"{name}\\" überschreibt die Klassenvariable desselben Namens in der Klasse \\"{className}\\"","instantiateAbstract":"Abstrakte Klasse \\"{type}\\" kann nicht erstellt werden.","instantiateProtocol":"Die Protokollklasse \\"{type}\\" kann nicht instanziiert werden.","internalBindError":"Interner Fehler beim Binden der Datei \\"{file}\\": {message}","internalParseError":"Interner Fehler beim Parsen der Datei \\"{file}\\": {message}","internalTypeCheckingError":"Interner Fehler bei der Typüberprüfung der Datei \\"{file}\\": {message}","invalidIdentifierChar":"Ungültiges Zeichen in Bezeichner","invalidStubStatement":"Die Anweisung ist innerhalb einer Typstubdatei bedeutungslos.","invalidTokenChars":"Ungültiges Zeichen \\"{text}\\" im Token","isInstanceInvalidType":"Das zweite Argument für \\"isinstance\\" muss eine Klasse oder ein Tupel von Klassen sein.","isSubclassInvalidType":"Das zweite Argument für \\"issubclass\\" muss eine Klasse oder ein Tupel von Klassen sein.","keyValueInSet":"Schlüssel-Wert-Paare sind innerhalb einer Menge nicht zulässig.","keywordArgInTypeArgument":"Schlüsselwortargumente können nicht in Typargumentlisten verwendet werden.","keywordOnlyAfterArgs":"Schlüsselworttrennzeichen ist nach dem Parameter \\"*\\" nicht zulässig.","keywordParameterMissing":"Mindestens ein Schlüsselwortparameter muss dem Parameter \\"*\\" folgen.","keywordSubscriptIllegal":"Schlüsselwortargumente innerhalb von Tiefskripts werden nicht unterstützt.","lambdaReturnTypePartiallyUnknown":"Der Rückgabetyp des Lambdaausdrucks \\"{returnType}\\" ist teilweise unbekannt.","lambdaReturnTypeUnknown":"Der Rückgabetyp der Lambdafunktion ist unbekannt.","listAssignmentMismatch":"Ein Ausdruck vom Typ \\"{type}\\" kann der Zielliste nicht zugewiesen werden.","listInAnnotation":"Ein Listenausdruck ist in der Typanmerkung nicht zulässig.","literalEmptyArgs":"Nach \\"Literal\\" wurde mindestens ein Typargument erwartet.","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"\\"Literal\\" kann in diesem Kontext nicht ohne Typargument verwendet werden.","literalNotCallable":"Der Literaltyp kann nicht instanziiert werden.","literalUnsupportedType":"Typargumente für \\"Literal\\" müssen None, ein Literalwert (int, bool, str oder bytes) oder ein Enumerationswert sein.","matchIncompatible":"Übereinstimmungsanweisungen erfordern Python 3.10 oder höher","matchIsNotExhaustive":"Fälle innerhalb der match-Anweisung behandeln nicht umfassend alle Werte.","maxParseDepthExceeded":"Maximale Analysetiefe überschritten; brechen Sie den Ausdruck in kleinere Unterausdrücke um","memberAccess":"Auf Member \\"{name}\\" für Typ \\"{type}\\" kann nicht zugegriffen werden.","memberDelete":"Member \\"{name}\\" für Typ \\"{type}\\" kann nicht gelöscht werden.","memberSet":"Member \\"{name}\\" für Typ \\"{type}\\" kann nicht zugewiesen werden.","metaclassConflict":"Die Metaklasse einer abgeleiteten Klasse muss eine Unterklasse der Metaklassen aller ihrer Basisklassen sein.","metaclassDuplicate":"Es kann nur eine Metaklasse angegeben werden.","metaclassIsGeneric":"Metaklasse kann nicht generisch sein.","methodNotDefined":"\\"{name}\\" Methode nicht definiert","methodNotDefinedOnType":"Die Methode \\"{name}\\" ist für den Typ \\"{type}\\" nicht definiert.","methodOrdering":"Es kann keine konsistente Methodenreihenfolge erstellt werden.","methodOverridden":"\\"{name}\\" überschreibt die Methode mit demselben Namen in der Klasse \\"{className}\\" mit inkompatiblem Typ \\"{type}\\"","methodReturnsNonObject":"Die Methode \\"{name}\\" gibt kein Objekt zurück.","missingSuperCall":"Die Methode \\"{methodName}\\" ruft nicht die Methode mit demselben Namen in der übergeordneten Klasse auf.","moduleAsType":"Das Modul kann nicht als Typ verwendet werden.","moduleNotCallable":"Das Modul kann nicht aufgerufen werden.","moduleUnknownMember":"\\"{memberName}\\" ist kein bekanntes Mitglied des Moduls \\"{moduleName}\\"","namedExceptAfterCatchAll":"Eine benannte except-Klausel darf nicht nach catch-all except-Klausel auftreten.","namedParamAfterParamSpecArgs":"Der Schlüsselwortparameter \\"{name}\\" kann nicht in der Signatur nach dem Parameter \\"ParamSpec args\\" verwendet werden.","namedTupleEmptyName":"Namen innerhalb eines benannten Tupels dürfen nicht leer sein.","namedTupleEntryRedeclared":"\\"{name}\\" kann nicht überschrieben werden, da die übergeordnete Klasse \\"{className}\\" ein benanntes Tupel ist.","namedTupleFirstArg":"Es wird ein benannter Tupelklassenname als erstes Argument erwartet.","namedTupleMultipleInheritance":"Mehrfachvererbung mit NamedTuple wird nicht unterstützt.","namedTupleNameKeyword":"Feldnamen dürfen kein Schlüsselwort sein.","namedTupleNameType":"Es wurde ein Tupel mit zwei Einträgen unter Angabe von Eintragsname und -typ erwartet.","namedTupleNameUnique":"Namen innerhalb eines benannten Tupels müssen eindeutig sein.","namedTupleNoTypes":"\\"namedtuple\\" stellt keine Typen für Tupeleinträge bereit; verwenden Sie stattdessen \\"NamedTuple\\".","namedTupleSecondArg":"Benannte Tupeleintragsliste als zweites Argument erwartet","newClsParam":"__new__ Außerkraftsetzung sollte einen \\"cls\\"-Parameter annehmen.","newTypeAnyOrUnknown":"Das zweite Argument für NewType muss eine bekannte Klasse sein, nicht „Any“ oder „Unknown“.","newTypeBadName":"Das erste Argument für NewType muss ein Zeichenfolgenliteral sein.","newTypeLiteral":"\\"NewType\\" kann nicht mit dem Literaltyp verwendet werden.","newTypeNameMismatch":"NewType muss einer Variablen mit demselben Namen zugewiesen werden.","newTypeNotAClass":"Klasse als zweites Argument für NewType erwartet","newTypeParamCount":"NewType erfordert zwei Positionsargumente.","newTypeProtocolClass":"NewType kann nicht mit strukturellem Typ (Protokoll- oder TypedDict-Klasse) verwendet werden.","noOverload":"Keine Überladungen für \\"{name}\\" stimmen mit den angegebenen Argumenten überein.","noReturnContainsReturn":"Eine Funktion mit dem deklarierten Rückgabetyp \\"NoReturn\\" kann keine return-Anweisung enthalten.","noReturnContainsYield":"Eine Funktion mit dem deklarierten Rückgabetyp \\"NoReturn\\" kann keine yield-Anweisung enthalten.","noReturnReturnsNone":"Eine Funktion mit dem deklarierten Rückgabetyp \\"NoReturn\\" kann nicht \\"None\\" zurückgeben.","nonDefaultAfterDefault":"Das nicht standardmäßige Argument folgt dem Standardargument.","nonLocalInModule":"Nichtlokale Deklaration auf Modulebene nicht zulässig","nonLocalNoBinding":"Es wurde keine Bindung für nichtlokale \\"{name}\\" gefunden.","nonLocalReassignment":"\\"{name}\\" wird vor einer nichtlokalen Deklaration zugewiesen.","nonLocalRedefinition":"\\"{name}\\" wurde bereits als nichtlokal deklariert.","noneNotCallable":"Ein Objekt vom Typ \\"None\\" kann nicht aufgerufen werden.","noneNotIterable":"Ein Objekt vom Typ \\"None\\" kann nicht als iterierbarer Wert verwendet werden.","noneNotSubscriptable":"Das Objekt vom Typ \\"None\\" kann nicht tiefgestellt werden.","noneNotUsableWith":"Ein Objekt vom Typ \\"None\\" kann nicht mit \\"with\\" verwendet werden.","noneOperator":"Der Operator \\"{operator}\\" wird für den \\"{None}\\" nicht unterstützt.","noneUnknownMember":"\\"{name}\\" ist kein bekanntes Element von \\"None\\".","notRequiredArgCount":"Nach \\"NotRequired\\" wurde ein einzelnes Typargument erwartet.","notRequiredNotInTypedDict":"\\"NotRequired\\" ist in diesem Kontext nicht zulässig.","objectNotCallable":"Das Objekt vom Typ \\"{type}\\" kann nicht aufgerufen werden.","obscuredClassDeclaration":"Die Klassendeklaration \\"{name}\\" wird durch eine Deklaration desselben Namens verdeckt.","obscuredFunctionDeclaration":"Die Funktionsdeklaration \\"{name}\\" wird durch eine Deklaration desselben Namens verdeckt.","obscuredMethodDeclaration":"Die Methodendeklaration \\"{name}\\" wird durch eine Deklaration desselben Namens verdeckt.","obscuredParameterDeclaration":"Die Parameterdeklaration \\"{name}\\" wird durch eine Deklaration desselben Namens verdeckt.","obscuredTypeAliasDeclaration":"Die Typaliasdeklaration \\"{name}\\" wird durch eine Deklaration desselben Namens verdeckt.","obscuredVariableDeclaration":"Die Deklaration \\"{name}\\" wird durch eine Deklaration desselben Namens verdeckt.","operatorLessOrGreaterDeprecated":"Der Operator \\"<>\\" wird in Python 3 nicht unterstützt; verwenden Sie stattdessen \\"!=\\".","optionalExtraArgs":"Nach \\"Optional\\" wurde ein Typargument erwartet.","orPatternIrrefutable":"Ein irrefutables Muster ist nur als letztes Unterpattern in einem \\"or\\"-Muster zulässig.","orPatternMissingName":"Alle Teilmuster innerhalb eines \\"or\\"-Musters müssen auf dieselben Namen zielen.","overlappingKeywordArgs":"Typisierte Wörterbuchüberlappungen mit Schlüsselwortparameter: {names}","overlappingOverload":"Überladung {obscured} für \\"{name}\\" wird nie verwendet, da sich die Parameter überlappen, {obscuredBy}","overloadAbstractMismatch":"Überladene Methoden müssen alle abstrakt sein oder nicht.","overloadClassMethodInconsistent":"Überladungen für \\"{name}\\" verwenden @classmethod inkonsistent","overloadFinalInconsistencyImpl":"Die Überladung für „{name}“ ist @final markiert, die Implementierung ist es jedoch nicht.","overloadFinalInconsistencyNoImpl":"Überladung {index} für „{name}“ ist als @final markiert, Überladung 1 ist es jedoch nicht.","overloadImplementationMismatch":"Die überladene Implementierung ist nicht konsistent mit der Signatur der Überladung {index}","overloadReturnTypeMismatch":"Überladung {prevIndex} für \\"{name}\\" überlappt {newIndex} und gibt einen inkompatiblen Typ zurück.","overloadStaticMethodInconsistent":"Überladungen für \\"{name}\\" verwenden @staticmethod inkonsistent","overloadWithoutImplementation":"\\"{name}\\" ist als Überladen markiert, es wurde jedoch keine Implementierung bereitgestellt.","overriddenMethodNotFound":"Die Methode \\"{name}\\" ist als Überschreibung markiert, aber es ist keine Basismethode mit demselben Namen vorhanden.","overrideDecoratorMissing":"Die Methode \\"{name}\\" ist nicht als Überschreibung markiert, überschreibt jedoch eine Methode in der Klasse \\"{className}\\"","paramAfterKwargsParam":"Der Parameter kann nicht auf den Parameter \\"**\\" folgen.","paramAlreadyAssigned":"Der Parameter \\"{name}\\" ist bereits zugewiesen.","paramAnnotationMissing":"Typanmerkung fehlt für Parameter \\"{name}\\"","paramAssignmentMismatch":"Ein Ausdruck vom Typ \\"{sourceType}\\" kann keinem Parameter vom Typ \\"{paramType}\\" zugewiesen werden.","paramNameMissing":"Kein Parameter mit dem Namen \\"{name}\\"","paramSpecArgsKwargsUsage":"Die Member \\"args\\" und \\"kwargs\\" von ParamSpec müssen beide innerhalb einer Funktionssignatur auftreten.","paramSpecArgsMissing":"Argumente für ParamSpec \\"{type}\\" fehlen.","paramSpecArgsUsage":"Das \\"args\\"-Element von ParamSpec ist nur gültig, wenn es mit dem Parameter \\"*args\\" verwendet wird.","paramSpecAssignedName":"ParamSpec muss einer Variablen mit dem Namen \\"{name}\\" zugewiesen werden.","paramSpecContext":"ParamSpec ist in diesem Kontext nicht zulässig.","paramSpecDefaultNotTuple":"Es wurde ein Auslassungszeichen, ein Tupelausdruck oder ParamSpec für den Standardwert von ParamSpec erwartet.","paramSpecFirstArg":"Der Name von ParamSpec wurde als erstes Argument erwartet.","paramSpecKwargsUsage":"Das \\"kwargs\\"-Element von ParamSpec ist nur gültig, wenn es mit dem Parameter **kwargs verwendet wird.","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" hat in diesem Kontext keine Bedeutung.","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" ist auf einen Aufruf innerhalb des Rückgabetyps beschränkt und kann im Funktionstext nicht referenziert werden.","paramSpecUnknownArg":"ParamSpec unterstützt nur ein Argument.","paramSpecUnknownMember":"\\"{name}\\" ist kein bekanntes Element von ParamSpec.","paramSpecUnknownParam":"\\"{name}\\" ist ein unbekannter Parameter für ParamSpec.","paramTypeCovariant":"Eine Variable vom Typ \\"Covariant\\" kann nicht im Parametertyp verwendet werden.","paramTypePartiallyUnknown":"Der Typ des Parameters \\"{paramName}\\" ist teilweise unbekannt.","paramTypeUnknown":"Der Typ des Parameters \\"{paramName}\\" ist unbekannt.","parenthesizedContextManagerIllegal":"Klammern innerhalb der with-Anweisung erfordern Python 3.9 oder höher.","patternNeverMatches":"Das Muster wird für den Antragstellertyp \\"{type}\\" nie abgeglichen","positionArgAfterNamedArg":"Ein Positionsargument darf nicht nach Schlüsselwortargumenten stehen.","positionOnlyAfterArgs":"Das Parametertrennzeichen \\"Nur Position\\" ist nach dem Parameter \\"*\\" nicht zulässig.","positionOnlyAfterKeywordOnly":"Der Parameter \\"/\\" muss vor dem Parameter \\"*\\" stehen.","positionOnlyAfterNon":"Der Parameter \\"Nur Position\\" ist nach einem Parameter, der nicht vom Typ \\"Nur Position\\" ist, nicht zulässig.","positionOnlyFirstParam":"Das Parametertrennzeichen \\"Nur Position\\" ist als erster Parameter nicht zulässig.","positionOnlyIncompatible":"Für das Parametertrennzeichen \\"Nur Position\\" ist Python 3.8 oder höher erforderlich.","privateImportFromPyTypedModule":"\\"{name}\\" wird nicht aus dem Modul \\"{module}\\" exportiert.","privateUsedOutsideOfClass":"\\"{name}\\" ist privat und wird außerhalb der Klasse verwendet, in dem es deklariert ist.","privateUsedOutsideOfModule":"\\"{name}\\" ist privat und wird außerhalb des Moduls verwendet, in dem es deklariert ist.","propertyOverridden":"\\"{name}\\" überschreibt die Eigenschaft desselben Namens in der Klasse \\"{className}\\" nicht ordnungsgemäß","propertyStaticMethod":"Statische Methoden sind für Eigenschaften-Getter, -Setter oder -Deleter nicht zulässig.","protectedUsedOutsideOfClass":"\\"{name}\\" ist geschützt und wird außerhalb der Klasse verwendet, in der es deklariert ist.","protocolBaseClass":"Die Protokollklasse \\"{classType}\\" kann nicht von einer Nichtprotokollklasse \\"{baseType}\\" abgeleitet werden","protocolBaseClassWithTypeArgs":"Typargumente sind mit der Protokollklasse nicht zulässig, wenn die Typparametersyntax verwendet wird.","protocolIllegal":"Die Verwendung von \\"Protocol\\" erfordert Python 3.7 oder höher.","protocolNotAllowed":"\\"Protocol\\" kann in diesem Kontext nicht verwendet werden.","protocolUnsafeOverlap":"Die Klasse überlappt unsicher mit „{name}“ und könnte zur Laufzeit eine Übereinstimmung erzeugen.","protocolVarianceContravariant":"Die Typvariable \\"{variable}\\", die im generischen Protokoll \\"{class}\\" verwendet wird, muss \\"contravariant\\" sein.","protocolVarianceCovariant":"Die Typvariable \\"{variable}\\", die im generischen Protokoll \\"{class}\\" verwendet wird, muss \\"covariant\\" sein.","protocolVarianceInvariant":"Die Typvariable \\"{variable}\\", die im generischen Protokoll \\"{class}\\" verwendet wird, muss \\"invariant\\" sein.","pyrightCommentInvalidDiagnosticBoolValue":"Auf die Pyright-Kommentardirektive muss \\"=\\" und der Wert \\"true\\" oder \\"false\\" folgen.","pyrightCommentInvalidDiagnosticSeverityValue":"Auf die Pyright-Kommentardirektive muss \\"=\\" und der Wert \\"true\\", \\"false\\", \\"error\\", \\"warning\\", \\"information\\" oder \\"none\\" folgen.","pyrightCommentMissingDirective":"Auf einen Pyright-Kommentar muss eine Direktive (basic oder strict) oder eine Diagnoseregel folgen.","pyrightCommentNotOnOwnLine":"Pyright-Kommentare, die zum Steuern von Einstellungen auf Dateiebene verwendet werden, müssen in ihrer eigenen Zeile angezeigt werden.","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" ist eine unbekannte Diagnoseregel für pyright-Kommentar.","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" ist ein ungültiger Wert für den pyright-Kommentar; \\"true\\", \\"false\\", \\"error\\", \\"warning\\", \\"information\\" oder \\"none\\" erwartet.","pyrightCommentUnknownDirective":"\\"{directive}\\" ist eine unbekannte Direktive für pyright-Kommentar; \\"strict\\" oder \\"basic\\" erwartet","readOnlyArgCount":"Nach \\"ReadOnly\\" wurde ein einzelnes Typargument erwartet.","readOnlyNotInTypedDict":"\\"ReadOnly\\" ist in diesem Kontext nicht zulässig.","recursiveDefinition":"Der Typ von \\"{name}\\" konnte nicht bestimmt werden, da er sich auf selbst bezieht.","relativeImportNotAllowed":"Relative Importe können nicht mit dem Formular \\"import .a\\" verwendet werden; verwenden Sie stattdessen \\"from . import a\\"","requiredArgCount":"Nach \\"Required\\" wurde ein einzelnes Typargument erwartet.","requiredNotInTypedDict":"\\"Required\\" ist in diesem Kontext nicht zulässig.","returnInAsyncGenerator":"Eine Return-Anweisung mit einem Wert ist im asynchronen Generator nicht zulässig.","returnMissing":"Die Funktion mit dem deklarierten Rückgabetyp \\"{returnType}\\" muss einen Wert für alle Codepfade zurückgeben.","returnOutsideFunction":"\\"return\\" kann nur innerhalb einer Funktion verwendet werden.","returnTypeContravariant":"Die Variable vom Typ \\"contravariant\\" kann nicht im Rückgabetyp verwendet werden.","returnTypeMismatch":"Ein Ausdruck vom Typ \\"{exprType}\\" kann dem Rückgabetyp \\"{returnType}\\" nicht zugewiesen werden.","returnTypePartiallyUnknown":"Der Rückgabetyp \\"{returnType}\\" ist teilweise unbekannt.","returnTypeUnknown":"Unbekannter Rückgabetyp","revealLocalsArgs":"Es wurden keine Argumente für den Aufruf \\"reveal_locals\\" erwartet.","revealLocalsNone":"Keine lokalen Elemente in diesem Bereich","revealTypeArgs":"Für den Aufruf \\"reveal_type\\" wurde ein einzelnes Positionsargument erwartet.","revealTypeExpectedTextArg":"Das Argument \\"expected_text\\" für die Funktion \\"reveal_type\\" muss ein str-Literalwert sein.","revealTypeExpectedTextMismatch":"Typentextkonflikt; \\"{expected}\\" erwartet, aber \\"{received}\\" empfangen","revealTypeExpectedTypeMismatch":"Typenkonflikt; \\"{expected}\\" erwartet, aber \\"{received}\\" empfangen","selfTypeContext":"\\"Self\\" ist in diesem Kontext ungültig.","selfTypeMetaclass":"„Self“ kann nicht innerhalb einer Metaklasse (einer Unterklasse von „type“) verwendet werden.","selfTypeWithTypedSelfOrCls":"\\"Self\\" kann nicht in einer Funktion mit einem Parameter \\"self\\" oder \\"cls\\" verwendet werden, der eine andere Typanmerkung als \\"Self\\" aufweist.","setterGetterTypeMismatch":"Der Werttyp des Eigenschaftensetters kann dem Rückgabetyp des Getters nicht zugewiesen werden.","singleOverload":"\\"{name}\\" ist als Überladung markiert, aber es fehlen weitere Überladungen.","slotsAttributeError":"\\"{name}\\" ist in __slots__ nicht angegeben.","slotsClassVarConflict":"\\"{name}\\" steht in Konflikt mit Instanzvariablen, die in __slots__ deklariert sind.","starPatternInAsPattern":"Das Sternmuster kann nicht mit dem Ziel \\"as\\" verwendet werden.","starPatternInOrPattern":"Das Sternmuster kann in anderen Mustern nicht ORed sein.","starStarWildcardNotAllowed":"** kann nicht zusammen mit Platzhalter \\"_\\" verwendet werden","staticClsSelfParam":"Statische Methoden dürfen keinen \\"self\\"- oder \\"cls\\"-Parameter annehmen.","stdlibModuleOverridden":"\\"{path}\\" überschreibt das stdlib-Modul \\"{name}\\"","stringNonAsciiBytes":"Ein Nicht-ASCII-Zeichen ist im Zeichenfolgenliteral in Bytes nicht zulässig.","stringNotSubscriptable":"Der Zeichenfolgenausdruck kann nicht in der Typanmerkung tiefgestellt werden; schließen Sie die gesamte Anmerkung in Anführungszeichen ein","stringUnsupportedEscape":"Nicht unterstützte Escapesequenz im Zeichenfolgenliteral.","stringUnterminated":"Das Zeichenfolgenliteral ist nicht beendet.","stubFileMissing":"Die Stubdatei wurde für \\"{importName}\\" nicht gefunden.","stubUsesGetAttr":"Die Typ-Stub-Datei ist unvollständig; \\"__getattr__\\" verdeckt Typfehler für Modul","sublistParamsIncompatible":"Unterlistenparameter werden in Python 3.x nicht unterstützt.","superCallArgCount":"Es werden nicht mehr als zwei Argumente für den Superaufruf erwartet.","superCallFirstArg":"Klassentyp als erstes Argument für super-Aufruf erwartet, aber \\"{type}\\" empfangen","superCallSecondArg":"Das zweite Argument für den \\"super\\"-Aufruf muss ein Objekt oder eine Klasse sein, das bzw. die von \\"{type}\\" abgeleitet wird.","superCallZeroArgForm":"Die Nullargumentform des „Superaufrufs“ ist nur innerhalb einer Methode gültig.","superCallZeroArgFormStaticMethod":"Die Nullargumentform des „Superaufrufs“ ist nicht innerhalb einer statischen Methode gültig.","symbolIsPossiblyUnbound":"\\"{name}\\" ist möglicherweise ungebunden.","symbolIsUnbound":"\\"{name}\\" ist ungebunden.","symbolIsUndefined":"\\"{name}\\" ist nicht definiert.","symbolOverridden":"\\"{name}\\" überschreibt das Symbol desselben Namens in der Klasse \\"{className}\\"","ternaryNotAllowed":"Ternärer Ausdruck in Typanmerkung nicht zulässig","totalOrderingMissingMethod":"Die Klasse muss \\"__lt__\\", \\"__le__\\", \\"__gt__\\" oder \\"__ge__\\" definieren, um total_ordering zu verwenden.","trailingCommaInFromImport":"Nachgestelltes Komma ist ohne umgebende Klammern nicht zulässig.","tryWithoutExcept":"Die try-Anweisung muss mindestens eine except- oder finally-Klausel aufweisen.","tupleAssignmentMismatch":"Ein Ausdruck vom Typ \\"{type}\\" kann dem Zieltupel nicht zugewiesen werden.","tupleInAnnotation":"Ein Tupelausdruck ist in der Typanmerkung nicht zulässig.","tupleIndexOutOfRange":"Der Index {index} liegt für den Typ {type} außerhalb des gültigen Bereichs.","typeAliasIllegalExpressionForm":"Ungültiges Ausdrucksformular für Typaliasdefinition","typeAliasIsRecursiveDirect":"Der Typalias \\"{name}\\" kann sich nicht selbst in seiner Definition verwenden.","typeAliasNotInModuleOrClass":"TypeAlias kann nur innerhalb eines Moduls oder Klassenbereichs definiert werden.","typeAliasRedeclared":"\\"{name}\\" ist als TypeAlias deklariert und kann nur einmal zugewiesen werden.","typeAliasStatementBadScope":"Eine Typanweisung kann nur innerhalb eines Moduls oder Klassenbereichs verwendet werden.","typeAliasStatementIllegal":"Die Typaliasanweisung erfordert Python 3.12 oder höher.","typeAliasTypeBaseClass":"Ein in einer „type“-Anweisung definierter Typalias kann nicht als Basisklasse verwendet werden.","typeAliasTypeMustBeAssigned":"TypeAliasType muss einer Variablen mit dem gleichen Namen wie der Typalias zugewiesen werden.","typeAliasTypeNameArg":"Das erste Argument für TypeAliasType muss ein Zeichenfolgenliteral sein, das den Namen des Typalias darstellt.","typeAliasTypeNameMismatch":"Der Name des Typalias muss mit dem Namen der Variablen übereinstimmen, der er zugewiesen ist.","typeAliasTypeParamInvalid":"Die Typparameterliste muss ein Tupel sein, das nur TypeVar, TypeVarTuple oder ParamSpec enthält.","typeAnnotationCall":"Der Aufrufausdruck ist im Typausdruck nicht zulässig","typeAnnotationVariable":"Variable im Typausdruck nicht zulässig","typeAnnotationWithCallable":"Das Typargument für \\"type\\" muss eine Klasse sein. Aufrufbare Elemente werden nicht unterstützt.","typeArgListExpected":"ParamSpec, Ellipse oder Liste der Typen erwartet","typeArgListNotAllowed":"Der Listenausdruck ist für dieses Typargument nicht zulässig.","typeArgsExpectingNone":"Für die Klasse \\"{name}\\" werden keine Typargumente erwartet.","typeArgsMismatchOne":"Es wurde ein Typargument erwartet, es wurde jedoch {received} empfangen.","typeArgsMissingForAlias":"Für den generischen Typalias \\"{name}\\" werden Typargumente erwartet.","typeArgsMissingForClass":"Für die generische Klasse \\"{name}\\" werden Typargumente erwartet.","typeArgsTooFew":"Für \\"{name}\\" wurden zu wenige Typargumente angegeben; {expected} erwartet, aber {received} empfangen","typeArgsTooMany":"Für \\"{name}\\" wurden zu viele Typargumente angegeben; {expected} erwartet, aber {received} empfangen","typeAssignmentMismatch":"Ein Ausdruck vom Typ \\"{sourceType}\\" kann nicht dem deklarierten Typ \\"{destType}\\" zugewiesen werden.","typeAssignmentMismatchWildcard":"Das Importsymbol \\"{name}\\" weist den Typ \\"{sourceType}\\" auf, der dem deklarierten Typ \\"{destType}\\" nicht zugewiesen werden kann.","typeCallNotAllowed":"Der type()-Aufruf darf nicht in der Typanmerkung verwendet werden.","typeCheckOnly":"\\"{name}\\" ist als @type_check_only markiert und kann nur in Typanmerkungen verwendet werden.","typeCommentDeprecated":"Die Verwendung von Typkommentaren ist veraltet; verwenden Sie stattdessen Typanmerkung","typeExpectedClass":"Typausdruck erwartet, aber \\"{type}\\" empfangen","typeGuardArgCount":"Nach \\"TypeGuard\\" oder \\"TypeIs\\" wurde ein einzelnes Typargument erwartet.","typeGuardParamCount":"Benutzerdefinierte Typenschutzfunktionen und -methoden müssen mindestens einen Eingabeparameter aufweisen.","typeIsReturnType":"Der Rückgabetyp von TypeIs (\\"{returnType}\\") ist nicht konsistent mit dem Wertparametertyp (\\"{type}\\").","typeNotAwaitable":"\\"{type}\\" ist nicht awaitable.","typeNotIntantiable":"\\"{type}\\" kann nicht instanziiert werden.","typeNotIterable":"\\"{type}\\" ist nicht iterierbar.","typeNotSpecializable":"Der Typ \\"{type}\\" konnte nicht spezialisiert werden","typeNotSubscriptable":"Das Objekt vom Typ \\"{type}\\" kann nicht tiefgestellt werden.","typeNotSupportBinaryOperator":"Der Operator \\"{operator}\\" wird für Typen \\"{leftType}\\" und \\"{rightType}\\" nicht unterstützt.","typeNotSupportBinaryOperatorBidirectional":"Der Operator \\"{operator}\\" wird für die Typen \\"{leftType}\\" und \\"{rightType}\\" nicht unterstützt, wenn der erwartete Typ \\"{expectedType}\\" ist.","typeNotSupportUnaryOperator":"Der Operator \\"{operator}\\" wird für den Typ \\"{type}\\" nicht unterstützt.","typeNotSupportUnaryOperatorBidirectional":"Der Operator \\"{operator}\\" wird für den Typ \\"{type}\\" nicht unterstützt, wenn der erwartete Typ \\"{expectedType}\\" ist.","typeNotUsableWith":"Ein Objekt vom Typ \\"{type}\\" kann nicht mit \\"with\\" verwendet werden, da es nicht {method} implementiert.","typeParameterBoundNotAllowed":"\\"Bound\\" oder \\"constraint\\" kann nicht mit einem variadic-Typparameter oder ParamSpec verwendet werden.","typeParameterConstraintTuple":"Die Typparametereinschränkung muss ein Tupel mit mindestens zwei Typen sein.","typeParameterExistingTypeParameter":"Der Typparameter \\"{name}\\" wird bereits verwendet.","typeParameterNotDeclared":"Der Typparameter \\"{name}\\" ist nicht in der Typparameterliste für \\"{container}\\" enthalten.","typeParametersMissing":"Es muss mindestens ein Typparameter angegeben werden.","typePartiallyUnknown":"Der Typ von \\"{name}\\" ist teilweise unbekannt.","typeUnknown":"Der Typ von \\"{name}\\" ist unbekannt.","typeVarAssignedName":"TypeVar muss einer Variablen mit dem Namen \\"{name}\\" zugewiesen werden.","typeVarAssignmentMismatch":"Der Typ \\"{type}\\" kann der Typvariablen \\"{name}\\" nicht zugewiesen werden.","typeVarBoundAndConstrained":"TypeVar kann nicht gleichzeitig gebunden und eingeschränkt sein.","typeVarBoundGeneric":"Der gebundene Typ \\"TypeVar\\" darf nicht generisch sein.","typeVarConstraintGeneric":"Der Typ der TypeVar-Einschränkung darf nicht generisch sein.","typeVarDefaultBoundMismatch":"Der Standardtyp \\"TypeVar\\" muss ein Untertyp des gebundenen Typs sein.","typeVarDefaultConstraintMismatch":"Der Standardtyp \\"TypeVar\\" muss einer der eingeschränkten Typen sein.","typeVarDefaultIllegal":"Für Standardtypen von Typvariablen ist Python 3.13 oder höher erforderlich.","typeVarDefaultInvalidTypeVar":"Der Typparameter \\"{name}\\" weist einen Standardtyp auf, der auf eine oder mehrere Typvariablen verweist, die außerhalb des Gültigkeitsbereichs liegen.","typeVarFirstArg":"Der Name von TypeVar wurde als erstes Argument erwartet.","typeVarNoMember":"TypeVar \\"{type}\\" hat kein Member \\"{name}\\"","typeVarNotSubscriptable":"TypeVar \\"{type}\\" kann nicht tiefgestellt werden.","typeVarNotUsedByOuterScope":"Die Typvariable \\"{name}\\" hat in diesem Kontext keine Bedeutung.","typeVarPossiblyUnsolvable":"Die Typvariable \\"{name}\\" wird möglicherweise nicht aufgelöst, wenn der Aufrufer kein Argument für Parameter \\"{param}\\" bereitstellt","typeVarScopedToReturnType":"Die Typvariable \\"{name}\\" ist auf einen Aufruf innerhalb des Rückgabetyps beschränkt und kann im Funktionstext nicht referenziert werden.","typeVarSingleConstraint":"TypeVar muss mindestens zwei eingeschränkte Typen aufweisen.","typeVarTupleConstraints":"TypeVarTuple darf keine Werteinschränkungen aufweisen.","typeVarTupleContext":"TypeVarTuple ist in diesem Kontext nicht zulässig.","typeVarTupleDefaultNotUnpacked":"Der Standardtyp \\"TypeVarTuple\\" muss ein entpacktes Tupel oder ein TypeVarTuple sein.","typeVarTupleMustBeUnpacked":"Der Entpackungsoperator ist für den TypeVarTuple-Wert erforderlich.","typeVarTupleUnknownParam":"\\"{name}\\" ist ein unbekannter Parameter für TypeVar-Tuple.","typeVarUnknownParam":"\\"{name}\\" ist ein unbekannter Parameter für TypeVar.","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" wird bereits von einem äußeren Bereich verwendet.","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" wird in der generischen Funktionssignatur nur einmal angezeigt.","typeVarVariance":"TypeVar darf nicht gleichzeitig \\"covariant\\" und \\"contravariant\\" sein.","typeVarWithDefaultFollowsVariadic":"TypeVar „{typeVarName}“ weist einen Standardwert auf und kann typeVarTuple „{variadicName}“ nicht folgen.","typeVarWithoutDefault":"\\"{name}\\" kann nicht nach \\"{other}\\" in der Typparameterliste angezeigt werden, da es keinen Standardtyp aufweist.","typeVarsNotInGenericOrProtocol":"Generic[] oder Protocol[] müssen alle Typvariablen enthalten.","typedDictAccess":"Auf das Element in TypedDict konnte nicht zugegriffen werden.","typedDictAssignedName":"TypedDict muss einer Variablen mit dem Namen „{name}“ zugewiesen werden.","typedDictBadVar":"TypedDict-Klassen dürfen nur Typanmerkungen enthalten.","typedDictBaseClass":"Alle Basisklassen für TypedDict-Klassen müssen auch TypedDict-Klassen sein.","typedDictBoolParam":"Es wird erwartet, dass \\"{name}\\" Parameter den Wert \\"True\\" oder \\"False\\" aufweist.","typedDictClosedExtras":"Die Basisklasse „{name}“ ist ein geschlossenes TypedDict; zusätzliche Elemente müssen vom Typ „{type}“ sein.","typedDictClosedNoExtras":"Die Basisklasse „{name}“ ist ein geschlossenes TypedDict; zusätzliche Elemente sind nicht zulässig.","typedDictDelete":"Das Element in TypedDict konnte nicht gelöscht werden.","typedDictEmptyName":"Namen innerhalb eines TypedDict dürfen nicht leer sein.","typedDictEntryName":"Für den Wörterbucheintragsnamen wurde ein Zeichenfolgenliteral erwartet.","typedDictEntryUnique":"Namen innerhalb eines Wörterbuchs müssen eindeutig sein.","typedDictExtraArgs":"Zusätzliche TypedDict-Argumente werden nicht unterstützt.","typedDictFieldNotRequiredRedefinition":"Das TypedDict-Element „{name}“ kann nicht als „NotRequired“ neu definiert werden.","typedDictFieldReadOnlyRedefinition":"Das TypedDict-Element „{name}“ kann nicht als „ReadOnly“ neu definiert werden.","typedDictFieldRequiredRedefinition":"Das TypedDict-Element „{name}“ kann nicht als „Required“ neu definiert werden.","typedDictFirstArg":"Der Klassenname \\"TypedDict\\" wird als erstes Argument erwartet.","typedDictInitsubclassParameter":"TypedDict unterstützt __init_subclass__ Parameter „{name}“ nicht.","typedDictNotAllowed":"\\"TypedDict\\" kann in diesem Kontext nicht verwendet werden.","typedDictSecondArgDict":"Es wird ein dict- oder Schlüsselwortparameter als zweiter Parameter erwartet.","typedDictSecondArgDictEntry":"Einfacher Wörterbucheintrag erwartet","typedDictSet":"Element konnte in TypedDict nicht zugewiesen werden.","unaccessedClass":"Auf die Klasse \\"{name}\\" kann nicht zugegriffen werden.","unaccessedFunction":"Auf die Funktion \\"{name}\\" kann nicht zugegriffen werden.","unaccessedImport":"Auf den Import \\"{name}\\" kann nicht zugegriffen werden.","unaccessedSymbol":"Auf \\"{name}\\" kann nicht zugegriffen werden.","unaccessedVariable":"Auf die Variable \\"{name}\\" kann nicht zugegriffen werden.","unannotatedFunctionSkipped":"Die Analyse der Funktion \\"{name}\\" wird übersprungen, da sie nicht kommentiert wurde.","unaryOperationNotAllowed":"Unärer Operator in Typanmerkung nicht zulässig","unexpectedAsyncToken":"Es wurde erwartet, dass \\"def\\", \\"with\\" oder \\"for\\" auf \\"async\\" folgt.","unexpectedExprToken":"Unerwartetes Token am Ende des Ausdrucks.","unexpectedIndent":"Unerwarteter Einzug","unexpectedUnindent":"\\"Unindent\\" nicht erwartet.","unhashableDictKey":"Der Wörterbuchschlüssel muss hashbar sein.","unhashableSetEntry":"Der Eintrag \\"Set\\" muss hashbar sein.","uninitializedAbstractVariables":"In der abstrakten Basisklasse definierte Variablen sind in der endgültigen Klasse \\"{classType}\\" nicht initialisiert","uninitializedInstanceVariable":"Die Instanzvariable \\"{name}\\" ist im Klassentext oder in der __init__ Methode nicht initialisiert.","unionForwardReferenceNotAllowed":"Die Unionsyntax kann nicht mit einem Zeichenfolgenoperanden verwendet werden; verwenden Sie Anführungszeichen um den gesamten Ausdruck","unionSyntaxIllegal":"Alternative Syntax für Unions erfordert Python 3.10 oder höher.","unionTypeArgCount":"Union erfordert mindestens zwei Typargumente.","unionUnpackedTuple":"Union kann kein entpacktes Tupel enthalten.","unionUnpackedTypeVarTuple":"Die Union kann kein entpacktes TypeVarTuple enthalten.","unnecessaryCast":"Nicht erforderlicher \\"cast\\"-Aufruf; der Typ ist bereits \\"{type}\\".","unnecessaryIsInstanceAlways":"Nicht erforderlicher isinstance-Aufruf; \\"{testType}\\" ist immer eine Instanz von \\"{classType}\\"","unnecessaryIsSubclassAlways":"Nicht erforderlicher issubclass-Aufruf; \\"{testType}\\" ist immer eine Unterklasse von \\"{classType}\\"","unnecessaryPyrightIgnore":"Unnötiger \\"# pyright: ignore\\"-Kommentar","unnecessaryPyrightIgnoreRule":"Unnötiger \\"# pyright: ignore\\"-Regel: \\"{name}\\"","unnecessaryTypeIgnore":"Nicht erforderlicher \\"# type: ignore\\"-Kommentar","unpackArgCount":"Nach \\"Required\\" wurde ein einzelnes Typargument erwartet.","unpackExpectedTypeVarTuple":"„TypeVarTuple“ oder „Tupel“ als Typargument für „Unpack“ erwartet","unpackExpectedTypedDict":"TypedDict-Typargument für Unpack erwartet","unpackIllegalInComprehension":"Der Entpackvorgang ist in Verständnis nicht zulässig.","unpackInAnnotation":"Der Operator zum Entpacken ist in der Typanmerkung nicht zulässig.","unpackInDict":"Der Entpackvorgang ist in Wörterbüchern nicht zulässig.","unpackInSet":"Der Operator zum Entpacken ist innerhalb einer Menge nicht zulässig.","unpackNotAllowed":"\\"Unpack\\" ist in diesem Kontext nicht zulässig.","unpackOperatorNotAllowed":"Der Entpackvorgang ist in diesem Kontext nicht zulässig.","unpackTuplesIllegal":"Der Entpackvorgang ist in Tupeln vor Python 3.8 nicht zulässig.","unpackedArgInTypeArgument":"Ungepackte Argumente können nicht in Typargumentlisten verwendet werden.","unpackedArgWithVariadicParam":"Das nicht gepackte Argument kann nicht für den Parameter \\"TypeVarTuple\\" verwendet werden.","unpackedDictArgumentNotMapping":"Der Argumentausdruck nach ** muss eine Zuordnung mit dem Schlüsseltyp \\"str\\" sein.","unpackedDictSubscriptIllegal":"Der Operator zum Entpacken des Wörterbuchs in tiefgestellten Zeichen ist nicht zulässig.","unpackedSubscriptIllegal":"Das Entpacken des Operators im Tiefstellungsskript erfordert Python 3.11 oder höher.","unpackedTypeVarTupleExpected":"Nicht gepackter TypeVarTuple erwartet; verwenden Sie Unpack[{name1}] oder *{name2}","unpackedTypedDictArgument":"Das entpackte TypedDict-Argument kann nicht mit Parametern abgelichen werden.","unreachableCode":"Der Code ist nicht erreichbar.","unreachableExcept":"Die except-Klausel ist nicht erreichbar, weil die Ausnahme bereits behandelt wird.","unsupportedDunderAllOperation":"Der Vorgang für \\"__all__\\" wird nicht unterstützt, daher ist die exportierte Symbolliste möglicherweise falsch.","unusedCallResult":"Das Ergebnis des Aufrufausdrucks ist vom Typ \\"{type}\\" und wird nicht verwendet; der Variablen \\"_\\" zuweisen, wenn dies beabsichtigt ist","unusedCoroutine":"Das Ergebnis eines asynchronen Funktionsaufrufs wird nicht verwendet; verwenden Sie \\"await\\", oder weisen Sie der Variablen ein Ergebnis zu.","unusedExpression":"Der Ausdruckswert wird nicht verwendet.","varAnnotationIllegal":"Typanmerkungen für Variablen erfordern Python 3.6 oder höher; verwenden Sie den Typkommentar für Kompatibilität mit früheren Versionen","variableFinalOverride":"Die Variable \\"{name}\\" ist als \\"Final\\" gekennzeichnet und überschreibt die Nicht-Final-Variable desselben Namens in der Klasse \\"{className}\\"","variadicTypeArgsTooMany":"Die Liste der Typargumente darf höchstens ein entpacktes „TypeVarTuple“ oder „Tupel“ enthalten.","variadicTypeParamTooManyAlias":"Der Typalias darf höchstens einen TypeVarTuple-Typparameter aufweisen, es wurden jedoch mehrere ({names}) empfangen.","variadicTypeParamTooManyClass":"Die generische Klasse darf höchstens einen TypeVarTuple-Typparameter aufweisen, es wurden jedoch mehrere ({names}) empfangen.","walrusIllegal":"Der Operator \\":=\\" erfordert Python 3.8 oder höher.","walrusNotAllowed":"Der Operator \\":=\\" ist in diesem Kontext ohne umgebende Klammern nicht zulässig.","wildcardInFunction":"Der Platzhalterimport ist innerhalb einer Klasse oder Funktion nicht zulässig.","wildcardLibraryImport":"Der Platzhalterimport aus einer Bibliothek ist nicht zulässig.","wildcardPatternTypePartiallyUnknown":"Der durch das Platzhaltermuster erfasste Typ ist teilweise unbekannt.","wildcardPatternTypeUnknown":"Der durch das Platzhaltermuster erfasste Typ ist unbekannt.","yieldFromIllegal":"Die Verwendung von \\"yield from\\" erfordert Python 3.3 oder höher.","yieldFromOutsideAsync":"\\"yield from\\" ist in einer asynchronen Funktion nicht zulässig.","yieldOutsideFunction":"\\"yield\\" ist außerhalb einer Funktion oder eines Lambdas nicht zulässig.","yieldWithinListCompr":"\\"yield\\" ist innerhalb eines Listenverständnisses nicht zulässig.","zeroCaseStatementsFound":"Die match-Anweisung muss mindestens eine case-Anweisung enthalten","zeroLengthTupleNotAllowed":"Ein Tupel mit der Länge Null ist in diesem Kontext nicht zulässig."},"DiagnosticAddendum":{"annotatedNotAllowed":"Das Sonderformular „Änderungsverlauf eingeblendet“ kann nicht mit Instanz- und Klassenüberprüfungen verwendet werden.","argParam":"Argument entspricht Parameter \\"{paramName}\\"","argParamFunction":"Argument entspricht Parameter \\"{paramName}\\" in Funktion \\"{functionName}\\"","argsParamMissing":"Der Parameter \\"*{paramName}\\" weist keinen entsprechenden Parameter auf.","argsPositionOnly":"Nicht übereinstimmende Parameteranmerkungsanzahl: {expected} erwartet, aber {received} empfangen","argumentType":"Argumenttyp ist \\"{type}\\"","argumentTypes":"Argumenttypen: ({types})","assignToNone":"Der Typ kann nicht dem Typ \\"None\\" zugewiesen werden.","asyncHelp":"Meinten Sie \\"asynchron mit\\"?","baseClassIncompatible":"Die Basisklasse \\"{baseClass}\\" ist nicht mit dem Typ \\"{type}\\" kompatibel.","baseClassIncompatibleSubclass":"Die Basisklasse \\"{baseClass}\\" wird von \\"{subclass}\\" abgeleitet, die mit dem Typ \\"{type}\\" nicht kompatibel ist.","baseClassOverriddenType":"Die Basisklasse \\"{baseClass}\\" stellt einen Typ \\"{type}\\" bereit, der überschrieben wird.","baseClassOverridesType":"Basisklasse \\"{baseClass}\\" überschreibt mit Typ \\"{type}\\"","bytesTypePromotions":"Legen Sie disableBytesTypePromotions auf FALSE fest, um das Typerweiterungsverhalten für \\"bytearray\\" und \\"memoryview\\" zu aktivieren.","conditionalRequiresBool":"Die Methode __bool__ für den Typ \\"{operandType}\\" gibt den Typ \\"{boolReturnType}\\" anstelle von \\"bool\\" zurück","dataClassFieldLocation":"Felddeklaration","dataClassFrozen":"\\"{name}\\" ist fixiert","dataProtocolUnsupported":"„{name}“ ist ein Datenprotokoll.","descriptorAccessBindingFailed":"Fehler beim Binden der Methode „{name}“ für die Deskriptorklasse „{className}“","descriptorAccessCallFailed":"Fehler beim Aufrufen der Methode „{name}“ für die Deskriptorklasse „{className}“","finalMethod":"Endgültige Methode","functionParamDefaultMissing":"Standardargument für Parameter \\"{name}\\" fehlt.","functionParamName":"Parameternamen stimmen nicht überein: \\"{destName}\\" und \\"{srcName}\\"","functionParamPositionOnly":"Nicht übereinstimmender Parameter „nur für Position“. Der Parameter „{name}“ ist nicht „nur für Position“.","functionReturnTypeMismatch":"Der Funktionsrückgabetyp \\"{sourceType}\\" ist nicht mit dem Typ \\"{destType}\\" kompatibel.","functionTooFewParams":"Die Funktion akzeptiert zu wenige Positionsparameter; {expected} erwartet, aber {received} empfangen","functionTooManyParams":"Die Funktion akzeptiert zu viele Positionsparameter; {expected} erwartet, aber {received} empfangen","genericClassNotAllowed":"Ein generischer Typ mit Typargumenten ist für Instanz- oder Klassenprüfungen nicht zulässig.","incompatibleDeleter":"Die Deletermethode der Eigenschaft ist nicht kompatibel.","incompatibleGetter":"Die Gettermethode der Eigenschaft ist nicht kompatibel.","incompatibleSetter":"Die Settermethode der Eigenschaft ist nicht kompatibel.","initMethodLocation":"Die __init__ Methode ist in der Klasse \\"{type}\\" definiert.","initMethodSignature":"Die Signatur von __init__ ist \\"{type}\\".","initSubclassLocation":"Die __init_subclass__ Methode ist in der Klasse \\"{name}\\" definiert.","invariantSuggestionDict":"Erwägen Sie den Wechsel von \\"dict\\" zu \\"Mapping\\" (im Werttyp covariant).","invariantSuggestionList":"Erwägen Sie den Wechsel von \\"list\\" zu \\"Sequence\\" (covariant).","invariantSuggestionSet":"Erwägen Sie den Wechsel von „set“ zu „Container“, der Kovariante ist.","keyNotRequired":"\\"{name}\\" ist kein erforderlicher Schlüssel in \\"{type}\\". Der Zugriff kann daher zu einer Laufzeitausnahme führen.","keyReadOnly":"\\"{name}\\" ist ein schreibgeschützter Schlüssel in \\"{type}\\"","keyRequiredDeleted":"\\"{name}\\" ist ein erforderlicher Schlüssel und kann nicht gelöscht werden.","keyUndefined":"\\"{name}\\" ist kein definierter Schlüssel in \\"{type}\\"","kwargsParamMissing":"Der Parameter \\"**{paramName}\\" weist keinen entsprechenden Parameter auf.","listAssignmentMismatch":"Der Typ \\"{type}\\" ist nicht mit der Zielliste kompatibel.","literalAssignmentMismatch":"\\"{sourceType}\\" kann dem Typ \\"{destType}\\" nicht zugewiesen werden.","matchIsNotExhaustiveHint":"Wenn keine ausführliche Behandlung beabsichtigt ist, fügen Sie \\"case _: pass\\" hinzu.","matchIsNotExhaustiveType":"Unbehandelter Typ: \\"{type}\\"","memberAssignment":"Ein Ausdruck vom Typ \\"{type}\\" kann dem Member \\"{name}\\" der Klasse \\"{classType}\\" nicht zugewiesen werden.","memberIsAbstract":"„{type}. {name}“ ist nicht implementiert.","memberIsAbstractMore":"und {count} weitere...","memberIsClassVarInProtocol":"„{name}“ ist als ClassVar im Protokoll definiert.","memberIsFinalInProtocol":"\\"{name}\\" ist im Protokoll als \\"Final\\" gekennzeichnet.","memberIsInitVar":"Das Element \\"{name}\\" ist ein init-only-Feld.","memberIsInvariant":"\\"{name}\\" ist invariant, da es änderbar ist.","memberIsNotClassVarInClass":"„{name}“ muss als ClassVar definiert sein, um mit dem Protokoll kompatibel zu sein.","memberIsNotClassVarInProtocol":"„{name}“ ist nicht als ClassVar im Protokoll definiert.","memberIsNotFinalInProtocol":"\\"{name}\\" ist im Protokoll nicht als \\"Final\\" gekennzeichnet.","memberIsWritableInProtocol":"\\"{name}\\" ist im Protokoll beschreibbar.","memberSetClassVar":"Der Member \\"{name}\\" kann nicht über eine Klasseninstanz zugewiesen werden, da es sich um eine ClassVar handelt.","memberTypeMismatch":"\\"{name}\\" ist ein inkompatibler Typ.","memberUnknown":"Das Member \\"{name}\\" ist unbekannt.","metaclassConflict":"Die Metaklasse \\"{metaclass1}\\" verursacht einen Konflikt mit \\"{metaclass2}\\"","missingDeleter":"Die Eigenschaft-Deleter-Methode fehlt.","missingGetter":"Die Eigenschaft-Getter-Methode fehlt.","missingSetter":"Die Eigenschaft-Setter-Methode fehlt.","namedParamMissingInDest":"Der Schlüsselwortparameter \\"{name}\\" fehlt im Ziel.","namedParamMissingInSource":"Der Schlüsselwortparameter \\"{name}\\" fehlt in der Quelle.","namedParamTypeMismatch":"Der Stichwortparameter \\"{name}\\" vom Typ \\"{sourceType}\\" kann dem Typ \\"{destType}\\" nicht zugewiesen werden.","namedTupleNotAllowed":"NamedTuple kann nicht für Instanzen- oder Klassenüberprüfungen verwendet werden.","newMethodLocation":"Die __new__ Methode ist in der Klasse \\"{type}\\" definiert.","newMethodSignature":"Signatur von __new__ ist \\"{type}\\"","newTypeClassNotAllowed":"Die mit NewType erstellte Klasse kann nicht mit Instanz- und Klassenüberprüfungen verwendet werden.","noOverloadAssignable":"Keine überladene Funktion stimmt mit dem Typ \\"{type}\\" überein.","noneNotAllowed":"\\"None\\" kann nicht für Instanz- oder Klassenprüfungen verwendet werden.","orPatternMissingName":"Fehlende Namen: {name}","overloadIndex":"Überladung \\"{index}\\" ist die nächste Übereinstimmung.","overloadNotAssignable":"Mindestens eine Überladung von \\"{name}\\" kann nicht zugewiesen werden.","overloadSignature":"Die Überladungssignatur ist hier definiert.","overriddenMethod":"Überschriebene Methode","overriddenSymbol":"Außer Kraft gesetztes Symbol","overrideInvariantMismatch":"Der Überschreibungstyp \\"{overrideType}\\" ist nicht identisch mit dem Basistyp \\"{baseType}\\".","overrideIsInvariant":"Die Variable ist veränderlich, sodass ihr Typ unveränderlich ist.","overrideNoOverloadMatches":"Keine Überladungssignatur in Überschreibung ist mit der Basismethode kompatibel.","overrideNotClassMethod":"Die Basismethode ist als Klassenmethode deklariert, die Überschreibung jedoch nicht","overrideNotInstanceMethod":"Die Basismethode ist als Instanz deklariert, die Überschreibung jedoch nicht","overrideNotStaticMethod":"Die Basismethode ist als staticmethod deklariert, die Überschreibung jedoch nicht","overrideOverloadNoMatch":"Außerkraftsetzung behandelt nicht alle Überladungen der Basismethode.","overrideOverloadOrder":"Überladungen für die Überschreibungsmethode müssen in der gleichen Reihenfolge wie die Basismethode vorliegen.","overrideParamKeywordNoDefault":"Konflikt mit Schlüsselwortparameter \\"{name}\\": Der Basisparameter hat einen Standardargumentwert, der Außerkraftsetzungsparameter ist nicht identisch.","overrideParamKeywordType":"Schlüsselwortparameter \\"{name}\\" Typenkonflikt: Basisparameter ist Typ \\"{baseType}\\", Überschreibungsparameter ist Typ \\"{overrideType}\\"","overrideParamName":"Namenskonflikt mit Parameter {index}: Der Basisparameter hat den Namen \\"{baseName}\\", der Außerkraftsetzungsparameter ist \\"{overrideName}\\"","overrideParamNameExtra":"Der Parameter \\"{name}\\" fehlt in der Basis.","overrideParamNameMissing":"Der Parameter \\"{name}\\" fehlt in der Außerkraftsetzung.","overrideParamNamePositionOnly":"Parameter „{index}“ stimmt nicht überein: Basisparameter „{baseName}“ ist Schlüsselwortparameter, Außerkraftsetzungsparameter ist „position-only“.","overrideParamNoDefault":"Konflikt mit Parameter {index}: Der Basisparameter hat einen Standardargumentwert, der Außerkraftsetzungsparameter ist nicht identisch.","overrideParamType":"Parameter {index} Typenkonflikt: Basisparameter ist Typ \\"{baseType}\\", Überschreibungsparameter ist Typ \\"{overrideType}\\"","overridePositionalParamCount":"Anzahl der Positionsparameter stimmt nicht überein; die Basismethode hat {baseCount}, aber die Überschreibung hat {overrideCount}","overrideReturnType":"Rückgabetypkonflikt: Basismethode gibt Typ \\"{baseType}\\" zurück, Überschreibung gibt Typ \\"{overrideType}\\" zurück","overrideType":"Die Basisklasse definiert den Typ als \\"{type}\\"","paramAssignment":"Parameter {index}: Der Typ \\"{sourceType}\\" kann dem Typ \\"{destType}\\" nicht zugewiesen werden.","paramSpecMissingInOverride":"Parameter \\"ParamSpec\\" fehlen in der Überschreibungsmethode.","paramType":"Parametertyp ist \\"{paramType}\\"","privateImportFromPyTypedSource":"Stattdessen aus \\"{module}\\" importieren","propertyAccessFromProtocolClass":"Auf eine in einer Protokollklasse definierte Eigenschaft kann nicht als Klassenvariable zugegriffen werden.","propertyMethodIncompatible":"Die Eigenschaftsmethode \\"{name}\\" ist inkompatibel.","propertyMethodMissing":"Die Eigenschaftsmethode \\"{name}\\" fehlt in der Überschreibung.","propertyMissingDeleter":"Die Eigenschaft \\"{name}\\" hat keinen definierten Deleter.","propertyMissingSetter":"Die Eigenschaft \\"{name}\\" hat keinen definierten Setter.","protocolIncompatible":"\\"{sourceType}\\" ist nicht mit dem Protokoll \\"{destType}\\" kompatibel.","protocolMemberMissing":"\\"{name}\\" ist nicht vorhanden.","protocolRequiresRuntimeCheckable":"Die Protokollklasse muss @runtime_checkable sein, damit sie mit Instanz- und Klassenprüfungen verwendet werden kann.","protocolSourceIsNotConcrete":"\\"{sourceType}\\" ist kein konkreter Klassentyp und kann dem Typ \\"{destType}\\" nicht zugewiesen werden.","protocolUnsafeOverlap":"Attribute von „{name}“ weisen die gleichen Namen wie das Protokoll auf.","pyrightCommentIgnoreTip":"Verwenden Sie \\"# pyright: ignore[<diagnostic rules>]\\", um die Diagnose für eine einzelne Zeile zu unterdrücken.","readOnlyAttribute":"Das Attribut \\"{name}\\" ist schreibgeschützt.","seeClassDeclaration":"Siehe Klassendeklaration","seeDeclaration":"Siehe Deklaration","seeFunctionDeclaration":"Siehe Funktionsdeklaration","seeMethodDeclaration":"Siehe Methodendeklaration","seeParameterDeclaration":"Siehe Parameterdeklaration","seeTypeAliasDeclaration":"Siehe Typaliasdeklaration","seeVariableDeclaration":"Siehe Variablendeklaration","tupleAssignmentMismatch":"Der Typ \\"{type}\\" ist nicht mit dem Zieltupel kompatibel.","tupleEntryTypeMismatch":"Der Tupeleintrag {entry} ist ein falscher Typ.","tupleSizeIndeterminateSrc":"Nicht übereinstimmende Tupelgröße; {expected} erwartet, aber unbestimmt empfangen","tupleSizeIndeterminateSrcDest":"Nicht übereinstimmende Tupelgröße; {expected} oder mehr erwartet, aber „unbestimmt“ empfangen","tupleSizeMismatch":"Nicht übereinstimmende Tupelgröße; {expected} erwartet, aber {received} empfangen","tupleSizeMismatchIndeterminateDest":"Nicht übereinstimmende Tupelgröße; {expected} oder mehr erwartet, aber {received} empfangen","typeAliasInstanceCheck":"Der mit der „type“-Anweisung erstellte Typalias kann nicht mit Instanz- und Klassenüberprüfungen verwendet werden.","typeAssignmentMismatch":"Der Typ \\"{sourceType}\\" kann dem Typ \\"{destType}\\" nicht zugewiesen werden.","typeBound":"Der Typ \\"{sourceType}\\" ist nicht mit dem gebundenen Typ \\"{destType}\\" für die Typvariablen \\"{name}\\" kompatibel.","typeConstrainedTypeVar":"Der Typ \\"{type}\\" ist mit der eingeschränkten Typvariablen nicht kompatibel \\"{name}\\"","typeIncompatible":"\\"{sourceType}\\" ist nicht mit \\"{destType}\\" kompatibel.","typeNotClass":"\\"{type}\\" ist keine Klasse.","typeNotStringLiteral":"\\"{type}\\" ist kein Zeichenfolgenliteral.","typeOfSymbol":"Der Typ von \\"{name}\\" ist \\"{type}\\".","typeParamSpec":"Typ \\"{type}\\" ist nicht mit ParamSpec \\"{name}\\" kompatibel.","typeUnsupported":"Typ \\"{type}\\" wird nicht unterstützt.","typeVarDefaultOutOfScope":"Die Typvariable \\"{name}\\" befindet sich nicht im Bereich.","typeVarIsContravariant":"Der Typparameter \\"{name}\\" ist kontravariant, aber \\"{sourceType}\\" ist kein Supertyp von \\"{destType}\\"","typeVarIsCovariant":"Der Typparameter \\"{name}\\" ist kovariant, aber \\"{sourceType}\\" ist kein Untertyp von \\"{destType}\\"","typeVarIsInvariant":"Der Typparameter \\"{name}\\" ist invariant, \\"{sourceType}\\" ist jedoch nicht identisch mit \\"{destType}\\"","typeVarNotAllowed":"TypeVar ist für Instanz- oder Klassenprüfungen nicht zulässig.","typeVarTupleRequiresKnownLength":"TypeVarTuple kann nicht an ein Tupel unbekannter Länge gebunden werden.","typeVarUnnecessarySuggestion":"Stattdessen {type} verwenden","typeVarUnsolvableRemedy":"Geben Sie eine Überladung an, die den Rückgabetyp angibt, wenn das Argument nicht angegeben ist.","typeVarsMissing":"Fehlende Typvariablen: {names}","typedDictBaseClass":"Die Klasse \\"{type}\\" ist kein TypedDict.","typedDictClassNotAllowed":"Die TypedDict-Klasse ist für Instanz- oder Klassenüberprüfungen nicht zulässig.","typedDictClosedExtraNotAllowed":"Das Element „{name}“ kann nicht hinzugefügt werden.","typedDictClosedExtraTypeMismatch":"Das Element „{name}“ mit dem Typ „{type}“ kann nicht hinzugefügt werden.","typedDictClosedFieldNotRequired":"Das Element „{name}“ kann nicht hinzugefügt werden, da es „NotRequired“ sein muss.","typedDictExtraFieldNotAllowed":"„{name}“ ist in „{type}“ nicht vorhanden.","typedDictExtraFieldTypeMismatch":"Der Typ von „{name}“ ist nicht mit dem Typ „__extra_items__“ in „{type}“ kompatibel.","typedDictFieldMissing":"\\"{name}\\" fehlt in \\"{type}\\"","typedDictFieldNotReadOnly":"\\"{name}\\" ist in \\"{type}\\" nicht schreibgeschützt.","typedDictFieldNotRequired":"\\"{name}\\" ist in \\"{type}\\" nicht erforderlich.","typedDictFieldRequired":"\\"{name}\\" ist in \\"{type}\\" erforderlich.","typedDictFieldTypeMismatch":"Der Typ „{type}“ kann dem Element „{name}“ nicht zugewiesen werden.","typedDictFieldUndefined":"„{name}“ ist ein nicht definiertes Element im Typ „{type}“.","typedDictFinalMismatch":"\\"{sourceType}\\" ist aufgrund eines @final-Konflikts nicht mit \\"{destType}\\" kompatibel.","typedDictKeyAccess":"[\\"{name}\\"] verwenden, um in TypedDict auf ein Element zu verweisen","typedDictNotAllowed":"TypedDict kann nicht für Instanzen- oder Klassenüberprüfungen verwendet werden.","unhashableType":"Der Typ \\"{type}\\" kann nicht mit einem Hash erstellt werden.","uninitializedAbstractVariable":"Die Instanzvariable \\"{name}\\" ist in einer abstrakten Basisklasse \\"{classType}\\" definiert, aber nicht initialisiert.","unreachableExcept":"\\"{exceptionType}\\" ist eine Unterklasse von \\"{parentType}\\"","useDictInstead":"Verwenden Sie Dict[T1, T2], um einen Wörterbuchtyp anzugeben.","useListInstead":"Verwenden Sie List[T], um einen Listentyp anzugeben, oder Union[T1, T2], um einen Vereinigungstyp anzugeben.","useTupleInstead":"Verwenden Sie Tupel[T1, ..., Tn], um einen Tupeltyp anzugeben, oder Union[T1, T2], um einen Union-Typ anzugeben.","useTypeInstead":"Stattdessen Typ[T] verwenden","varianceMismatchForClass":"Die Varianz des Typarguments \\"{typeVarName}\\" ist nicht mit der Basisklasse \\"{className}\\" kompatibel","varianceMismatchForTypeAlias":"Die Varianz des Typarguments \\"{typeVarName}\\" ist nicht mit \\"{typeAliasParam}\\" kompatibel"}}')},99488:e=>{e.exports=JSON.parse('{"Diagnostic":{"abstractMethodInvocation":"Method \\"{method}\\" cannot be called because it is abstract and unimplemented","annotatedParamCountMismatch":"Parameter annotation count mismatch: expected {expected} but received {received}","annotatedTypeArgMissing":"Expected one type argument and one or more annotations for \\"Annotated\\"","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Type annotations cannot use format string literals (f-strings)","annotationNotSupported":"Type annotation not supported for this statement","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Type annotations cannot span multiple string literals","annotationStringEscape":"Type annotations cannot contain escape characters","argAssignment":"Argument of type \\"{argType}\\" cannot be assigned to parameter of type \\"{paramType}\\"","argAssignmentFunction":"Argument of type \\"{argType}\\" cannot be assigned to parameter of type \\"{paramType}\\" in function \\"{functionName}\\"","argAssignmentParam":"Argument of type \\"{argType}\\" cannot be assigned to parameter \\"{paramName}\\" of type \\"{paramType}\\"","argAssignmentParamFunction":"Argument of type \\"{argType}\\" cannot be assigned to parameter \\"{paramName}\\" of type \\"{paramType}\\" in function \\"{functionName}\\"","argMissingForParam":"Argument missing for parameter {name}","argMissingForParams":"Arguments missing for parameters {names}","argMorePositionalExpectedCount":"Expected {expected} more positional arguments","argMorePositionalExpectedOne":"Expected 1 more positional argument","argPositional":"Expected positional argument","argPositionalExpectedCount":"Expected {expected} positional arguments","argPositionalExpectedOne":"Expected 1 positional argument","argTypePartiallyUnknown":"Argument type is partially unknown","argTypeUnknown":"Argument type is unknown","assertAlwaysTrue":"Assert expression always evaluates to true","assertTypeArgs":"\\"assert_type\\" expects two positional arguments","assertTypeTypeMismatch":"\\"assert_type\\" mismatch: expected \\"{expected}\\" but received \\"{received}\\"","assignmentExprContext":"Assignment expression must be within module, function or lambda","assignmentExprComprehension":"Assignment expression target \\"{name}\\" cannot use same name as comprehension for target","assignmentInProtocol":"Instance or class variables within a Protocol class must be explicitly declared within the class body","assignmentExprInSubscript":"Assignment expressions within a subscript are supported only in Python 3.10 and newer","assignmentTargetExpr":"Expression cannot be assignment target","asyncNotInAsyncFunction":"Use of \\"async\\" not allowed outside of async function","awaitIllegal":"Use of \\"await\\" requires Python 3.5 or newer","awaitNotAllowed":"Type annotations cannot use \\"await\\"","awaitNotInAsync":"\\"await\\" allowed only within async function","backticksIllegal":"Expressions surrounded by backticks are not supported in Python 3.x; use repr instead","baseClassCircular":"Class cannot derive from itself","baseClassIncompatible":"Base classes of {type} are mutually incompatible","baseClassFinal":"Base class \\"{type}\\" is marked final and cannot be subclassed","baseClassInvalid":"Argument to class must be a base class","baseClassMethodTypeIncompatible":"Base classes for class \\"{classType}\\" define method \\"{name}\\" in incompatible way","baseClassVariableTypeIncompatible":"Base classes for class \\"{classType}\\" define variable \\"{name}\\" in incompatible way","baseClassUnknown":"Base class type is unknown, obscuring type of derived class","binaryOperationNotAllowed":"Binary operator not allowed in type annotation","bindTypeMismatch":"Could not bind method \\"{methodName}\\" because \\"{type}\\" is not assignable to parameter \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" can be used only within a loop","callableExtraArgs":"Expected only two type arguments to \\"Callable\\"","callableFirstArg":"Expected parameter type list or \\"...\\"","callableNotInstantiable":"Cannot instantiate type \\"{type}\\"","callableSecondArg":"Expected return type as second type argument for \\"Callable\\"","casePatternIsIrrefutable":"Irrefutable pattern is allowed only for the last case statement","classAlreadySpecialized":"Type \\"{type}\\" is already specialized","classDecoratorTypeUnknown":"Untyped class decorator obscures type of class; ignoring decorator","classDefinitionCycle":"Class definition for \\"{name}\\" depends on itself","classGetItemClsParam":"__class_getitem__ override should take a \\"cls\\" parameter","classMethodClsParam":"Class methods should take a \\"cls\\" parameter","classNotRuntimeSubscriptable":"Subscript for class \\"{name}\\" will generate runtime exception; enclose type annotation in quotes","classPatternBuiltInArgPositional":"Class pattern accepts only positional sub-pattern","classPatternPositionalArgCount":"Too many positional patterns for class \\"{type}\\"; expected {expected} but received {received}","classPatternTypeAlias":"\\"{type}\\" cannot be used in a class pattern because it is a specialized type alias","classPropertyDeprecated":"Class properties are deprecated in Python 3.11 and will not be supported in Python 3.13","classTypeParametersIllegal":"Class type parameter syntax requires Python 3.12 or newer","classVarNotAllowed":"\\"ClassVar\\" is not allowed in this context","classVarFirstArgMissing":"Expected a type argument after \\"ClassVar\\"","classVarOverridesInstanceVar":"Class variable \\"{name}\\" overrides instance variable of same name in class \\"{className}\\"","classVarTooManyArgs":"Expected only one type argument after \\"ClassVar\\"","classVarWithTypeVar":"\\"ClassVar\\" type cannot include type variables","clsSelfParamTypeMismatch":"Type of parameter \\"{name}\\" must be a supertype of its class \\"{classType}\\"","codeTooComplexToAnalyze":"Code is too complex to analyze; reduce complexity by refactoring into subroutines or reducing conditional code paths","collectionAliasInstantiation":"Type \\"{type}\\" cannot be instantiated, use \\"{alias}\\" instead","comparisonAlwaysFalse":"Condition will always evaluate to False since the types \\"{leftType}\\" and \\"{rightType}\\" have no overlap","comparisonAlwaysTrue":"Condition will always evaluate to True since the types \\"{leftType}\\" and \\"{rightType}\\" have no overlap","comprehensionInDict":"Comprehension cannot be used with other dictionary entries","comprehensionInSet":"Comprehension cannot be used with other set entries","concatenateContext":"\\"Concatenate\\" is not allowed in this context","concatenateParamSpecMissing":"Last type argument for \\"Concatenate\\" must be a ParamSpec or \\"...\\"","concatenateTypeArgsMissing":"\\"Concatenate\\" requires at least two type arguments","conditionalOperandInvalid":"Invalid conditional operand of type \\"{type}\\"","constantRedefinition":"\\"{name}\\" is constant (because it is uppercase) and cannot be redefined","constructorParametersMismatch":"Mismatch between signature of __new__ and __init__ in class \\"{classType}\\"","containmentAlwaysFalse":"Expression will always evaluate to False since the types \\"{leftType}\\" and \\"{rightType}\\" have no overlap","containmentAlwaysTrue":"Expression will always evaluate to True since the types \\"{leftType}\\" and \\"{rightType}\\" have no overlap","continueInFinally":"\\"continue\\" cannot be used within a finally clause","continueOutsideLoop":"\\"continue\\" can be used only within a loop","constructorNoArgs":"Expected no arguments to \\"{type}\\" constructor","coroutineInConditionalExpression":"Conditional expression references coroutine which always evaluates to True","dataClassBaseClassFrozen":"A non-frozen class cannot inherit from a class that is frozen","dataClassBaseClassNotFrozen":"A frozen class cannot inherit from a class that is not frozen","dataClassConverterFunction":"Argument of type \\"{argType}\\" is not a valid converter for field \\"{fieldName}\\" of type \\"{fieldType}\\"","dataClassConverterOverloads":"No overloads of \\"{funcName}\\" are valid converters for field \\"{fieldName}\\" of type \\"{fieldType}\\"","dataClassFieldInheritedDefault":"\\"{fieldName}\\" overrides a field of the same name but is missing a default value","dataClassFieldWithDefault":"Fields without default values cannot appear after fields with default values","dataClassFieldWithoutAnnotation":"Dataclass field without type annotation will cause runtime exception","dataClassFieldWithPrivateName":"Dataclass field cannot use private name","dataClassPostInitParamCount":"Dataclass __post_init__ incorrect parameter count; number of InitVar fields is {expected}","dataClassPostInitType":"Dataclass __post_init__ method parameter type mismatch for field \\"{fieldName}\\"","dataClassSlotsOverwrite":"__slots__ is already defined in class","dataClassTransformExpectedBoolLiteral":"Expected expression that statically evaluates to True or False","dataClassTransformFieldSpecifier":"Expected tuple of classes or functions but received type \\"{type}\\"","dataClassTransformPositionalParam":"All arguments to \\"dataclass_transform\\" must be keyword arguments","dataClassTransformUnknownArgument":"Argument \\"{name}\\" is not supported by dataclass_transform","dataProtocolInSubclassCheck":"Data protocols (which include non-method attributes) are not allowed in issubclass calls","declaredReturnTypePartiallyUnknown":"Declared return type, \\"{returnType}\\", is partially unknown","declaredReturnTypeUnknown":"Declared return type is unknown","defaultValueContainsCall":"Function calls and mutable objects not allowed within parameter default value expression","defaultValueNotAllowed":"Parameter with \\"*\\" or \\"**\\" cannot have default value","deprecatedClass":"The class \\"{name}\\" is deprecated","deprecatedConstructor":"The constructor for class \\"{name}\\" is deprecated","deprecatedDescriptorDeleter":"The \\"__delete__\\" method for descriptor \\"{name}\\" is deprecated","deprecatedDescriptorGetter":"The \\"__get__\\" method  for descriptor \\"{name}\\" is deprecated","deprecatedDescriptorSetter":"The \\"__set__\\" method  for descriptor \\"{name}\\" is deprecated","deprecatedFunction":"The function \\"{name}\\" is deprecated","deprecatedMethod":"The method \\"{name}\\" in class \\"{className}\\" is deprecated","deprecatedPropertyDeleter":"The deleter for property \\"{name}\\" is deprecated","deprecatedPropertyGetter":"The getter for property \\"{name}\\" is deprecated","deprecatedPropertySetter":"The setter for property \\"{name}\\" is deprecated","deprecatedType":"This type is deprecated as of Python {version}; use \\"{replacement}\\" instead","delTargetExpr":"Expression cannot be deleted","dictExpandIllegalInComprehension":"Dictionary expansion not allowed in comprehension","dictInAnnotation":"Dictionary expression not allowed in type annotation","dictKeyValuePairs":"Dictionary entries must contain key/value pairs","dictUnpackIsNotMapping":"Expected mapping for dictionary unpack operator","dunderAllSymbolNotPresent":"\\"{name}\\" is specified in __all__ but is not present in module","duplicateArgsParam":"Only one \\"*\\" parameter allowed","duplicateBaseClass":"Duplicate base class not allowed","duplicateCatchAll":"Only one catch-all except clause allowed","duplicateEnumMember":"Enum member \\"{name}\\" is already declared","duplicateGenericAndProtocolBase":"Only one Generic[...] or Protocol[...] base class allowed","duplicateImport":"\\"{importName}\\" is imported more than once","duplicateKwargsParam":"Only one \\"**\\" parameter allowed","duplicateKeywordOnly":"Only one \\"*\\" separator allowed","duplicateParam":"Duplicate parameter \\"{name}\\"","duplicateCapturePatternTarget":"Capture target \\"{name}\\" cannot appear more than once within the same pattern","duplicateStarPattern":"Only one \\"*\\" pattern allowed in a pattern sequence","duplicateStarStarPattern":"Only one \\"**\\" entry allowed","duplicatePositionOnly":"Only one \\"/\\" parameter allowed","duplicateUnpack":"Only one unpack operation allowed in list","ellipsisAfterUnpacked":"\\"...\\" cannot be used with an unpacked TypeVarTuple or tuple","ellipsisContext":"\\"...\\" is not allowed in this context","ellipsisSecondArg":"\\"...\\" is allowed only as the second of two arguments","enumClassOverride":"Enum class \\"{name}\\" is final and cannot be subclassed","exceptionGroupIncompatible":"Exception group syntax (\\"except*\\") requires Python 3.11 or newer","exceptionTypeIncorrect":"\\"{type}\\" does not derive from BaseException","exceptionTypeNotClass":"\\"{type}\\" is not a valid exception class","exceptionTypeNotInstantiable":"Constructor for exception type \\"{type}\\" requires one or more arguments","expectedAfterDecorator":"Expected function or class declaration after decorator","expectedArrow":"Expected \\"->\\" followed by return type annotation","expectedAsAfterException":"Expected \\"as\\" after exception type","expectedAssignRightHandExpr":"Expected expression to the right of \\"=\\"","expectedBinaryRightHandExpr":"Expected expression to the right of operator","expectedBoolLiteral":"Expected True or False","expectedCase":"Expected \\"case\\" statement","expectedClassName":"Expected class name","expectedCloseBrace":"\\"{\\" was not closed","expectedCloseBracket":"\\"[\\" was not closed","expectedCloseParen":"\\"(\\" was not closed","expectedColon":"Expected \\":\\"","expectedComplexNumberLiteral":"Expected complex number literal for pattern matching","expectedDecoratorExpr":"Expression form not supported for decorator prior to Python 3.9","expectedDecoratorName":"Expected decorator name","expectedDecoratorNewline":"Expected new line at end of decorator","expectedDelExpr":"Expected expression after \\"del\\"","expectedElse":"Expected \\"else\\"","expectedEquals":"Expected \\"=\\"","expectedExceptionClass":"Invalid exception class or object","expectedExceptionObj":"Expected exception object, exception class or None","expectedExpr":"Expected expression","expectedIdentifier":"Expected identifier","expectedImport":"Expected \\"import\\"","expectedImportAlias":"Expected symbol after \\"as\\"","expectedImportSymbols":"Expected one or more symbol names after import","expectedIndentedBlock":"Expected indented block","expectedInExpr":"Expected expression after \\"in\\"","expectedIn":"Expected \\"in\\"","expectedFunctionAfterAsync":"Expected function definition after \\"async\\"","expectedFunctionName":"Expected function name after \\"def\\"","expectedMemberName":"Expected attribute name after \\".\\"","expectedModuleName":"Expected module name","expectedNameAfterAs":"Expected symbol name after \\"as\\"","expectedNamedParameter":"Keyword parameter must follow \\"*\\"","expectedNewline":"Expected newline","expectedNewlineOrSemicolon":"Statements must be separated by newlines or semicolons","expectedOpenParen":"Expected \\"(\\"","expectedParamName":"Expected parameter name","expectedPatternExpr":"Expected pattern expression","expectedPatternSubjectExpr":"Expected pattern subject expression","expectedPatternValue":"Expected pattern value expression of the form \\"a.b\\"","expectedReturnExpr":"Expected expression after \\"return\\"","expectedSliceIndex":"Expected index or slice expression","expectedTypeNotString":"Expected type but received a string literal","expectedTypeParameterName":"Expected type parameter name","expectedYieldExpr":"Expected expression in yield statement","finalClassIsAbstract":"Class \\"{type}\\" is marked final and must implement all abstract symbols","finalContext":"\\"Final\\" is not allowed in this context","finalMethodOverride":"Method \\"{name}\\" cannot override final method defined in class \\"{className}\\"","finalNonMethod":"Function \\"{name}\\" cannot be marked @final because it is not a method","finalReassigned":"\\"{name}\\" is declared as Final and cannot be reassigned","finalRedeclaration":"\\"{name}\\" was previously declared as Final","finalRedeclarationBySubclass":"\\"{name}\\" cannot be redeclared because parent class \\"{className}\\" declares it as Final","finalTooManyArgs":"Expected a single type argument after \\"Final\\"","finalUnassigned":"\\"{name}\\" is declared Final, but value is not assigned","formatStringBrace":"Single close brace not allowed within f-string literal; use double close brace","formatStringBytes":"Format string literals (f-strings) cannot be binary","formatStringDebuggingIllegal":"F-string debugging specifier \\"=\\" requires Python 3.8 or newer","formatStringEscape":"Escape sequence (backslash) not allowed in expression portion of f-string prior to Python 3.12","formatStringExpectedConversion":"Expected a conversion specifier after \\"!\\" in f-string","formatStringInPattern":"Format string not allowed in pattern","formatStringNestedFormatSpecifier":"Expressions nested too deeply within format string specifier","formatStringNestedQuote":"Strings nested within an f-string cannot use the same quote character as the f-string prior to Python 3.12","formatStringUnicode":"Format string literals (f-strings) cannot be unicode","formatStringIllegal":"Format string literals (f-strings) require Python 3.6 or newer","formatStringUnterminated":"Unterminated expression in f-string; expecting \\"}\\"","functionDecoratorTypeUnknown":"Untyped function decorator obscures type of function; ignoring decorator","functionInConditionalExpression":"Conditional expression references function which always evaluates to True","functionTypeParametersIllegal":"Function type parameter syntax requires Python 3.12 or newer","futureImportLocationNotAllowed":"Imports from __future__ must be at the beginning of the file","generatorAsyncReturnType":"Return type of async generator function must be compatible with \\"AsyncGenerator[{yieldType}, Any]\\"","generatorNotParenthesized":"Generator expressions must be parenthesized if not sole argument","generatorSyncReturnType":"Return type of generator function must be compatible with \\"Generator[{yieldType}, Any, Any]\\"","genericBaseClassNotAllowed":"\\"Generic\\" base class cannot be used with type parameter syntax","genericClassAssigned":"Generic class type cannot be assigned","genericClassDeleted":"Generic class type cannot be deleted","genericInstanceVariableAccess":"Access to generic instance variable through class is ambiguous","genericNotAllowed":"\\"Generic\\" is not valid in this context","genericTypeAliasBoundTypeVar":"Generic type alias within class cannot use bound type variables {names}","genericTypeArgMissing":"\\"Generic\\" requires at least one type argument","genericTypeArgTypeVar":"Type argument for \\"Generic\\" must be a type variable","genericTypeArgUnique":"Type arguments for \\"Generic\\" must be unique","globalReassignment":"\\"{name}\\" is assigned before global declaration","globalRedefinition":"\\"{name}\\" was already declared global","implicitStringConcat":"Implicit string concatenation not allowed","importCycleDetected":"Cycle detected in import chain","importDepthExceeded":"Import chain depth exceeded {depth}","importResolveFailure":"Import \\"{importName}\\" could not be resolved","importSourceResolveFailure":"Import \\"{importName}\\" could not be resolved from source","importSymbolUnknown":"\\"{name}\\" is unknown import symbol","incompatibleMethodOverride":"Method \\"{name}\\" overrides class \\"{className}\\" in an incompatible manner","inconsistentIndent":"Unindent amount does not match previous indent","initMustReturnNone":"Return type of \\"__init__\\" must be None","inconsistentTabs":"Inconsistent use of tabs and spaces in indentation","initMethodSelfParamTypeVar":"Type annotation for \\"self\\" parameter of \\"__init__\\" method cannot contain class-scoped type varaiables","initSubclassClsParam":"__init_subclass__ override should take a \\"cls\\" parameter","initSubclassCallFailed":"Incorrect keyword arguments for __init_subclass__ method","initVarNotAllowed":"\\"InitVar\\" is not allowed in this context","instanceMethodSelfParam":"Instance methods should take a \\"self\\" parameter","instanceVarOverridesClassVar":"Instance variable \\"{name}\\" overrides class variable of same name in class \\"{className}\\"","instantiateAbstract":"Cannot instantiate abstract class \\"{type}\\"","instantiateProtocol":"Cannot instantiate protocol class \\"{type}\\"","internalBindError":"An internal error occurred while binding file \\"{file}\\": {message}","internalParseError":"An internal error occurred while parsing file \\"{file}\\": {message}","internalTypeCheckingError":"An internal error occurred while type checking file \\"{file}\\": {message}","invalidIdentifierChar":"Invalid character in identifier","invalidStubStatement":"Statement is meaningless within a type stub file","invalidTokenChars":"Invalid character \\"{text}\\" in token","isInstanceInvalidType":"Second argument to \\"isinstance\\" must be a class or tuple of classes","isSubclassInvalidType":"Second argument to \\"issubclass\\" must be a class or tuple of classes","keyValueInSet":"Key/value pairs are not allowed within a set","keywordArgInTypeArgument":"Keyword arguments cannot be used in type argument lists","keywordOnlyAfterArgs":"Keyword-only argument separator not allowed after \\"*\\" parameter","keywordParameterMissing":"One or more keyword parameters must follow \\"*\\" parameter","keywordSubscriptIllegal":"Keyword arguments within subscripts are not supported","lambdaReturnTypeUnknown":"Return type of lambda is unknown","lambdaReturnTypePartiallyUnknown":"Return type of lambda, \\"{returnType}\\", is partially unknown","listAssignmentMismatch":"Expression with type \\"{type}\\" cannot be assigned to target list","listInAnnotation":"List expression not allowed in type annotation","literalUnsupportedType":"Type arguments for \\"Literal\\" must be None, a literal value (int, bool, str, or bytes), or an enum value","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalEmptyArgs":"Expected one or more type arguments after \\"Literal\\"","literalNotAllowed":"\\"Literal\\" cannot be used in this context without a type argument","literalNotCallable":"Literal type cannot be instantiated","matchIncompatible":"Match statements require Python 3.10 or newer","matchIsNotExhaustive":"Cases within match statement do not exhaustively handle all values","maxParseDepthExceeded":"Maximum parse depth exceeded; break expression into smaller sub-expressions","memberAccess":"Cannot access attribute \\"{name}\\" for class \\"{type}\\"","memberDelete":"Cannot delete attribute \\"{name}\\" for class \\"{type}\\"","memberSet":"Cannot assign to attribute \\"{name}\\" for class \\"{type}\\"","metaclassConflict":"The metaclass of a derived class must be a subclass of the metaclasses of all its base classes","metaclassDuplicate":"Only one metaclass can be provided","metaclassIsGeneric":"Metaclass cannot be generic","methodNotDefined":"\\"{name}\\" method not defined","methodNotDefinedOnType":"\\"{name}\\" method not defined on type \\"{type}\\"","methodOrdering":"Cannot create consistent method ordering","methodOverridden":"\\"{name}\\" overrides method of same name in class \\"{className}\\" with incompatible type \\"{type}\\"","methodReturnsNonObject":"\\"{name}\\" method does not return an object","missingSuperCall":"Method \\"{methodName}\\" does not call the method of the same name in parent class","moduleAsType":"Module cannot be used as a type","moduleNotCallable":"Module is not callable","moduleUnknownMember":"\\"{memberName}\\" is not a known attribute of module \\"{moduleName}\\"","namedExceptAfterCatchAll":"A named except clause cannot appear after catch-all except clause","namedParamAfterParamSpecArgs":"Keyword parameter \\"{name}\\" cannot appear in signature after ParamSpec args parameter","namedTupleEmptyName":"Names within a named tuple cannot be empty","namedTupleMultipleInheritance":"Multiple inheritance with NamedTuple is not supported","namedTupleEntryRedeclared":"Cannot override \\"{name}\\" because parent class \\"{className}\\" is a named tuple","namedTupleFirstArg":"Expected named tuple class name as first argument","namedTupleNameKeyword":"Field names cannot be a keyword","namedTupleNameType":"Expected two-entry tuple specifying entry name and type","namedTupleNameUnique":"Names within a named tuple must be unique","namedTupleNoTypes":"\\"namedtuple\\" provides no types for tuple entries; use \\"NamedTuple\\" instead","namedTupleSecondArg":"Expected named tuple entry list as second argument","newClsParam":"__new__ override should take a \\"cls\\" parameter","newTypeAnyOrUnknown":"The second argument to NewType must be a known class, not Any or Unknown","newTypeBadName":"The first argument to NewType must be a string literal","newTypeLiteral":"NewType cannot be used with Literal type","newTypeNameMismatch":"NewType must be assigned to a variable with the same name","newTypeNotAClass":"Expected class as second argument to NewType","newTypeParamCount":"NewType requires two positional arguments","newTypeProtocolClass":"NewType cannot be used with structural type (a protocol or TypedDict class)","nonDefaultAfterDefault":"Non-default argument follows default argument","noneNotCallable":"Object of type \\"None\\" cannot be called","noneNotIterable":"Object of type \\"None\\" cannot be used as iterable value","noneOperator":"Operator \\"{operator}\\" not supported for \\"None\\"","noneNotSubscriptable":"Object of type \\"None\\" is not subscriptable","noneNotUsableWith":"Object of type \\"None\\" cannot be used with \\"with\\"","noneUnknownMember":"\\"{name}\\" is not a known attribute of \\"None\\"","nonLocalNoBinding":"No binding for nonlocal \\"{name}\\" found","nonLocalReassignment":"\\"{name}\\" is assigned before nonlocal declaration","nonLocalRedefinition":"\\"{name}\\" was already declared nonlocal","nonLocalInModule":"Nonlocal declaration not allowed at module level","noOverload":"No overloads for \\"{name}\\" match the provided arguments","noReturnContainsReturn":"Function with declared return type \\"NoReturn\\" cannot include a return statement","noReturnContainsYield":"Function with declared return type \\"NoReturn\\" cannot include a yield statement","noReturnReturnsNone":"Function with declared return type \\"NoReturn\\" cannot return \\"None\\"","notRequiredArgCount":"Expected a single type argument after \\"NotRequired\\"","notRequiredNotInTypedDict":"\\"NotRequired\\" is not allowed in this context","objectNotCallable":"Object of type \\"{type}\\" is not callable","obscuredClassDeclaration":"Class declaration \\"{name}\\" is obscured by a declaration of the same name","obscuredFunctionDeclaration":"Function declaration \\"{name}\\" is obscured by a declaration of the same name","obscuredMethodDeclaration":"Method declaration \\"{name}\\" is obscured by a declaration of the same name","obscuredParameterDeclaration":"Parameter declaration \\"{name}\\" is obscured by a declaration of the same name","obscuredTypeAliasDeclaration":"Type alias declaration \\"{name}\\" is obscured by a declaration of the same name","obscuredVariableDeclaration":"Declaration \\"{name}\\" is obscured by a declaration of the same name","operatorLessOrGreaterDeprecated":"Operator \\"<>\\" is not supported in Python 3; use \\"!=\\" instead","optionalExtraArgs":"Expected one type argument after \\"Optional\\"","orPatternIrrefutable":"Irrefutable pattern allowed only as the last subpattern in an \\"or\\" pattern","orPatternMissingName":"All subpatterns within an \\"or\\" pattern must target the same names","overlappingKeywordArgs":"Typed dictionary overlaps with keyword parameter: {names}","overlappingOverload":"Overload {obscured} for \\"{name}\\" will never be used because its parameters overlap overload {obscuredBy}","overloadAbstractMismatch":"Overloaded methods must all be abstract or not","overloadClassMethodInconsistent":"Overloads for \\"{name}\\" use @classmethod inconsistently","overloadFinalInconsistencyImpl":"Overload for \\"{name}\\" is marked @final but implementation is not","overloadFinalInconsistencyNoImpl":"Overload {index} for \\"{name}\\" is marked @final but overload 1 is not","overloadImplementationMismatch":"Overloaded implementation is not consistent with signature of overload {index}","overloadReturnTypeMismatch":"Overload {prevIndex} for \\"{name}\\" overlaps overload {newIndex} and returns an incompatible type","overloadStaticMethodInconsistent":"Overloads for \\"{name}\\" use @staticmethod inconsistently","overloadWithoutImplementation":"\\"{name}\\" is marked as overload, but no implementation is provided","overriddenMethodNotFound":"Method \\"{name}\\" is marked as override, but no base method of same name is present","overrideDecoratorMissing":"Method \\"{name}\\" is not marked as override but is overriding a method in class \\"{className}\\"","paramAfterKwargsParam":"Parameter cannot follow \\"**\\" parameter","paramAlreadyAssigned":"Parameter \\"{name}\\" is already assigned","paramAnnotationMissing":"Type annotation is missing for parameter \\"{name}\\"","paramNameMissing":"No parameter named \\"{name}\\"","paramSpecArgsKwargsUsage":"\\"args\\" and \\"kwargs\\" attributes of ParamSpec must both appear within a function signature","paramSpecArgsMissing":"Arguments for ParamSpec \\"{type}\\" are missing","paramSpecArgsUsage":"\\"args\\" attribute of ParamSpec is valid only when used with *args parameter","paramSpecAssignedName":"ParamSpec must be assigned to a variable named \\"{name}\\"","paramSpecContext":"ParamSpec is not allowed in this context","paramSpecDefaultNotTuple":"Expected ellipsis, a tuple expression, or ParamSpec for default value of ParamSpec","paramSpecFirstArg":"Expected name of ParamSpec as first argument","paramSpecKwargsUsage":"\\"kwargs\\" attribute of ParamSpec is valid only when used with **kwargs parameter","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" has no meaning in this context","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" is scoped to a callable within the return type and cannot be referenced in the function body","paramSpecUnknownArg":"ParamSpec does not support more than one argument","paramSpecUnknownMember":"\\"{name}\\" is not a known attribute of ParamSpec","paramSpecUnknownParam":"\\"{name}\\" is unknown parameter to ParamSpec","paramAssignmentMismatch":"Expression of type \\"{sourceType}\\" cannot be assigned to parameter of type \\"{paramType}\\"","paramTypeCovariant":"Covariant type variable cannot be used in parameter type","paramTypeUnknown":"Type of parameter \\"{paramName}\\" is unknown","paramTypePartiallyUnknown":"Type of parameter \\"{paramName}\\" is partially unknown","parenthesizedContextManagerIllegal":"Parentheses within \\"with\\" statement requires Python 3.9 or newer","patternNeverMatches":"Pattern will never be matched for subject type \\"{type}\\"","positionArgAfterNamedArg":"Positional argument cannot appear after keyword arguments","privateImportFromPyTypedModule":"\\"{name}\\" is not exported from module \\"{module}\\"","positionOnlyAfterArgs":"Position-only parameter separator not allowed after \\"*\\" parameter","positionOnlyAfterKeywordOnly":"\\"/\\" parameter must appear before \\"*\\" parameter","positionOnlyAfterNon":"Position-only parameter not allowed after parameter that is not position-only","positionOnlyIncompatible":"Position-only parameter separator requires Python 3.8 or newer","positionOnlyFirstParam":"Position-only parameter separator not allowed as first parameter","privateUsedOutsideOfClass":"\\"{name}\\" is private and used outside of the class in which it is declared","privateUsedOutsideOfModule":"\\"{name}\\" is private and used outside of the module in which it is declared","propertyOverridden":"\\"{name}\\" incorrectly overrides property of same name in class \\"{className}\\"","propertyStaticMethod":"Static methods not allowed for property getter, setter or deleter","protectedUsedOutsideOfClass":"\\"{name}\\" is protected and used outside of the class in which it is declared","protocolBaseClass":"Protocol class \\"{classType}\\" cannot derive from non-protocol class \\"{baseType}\\"","protocolBaseClassWithTypeArgs":"Type arguments are not allowed with Protocol class when using type parameter syntax","protocolIllegal":"Use of \\"Protocol\\" requires Python 3.7 or newer","protocolNotAllowed":"\\"Protocol\\" cannot be used in this context","protocolUnsafeOverlap":"Class overlaps \\"{name}\\" unsafely and could produce a match at runtime","protocolVarianceContravariant":"Type variable \\"{variable}\\" used in generic protocol \\"{class}\\" should be contravariant","protocolVarianceCovariant":"Type variable \\"{variable}\\" used in generic protocol \\"{class}\\" should be covariant","protocolVarianceInvariant":"Type variable \\"{variable}\\" used in generic protocol \\"{class}\\" should be invariant","pyrightCommentInvalidDiagnosticBoolValue":"Pyright comment directive must be followed by \\"=\\" and a value of true or false","pyrightCommentInvalidDiagnosticSeverityValue":"Pyright comment directive must be followed by \\"=\\" and a value of true, false, error, warning, information, or none","pyrightCommentMissingDirective":"Pyright comment must be followed by a directive (basic or strict) or a diagnostic rule","pyrightCommentNotOnOwnLine":"Pyright comments used to control file-level settings must appear on their own line","pyrightCommentUnknownDirective":"\\"{directive}\\" is an unknown directive for pyright comment; expected \\"strict\\" or \\"basic\\"","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" is an unknown diagnostic rule for pyright comment","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" is invalid value for pyright comment; expected true, false, error, warning, information, or none","readOnlyArgCount":"Expected a single type argument after \\"ReadOnly\\"","readOnlyNotInTypedDict":"\\"ReadOnly\\" is not allowed in this context","relativeImportNotAllowed":"Relative imports cannot be used with \\"import .a\\" form; use \\"from . import a\\" instead","recursiveDefinition":"Type of \\"{name}\\" could not be determined because it refers to itself","requiredArgCount":"Expected a single type argument after \\"Required\\"","requiredNotInTypedDict":"\\"Required\\" is not allowed in this context","returnInAsyncGenerator":"Return statement with value is not allowed in async generator","returnOutsideFunction":"\\"return\\" can be used only within a function","returnMissing":"Function with declared return type \\"{returnType}\\" must return value on all code paths","returnTypeContravariant":"Contravariant type variable cannot be used in return type","returnTypeMismatch":"Expression of type \\"{exprType}\\" is incompatible with return type \\"{returnType}\\"","returnTypeUnknown":"Return type is unknown","returnTypePartiallyUnknown":"Return type, \\"{returnType}\\", is partially unknown","revealLocalsArgs":"Expected no arguments for \\"reveal_locals\\" call","revealLocalsNone":"No locals in this scope","revealTypeArgs":"Expected a single positional argument for \\"reveal_type\\" call","revealTypeExpectedTextArg":"The \\"expected_text\\" argument for function \\"reveal_type\\" must be a str literal value","revealTypeExpectedTextMismatch":"Type text mismatch; expected \\"{expected}\\" but received \\"{received}\\"","revealTypeExpectedTypeMismatch":"Type mismatch; expected \\"{expected}\\" but received \\"{received}\\"","selfTypeContext":"\\"Self\\" is not valid in this context","selfTypeMetaclass":"\\"Self\\" cannot be used within a metaclass (a subclass of \\"type\\")","selfTypeWithTypedSelfOrCls":"\\"Self\\" cannot be used in a function with a `self` or `cls` parameter that has a type annotation other than \\"Self\\"","setterGetterTypeMismatch":"Property setter value type is not assignable to the getter return type","singleOverload":"\\"{name}\\" is marked as overload, but additional overloads are missing","slotsAttributeError":"\\"{name}\\" is not specified in __slots__","slotsClassVarConflict":"\\"{name}\\" conflicts with instance variable declared in __slots__","starPatternInAsPattern":"Star pattern cannot be used with \\"as\\" target","starPatternInOrPattern":"Star pattern cannot be ORed within other patterns","starStarWildcardNotAllowed":"** cannot be used with wildcard \\"_\\"","staticClsSelfParam":"Static methods should not take a \\"self\\" or \\"cls\\" parameter","stdlibModuleOverridden":"\\"{path}\\" is overriding the stdlib module \\"{name}\\"","stringNonAsciiBytes":"Non-ASCII character not allowed in bytes string literal","stringNotSubscriptable":"String expression cannot be subscripted in type annotation; enclose entire annotation in quotes","stringUnsupportedEscape":"Unsupported escape sequence in string literal","stringUnterminated":"String literal is unterminated","stubFileMissing":"Stub file not found for \\"{importName}\\"","stubUsesGetAttr":"Type stub file is incomplete; \\"__getattr__\\" obscures type errors for module","sublistParamsIncompatible":"Sublist parameters are not supported in Python 3.x","superCallArgCount":"Expected no more than two arguments to \\"super\\" call","superCallFirstArg":"Expected class type as first argument to \\"super\\" call but received \\"{type}\\"","superCallSecondArg":"Second argument to \\"super\\" call must be object or class that derives from \\"{type}\\"","superCallZeroArgForm":"Zero-argument form of \\"super\\" call is valid only within a method","superCallZeroArgFormStaticMethod":"Zero-argument form of \\"super\\" call is not valid within a static method","symbolIsUnbound":"\\"{name}\\" is unbound","symbolIsUndefined":"\\"{name}\\" is not defined","symbolIsPossiblyUnbound":"\\"{name}\\" is possibly unbound","symbolOverridden":"\\"{name}\\" overrides symbol of same name in class \\"{className}\\"","ternaryNotAllowed":"Ternary expression not allowed in type annotation","totalOrderingMissingMethod":"Class must define one of \\"__lt__\\", \\"__le__\\", \\"__gt__\\", or \\"__ge__\\" to use total_ordering","trailingCommaInFromImport":"Trailing comma not allowed without surrounding parentheses","tryWithoutExcept":"Try statement must have at least one except or finally clause","tupleAssignmentMismatch":"Expression with type \\"{type}\\" cannot be assigned to target tuple","tupleInAnnotation":"Tuple expression not allowed in type annotation","tupleIndexOutOfRange":"Index {index} is out of range for type {type}","typeAliasIllegalExpressionForm":"Invalid expression form for type alias definition","typeAliasIsRecursiveDirect":"Type alias \\"{name}\\" cannot use itself in its definition","typeAliasNotInModuleOrClass":"A TypeAlias can be defined only within a module or class scope","typeAliasRedeclared":"\\"{name}\\" is declared as a TypeAlias and can be assigned only once","typeAliasStatementIllegal":"Type alias statement requires Python 3.12 or newer","typeAliasStatementBadScope":"A type statement can be used only within a module or class scope","typeAliasTypeBaseClass":"A type alias defined in a \\"type\\" statement cannot be used as a base class","typeAliasTypeMustBeAssigned":"TypeAliasType must be assigned to a variable with the same name as the type alias","typeAliasTypeNameArg":"First argument to TypeAliasType must be a string literal representing the name of the type alias","typeAliasTypeNameMismatch":"Name of type alias must match the name of the variable to which it is assigned","typeAliasTypeParamInvalid":"Type parameter list must be a tuple containing only TypeVar, TypeVarTuple, or ParamSpec","typeArgListExpected":"Expected ParamSpec, ellipsis, or list of types","typeAnnotationCall":"Call expression not allowed in type expression","typeAnnotationVariable":"Variable not allowed in type expression","typeAnnotationWithCallable":"Type argument for \\"type\\" must be a class; callables are not supported","typeArgListNotAllowed":"List expression not allowed for this type argument","typeArgsExpectingNone":"Expected no type arguments for class \\"{name}\\"","typeArgsMismatchOne":"Expected one type argument but received {received}","typeArgsMissingForAlias":"Expected type arguments for generic type alias \\"{name}\\"","typeArgsMissingForClass":"Expected type arguments for generic class \\"{name}\\"","typeArgsTooFew":"Too few type arguments provided for \\"{name}\\"; expected {expected} but received {received}","typeArgsTooMany":"Too many type arguments provided for \\"{name}\\"; expected {expected} but received {received}","typeAssignmentMismatch":"Expression of type \\"{sourceType}\\" is incompatible with declared type \\"{destType}\\"","typeAssignmentMismatchWildcard":"Import symbol \\"{name}\\" has type \\"{sourceType}\\", which is incompatible with declared type \\"{destType}\\"","typeCallNotAllowed":"type() call should not be used in type annotation","typeCheckOnly":"\\"{name}\\" is marked as @type_check_only and can be used only in type annotations","typeCommentDeprecated":"Use of type comments is deprecated; use type annotation instead","typedDictAccess":"Could not access item in TypedDict","typedDictAssignedName":"TypedDict must be assigned to a variable named \\"{name}\\"","typedDictBadVar":"TypedDict classes can contain only type annotations","typedDictBaseClass":"All base classes for TypedDict classes must also be TypedDict classes","typedDictBoolParam":"Expected \\"{name}\\" parameter to have a value of True or False","typedDictClosedExtras":"Base class \\"{name}\\" is a closed TypedDict; extra items must be type \\"{type}\\"","typedDictClosedNoExtras":"Base class \\"{name}\\" is a closed TypedDict; extra items are not allowed","typedDictDelete":"Could not delete item in TypedDict","typedDictEmptyName":"Names within a TypedDict cannot be empty","typedDictEntryName":"Expected string literal for dictionary entry name","typedDictEntryUnique":"Names within a dictionary must be unique","typedDictExtraArgs":"Extra TypedDict arguments not supported","typedDictFieldNotRequiredRedefinition":"TypedDict item \\"{name}\\" cannot be redefined as NotRequired","typedDictFieldReadOnlyRedefinition":"TypedDict item \\"{name}\\" cannot be redefined as ReadOnly","typedDictFieldRequiredRedefinition":"TypedDict item \\"{name}\\" cannot be redefined as Required","typedDictFirstArg":"Expected TypedDict class name as first argument","typedDictInitsubclassParameter":"TypedDict does not support __init_subclass__ parameter \\"{name}\\"","typedDictNotAllowed":"\\"TypedDict\\" cannot be used in this context","typedDictSecondArgDict":"Expected dict or keyword parameter as second parameter","typedDictSecondArgDictEntry":"Expected simple dictionary entry","typedDictSet":"Could not assign item in TypedDict","typeExpectedClass":"Expected type expression but received \\"{type}\\"","typeGuardArgCount":"Expected a single type argument after \\"TypeGuard\\" or \\"TypeIs\\"","typeGuardParamCount":"User-defined type guard functions and methods must have at least one input parameter","typeIsReturnType":"Return type of TypeIs (\\"{returnType}\\") is not consistent with value parameter type (\\"{type}\\")","typeNotAwaitable":"\\"{type}\\" is not awaitable","typeNotIntantiable":"\\"{type}\\" cannot be instantiated","typeNotIterable":"\\"{type}\\" is not iterable","typeNotSpecializable":"Could not specialize type \\"{type}\\"","typeNotSubscriptable":"Object of type \\"{type}\\" is not subscriptable","typeNotUsableWith":"Object of type \\"{type}\\" cannot be used with \\"with\\" because it does not implement {method}","typeNotSupportBinaryOperator":"Operator \\"{operator}\\" not supported for types \\"{leftType}\\" and \\"{rightType}\\"","typeNotSupportBinaryOperatorBidirectional":"Operator \\"{operator}\\" not supported for types \\"{leftType}\\" and \\"{rightType}\\" when expected type is \\"{expectedType}\\"","typeNotSupportUnaryOperator":"Operator \\"{operator}\\" not supported for type \\"{type}\\"","typeNotSupportUnaryOperatorBidirectional":"Operator \\"{operator}\\" not supported for type \\"{type}\\" when expected type is \\"{expectedType}\\"","typeParameterBoundNotAllowed":"Bound or constraint cannot be used with a variadic type parameter or ParamSpec","typeParameterConstraintTuple":"Type parameter constraint must be a tuple of two or more types","typeParameterExistingTypeParameter":"Type parameter \\"{name}\\" is already in use","typeParametersMissing":"At least one type parameter must be specified","typeParameterNotDeclared":"Type parameter \\"{name}\\" is not included in the type parameter list for \\"{container}\\"","typePartiallyUnknown":"Type of \\"{name}\\" is partially unknown","typeUnknown":"Type of \\"{name}\\" is unknown","typeVarAssignedName":"TypeVar must be assigned to a variable named \\"{name}\\"","typeVarAssignmentMismatch":"Type \\"{type}\\" cannot be assigned to type variable \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar cannot be both bound and constrained","typeVarBoundGeneric":"TypeVar bound type cannot be generic","typeVarConstraintGeneric":"TypeVar constraint type cannot be generic","typeVarDefaultBoundMismatch":"TypeVar default type must be a subtype of the bound type","typeVarDefaultConstraintMismatch":"TypeVar default type must be one of the constrained types","typeVarDefaultIllegal":"Type variable default types require Python 3.13 or newer","typeVarDefaultInvalidTypeVar":"Type parameter \\"{name}\\" has a default type that refers to one or more type variables that are out of scope","typeVarFirstArg":"Expected name of TypeVar as first argument","typeVarNoMember":"TypeVar \\"{type}\\" has no attribute \\"{name}\\"","typeVarNotSubscriptable":"TypeVar \\"{type}\\" is not subscriptable","typeVarNotUsedByOuterScope":"Type variable \\"{name}\\" has no meaning in this context","typeVarPossiblyUnsolvable":"Type variable \\"{name}\\" may go unsolved if caller supplies no argument for parameter \\"{param}\\"","typeVarScopedToReturnType":"Type variable \\"{name}\\" is scoped to a callable within the return type and cannot be referenced in the function body","typeVarSingleConstraint":"TypeVar must have at least two constrained types","typeVarsNotInGenericOrProtocol":"Generic[] or Protocol[] must include all type variables","typeVarTupleContext":"TypeVarTuple is not allowed in this context","typeVarTupleDefaultNotUnpacked":"TypeVarTuple default type must be an unpacked tuple or TypeVarTuple","typeVarTupleMustBeUnpacked":"Unpack operator is required for TypeVarTuple value","typeVarTupleConstraints":"TypeVarTuple cannot have value constraints","typeVarTupleUnknownParam":"\\"{name}\\" is unknown parameter to TypeVarTuple","typeVarUnknownParam":"\\"{name}\\" is unknown parameter to TypeVar","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" is already in use by an outer scope","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" appears only once in generic function signature","typeVarVariance":"TypeVar cannot be both covariant and contravariant","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\" has a default value and cannot follow TypeVarTuple \\"{variadicName}\\"","typeVarWithoutDefault":"\\"{name}\\" cannot appear after \\"{other}\\" in type parameter list because it has no default type","unaccessedClass":"Class \\"{name}\\" is not accessed","unaccessedFunction":"Function \\"{name}\\" is not accessed","unaccessedImport":"Import \\"{name}\\" is not accessed","unaccessedSymbol":"\\"{name}\\" is not accessed","unaccessedVariable":"Variable \\"{name}\\" is not accessed","unannotatedFunctionSkipped":"Analysis of function \\"{name}\\" is skipped because it is unannotated","unaryOperationNotAllowed":"Unary operator not allowed in type annotation","unexpectedAsyncToken":"Expected \\"def\\", \\"with\\" or \\"for\\" to follow \\"async\\"","unexpectedExprToken":"Unexpected token at end of expression","unexpectedIndent":"Unexpected indentation","unexpectedUnindent":"Unindent not expected","unhashableDictKey":"Dictionary key must be hashable","unhashableSetEntry":"Set entry must be hashable","unionForwardReferenceNotAllowed":"Union syntax cannot be used with string operand; use quotes around entire expression","unionSyntaxIllegal":"Alternative syntax for unions requires Python 3.10 or newer","unionTypeArgCount":"Union requires two or more type arguments","uninitializedAbstractVariables":"Variables defined in abstract base class are not initialized in final class \\"{classType}\\"","uninitializedInstanceVariable":"Instance variable \\"{name}\\" is not initialized in the class body or __init__ method","unionUnpackedTuple":"Union cannot include an unpacked tuple","unionUnpackedTypeVarTuple":"Union cannot include an unpacked TypeVarTuple","unnecessaryCast":"Unnecessary \\"cast\\" call; type is already \\"{type}\\"","unnecessaryIsInstanceAlways":"Unnecessary isinstance call; \\"{testType}\\" is always an instance of \\"{classType}\\"","unnecessaryIsSubclassAlways":"Unnecessary issubclass call; \\"{testType}\\" is always a subclass of \\"{classType}\\"","unnecessaryPyrightIgnore":"Unnecessary \\"# pyright: ignore\\" comment","unnecessaryPyrightIgnoreRule":"Unnecessary \\"# pyright: ignore\\" rule: \\"{name}\\"","unnecessaryTypeIgnore":"Unnecessary \\"# type: ignore\\" comment","unpackArgCount":"Expected a single type argument after \\"Unpack\\"","unpackedArgInTypeArgument":"Unpacked arguments cannot be used in type argument lists","unpackedArgWithVariadicParam":"Unpacked argument cannot be used for TypeVarTuple parameter","unpackedDictArgumentNotMapping":"Argument expression after ** must be a mapping with a \\"str\\" key type","unpackedDictSubscriptIllegal":"Dictionary unpack operator in subscript is not allowed","unpackedSubscriptIllegal":"Unpack operator in subscript requires Python 3.11 or newer","unpackedTypedDictArgument":"Unable to match unpacked TypedDict argument to parameters","unpackedTypeVarTupleExpected":"Expected unpacked TypeVarTuple; use Unpack[{name1}] or *{name2}","unpackExpectedTypedDict":"Expected TypedDict type argument for Unpack","unpackExpectedTypeVarTuple":"Expected TypeVarTuple or tuple as type argument for Unpack","unpackIllegalInComprehension":"Unpack operation not allowed in comprehension","unpackInAnnotation":"Unpack operator not allowed in type annotation","unpackInDict":"Unpack operation not allowed in dictionaries","unpackInSet":"Unpack operator not allowed within a set","unpackNotAllowed":"Unpack is not allowed in this context","unpackOperatorNotAllowed":"Unpack operation is not allowed in this context","unpackTuplesIllegal":"Unpack operation not allowed in tuples prior to Python 3.8","unreachableCode":"Code is unreachable","unreachableExcept":"Except clause is unreachable because exception is already handled","unsupportedDunderAllOperation":"Operation on \\"__all__\\" is not supported, so exported symbol list may be incorrect","unusedCallResult":"Result of call expression is of type \\"{type}\\" and is not used; assign to variable \\"_\\" if this is intentional","unusedCoroutine":"Result of async function call is not used; use \\"await\\" or assign result to variable","unusedExpression":"Expression value is unused","varAnnotationIllegal":"Type annotations for variables requires Python 3.6 or newer; use type comment for compatibility with previous versions","variableFinalOverride":"Variable \\"{name}\\" is marked Final and overrides non-Final variable of same name in class \\"{className}\\"","variadicTypeArgsTooMany":"Type argument list can have at most one unpacked TypeVarTuple or tuple","variadicTypeParamTooManyAlias":"Type alias can have at most one TypeVarTuple type parameter but received multiple ({names})","variadicTypeParamTooManyClass":"Generic class can have at most one TypeVarTuple type parameter but received multiple ({names})","walrusIllegal":"Operator \\":=\\" requires Python 3.8 or newer","walrusNotAllowed":"Operator \\":=\\" is not allowed in this context without surrounding parentheses","wildcardInFunction":"Wildcard import not allowed within a class or function","wildcardPatternTypeUnknown":"Type captured by wildcard pattern is unknown","wildcardPatternTypePartiallyUnknown":"Type captured by wildcard pattern is partially unknown","wildcardLibraryImport":"Wildcard import from a library not allowed","yieldFromIllegal":"Use of \\"yield from\\" requires Python 3.3 or newer","yieldFromOutsideAsync":"\\"yield from\\" not allowed in an async function","yieldOutsideFunction":"\\"yield\\" not allowed outside of a function or lambda","yieldWithinListCompr":"\\"yield\\" not allowed inside a list comprehension","zeroCaseStatementsFound":"Match statement must include at least one case statement","zeroLengthTupleNotAllowed":"Zero-length tuple is not allowed in this context"},"DiagnosticAddendum":{"annotatedNotAllowed":"\\"Annotated\\" special form cannot be used with instance and class checks","argParam":"Argument corresponds to parameter \\"{paramName}\\"","argParamFunction":"Argument corresponds to parameter \\"{paramName}\\" in function \\"{functionName}\\"","argsParamMissing":"Parameter \\"*{paramName}\\" has no corresponding parameter","argsPositionOnly":"Position-only parameter mismatch; expected {expected} but received {received}","argumentType":"Argument type is \\"{type}\\"","argumentTypes":"Argument types: ({types})","assignToNone":"Type is incompatible with \\"None\\"","asyncHelp":"Did you mean \\"async with\\"?","baseClassIncompatible":"Base class \\"{baseClass}\\" is incompatible with type \\"{type}\\"","baseClassIncompatibleSubclass":"Base class \\"{baseClass}\\" derives from \\"{subclass}\\" which is incompatible with type \\"{type}\\"","baseClassOverriddenType":"Base class \\"{baseClass}\\" provides type \\"{type}\\", which is overridden","baseClassOverridesType":"Base class \\"{baseClass}\\" overrides with type \\"{type}\\"","bytesTypePromotions":"Set disableBytesTypePromotions to false to enable type promotion behavior for \\"bytearray\\" and \\"memoryview\\"","conditionalRequiresBool":"Method __bool__ for type \\"{operandType}\\" returns type \\"{boolReturnType}\\" rather than \\"bool\\"","dataClassFieldLocation":"Field declaration","dataProtocolUnsupported":"\\"{name}\\" is a data protocol","descriptorAccessBindingFailed":"Failed to bind method \\"{name}\\" for descriptor class \\"{className}\\"","descriptorAccessCallFailed":"Failed to call method \\"{name}\\" for descriptor class \\"{className}\\"","dataClassFrozen":"\\"{name}\\" is frozen","finalMethod":"Final method","functionParamDefaultMissing":"Parameter \\"{name}\\" is missing default argument","functionParamName":"Parameter name mismatch: \\"{destName}\\" versus \\"{srcName}\\"","functionParamPositionOnly":"Position-only parameter mismatch; parameter \\"{name}\\" is not position-only","functionReturnTypeMismatch":"Function return type \\"{sourceType}\\" is incompatible with type \\"{destType}\\"","functionTooFewParams":"Function accepts too few positional parameters; expected {expected} but received {received}","functionTooManyParams":"Function accepts too many positional parameters; expected {expected} but received {received}","genericClassNotAllowed":"Generic type with type arguments not allowed for instance or class checks","keyNotRequired":"\\"{name}\\" is not a required key in \\"{type}\\", so access may result in runtime exception","keyReadOnly":"\\"{name}\\" is a read-only key in \\"{type}\\"","keyRequiredDeleted":"\\"{name}\\" is a required key and cannot be deleted","keyUndefined":"\\"{name}\\" is not a defined key in \\"{type}\\"","incompatibleGetter":"Property getter method is incompatible","incompatibleSetter":"Property setter method is incompatible","initMethodLocation":"The __init__ method is defined in class \\"{type}\\"","incompatibleDeleter":"Property deleter method is incompatible","initMethodSignature":"Signature of __init__ is \\"{type}\\"","initSubclassLocation":"The __init_subclass__ method is defined in class \\"{name}\\"","invariantSuggestionDict":"Consider switching from \\"dict\\" to \\"Mapping\\" which is covariant in the value type","invariantSuggestionList":"Consider switching from \\"list\\" to \\"Sequence\\" which is covariant","invariantSuggestionSet":"Consider switching from \\"set\\" to \\"Container\\" which is covariant","kwargsParamMissing":"Parameter \\"**{paramName}\\" has no corresponding parameter","listAssignmentMismatch":"Type \\"{type}\\" is incompatible with target list","literalAssignmentMismatch":"\\"{sourceType}\\" is incompatible with type \\"{destType}\\"","matchIsNotExhaustiveType":"Unhandled type: \\"{type}\\"","matchIsNotExhaustiveHint":"If exhaustive handling is not intended, add \\"case _: pass\\"","memberSetClassVar":"Attribute \\"{name}\\" cannot be assigned through a class instance because it is a ClassVar","memberAssignment":"Expression of type \\"{type}\\" cannot be assigned to attribute \\"{name}\\" of class \\"{classType}\\"","memberIsAbstract":"\\"{type}.{name}\\" is not implemented","memberIsAbstractMore":"and {count} more...","memberIsClassVarInProtocol":"\\"{name}\\" is defined as a ClassVar in protocol","memberIsFinalInProtocol":"\\"{name}\\" is marked Final in protocol","memberIsInitVar":"\\"{name}\\" is an init-only field","memberIsInvariant":"\\"{name}\\" is invariant because it is mutable","memberIsNotClassVarInClass":"\\"{name}\\" must be defined as a ClassVar to be compatible with protocol","memberIsNotClassVarInProtocol":"\\"{name}\\" is not defined as a ClassVar in protocol","memberIsNotFinalInProtocol":"\\"{name}\\" is not marked Final in protocol","memberIsWritableInProtocol":"\\"{name}\\" is writable in protocol","memberTypeMismatch":"\\"{name}\\" is an incompatible type","memberUnknown":"Attribute \\"{name}\\" is unknown","metaclassConflict":"Metaclass \\"{metaclass1}\\" conflicts with \\"{metaclass2}\\"","missingGetter":"Property getter method is missing","missingSetter":"Property setter method is missing","missingDeleter":"Property deleter method is missing","namedParamMissingInDest":"Keyword parameter \\"{name}\\" is missing in destination","namedParamMissingInSource":"Keyword parameter \\"{name}\\" is missing in source","namedParamTypeMismatch":"Keyword parameter \\"{name}\\" of type \\"{sourceType}\\" is incompatible with type \\"{destType}\\"","namedTupleNotAllowed":"NamedTuple cannot be used for instance or class checks","newMethodLocation":"The __new__ method is defined in class \\"{type}\\"","newMethodSignature":"Signature of __new__ is \\"{type}\\"","newTypeClassNotAllowed":"Class created with NewType cannot be used with instance and class checks","noneNotAllowed":"None cannot be used for instance or class checks","noOverloadAssignable":"No overloaded function matches type \\"{type}\\"","orPatternMissingName":"Missing names: {name}","overloadIndex":"Overload {index} is the closest match","overloadSignature":"Overload signature is defined here","overloadNotAssignable":"One or more overloads of \\"{name}\\" is not assignable","overriddenMethod":"Overridden method","overriddenSymbol":"Overridden symbol","overrideIsInvariant":"Variable is mutable so its type is invariant","overrideInvariantMismatch":"Override type \\"{overrideType}\\" is not the same as base type \\"{baseType}\\"","overrideNoOverloadMatches":"No overload signature in override is compatible with base method","overrideNotClassMethod":"Base method is declared as a classmethod but override is not","overrideNotInstanceMethod":"Base method is declared as an instance method but override is not","overrideNotStaticMethod":"Base method is declared as a staticmethod but override is not","overrideOverloadNoMatch":"Override does not handle all overloads of base method","overrideOverloadOrder":"Overloads for override method must be in the same order as the base method","overrideParamKeywordNoDefault":"Keyword parameter \\"{name}\\" mismatch: base parameter has default argument value, override parameter does not","overrideParamKeywordType":"Keyword parameter \\"{name}\\" type mismatch: base parameter is type \\"{baseType}\\", override parameter is type \\"{overrideType}\\"","overrideParamName":"Parameter {index} name mismatch: base parameter is named \\"{baseName}\\", override parameter is named \\"{overrideName}\\"","overrideParamNameExtra":"Parameter \\"{name}\\" is missing in base","overrideParamNameMissing":"Parameter \\"{name}\\" is missing in override","overrideParamNamePositionOnly":"Parameter {index} mismatch: base parameter \\"{baseName}\\" is keyword parameter, override parameter is position-only","overrideParamNoDefault":"Parameter {index} mismatch: base parameter has default argument value, override parameter does not","overrideParamType":"Parameter {index} type mismatch: base parameter is type \\"{baseType}\\", override parameter is type \\"{overrideType}\\"","overridePositionalParamCount":"Positional parameter count mismatch; base method has {baseCount}, but override has {overrideCount}","overrideReturnType":"Return type mismatch: base method returns type \\"{baseType}\\", override returns type \\"{overrideType}\\"","overrideType":"Base class defines type as \\"{type}\\"","paramAssignment":"Parameter {index}: type \\"{sourceType}\\" is incompatible with type \\"{destType}\\"","paramSpecMissingInOverride":"ParamSpec parameters are missing in override method","paramType":"Parameter type is \\"{paramType}\\"","privateImportFromPyTypedSource":"Import from \\"{module}\\" instead","propertyAccessFromProtocolClass":"A property defined within a protocol class cannot be accessed as a class variable","propertyMethodIncompatible":"Property method \\"{name}\\" is incompatible","propertyMethodMissing":"Property method \\"{name}\\" is missing in override","propertyMissingDeleter":"Property \\"{name}\\" has no defined deleter","propertyMissingSetter":"Property \\"{name}\\" has no defined setter","protocolIncompatible":"\\"{sourceType}\\" is incompatible with protocol \\"{destType}\\"","protocolMemberMissing":"\\"{name}\\" is not present","protocolRequiresRuntimeCheckable":"Protocol class must be @runtime_checkable to be used with instance and class checks","protocolSourceIsNotConcrete":"\\"{sourceType}\\" is not a concrete class type and cannot be assigned to type \\"{destType}\\"","protocolUnsafeOverlap":"Attributes of \\"{name}\\" have the same names as the protocol","pyrightCommentIgnoreTip":"Use \\"# pyright: ignore[<diagnostic rules>] to suppress diagnostics for a single line","readOnlyAttribute":"Attribute \\"{name}\\" is read-only","seeDeclaration":"See declaration","seeClassDeclaration":"See class declaration","seeFunctionDeclaration":"See function declaration","seeMethodDeclaration":"See method declaration","seeParameterDeclaration":"See parameter declaration","seeTypeAliasDeclaration":"See type alias declaration","seeVariableDeclaration":"See variable declaration","tupleEntryTypeMismatch":"Tuple entry {entry} is incorrect type","tupleAssignmentMismatch":"Type \\"{type}\\" is incompatible with target tuple","tupleSizeIndeterminateSrc":"Tuple size mismatch; expected {expected} but received indeterminate","tupleSizeIndeterminateSrcDest":"Tuple size mismatch; expected {expected} or more but received indeterminate","tupleSizeMismatch":"Tuple size mismatch; expected {expected} but received {received}","tupleSizeMismatchIndeterminateDest":"Tuple size mismatch; expected {expected} or more but received {received}","typeAliasInstanceCheck":"Type alias created with \\"type\\" statement cannot be used with instance and class checks","typeAssignmentMismatch":"Type \\"{sourceType}\\" is incompatible with type \\"{destType}\\"","typeBound":"Type \\"{sourceType}\\" is incompatible with bound type \\"{destType}\\" for type variable \\"{name}\\"","typeConstrainedTypeVar":"Type \\"{type}\\" is incompatible with constrained type variable \\"{name}\\"","typedDictBaseClass":"Class \\"{type}\\" is not a TypedDict","typedDictClassNotAllowed":"TypedDict class not allowed for instance or class checks","typedDictExtraFieldNotAllowed":"\\"{name}\\" is not present in \\"{type}\\"","typedDictExtraFieldTypeMismatch":"Type of \\"{name}\\" is incompatible with type of \\"__extra_items__\\" in \\"{type}\\"","typedDictFieldMissing":"\\"{name}\\" is missing from \\"{type}\\"","typedDictClosedExtraNotAllowed":"Cannot add item \\"{name}\\"","typedDictClosedExtraTypeMismatch":"Cannot add item \\"{name}\\" with type \\"{type}\\"","typedDictClosedFieldNotRequired":"Cannot add item \\"{name}\\" because it must be NotRequired","typedDictFieldNotReadOnly":"\\"{name}\\" is not read-only in \\"{type}\\"","typedDictFieldNotRequired":"\\"{name}\\" is not required in \\"{type}\\"","typedDictFieldRequired":"\\"{name}\\" is required in \\"{type}\\"","typedDictFieldTypeMismatch":"Type \\"{type}\\" is not assignable to item \\"{name}\\"","typedDictFieldUndefined":"\\"{name}\\" is an undefined item in type \\"{type}\\"","typedDictFinalMismatch":"\\"{sourceType}\\" is incompatible with \\"{destType}\\" because of a @final mismatch","typedDictKeyAccess":"Use [\\"{name}\\"] to reference item in TypedDict","typedDictNotAllowed":"TypedDict cannot be used for instance or class checks","typeIncompatible":"\\"{sourceType}\\" is incompatible with \\"{destType}\\"","typeNotClass":"\\"{type}\\" is not a class","typeParamSpec":"Type \\"{type}\\" is incompatible with ParamSpec \\"{name}\\"","typeNotStringLiteral":"\\"{type}\\" is not a string literal","typeOfSymbol":"Type of \\"{name}\\" is \\"{type}\\"","typeUnsupported":"Type \\"{type}\\" is unsupported","typeVarDefaultOutOfScope":"Type variable \\"{name}\\" is not in scope","typeVarIsContravariant":"Type parameter \\"{name}\\" is contravariant, but \\"{sourceType}\\" is not a supertype of \\"{destType}\\"","typeVarIsCovariant":"Type parameter \\"{name}\\" is covariant, but \\"{sourceType}\\" is not a subtype of \\"{destType}\\"","typeVarIsInvariant":"Type parameter \\"{name}\\" is invariant, but \\"{sourceType}\\" is not the same as \\"{destType}\\"","typeVarNotAllowed":"TypeVar not allowed for instance or class checks","typeVarUnnecessarySuggestion":"Use {type} instead","typeVarUnsolvableRemedy":"Provide an overload that specifies the return type when the argument is not supplied","typeVarsMissing":"Missing type variables: {names}","typeVarTupleRequiresKnownLength":"TypeVarTuple cannot be bound to a tuple of unknown length","unhashableType":"Type \\"{type}\\" is not hashable","uninitializedAbstractVariable":"Instance variable \\"{name}\\" is defined in abstract base class \\"{classType}\\" but not initialized","unreachableExcept":"\\"{exceptionType}\\" is a subclass of \\"{parentType}\\"","useDictInstead":"Use Dict[T1, T2] to indicate a dictionary type","useListInstead":"Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type","useTupleInstead":"Use tuple[T1, ..., Tn] to indicate a tuple type or Union[T1, T2] to indicate a union type","useTypeInstead":"Use Type[T] instead","varianceMismatchForClass":"Variance of type argument \\"{typeVarName}\\" is incompatible with base class \\"{className}\\"","varianceMismatchForTypeAlias":"Variance of type argument \\"{typeVarName}\\" is incompatible with \\"{typeAliasParam}\\""},"CodeAction":{"createTypeStub":"Create Type Stub","createTypeStubFor":"Create Type Stub For \\"{moduleName}\\"","executingCommand":"Executing command","filesToAnalyzeOne":"1 file to analyze","filesToAnalyzeCount":"{count} files to analyze","findingReferences":"Finding references","organizeImports":"Organize Imports","renameShadowedFile":"Rename \\"{oldFile}\\" to \\"{newFile}\\""},"Completion":{"autoImportDetail":"Auto-import","indexValueDetail":"Index value"}}')},15808:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Crear Tipo Stub","createTypeStubFor":"Crear Tipo Stub Para \\"{moduleName}\\"","executingCommand":"Ejecutando el comando","filesToAnalyzeCount":"{count} archivos para analizar","filesToAnalyzeOne":"1 archivo para analizar","findingReferences":"Buscando referencias","organizeImports":"Organizar Importaciones","renameShadowedFile":"Cambie el nombre de \\"{oldFile}\\" a \\"{newFile}\\""},"Completion":{"autoImportDetail":"Importación automática","indexValueDetail":"Valor de índice"},"Diagnostic":{"abstractMethodInvocation":"No se puede llamar al método \\"{method}\\" porque es abstracto y no se ha implementado.","annotatedParamCountMismatch":"El recuento de anotaciones del parámetro no coincide: se esperaba {expected}, pero se recibió {received}","annotatedTypeArgMissing":"Se espera un argumento de tipo y una o más anotaciones para \\"Anotado\\".","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Las anotaciones de tipo no pueden utilizar literales de cadena de formato (cadenas f)","annotationNotSupported":"No se admite la anotación de tipo para esta declaración","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Las anotaciones de tipo no pueden abarcar varios literales de cadena","annotationStringEscape":"Las anotaciones de tipo no pueden contener caracteres de escape","argAssignment":"Argumento de tipo \\"{argType}\\" no puede ser asignado a parámetro de tipo \\"{paramType}\\"","argAssignmentFunction":"El argumento de tipo \\"{argType}\\" no puede ser asignado a parámetro de tipo \\"{paramType}\\" en función \\"{functionName}\\"","argAssignmentParam":"Argumento de tipo \\"{argType}\\" no puede ser asignado a parámetro \\"{paramName}\\" de tipo \\"{paramType}\\"","argAssignmentParamFunction":"Argumento de tipo \\"{argType}\\" no puede ser asignado a parámetro \\"{paramName}\\" de tipo \\"{paramType}\\" en función \\"{functionName}\\"","argMissingForParam":"Falta el argumento para el parámetro {name}","argMissingForParams":"Faltan argumentos para los parámetros {names}","argMorePositionalExpectedCount":"Más argumentos posicionales {expected} esperados","argMorePositionalExpectedOne":"Se espera 1 argumento posicional más","argPositional":"Argumento posicional esperado","argPositionalExpectedCount":"Argumentos posicionales esperados {expected}","argPositionalExpectedOne":"Se espera 1 argumento posicional","argTypePartiallyUnknown":"El tipo de argumento es parcialmente desconocido","argTypeUnknown":"Tipo de argumento desconocido","assertAlwaysTrue":"La expresión Assert siempre se evalúa como verdadero","assertTypeArgs":"\\"assert_type\\" espera dos argumentos posicionales","assertTypeTypeMismatch":"Error de coincidencia \\"assert_type\\": se esperaba \\"{expected}\\" pero se ha recibido \\"{received}\\"","assignmentExprComprehension":"El destino de la expresión de asignación \\"{name}\\" no puede usar el mismo nombre que la comprensión para el destino","assignmentExprContext":"La expresión de asignación debe estar dentro de un módulo, función o lambda","assignmentExprInSubscript":"Las expresiones de asignación dentro de un subíndice solo se admiten en Python 3.10 y versiones posteriores.","assignmentInProtocol":"Las variables de instancia o clase dentro de una clase Protocol deben declararse explícitamente en el cuerpo de la clase.","assignmentTargetExpr":"La expresión no puede ser objetivo de asignación","asyncNotInAsyncFunction":"No se permite el uso de \\"async\\" fuera de la función asincrónica","awaitIllegal":"El uso de \\"await\\" requiere Python 3.5 o posterior.","awaitNotAllowed":"Las anotaciones de tipo no pueden usar \\"await\\"","awaitNotInAsync":"\\"await\\" solo se permite dentro de una función async","backticksIllegal":"En Python 3.x no se admiten expresiones rodeadas de puntos suspensivos; utilice repr en su lugar.","baseClassCircular":"La clase no se puede derivar de sí misma","baseClassFinal":"La clase base \\"{type}\\" está marcada como final y no puede ser subclasificada","baseClassIncompatible":"Las clases base de {type} son mutuamente incompatibles","baseClassInvalid":"El argumento de la clase debe ser una clase base","baseClassMethodTypeIncompatible":"Las clases base para la clase \\"{classType}\\" definen el método \\"{name}\\" de forma incompatible","baseClassUnknown":"Se desconoce el tipo de la clase base, lo que oculta el tipo de la clase derivada.","baseClassVariableTypeIncompatible":"Las clases base para la clase \\"{classType}\\" definen la variable \\"{name}\\" de forma incompatible","binaryOperationNotAllowed":"Operador binario no permitido en la anotación de tipo","bindTypeMismatch":"No se pudo enlazar el método \\"{methodName}\\" porque \\"{type}\\" no se puede asignar al parámetro \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" solo se puede usar dentro de un bucle","callableExtraArgs":"Se esperaban solo dos argumentos de tipo para \\"Exigible\\".","callableFirstArg":"Lista de tipos de parámetros esperados o \\"...\\"","callableNotInstantiable":"No se puede instanciar el tipo \\"{type}\\"","callableSecondArg":"Tipo de retorno esperado como segundo argumento de tipo para \\"Exigible\\"","casePatternIsIrrefutable":"El patrón irrefutable solo se permite para la última instrucción case","classAlreadySpecialized":"El tipo \\"{type}\\" ya está especializado","classDecoratorTypeUnknown":"El decorador de clase sin tipo oculta el tipo de clase; omitiendo el elemento Decorator","classDefinitionCycle":"La definición de clase para \\"{name}\\" depende de sí misma.","classGetItemClsParam":"__class_getitem__ debe tomar un parámetro \\"cls\\"","classMethodClsParam":"Los métodos de clase deben tomar un parámetro \\"cls\\"","classNotRuntimeSubscriptable":"El subíndice para la clase \\"{name}\\" generará una excepción en tiempo de ejecución; encierre la anotación de tipo entre comillas","classPatternBuiltInArgPositional":"El patrón de clase solo acepta subpatrones posicionales","classPatternPositionalArgCount":"Demasiados patrones posicionales para la clase \\"{type}\\"; esperado {expected} pero recibido {received}","classPatternTypeAlias":"\\"{type}\\" no se puede usar en un patrón de clase porque es un alias de tipo especializado","classPropertyDeprecated":"Las propiedades de clase están en desuso en Python 3.11 y no se admitirán en Python 3.13.","classTypeParametersIllegal":"La sintaxis de los parámetros de tipo de clase requiere Python 3.12 o posterior.","classVarFirstArgMissing":"Se esperaba un argumento de tipo después de \\"ClassVar\\"","classVarNotAllowed":"\\"ClassVar\\" no está permitido en este contexto","classVarOverridesInstanceVar":"La variable de clase \\"{name}\\" anula la variable de instancia del mismo nombre en la clase \\"{className}\\"","classVarTooManyArgs":"Solo se esperaba un argumento de tipo después de \\"ClassVar\\"","classVarWithTypeVar":"El tipo \\"ClassVar\\" no puede incluir variables de tipo","clsSelfParamTypeMismatch":"El tipo de parámetro \\"{name}\\" debe ser un supertipo de su clase \\"{classType}\\"","codeTooComplexToAnalyze":"El código es demasiado complejo para analizarlo; reduzca la complejidad refactorizándolo en subrutinas o reduciendo las rutas de código condicional.","collectionAliasInstantiation":"No se puede crear una instancia del tipo \\"{type}\\"; use \\"{alias}\\" en su lugar.","comparisonAlwaysFalse":"La condición siempre se evaluará como Falso, ya que los tipos \\"{leftType}\\" y \\"{rightType}\\" no se superponen.","comparisonAlwaysTrue":"La condición siempre se evaluará como Verdadero, ya que los tipos \\"{leftType}\\" y \\"{rightType}\\" no se superpone.","comprehensionInDict":"La comprensión no puede utilizarse con otras entradas del diccionario","comprehensionInSet":"La comprensión no se puede usar con otras entradas de conjunto","concatenateContext":"\\"Concatenar\\" no se permite en este contexto","concatenateParamSpecMissing":"El último argumento de tipo para \\"Concatenatar\\" debe ser un ParamSpec o \\"...\\"","concatenateTypeArgsMissing":"\\"Concatenar\\" requiere al menos dos argumentos de tipo","conditionalOperandInvalid":"Operando condicional no válido de tipo \\"{type}\\"","constantRedefinition":"\\"{name}\\" es constante (porque está en mayúsculas) y no se puede volver a definir","constructorNoArgs":"No se esperaban argumentos para el constructor \\"{type}\\"","constructorParametersMismatch":"Error de coincidencia entre la firma de __new__ y __init__ en la clase \\"{classType}\\"","containmentAlwaysFalse":"La expresión siempre se evaluará como False, ya que los tipos \\"{leftType}\\" y \\"{rightType}\\" no tienen superposición","containmentAlwaysTrue":"La expresión siempre se evaluará como True, ya que los tipos \\"{leftType}\\" y \\"{rightType}\\" no tienen superposición","continueInFinally":"\\"continue\\" no puede utilizarse dentro de una cláusula finally","continueOutsideLoop":"\\"continue\\" solo puede utilizarse dentro de un bucle","coroutineInConditionalExpression":"La expresión condicional hace referencia a una corrutina que siempre se evalúa como Verdadero","dataClassBaseClassFrozen":"Una clase no inmovilizada no puede heredar de una clase inmovilizada","dataClassBaseClassNotFrozen":"Una clase congelada no puede heredar de una clase que no esté congelada","dataClassConverterFunction":"Argumento de tipo \\"{argType}\\" no es un convertidor válido para el campo \\"{fieldName}\\" de tipo \\"{fieldType}\\"","dataClassConverterOverloads":"No hay sobrecargas de \\"{funcName}\\" que sean convertidores válidos para el campo \\"{fieldName}\\" de tipo \\"{fieldType}\\"","dataClassFieldWithDefault":"Los campos sin valores predeterminados no pueden aparecer después de los campos con valores predeterminados","dataClassFieldWithPrivateName":"El campo Dataclass no puede utilizar un nombre privado","dataClassFieldWithoutAnnotation":"El campo Dataclass sin anotación de tipo provocará una excepción en tiempo de ejecución","dataClassPostInitParamCount":"Dataclass __post_init__ recuento de parámetros incorrecto; el número de campos InitVar es {expected}.","dataClassPostInitType":"El tipo de parámetro del método __post_init__ de la clase de datos no coincide con el del campo \\"{fieldName}\\".","dataClassSlotsOverwrite":"__slots__ ya está definido en la clase","dataClassTransformExpectedBoolLiteral":"Expresión esperada que se evalúa estáticamente como True o False","dataClassTransformFieldSpecifier":"Se esperaba una tupla de clases o funciones, pero se recibió el tipo \\"{type}\\"","dataClassTransformPositionalParam":"Todos los argumentos de \\"dataclass_transform\\" deben ser argumentos de palabra clave","dataClassTransformUnknownArgument":"El argumento \\"{name}\\" no es compatible con dataclass_transform","dataProtocolInSubclassCheck":"No se permiten protocolos de datos (que incluyen atributos que no son de método) en llamadas issubclass","declaredReturnTypePartiallyUnknown":"El tipo de retorno declarado, \\"{returnType}\\", es parcialmente desconocido","declaredReturnTypeUnknown":"El tipo de retorno declarado es desconocido","defaultValueContainsCall":"No se permiten llamadas de función y objetos mutables dentro de la expresión de valor predeterminado del parámetro","defaultValueNotAllowed":"Los parámetros con \\"*\\" o \\"**\\" no pueden tener valor por defecto","delTargetExpr":"No se puede eliminar la expresión","deprecatedClass":"La clase \\"{name}\\" está en desuso","deprecatedConstructor":"El constructor de la clase \\"{name}\\" está obsoleto","deprecatedDescriptorDeleter":"El método \\"__delete__\\" para el \\"{name}\\" de descriptor está en desuso","deprecatedDescriptorGetter":"El método \\"__get__\\" para el \\"{name}\\" de descriptor está en desuso","deprecatedDescriptorSetter":"El método \\"__set__\\" para el \\"{name}\\" de descriptor está en desuso","deprecatedFunction":"La función \\"{name}\\" está obsoleta","deprecatedMethod":"El método \\"{name}\\" en la clase \\"{className}\\" está en desuso","deprecatedPropertyDeleter":"El eliminador de la propiedad \\"{name}\\" está en desuso","deprecatedPropertyGetter":"El captador de la propiedad \\"{name}\\" está en desuso","deprecatedPropertySetter":"El establecedor de la propiedad \\"{name}\\" está en desuso","deprecatedType":"Este tipo está obsoleto a partir de la {version} de Python; utilice en su lugar \\"{replacement}\\".","dictExpandIllegalInComprehension":"No se permite la ampliación del diccionario en la comprensión","dictInAnnotation":"Expresión de diccionario no permitida en anotación de tipo","dictKeyValuePairs":"Las entradas del diccionario deben contener pares clave/valor","dictUnpackIsNotMapping":"Asignación esperada para el operador de desempaquetado del diccionario","dunderAllSymbolNotPresent":"\\"{name}\\" se especifica en __all__ pero no está presente en el módulo","duplicateArgsParam":"Solo se permite un parámetro \\"*\\".","duplicateBaseClass":"Clase base duplicada no permitida","duplicateCapturePatternTarget":"El destino de captura \\"{name}\\" no puede aparecer más de una vez dentro del mismo patrón","duplicateCatchAll":"Solo se permite una cláusula de excepción","duplicateEnumMember":"El miembro Enum \\"{name}\\" ya está declarado","duplicateGenericAndProtocolBase":"Solo se permite una clase base Genérica[...] o Protocolar[...].","duplicateImport":"\\"{importName}\\" se importa más de una vez","duplicateKeywordOnly":"Solo se permite un separador \\"*\\".","duplicateKwargsParam":"Solo se permite un parámetro \\"**\\".","duplicateParam":"Parámetro duplicado \\"{name}\\"","duplicatePositionOnly":"Solo se permite un parámetro \\"/\\"","duplicateStarPattern":"Solo se permite un patrón \\"*\\" en una secuencia de patrones","duplicateStarStarPattern":"Solo se permite una entrada \\"**\\"","duplicateUnpack":"Solo se permite una operación de desempaquetado en la lista","ellipsisAfterUnpacked":"\\"...\\" no se puede usar con una TypeVarTuple o tupla sin empaquetar","ellipsisContext":"\\"...\\" no está permitido en este contexto","ellipsisSecondArg":"\\"...\\" está permitido sólo como el segundo de dos argumentos","enumClassOverride":"La clase Enum \\"{name}\\" es final y no puede ser subclasificada","exceptionGroupIncompatible":"La sintaxis de grupo de excepciones (\\"except*\\") requiere Python 3.11 o posterior.","exceptionTypeIncorrect":"\\"{type}\\" no se deriva de BaseException","exceptionTypeNotClass":"\\"{type}\\" no es una clase de excepción válida","exceptionTypeNotInstantiable":"El constructor para el tipo de excepción \\"{type}\\" requiere uno o más argumentos","expectedAfterDecorator":"Se esperaba una declaración de función o clase después del decorador","expectedArrow":"Se esperaba \\"->\\" seguido de una anotación de tipo de retorno","expectedAsAfterException":"Se esperaba \\"as\\" después del tipo de excepción","expectedAssignRightHandExpr":"Expresión esperada a la derecha de \\"=\\"","expectedBinaryRightHandExpr":"Expresión esperada a la derecha del operador","expectedBoolLiteral":"Se esperaba True o False","expectedCase":"Declaración \\"case\\" esperada","expectedClassName":"Nombre de clase esperado","expectedCloseBrace":"\\"{\\" no estaba cerrado","expectedCloseBracket":"\\"[\\" no estaba cerrado","expectedCloseParen":"\\"(\\" no estaba cerrado","expectedColon":"Se esperaba \\":\\"","expectedComplexNumberLiteral":"Número complejo literal esperado para la concordancia de patrones","expectedDecoratorExpr":"Forma de expresión no compatible con Decorator anterior a Python 3.9","expectedDecoratorName":"Nombre esperado del Decorator","expectedDecoratorNewline":"Nueva línea esperada al final de Decorator","expectedDelExpr":"Expresión esperada después de \\"del\\"","expectedElse":"Se espera \\"else\\"","expectedEquals":"Se esperaba \\"=\\"","expectedExceptionClass":"Clase o objeto de excepción no válido","expectedExceptionObj":"Objeto de excepción esperado, clase de excepción o Ninguno","expectedExpr":"Se esperaba una expresión","expectedFunctionAfterAsync":"Definición de función esperada después de \\"async\\"","expectedFunctionName":"Se esperaba nombre de la función luego de \\"def\\"","expectedIdentifier":"Identificador esperado","expectedImport":"Se espera \\"import\\"","expectedImportAlias":"Símbolo esperado después de \\"como\\"","expectedImportSymbols":"Se esperan uno o más nombres de símbolos tras la importación","expectedIn":"Se esperaba \\"in\\"","expectedInExpr":"Expresión esperada después de \\"in\\"","expectedIndentedBlock":"Bloque con sangría previsto","expectedMemberName":"Nombre de miembro esperado después de \\".\\"","expectedModuleName":"Nombre de módulo esperado","expectedNameAfterAs":"Se esperaba un nombre de símbolo después de \\"as\\"","expectedNamedParameter":"El parámetro de palabra clave debe ir después de \\"*\\".","expectedNewline":"Nueva línea esperada","expectedNewlineOrSemicolon":"Las declaraciones deben ir separadas por nuevas líneas o punto y coma","expectedOpenParen":"Se espera \\"(\\"","expectedParamName":"Nombre esperado del parámetro","expectedPatternExpr":"Expresión del patrón esperado","expectedPatternSubjectExpr":"Expresión de asunto de patrón esperada","expectedPatternValue":"Expresión de valor de patrón esperada de la forma \\"a.b\\"","expectedReturnExpr":"Expresión esperada después de \\"return\\"","expectedSliceIndex":"Expresión de índice o segmento esperada","expectedTypeNotString":"Se esperaba un tipo pero se ha recibido una cadena literal","expectedTypeParameterName":"Nombre de parámetro de tipo esperado","expectedYieldExpr":"Expresión esperada en la instrucción yield","finalClassIsAbstract":"La clase \\"{type}\\" está marcada como final y debe implementar todos los símbolos abstractos","finalContext":"\\"Final\\" no está permitido en este contexto","finalMethodOverride":"El método \\"{name}\\" no puede anular el método final definido en la clase \\" {className}\\"","finalNonMethod":"La función \\"{name}\\" no se puede marcar @final porque no es un método","finalReassigned":"\\"{name}\\" se declara como Final y no se puede reasignar","finalRedeclaration":"\\"{name}\\" se declaró anteriormente como Final","finalRedeclarationBySubclass":"\\"{name}\\" no puede ser redeclarado porque la clase padre \\"{className}\\" lo declara como Final","finalTooManyArgs":"Se esperaba un único argumento de tipo después de \\"Final\\".","finalUnassigned":"\\"{name}\\" se declara Final, pero no se asigna valor","formatStringBrace":"No se permite una llave de cierre única dentro del literal de cadena f; usar llave de cierre doble","formatStringBytes":"Los literales de cadena de formato (f-strings) no pueden ser binarios","formatStringDebuggingIllegal":"El especificador de depuración de cadena F \\"=\\" requiere Python 3.8 o posterior","formatStringEscape":"Secuencia de escape (barra diagonal inversa) no permitida en la parte de expresión de f-string anterior a Python 3.12","formatStringExpectedConversion":"Se esperaba un especificador de conversión después de \\"!\\" en f-string","formatStringIllegal":"Los literales de cadena de formato (f-strings) requieren Python 3.6 o posterior","formatStringInPattern":"Cadena de formato no permitida en el patrón","formatStringNestedFormatSpecifier":"Expresiones anidadas demasiado profundamente dentro del especificador de cadena de formato","formatStringNestedQuote":"Las cadenas anidadas dentro de una cadena f no pueden usar el mismo carácter de comillas que la cadena f anterior a Python 3.12","formatStringUnicode":"Los literales de cadena de formato (cadenas f) no pueden ser unicode","formatStringUnterminated":"Expresión sin terminar en f-string; se esperaba \\"}\\"","functionDecoratorTypeUnknown":"Un decorator de función no tipificado oculta el tipo de función; ignorar el decorator","functionInConditionalExpression":"La expresión condicional hace referencia a una función que siempre se evalúa como Verdadero","functionTypeParametersIllegal":"La sintaxis del parámetro de tipo de función requiere Python 3.12 o posterior","futureImportLocationNotAllowed":"Las importaciones desde __future__ deben estar al principio del fichero","generatorAsyncReturnType":"El tipo de retorno de la función generadora asíncrona debe ser compatible con \\"AsyncGenerator[{yieldType}, Any]\\"","generatorNotParenthesized":"Las expresiones del generador deben ir entre paréntesis si no son el único argumento","generatorSyncReturnType":"El tipo de retorno de la función generadora debe ser compatible con \\"Generator[{yieldType}, Any, Any]\\"","genericBaseClassNotAllowed":"La clase base \\"Generic\\" no se puede usar con la sintaxis de parámetro de tipo","genericClassAssigned":"No se puede asignar un tipo de clase genérico","genericClassDeleted":"No se puede eliminar el tipo de clase genérica","genericInstanceVariableAccess":"El acceso a la variable de instancia genérica a través de la clase es ambiguo","genericNotAllowed":"\\"Generic\\" no es válido en este contexto","genericTypeAliasBoundTypeVar":"Los alias de tipo genérico dentro de una clase no pueden utilizar variables de tipo vinculadas {names}.","genericTypeArgMissing":"\\"Generic\\" requiere al menos un argumento de tipo","genericTypeArgTypeVar":"El argumento de tipo para \\"Generic\\" debe ser una variable de tipo","genericTypeArgUnique":"Los argumentos de tipo para \\"Generic\\" deben ser únicos","globalReassignment":"\\"{name}\\" se asigna antes de la declaración global","globalRedefinition":"\\"{name}\\" ya ha sido declarado global","implicitStringConcat":"No se permite la concatenación implícita de cadenas","importCycleDetected":"Ciclo detectado en la cadena de importación","importDepthExceeded":"La profundidad de la cadena de importación superó {depth}","importResolveFailure":"No se ha podido resolver la importación \\"{importName}\\".","importSourceResolveFailure":"La importación \\"{importName}\\" no se ha podido resolver desde el origen","importSymbolUnknown":"\\"{name}\\" es un símbolo de importación desconocido","incompatibleMethodOverride":"El método \\"{name}\\" sobrescribe la clase \\"{className}\\" de forma incompatible","inconsistentIndent":"La cantidad sin sangría no coincide con la sangría anterior","inconsistentTabs":"Uso incoherente de tabuladores y espacios en la sangría","initMustReturnNone":"El tipo de retorno de \\"__init__\\" debe ser None","initSubclassCallFailed":"Argumentos de palabra clave incorrectos para el método __init_subclass__","initSubclassClsParam":"__init_subclass__ debe tomar un parámetro \\"cls\\"","initVarNotAllowed":"\\"InitVar\\" no se permite en este contexto","instanceMethodSelfParam":"Los métodos de instancia deben tomar un parámetro \\"auto\\"","instanceVarOverridesClassVar":"La variable de instancia \\"{name}\\" invalida la variable de clase del mismo nombre en la clase \\"{className}\\"","instantiateAbstract":"No se puede instanciar la clase abstracta \\"{type}\\"","instantiateProtocol":"No se puede crear una instancia de la clase de protocolo \\"{type}\\"","internalBindError":"Se ha producido un error interno al vincular el archivo \\"{file}\\": {message}","internalParseError":"Se ha producido un error interno al procesar el archivo \\"{file}\\": {message}","internalTypeCheckingError":"Se ha producido un error interno al comprobar el tipo de archivo \\"{file}\\":{message}","invalidIdentifierChar":"Carácter no válido en el identificador","invalidStubStatement":"La declaración no tiene sentido dentro de un archivo de tipo stub","invalidTokenChars":"Carácter \\"{text}\\" no válido en el token","isInstanceInvalidType":"El segundo argumento de \\"isinstance\\" debe ser una clase o tupla de clases","isSubclassInvalidType":"El segundo argumento de \\"issubclass\\" debe ser una clase o tupla de clases","keyValueInSet":"No se permiten pares de clave/valor dentro de un conjunto","keywordArgInTypeArgument":"No se pueden usar argumentos de palabra clave en listas de argumentos de tipo","keywordOnlyAfterArgs":"No se permite el separador de argumentos por palabra clave después del parámetro \\"*\\".","keywordParameterMissing":"Uno o varios parámetros de palabra clave deben seguir el parámetro \\"*\\"","keywordSubscriptIllegal":"No se admiten argumentos de palabra clave dentro de subíndices","lambdaReturnTypePartiallyUnknown":"El tipo de retorno de la lambda \\"{returnType}\\" es parcialmente desconocido.","lambdaReturnTypeUnknown":"Se desconoce el tipo de retorno de la lambda","listAssignmentMismatch":"La expresión con el tipo \\"{type}\\" no puede asignarse a la lista de destino","listInAnnotation":"Expresión de lista no permitida en anotación de tipo","literalEmptyArgs":"Se esperaban uno o varios argumentos de tipo después de \\"Literal\\"","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"\\"Literal\\" no se puede usar en este contexto sin un argumento de tipo","literalNotCallable":"El tipo literal no puede instanciarse","literalUnsupportedType":"Los argumentos de tipo para \\"Literal\\" deben ser None, un valor literal (int, bool, str, o bytes), o un valor enum","matchIncompatible":"Las declaraciones de coincidencia requieren Python 3.10 o posterior","matchIsNotExhaustive":"Los casos dentro de la declaración de coincidencia no tratan exhaustivamente todos los valores","maxParseDepthExceeded":"Se ha superado la profundidad máxima de análisis; divida la expresión en subexpresiones más pequeñas.","memberAccess":"No se puede acceder al miembro \\"{name}\\" para el tipo \\" {type} \\"","memberDelete":"No se puede eliminar el miembro \\"{name}\\" para el tipo \\"{type}\\"","memberSet":"No se puede asignar el miembro \\"{name}\\" para el tipo \\"{type}\\"","metaclassConflict":"La metaclase de una clase derivada debe ser una subclase de las metaclases de todas sus clases base","metaclassDuplicate":"Solo se puede proporcionar una metaclase","metaclassIsGeneric":"La metaclase no puede ser genérica","methodNotDefined":"Método \\"{name}\\" no definido","methodNotDefinedOnType":"Método \\"{name}\\" no definido en el tipo \\"{type}\\"","methodOrdering":"No se puede crear una ordenación coherente de los métodos","methodOverridden":"\\"{name}\\" invalida el método del mismo nombre en la clase \\"{className}\\" con el tipo incompatible \\"{type}\\"","methodReturnsNonObject":"El método \\"{name}\\" no devuelve un objeto","missingSuperCall":"El método \\"{methodName}\\" no llama al método del mismo nombre en la clase principal.","moduleAsType":"El módulo no se puede usar como tipo.","moduleNotCallable":"No se puede llamar al módulo","moduleUnknownMember":"\\"{memberName}\\" no es un miembro conocido del módulo \\"{moduleName}\\"","namedExceptAfterCatchAll":"Una cláusula except con nombre no puede aparecer después de la cláusula catch-all except","namedParamAfterParamSpecArgs":"El parámetro de palabra clave \\"{name}\\" no puede aparecer en la firma después del parámetro ParamSpec args","namedTupleEmptyName":"Los nombres de una tupla con nombre no pueden estar vacíos","namedTupleEntryRedeclared":"No se puede invalidar \\"{name}\\" porque la clase primaria \\"{className}\\" es una tupla con nombre","namedTupleFirstArg":"Nombre de clase de tupla como primer argumento","namedTupleMultipleInheritance":"No se admite la herencia múltiple con NamedTuple","namedTupleNameKeyword":"Los nombres de campo no pueden ser una palabra clave","namedTupleNameType":"Tupla de dos entradas esperada que especifica el nombre y el tipo de entrada","namedTupleNameUnique":"Los nombres dentro de una tupla con nombre deben ser únicos","namedTupleNoTypes":"\\"namedtuple\\" no proporciona tipos para las entradas de tupla; utilice en su lugar \\"NamedTuple\\".","namedTupleSecondArg":"Lista de entradas de tupla con nombre esperada como segundo argumento","newClsParam":"__new__ debe tomar un parámetro \\"cls\\"","newTypeAnyOrUnknown":"El segundo argumento de NewType debe ser una clase conocida, no Cualquiera ni Desconocido","newTypeBadName":"El primer argumento de NewType debe ser una cadena literal","newTypeLiteral":"NewType no se puede usar con el tipo Literal","newTypeNameMismatch":"NewType debe asignarse a una variable con el mismo nombre","newTypeNotAClass":"Clase esperada como segundo argumento de NewType","newTypeParamCount":"NewType requiere dos argumentos posicionales","newTypeProtocolClass":"NewType no se puede usar con un tipo estructural (un protocolo o una clase TypedDict)","noOverload":"Ninguna sobrecarga para \\"{name}\\" coincide con los argumentos proporcionados","noReturnContainsReturn":"La función con tipo de retorno declarado \\"NoReturn\\" no puede incluir una sentencia volver","noReturnContainsYield":"La función con tipo de retorno declarado \\"NoReturn\\" no puede incluir una instrucción yield","noReturnReturnsNone":"La función con el tipo de valor devuelto declarado \\"NoReturn\\" no puede devolver \\"None\\"","nonDefaultAfterDefault":"El argumento no predeterminado sigue al argumento predeterminado","nonLocalInModule":"Declaración no local no permitida a nivel de módulo","nonLocalNoBinding":"No se ha encontrado ningún enlace para \\"{name}\\" no local.","nonLocalReassignment":"\\"{name}\\" se asigna antes de la declaración no local","nonLocalRedefinition":"\\"{name}\\" ya fue declarado no local","noneNotCallable":"No se puede llamar al objeto de tipo \\"None\\"","noneNotIterable":"No se puede utilizar un objeto de tipo \\"Ninguno\\" como valor iterable","noneNotSubscriptable":"El objeto de tipo \\"None\\" no se puede suscribir","noneNotUsableWith":"El objeto de tipo \\"None\\" no puede utilizarse con \\"with\\".","noneOperator":"El operador \\"{operator}\\" no es compatible con \\"None\\".","noneUnknownMember":"\\"{name}\\" no es un miembro conocido de \\"None\\"","notRequiredArgCount":"Se esperaba un único argumento de tipo después de \\"NotRequired\\".","notRequiredNotInTypedDict":"\\"NotRequired\\" no está permitido en este contexto","objectNotCallable":"El objeto de tipo \\"{type}\\" no es invocable","obscuredClassDeclaration":"La declaración de clase \\"{name}\\" queda oculta por una declaración del mismo nombre","obscuredFunctionDeclaration":"La declaración de función \\"{name}\\" queda oculta por una declaración del mismo nombre","obscuredMethodDeclaration":"La declaración de método \\"{name}\\" queda oculta por una declaración del mismo nombre","obscuredParameterDeclaration":"La declaración de parámetro \\"{name}\\" queda oculta por una declaración del mismo nombre","obscuredTypeAliasDeclaration":"La declaración de alias de tipo \\"{name}\\" queda oculta por una declaración del mismo nombre","obscuredVariableDeclaration":"La declaración \\"{name}\\" está oculta por una declaración del mismo nombre","operatorLessOrGreaterDeprecated":"El operador \\"<>\\" no es admitido en Python 3; utilice en su lugar \\"!=\\".","optionalExtraArgs":"Se esperaba un argumento de tipo después de \\"Optional\\"","orPatternIrrefutable":"El patrón irrefutable solo se permite como el último subpatrón en un patrón \\"or\\".","orPatternMissingName":"Todos los subpatrones de un patrón \\"o\\" deben tener los mismos nombres","overlappingKeywordArgs":"El diccionario escrito se superpone con el parámetro de palabra clave: {names}","overlappingOverload":"La sobrecarga {obscured} para \\"{name}\\" nunca se utilizará porque sus parámetros se superpone con la sobrecarga {obscuredBy}.","overloadAbstractMismatch":"Todos los métodos sobrecargados deben ser abstractos o no","overloadClassMethodInconsistent":"Las sobrecargas de \\"{name}\\" usan @classmethod de forma incoherente","overloadFinalInconsistencyImpl":"La sobrecarga de \\"{name}\\" está marcada @final pero la implementación no","overloadFinalInconsistencyNoImpl":"La sobrecarga {index} para \\"{name}\\" está marcada @final pero la sobrecarga 1 no lo está.","overloadImplementationMismatch":"La implementación de la sobrecarga no es consistente con la firma de la sobrecarga {index}","overloadReturnTypeMismatch":"La sobrecarga {prevIndex} para \\" {name}\\" se superpone con la sobrecarga {newIndex} y devuelve un tipo incompatible","overloadStaticMethodInconsistent":"Las sobrecargas de \\"{name}\\" usan @staticmethod de forma incoherente","overloadWithoutImplementation":"\\"{name}\\" está marcado como sobrecarga, pero no se proporciona ninguna implementación.","overriddenMethodNotFound":"El método \\"{name}\\" está marcado como invalidación, pero no existe ningún método base con el mismo nombre","overrideDecoratorMissing":"El método \\"{name}\\" no está marcado como invalidación, pero está reemplazando un método de la clase \\"{className}\\"","paramAfterKwargsParam":"El parámetro no puede seguir el parámetro \\"**\\"","paramAlreadyAssigned":"El parámetro \\"{name}\\" ya está asignado","paramAnnotationMissing":"Falta la anotación de tipo para el parámetro \\"{name}\\"","paramAssignmentMismatch":"La expresión de tipo \\"{sourceType}\\" no se puede asignar al parámetro de tipo \\"{paramType}\\"","paramNameMissing":"Ningún parámetro llamado \\"{name}\\"","paramSpecArgsKwargsUsage":"Los miembros \\"args\\" y \\"kwargs\\" de ParamSpec deben aparecer ambos dentro de una firma de función","paramSpecArgsMissing":"Faltan argumentos para ParamSpec \\"{type}\\".","paramSpecArgsUsage":"El miembro \\"args\\" de ParamSpec solo es válido cuando se usa con el parámetro *args.","paramSpecAssignedName":"ParamSpec debe asignarse a una variable llamada \\"{name} \\"","paramSpecContext":"ParamSpec no está permitido en este contexto","paramSpecDefaultNotTuple":"Se esperaban puntos suspensivos, una expresión de tupla o ParamSpec para el valor predeterminado de ParamSpec","paramSpecFirstArg":"Se esperaba el nombre de ParamSpec como primer argumento","paramSpecKwargsUsage":"El miembro \\"kwargs\\" de ParamSpec solo es válido cuando se utiliza con el parámetro **kwargs","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" no tiene significado en este contexto","paramSpecScopedToReturnType":"El ámbito de ParamSpec \\"{name}\\" es un ámbito al que se puede llamar dentro del tipo de valor devuelto y no se puede hacer referencia a él en el cuerpo de la función.","paramSpecUnknownArg":"ParamSpec no admite más de un argumento","paramSpecUnknownMember":"\\"{name}\\" no es un miembro conocido de ParamSpec","paramSpecUnknownParam":"\\"{name}\\" es un parámetro desconocido para ParamSpec","paramTypeCovariant":"La variable de tipo covariante no puede utilizarse en el tipo de parámetro","paramTypePartiallyUnknown":"El tipo de parámetro \\"{paramName}\\" es parcialmente desconocido","paramTypeUnknown":"Se desconoce el tipo del parámetro \\"{paramName}\\".","parenthesizedContextManagerIllegal":"Los paréntesis dentro de la instrucción \\"with\\" requieren Python 3.9 o posterior","patternNeverMatches":"El patrón nunca coincidirá para el tipo de asunto \\"{type}\\"","positionArgAfterNamedArg":"El argumento posicional no puede aparecer después de los argumentos de palabra clave","positionOnlyAfterArgs":"No se permite el separador de parámetros de un solo puesto después del parámetro \\"*\\".","positionOnlyAfterKeywordOnly":"El parámetro \\"/\\" debe aparecer antes del parámetro \\"*\\".","positionOnlyAfterNon":"Parámetro de un solo puesto no permitido después del parámetro que no es de solo posición","positionOnlyFirstParam":"Separador parámetros de solo un puesto no permitido como primer parámetro","positionOnlyIncompatible":"El separador de parámetros de un solo puesto requiere Python 3.8 o posterior","privateImportFromPyTypedModule":"\\"{name}\\" no se exporta desde el módulo \\"{module}\\"","privateUsedOutsideOfClass":"\\"{name}\\" es privado y se utiliza fuera de la clase en la que se declara","privateUsedOutsideOfModule":"\\"{name}\\" es privado y se utiliza fuera del módulo en el que se declara","propertyOverridden":"\\"{name}\\" invalida incorrectamente la propiedad del mismo nombre en la clase \\"{className}\\"","propertyStaticMethod":"Métodos estáticos no permitidos para los valores getter, setter o deleter de propiedades","protectedUsedOutsideOfClass":"\\"{name}\\" está protegido y se usa fuera de la clase en la que se declara","protocolBaseClass":"La clase de protocolo \\"{classType}\\" no se puede derivar de la clase que no es de protocolo \\"{baseType}\\"","protocolBaseClassWithTypeArgs":"No se permiten argumentos de tipo con la clase Protocol cuando se usa la sintaxis de parámetro de tipo","protocolIllegal":"El uso de \\"Protocolo\\" requiere Python 3.7 o posterior.","protocolNotAllowed":"\\"Protocolo\\" no puede utilizarse en este contexto","protocolUnsafeOverlap":"La clase se superpone \\"{name}\\" de forma no segura y podría producir una coincidencia en tiempo de ejecución","protocolVarianceContravariant":"La variable de tipo \\"{variable}\\" usada en el protocolo genérico \\"{class}\\" debe ser contravariante.","protocolVarianceCovariant":"La variable de tipo \\"{variable}\\" usada en el protocolo genérico \\"{class}\\" debe ser covariante","protocolVarianceInvariant":"La variable de tipo \\"{variable}\\" usada en el protocolo genérico \\"{class}\\" debe ser invariable.","pyrightCommentInvalidDiagnosticBoolValue":"La directiva de comentario Pyright debe ir seguida de \\"=\\" y un valor de true o false","pyrightCommentInvalidDiagnosticSeverityValue":"La directiva de comentario Pyright debe ir seguida de \\"=\\" y un valor de verdadero, falso, error, advertencia, información o ninguno.","pyrightCommentMissingDirective":"El comentario de copyright debe ir seguido de una directiva (básica o estricta) o de una regla de diagnóstico","pyrightCommentNotOnOwnLine":"Los comentarios de copyright utilizados para controlar los ajustes a nivel de archivo deben aparecer en su propia línea","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" es una regla de diagnóstico desconocida para el comentario pyright","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" es un valor no válido para el comentario pyright; se espera verdadero, falso, error, advertencia, información o ninguno.","pyrightCommentUnknownDirective":"\\"{directive}\\" es una directiva desconocida para el comentario pyright; se esperaba \\"strict\\" o \\"basic\\".","readOnlyArgCount":"Se esperaba un único argumento de tipo después de \\"ReadOnly\\"","readOnlyNotInTypedDict":"\\"ReadOnly\\" no está permitido en este contexto","recursiveDefinition":"No se pudo determinar el tipo de \\"{name}\\" porque hace referencia a sí mismo.","relativeImportNotAllowed":"Las importaciones relativas no pueden utilizarse con la forma \\"import .a\\"; utilice en su lugar \\"from . import a\\"","requiredArgCount":"Se esperaba un único argumento de tipo después de \\"Required\\"","requiredNotInTypedDict":"\\"Required\\" no está permitido en este contexto","returnInAsyncGenerator":"No se permite la instrucción Return con valor en el generador asincrónico","returnMissing":"La función con el tipo de valor devuelto declarado \\"{returnType}\\" debe devolver un valor en todas las rutas de acceso del código.","returnOutsideFunction":"\\"return\\" solo se puede usar dentro de una función","returnTypeContravariant":"La variable de tipo contravariante no se puede usar en el tipo de valor devuelto","returnTypeMismatch":"La expresión del tipo \\"{exprType}\\" no puede asignarse al tipo de retorno \\"{returnType}\\"","returnTypePartiallyUnknown":"El tipo de retorno, \\"{returnType}\\", es parcialmente desconocido","returnTypeUnknown":"Tipo de retorno desconocido","revealLocalsArgs":"No se esperaba ningún argumento para la llamada \\"reveal_locals\\"","revealLocalsNone":"No hay locales en este ámbito","revealTypeArgs":"Se esperaba un único argumento posicional para la llamada \\"reveal_type\\"","revealTypeExpectedTextArg":"El argumento \\"expected_text\\" de la función \\"reveal_type\\" debe ser un valor literal str.","revealTypeExpectedTextMismatch":"El tipo de texto no coincide; se esperaba \\"{expected}\\" pero se ha recibido \\"{received}\\".","revealTypeExpectedTypeMismatch":"Error de coincidencia de tipos; se esperaba \\"{expected}\\", pero se recibió \\"{received}\\"","selfTypeContext":"\\"Self\\" no es válido en este contexto","selfTypeMetaclass":"\\"Self\\" no se puede usar dentro de una metaclase (una subclase de \\"type\\")","selfTypeWithTypedSelfOrCls":"\\"Auto\\" no puede utilizarse en una función con un parámetro `self` o `cls` que tenga una anotación de tipo distinta de \\"Auto\\".","setterGetterTypeMismatch":"El tipo de valor setter de propiedad no se puede asignar al tipo devuelto por el valor setter","singleOverload":"\\"{name}\\" está marcado como sobrecarga, pero faltan sobrecargas adicionales","slotsAttributeError":"\\"{name}\\" no se especificó en __slots__","slotsClassVarConflict":"\\"{name}\\" entra en conflicto con la variable de instancia declarada en __slots__","starPatternInAsPattern":"El patrón estrella no puede utilizarse con el objetivo \\"as\\"","starPatternInOrPattern":"El patrón de estrella no puede unirse a otros patrones","starStarWildcardNotAllowed":"** no puede utilizarse con el comodín \\"_\\".","staticClsSelfParam":"Los métodos estáticos no deben tomar un parámetro \\"auto\\" o \\"cls\\".","stdlibModuleOverridden":"\\"{path}\\" está reemplazando el módulo stdlib \\"{name}\\"","stringNonAsciiBytes":"Carácter no ASCII no permitido en el literal de cadena de bytes","stringNotSubscriptable":"La expresión de cadena no puede ir entre comillas en la anotación de tipo; encierre toda la anotación entre comillas.","stringUnsupportedEscape":"Secuencia de escape no admitida en el literal de cadena","stringUnterminated":"La cadena literal no está terminada","stubFileMissing":"Archivo Stub no encontrado para \\"{importName}\\"","stubUsesGetAttr":"El archivo stub de tipo está incompleto; \\"__getattr__\\" oculta errores de tipo para el módulo","sublistParamsIncompatible":"Los parámetros de sublista no están soportados en Python 3.x","superCallArgCount":"No se esperaban más de dos argumentos para la llamada \\"super\\"","superCallFirstArg":"Se esperaba el tipo de clase como primer argumento de la llamada a \\"super\\" pero se recibió \\"{type}\\"","superCallSecondArg":"El segundo argumento de la llamada a \\"super\\" debe ser un objeto o clase que derive de \\"{type}\\"","superCallZeroArgForm":"La forma sin argumentos de la llamada \\"super\\" sólo es válida dentro de un método","superCallZeroArgFormStaticMethod":"La forma sin argumentos de la llamada \\"super\\" no es válida en un método estático","symbolIsPossiblyUnbound":"\\"{name}\\" está posiblemente desvinculado","symbolIsUnbound":"\\"{name}\\" está sin consolidar","symbolIsUndefined":"\\"{name}\\" no está definido","symbolOverridden":"\\"{name}\\" anula el símbolo del mismo nombre en la clase \\"{className}\\"","ternaryNotAllowed":"No se permite la expresión ternaria en la anotación de tipo","totalOrderingMissingMethod":"La clase debe definir uno de \\"__lt__\\", \\"__le__\\", \\"__gt__\\", o \\"__ge__\\" para utilizar total_ordering","trailingCommaInFromImport":"No se permite la coma final sin paréntesis alrededor","tryWithoutExcept":"La instrucción Try debe tener al menos una cláusula except o finally","tupleAssignmentMismatch":"La expresión con el tipo \\"{type}\\" no se puede asignar a la tupla de destino","tupleInAnnotation":"No se permite la expresión de tupla en la anotación de tipo","tupleIndexOutOfRange":"El índice {index} está fuera de rango para el tipo {type}.","typeAliasIllegalExpressionForm":"Forma de expresión no válida para la definición de alias de tipo","typeAliasIsRecursiveDirect":"El alias de tipo \\"{name}\\" no puede usarse a sí mismo en su definición","typeAliasNotInModuleOrClass":"Un TypeAlias solo puede definirse en el ámbito de un módulo o de una clase","typeAliasRedeclared":"\\"{name}\\" se declara como TypeAlias y solo puede asignarse una vez","typeAliasStatementBadScope":"Una instrucción de tipo solo se puede usar en el ámbito de un módulo o de una clase","typeAliasStatementIllegal":"La sentencia Type alias requiere Python 3.12 o posterior","typeAliasTypeBaseClass":"Un alias de tipo definido en una instrucción \\"type\\" no se puede usar como clase base","typeAliasTypeMustBeAssigned":"TypeAliasType debe asignarse a una variable con el mismo nombre que el alias de tipo","typeAliasTypeNameArg":"El primer argumento de TypeAliasType debe ser un literal de cadena que represente el nombre del alias de tipo","typeAliasTypeNameMismatch":"El nombre del alias de tipo debe coincidir con el nombre de la variable a la que se asigna","typeAliasTypeParamInvalid":"La lista de parámetros de tipo debe ser una tupla que contenga solo TypeVar, TypeVarTuple o ParamSpec.","typeAnnotationCall":"No se permite la expresión de llamada en la expresión de tipo","typeAnnotationVariable":"Variable no permitida en la expresión de tipo","typeAnnotationWithCallable":"El argumento de tipo para \\"type\\" debe ser una clase; no se admiten invocables","typeArgListExpected":"ParamSpec esperado, elipsis o lista de tipos","typeArgListNotAllowed":"Expresión de lista no permitida para este argumento de tipo","typeArgsExpectingNone":"No se esperaban argumentos de tipo para la clase \\"{name}\\"","typeArgsMismatchOne":"Se esperaba un argumento de tipo pero ha recibido {received}","typeArgsMissingForAlias":"Argumentos de tipo esperados para el alias de tipo genérico \\"{name}\\"","typeArgsMissingForClass":"Se esperaban argumentos de tipo para la clase genérica \\"{name}\\"","typeArgsTooFew":"Se han proporcionado muy pocos argumentos de tipo para \\"{name}\\"; se esperaba {expected} pero se ha recibido {received}.","typeArgsTooMany":"Se proporcionaron demasiados argumentos de tipo para \\"{name}\\"; se esperaba {expected}, pero se recibieron {received}","typeAssignmentMismatch":"La expresión del tipo \\"{sourceType}\\" no puede asignarse al tipo declarado \\"{destType}\\"","typeAssignmentMismatchWildcard":"El símbolo de importación \\"{name}\\" tiene el tipo \\"{sourceType}\\", que no se puede asignar al tipo declarado \\"{destType}\\"","typeCallNotAllowed":"la llamada a type() no debe utilizarse en la anotación de tipo","typeCheckOnly":"\\"{name}\\" está marcado como @type_check_only y solo se puede usar en anotaciones de tipo","typeCommentDeprecated":"El uso de comentarios de tipo está obsoleto; utilice en su lugar anotaciones de tipo.","typeExpectedClass":"Se esperaba una expresión de tipo pero se ha recibido \\"{type}\\"","typeGuardArgCount":"Se esperaba un único argumento de tipo después de \\"TypeGuard\\" o \\"TypeIs\\"","typeGuardParamCount":"Las funciones y métodos de protección de tipo definidos por el usuario deben tener al menos un parámetro de entrada","typeIsReturnType":"El tipo de valor devuelto de TypeIs (\\"{returnType}\\") no es coherente con el tipo de parámetro de valor (\\"{type}\\")","typeNotAwaitable":"\\"{type}\\" no se puede esperar","typeNotIntantiable":"\\"{type}\\" no puede crear instancias","typeNotIterable":"\\"{type}\\" no es iterable","typeNotSpecializable":"No se pudo especializar el tipo \\"{type}\\"","typeNotSubscriptable":"Objeto de tipo \\"{type}\\" no es subscriptible","typeNotSupportBinaryOperator":"El operador \\"{operator}\\" no se admite para los tipos \\"{leftType}\\" y \\"{rightType}\\"","typeNotSupportBinaryOperatorBidirectional":"No se admite el operador \\"{operator}\\" para los tipos \\"{leftType}\\" y \\"{rightType}\\" cuando el tipo esperado es \\"{expectedType}\\"","typeNotSupportUnaryOperator":"El operador \\"{operator}\\" no se admite para el tipo \\"{type}\\"","typeNotSupportUnaryOperatorBidirectional":"Operador \\"{operator}\\" no admitido para el tipo \\"{type}\\" cuando el tipo esperado es \\"{expectedType}\\"","typeNotUsableWith":"El objeto de tipo \\"{type}\\" no puede utilizarse con \\"con\\" porque no implementa {method}.","typeParameterBoundNotAllowed":"No se pueden usar límites o restricciones con un parámetro de tipo variádico o ParamSpec","typeParameterConstraintTuple":"La restricción del parámetro de tipo debe ser una tupla de dos o más tipos","typeParameterExistingTypeParameter":"El parámetro de tipo \\"{name}\\" ya está en uso","typeParameterNotDeclared":"El parámetro de tipo \\"{name}\\" no está incluido en la lista de parámetros de tipo para \\"{container}\\"","typeParametersMissing":"Debe especificarse al menos un parámetro de tipo","typePartiallyUnknown":"El tipo de \\"{name}\\" es parcialmente desconocido","typeUnknown":"El tipo de \\"{name} \\" es desconocido","typeVarAssignedName":"TypeVar debe asignarse a una variable llamada \\"{name}\\"","typeVarAssignmentMismatch":"No se puede asignar el tipo \\"{type}\\" a la variable de tipo \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar no puede estar ligado y restringido a la vez","typeVarBoundGeneric":"El tipo vinculado TypeVar no puede ser genérico","typeVarConstraintGeneric":"El tipo de restricción TypeVar no puede ser genérico","typeVarDefaultBoundMismatch":"El tipo predeterminado TypeVar debe ser un subtipo del tipo enlazado.","typeVarDefaultConstraintMismatch":"El tipo predeterminado TypeVar debe ser uno de los tipos restringidos.","typeVarDefaultIllegal":"Los tipos predeterminados de variable de tipo requieren Python 3.13 o posterior","typeVarDefaultInvalidTypeVar":"El parámetro de tipo \\"{name}\\" tiene un tipo por defecto que hace referencia a una o más variables de tipo que están fuera de ámbito.","typeVarFirstArg":"Nombre esperado de TypeVar como primer argumento","typeVarNoMember":"TypeVar \\"{type}\\" no tiene miembro \\"{name}\\"","typeVarNotSubscriptable":"TypeVar \\"{type}\\" no es subscribible","typeVarNotUsedByOuterScope":"La variable de tipo \\"{name}\\" no tiene ningún significado en este contexto","typeVarPossiblyUnsolvable":"La variable de tipo \\"{name}\\" puede quedar sin resolver si el autor de la llamada no proporciona ningún argumento para el parámetro \\"{param}\\"","typeVarScopedToReturnType":"La variable de tipo \\"{name}\\" tiene como ámbito una llamada dentro del tipo de valor devuelto y no se puede hacer referencia a ella en el cuerpo de la función.","typeVarSingleConstraint":"TypeVar debe tener al menos dos tipos restringidos","typeVarTupleConstraints":"TypeVarTuple no puede tener restricciones de valor","typeVarTupleContext":"TypeVarTuple no está permitido en este contexto","typeVarTupleDefaultNotUnpacked":"El tipo predeterminado TypeVarTuple debe ser una tupla desempaquetada o TypeVarTuple","typeVarTupleMustBeUnpacked":"Se requiere el operador Unpack para el valor TypeVarTuple.","typeVarTupleUnknownParam":"\\"{name}\\" es un parámetro desconocido para TypeVarTuple","typeVarUnknownParam":"\\"{name}\\" es un parámetro desconocido para TypeVar","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" ya está en uso por un ámbito externo","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" solo aparece una vez en la firma de la función genérica","typeVarVariance":"TypeVar no puede ser covariante y contravariante","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\" tiene un valor predeterminado y no puede seguir a TypeVarTuple \\"{variadicName}\\"","typeVarWithoutDefault":"\\"{name}\\" no puede aparecer después de \\"{other}\\" en la lista de parámetros de tipo porque no tiene ningún tipo predeterminado","typeVarsNotInGenericOrProtocol":"Generic[] o Protocol[] deben incluir todas las variables de tipo","typedDictAccess":"No se ha podido acceder al elemento en TypedDict","typedDictAssignedName":"TypedDict debe asignarse a una variable denominada \\"{name}\\"","typedDictBadVar":"Las clases TypedDict solo pueden contener anotaciones de tipo","typedDictBaseClass":"Todas las clases base de las clases TypedDict deben ser también clases TypedDict","typedDictBoolParam":"Se esperaba que el parámetro \\"{name}\\" tuviera un valor de Verdadero o Falso.","typedDictClosedExtras":"La clase base \\"{name}\\" es un TypedDict cerrado; los elementos adicionales deben ser de tipo \\"{type}\\"","typedDictClosedNoExtras":"La clase base \\"{name}\\" es un TypedDict cerrado; no se permiten elementos adicionales","typedDictDelete":"No se puede eliminar un elemento en TypedDict","typedDictEmptyName":"Los nombres de un TypedDict no pueden estar vacíos","typedDictEntryName":"Cadena literal esperada para el nombre de la entrada del diccionario","typedDictEntryUnique":"Los nombres dentro de un diccionario deben ser únicos","typedDictExtraArgs":"No se admiten argumentos TypedDict adicionales","typedDictFieldNotRequiredRedefinition":"El elemento TypedDict \\"{name}\\" no se puede redefinir como NotRequired","typedDictFieldReadOnlyRedefinition":"El elemento TypedDict \\"{name}\\" no se puede redefinir como ReadOnly","typedDictFieldRequiredRedefinition":"El elemento TypedDict \\"{name}\\" no se puede redefinir como Requerido","typedDictFirstArg":"Nombre de clase TypedDict esperado como primer argumento","typedDictInitsubclassParameter":"TypedDict no admite __init_subclass__ parámetro \\"{name}\\"","typedDictNotAllowed":"\\"TypedDict\\" no puede utilizarse en este contexto","typedDictSecondArgDict":"Parámetro dict o palabra clave esperado como segundo parámetro","typedDictSecondArgDictEntry":"Entrada de diccionario simple esperada","typedDictSet":"No se pudo asignar el elemento en TypedDict","unaccessedClass":"No se accede a la clase \\"{name}\\"","unaccessedFunction":"No se accede a la función \\"{name}","unaccessedImport":"No se accede a la importación \\"{name}","unaccessedSymbol":"No se accede a \\"{name}\\"","unaccessedVariable":"No se accede a la variable \\"{name} \\".","unannotatedFunctionSkipped":"Se omite el análisis de la función \\"{name}\\" porque no está anotada","unaryOperationNotAllowed":"Operador unario no permitido en la anotación de tipo","unexpectedAsyncToken":"Se esperaba que \\"def\\", \\"with\\" o \\"for\\" siguieran a \\"async\\".","unexpectedExprToken":"Token inesperado al final de la expresión","unexpectedIndent":"sangSangría inesperadaría inesperada","unexpectedUnindent":"No se espera sangría","unhashableDictKey":"La clave del diccionario debe ser hash","unhashableSetEntry":"La entrada del conjunto debe ser hashable","uninitializedAbstractVariables":"Las variables definidas en la clase base abstracta no se inicializan en la clase final \\"{classType}\\"","uninitializedInstanceVariable":"La variable de instancia \\"{name}\\" no está inicializada en el cuerpo de la clase o en el método __init__.","unionForwardReferenceNotAllowed":"Union syntax cannot be used with string operand; use quotes around entire expression","unionSyntaxIllegal":"La sintaxis alternativa para las uniones requiere Python 3.10 o posterior.","unionTypeArgCount":"La unión requiere dos o más argumentos de tipo","unionUnpackedTuple":"La unión no puede incluir una tupla desempaquetada","unionUnpackedTypeVarTuple":"La unión no puede incluir un TypeVarTuple desempaquetado","unnecessaryCast":"Llamada \\"cast\\" innecesaria; el tipo ya es \\"{type}\\"","unnecessaryIsInstanceAlways":"Llamada isinstance innecesaria; \\"{testType}\\" es siempre una instancia de \\"{classType}\\"","unnecessaryIsSubclassAlways":"Llamada de issubclass innecesaria; \\"{testType}\\" siempre es una subclase de \\"{classType}\\"","unnecessaryPyrightIgnore":"Comentario \\"# pyright: ignore\\" innecesario","unnecessaryPyrightIgnoreRule":"Regla innecesaria \\"# pyright: ignore\\": \\"{name}\\"","unnecessaryTypeIgnore":"Comentario \\"# type: ignore\\" innecesario","unpackArgCount":"Se esperaba un único argumento de tipo después de \\"Desempaquetar\\"","unpackExpectedTypeVarTuple":"Se esperaba TypeVarTuple o tupla como argumento de tipo para desempaquetar","unpackExpectedTypedDict":"Se esperaba un argumento de tipo TypedDict para Unpack","unpackIllegalInComprehension":"Operación de desempaquetado no permitida en la comprensión","unpackInAnnotation":"No se permite el operador desempaquetado en la anotación de tipo","unpackInDict":"Operación de desempaquetado no permitida en diccionarios","unpackInSet":"No se permite el operador Unpack dentro de un conjunto","unpackNotAllowed":"El desempaquetado no está permitido en este contexto","unpackOperatorNotAllowed":"La operación de desempaquetado no está permitida en este contexto","unpackTuplesIllegal":"Operación de desempaquetado no permitida en tuplas anteriores a Python 3.8","unpackedArgInTypeArgument":"Los argumentos sin empaquetar no pueden utilizarse en listas de argumentos de tipo","unpackedArgWithVariadicParam":"No se puede usar un argumento desempaquetado para el parámetro TypeVarTuple","unpackedDictArgumentNotMapping":"La expresión del argumento después de ** debe ser un mapeo con un tipo de clave \\"str\\".","unpackedDictSubscriptIllegal":"El operador de desempaquetado del diccionario en el subíndice no está permitido","unpackedSubscriptIllegal":"El operador de desempaquetado en el subíndice requiere Python 3.11 o posterior.","unpackedTypeVarTupleExpected":"Se espera un TypeVarTuple desempaquetado; use Unpack[{name1}] o *{name2}","unpackedTypedDictArgument":"No se puede emparejar el argumento TypedDict desempaquetado con los parámetros","unreachableCode":"El código es inalcanzable","unreachableExcept":"La cláusula Excepto es inalcanzable porque la excepción ya está administrada","unsupportedDunderAllOperation":"No se admite la operación en \\"__all__\\", por lo que la lista de símbolos exportada puede ser incorrecta.","unusedCallResult":"El resultado de la expresión de llamada es de tipo \\"{type}\\" y no se usa; asignar a la variable \\"_\\" si esto es intencionado","unusedCoroutine":"El resultado de la llamada a una función asíncrona no se utiliza; utilice \\"await\\" o asigne el resultado a una variable.","unusedExpression":"El valor de expresión no se usa","varAnnotationIllegal":"Las anotaciones de tipo para variables requieren Python 3.6 o posterior; utilice el comentario de tipo para la compatibilidad con versiones anteriores.","variableFinalOverride":"La variable \\"{name}\\" está marcada como Final y anula la variable no Final del mismo nombre en la clase \\"{className}\\".","variadicTypeArgsTooMany":"La lista de argumentos de tipo puede tener como máximo una TypeVarTuple o tupla desempaquetada","variadicTypeParamTooManyAlias":"Los alias de tipo pueden tener como máximo un parámetro de tipo TypeVarTuple, pero reciben varios ({names})","variadicTypeParamTooManyClass":"La clase genérica puede tener como máximo un parámetro de tipo TypeVarTuple pero recibió múltiples ({names})","walrusIllegal":"El operador \\":=\\" requiere Python 3.8 o posterior","walrusNotAllowed":"El operador \\":=\\" no está permitido en este contexto sin paréntesis alrededor","wildcardInFunction":"No se permite la importación de comodines dentro de una clase o función","wildcardLibraryImport":"No se permite la importación de caracteres comodín desde una biblioteca","wildcardPatternTypePartiallyUnknown":"El tipo capturado por el patrón comodín es parcialmente desconocido","wildcardPatternTypeUnknown":"Se desconoce el tipo capturado por el patrón de caracteres comodín","yieldFromIllegal":"El uso de \\"yield\\" requiere Python 3.3 o posterior.","yieldFromOutsideAsync":"\\"yield from\\" no permitido en una función asincrónica","yieldOutsideFunction":"\\"yield\\" no se permite fuera de una función o lambda","yieldWithinListCompr":"\\"yield\\" no está permitido dentro de una comprensión de lista","zeroCaseStatementsFound":"La instrucción Match debe incluir al menos una instrucción case","zeroLengthTupleNotAllowed":"La tupla de longitud cero no está permitida en este contexto"},"DiagnosticAddendum":{"annotatedNotAllowed":"El formulario especial \\"Anotado\\" no se puede usar con comprobaciones de instancia y clase","argParam":"El argumento corresponde al parámetro \\"{paramName}\\"","argParamFunction":"El argumento corresponde al parámetro \\"{paramName}\\" en la función \\"{functionName}\\"","argsParamMissing":"El parámetro \\"*{paramName}\\" no tiene ningún parámetro correspondiente","argsPositionOnly":"Error de coincidencia del parámetro de solo posición; se esperaba {expected}, pero se recibieron {received}","argumentType":"El tipo de argumento es \\"{type}\\"","argumentTypes":"Tipos de argumento: ({types})","assignToNone":"El tipo no puede asignarse al tipo \\"None\\"","asyncHelp":"¿Quería decir \\"async with\\"?","baseClassIncompatible":"La clase base \\"{baseClass}\\" no es compatible con el tipo \\"{type}\\"","baseClassIncompatibleSubclass":"La clase base \\"{baseClass}\\" deriva de \\"{subclass}\\", que no es compatible con el tipo \\"{type}\\"","baseClassOverriddenType":"La clase base \\"{baseClass}\\" proporciona el tipo \\"{type}\\", que se sobrescribe","baseClassOverridesType":"Invalidaciones de clase base \\"{baseClass}\\" con el tipo \\"{type}\\"","bytesTypePromotions":"Establezca disableBytesTypePromotions en falso para activar el comportamiento de promoción de tipos para \\"bytearray\\" y \\"memoryview\\".","conditionalRequiresBool":"El método __bool__ para el tipo \\"{operandType}\\" devuelve el tipo \\"{boolReturnType}\\" en lugar de \\"bool\\"","dataClassFieldLocation":"en declaración de campo","dataClassFrozen":"\\"{name}\\" está congelado","dataProtocolUnsupported":"\\"{name}\\" es un protocolo de datos","descriptorAccessBindingFailed":"No se pudo enlazar el método \\"{name}\\" para la clase de descriptor \\"{className}\\"","descriptorAccessCallFailed":"No se pudo llamar al método \\"{name}\\" para la clase de descriptor \\"{className}\\"","finalMethod":"Método final","functionParamDefaultMissing":"Falta el argumento predeterminado en el parámetro \\"{name}\\"","functionParamName":"Nombre de parámetro no coincidente: \\"{destName}\\" frente a \\"{srcName}\\"","functionParamPositionOnly":"Error de coincidencia del parámetro de solo posición; el parámetro \\"{name}\\" no es de solo posición","functionReturnTypeMismatch":"El tipo de valor devuelto de la función \\"{sourceType}\\" no es compatible con el tipo \\"{destType}\\"","functionTooFewParams":"La función acepta muy pocos parámetros posicionales; esperado {expected} pero recibido {received}","functionTooManyParams":"La función acepta demasiados parámetros posicionales; esperado {expected} pero recibido {received}","genericClassNotAllowed":"Tipo genérico con argumentos de tipo no permitidos para comprobaciones de instancia o clase","incompatibleDeleter":"El método de eliminación de propiedades no es compatible","incompatibleGetter":"El método captador de propiedad no es compatible","incompatibleSetter":"El método setter de la propiedad no es compatible","initMethodLocation":"El método __init__ se define en la clase \\"{type}\\"","initMethodSignature":"La firma de __init__ es \\"{type}\\"","initSubclassLocation":"El método __init_subclass__ se define en la clase \\"{name}\\"","invariantSuggestionDict":"Considere cambiar de \\"predicción\\" a \\" Asignación\\" que es covariante en el tipo de valor","invariantSuggestionList":"Considere la posibilidad de cambiar de \\"lista\\" a \\"Secuencia\\" que es covariante","invariantSuggestionSet":"Considere la posibilidad de cambiar de \\"conjunto\\" a \\"Contenedor\\" que es covariante","keyNotRequired":"\\"{name}\\" no es una clave necesaria en \\"{type}\\", por lo que el acceso puede dar lugar a una excepción en tiempo de ejecución","keyReadOnly":"\\"{name}\\" es una clave de solo lectura en \\"{type}\\"","keyRequiredDeleted":"\\"{name}\\" es una clave necesaria y no se puede eliminar","keyUndefined":"\\"{name}\\" no es una clave definida en \\"{type}\\"","kwargsParamMissing":"El parámetro \\"**{paramName}\\" no tiene ningún parámetro correspondiente.","listAssignmentMismatch":"El tipo \\"{type}\\" es incompatible con la lista de objetivos","literalAssignmentMismatch":"\\"{sourceType}\\" no puede asignarse al tipo \\"{destType}\\"","matchIsNotExhaustiveHint":"Si no se pretende un tratamiento exhaustivo, agregue \\"case _: pass\\"","matchIsNotExhaustiveType":"Tipo no manejado: \\"{type}\\"","memberAssignment":"La expresión de tipo \\"{type}\\" no se puede asignar al miembro \\"{name}\\" de la clase \\"{classType}\\"","memberIsAbstract":"\\"{type}. {name}\\" no está implementado","memberIsAbstractMore":"y {count} más","memberIsClassVarInProtocol":"\\"{name}\\" se define como ClassVar en el protocolo","memberIsFinalInProtocol":"\\"{name}\\" está marcado como Final en el protocolo","memberIsInitVar":"El miembro \\"{name}\\" es un campo solo de inicialización","memberIsInvariant":"\\"{name}\\" es invariable porque es mutable","memberIsNotClassVarInClass":"\\"{name}\\" debe definirse como ClassVar para que sea compatible con el protocolo","memberIsNotClassVarInProtocol":"\\"{name}\\" no está definido como ClassVar en el protocolo","memberIsNotFinalInProtocol":"\\"{name}\\" no está marcado como Final en el protocolo","memberIsWritableInProtocol":"\\"{name}\\" se puede escribir en el protocolo","memberSetClassVar":"El miembro \\"{name}\\" no se puede asignar a través de una instancia de clase porque es un ClassVar.","memberTypeMismatch":"\\"{name}\\" es un tipo incompatible","memberUnknown":"El miembro \\"{name}\\" es desconocido","metaclassConflict":"La metaclase \\"{metaclass1}\\" entra en conflicto con \\"{metaclass2}\\"","missingDeleter":"Falta el método de eliminación de propiedades","missingGetter":"Falta el método Getter de la propiedad","missingSetter":"Falta el método establecedor de propiedades","namedParamMissingInDest":"Falta el parámetro de palabra clave \\"{name}\\" en el destino","namedParamMissingInSource":"Falta el parámetro de palabra clave \\"{name}\\" en el origen","namedParamTypeMismatch":"El parámetro de palabra clave \\"{name}\\" del tipo \\"{sourceType}\\" no puede asignarse al tipo \\"{destType}\\"","namedTupleNotAllowed":"No se puede usar NamedTuple para comprobaciones de instancia o clase","newMethodLocation":"El método __new__ está definido en la clase \\"{type}\\"","newMethodSignature":"La firma de __new__ es \\"{type}\\"","newTypeClassNotAllowed":"La clase creada con NewType no se puede usar con comprobaciones de instancia y clase","noOverloadAssignable":"Ninguna función sobrecargada coincide con el tipo \\"{type}\\"","noneNotAllowed":"No se puede usar ninguno para comprobaciones de instancia o clase","orPatternMissingName":"Nombres que faltan: {name}","overloadIndex":"La sobrecarga {index} es la coincidencia más cercana","overloadNotAssignable":"Una o más sobrecargas de \\"{name}\\" no es asignable","overloadSignature":"Aquí se define la firma de la sobrecarga","overriddenMethod":"Método reemplazado","overriddenSymbol":"Símbolo anulado","overrideInvariantMismatch":"El tipo de invalidación “{overrideType}” no es el mismo que el tipo básico “{baseType}”","overrideIsInvariant":"La variable es mutable, por lo que su tipo es invariable","overrideNoOverloadMatches":"Ninguna firma de sobrecarga en anulación es compatible con el método base","overrideNotClassMethod":"El método base se declara como Método de clase pero el Reemplazar no","overrideNotInstanceMethod":"El método base se declara como método de instancia, pero la invalidación no","overrideNotStaticMethod":"El método base se declara como staticmethod pero el reemplazo no","overrideOverloadNoMatch":"La invalidación no controla todas las sobrecargas del método base","overrideOverloadOrder":"Las sobrecargas para el método de anulación deben estar en el mismo orden que el método base","overrideParamKeywordNoDefault":"El parámetro de palabra clave \\"{name}\\" no coincide: el parámetro base tiene el valor de argumento predeterminado, el parámetro de invalidación no","overrideParamKeywordType":"El parámetro de palabra clave \\"{name}\\" no coincide: el parámetro base es de tipo \\"{baseType}\\", el parámetro de invalidación es de tipo \\"{overrideType}\\"","overrideParamName":"El nombre del parámetro {index} no coincide: el parámetro base se denomina \\"{baseName}\\", el parámetro de invalidación se denomina \\"{overrideName}\\"","overrideParamNameExtra":"Falta el parámetro \\"{name}\\" en la base","overrideParamNameMissing":"Falta el parámetro \\"{name}\\" en la invalidación","overrideParamNamePositionOnly":"El parámetro {index} no coincide: el parámetro base \\"{baseName}\\" es un parámetro de palabra clave, el parámetro de invalidación es de solo posición","overrideParamNoDefault":"El parámetro {index} no coincide: el parámetro base tiene un valor de argumento predeterminado, el parámetro de invalidación no","overrideParamType":"El parámetro {index} no coincide: el parámetro base es de tipo \\"{baseType}\\", el parámetro de invalidación es de tipo \\"{overrideType}\\"","overridePositionalParamCount":"El recuento de parámetros posicionales no coincide; el método base tiene {baseCount}, pero la invalidación tiene {overrideCount}","overrideReturnType":"Error de tipo de retorno: el método base devuelve el tipo \\"{baseType}\\", el reemplazo devuelve el tipo \\"{overrideType}\\".","overrideType":"La clase base define el tipo como \\"{type}\\"","paramAssignment":"Parámetro {index}: el tipo \\"{sourceType}\\" no puede asignarse al tipo \\"{destType}\\"","paramSpecMissingInOverride":"Faltan parámetros ParamSpec en el método de invalidación","paramType":"El tipo de parámetro es \\"{paramType}\\"","privateImportFromPyTypedSource":"Importar desde \\"{module}\\" en su lugar","propertyAccessFromProtocolClass":"No se puede tener acceso a una propiedad definida dentro de una clase de protocolo como variable de clase","propertyMethodIncompatible":"El método de propiedad \\"{name}\\" no es compatible","propertyMethodMissing":"Falta el método de propiedad \\"{name}\\" en la invalidación","propertyMissingDeleter":"La propiedad \\"{name}\\" no tiene un supresor definido","propertyMissingSetter":"La propiedad \\"{name}\\" no tiene el valor setter definido","protocolIncompatible":"\\"{sourceType}\\" no es compatible con el protocolo \\"{destType}\\"","protocolMemberMissing":"\\"{name}\\" no está presente.","protocolRequiresRuntimeCheckable":"La clase de protocolo debe ser @runtime_checkable para usarse con comprobaciones de instancia y clase","protocolSourceIsNotConcrete":"\\"{sourceType}\\" no es un tipo de clase concreto y no se puede asignar al tipo \\"{destType}\\"","protocolUnsafeOverlap":"Los atributos de \\"{name}\\" tienen los mismos nombres que el protocolo","pyrightCommentIgnoreTip":"Utilice \\"# pyright: ignore[<diagnostic rules>] para suprimir el diagnóstico de una sola línea","readOnlyAttribute":"El atributo \\"{name}\\" es de solo lectura","seeClassDeclaration":"Ver declaración de clase","seeDeclaration":"Ver declaración","seeFunctionDeclaration":"Ver declaración de función","seeMethodDeclaration":"Consulte la declaración del métodoa","seeParameterDeclaration":"Declaración de parámetro","seeTypeAliasDeclaration":"Véase la declaración de alias de tipo","seeVariableDeclaration":"declaración de variable out","tupleAssignmentMismatch":"El tipo \\"{type}\\" no es compatible con la tupla de destino","tupleEntryTypeMismatch":"La entrada {entry} de la tupla es de tipo incorrecto","tupleSizeIndeterminateSrc":"El tamaño de la tupla no coincide; se esperaba {expected} pero se recibió uno indeterminado","tupleSizeIndeterminateSrcDest":"El tamaño de la tupla no coincide; se esperaba {expected} o más, pero se recibió uno indeterminado","tupleSizeMismatch":"El tamaño de la tupla no coincide; se esperaba {expected} pero se recibió {received}","tupleSizeMismatchIndeterminateDest":"El tamaño de la tupla no coincide; se esperaba {expected} o más, pero se recibió {received}","typeAliasInstanceCheck":"El alias de tipo creado con la instrucción \\"type\\" no se puede usar con comprobaciones de instancia y clase","typeAssignmentMismatch":"El tipo \\"{sourceType}\\" no puede asignarse al tipo \\"{destType}\\"","typeBound":"El tipo \\"{sourceType}\\" es incompatible con el tipo \\"{destType}\\" vinculado para la variable de tipo \\"{name}\\"","typeConstrainedTypeVar":"El tipo \\"{type}\\" no es compatible con la variable de tipo restringido \\"{name}\\"","typeIncompatible":"\\"{sourceType}\\" no es compatible con \\"{destType}\\"","typeNotClass":"\\"{type}\\" no es una clase","typeNotStringLiteral":"\\"{type}\\" no es un literal de cadena","typeOfSymbol":"El tipo de \\"{name}\\" es \\"{type}\\"","typeParamSpec":"El tipo \\"{type}\\" no es compatible con ParamSpec \\"{name}\\"","typeUnsupported":"El tipo \\"{type}\\" no es compatible","typeVarDefaultOutOfScope":"La variable de tipo \\"{name} \\" no está en el ámbito de aplicación","typeVarIsContravariant":"El parámetro de tipo \\"{name}\\" es contravariante, pero \\"{sourceType}\\" no es un supertipo de \\"{destType}\\"","typeVarIsCovariant":"El parámetro de tipo \\"{name}\\" es covariante, pero \\"{sourceType}\\" no es un subtipo de \\"{destType}\\"","typeVarIsInvariant":"El parámetro de tipo \\"{name}\\" es invariable, pero \\"{sourceType}\\" no es el mismo que \\"{destType}\\"","typeVarNotAllowed":"TypeVar no se permite para comprobaciones de instancia o clase","typeVarTupleRequiresKnownLength":"TypeVarTuple no se puede enlazar a una tupla de longitud desconocida","typeVarUnnecessarySuggestion":"Usar {type} en su lugar","typeVarUnsolvableRemedy":"Proporciona una sobrecarga que especifica el tipo de retorno cuando no se proporciona el argumento","typeVarsMissing":"Faltan variables de tipo: {names}","typedDictBaseClass":"La clase “{type}” no es un TypeDict","typedDictClassNotAllowed":"No se permite la clase TypedDict para comprobaciones de instancia o clase","typedDictClosedExtraNotAllowed":"No se puede agregar el elemento \\"{name}\\"","typedDictClosedExtraTypeMismatch":"No se puede agregar el elemento \\"{name}\\" con el tipo \\"{type}\\"","typedDictClosedFieldNotRequired":"No se puede agregar el elemento \\"{name}\\" porque debe ser NotRequired.","typedDictExtraFieldNotAllowed":"\\"{name}\\" no está presente en \\"{type}\\"","typedDictExtraFieldTypeMismatch":"El tipo de \\"{name}\\" no es compatible con el tipo de \\"__extra_items__\\" en \\"{type}\\"","typedDictFieldMissing":"\\"{name}\\" falta en \\"{type}\\"","typedDictFieldNotReadOnly":"\\"{name}\\" no es de solo lectura en \\"{type}\\"","typedDictFieldNotRequired":"\\"{name}\\" no es obligatorio en \\"{type}\\"","typedDictFieldRequired":"\\"{name}\\" es obligatorio en \\"{type}\\"","typedDictFieldTypeMismatch":"El tipo \\"{type}\\" no se puede asignar al elemento \\"{name}\\"","typedDictFieldUndefined":"\\"{name}\\" es un elemento no definido en el tipo \\"{type}\\"","typedDictFinalMismatch":"\\"{sourceType}\\" no es compatible con \\"{destType}\\" debido a una discrepancia @final","typedDictKeyAccess":"Utilizar [\\"{name}\\"] para hacer referencia al elemento en TypedDict","typedDictNotAllowed":"No se puede usar TypedDict para comprobaciones de instancia o clase","unhashableType":"El tipo \\"{type}\\" no admite hash","uninitializedAbstractVariable":"La variable de instancia \\"{name}\\" está definida en la clase base abstracta \\"{classType} \\" pero no inicializada.","unreachableExcept":"\\"{exceptionType}\\" es una subclase de \\"{parentType}\\"","useDictInstead":"Usar Dict[T1, T2] para indicar un tipo de diccionario","useListInstead":"Usar List[T] para indicar un tipo de lista o Union[T1, T2] para indicar un tipo de unión","useTupleInstead":"Utilice Tupla[T1, ..., Tn] para indicar un tipo de tupla o Union[T1, T2] para indicar un tipo de unión.","useTypeInstead":"Utilice Type[T] en su lugar","varianceMismatchForClass":"La varianza del argumento de tipo \\"{typeVarName}\\" no es compatible con la clase base \\"{className}\\"","varianceMismatchForTypeAlias":"La varianza del argumento de tipo \\"{typeVarName}\\" no es compatible con \\"{typeAliasParam}\\""}}')},36626:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Créer un stub de type","createTypeStubFor":"Créer un stub de type pour « {moduleName} »","executingCommand":"Exécution de la commande","filesToAnalyzeCount":"{count} fichiers à analyser","filesToAnalyzeOne":"1 fichier à analyser","findingReferences":"Recherche de références","organizeImports":"Organiser les importations","renameShadowedFile":"Renommez \\"{oldFile}\\" en \\"{newFile}\\""},"Completion":{"autoImportDetail":"Importation automatique","indexValueDetail":"Valeur de l\'indice"},"Diagnostic":{"abstractMethodInvocation":"Désolé, nous n’avons pas pu appeler la méthode « {method} », car elle est abstraite et non implémentée","annotatedParamCountMismatch":"Non-concordance du nombre d\'annotations de paramètre : attendu {expected} mais reçu {received}","annotatedTypeArgMissing":"Un argument de type et une ou plusieurs annotations sont attendus pour « Annotation »","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Les annotations de type ne peuvent pas utiliser de littéraux de chaîne de format (f-strings)","annotationNotSupported":"Annotation de type non prise en charge pour cette instruction","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Les annotations de type ne peuvent pas s\'étendre sur plusieurs littéraux de chaîne","annotationStringEscape":"Les annotations de type ne peuvent pas contenir de caractères d\'échappement","argAssignment":"Impossible d’affecter l’argument de type « {argType} » au paramètre de type « {paramType} »","argAssignmentFunction":"Impossible d’affecter l’argument de type « {argType} » au paramètre de type « {paramType} » dans la fonction « {functionName} »","argAssignmentParam":"Impossible d’affecter l’argument de type « {argType} » au paramètre « {paramName} » de type « {paramType} »","argAssignmentParamFunction":"Impossible d’affecter l’argument de type « {argType} » au paramètre « {paramName} » de type « {paramType} » dans la fonction « {functionName} »","argMissingForParam":"Argument manquant pour le paramètre {name}","argMissingForParams":"Arguments manquants pour les paramètres {names}","argMorePositionalExpectedCount":"{expected} arguments positionnels supplémentaires attendus","argMorePositionalExpectedOne":"1 argument positionnel supplémentaire attendu","argPositional":"Argument positionnel attendu","argPositionalExpectedCount":"Arguments positionnels {expected} attendus","argPositionalExpectedOne":"1 argument positionnel attendu","argTypePartiallyUnknown":"Le type d\'argument est partiellement inconnu","argTypeUnknown":"Le type d’argument est inconnu","assertAlwaysTrue":"L’expression Assert prend toujours la valeur true","assertTypeArgs":"« assert_type » attend deux arguments positionnels","assertTypeTypeMismatch":"Non-concordance de « assert_type » : « {expected} » attendu, mais « {received} »","assignmentExprComprehension":"La cible d\'expression d\'affectation \\"{name}\\" ne peut pas utiliser le même nom que la compréhension pour la cible","assignmentExprContext":"L’expression d’assignation doit se trouver dans le module, la fonction ou l’expression lambda","assignmentExprInSubscript":"Les expressions d’assignation dans un indice sont prises en charge uniquement dans Python 3.10 et versions ultérieures","assignmentInProtocol":"Les variables d\'instance ou de classe au sein d\'une classe Protocol doivent être explicitement déclarées dans le corps de la classe","assignmentTargetExpr":"L’expression ne peut pas être une cible d’assignation","asyncNotInAsyncFunction":"L\'utilisation de \\"async\\" n\'est pas autorisée en dehors de la fonction async","awaitIllegal":"L’utilisation de « await » nécessite Python 3.5 ou version ultérieure","awaitNotAllowed":"Les annotations de type ne peuvent pas utiliser « await »","awaitNotInAsync":"« await » autorisé uniquement dans la fonction asynchrone","backticksIllegal":"Les expressions entourées de accents inverses ne sont pas prises en charge dans Python 3.x; utiliser repr à la place","baseClassCircular":"La classe ne peut pas dériver d\'elle-même","baseClassFinal":"La classe de base « {type} » est marquée comme finale et ne peut pas être sous-classée","baseClassIncompatible":"Les classes de base de {type} sont mutuellement incompatibles","baseClassInvalid":"L’argument pour la classe doit être une classe de base","baseClassMethodTypeIncompatible":"Les classes de base de la classe « {classType} » définissent la méthode « {name} » de manière incompatible","baseClassUnknown":"Le type de classe de base est inconnu, ce qui masque le type de classe dérivée","baseClassVariableTypeIncompatible":"Les classes de base de la classe « {classType} » définissent la variable « {name} » de manière incompatible","binaryOperationNotAllowed":"Opérateur binaire non autorisé dans l’annotation de type","bindTypeMismatch":"Impossible de lier la méthode \\"{methodName}\\" car \\"{type}\\" n\'est pas attribuable au paramètre \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" ne peut être utilisé qu\'à l\'intérieur d\'une boucle","callableExtraArgs":"Seuls deux arguments de type sont attendus pour « Joignable »","callableFirstArg":"Liste de types de paramètres attendue ou « ... »","callableNotInstantiable":"Impossible d’instancier le type « {type} »","callableSecondArg":"Type de retour attendu en tant que deuxième argument de type pour « Joignable »","casePatternIsIrrefutable":"Le motif irréfutable n\'est autorisé que pour la dernière instruction case","classAlreadySpecialized":"Le type « {type} » est déjà spécialisé","classDecoratorTypeUnknown":"Le décorateur de classe non typé masque le type de classe ; décorateur ignorant","classDefinitionCycle":"La définition de classe pour \\"{name}\\" dépend d\'elle-même","classGetItemClsParam":"__class_getitem__ remplacement doit prendre un paramètre « cls »","classMethodClsParam":"Les méthodes de classe doivent prendre un paramètre \\"cls\\"","classNotRuntimeSubscriptable":"L’indice de la classe « {name} » génère une exception d’exécution ; placer l’annotation de type entre guillemets","classPatternBuiltInArgPositional":"Le modèle de classe accepte uniquement le sous-modèle positionnel","classPatternPositionalArgCount":"Trop de modèles positionnels pour les \\"{type}\\" de classe ; {expected} attendue mais {received} reçues","classPatternTypeAlias":"\\"{type}\\" ne peut pas être utilisé dans un modèle de classe car il s\'agit d\'un alias de type spécialisé","classPropertyDeprecated":"Les propriétés de classe sont obsolètes dans Python 3.11 et ne seront pas prises en charge dans Python 3.13","classTypeParametersIllegal":"La syntaxe du paramètre de type de classe nécessite Python 3.12 ou version ultérieure","classVarFirstArgMissing":"Attendu un argument de type après \\"ClassVar\\"","classVarNotAllowed":"« ClassVar » n’est pas autorisé dans ce contexte","classVarOverridesInstanceVar":"La variable de classe « {name} » remplace la variable d’instance du même nom dans la classe « {className} »","classVarTooManyArgs":"Attendu un seul argument de type après \\"ClassVar\\"","classVarWithTypeVar":"Le type \\"ClassVar\\" ne peut pas inclure de variables de type","clsSelfParamTypeMismatch":"Le type de paramètre \\"{name}\\" doit être un supertype de sa classe \\"{classType}\\"","codeTooComplexToAnalyze":"Le code est trop complexe à analyser ; réduire la complexité en refactorisant en sous-routines ou en réduisant les chemins de code conditionnels","collectionAliasInstantiation":"Le type \\"{type}\\" ne peut pas être instancié, utilisez \\"{alias}\\" à la place","comparisonAlwaysFalse":"La condition prend toujours la valeur False, car les types « {leftType} » et « {rightType} » ne se chevauchent pas","comparisonAlwaysTrue":"La condition prend toujours la valeur True, car les types « {leftType} » et « {rightType} » ne se chevauchent pas","comprehensionInDict":"La compréhension ne peut pas être utilisée avec d’autres entrées de dictionnaire","comprehensionInSet":"La compréhension ne peut pas être utilisée avec d\'autres entrées définies","concatenateContext":"« Concatenate » n’est pas autorisé dans ce contexte","concatenateParamSpecMissing":"Le dernier argument de type pour « Concatener » doit être un ParamSpec ou bien « ... »","concatenateTypeArgsMissing":"\\"Concaténation\\" nécessite au moins deux arguments de type","conditionalOperandInvalid":"Opérande conditionnel non valide de type \\"{type}\\"","constantRedefinition":"\\"{name}\\" est constant (car il est en majuscule) et ne peut pas être redéfini","constructorNoArgs":"Aucun argument attendu pour le constructeur « {type} »","constructorParametersMismatch":"Non-concordance entre la signature de __new__ et __init__ dans la classe \\"{classType}\\"","containmentAlwaysFalse":"L\'expression sera toujours évaluée à False car les types \\"{leftType}\\" et \\"{rightType}\\" ne se chevauchent pas","containmentAlwaysTrue":"L\'expression sera toujours évaluée à True puisque les types \\"{leftType}\\" et \\"{rightType}\\" ne se chevauchent pas","continueInFinally":"« continuer » ne peut pas être utilisé dans une clause finally","continueOutsideLoop":"« continuer » ne peut être utilisé qu’au sein d’une boucle","coroutineInConditionalExpression":"L\'expression conditionnelle fait référence à une coroutine qui est toujours évaluée à True","dataClassBaseClassFrozen":"Une classe non gelée ne peut pas hériter d\'une classe gelée","dataClassBaseClassNotFrozen":"Une classe figée ne peut pas hériter d’une classe qui n’est pas figée","dataClassConverterFunction":"L’argument de type « {argType} » n’est pas un convertisseur valide pour le champ « {fieldName} » de type « {fieldType} »","dataClassConverterOverloads":"Aucune surcharge de « {funcName} » n’est valide pour le champ « {fieldName} » de type « {fieldType} »","dataClassFieldWithDefault":"Les champs sans valeurs par défaut ne peuvent pas apparaître après les champs avec des valeurs par défaut","dataClassFieldWithPrivateName":"Le champ Dataclass ne peut pas utiliser de nom privé","dataClassFieldWithoutAnnotation":"Le champ Dataclass sans annotation de type provoquera une exception d\'exécution","dataClassPostInitParamCount":"La classe de données __post_init__ nombre de paramètres incorrect ; le nombre de champs InitVar est {expected}","dataClassPostInitType":"Incompatibilité du type de paramètre de méthode __post_init__ Dataclass pour le champ « {fieldName} »","dataClassSlotsOverwrite":"__slots__ est déjà défini dans la classe","dataClassTransformExpectedBoolLiteral":"Expression attendue qui prend statiquement la valeur True ou False","dataClassTransformFieldSpecifier":"Tuple attendu de classes ou de fonctions mais type reçu \\"{type}\\"","dataClassTransformPositionalParam":"Tous les arguments de « dataclass_transform » doivent être des arguments de mot clé","dataClassTransformUnknownArgument":"L’argument « {name} » n’est pas pris en charge par dataclass_transform","dataProtocolInSubclassCheck":"Les protocoles de données (qui incluent des attributs non méthode) ne sont pas autorisés dans les appels de sous-classe","declaredReturnTypePartiallyUnknown":"Le type de retour déclaré « {returnType} » est partiellement inconnu","declaredReturnTypeUnknown":"Le type de retour déclaré est inconnu","defaultValueContainsCall":"Les appels de fonction et les objets mutables ne sont pas autorisés dans l\'expression de la valeur par défaut du paramètre","defaultValueNotAllowed":"Le paramètre avec « * » ou « ** » ne peut pas avoir de valeur par défaut","delTargetExpr":"L\'expression ne peut pas être supprimée","deprecatedClass":"La classe \\"{name}\\" est obsolète","deprecatedConstructor":"Le constructeur de la classe « {name} » est déconseillé","deprecatedDescriptorDeleter":"La méthode « __delete__ » du descripteur « {name} » est déconseillée","deprecatedDescriptorGetter":"La méthode « __get__ » du descripteur « {name} » est déconseillée","deprecatedDescriptorSetter":"La méthode « __set__ » du descripteur « {name} » est déconseillée","deprecatedFunction":"La fonction \\"{name}\\" est obsolète","deprecatedMethod":"La méthode \\"{name}\\" dans la classe \\"{className}\\" est obsolète","deprecatedPropertyDeleter":"Le deleter de la propriété « {name} » est déconseillé","deprecatedPropertyGetter":"Le getter de la propriété « {name} » est déconseillé","deprecatedPropertySetter":"Le setter de la propriété « {name} » est déconseillé","deprecatedType":"Ce type est déconseillé à compter de Python {version}; utiliser « {replacement} » à la place","dictExpandIllegalInComprehension":"Expansion du dictionnaire non autorisée dans la compréhension","dictInAnnotation":"Expression de dictionnaire non autorisée dans l’annotation de type","dictKeyValuePairs":"Les entrées de dictionnaire doivent contenir des paires clé/valeur","dictUnpackIsNotMapping":"Mappage attendu pour l’opérateur de décompression de dictionnaire","dunderAllSymbolNotPresent":"« {name} » est spécifié dans __all__ mais n’est pas présent dans le module","duplicateArgsParam":"Un seul paramètre « * » est autorisé","duplicateBaseClass":"Classe de base en double non autorisée","duplicateCapturePatternTarget":"La cible Capture \\"{name}\\" ne peut pas apparaître plus d\'une fois dans le même modèle","duplicateCatchAll":"Une seule clause catch-all sauf autorisée","duplicateEnumMember":"Le membre enum « {name} » est déjà déclaré","duplicateGenericAndProtocolBase":"Une seule classe de base Generic[...] ou Protocol[...] autorisée","duplicateImport":"« {importName} » est importé plusieurs fois","duplicateKeywordOnly":"Un seul séparateur « * » autorisé","duplicateKwargsParam":"Un seul paramètre « ** » est autorisé","duplicateParam":"Dupliquer le paramètre « {name} »","duplicatePositionOnly":"Un seul paramètre \\"/\\" autorisé","duplicateStarPattern":"Un seul motif \\"*\\" autorisé dans une séquence de motifs","duplicateStarStarPattern":"Une seule entrée \\"**\\" autorisée","duplicateUnpack":"Une seule opération de décompression autorisée dans la liste","ellipsisAfterUnpacked":"\\"...\\" ne peut pas être utilisé avec un TypeVarTuple ou un tuple décompressé","ellipsisContext":"« ... » n’est pas autorisé dans ce contexte","ellipsisSecondArg":"« ... » n’est autorisé qu’en tant que second des deux arguments","enumClassOverride":"La classe Enum « {name} » est finale et ne peut pas être sous-classée","exceptionGroupIncompatible":"La syntaxe du groupe d’exceptions (« except* ») nécessite Python 3.11 ou version ultérieure","exceptionTypeIncorrect":"\\"{type}\\" ne dérive pas de BaseException","exceptionTypeNotClass":"« {type} » n’est pas une classe d’exception valide","exceptionTypeNotInstantiable":"Le constructeur pour le type d’exception « {type} » requiert un ou plusieurs arguments","expectedAfterDecorator":"Fonction attendue ou déclaration de classe après le décorateur","expectedArrow":"« -> » attendu suivi d’une annotation de type de retour","expectedAsAfterException":"\\"comme\\" attendu après le type d\'exception","expectedAssignRightHandExpr":"Expression attendue à droite de « = »","expectedBinaryRightHandExpr":"Expression attendue à droite de l’opérateur","expectedBoolLiteral":"Attendu vrai ou faux","expectedCase":"Instruction « case » attendue","expectedClassName":"Nom de classe attendu","expectedCloseBrace":"« { » n’a pas été fermé","expectedCloseBracket":"« [ » n’a pas été fermé","expectedCloseParen":"« ( » n’a pas été fermé","expectedColon":"« : » attendu","expectedComplexNumberLiteral":"Littéral de nombre complexe attendu pour la correspondance de modèle","expectedDecoratorExpr":"Formulaire d’expression non pris en charge pour l’élément décoratif antérieur à Python 3.9","expectedDecoratorName":"Nom de l’élément décoratif attendu","expectedDecoratorNewline":"Nouvelle ligne attendue à la fin de l’élément décoratif","expectedDelExpr":"Expression attendue après « del »","expectedElse":"« else » attendu","expectedEquals":"« = » attendu","expectedExceptionClass":"Classe ou objet d\'exception non valide","expectedExceptionObj":"Objet d’exception attendu, classe d’exception ou Aucun","expectedExpr":"Expression attendue","expectedFunctionAfterAsync":"Définition de fonction attendue après \\"async\\"","expectedFunctionName":"Nom de fonction attendu après « def »","expectedIdentifier":"Identifiant attendu","expectedImport":"« importation » attendue","expectedImportAlias":"Symbole attendu après « as »","expectedImportSymbols":"Un ou plusieurs noms de symboles attendus après l’importation","expectedIn":"« in » attendu","expectedInExpr":"Expression attendue après « in »","expectedIndentedBlock":"Bloc en retrait attendu","expectedMemberName":"Nom de membre attendu après « . »","expectedModuleName":"Nom de module attendu","expectedNameAfterAs":"Nom de symbole attendu après \\"as\\"","expectedNamedParameter":"Le paramètre de mot clé doit suivre « * »","expectedNewline":"Nouvelle ligne attendue","expectedNewlineOrSemicolon":"Les instructions doivent être séparées par des nouvelles lignes ou des points-virgules","expectedOpenParen":"Attendu \\"(\\"","expectedParamName":"Nom du paramètre attendu","expectedPatternExpr":"Expression de modèle attendue","expectedPatternSubjectExpr":"Expression du sujet du modèle attendu","expectedPatternValue":"Expression de valeur de modèle attendue sous la forme « a.b »","expectedReturnExpr":"Expression attendue après « return »","expectedSliceIndex":"Expression d\'index ou de tranche attendue","expectedTypeNotString":"Type attendu mais réception d’un littéral de chaîne","expectedTypeParameterName":"Nom de paramètre de type attendu","expectedYieldExpr":"Expression attendue dans l\'instruction yield","finalClassIsAbstract":"La classe « {type} » est marquée comme finale et doit implémenter toutes les symboles abstraits","finalContext":"« Final » n’est pas autorisé dans ce contexte","finalMethodOverride":"La méthode « {name} » ne peut pas remplacer la méthode finale définie dans la classe « {className} »","finalNonMethod":"La fonction « {name} » ne peut pas être marquée @final, car il ne s’agit pas d’une méthode","finalReassigned":"\\"{name}\\" est déclaré final et ne peut pas être réaffecté","finalRedeclaration":"« {name} » a été déclaré comme final","finalRedeclarationBySubclass":"« {name} » ne peut pas être redéclaré, car la classe parente « {className} » la déclare final","finalTooManyArgs":"Argument de type unique attendu après « Final »","finalUnassigned":"« {name} » est déclaré Final, mais la valeur n’est pas affectée","formatStringBrace":"Accolade fermante unique non autorisée dans le littéral f-string ; utiliser une double accolade fermée","formatStringBytes":"Les littéraux de chaîne de format (chaînes f) ne peuvent pas être binaires","formatStringDebuggingIllegal":"Le spécificateur de débogage de chaîne F \\"=\\" nécessite Python 3.8 ou une version plus récente","formatStringEscape":"Séquence d\'échappement (barre oblique inverse) non autorisée dans la partie expression de la chaîne f avant Python 3.12","formatStringExpectedConversion":"Spécificateur de conversion attendu après « ! » dans f-string","formatStringIllegal":"Les littéraux de chaîne de format (chaînes f) nécessitent Python 3.6 ou une version plus récente","formatStringInPattern":"Chaîne de format non autorisée dans le modèle","formatStringNestedFormatSpecifier":"Expressions imbriqués trop profondément dans le spécificateur de chaîne de format","formatStringNestedQuote":"Les chaînes imbriquées dans une chaîne f ne peuvent pas utiliser le même guillemet que la chaîne f avant Python 3.12","formatStringUnicode":"Les littéraux de chaîne de format (f-strings) ne peuvent pas être unicode","formatStringUnterminated":"Expression non terminée dans f-string ; attendant \\"}\\"","functionDecoratorTypeUnknown":"Le décorateur de fonction non typé masque le type de fonction ; élément décoratif ignoré","functionInConditionalExpression":"L’expression conditionnelle fait référence à une fonction qui prend toujours la valeur True","functionTypeParametersIllegal":"La syntaxe des paramètres de type de fonction nécessite Python 3.12 ou une version plus récente","futureImportLocationNotAllowed":"Les importations à partir de __future__ doivent se trouver au début du fichier","generatorAsyncReturnType":"Le type de retour de la fonction de générateur asynchrone doit être compatible avec « AsyncGenerator[{yieldType}, Any] »","generatorNotParenthesized":"Les expressions de générateur doivent être entre parenthèses si elles ne sont pas uniquement des arguments","generatorSyncReturnType":"Le type de retour de la fonction de générateur doit être compatible avec « Generator[{yieldType}, Any, Any] »","genericBaseClassNotAllowed":"La classe de base \\"générique\\" ne peut pas être utilisée avec la syntaxe de paramètre de type","genericClassAssigned":"Impossible d’attribuer le type de classe générique","genericClassDeleted":"Le type de classe générique ne peut pas être supprimé","genericInstanceVariableAccess":"L’accès à une variable d’instance générique via une classe est ambigu","genericNotAllowed":"« Générique » n’est pas valide dans ce contexte","genericTypeAliasBoundTypeVar":"L’alias de type générique dans la classe ne peut pas utiliser les variables de type lié {names}","genericTypeArgMissing":"« Générique » nécessite au moins un argument de type","genericTypeArgTypeVar":"L’argument de type pour « Generic » doit être une variable de type","genericTypeArgUnique":"Les arguments de type pour « Generic » doivent être uniques","globalReassignment":"« {name} » est attribué avant la déclaration globale","globalRedefinition":"« {name} » a déjà été déclaré global","implicitStringConcat":"Concaténation implicite de chaînes non autorisée","importCycleDetected":"Cycle détecté dans la chaîne d\'importation","importDepthExceeded":"La profondeur de la chaîne d\'importation a dépassé {depth}","importResolveFailure":"Impossible de résoudre l’importation « {importName} »","importSourceResolveFailure":"Impossible de résoudre l’importation « {importName} » à partir de la source","importSymbolUnknown":"« {name} » est un symbole d’importation inconnu","incompatibleMethodOverride":"La méthode « {name} » remplace la classe « {className} » de manière incompatible","inconsistentIndent":"Le montant du retrait ne correspond pas au retrait précédent","inconsistentTabs":"Utilisation incohérente des onglets et des espaces dans la mise en retrait","initMustReturnNone":"Le type de retour de « __init__ » doit être None","initSubclassCallFailed":"Arguments de mot clé incorrects pour la méthode __init_subclass__","initSubclassClsParam":"__init_subclass__ remplacement doit prendre un paramètre « cls »","initVarNotAllowed":"« InitVar » n’est pas autorisé dans ce contexte","instanceMethodSelfParam":"Les méthodes d’instance doivent prendre un paramètre « self »","instanceVarOverridesClassVar":"La variable d\'instance \\"{name}\\" remplace la variable de classe du même nom dans la classe \\"{className}\\"","instantiateAbstract":"Impossible d\'instancier la classe abstraite \\"{type}\\"","instantiateProtocol":"Impossible d\'instancier la classe de protocole \\"{type}\\"","internalBindError":"Une erreur interne s’est produite lors de la liaison du fichier « {file} » : {message}","internalParseError":"Une erreur interne s’est produite lors de l’analyse du fichier « {file} » : {message}","internalTypeCheckingError":"Une erreur interne s’est produite lors de la vérification de type du fichier « {file} » : {message}","invalidIdentifierChar":"Caractère invalide dans l\'identifiant","invalidStubStatement":"L’instruction n’a aucun sens dans un fichier stub de type","invalidTokenChars":"Caractère non valide \\"{text}\\" dans le jeton","isInstanceInvalidType":"Le deuxième argument de \\"isinstance\\" doit être une classe ou un tuple de classes","isSubclassInvalidType":"Le deuxième argument de « issubclass » doit être une classe ou un tuple de classes","keyValueInSet":"Les paires clé/valeur ne sont pas autorisées dans un ensemble","keywordArgInTypeArgument":"Les arguments de mot-clé ne peuvent pas être utilisés dans les listes d\'arguments de type","keywordOnlyAfterArgs":"Séparateur d’arguments mot clé uniquement non autorisé après le paramètre « * »","keywordParameterMissing":"Un ou plusieurs paramètres de mot-clé doivent suivre le paramètre \\"*\\"","keywordSubscriptIllegal":"Les arguments de mot-clé dans les indices ne sont pas pris en charge","lambdaReturnTypePartiallyUnknown":"Le type de retour de lambda, « {returnType} », est partiellement inconnu","lambdaReturnTypeUnknown":"Le type de retour de lambda est inconnu","listAssignmentMismatch":"Impossible d’affecter l’expression de type « {type} » à la liste cible","listInAnnotation":"Expression de liste non autorisée dans l’annotation de type","literalEmptyArgs":"Attendu un ou plusieurs arguments de type après \\"Literal\\"","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"\\"Littéral\\" ne peut pas être utilisé dans ce contexte sans argument de type","literalNotCallable":"Impossible d’instancier le type littéral","literalUnsupportedType":"Les arguments de type pour « Literal » doivent être None, une valeur littérale (int, bool, str ou bytes) ou une valeur enum","matchIncompatible":"Les instructions de correspondance nécessitent Python 3.10 ou version ultérieure","matchIsNotExhaustive":"Les cas dans l’instruction match ne gèrent pas toutes les valeurs de manière exhaustive","maxParseDepthExceeded":"Profondeur d’analyse maximale dépassée ; scinder l’expression en sous-expressions plus petites","memberAccess":"Impossible d’accéder au membre « {name} » pour le type « {type} »","memberDelete":"Impossible de supprimer le membre « {name} » pour le type « {type} »","memberSet":"Impossible d\'affecter le membre \\"{name}\\" pour le type \\"{type}\\"","metaclassConflict":"La métaclasse d’une classe dérivée doit être une sous-classe des métaclasses de toutes ses classes de base","metaclassDuplicate":"Une seule métaclasse peut être fournie","metaclassIsGeneric":"La métaclasse ne peut pas être générique","methodNotDefined":"Méthode « {name} » non définie","methodNotDefinedOnType":"Méthode « {name} » non définie sur le type « {type} »","methodOrdering":"Impossible de créer un classement de méthode cohérent","methodOverridden":"\\"{name}\\" remplace la méthode du même nom dans la classe \\"{className}\\" avec un type incompatible \\"{type}\\"","methodReturnsNonObject":"La méthode « {name} » ne retourne pas d’objet","missingSuperCall":"La méthode « {methodName} » n’appelle pas la méthode du même nom dans la classe parente","moduleAsType":"Le module ne peut pas être utilisé comme type","moduleNotCallable":"Le module ne peut pas être appelé","moduleUnknownMember":"\\"{memberName}\\" n\'est pas un membre connu du module \\"{moduleName}\\"","namedExceptAfterCatchAll":"Une clause except nommée ne peut pas apparaître après une clause except fourre-tout","namedParamAfterParamSpecArgs":"Le paramètre de mot clé « {name} » ne peut pas apparaître dans la signature après le paramètre ParamSpec args","namedTupleEmptyName":"Les noms dans un tuple nommé ne peuvent pas être vides","namedTupleEntryRedeclared":"Impossible de remplacer « {name} », car la classe parente « {className} » est un tuple nommé","namedTupleFirstArg":"Nom de classe de tuple nommé attendu en tant que premier argument","namedTupleMultipleInheritance":"L’héritage multiple avec NamedTuple n’est pas pris en charge","namedTupleNameKeyword":"Les noms de champs ne peuvent pas être un mot-clé","namedTupleNameType":"Tuple à deux entrées attendu spécifiant le nom et le type de l’entrée","namedTupleNameUnique":"Les noms dans un tuple nommé doivent être uniques","namedTupleNoTypes":"« namedtuple » ne fournit aucun type pour les entrées de tuple ; utilisez « NamedTuple » à la place","namedTupleSecondArg":"Liste d’entrées de tuple nommée attendue en tant que deuxième argument","newClsParam":"__new__ remplacement doit prendre un paramètre « cls »","newTypeAnyOrUnknown":"Le deuxième argument de NewType doit être une classe connue, et non Any ou Unknown","newTypeBadName":"Le premier argument de NewType doit être un littéral de chaîne","newTypeLiteral":"Impossible d’utiliser NewType avec le type Literal","newTypeNameMismatch":"NewType doit être affecté à une variable portant le même nom","newTypeNotAClass":"Classe attendue comme deuxième argument de NewType","newTypeParamCount":"NewType requiert deux arguments positionnels","newTypeProtocolClass":"Désolé, nous n’avons pas pu utiliser NewType avec un type structurelle (un protocole ou une classe TypedDict)","noOverload":"Aucune surcharge pour « {name} » ne correspond aux arguments fournis","noReturnContainsReturn":"La fonction avec le type de retour déclaré « NoReturn » ne peut pas inclure d’instruction de retour","noReturnContainsYield":"La fonction avec le type de retour déclaré « NoReturn » ne peut pas inclure d’instruction yield","noReturnReturnsNone":"La fonction avec le type de retour déclaré \\"NoReturn\\" ne peut pas renvoyer \\"None\\"","nonDefaultAfterDefault":"L’argument autre que l’argument par défaut suit l’argument par défaut","nonLocalInModule":"Déclaration non locale non autorisée au niveau du module","nonLocalNoBinding":"Aucune liaison pour le « {name} » non local trouvé","nonLocalReassignment":"« {name} » est attribué avant la déclaration non locale","nonLocalRedefinition":"« {name} » a déjà été déclaré non local","noneNotCallable":"L\'objet de type \\"Aucun\\" ne peut pas être appelé","noneNotIterable":"L’objet de type « None » ne peut pas être utilisé en tant que valeur itérable","noneNotSubscriptable":"L\'objet de type \\"Aucun\\" n\'est pas inscriptible","noneNotUsableWith":"L’objet de type « None » ne peut pas être utilisé avec « with »","noneOperator":"L’opérateur « {operator} » n’est pas pris en charge pour « None »","noneUnknownMember":"« {name} » n’est pas un membre connu de « None »","notRequiredArgCount":"Argument de type unique attendu après « NotRequired »","notRequiredNotInTypedDict":"« NotRequired » n’est pas autorisé dans ce contexte","objectNotCallable":"L’objet de type « {type} » n’est pas appelant","obscuredClassDeclaration":"La déclaration de classe « {name} » est masquée par une déclaration du même nom","obscuredFunctionDeclaration":"La déclaration de fonction « {name} » est masquée par une déclaration du même nom","obscuredMethodDeclaration":"La déclaration de méthode « {name} » est masquée par une déclaration du même nom","obscuredParameterDeclaration":"La déclaration de paramètre « {name} » est masquée par une déclaration du même nom","obscuredTypeAliasDeclaration":"La déclaration d’alias de type « {name} » est masquée par une déclaration du même nom","obscuredVariableDeclaration":"La déclaration « {name} » est masquée par une déclaration du même nom","operatorLessOrGreaterDeprecated":"L’opérateur « <> » n’est pas pris en charge dans Python 3 ; utilisez « != » à la place","optionalExtraArgs":"Attendu un argument de type après \\"Facultatif\\"","orPatternIrrefutable":"Modèle irréfutable autorisé uniquement en tant que dernier sous-modèle dans un modèle \\"ou\\"","orPatternMissingName":"Tous les sous-modèles d’un modèle « or » doivent cibler les mêmes noms","overlappingKeywordArgs":"Le dictionnaire tapé chevauche avec le mot clé paramètre : {names}","overlappingOverload":"La surcharge {obscured} pour « {name} » ne sera jamais utilisée, car ses paramètres chevauchent la surcharge {obscuredBy}","overloadAbstractMismatch":"Les méthodes surchargées doivent toutes être abstraites ou non","overloadClassMethodInconsistent":"Les surcharges pour « {name} » utilisent @classmethod de manière incohérente","overloadFinalInconsistencyImpl":"La surcharge pour « {name} » est marquée @final, mais l’implémentation ne l’est pas","overloadFinalInconsistencyNoImpl":"La surcharge {index} pour « {name} » est marquée @final mais la surcharge 1 n’est pas","overloadImplementationMismatch":"L’implémentation surchargée n’est pas cohérente avec la signature de la surcharge {index}","overloadReturnTypeMismatch":"La surcharge {prevIndex} pour « {name} » chevauche la surcharge {newIndex} et retourne un type incompatible","overloadStaticMethodInconsistent":"Les surcharges pour « {name} » utilisent @staticmethod de manière incohérente","overloadWithoutImplementation":"\\"{name}\\" est marqué comme surcharge, mais aucune implémentation n\'est fournie","overriddenMethodNotFound":"La méthode \\"{name}\\" est marquée comme prioritaire, mais aucune méthode de base du même nom n\'est présente","overrideDecoratorMissing":"La méthode \\"{name}\\" n\'est pas marquée comme override mais remplace une méthode dans la classe \\"{className}\\"","paramAfterKwargsParam":"Le paramètre ne peut pas suivre le paramètre \\"**\\"","paramAlreadyAssigned":"Le paramètre « {name} » est déjà affecté","paramAnnotationMissing":"L\'annotation de type est manquante pour le paramètre \\"{name}\\"","paramAssignmentMismatch":"L\'expression de type \\"{sourceType}\\" ne peut pas être affectée au paramètre de type \\"{paramType}\\"","paramNameMissing":"Aucun paramètre nommé « {name} »","paramSpecArgsKwargsUsage":"Les membres « args » et « kwargs » de ParamSpec doivent apparaître tous les deux dans une signature de fonction","paramSpecArgsMissing":"Les arguments pour ParamSpec « {type} » sont manquants","paramSpecArgsUsage":"Le membre \\"args\\" de ParamSpec n\'est valide que lorsqu\'il est utilisé avec le paramètre *args","paramSpecAssignedName":"ParamSpec doit être affecté à une variable nommée « {name} »","paramSpecContext":"ParamSpec n’est pas autorisé dans ce contexte","paramSpecDefaultNotTuple":"Points de suspension attendus, expression de tuple ou ParamSpec pour la valeur par défaut de ParamSpec","paramSpecFirstArg":"Nom attendu de ParamSpec comme premier argument","paramSpecKwargsUsage":"Le membre « configurrgs » de ParamSpec n’est valide qu’en cas d’utilisation avec le paramètre **rgs","paramSpecNotUsedByOuterScope":"ParamSpec « {name} » n’a aucune signification dans ce contexte","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" est limité à un appelable dans le type de retour et ne peut pas être référencé dans le corps de la fonction","paramSpecUnknownArg":"ParamSpec ne prend pas en charge plus d\'un argument","paramSpecUnknownMember":"« {name} » n’est pas un membre connu de ParamSpec","paramSpecUnknownParam":"\\"{name}\\" est un paramètre inconnu pour ParamSpec","paramTypeCovariant":"Impossible d’utiliser la variable de type Covariant dans le type de paramètre","paramTypePartiallyUnknown":"Le type du paramètre « {paramName} » est partiellement inconnu","paramTypeUnknown":"Le type de paramètre « {paramName} » est inconnu","parenthesizedContextManagerIllegal":"Les parenthèses dans l\'instruction \\"with\\" nécessitent Python 3.9 ou une version plus récente","patternNeverMatches":"Le modèle ne sera jamais mis en correspondance pour le type d’objet « {type} »","positionArgAfterNamedArg":"L’argument positionnel ne peut pas apparaître après les arguments de mot clé","positionOnlyAfterArgs":"Séparateur de paramètres de position seule non autorisé après le paramètre « * »","positionOnlyAfterKeywordOnly":"Le paramètre « / » doit apparaître avant le paramètre « * »","positionOnlyAfterNon":"Paramètre de position seule non autorisé après un paramètre qui n’est pas en position seule","positionOnlyFirstParam":"Séparateur de paramètres de position seule non autorisé en tant que premier paramètre","positionOnlyIncompatible":"Le séparateur de paramètres de position seule requiert Python 3.8 ou version ultérieure","privateImportFromPyTypedModule":"« {name} » n’est pas exporté à partir du module « {module} »","privateUsedOutsideOfClass":"« {name} » est privé et utilisé en dehors de la classe dans laquelle il est déclaré","privateUsedOutsideOfModule":"« {name} » est privé et utilisé en dehors du module dans lequel il est déclaré","propertyOverridden":"\\"{name}\\" remplace à tort la propriété du même nom dans la classe \\"{className}\\"","propertyStaticMethod":"Méthodes statiques non autorisées pour la propriété getter, setter ou deleter","protectedUsedOutsideOfClass":"\\"{name}\\" est protégé et utilisé en dehors de la classe dans laquelle il est déclaré","protocolBaseClass":"La classe de protocole \\"{classType}\\" ne peut pas dériver de la classe non protocolaire \\"{baseType}\\"","protocolBaseClassWithTypeArgs":"Les arguments de type ne sont pas autorisés avec la classe Protocol lors de l\'utilisation de la syntaxe des paramètres de type","protocolIllegal":"L’utilisation de « Protocole » nécessite Python 3.7 ou une version plus récente","protocolNotAllowed":"\\"Protocole\\" ne peut pas être utilisé dans ce contexte","protocolUnsafeOverlap":"La classe chevauche « {name} » de manière non sécurisée et peut produire une correspondance au moment de l’exécution","protocolVarianceContravariant":"La variable de type \\"{variable}\\" utilisée dans le protocole générique \\"{class}\\" doit être contravariante","protocolVarianceCovariant":"La variable de type \\"{variable}\\" utilisée dans le protocole générique \\"{class}\\" doit être covariante","protocolVarianceInvariant":"La variable de type \\"{variable}\\" utilisée dans le protocole générique \\"{class}\\" doit être invariante","pyrightCommentInvalidDiagnosticBoolValue":"La directive de commentaire Deight doit être suivie de « = » et d’une valeur true ou false","pyrightCommentInvalidDiagnosticSeverityValue":"La directive de commentaire Deright doit être suivie de « = » et avoir la valeur true, false, error, warning, information ou none","pyrightCommentMissingDirective":"Le commentaire Pyright doit être suivi d’une directive (de base ou stricte) ou d’une règle de diagnostic","pyrightCommentNotOnOwnLine":"Les commentaires Ensight utilisés pour contrôler les paramètres au niveau du fichier doivent apparaître sur leur propre ligne","pyrightCommentUnknownDiagnosticRule":"« {rule} » est une règle de diagnostic inconnue pour le commentaire deight","pyrightCommentUnknownDiagnosticSeverityValue":"« {value} \\" n’est pas valide pour le commentaire deight ; true, false, erreur, avertissement, informations ou aucun attendu","pyrightCommentUnknownDirective":"« {directive} » est une directive inconnue pour le commentaire deight; « strict » ou « de base » attendu","readOnlyArgCount":"Attendu un seul argument de type après \\"ReadOnly\\"","readOnlyNotInTypedDict":"« ReadOnly » n’est pas autorisé dans ce contexte","recursiveDefinition":"Le type de \\"{name}\\" n\'a pas pu être déterminé car il fait référence à lui-même","relativeImportNotAllowed":"Les importations relatives ne peuvent pas être utilisées avec le formulaire « import .a » ; utiliser « à partir de . importer a » à la place","requiredArgCount":"Attendu un argument de type unique après \\"Required\\"","requiredNotInTypedDict":"« Obligatoire » n’est pas autorisé dans ce contexte","returnInAsyncGenerator":"L\'instruction de retour avec valeur n\'est pas autorisée dans le générateur asynchrone","returnMissing":"La fonction avec le type de retour déclaré \\"{returnType}\\" doit renvoyer une valeur sur tous les chemins de code","returnOutsideFunction":"\\"return\\" ne peut être utilisé que dans une fonction","returnTypeContravariant":"La variable de type contravariant ne peut pas être utilisée dans le type de retour","returnTypeMismatch":"Impossible d’affecter l’expression de type « {exprType} » pour retourner le type « {returnType} »","returnTypePartiallyUnknown":"Le type de retour « {returnType} » est partiellement inconnu","returnTypeUnknown":"Le type de retour est inconnu","revealLocalsArgs":"Aucun argument attendu pour l\'appel \\"reveal_locals\\"","revealLocalsNone":"Aucun élément local dans cette étendue","revealTypeArgs":"Argument positionnel unique attendu pour l’appel « reveal_type »","revealTypeExpectedTextArg":"L\'argument \\"expected_text\\" pour la fonction \\"reveal_type\\" doit être une valeur littérale str","revealTypeExpectedTextMismatch":"Incompatibilité de texte de type ; « {expected} » attendu, mais a reçu « {received} »","revealTypeExpectedTypeMismatch":"Incompatibilité de type; attendu \\"{expected}\\" mais reçu \\"{received}\\"","selfTypeContext":"« Self » n’est pas valide dans ce contexte","selfTypeMetaclass":"« Self » ne peut pas être utilisé dans une métaclasse (une sous-classe de « type »)","selfTypeWithTypedSelfOrCls":"« Self » ne peut pas être utilisé dans une fonction avec un paramètre « self » ou « cls » qui a une annotation de type autre que « Self »","setterGetterTypeMismatch":"Le type valeur setter de propriété n’est pas assignable au type de retour getter","singleOverload":"« {name} » est marqué comme surcharge, mais des surcharges supplémentaires sont manquantes","slotsAttributeError":"\\"{name}\\" n\'est pas spécifié dans __slots__","slotsClassVarConflict":"\\"{name}\\" est en conflit avec la variable d\'instance déclarée dans __slots__","starPatternInAsPattern":"Le modèle d’étoile ne peut pas être utilisé avec la cible « as »","starPatternInOrPattern":"Le modèle d’étoile ne peut pas être supprimé dans d’autres modèles","starStarWildcardNotAllowed":"** ne peut pas être utilisé avec le caractère générique « _ »","staticClsSelfParam":"Les méthodes statiques ne doivent pas prendre de paramètre « self » ou « cls »","stdlibModuleOverridden":"\\"{path}\\" remplace le module stdlib \\"{name}\\"","stringNonAsciiBytes":"Caractère non-ASCII non autorisé dans le littéral de chaîne d\'octets","stringNotSubscriptable":"L’expression de chaîne ne peut pas être en indice dans l’annotation de type ; placer l’annotation entière entre guillemets","stringUnsupportedEscape":"Séquence d\'échappement non prise en charge dans le littéral de chaîne","stringUnterminated":"Le littéral de chaîne n’est pas spécifié","stubFileMissing":"Fichier stub introuvable pour « {importName} »","stubUsesGetAttr":"Le fichier stub de type est incomplet ; « __getattr__ » masque les erreurs de type pour le module","sublistParamsIncompatible":"Les paramètres de sous-liste ne sont pas pris en charge dans Python 3.x","superCallArgCount":"Pas plus de deux arguments attendus pour l\'appel \\"super\\"","superCallFirstArg":"Type de classe attendu en tant que premier argument de l’appel « super », mais « {type} » reçu","superCallSecondArg":"Le deuxième argument de l’appel « super » doit être un objet ou une classe dérivé de « {type} »","superCallZeroArgForm":"La forme sans argument d\'appel \\"super\\" n\'est valide que dans une méthode","superCallZeroArgFormStaticMethod":"La forme à zéro argument de l’appel « super » n’est pas valide dans une méthode statique","symbolIsPossiblyUnbound":"« {name} » est peut-être indépendant","symbolIsUnbound":"« {name} » est indépendant","symbolIsUndefined":"« {name} » n’est pas défini","symbolOverridden":"« {name} » remplace le symbole du même nom dans la classe « {className} »","ternaryNotAllowed":"Expression ternaire non autorisée dans l’annotation de type","totalOrderingMissingMethod":"La classe doit définir « __lt__ », « __le__ », « __gt__ » ou « __ge__ » pour utiliser total_ordering","trailingCommaInFromImport":"Virgule de fin non autorisée sans parenthèses adjacentes","tryWithoutExcept":"L\'instruction try doit avoir au moins une clause except ou finally","tupleAssignmentMismatch":"L\'expression avec le type \\"{type}\\" ne peut pas être assignée au tuple cible","tupleInAnnotation":"Expression de tuple non autorisée dans l\'annotation de type","tupleIndexOutOfRange":"L’index {index} est hors limites pour le type {type}","typeAliasIllegalExpressionForm":"Formulaire d’expression non valide pour la définition d’alias de type","typeAliasIsRecursiveDirect":"L\'alias de type \\"{name}\\" ne peut pas s\'utiliser lui-même dans sa définition","typeAliasNotInModuleOrClass":"Un TypeAlias ne peut être défini qu’au sein d’un module ou d’une étendue de classe","typeAliasRedeclared":"« {name} » est déclaré en tant que TypeAlias et ne peut être attribué qu’une seule fois","typeAliasStatementBadScope":"Une instruction de type ne peut être utilisée que dans une étendue de module ou de classe","typeAliasStatementIllegal":"L’instruction d’alias de type nécessite Python 3.12 ou version ultérieure","typeAliasTypeBaseClass":"Un alias de type défini dans une instruction « type » ne peut pas être utilisé en tant que classe de base","typeAliasTypeMustBeAssigned":"TypeAliasType doit être affecté à une variable portant le même nom que l\'alias de type","typeAliasTypeNameArg":"Le premier argument de TypeAliasType doit être un littéral de chaîne représentant le nom de l\'alias de type","typeAliasTypeNameMismatch":"Le nom de l’alias de type doit correspondre au nom de la variable à laquelle il est affecté","typeAliasTypeParamInvalid":"La liste de paramètres de type doit être un tuple contenant uniquement TypeVar, TypeVarTuple ou ParamSpec","typeAnnotationCall":"Expression d\'appel non autorisée dans l\'expression de type","typeAnnotationVariable":"Variable non autorisée dans l\'expression de type","typeAnnotationWithCallable":"L\'argument de type pour \\"type\\" doit être une classe ; les callables ne sont pas pris en charge","typeArgListExpected":"ParamSpec, ellipse ou liste de types attendue","typeArgListNotAllowed":"Expression de liste non autorisée pour cet argument de type","typeArgsExpectingNone":"Aucun argument de type attendu pour la classe « {name} »","typeArgsMismatchOne":"Argument de type attendu mais {received} reçu","typeArgsMissingForAlias":"Arguments de type attendus pour l’alias de type générique « {name} »","typeArgsMissingForClass":"Arguments de type attendus pour la classe générique \\"{name}\\"","typeArgsTooFew":"Trop peu d’arguments de type fournis pour « {name} » ; {expected} attendu, mais {received} reçu","typeArgsTooMany":"Trop d\'arguments de type fournis pour \\"{name}\\" ; attendu {expected} mais reçu {received}","typeAssignmentMismatch":"Impossible d’affecter l’expression de type « {sourceType} » au type déclaré « {destType} »","typeAssignmentMismatchWildcard":"Le symbole d’importation « {name} » a le type « {sourceType} », qui ne peut pas être affecté au type déclaré « {destType} »","typeCallNotAllowed":"l’appel type() ne doit pas être utilisé dans l’annotation de type","typeCheckOnly":"\\"{name}\\" est marqué comme @type_check_only et ne peut être utilisé que dans les annotations de type","typeCommentDeprecated":"L’utilisation de commentaires de type est déconseillée ; utiliser l’annotation de type à la place","typeExpectedClass":"Expression de type attendue mais « {type} » reçue","typeGuardArgCount":"Argument de type unique attendu après « TypeGuard » ou « Typels »","typeGuardParamCount":"Les méthodes et fonctions de protection de type définies par l’utilisateur doivent avoir au moins un paramètre d’entrée","typeIsReturnType":"Le type de retour des TypesIs (« {returnType} ») n’est pas cohérent avec le type de paramètre de valeur (« {type} »)","typeNotAwaitable":"\\"{type}\\" n\'est pas attendu","typeNotIntantiable":"« {type} » ne peut pas être instancié","typeNotIterable":"« {type} » n’est pas itérable","typeNotSpecializable":"Impossible de spécialiser le type \\"{type}\\"","typeNotSubscriptable":"L’objet de type « {type} » n’est pas sous-scriptible","typeNotSupportBinaryOperator":"Opérateur \\"{operator}\\" non pris en charge pour les types \\"{leftType}\\" et \\"{rightType}\\"","typeNotSupportBinaryOperatorBidirectional":"L\'opérateur \\"{operator}\\" n\'est pas pris en charge pour les types \\"{leftType}\\" et \\"{rightType}\\" lorsque le type attendu est \\"{expectedType}\\"","typeNotSupportUnaryOperator":"L\'opérateur \\"{operator}\\" n\'est pas pris en charge pour le type \\"{type}\\"","typeNotSupportUnaryOperatorBidirectional":"L’opérateur « {operator} » n’est pas pris en charge pour le type « {type} » quand le type attendu est « {expectedType} »","typeNotUsableWith":"L’objet de type \\"{type}\\" ne peut pas être utilisé avec « with », car il n’implémente pas {method}","typeParameterBoundNotAllowed":"La limite ou la contrainte ne peut pas être utilisée avec un paramètre de type variadique ou ParamSpec","typeParameterConstraintTuple":"La contrainte de paramètre de type doit être un tuple de plusieurs types","typeParameterExistingTypeParameter":"Le paramètre de type « {name} » est déjà utilisé","typeParameterNotDeclared":"Le paramètre de type « {name} » n’est pas inclus dans la liste des paramètres de type pour « {container} »","typeParametersMissing":"Au moins un paramètre de type doit être spécifié","typePartiallyUnknown":"Le type de « {name} » est partiellement inconnu","typeUnknown":"Le type de « {name} » est inconnu","typeVarAssignedName":"TypeVar doit être affecté à une variable nommée « {name} »","typeVarAssignmentMismatch":"Le type \\"{type}\\" ne peut pas être affecté à la variable de type \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar ne peut pas être à la fois lié et contraint","typeVarBoundGeneric":"Le type lié TypeVar ne peut pas être générique","typeVarConstraintGeneric":"Le type de contrainte TypeVar ne peut pas être générique","typeVarDefaultBoundMismatch":"Le type par défaut TypeVar doit être un sous-type du type lié","typeVarDefaultConstraintMismatch":"Le type par défaut TypeVar doit être l\'un des types contraints","typeVarDefaultIllegal":"Les types de variables de type par défaut nécessitent Python 3.13 ou une version plus récente","typeVarDefaultInvalidTypeVar":"Le paramètre de type « {name} » a un type par défaut qui fait référence à une ou plusieurs variables de type hors de portée","typeVarFirstArg":"Nom attendu de TypeVar comme premier argument","typeVarNoMember":"TypeVar « {type} » n’a pas de membre « {name} »","typeVarNotSubscriptable":"TypeVar « {type} » n’est pas subscriptible","typeVarNotUsedByOuterScope":"La variable de type « {name} » n’a aucune signification dans ce contexte","typeVarPossiblyUnsolvable":"La variable de type \\"{name}\\" peut rester non résolue si l\'appelant ne fournit aucun argument pour le paramètre \\"{param}\\"","typeVarScopedToReturnType":"La variable de type \\"{name}\\" est limitée à un appelable dans le type de retour et ne peut pas être référencée dans le corps de la fonction","typeVarSingleConstraint":"TypeVar doit avoir au moins deux types contraints","typeVarTupleConstraints":"TypeVarTuple ne peut pas avoir de contraintes de valeur","typeVarTupleContext":"TypeVarTuple n’est pas autorisé dans ce contexte","typeVarTupleDefaultNotUnpacked":"Le type par défaut TypeVarTuple doit être un tuple décompressé ou TypeVarTuple","typeVarTupleMustBeUnpacked":"L\'opérateur Unpack est requis pour la valeur TypeVarTuple","typeVarTupleUnknownParam":"« {name} » est un paramètre inconnu de TypeVarTuple","typeVarUnknownParam":"\\"{name}\\" est un paramètre inconnu pour TypeVar","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" est déjà utilisé par une portée externe","typeVarUsedOnlyOnce":"TypeVar « {name} » n’apparaît qu’une seule fois dans la signature de fonction générique","typeVarVariance":"TypeVar ne peut pas être à la fois covariant et contravariant","typeVarWithDefaultFollowsVariadic":"TypeVar « {typeVarName} » a une valeur par défaut et ne peut pas suivre TypeVarTuple « {variadicName} »","typeVarWithoutDefault":"\\"{name}\\" ne peut pas apparaître après \\"{other}\\" dans la liste des paramètres de type car il n\'a pas de type par défaut","typeVarsNotInGenericOrProtocol":"Generic[] ou Protocol[] doit inclure toutes les variables de type","typedDictAccess":"Impossible d’accéder à l’élément dans TypedDict","typedDictAssignedName":"TypedDict doit être affecté à une variable nommée « {name} »","typedDictBadVar":"Les classes TypedDict ne peuvent contenir que des annotations de type","typedDictBaseClass":"Toutes les classes de base pour les classes TypedDict doivent également être des classes TypedDict","typedDictBoolParam":"Paramètre « {name} » attendu avec la valeur True ou False","typedDictClosedExtras":"La classe de base « {name} » est un TypedDict fermé, les éléments supplémentaires doivent être de type « {type} »","typedDictClosedNoExtras":"La classe de base « {name} » est un TypedDict fermé, les éléments supplémentaires ne sont pas autorisés","typedDictDelete":"Impossible de supprimer l’élément dans TypedDict","typedDictEmptyName":"Les noms dans un TypedDict ne peuvent pas être vides","typedDictEntryName":"Littéral de chaîne attendu pour le nom d’entrée du dictionnaire","typedDictEntryUnique":"Les noms dans un dictionnaire doivent être uniques","typedDictExtraArgs":"Arguments TypedDict supplémentaires non pris en charge","typedDictFieldNotRequiredRedefinition":"L’élément TypedDict « {name} » ne peut pas être redéfini comme étant Non requis","typedDictFieldReadOnlyRedefinition":"L’élément TypedDict « {name} » ne peut pas être redéfini comme état En lecture seule","typedDictFieldRequiredRedefinition":"L’élément TypedDict « {name} » ne peut pas être redéfini comme étant Requis","typedDictFirstArg":"Nom de classe TypedDict attendu comme premier argument","typedDictInitsubclassParameter":"TypedDict ne prend pas en charge __init_subclass__ paramètre « {name} »","typedDictNotAllowed":"\\"TypedDict\\" ne peut pas être utilisé dans ce contexte","typedDictSecondArgDict":"Paramètre de mot clé ou de dict attendu en tant que deuxième paramètre","typedDictSecondArgDictEntry":"Entrée de dictionnaire simple attendue","typedDictSet":"Impossible d\'attribuer l\'élément dans TypedDict","unaccessedClass":"La classe \\"{name}\\" n\'est pas accessible","unaccessedFunction":"La fonction « {name} » n’est pas accessible","unaccessedImport":"L’importation « {name} » n’est pas accessible","unaccessedSymbol":"« {name} » n’est pas accessible","unaccessedVariable":"La variable « {name} » n’est pas accessible","unannotatedFunctionSkipped":"L\'analyse de la fonction \\"{name}\\" est ignorée car elle n\'est pas annotée","unaryOperationNotAllowed":"Opérateur unaire non autorisé dans l’annotation de type","unexpectedAsyncToken":"« def », « with » ou « for » attendu pour suivre « async »","unexpectedExprToken":"Jeton inattendu à la fin de l’expression","unexpectedIndent":"Retrait inattendu","unexpectedUnindent":"Unindent non attendu","unhashableDictKey":"La clé du dictionnaire doit être hachable","unhashableSetEntry":"L’entrée set doit être hachable","uninitializedAbstractVariables":"Les variables définies dans la classe de base abstraite ne sont pas initialisées dans la classe finale « {classType} »","uninitializedInstanceVariable":"La variable d’instance « {name} » n’est pas initialisée dans le corps de la classe ou dans la méthode __init__","unionForwardReferenceNotAllowed":"La syntaxe Union ne peut pas être utilisée avec l’opérande de chaîne ; utiliser des guillemets autour de l’expression entière","unionSyntaxIllegal":"Une autre syntaxe pour les unions nécessite Python 3.10 ou une version plus récente","unionTypeArgCount":"L’union requiert au moins deux arguments de type","unionUnpackedTuple":"Union ne peut pas inclure un tuple décompressé","unionUnpackedTypeVarTuple":"Union ne peut pas inclure un TypeVarTuple décompressé","unnecessaryCast":"Appel \\"cast\\" inutile ; le type est déjà \\"{type}\\"","unnecessaryIsInstanceAlways":"Appel d’isinstance inutile ; « {testType} » est toujours une instance de « {classType} »","unnecessaryIsSubclassAlways":"Appel issubclass inutile ; \\"{testType}\\" est toujours une sous-classe de \\"{classType}\\"","unnecessaryPyrightIgnore":"Commentaire \\"# pyright: ignore\\" inutile","unnecessaryPyrightIgnoreRule":"Règle inutile « #ightight: ignore » : « {name} »","unnecessaryTypeIgnore":"Commentaire \\"# type: ignore\\" inutile","unpackArgCount":"Attendu un seul argument de type après \\"Unpack\\"","unpackExpectedTypeVarTuple":"TypeVarTuple ou tuple attendu en tant qu’argument de type pour décompresser","unpackExpectedTypedDict":"Argument de type TypedDict attendu pour Unpack","unpackIllegalInComprehension":"Opération de décompression non autorisée dans la compréhension","unpackInAnnotation":"Opérateur de décompression non autorisé dans l’annotation de type","unpackInDict":"Opération de décompression non autorisée dans les dictionnaires","unpackInSet":"Opérateur de déballage non autorisé dans un ensemble","unpackNotAllowed":"Le décompression n’est pas autorisé dans ce contexte","unpackOperatorNotAllowed":"L’opération de décompression n’est pas autorisée dans ce contexte","unpackTuplesIllegal":"Opération de décompression non autorisée dans les tuples avant Python 3.8","unpackedArgInTypeArgument":"Les arguments décompressés ne peuvent pas être utilisés dans les listes d’arguments de type","unpackedArgWithVariadicParam":"L\'argument décompressé ne peut pas être utilisé pour le paramètre TypeVarTuple","unpackedDictArgumentNotMapping":"L’expression d’argument après ** doit être un mappage avec un type de clé « str »","unpackedDictSubscriptIllegal":"L’opérateur de décompression de dictionnaire dans l’indice n’est pas autorisé","unpackedSubscriptIllegal":"L’opérateur de décompression en indice requiert Python 3.11 ou version ultérieure","unpackedTypeVarTupleExpected":"TypeVarTuple décompressé attendu ; utiliser Unpack[{name1}] ou *{name2}","unpackedTypedDictArgument":"Impossible de faire correspondre l’argument TypedDict décompressé aux paramètres","unreachableCode":"Le code est inaccessible","unreachableExcept":"La clause Except est inaccessible, car l’exception est déjà gérée","unsupportedDunderAllOperation":"L’opération sur « __all__ » n’est pas prise en charge. Par conséquent, la liste de symboles exportée peut être incorrecte","unusedCallResult":"Le résultat de l\'expression d\'appel est de type \\"{type}\\" et n\'est pas utilisé ; affecter à la variable \\"_\\" si c\'est intentionnel","unusedCoroutine":"Le résultat de l’appel de fonction asynchrone n’est pas utilisé ; utiliser « await » ou affecter le résultat à la variable","unusedExpression":"La valeur de l\'expression n\'est pas utilisée","varAnnotationIllegal":"Les annotations de type pour les variables nécessitent Python 3.6 ou une version ultérieure ; utiliser le commentaire de type pour la compatibilité avec les versions précédentes","variableFinalOverride":"La variable « {name} » est marquée comme finale et remplace la variable non finale du même nom dans la classe « {className} »","variadicTypeArgsTooMany":"La liste d’arguments de type peut avoir au plus un TypeVarTuple ou tuple décompressé","variadicTypeParamTooManyAlias":"L’alias de type peut avoir au plus un paramètre de type TypeVarTuple, mais a reçu plusieurs ({names})","variadicTypeParamTooManyClass":"La classe générique peut avoir au plus un paramètre de type TypeVarTuple, mais en a reçu plusieurs ({names})","walrusIllegal":"L’opérateur « := » nécessite Python 3.8 ou version ultérieure","walrusNotAllowed":"L’opérateur « := » n’est pas autorisé dans ce contexte sans parenthèses adjacentes","wildcardInFunction":"Importation de caractères génériques non autorisée dans une classe ou une fonction","wildcardLibraryImport":"Importation de caractères génériques à partir d\'une bibliothèque non autorisée","wildcardPatternTypePartiallyUnknown":"Le type capturé par le modèle générique est partiellement inconnu","wildcardPatternTypeUnknown":"Le type capturé par le modèle générique est inconnu","yieldFromIllegal":"L’utilisation de « yield from » nécessite Python 3.3 ou version ultérieure","yieldFromOutsideAsync":"« yield from » non autorisé dans une fonction asynchrone","yieldOutsideFunction":"\\"rendement\\" non autorisé en dehors d\'une fonction ou d\'un lambda","yieldWithinListCompr":"« yield » non autorisé dans une compréhension de liste","zeroCaseStatementsFound":"L\'instruction de correspondance doit inclure au moins une instruction case","zeroLengthTupleNotAllowed":"Le tuple de longueur nulle n’est pas autorisé dans ce contexte"},"DiagnosticAddendum":{"annotatedNotAllowed":"Impossible d’utiliser le formulaire spécial « Annoté » avec les vérifications d’instance et de classe","argParam":"L’argument correspond au paramètre « {paramName} »","argParamFunction":"L’argument correspond au paramètre « {paramName} » dans la fonction « {functionName} »","argsParamMissing":"Le paramètre \\"*{paramName}\\" n\'a pas de paramètre correspondant","argsPositionOnly":"Non-concordance des paramètres de position uniquement ; attendu {expected} mais reçu {received}","argumentType":"Le type d’argument est « {type} »","argumentTypes":"Types d\'argument : ({types})","assignToNone":"Le type ne peut pas être affecté au type « None »","asyncHelp":"Vouliez-vous dire \\"asynchrone avec\\" ?","baseClassIncompatible":"La classe de base « {baseClass} » n’est pas compatible avec le type « {type} »","baseClassIncompatibleSubclass":"La classe de base « {baseClass} » dérive de « {subclass} » qui est incompatible avec le type « {type} »","baseClassOverriddenType":"La classe de base « {baseClass} » fournit le type « {type} », qui est remplacé","baseClassOverridesType":"La classe de base \\"{baseClass}\\" remplace le type \\"{type}\\"","bytesTypePromotions":"Définir disableBytesTypePromotions sur false pour activer le comportement de promotion de type pour « bytearray » et « memoryview »","conditionalRequiresBool":"La méthode __bool__ pour le type « {operandType} » retourne le type « {boolReturnType} » plutôt que « bool »","dataClassFieldLocation":"Déclaration de champ","dataClassFrozen":"« {name} » est figé","dataProtocolUnsupported":"« {name} » est un protocole de données","descriptorAccessBindingFailed":"Échec de la liaison du « {name} » de méthode pour la classe de descripteur « {className} »","descriptorAccessCallFailed":"Échec de l’appel du « {name} » de méthode pour la classe de descripteur « {className} »","finalMethod":"Méthode finale","functionParamDefaultMissing":"Le paramètre \\"{name}\\" n\'a pas d\'argument par défaut","functionParamName":"Incompatibilité de nom de paramètre : « {destName} » et « {srcName} »","functionParamPositionOnly":"Non-correspondance des paramètres position uniquement ; le paramètre « {name} » n’est pas en position seule","functionReturnTypeMismatch":"Le type de retour de fonction \\"{sourceType}\\" est incompatible avec le type \\"{destType}\\"","functionTooFewParams":"La fonction accepte trop peu de paramètres positionnels ; {expected} attendu, mais {received} reçu","functionTooManyParams":"La fonction accepte trop de paramètres positionnels ; {expected} attendu, mais {received} reçu","genericClassNotAllowed":"Type générique avec des arguments de type non autorisé pour les vérifications d’instance ou de classe","incompatibleDeleter":"La méthode du deleter de propriété n’est pas compatible","incompatibleGetter":"La méthode de récupération de propriété est incompatible","incompatibleSetter":"La méthode setter de propriété n’est pas compatible","initMethodLocation":"La méthode __init__ est définie dans la classe « {type} »","initMethodSignature":"La signature de __init__ est « {type} »","initSubclassLocation":"La méthode __init_subclass__ est définie dans la classe « {name} »","invariantSuggestionDict":"Envisagez de passer de « dict » à « Mapping », qui est covariant dans le type valeur","invariantSuggestionList":"Envisagez de passer de « list » à « Sequence » qui est covariant","invariantSuggestionSet":"Pensez à passer de \\"set\\" à \\"Container\\" qui est covariant","keyNotRequired":"\\"{name}\\" n\'est pas une clé requise dans \\"{type}\\", donc l\'accès peut entraîner une exception d\'exécution","keyReadOnly":"« {name} » est une clé en lecture seule dans « {type} »","keyRequiredDeleted":"« {name} » est une clé obligatoire et ne peut pas être supprimée","keyUndefined":"« {name} » n’est pas une clé définie dans « {type} »","kwargsParamMissing":"Le paramètre \\"**{paramName}\\" n\'a pas de paramètre correspondant","listAssignmentMismatch":"Le type « {type} » n’est pas compatible avec la liste cible","literalAssignmentMismatch":"« {sourceType} » ne peut pas être affecté au type « {destType} »","matchIsNotExhaustiveHint":"Si la gestion exhaustive n’est pas prévue, ajoutez « case _: pass »","matchIsNotExhaustiveType":"Type non géré : « {type} »","memberAssignment":"L\'expression de type \\"{type}\\" ne peut pas être attribuée au membre \\"{name}\\" de la classe \\"{classType}\\"","memberIsAbstract":"« {type}.{name} » n’est pas implémenté","memberIsAbstractMore":"et {count} autres...","memberIsClassVarInProtocol":"« {name} » est défini en tant que ClassVar dans le protocole","memberIsFinalInProtocol":"« {name} » est marqué final dans le protocole","memberIsInitVar":"Le membre « {name} » est un champ d’initialisation uniquement","memberIsInvariant":"« {name} » est invariant, car il est mutable","memberIsNotClassVarInClass":"« {name} » doit être défini en tant que ClassVar pour être compatible avec le protocole","memberIsNotClassVarInProtocol":"« {name} » n’est pas défini en tant que ClassVar dans le protocole","memberIsNotFinalInProtocol":"\\"{name}\\" n\'est pas marqué Final dans le protocole","memberIsWritableInProtocol":"« {name} » est accessible en écriture dans le protocole","memberSetClassVar":"Le membre \\"{name}\\" ne peut pas être attribué via une instance de classe car il s\'agit d\'une ClassVar","memberTypeMismatch":"« {name} » est un type incompatible","memberUnknown":"Le membre « {name} » est inconnu","metaclassConflict":"La métaclasse « {metaclass1} » est en conflit avec « {metaclass2} »","missingDeleter":"La méthode de suppression de propriétés est manquante","missingGetter":"La méthode getter de propriété est manquante","missingSetter":"La méthode de définition de propriété est manquante","namedParamMissingInDest":"Le paramètre de mot clé « {name} » est manquant dans la destination","namedParamMissingInSource":"Le paramètre de mot-clé \\"{name}\\" est manquant dans la source","namedParamTypeMismatch":"Impossible d’affecter le paramètre de mot clé « {name} » de type « {sourceType} » au type « {destType} »","namedTupleNotAllowed":"NamedTuple ne peut pas être utilisé pour les vérifications d’instance ou de classe","newMethodLocation":"La méthode __new__ est définie dans la classe « {type} »","newMethodSignature":"La signature de __new__ est « {type} »","newTypeClassNotAllowed":"La classe créée avec NewType ne peut pas être utilisée avec des vérifications de instance et de classe","noOverloadAssignable":"Aucune fonction surchargée ne correspond au type « {type} »","noneNotAllowed":"Aucun ne peut être utilisé pour les vérifications de instance ou de classe","orPatternMissingName":"Noms manquants : {name}","overloadIndex":"La surcharge {index} est la correspondance la plus proche","overloadNotAssignable":"Une ou plusieurs surcharges de « {name} » ne sont pas assignables","overloadSignature":"La signature de surcharge est définie ici","overriddenMethod":"Méthode substituée","overriddenSymbol":"Symbole substitué","overrideInvariantMismatch":"Le type de remplacement \\"{overrideType}\\" n\'est pas le même que le type de base \\"{baseType}\\"","overrideIsInvariant":"La variable est mutable donc son type est invariant","overrideNoOverloadMatches":"Aucune signature de surcharge dans le remplacement n’est compatible avec la méthode de base","overrideNotClassMethod":"La méthode de base est déclarée en tant que classmethod, mais la substitution n’est pas","overrideNotInstanceMethod":"La méthode de base est déclarée en tant que méthode d\'instance mais la substitution n\'est pas","overrideNotStaticMethod":"La méthode de base est déclarée comme staticmethod, mais la substitution n’est pas","overrideOverloadNoMatch":"Le remplacement ne gère pas toutes les surcharges de la méthode de base","overrideOverloadOrder":"Les surcharges pour la méthode de remplacement doivent être dans le même ordre que la méthode de base","overrideParamKeywordNoDefault":"Non-concordance du paramètre de mot-clé \\"{name}\\" : le paramètre de base a une valeur d\'argument par défaut, le paramètre de remplacement n\'en a pas","overrideParamKeywordType":"Incompatibilité de type du paramètre de mot clé \\"{name}\\" : le paramètre de base est de type \\"{baseType}\\", le paramètre de remplacement est de type \\"{overrideType}\\"","overrideParamName":"Incompatibilité de nom de paramètre {index} : le paramètre de base est nommé \\"{baseName}\\", le paramètre de remplacement est nommé \\"{overrideName}\\"","overrideParamNameExtra":"Le paramètre « {name} » est manquant dans la base","overrideParamNameMissing":"Le paramètre \\"{name}\\" est manquant dans le remplacement","overrideParamNamePositionOnly":"Incompatibilité du paramètre {index} : le paramètre de base \\"{baseName}\\" est un paramètre de mot-clé, le paramètre de remplacement est uniquement de position","overrideParamNoDefault":"Non-concordance du paramètre {index} : le paramètre de base a une valeur d\'argument par défaut, le paramètre de remplacement n\'en a pas","overrideParamType":"Incompatibilité de type de paramètre {index} : le paramètre de base est de type \\"{baseType}\\", le paramètre de remplacement est de type \\"{overrideType}\\"","overridePositionalParamCount":"Non-concordance du nombre de paramètres positionnels ; la méthode de base a {baseCount}, mais la substitution a {overrideCount}","overrideReturnType":"Incompatibilité de type de retour : la méthode de base retourne le type « {baseType} », la substitution retourne le type « {overrideType} »","overrideType":"La classe de base définit le type comme « {type} »","paramAssignment":"Paramètre {index} : impossible d’affecter le type « {sourceType} » au type « {destType} »","paramSpecMissingInOverride":"Les paramètres ParamSpec sont manquants dans la méthode de remplacement","paramType":"Le type de paramètre est « {paramType} »","privateImportFromPyTypedSource":"Importer à partir de « {module} » à la place","propertyAccessFromProtocolClass":"Une propriété définie dans une classe de protocole n\'est pas accessible en tant que variable de classe","propertyMethodIncompatible":"La méthode de propriété « {name} » n’est pas compatible","propertyMethodMissing":"La méthode de propriété \\"{name}\\" est manquante dans le remplacement","propertyMissingDeleter":"La propriété « {name} » n’a pas de deleter défini","propertyMissingSetter":"La propriété « {name} » n’a pas de méthode setter définie","protocolIncompatible":"\\"{sourceType}\\" est incompatible avec le protocole \\"{destType}\\"","protocolMemberMissing":"« {name} » n’est pas présent","protocolRequiresRuntimeCheckable":"La classe de protocole doit être @runtime_checkable à utiliser avec des vérifications d’instance et de classe","protocolSourceIsNotConcrete":"\\"{sourceType}\\" n\'est pas un type de classe concret et ne peut pas être affecté au type \\"{destType}\\"","protocolUnsafeOverlap":"Les attributs de « {name} » ont les mêmes noms que le protocole","pyrightCommentIgnoreTip":"Utilisez « #ight: ignore[<diagnostic rules>] pour supprimer les diagnostics pour une seule ligne","readOnlyAttribute":"L’attribut « {name} » est en lecture seule","seeClassDeclaration":"Voir la déclaration de classe","seeDeclaration":"Voir la déclaration","seeFunctionDeclaration":"Voir la déclaration de fonction","seeMethodDeclaration":"Voir la déclaration de méthode","seeParameterDeclaration":"Voir la déclaration des paramètres","seeTypeAliasDeclaration":"Voir la déclaration d’alias de type","seeVariableDeclaration":"Voir déclaration de variable","tupleAssignmentMismatch":"Le type \\"{type}\\" est incompatible avec le tuple cible","tupleEntryTypeMismatch":"Le type de l’entrée de tuple {entry} est incorrect","tupleSizeIndeterminateSrc":"Incompatibilité de taille de tuple ; attendu {expected} mais reçu pour une durée indéterminée","tupleSizeIndeterminateSrcDest":"Incompatibilité de taille de tuple : attente de {expected} ou plus, mais réception indéterminée","tupleSizeMismatch":"Incompatibilité de taille de tuple ; attendu {expected} mais reçu {received}","tupleSizeMismatchIndeterminateDest":"Incompatibilité de taille de tuple : attente de {expected} ou plus, mais réception de {received}","typeAliasInstanceCheck":"L’alias de type créé avec l’instruction « type » ne peut pas être utilisé avec des vérifications d’instance et de classe","typeAssignmentMismatch":"Impossible d’affecter le type « {sourceType} » au type « {destType} »","typeBound":"Le type « {sourceType} » n’est pas compatible avec le type lié « {destType} » pour la variable de type « {name} »","typeConstrainedTypeVar":"Le «{type}» de type n’est pas compatible avec les «{name}» de variable de type contrainte","typeIncompatible":"« {sourceType} » n’est pas compatible avec « {destType} »","typeNotClass":"« {type} » n’est pas une classe","typeNotStringLiteral":"\\"{type}\\" n\'est pas un littéral de chaîne","typeOfSymbol":"Le type de \\"{name}\\" est \\"{type}\\"","typeParamSpec":"Le type « {type} » n’est pas compatible avec ParamSpec « {name} »","typeUnsupported":"Le type « {type} » n’est pas pris en charge","typeVarDefaultOutOfScope":"La variable de type « {name} » n’est pas dans l’étendue","typeVarIsContravariant":"Le paramètre de type \\"{name}\\" est contravariant, mais \\"{sourceType}\\" n\'est pas un supertype de \\"{destType}\\"","typeVarIsCovariant":"Le paramètre de type \\"{name}\\" est covariant, mais \\"{sourceType}\\" n\'est pas un sous-type de \\"{destType}\\"","typeVarIsInvariant":"Le paramètre de type \\"{name}\\" est invariant, mais \\"{sourceType}\\" n\'est pas le même que \\"{destType}\\"","typeVarNotAllowed":"TypeVar non autorisé pour les vérifications d’instance ou de classe","typeVarTupleRequiresKnownLength":"TypeVarTuple ne peut pas être lié à un tuple de longueur inconnue","typeVarUnnecessarySuggestion":"Utilisez plutôt {type}","typeVarUnsolvableRemedy":"Fournir une surcharge qui spécifie le type de retour lorsque l’argument n’est pas fourni","typeVarsMissing":"Variables de type manquantes : {names}","typedDictBaseClass":"La classe \\"{type}\\" n\'est pas un TypedDict","typedDictClassNotAllowed":"Classe TypedDict non autorisée pour les vérifications d’instance ou de classe","typedDictClosedExtraNotAllowed":"Impossible d’ajouter l’élément « {name} »","typedDictClosedExtraTypeMismatch":"Impossible d’ajouter l’élément « {name} » avec le type « {type} »","typedDictClosedFieldNotRequired":"Impossible d’ajouter l’élément « {name} », car il doit être Non requis","typedDictExtraFieldNotAllowed":"« {name} » n’est pas présent dans « {type} »","typedDictExtraFieldTypeMismatch":"Le type de « {name} » est incompatible avec le type « __extra_items__ » dans « {type} »","typedDictFieldMissing":"« {name} » est manquant dans « {type} »","typedDictFieldNotReadOnly":"« {name} » n’est pas en lecture seule dans « {type} »","typedDictFieldNotRequired":"« {name} » n’est pas obligatoire dans « {type} »","typedDictFieldRequired":"« {name} » est obligatoire dans « {type} »","typedDictFieldTypeMismatch":"Le type « {type} » n\'est pas attribuable à l’élément « {name} »","typedDictFieldUndefined":"« {name} » est un élément non défini dans le type « {type} »","typedDictFinalMismatch":"« {sourceType} » n’est pas compatible avec « {destType} » en raison d’une incompatibilité de @final","typedDictKeyAccess":"Utilisez [« {name} »] pour référencer l’élément dans TypedDict","typedDictNotAllowed":"TypedDict ne peut pas être utilisé pour les vérifications d’instance ou de classe","unhashableType":"Le type \\"{type}\\" n\'est pas hachable","uninitializedAbstractVariable":"La variable d’instance « {name} » est définie dans la classe de base abstraite « {classType} » mais n’est pas initialisée","unreachableExcept":"« {exceptionType} » est une sous-classe de « {parentType} »","useDictInstead":"Utilisez Dict[T1, T2] pour indiquer un type de dictionnaire","useListInstead":"Utilisez List[T] pour indiquer un type de liste ou Union[T1, T2] pour indiquer un type d\'union","useTupleInstead":"Utiliser tuple[T1, ..., Tn] pour indiquer un type de tuple ou Union[T1, T2] pour indiquer un type d’union","useTypeInstead":"Utiliser le type[T] à la place","varianceMismatchForClass":"La variance de l\'argument de type \\"{typeVarName}\\" est incompatible avec la classe de base \\"{className}\\"","varianceMismatchForTypeAlias":"La variance de l\'argument de type \\"{typeVarName}\\" est incompatible avec \\"{typeAliasParam}\\""}}')},25696:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Crea stub di tipo","createTypeStubFor":"Crea stub di tipo per \\"{moduleName}\\"","executingCommand":"Esecuzione del comando","filesToAnalyzeCount":"{count} file da analizzare","filesToAnalyzeOne":"1 file da analizzare","findingReferences":"Ricerca dei riferimenti in corso","organizeImports":"Organizza importazioni","renameShadowedFile":"Rinomina \\"{oldFile}\\" in \\"{newFile}\\""},"Completion":{"autoImportDetail":"Importazione automatica","indexValueDetail":"Valore dell’indice"},"Diagnostic":{"abstractMethodInvocation":"Impossibile chiamare il metodo \\"{method}\\" perché è astratto e non implementato","annotatedParamCountMismatch":"Numero di annotazioni dei parametro non corrispondente: previsto {expected} ma ricevuto {received}","annotatedTypeArgMissing":"Previsto un argomento di tipo e una o più annotazioni per \\"Annotato\\"","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Le annotazioni di tipo non possono usare valori letterali stringa di formato (stringhe f)","annotationNotSupported":"Annotazione di tipo non supportata per questa istruzione","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Le annotazioni di tipo non possono estendersi su più valori letterali stringa","annotationStringEscape":"Le annotazioni di tipo non possono contenere caratteri di escape","argAssignment":"Non è possibile assegnare l\'argomento di tipo \\"{argType}\\" al parametro di tipo \\"{paramType}\\"","argAssignmentFunction":"Non è possibile assegnare l\'argomento di tipo \\"{argType}\\" al parametro di tipo \\"{paramType}\\" nella funzione \\"{functionName}\\"","argAssignmentParam":"Non è possibile assegnare l\'argomento di tipo \\"{argType}\\" al parametro \\"{paramName}\\" di tipo \\"{paramType}\\"","argAssignmentParamFunction":"Non è possibile assegnare l\'argomento di tipo \\"{argType}\\" al parametro \\"{paramName}\\" di tipo \\"{paramType}\\" nella funzione \\"{functionName}\\"","argMissingForParam":"Manca l\'argomento per il parametro {name}","argMissingForParams":"Argomenti mancanti per i parametri {names}","argMorePositionalExpectedCount":"Sono previsti {expected} altri argomenti posizionali","argMorePositionalExpectedOne":"Previsto 1 altro argomento posizionale","argPositional":"Argomento posizionale previsto","argPositionalExpectedCount":"Sono previsti {expected} argomenti posizionali","argPositionalExpectedOne":"Previsto 1 argomento posizionale","argTypePartiallyUnknown":"Tipo di argomento parzialmente sconosciuto","argTypeUnknown":"Il tipo di argomento è sconosciuto","assertAlwaysTrue":"L\'espressione assert restituisce sempre true","assertTypeArgs":"\\"assert_type\\" prevede due argomenti posizionali","assertTypeTypeMismatch":"\\"assert_type\\" non corrispondente: previsto \\"{expected}\\" ma ricevuto \\"{received}\\"","assignmentExprComprehension":"La destinazione dell\'espressione di assegnazione \\"{name}\\" non può usare lo stesso nome della comprensione per la destinazione","assignmentExprContext":"L\'espressione di assegnazione deve essere all\'interno di modulo, funzione o lambda","assignmentExprInSubscript":"Le espressioni di assegnazione all\'interno di un pedice sono supportate solo in Python 3.10 e versioni successive","assignmentInProtocol":"Le variabili di istanza o di classe all\'interno di una classe Protocollo devono essere dichiarate esplicitamente nel corpo della classe","assignmentTargetExpr":"L\'espressione non può essere una destinazione di assegnazione","asyncNotInAsyncFunction":"L\'uso di \\"async\\" non è consentito al di fuori della funzione asincrona","awaitIllegal":"L\'uso di \\"await\\" richiede Python 3.5 o versione successiva","awaitNotAllowed":"Le annotazioni di tipo non possono usare \\"await\\"","awaitNotInAsync":"\\"await\\" consentito solo all\'interno della funzione asincrona","backticksIllegal":"Le espressioni racchiuse tra backticks non sono supportate in Python 3.x; usare la reimpostazione","baseClassCircular":"La classe non può derivare da se stessa","baseClassFinal":"La classe di base \\"{type}\\" è contrassegnata come finale e non può essere sottoclassata","baseClassIncompatible":"Le classi di base di {type} sono incompatibili tra di loro","baseClassInvalid":"L\'argomento della classe deve essere una classe base","baseClassMethodTypeIncompatible":"Le classi di base per la classe \\"{classType}\\" definiscono il metodo \\"{name}\\" in modo incompatibile","baseClassUnknown":"Il tipo della classe di base è sconosciuto. È in corso il tentativo di determinare il tipo della classe derivata","baseClassVariableTypeIncompatible":"Le classi di base per la classe \\"{classType}\\" definiscono la variabile \\"{name}\\" in modo incompatibile","binaryOperationNotAllowed":"Operatore binario non consentito nell\'annotazione di tipo","bindTypeMismatch":"Non è stato possibile associare il metodo \\"{methodName}\\" perché non è possibile assegnare\\"{type}\\" al parametro \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" può essere usato solo all\'interno di un ciclo","callableExtraArgs":"Sono previsti solo due argomenti di tipo per \\"Callable\\"","callableFirstArg":"Previsto elenco dei tipi di parametro o \\"...\\"","callableNotInstantiable":"Non è possibile creare un\'istanza del tipo \\"{type}\\"","callableSecondArg":"È previsto un tipo restituito come secondo argomento di tipo per \\"Callable\\"","casePatternIsIrrefutable":"Il criterio inconfutabile è consentito solo per l\'ultima istruzione case","classAlreadySpecialized":"Il tipo \\"{type}\\" è già specializzato","classDecoratorTypeUnknown":"L\'elemento Decorator di classe non tipizzato nasconde il tipo di classe. l\'elemento Decorator verrà ignorato","classDefinitionCycle":"La definizione della classe per \\"{name}\\" dipende da se stessa","classGetItemClsParam":"__class_getitem__ override deve accettare un parametro \\"cls\\"","classMethodClsParam":"I metodi di classe devono accettare un parametro \\"cls\\"","classNotRuntimeSubscriptable":"Il pedice per la classe \\"{name}\\" genererà un\'eccezione di runtime; racchiudere l\'annotazione di tipo tra virgolette","classPatternBuiltInArgPositional":"Il modello di classe accetta solo un sotto pattern posizionale","classPatternPositionalArgCount":"Troppi modelli posizionale per la classe \\"{type}\\"; previsto {expected} ma ottenuto {received}","classPatternTypeAlias":"\\"{type}\\" non può essere usato in uno schema di classe, perché è un alias di tipo specializzato","classPropertyDeprecated":"Le proprietà della classe sono deprecate in Python 3.11 e non saranno supportate in Python 3.13","classTypeParametersIllegal":"La sintassi del parametro del tipo di classe richiede Python 3.12 o versione successiva","classVarFirstArgMissing":"È previsto un argomento tipo dopo \\"ClassVar\\"","classVarNotAllowed":"\\"ClassVar\\" non consentito in questo contesto","classVarOverridesInstanceVar":"La variabile di classe \\"{name}\\" esegue l\'override della variabile di istanza con lo stesso nome nella classe \\"{className}\\"","classVarTooManyArgs":"Previsto un solo argomento tipo dopo \\"ClassVar\\"","classVarWithTypeVar":"Il tipo \\"ClassVar\\" non può includere variabili di tipo","clsSelfParamTypeMismatch":"Il tipo di parametro \\"{name}\\" deve essere un supertipo della relativa classe \\"{classType}\\"","codeTooComplexToAnalyze":"Il codice è troppo complesso per l\'analisi. ridurre la complessità eseguendo il refactoring in subroutine o riducendo i percorsi del codice condizionale","collectionAliasInstantiation":"Non è possibile creare un\'istanza del tipo \\"{type}\\". In alternativa, usare \\"{alias}\\"","comparisonAlwaysFalse":"La condizione restituisce sempre False perché i tipi \\"{leftType}\\" e \\"{rightType}\\" non si sovrappongono","comparisonAlwaysTrue":"La condizione restituisce sempre True perché i tipi \\"{leftType}\\" e \\"{rightType}\\" non si sovrappongono","comprehensionInDict":"Non è possibile usare la comprensione con altre voci del dizionario","comprehensionInSet":"Non è possibile usare la comprensione con altre voci del set","concatenateContext":"“Concatena” non è consentito in questo contesto","concatenateParamSpecMissing":"L\'ultimo argomento di tipo per \\"Concatenate\\" deve essere un ParamSpec o \\"...\\"","concatenateTypeArgsMissing":"\\"Concatena\\" richiede almeno due argomenti tipo","conditionalOperandInvalid":"Operando condizionale non valido di tipo \\"{type}\\"","constantRedefinition":"\\"{name}\\" è costante (perché è in maiuscolo) e non può essere ridefinita","constructorNoArgs":"Nessun argomento previsto per il costruttore \\"{type}\\"","constructorParametersMismatch":"Mancata corrispondenza tra firma di __new__ e __init__ nella classe \\"{classType}\\"","containmentAlwaysFalse":"L\'espressione restituisce sempre False perché i tipi \\"{leftType}\\" e \\"{rightType}\\" non si sovrappongono","containmentAlwaysTrue":"L\'espressione restituisce sempre True perché i tipi \\"{leftType}\\" e \\"{rightType}\\" non si sovrappongono","continueInFinally":"Non è possibile usare \\"continue\\" all\'interno di una clausola finally","continueOutsideLoop":"\\"continue\\" può essere usato solo all\'interno di un ciclo","coroutineInConditionalExpression":"L\'espressione condizionale fa riferimento a una coroutine che restituisce sempre True","dataClassBaseClassFrozen":"Una classe non bloccata non può ereditare da una classe bloccata","dataClassBaseClassNotFrozen":"Una classe bloccata non può ereditare da una classe non bloccata","dataClassConverterFunction":"L\'argomento di tipo \\"{argType}\\" non è un convertitore valido per il campo \\"{fieldName}\\" di tipo \\"{fieldType}\\"","dataClassConverterOverloads":"Nessun overload di \\"{funcName}\\" è un convertitore valido per il campo \\"{fieldName}\\" di tipo \\"{fieldType}\\"","dataClassFieldWithDefault":"I campi senza valori predefiniti non possono essere visualizzati dopo i campi con valori predefiniti","dataClassFieldWithPrivateName":"Il campo dataclass non può usare un nome privato","dataClassFieldWithoutAnnotation":"Il campo dataclass senza annotazione del tipo causerà un\'eccezione di runtime","dataClassPostInitParamCount":"Dataclass __post_init__ conteggio dei parametri non corretto; il numero di campi InitVar è {expected}","dataClassPostInitType":"Dataclass __post_init__ tipo di parametro del metodo non corrispondente per il campo \\"{fieldName}\\"","dataClassSlotsOverwrite":"__slots__ è già definito nella classe","dataClassTransformExpectedBoolLiteral":"Espressione prevista che restituisce in modo statico True o False","dataClassTransformFieldSpecifier":"È prevista una tupla di classi o funzioni ma è stato ricevuto il tipo \\"{type}\\"","dataClassTransformPositionalParam":"Tutti gli argomenti di \\"dataclass_transform\\" devono essere argomenti di parole chiave","dataClassTransformUnknownArgument":"Argomento \\"{name}\\" non supportato da dataclass_transform","dataProtocolInSubclassCheck":"I protocolli dati (che includono attributi non di metodo) non sono consentiti nelle chiamate issubclass","declaredReturnTypePartiallyUnknown":"Il tipo restituito dichiarato \\"{returnType}\\" è parzialmente sconosciuto","declaredReturnTypeUnknown":"Il tipo restituito dichiarato è sconosciuto","defaultValueContainsCall":"Chiamate di funzione e oggetti modificabili non consentiti all\'interno dell\'espressione del valore predefinito del parametro","defaultValueNotAllowed":"Il parametro con \\"*\\" o \\"**\\" non può avere un valore predefinito","delTargetExpr":"Non è possibile eliminare l\'espressione","deprecatedClass":"La classe \\"{name}\\" è deprecata","deprecatedConstructor":"Il costruttore per la classe \\"{name}\\" è deprecato","deprecatedDescriptorDeleter":"Il metodo \\"__delete__\\" per il descrittore \\"{name}\\" è deprecato","deprecatedDescriptorGetter":"Il metodo \\"__get__\\" per il descrittore \\"{name}\\" è deprecato","deprecatedDescriptorSetter":"Il metodo \\"__set__\\" per il descrittore \\"{name}\\" è deprecato","deprecatedFunction":"La funzione \\"{name}\\" è deprecata","deprecatedMethod":"Il metodo \\"{name}\\" nella classe \\"{className}\\" è deprecato","deprecatedPropertyDeleter":"Il deleter per la proprietà \\"{name}\\" è deprecato","deprecatedPropertyGetter":"Il getter per la proprietà \\"{name}\\" è deprecato","deprecatedPropertySetter":"Il setter per la proprietà \\"{name}\\" è deprecato","deprecatedType":"Questo tipo è deprecato a partire da Python {version}; usa \\"{replacement}\\"","dictExpandIllegalInComprehension":"Espansione del dizionario non consentita nella comprensione","dictInAnnotation":"Espressione dizionario non consentita nell\'annotazione di tipo","dictKeyValuePairs":"Le voci del dizionario devono contenere coppie chiave-valore","dictUnpackIsNotMapping":"Mapping previsto per l\'operatore di decompressione del dizionario","dunderAllSymbolNotPresent":"\\"{name}\\" è specificato in __all__ ma non è presente nel modulo","duplicateArgsParam":"È consentito un solo parametro \\"*\\"","duplicateBaseClass":"Classe di base duplicata non consentita","duplicateCapturePatternTarget":"La destinazione di acquisizione \\"{name}\\" non può comparire più di una volta all\'interno dello stesso schema","duplicateCatchAll":"È consentita una sola clausola catch-all tranne","duplicateEnumMember":"Il membro di enumerazione \\"{name}\\" è già dichiarato","duplicateGenericAndProtocolBase":"È consentita una sola classe di base Generic(...) o Protocol[...]","duplicateImport":"\\"{importName}\\" è stato importato più di una volta","duplicateKeywordOnly":"È consentito un solo separatore \\"*\\"","duplicateKwargsParam":"È consentito un solo parametro \\"**\\"","duplicateParam":"“{name}\\" parametro duplicato","duplicatePositionOnly":"È consentito un solo parametro \\"/\\"","duplicateStarPattern":"In una sequenza di criteri è consentito un solo criterio \\"*\\"","duplicateStarStarPattern":"È consentita una sola voce \\"**\\"","duplicateUnpack":"Nell\'elenco è consentita una sola operazione di decompressione","ellipsisAfterUnpacked":"\\"...\\" non può essere usato con una tupla o una tupla o TypeVarTuple non compressa","ellipsisContext":"\\"...\\" non è consentito in questo contesto","ellipsisSecondArg":"\\"...\\" è consentito solo come secondo di due argomenti","enumClassOverride":"La classe di enumerazione \\"{name}\\" è finale e non può essere sottoclassata","exceptionGroupIncompatible":"La sintassi del gruppo di eccezioni (\\"except*\\") richiede Python 3.11 o versione successiva","exceptionTypeIncorrect":"\\"{type}\\" non deriva da BaseException","exceptionTypeNotClass":"\\"{type}\\" non è una classe di eccezione valida","exceptionTypeNotInstantiable":"Il costruttore per il tipo di eccezione \\"{type}\\" richiede uno o più argomenti","expectedAfterDecorator":"Dichiarazione di funzione o classe prevista dopo l’elemento Decorator","expectedArrow":"Previsto \\"->\\" seguito da un\'annotazione di tipo restituito","expectedAsAfterException":"Previsto \\"as\\" dopo il tipo di eccezione","expectedAssignRightHandExpr":"Espressione prevista a destra di \\"=\\"","expectedBinaryRightHandExpr":"Espressione prevista a destra dell\'operatore","expectedBoolLiteral":"È previsto True o False","expectedCase":"Prevista istruzione \\"case\\"","expectedClassName":"Nome classe previsto","expectedCloseBrace":"\\"{\\" non è stato chiuso","expectedCloseBracket":"\\"[\\" non è stato chiuso","expectedCloseParen":"\\"(\\" non è stato chiuso","expectedColon":"Previsto \\":\\"","expectedComplexNumberLiteral":"È previsto un valore letterale di numero complesso per i criteri di ricerca","expectedDecoratorExpr":"Il modulo dell\'espressione non è supportato per l\'elemento Decorator precedente a Python 3.9","expectedDecoratorName":"È previsto un nome di elemento Decorator","expectedDecoratorNewline":"Prevista nuova riga alla fine dell\'elemento Decorator","expectedDelExpr":"Espressione prevista dopo \\"del\\"","expectedElse":"Previsto \\"else\\"","expectedEquals":"Previsto \\"=\\"","expectedExceptionClass":"Classe od oggetto di eccezione non valido","expectedExceptionObj":"Previsto oggetto eccezione, classe eccezione o Nessuno","expectedExpr":"Espressione prevista","expectedFunctionAfterAsync":"Prevista definizione di funzione dopo \\"async\\"","expectedFunctionName":"È previsto un nome di funzione dopo \\"def\\"","expectedIdentifier":"Identificatore previsto","expectedImport":"Previsto \\"import\\"","expectedImportAlias":"Simbolo previsto dopo \\"as\\"","expectedImportSymbols":"Sono previsti uno o più nomi di simboli dopo l\'importazione","expectedIn":"previsto \'in\'","expectedInExpr":"Espressione prevista dopo \\"in\\"","expectedIndentedBlock":"Previsto un blocco rientrato","expectedMemberName":"È previsto un nome di membro dopo \\".\\"","expectedModuleName":"Nome del modulo previsto","expectedNameAfterAs":"È previsto il nome del simbolo dopo \\"as\\"","expectedNamedParameter":"Il parametro della parola chiave deve seguire \\"*\\"","expectedNewline":"Prevista nuova riga","expectedNewlineOrSemicolon":"Le istruzioni devono essere separate da nuove righe o punti e virgola","expectedOpenParen":"Previsto \\"(\\"","expectedParamName":"Nome del parametro previsto","expectedPatternExpr":"Espressione del criterio prevista","expectedPatternSubjectExpr":"Prevista espressione del soggetto del criterio","expectedPatternValue":"Espressione del valore del criterio prevista nel formato \\"a.b\\"","expectedReturnExpr":"Espressione prevista dopo \\"return\\"","expectedSliceIndex":"Prevista espressione di indice o sezione","expectedTypeNotString":"È previsto un tipo ma è stato ricevuto un valore letterale stringa","expectedTypeParameterName":"Nome del parametro del tipo previsto","expectedYieldExpr":"Espressione prevista nell\'istruzione yield","finalClassIsAbstract":"La classe \\"{type}\\" è contrassegnata come finale e deve implementare tutti i simboli astratti","finalContext":"\\"Finale\\" non è consentito in questo contesto","finalMethodOverride":"Il metodo \\"{name}\\" non può eseguire l\'override del metodo finale definito nella classe \\"{className}\\"","finalNonMethod":"Impossibile contrassegnare la funzione “{name}” @final perché non è un metodo","finalReassigned":"\\"{name}\\" è dichiarato come Finale e non può essere riassegnato","finalRedeclaration":"\\"{name}\\" è stato dichiarato in precedenza come Finale","finalRedeclarationBySubclass":"Non è possibile ridichiarare \\"{name}\\" perché la classe padre \\"{className}\\" la dichiara come Finale","finalTooManyArgs":"Previsto un singolo argomento tipo dopo \\"Final\\"","finalUnassigned":"\\"{name}\\" è dichiarato Final, ma il valore non è assegnato","formatStringBrace":"Parentesi graffa di chiusura singola non consentita all\'interno del valore letterale f-string; usa parentesi graffa chiusa doppia","formatStringBytes":"I valori letterali stringa di formato (f-string) non possono essere binari","formatStringDebuggingIllegal":"L’identificatore di debug delle stringhe F \\"=\\" richiede Python 3.8 o versione successiva","formatStringEscape":"Sequenza di escape (barra rovesciata) non consentita nella porzione di espressione di f-string prima di Python 3.12","formatStringExpectedConversion":"È previsto un identificatore di conversione dopo \\"!\\" in f-string","formatStringIllegal":"I valori letterali stringa di formato (f-string) richiedono Python 3.6 o versione successiva","formatStringInPattern":"Stringa di formato non consentita nel criterio","formatStringNestedFormatSpecifier":"Espressioni annidate troppo in profondità nell\'identificatore di stringa di formato","formatStringNestedQuote":"Le stringhe annidate all\'interno di una stringa f non possono usare lo stesso carattere virgolette della stringa f prima di Python 3.12","formatStringUnicode":"I valori letterali stringa di formato (f-string) non possono essere unicode","formatStringUnterminated":"Espressione senza terminazione in f-string; previsto \\"}\\".","functionDecoratorTypeUnknown":"L\'elemento Decorator della funzione non tipizzato nasconde il tipo di funzione; l\'elemento Decorator verrà ignorato","functionInConditionalExpression":"L\'espressione condizionale fa riferimento a una funzione che restituisce sempre True","functionTypeParametersIllegal":"La sintassi del parametro del tipo di funzione richiede Python 3.12 o versione successiva","futureImportLocationNotAllowed":"Le importazioni da __future__ devono trovarsi all\'inizio del file","generatorAsyncReturnType":"Il tipo restituito della funzione del generatore asincrono deve essere compatibile con \\"AsyncGenerator[{yieldType}, Any]\\"","generatorNotParenthesized":"Le espressioni del generatore devono essere racchiuse tra parentesi se non è l\'unico argomento","generatorSyncReturnType":"Il tipo restituito della funzione del generatore deve essere compatibile con \\"Generator[{yieldType}, Any, Any]\\"","genericBaseClassNotAllowed":"Non è possibile usare la classe di base \\"Generic\\" con la sintassi del parametro di tipo","genericClassAssigned":"Non è possibile assegnare il tipo di classe generico","genericClassDeleted":"Non è possibile eliminare il tipo di classe generico","genericInstanceVariableAccess":"L\'accesso alla variabile di istanza generica tramite la classe è ambiguo","genericNotAllowed":"\\"Generic\\" non valido in questo contesto","genericTypeAliasBoundTypeVar":"L\'alias di tipo generico all\'interno della classe non può usare variabili di tipo associate {names}","genericTypeArgMissing":"\\"Generico\\" richiede almeno un argomento di tipo","genericTypeArgTypeVar":"L\'argomento di tipo per \\"Generic\\" deve essere una variabile di tipo","genericTypeArgUnique":"Gli argomenti di tipo per \\"Generic\\" devono essere univoci","globalReassignment":"\\"{name}\\" è assegnato prima della dichiarazione globale","globalRedefinition":"\\"{name}\\" è già stato dichiarato globale","implicitStringConcat":"Concatenazione implicita di stringhe non consentita","importCycleDetected":"Ciclo rilevato nella catena di importazione","importDepthExceeded":"La profondità della catena di importazione ha superato {depth}","importResolveFailure":"Non è stato possibile risolvere l\'importazione \\"{importName}\\"","importSourceResolveFailure":"Non è stato possibile risolvere l\'importazione \\"{importName}\\" dall’origine","importSymbolUnknown":"\\"{name}\\" è un simbolo di importazione sconosciuto","incompatibleMethodOverride":"Il metodo \\"{name}\\" esegue l\'override della classe \\"{className}\\" in modo incompatibile","inconsistentIndent":"Il valore dell\'annullamento del rientro non corrisponde al rientro precedente","inconsistentTabs":"Uso incoerente di tabulazioni e spazi nel rientro","initMustReturnNone":"Il tipo restituito di \\"__init__\\" deve essere None","initSubclassCallFailed":"Argomenti di parola chiave non corretti per il metodo __init_subclass__","initSubclassClsParam":"__init_subclass__ override deve accettare un parametro \\"cls\\"","initVarNotAllowed":"\\"InitVar\\" non consentito in questo contesto","instanceMethodSelfParam":"I metodi di istanza devono accettare un parametro \\"self\\"","instanceVarOverridesClassVar":"La variabile di istanza \\"{name}\\" esegue l\'override della variabile di classe con lo stesso nome nella classe \\"{className}\\"","instantiateAbstract":"Non è possibile creare un\'istanza di classe astratta \\"{type}\\"","instantiateProtocol":"Non è possibile creare un\'istanza della classe di protocollo \\"{type}\\"","internalBindError":"Errore interno durante l\'associazione del file \\"{file}\\": {message}","internalParseError":"Si è verificato un errore interno durante l\'analisi del file \\"{file}\\": {message}","internalTypeCheckingError":"Errore interno durante il controllo del tipo del file \\"{file}\\": {message}","invalidIdentifierChar":"Carattere non valido nell\'identificatore","invalidStubStatement":"L\'istruzione non ha significato all\'interno di un file stub di tipo","invalidTokenChars":"Carattere non valido \\"{text}\\" nel token","isInstanceInvalidType":"Il secondo argomento di \\"isinstance\\" deve essere una classe o una tupla di classi","isSubclassInvalidType":"Il secondo argomento di \\"issubclass\\" deve essere una classe o una tupla di classi","keyValueInSet":"Le coppie chiave-valore non sono consentite all\'interno di un set","keywordArgInTypeArgument":"Gli argomenti delle parole chiave non possono essere usati negli elenchi di argomenti tipo","keywordOnlyAfterArgs":"Separatore di argomenti solo parola chiave non consentito dopo il parametro \\"*\\"","keywordParameterMissing":"Uno o più parametri di parole chiave devono seguire il parametro \\"*\\"","keywordSubscriptIllegal":"Gli argomenti delle parole chiave all\'interno di pedici non sono supportati","lambdaReturnTypePartiallyUnknown":"Il tipo restituito dell\'espressione lambda \\"{returnType}\\" è parzialmente sconosciuto","lambdaReturnTypeUnknown":"Il tipo restituito di lambda è sconosciuto","listAssignmentMismatch":"Non è possibile assegnare l\'espressione con tipo \\"{type}\\" all\'elenco di destinazione","listInAnnotation":"Espressione elenco non consentita nell\'annotazione di tipo","literalEmptyArgs":"Previsto uno o più argomenti tipo dopo \\"Valore letterale\\"","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"Non è possibile usare \\"Literal\\" in questo contesto senza un argomento tipo","literalNotCallable":"Non è possibile creare un\'istanza del tipo letterale","literalUnsupportedType":"Gli argomenti di tipo per \\"Literal\\" devono essere None, un valore letterale (int, bool, str o bytes) o un valore di enumerazione","matchIncompatible":"Le istruzioni match richiedono Python 3.10 o versione successiva","matchIsNotExhaustive":"I case all\'interno dell\'istruzione match non gestiscono in modo completo tutti i valori","maxParseDepthExceeded":"È stata superata la profondità massima di analisi; suddividere l\'espressione in sottoespressioni più piccole","memberAccess":"Non è possibile accedere al membro \\"{name}\\" per il tipo \\"{type}\\"","memberDelete":"Non è possibile eliminare il membro \\"{name}\\" per il tipo \\"{type}\\"","memberSet":"Non è possibile assegnare il membro \\"{name}\\" per il tipo \\"{type}\\"","metaclassConflict":"La metaclasse di una classe derivata deve essere una sottoclasse delle metaclassi di tutte le relative classi di base","metaclassDuplicate":"È possibile specificare una sola metaclasse","metaclassIsGeneric":"La metaclasse non può essere generica","methodNotDefined":"Metodo \\"{name}\\" non definito","methodNotDefinedOnType":"\\"{name}\\" metodo non definito nel tipo \\"{type}\\"","methodOrdering":"Non è possibile creare un ordinamento coerente del metodo","methodOverridden":"\\"{name}\\" esegue l\'override del metodo con lo stesso nome nella classe \\"{className}\\" con un tipo non compatibile \\"{type}\\".","methodReturnsNonObject":"Il metodo \\"{name}\\" non restituisce un oggetto","missingSuperCall":"Il metodo \\"{methodName}\\" non chiama il metodo con lo stesso nome nella classe padre","moduleAsType":"Il modulo non può essere usato come tipo","moduleNotCallable":"Modulo non chiamabile","moduleUnknownMember":"\\"{memberName}\\" non è un membro noto del modulo \\"{moduleName}\\"","namedExceptAfterCatchAll":"Una clausola except denominata non può trovarsi dopo la clausola catch-all except","namedParamAfterParamSpecArgs":"Il parametro della parola chiave \\"{name}\\" non può essere visualizzato nella firma dopo il parametro ParamSpec args","namedTupleEmptyName":"I nomi all\'interno di una tupla denominata non possono essere vuoti","namedTupleEntryRedeclared":"Non è possibile eseguire l\'override di \\"{name}\\" perché la classe padre \\"{className}\\" è una tupla denominata","namedTupleFirstArg":"Previsto nome della classe di tupla denominata come primo argomento","namedTupleMultipleInheritance":"L\'ereditarietà multipla con NamedTuple non è supportata","namedTupleNameKeyword":"I nomi dei campi non possono essere una parola chiave","namedTupleNameType":"Prevista tupla a due voci che specifica il nome e il tipo della voce","namedTupleNameUnique":"I nomi all\'interno di una tupla denominata devono essere univoci","namedTupleNoTypes":"\\"namedtuple\\" non fornisce tipi per le voci di tupla; usare invece \\"NamedTuple\\"","namedTupleSecondArg":"È previsto un elenco di voci di tupla denominate come secondo argomento","newClsParam":"__new__ override deve accettare un parametro \\"cls\\"","newTypeAnyOrUnknown":"Il secondo argomento di NewType deve essere una classe nota, non Any o Unknown","newTypeBadName":"Il primo argomento di NewType deve essere un valore letterale stringa","newTypeLiteral":"Non è possibile usare NewType con il tipo Literal","newTypeNameMismatch":"NewType deve essere assegnato a una variabile con lo stesso nome","newTypeNotAClass":"Classe prevista come secondo argomento di NewType","newTypeParamCount":"NewType richiede due argomenti posizionali","newTypeProtocolClass":"Non è possibile usare NewType con il tipo strutturale (un protocollo o una classe TypedDict)","noOverload":"Nessun overload per \\"{name}\\" corrisponde agli argomenti specificati","noReturnContainsReturn":"La funzione con tipo restituito dichiarato \\"NoReturn\\" non può includere un\'istruzione return","noReturnContainsYield":"La funzione con il tipo restituito dichiarato \\"NoReturn\\" non può includere un\'istruzione yield","noReturnReturnsNone":"La funzione con tipo restituito dichiarato \\"NoReturn\\" non può restituire \\"None\\"","nonDefaultAfterDefault":"L\'argomento non predefinito segue l\'argomento predefinito","nonLocalInModule":"Dichiarazione non locale non consentita a livello di modulo","nonLocalNoBinding":"Non è stata trovata alcuna associazione per \\"{name}\\" non locale","nonLocalReassignment":"\\"{name}\\" è assegnato prima della dichiarazione non locale","nonLocalRedefinition":"\\"{name}\\" è già stato dichiarato non locale","noneNotCallable":"Non è possibile chiamare l\'oggetto di tipo \\"None\\"","noneNotIterable":"Impossibile utilizzare l\'oggetto di tipo \\"None\\" come valore iterabile","noneNotSubscriptable":"L\'oggetto di tipo \\"Nessuno\\" non è sottoponibile a pedice","noneNotUsableWith":"Impossibile utilizzare l\'oggetto di tipo \\"None\\" con \\"with\\"","noneOperator":"Operatore \\"{operator}\\" non supportato per \\"None\\"","noneUnknownMember":"\\"{name}\\" non è un membro noto di \\"None\\"","notRequiredArgCount":"Previsto un singolo argomento tipo dopo \\"NotRequired\\"","notRequiredNotInTypedDict":"\\"NotRequired\\" non è consentito in questo contesto","objectNotCallable":"L\'oggetto di tipo \\"{type}\\" non è chiamabile","obscuredClassDeclaration":"La dichiarazione di classe \\"{name}\\" è oscurata da una dichiarazione con lo stesso nome","obscuredFunctionDeclaration":"La dichiarazione della funzione \\"{name}\\" è oscurata da una dichiarazione con lo stesso nome","obscuredMethodDeclaration":"La dichiarazione del metodo \\"{name}\\" è oscurata da una dichiarazione con lo stesso nome","obscuredParameterDeclaration":"La dichiarazione del parametro \\"{name}\\" è oscurata da una dichiarazione con lo stesso nome","obscuredTypeAliasDeclaration":"La dichiarazione dell\'alias di tipo \\"{name}\\" è nascosta da una dichiarazione con lo stesso nome","obscuredVariableDeclaration":"La dichiarazione \\"{name}\\" è oscurata da una dichiarazione con lo stesso nome","operatorLessOrGreaterDeprecated":"L\'operatore \\"<>\\" non è supportato in Python 3. Usare invece \\"!=\\"","optionalExtraArgs":"Previsto un argomento tipo dopo \\"Facoltativo\\"","orPatternIrrefutable":"Criterio inconfutabile consentito solo come ultimo criterio secondario in un criterio \\"o\\"","orPatternMissingName":"Tutti i criteri secondari all\'interno di un criterio \\"or\\" devono avere come destinazione gli stessi nomi","overlappingKeywordArgs":"Il dizionario tipizzato si sovrappone al parametro della parola chiave: {names}","overlappingOverload":"L\'overload {obscured} per \\"{name}\\" non verrà mai usato perché i parametri si sovrappongono all\'overload {obscuredBy}","overloadAbstractMismatch":"I metodi di overload devono essere tutti astratti o no","overloadClassMethodInconsistent":"Gli overload per \\"{name}\\" usano @classmethod in modo incoerente","overloadFinalInconsistencyImpl":"L\'overload per “{name}” è contrassegnato @final ma l\'implementazione non lo è","overloadFinalInconsistencyNoImpl":"L\'overload {index} per “{name}” è contrassegnato @final ma l\'overload 1 non lo è","overloadImplementationMismatch":"L\'implementazione di overload non è coerente con la firma dell\'overload {index}","overloadReturnTypeMismatch":"L\'overload {prevIndex} per \\"{name}\\" si sovrappone all\'overload {newIndex} e restituisce un tipo incompatibile","overloadStaticMethodInconsistent":"Gli overload per \\"{name}\\" usano @staticmethod in modo incoerente","overloadWithoutImplementation":"\\"{name}\\" è contrassegnato come overload, ma non viene fornita alcuna implementazione","overriddenMethodNotFound":"Il metodo \\"{name}\\" è contrassegnato come override, ma non è presente alcun metodo di base con lo stesso nome","overrideDecoratorMissing":"Il metodo \\"{name}\\" non è contrassegnato come override, ma esegue l\'override di un metodo nella classe \\"{className}\\"","paramAfterKwargsParam":"Il parametro non può seguire il parametro \\"**\\"","paramAlreadyAssigned":"Il parametro \\"{name}\\" è già assegnato","paramAnnotationMissing":"Annotazione di tipo mancante per il parametro \\"{name}\\"","paramAssignmentMismatch":"Non è possibile assegnare l\'espressione di tipo \\"{sourceType}\\" al parametro di tipo \\"{paramType}\\"","paramNameMissing":"Nessun parametro denominato \\"{name}\\"","paramSpecArgsKwargsUsage":"I membri \\"args\\" e \\"kwargs\\" di ParamSpec devono essere entrambi visualizzati all\'interno di una firma di funzione","paramSpecArgsMissing":"Gli argomenti per ParamSpec \\"{type}\\" sono mancanti","paramSpecArgsUsage":"Il membro \\"args\\" di ParamSpec è valido solo se usato con il parametro *args","paramSpecAssignedName":"ParamSpec deve essere assegnato a una variabile denominata \\"{name}\\"","paramSpecContext":"ParamSpec non è consentito in questo contesto","paramSpecDefaultNotTuple":"Sono previsti puntini di sospensione, un\'espressione di tupla o ParamSpec per il valore predefinito di ParamSpec","paramSpecFirstArg":"Nome previsto di ParamSpec come primo argomento","paramSpecKwargsUsage":"Il membro \\"kwargs\\" di ParamSpec è valido solo se usato con il parametro **kwargs","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" non ha significato in questo contesto","paramSpecScopedToReturnType":"L’ambito ParamSpec \\"{name}\\" è un elemento richiamabile all\'interno del tipo restituito e non può essere usato come riferimento nel corpo della funzione","paramSpecUnknownArg":"ParamSpec non supporta più di un argomento","paramSpecUnknownMember":"\\"{name}\\" non è un membro noto di ParamSpec","paramSpecUnknownParam":"\\"{name}\\" è un parametro sconosciuto per ParamSpec","paramTypeCovariant":"Non è possibile usare la variabile di tipo covariante nel tipo di parametro","paramTypePartiallyUnknown":"Tipo di parametro \\"{paramName}\\" parzialmente sconosciuto","paramTypeUnknown":"Tipo di parametro \\"{paramName}\\" sconosciuto","parenthesizedContextManagerIllegal":"Le parentesi all\'interno dell\'istruzione \\"con\\" richiedono Python 3.9 o versione successiva","patternNeverMatches":"Il criterio non verrà mai confrontato per il tipo di oggetto \\"{type}\\"","positionArgAfterNamedArg":"L\'argomento posizionale non può essere visualizzato dopo gli argomenti della parola chiave","positionOnlyAfterArgs":"Separatore di parametri di sola posizione non consentito dopo il parametro \\"*\\"","positionOnlyAfterKeywordOnly":"Il parametro \\"/\\" deve essere visualizzato prima del parametro \\"*\\"","positionOnlyAfterNon":"Il parametro di sola posizione non è consentito dopo un parametro che non è di sola posizione","positionOnlyFirstParam":"Separatore di argomenti di sola posizione non consentito come primo parametro","positionOnlyIncompatible":"Il separatore di parametri di sola posizione richiede Python 3.8 o versione successiva","privateImportFromPyTypedModule":"\\"{name}\\" non è esportato dal modulo \\"{module}\\"","privateUsedOutsideOfClass":"\\"{name}\\" è privato e utilizzato all\'esterno del modulo in cui è dichiarato","privateUsedOutsideOfModule":"\\"{name}\\" è privato e utilizzato all\'esterno del modulo in cui è dichiarato","propertyOverridden":"\\"{name}\\" esegue erroneamente l’override di una proprietà con lo stesso nome nella classe \\"{className}\\"","propertyStaticMethod":"Metodi statici non consentiti per getter, setter o deleter di proprietà","protectedUsedOutsideOfClass":"\\"{name}\\" è protetto e usato al di fuori della classe in cui è dichiarato","protocolBaseClass":"La classe di protocollo \\"{classType}\\" non può derivare dalla classe non di protocollo \\"{baseType}\\".","protocolBaseClassWithTypeArgs":"Gli argomenti tipo non sono consentiti con la classe Protocollo quando si usa la sintassi dei parametri tipo","protocolIllegal":"L\'uso del \\"protocollo\\" richiede Python 3.7 o versione successiva","protocolNotAllowed":"\\"Protocol\\" non può essere usato in questo contesto","protocolUnsafeOverlap":"La classe si sovrappone a \\"{name}\\" in modo non sicuro e può produrre una corrispondenza in fase di esecuzione","protocolVarianceContravariant":"La variabile di tipo \\"{variable}\\" usata nel protocollo generico \\"{class}\\" deve essere controvariante","protocolVarianceCovariant":"La variabile di tipo \\"{variable}\\" usata nel protocollo generico \\"{class}\\" deve essere covariante","protocolVarianceInvariant":"La variabile di tipo \\"{variable}\\" usata nel protocollo generico \\"{class}\\" deve essere invariabile","pyrightCommentInvalidDiagnosticBoolValue":"La direttiva di commento Pyright deve essere seguita da \\"=\\" e da un valore true o false","pyrightCommentInvalidDiagnosticSeverityValue":"La direttiva di commento Pyright deve essere seguita da \\"=\\" e da un valore true, false, error, warning, information o none","pyrightCommentMissingDirective":"Il commento pyright deve essere seguito da una direttiva (di base o restrittiva) o da una regola di diagnostica","pyrightCommentNotOnOwnLine":"I commenti Pyright usati per controllare le impostazioni a livello di file devono essere visualizzati nella propria riga","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" è una regola di diagnostica sconosciuta per il commento pyright","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" non è un valore valido per il commento pyright; previsto true, false, error, warning, information o none","pyrightCommentUnknownDirective":"\\"{directive}\\" è una direttiva sconosciuta per il commento pyright; previsto \\"strict\\" o \\"basic\\"","readOnlyArgCount":"Previsto un singolo argomento tipo dopo \\"ReadOnly\\"","readOnlyNotInTypedDict":"\\"ReadOnly\\" non consentito in questo contesto","recursiveDefinition":"Non è stato possibile determinare il tipo di \\"{name}\\" perché fa riferimento a se stesso","relativeImportNotAllowed":"Le importazioni relative non possono essere usate con il modulo \\"import .a\\". Usare invece \\"from . import a\\"","requiredArgCount":"Previsto un singolo argomento tipo dopo \\"Obbligatorio\\"","requiredNotInTypedDict":"\\"Required\\" non è consentito in questo contesto","returnInAsyncGenerator":"L’istruzione return con valore non è consentita nel generatore asincrono","returnMissing":"La funzione con tipo restituito dichiarato \\"{returnType}\\" deve restituire un valore in tutti i percorsi di codice","returnOutsideFunction":"\\"return\\" può essere usata solo all\'interno di una funzione.","returnTypeContravariant":"Non è possibile usare la variabile di tipo controvariante nel tipo restituito","returnTypeMismatch":"Non è possibile assegnare l\'espressione di tipo \\"{exprType}\\" al tipo restituito \\"{returnType}\\"","returnTypePartiallyUnknown":"Il tipo restituito \\"{returnType}\\" è parzialmente sconosciuto","returnTypeUnknown":"Il tipo restituito è sconosciuto","revealLocalsArgs":"Non è previsto alcun argomento per la chiamata \\"reveal_locals\\"","revealLocalsNone":"Non sono presenti variabili locali in questo ambito","revealTypeArgs":"Previsto un singolo argomento posizionale per la chiamata \\"reveal_type\\"","revealTypeExpectedTextArg":"L\'argomento \\"expected_text\\" per la funzione \\"reveal_type\\" deve essere un valore letterale str","revealTypeExpectedTextMismatch":"Testo di tipo non corrispondente; previsto \\"{expected}\\" ma ricevuto \\"{received}\\"","revealTypeExpectedTypeMismatch":"Tipo non corrispondente; previsto \\"{expected}\\" ma ricevuto \\"{received}\\"","selfTypeContext":"\\"Self\\" non è valido in questo contesto","selfTypeMetaclass":"Impossibile utilizzare “Self” all\'interno di una metaclasse (una sottoclasse di “type”)","selfTypeWithTypedSelfOrCls":"Non è possibile usare \\"Self\\" in una funzione con un parametro \'self\' o \'cls\' con un\'annotazione di tipo diversa da \\"Self\\"","setterGetterTypeMismatch":"Il tipo di valore del setter di proprietà non è assegnabile al tipo restituito del getter","singleOverload":"\\"{name}\\" è contrassegnato come overload, ma mancano altri overload","slotsAttributeError":"\\"{name}\\" non è specificato in __slots__","slotsClassVarConflict":"\\"{name}\\" è in conflitto con la variabile di istanza dichiarata in __slots__","starPatternInAsPattern":"Il modello a stella non può essere usato con la destinazione \\"as\\"","starPatternInOrPattern":"Il modello a stella non può essere ORed all\'interno di altri modelli","starStarWildcardNotAllowed":"** non può essere usato con il carattere jolly \\"_\\"","staticClsSelfParam":"I metodi statici non devono accettare un parametro \\"self\\" o \\"cls\\"","stdlibModuleOverridden":"\\"{path}\\" sta eseguendo l\'override del modulo stdlib \\"{name}\\"","stringNonAsciiBytes":"Carattere non ASCII non consentito nel valore letterale stringa dei byte","stringNotSubscriptable":"L\'espressione stringa non può essere in pedice nell\'annotazione di tipo. Racchiudere l\'intera annotazione tra virgolette","stringUnsupportedEscape":"Sequenza di escape non supportata nel valore letterale stringa","stringUnterminated":"Il valore letterale stringa non è terminato","stubFileMissing":"File di stub non trovato per \\"{importName}\\"","stubUsesGetAttr":"Il file dello stub di tipo è incompleto; \\"__getattr__\\" nasconde gli errori di tipo per il modulo","sublistParamsIncompatible":"I parametri dell’elenco secondario non sono supportati in Python 3.x","superCallArgCount":"Non sono previsti più di due argomenti per la chiamata \\"super\\".","superCallFirstArg":"È previsto un tipo di classe come primo argomento della chiamata \\"super\\", ma è stato ricevuto \\"{type}\\"","superCallSecondArg":"Il secondo argomento della chiamata \\"super\\" deve essere un oggetto o una classe che deriva da \\"{type}\\"","superCallZeroArgForm":"Il modulo zero-argument della chiamata \\"super\\" è valido solo all\'interno di un metodo","superCallZeroArgFormStaticMethod":"Il modulo zero-argument della chiamata \\"super\\" non è valido all\'interno di un metodo statico","symbolIsPossiblyUnbound":"\\"{name}\\" potrebbe non essere associato","symbolIsUnbound":"\\"{name}\\" non associato","symbolIsUndefined":"\\"{name}\\" non è definito","symbolOverridden":"\\"{name}\\" esegue l\'override del simbolo con lo stesso nome nella classe \\"{className}\\"","ternaryNotAllowed":"Espressione ternaria non consentita nell\'annotazione di tipo","totalOrderingMissingMethod":"La classe deve definire uno dei valori di \\"__lt__\\", \\"__le__\\", \\"__gt__\\" o \\"__ge__\\" per usare total_ordering","trailingCommaInFromImport":"Virgola finale non consentita senza parentesi circostanti","tryWithoutExcept":"L\'istruzione Try deve contenere almeno una clausola except or finally","tupleAssignmentMismatch":"Non è possibile assegnare l\'espressione con tipo \\"{type}\\" alla tupla di destinazione","tupleInAnnotation":"Espressione di tupla non consentita nell\'annotazione di tipo","tupleIndexOutOfRange":"L\'indice {index} non è compreso nell\'intervallo per il tipo {type}","typeAliasIllegalExpressionForm":"Modulo di espressione non valido per la definizione dell\'alias di tipo","typeAliasIsRecursiveDirect":"L\'alias di tipo \\"{name}\\" non può usare se stesso nella relativa definizione","typeAliasNotInModuleOrClass":"TypeAlias può essere definito solo all\'interno di un modulo o di una classe","typeAliasRedeclared":"\\"{name}\\" è dichiarato come TypeAlias e può essere assegnato una sola volta","typeAliasStatementBadScope":"Un\'istruzione Tipo può essere usata solo all\'interno di un modulo o di un ambito della classe","typeAliasStatementIllegal":"L\'istruzione alias di tipo richiede Python 3.12 o versione successiva","typeAliasTypeBaseClass":"Impossibile utilizzare come classe di base un alias di tipo definito in un\'istruzione \\"type\\"","typeAliasTypeMustBeAssigned":"TypeAliasType deve essere assegnato a una variabile con lo stesso nome dell\'alias di tipo","typeAliasTypeNameArg":"Il primo argomento di TypeAliasType deve essere un valore letterale stringa che rappresenta il nome dell\'alias di tipo","typeAliasTypeNameMismatch":"Il nome dell\'alias di tipo deve corrispondere al nome della variabile a cui è assegnato","typeAliasTypeParamInvalid":"L\'elenco dei parametri del tipo deve essere una tupla contenente solo TypeVar, TypeVarTuple o ParamSpec.","typeAnnotationCall":"Espressione di chiamata non consentita nell\'espressione di tipo","typeAnnotationVariable":"Variabile non consentita nell\'espressione di tipo","typeAnnotationWithCallable":"L\'argomento di tipo per \\"type\\" deve essere una classe. I callable non sono supportati","typeArgListExpected":"Previsto ParamSpec, puntini di sospensione o elenco di tipi","typeArgListNotAllowed":"Espressione di elenco non consentita per questo argomento tipo","typeArgsExpectingNone":"Non sono previsti argomenti di tipo per la classe \\"{name}\\"","typeArgsMismatchOne":"Previsto un argomento di tipo, ricevuto {received}","typeArgsMissingForAlias":"Sono previsti argomenti di tipo per l\'alias di tipo generico \\"{name}\\"","typeArgsMissingForClass":"Argomenti tipo previsti per la classe generica \\"{name}\\"","typeArgsTooFew":"Troppo pochi argomenti tipo forniti per \\"{name}\\"; previsto {expected} ma ricevuto {received}","typeArgsTooMany":"Troppi argomenti tipo forniti per \\"{name}\\"; previsto {expected} ma ricevuto {received}","typeAssignmentMismatch":"Impossibile assegnare l\'espressione di tipo \\"{sourceType}\\" al tipo dichiarato \\"{destType}\\"","typeAssignmentMismatchWildcard":"Il simbolo di importazione \\"{name}\\" ha il tipo \\"{sourceType}\\", che non può essere assegnato al tipo dichiarato \\"{destType}\\"","typeCallNotAllowed":"la chiamata type() non deve essere usata nell\'annotazione di tipo","typeCheckOnly":"\\"{name}\\" è contrassegnato come @type_check_only e può essere utilizzato solo nelle annotazioni tipo","typeCommentDeprecated":"L\'uso dei commenti di tipo è deprecato. Usare l\'annotazione di tipo","typeExpectedClass":"È prevista un\'espressione di tipo ma è stato ricevuto \\"{type}\\"","typeGuardArgCount":"È previsto un singolo argomento di tipo dopo \\"TypeGuard\\" o \\"TypeIs\\"","typeGuardParamCount":"Le funzioni e i metodi di protezione dei tipi definiti dall\'utente devono avere almeno un parametro di input","typeIsReturnType":"Il tipo restituito di TypeIs (\\"{returnType}\\") non è coerente con il tipo di parametro di valore (\\"{type}\\")","typeNotAwaitable":"\\"{type}\\" non è awaitable","typeNotIntantiable":"Non è possibile creare un\'istanza di \\"{type}\\"","typeNotIterable":"\\"{type}\\" non è iterabile","typeNotSpecializable":"Non è stato possibile specializzare il tipo \\"{type}\\"","typeNotSubscriptable":"L\'oggetto di tipo \\"{type}\\" non è sottoponibile a script","typeNotSupportBinaryOperator":"L\'operatore \\"{operator}\\" non è supportato per i tipi \\"{leftType}\\" e \\"{rightType}\\".","typeNotSupportBinaryOperatorBidirectional":"L\'operatore \\"{operator}\\" non è supportato per i tipi \\"{leftType}\\" e \\"{rightType}\\" quando il tipo previsto è \\"{expectedType}\\"","typeNotSupportUnaryOperator":"Operatore \\"{operator}\\" non supportato per il tipo \\"{type}\\"","typeNotSupportUnaryOperatorBidirectional":"L\'operatore \\"{operator}\\" non è supportato per il tipo \\"{type}\\" quando il tipo previsto è \\"{expectedType}\\"","typeNotUsableWith":"Impossibile utilizzare l\'oggetto di tipo \\"{type}\\" con \\"with\\" perché non implementa {method}","typeParameterBoundNotAllowed":"Il vincolo o il binding non possono essere usati con un parametro di tipo variadic o ParamSpec","typeParameterConstraintTuple":"Il vincolo del parametro di tipo deve essere una tupla di due o più tipi","typeParameterExistingTypeParameter":"Il parametro di tipo \\"{name}\\" è già in uso","typeParameterNotDeclared":"Il parametro di tipo \\"{name}\\" non è incluso nell\'elenco dei parametri di tipo per \\"{container}\\"","typeParametersMissing":"È necessario specificare almeno un parametro di tipo","typePartiallyUnknown":"Tipo di \\"{name}\\" parzialmente sconosciuto","typeUnknown":"Il tipo di \\"{name}\\" è sconosciuto","typeVarAssignedName":"TypeVar deve essere assegnato a una variabile denominata \\"{name}\\"","typeVarAssignmentMismatch":"Non è possibile assegnare il tipo \\"{type}\\" alla variabile di tipo \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar non può essere contemporaneamente associato e vincolato","typeVarBoundGeneric":"Il tipo associato a TypeVar non può essere generico","typeVarConstraintGeneric":"Il tipo di vincolo TypeVar non può essere generico","typeVarDefaultBoundMismatch":"Il tipo predefinito TypeVar deve essere un sottotipo del tipo associato","typeVarDefaultConstraintMismatch":"Il tipo predefinito TypeVar deve essere uno dei tipi vincolati","typeVarDefaultIllegal":"I tipi predefiniti delle variabili di tipo richiedono Python 3.13 o versione successiva","typeVarDefaultInvalidTypeVar":"Il parametro di tipo \\"{name}\\" ha un tipo predefinito che fa riferimento a una o più variabili di tipo non compreso nell\'ambito","typeVarFirstArg":"Nome previsto di TypeVar come primo argomento","typeVarNoMember":"TypeVar \\"{type}\\" non ha membri \\"{name}\\"","typeVarNotSubscriptable":"TypeVar \\"{type}\\" non sottoponibile a script","typeVarNotUsedByOuterScope":"La variabile di tipo \\"{name}\\" non ha significato in questo contesto","typeVarPossiblyUnsolvable":"La variabile di tipo \\"{name}\\" potrebbe non essere risolta se il chiamante non fornisce alcun argomento per il parametro \\"{param}\\"","typeVarScopedToReturnType":"La variabile di tipo \\"{name}\\" ha come ambito un elemento richiamabile all\'interno del tipo restituito e non può essere usato come riferimento nel corpo della funzione","typeVarSingleConstraint":"TypeVar deve contenere almeno due tipi vincolati","typeVarTupleConstraints":"TypeVarTuple non può avere vincoli di valore","typeVarTupleContext":"TypeVarTuple non è consentito in questo contesto","typeVarTupleDefaultNotUnpacked":"Il tipo predefinito TypeVarTuple deve essere una tupla non compressa o TypeVarTuple","typeVarTupleMustBeUnpacked":"L\'operatore Decomprimi è obbligatorio per il valore TypeVarTuple","typeVarTupleUnknownParam":"\\"{name}\\" è un parametro sconosciuto per TypeVar","typeVarUnknownParam":"\\"{name}\\" è un parametro sconosciuto per TypeVar","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" già in uso da un ambito esterno","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" viene visualizzato una sola volta nella firma della funzione generica","typeVarVariance":"TypeVar non può essere covariante e controvariante","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\" ha un valore predefinito e non può seguire TypeVarTuple \\"{variadicName}\\"","typeVarWithoutDefault":"\\"{name}\\" non può essere visualizzato dopo \\"{other}\\" nell\'elenco dei parametri del tipo, perché non ha un tipo predefinito","typeVarsNotInGenericOrProtocol":"Generic[] o Protocol[] deve includere tutte le variabili di tipo","typedDictAccess":"Non è stato possibile accedere all\'elemento in TypedDict","typedDictAssignedName":"TypedDict deve essere assegnato a una variabile denominata \\"{name}\\"","typedDictBadVar":"Le classi TypedDict possono contenere solo annotazioni di tipo","typedDictBaseClass":"Anche tutte le classi di base per le classi TypedDict devono essere classi TypedDict","typedDictBoolParam":"È previsto che il parametro \\"{name}\\" abbia il valore True o False","typedDictClosedExtras":"La classe di base \\"{name}\\" è un TypedDict chiuso; gli elementi aggiuntivi devono essere di tipo \\"{type}\\"","typedDictClosedNoExtras":"La classe di base \\"{name}\\" è un TypedDict chiuso; elementi aggiuntivi non consentiti","typedDictDelete":"Non è stato possibile eliminare l\'elemento in TypedDict","typedDictEmptyName":"I nomi all\'interno di un TypedDict non possono essere vuoti","typedDictEntryName":"Valore letterale stringa previsto per il nome della voce del dizionario","typedDictEntryUnique":"I nomi all\'interno di un dizionario devono essere univoci","typedDictExtraArgs":"Argomenti TypedDict aggiuntivi non supportati","typedDictFieldNotRequiredRedefinition":"Non è possibile ridefinire il campo TypedDict \\"{name}\\" come Non obbligatorio","typedDictFieldReadOnlyRedefinition":"Non è possibile ridefinire l’elemento TypedDict \\"{name}\\" come Sola lettura","typedDictFieldRequiredRedefinition":"Non è possibile ridefinire il campo TypedDict \\"{name}\\" come Obbligatorio","typedDictFirstArg":"È previsto il nome della classe TypedDict come primo argomento","typedDictInitsubclassParameter":"TypedDict non supporta __init_subclass__ parametro “{name}”","typedDictNotAllowed":"\\"TypedDict\\" non può essere usato in questo contesto","typedDictSecondArgDict":"Previsto parametro dict o keyword come secondo parametro","typedDictSecondArgDictEntry":"Voce di dizionario semplice prevista","typedDictSet":"Non è stato possibile assegnare l\'elemento in TypedDict","unaccessedClass":"La classe \\"{name}\\" non è accessibile","unaccessedFunction":"La classe \\"{name}\\" non è accessibile","unaccessedImport":"Non è possibile accedere all\'importazione \\"{name}\\"","unaccessedSymbol":"Non è possibile accedere a \\"{name}\\"","unaccessedVariable":"La variabile \\"{name}\\" non è accessibile","unannotatedFunctionSkipped":"L\'analisi della funzione \\"{name}\\" è stata ignorata perché non è annotata","unaryOperationNotAllowed":"Operatore unario non consentito nell\'annotazione di tipo","unexpectedAsyncToken":"È previsto che \\"def\\", \\"with\\" o \\"for\\" seguano \\"async\\"","unexpectedExprToken":"Token imprevisto alla fine dell\'espressione","unexpectedIndent":"Rientro imprevisto","unexpectedUnindent":"Riduci rientro non previsto","unhashableDictKey":"La chiave del dizionario deve essere hashable","unhashableSetEntry":"La voce set deve essere hashable","uninitializedAbstractVariables":"Le variabili definite nella classe di base astratta non vengono inizializzate nella classe finale \\"{classType}\\"","uninitializedInstanceVariable":"La variabile di istanza \\"{name}\\" non è inizializzata nel corpo della classe o nel metodo __init__","unionForwardReferenceNotAllowed":"Impossibile utilizzare la sintassi di unione con l\'operando stringa. Usare virgolette intorno all\'intera espressione","unionSyntaxIllegal":"La sintassi alternativa per le unioni richiede Python 3.10 o versione successiva","unionTypeArgCount":"L\'unione richiede due o più argomenti di tipo","unionUnpackedTuple":"L\'unione non può includere una tupla decompressa","unionUnpackedTypeVarTuple":"L\'unione non può includere un TypeVarTuple non compresso","unnecessaryCast":"Chiamata \\"cast\\" non necessaria; il tipo è già \\"{type}\\"","unnecessaryIsInstanceAlways":"Chiamata isinstance non necessaria; \\"{testType}\\" è sempre un\'istanza di \\"{classType}\\"","unnecessaryIsSubclassAlways":"Chiamata issubclass non necessaria; \\"{testType}\\" è sempre una sottoclasse di \\"{classType}\\"","unnecessaryPyrightIgnore":"Commento \\"# pyright: ignore\\" non necessario","unnecessaryPyrightIgnoreRule":"Regola \\"# pyright: ignore\\" non necessaria: \\"{name}\\"","unnecessaryTypeIgnore":"Commento \\"# tipo: ignora\\" non necessario","unpackArgCount":"Previsto un singolo argomento tipo dopo \\"Decomprimi\\"","unpackExpectedTypeVarTuple":"È previsto TypeVarTuple o tupla come argomento di tipo per Unpack","unpackExpectedTypedDict":"Previsto argomento di tipo TypedDict per Decomprimi","unpackIllegalInComprehension":"Operazione di decompressione non consentita nella comprensione","unpackInAnnotation":"Operatore di decompressione non consentito nell\'annotazione di tipo","unpackInDict":"Operazione di decompressione non consentita nei dizionari","unpackInSet":"Operatore di decompressione non consentito all’interno di un set","unpackNotAllowed":"La decompressione non è consentita in questo contesto","unpackOperatorNotAllowed":"L’operazione di decompressione non è consentita in questo contesto","unpackTuplesIllegal":"L\'operazione di decompressione non è consentita nelle tuple precedenti a Python 3.8","unpackedArgInTypeArgument":"Gli argomenti non compressi non possono essere usati negli elenchi di argomenti tipo","unpackedArgWithVariadicParam":"Non è possibile usare l\'argomento decompresso per il parametro TypeVarTuple","unpackedDictArgumentNotMapping":"L\'espressione dell\'argomento dopo ** deve essere un mapping con un tipo di chiave \\"str\\"","unpackedDictSubscriptIllegal":"L\'operatore di decompressione del dizionario nel pedice non è consentito","unpackedSubscriptIllegal":"L\'operatore di decompressione nel pedice richiede Python 3.11 o versione successiva","unpackedTypeVarTupleExpected":"Previsto TypeVarTuple decompresso; usa Unpack[{name1}] o *{name2}","unpackedTypedDictArgument":"Impossibile trovare una corrispondenza tra l\'argomento TypedDict non compresso e i parametri","unreachableCode":"Il codice non è raggiungibile","unreachableExcept":"La clausola Except non è raggiungibile perché l\'eccezione è già gestita","unsupportedDunderAllOperation":"L\'operazione su \\"__all__\\" non è supportata, di conseguenza l\'elenco dei simboli esportati potrebbe non essere corretto","unusedCallResult":"Il risultato dell\'espressione di chiamata è di tipo \\"{type}\\" e non è usato. Assegnare alla variabile \\"_\\" se è intenzionale","unusedCoroutine":"Il risultato della chiamata di funzione asincrona non viene usato. usare \\"await\\" o assegnare il risultato alla variabile","unusedExpression":"Il valore dell\'espressione non è utilizzato","varAnnotationIllegal":"Le annotazioni di tipo per le variabili richiedono Python 3.6 o versione successiva. Usare il commento di tipo per compatibilità con le versioni precedenti","variableFinalOverride":"La variabile \\"{name}\\" è contrassegnata come Final ed esegue l\'override della variabile non Final con lo stesso nome nella classe \\"{className}\\"","variadicTypeArgsTooMany":"L\'elenco di argomenti di tipo può contenere al massimo una tupla o TypeVarTuple non compressa","variadicTypeParamTooManyAlias":"L\'alias di tipo può avere al massimo un parametro di tipo TypeVarTuple, ma ne ha ricevuti più ({names})","variadicTypeParamTooManyClass":"La classe generica può avere al massimo un parametro di tipo TypeVarTuple, ma ne ha ricevuti più ({names})","walrusIllegal":"L\'operatore \\":=\\" richiede Python 3.8 o versione successiva","walrusNotAllowed":"L\'operatore \\":=\\" non è consentito in questo contesto senza parentesi circostanti","wildcardInFunction":"Importazione di caratteri jolly non consentita all\'interno di una classe o di una funzione","wildcardLibraryImport":"Importazione di caratteri jolly da una libreria non consentita","wildcardPatternTypePartiallyUnknown":"Il tipo acquisito dal modello con caratteri jolly è parzialmente sconosciuto","wildcardPatternTypeUnknown":"Il tipo acquisito dal criterio con caratteri jolly è sconosciuto","yieldFromIllegal":"L\'uso di \\"yield from\\" richiede Python 3.3 o versione successiva","yieldFromOutsideAsync":"\\"yield from\\" non consentito in una funzione asincrona","yieldOutsideFunction":"\\"yield\\" non consentito all\'esterno di una funzione o di un\'espressione lambda","yieldWithinListCompr":"\\"yield\\" non consentito all\'interno di una comprensione di elenco","zeroCaseStatementsFound":"L’istruzione Match deve includere almeno un’istruzione case","zeroLengthTupleNotAllowed":"Tupla di lunghezza zero non è consentita in questo contesto"},"DiagnosticAddendum":{"annotatedNotAllowed":"Non è possibile usare il modulo speciale \\"Annotato\\" con controlli di istanza e classe","argParam":"L\'argomento corrisponde al parametro \\"{paramName}\\"","argParamFunction":"L\'argomento corrisponde al parametro \\"{paramName}\\" nella funzione \\"{functionName}\\"","argsParamMissing":"Il parametro \\"*{paramName}\\" non ha un parametro corrispondente","argsPositionOnly":"Parametro di sola posizione non corrispondente; previsto {expected} ma ricevuto {received}","argumentType":"Il tipo di argomento è \\"{type}\\"","argumentTypes":"Tipi di argomento: ({types})","assignToNone":"Non è possibile assegnare il tipo al tipo \\"None\\"","asyncHelp":"Intendevi \\"async con\\"?","baseClassIncompatible":"La classe base \\"{baseClass}\\" non è compatibile con il tipo \\"{type}\\"","baseClassIncompatibleSubclass":"La classe base \\"{baseClass}\\" deriva da \\"{subclass}\\", che non è compatibile con il tipo \\"{type}\\"","baseClassOverriddenType":"La classe di base \\"{baseClass}\\" fornisce il tipo \\"{type}\\", di cui viene eseguito l\'override","baseClassOverridesType":"Override della classe base \\"{baseClass}\\" con tipo \\"{type}\\"","bytesTypePromotions":"Imposta disableBytesTypePromotions su false per abilitare il comportamento di innalzamento di livello del tipo per \\"bytearray\\" e \\"memoryview\\"","conditionalRequiresBool":"Il metodo __bool__ per il tipo \\"{operandType}\\" restituisce il tipo \\"{boolReturnType}\\" anziché \\"bool\\"","dataClassFieldLocation":"Dichiarazione di campo","dataClassFrozen":"\\"{name}\\" è bloccato","dataProtocolUnsupported":"“{name}” è un protocollo dati","descriptorAccessBindingFailed":"Impossibile associare il metodo \\"{name}\\" per la classe descrittore \\"{className}\\"","descriptorAccessCallFailed":"Impossibile chiamare il metodo \\"{name}\\" per la classe descrittore \\"{className}\\"","finalMethod":"Metodo finale","functionParamDefaultMissing":"Nel parametro \\"{name}\\" manca un argomento predefinito","functionParamName":"Nome del parametro non corrispondente: \\"{destName}\\" rispetto a \\"{srcName}\\"","functionParamPositionOnly":"Parametro di sola posizione non corrispondente; il parametro “{name}” non è di sola posizione","functionReturnTypeMismatch":"Il tipo restituito della funzione\\"{sourceType}\\" non è compatibile con il tipo \\"{destType}\\"","functionTooFewParams":"La funzione accetta un numero insufficiente di parametri posizionale. Previsto {expected} ma ricevuto {received}","functionTooManyParams":"La funzione accetta un numero eccessivo di parametri posizionale. Previsto {expected} ma ricevuto {received}","genericClassNotAllowed":"Tipo generico con argomenti di tipo non consentiti per i controlli di istanza o classe","incompatibleDeleter":"Il metodo di eliminazione delle proprietà non è compatibile","incompatibleGetter":"Il metodo getter della proprietà non è compatibile","incompatibleSetter":"Il metodo setter di proprietà non è compatibile","initMethodLocation":"Il metodo __init__ è definito nella classe \\"{type}\\"","initMethodSignature":"Firma del __init__ \\"{type}\\"","initSubclassLocation":"Il metodo __init_subclass__ è definito nella classe \\"{name}\\"","invariantSuggestionDict":"Prova a passare da \\"dict\\" a \\"Mapping\\", che è covariante nel tipo di valore","invariantSuggestionList":"Prova a passare da \\"list\\" a \\"Sequence\\", che è covariante","invariantSuggestionSet":"Provare a passare da \\"ste\\" a \\"contenitore\\" che è covariante","keyNotRequired":"\\"{name}\\" non è una chiave obbligatoria in \\"{type}\\", quindi l\'accesso potrebbe causare un\'eccezione di runtime","keyReadOnly":"\\"{name}\\" è una chiave di sola lettura in \\"{type}\\"","keyRequiredDeleted":"\\"{name}\\" è una chiave obbligatoria e non può essere eliminata","keyUndefined":"\\"{name}\\" non è una chiave definita in \\"{type}\\"","kwargsParamMissing":"Il parametro \\"**{paramName}\\" non ha un parametro corrispondente","listAssignmentMismatch":"Il tipo \\"{type}\\" non è compatibile con l\'elenco di destinazione","literalAssignmentMismatch":"impossibile assegnare \\"{sourceType}\\" al tipo \\"{destType}\\"","matchIsNotExhaustiveHint":"Se la gestione completa non è prevista, aggiungere \\"case _: pass\\"","matchIsNotExhaustiveType":"Tipo non gestito: \\"{type}\\"","memberAssignment":"L\'espressione di tipo \\"{type}\\" non può essere assegnata al membro \\"{name}\\" della classe \\"{classType}\\".","memberIsAbstract":"\\"{type}.{name}\\" non implementato","memberIsAbstractMore":"e {{count}} altro...","memberIsClassVarInProtocol":"“{name}” è definito come ClassVar nel protocollo","memberIsFinalInProtocol":"\\"{name}\\" è contrassegnato come Finale nel protocollo","memberIsInitVar":"Il membro \\"{name}\\" è un campo solo init","memberIsInvariant":"\\"{name}\\" è invariante perché modificabile","memberIsNotClassVarInClass":"\\"{name}\\" deve essere definito come ClassVar per essere compatibile con il protocollo","memberIsNotClassVarInProtocol":"“{name}” non è definito come ClassVar nel protocollo","memberIsNotFinalInProtocol":"\\"{name}\\" non è contrassegnato come Finale nel protocollo","memberIsWritableInProtocol":"\\"{name}\\" è scrivibile nel protocollo","memberSetClassVar":"Non è possibile assegnare il membro \\"{name}\\" tramite un\'istanza di classe perché è una ClassVar","memberTypeMismatch":"\\"{name}\\" è un tipo non compatibile","memberUnknown":"Il membro \\"{name}\\" è sconosciuto","metaclassConflict":"La metaclasse \\"{metaclass1}\\" è in conflitto con \\"{metaclass2}\\"","missingDeleter":"Manca il metodo di eliminazione delle proprietà","missingGetter":"Metodo getter proprietà mancante","missingSetter":"Metodo setter proprietà mancante","namedParamMissingInDest":"Il parametro della parola chiave \\"{name}\\" non è presente nella destinazione","namedParamMissingInSource":"Parametro della parola chiave \\"{name}\\" mancante nell’origine","namedParamTypeMismatch":"Non è possibile assegnare il parametro di parola chiave \\"{name}\\" di tipo \\"{sourceType}\\" al tipo \\"{destType}\\"","namedTupleNotAllowed":"Non è possibile usare NamedTuple per i controlli di istanze o classi","newMethodLocation":"Il metodo __new__ è definito nella classe \\"{type}\\"","newMethodSignature":"La firma del __new__ è \\"{type}\\"","newTypeClassNotAllowed":"Impossibile utilizzare la classe creata con NewType con controlli di classe e di istanza","noOverloadAssignable":"Nessuna funzione di overload corrisponde al tipo \\"{type}\\"","noneNotAllowed":"Non è possibile usare None per i controlli di istanze o classi","orPatternMissingName":"Nomi mancanti: {name}","overloadIndex":"L\'overload {index} è la corrispondenza più vicina","overloadNotAssignable":"Uno o più overload di \\"{name}\\" non sono assegnabili","overloadSignature":"La firma di overload è definita qui","overriddenMethod":"Metodo sottoposto a override","overriddenSymbol":"Simbolo sottoposto a override","overrideInvariantMismatch":"Il tipo di override \\"{overrideType}\\" non è uguale al tipo di base \\"{baseType}\\"","overrideIsInvariant":"La variabile è modificabile, quindi il relativo tipo è invariante","overrideNoOverloadMatches":"Nessuna firma di overload nell\'override è compatibile con il metodo di base","overrideNotClassMethod":"Il metodo di base è dichiarato come metodo di classe, ma l\'override non è","overrideNotInstanceMethod":"Il metodo di base è dichiarato come metodo di istanza, ma l’override non lo è","overrideNotStaticMethod":"Il metodo di base è dichiarato come metodo statico, ma l\'override non è","overrideOverloadNoMatch":"La sostituzione non gestisce tutti gli overload del metodo di base","overrideOverloadOrder":"Gli overload per il metodo di override devono essere nello stesso ordine del metodo di base","overrideParamKeywordNoDefault":"Parametro della parola chiave \\"{name}\\" non corrispondente: il parametro di base ha un valore di argomento predefinito, il parametro di override non è","overrideParamKeywordType":"Tipo del parametro della parola chiave \\"{name}\\" non corrispondente: il parametro di base è di tipo \\"{baseType}\\", il parametro di override è di tipo \\"{overrideType}\\"","overrideParamName":"Nome del parametro {index} non corrispondente: il parametro di base è denominato \\"{baseName}\\", il parametro di override è denominato \\"{overrideName}\\"","overrideParamNameExtra":"Parametro \\"{name}\\" mancante nella base","overrideParamNameMissing":"Parametro \\"{name}\\" mancante nell\'override","overrideParamNamePositionOnly":"Mancata corrispondenza del parametro {index}: il parametro di base \\"{baseName}\\" è un parametro di parola chiave, il parametro di override è di sola posizione","overrideParamNoDefault":"Parametro \\"{index}\\" non corrispondente: il parametro di base ha un valore di argomento predefinito, il parametro di override non è","overrideParamType":"Tipo di parametro {index} non corrispondente: il parametro di base è di tipo \\"{baseType}\\", il parametro di override è di tipo \\"{overrideType}\\"","overridePositionalParamCount":"Numero di parametri posizionali non corrispondente. Il metodo di base ne ha {baseCount}, ma l\'override ne ha {overrideCount}","overrideReturnType":"Tipo restituito non corrispondente: il metodo di base restituisce il tipo \\"{baseType}\\", l\'override restituisce il tipo \\"{overrideType}\\"","overrideType":"La classe di base definisce il tipo come \\"{type}\\"","paramAssignment":"Impossibile assegnare il parametro {index}: il tipo \\"{sourceType}\\" al tipo \\"{destType}\\"","paramSpecMissingInOverride":"Parametri ParamSpec mancanti nel metodo di override","paramType":"Tipo di parametro \\"{paramType}\\"","privateImportFromPyTypedSource":"Importa da \\"{module}\\"","propertyAccessFromProtocolClass":"Non è possibile accedere a una proprietà definita all\'interno di una classe di protocollo come variabile di classe","propertyMethodIncompatible":"Il metodo di proprietà \\"{name}\\" non è compatibile","propertyMethodMissing":"Metodo di proprietà \\"{name}\\" mancante nell\'override","propertyMissingDeleter":"La proprietà \\"{name}\\" non ha un deleter definito","propertyMissingSetter":"La proprietà \\"{name}\\" non ha un setter definito","protocolIncompatible":"\\"{sourceType}\\" non è compatibile con il protocollo \\"{destType}\\"","protocolMemberMissing":"\\"{name}\\" non è presente","protocolRequiresRuntimeCheckable":"La classe del protocollo deve essere @runtime_checkable in modo che sia possibile usarla con i controlli di istanza e classe","protocolSourceIsNotConcrete":"\\"{sourceType}\\" non è un tipo di classe concreto e non può essere assegnato al tipo \\"{destType}\\"","protocolUnsafeOverlap":"Gli attributi di “{name}” hanno gli stessi nomi del protocollo","pyrightCommentIgnoreTip":"Usare \\"# pyright: ignore[<diagnostic rules>] per eliminare la diagnostica per una singola riga","readOnlyAttribute":"L\'attributo \\"{name}\\" è di sola lettura","seeClassDeclaration":"Vedere la dichiarazione di classe","seeDeclaration":"Vedere la dichiarazione","seeFunctionDeclaration":"Vedere la dichiarazione di funzione","seeMethodDeclaration":"Vedere la dichiarazione del metodo","seeParameterDeclaration":"Vedere la dichiarazione del parametro","seeTypeAliasDeclaration":"Vedere la dichiarazione di alias di tipo","seeVariableDeclaration":"Vedere la dichiarazione di variabile","tupleAssignmentMismatch":"Il tipo \\"{type}\\" non è compatibile con la tupla di destinazione","tupleEntryTypeMismatch":"Il tipo della voce di tupla {entry} non è corretto","tupleSizeIndeterminateSrc":"Dimensioni tupla non corrispondenti; previsto {expected} ma ricevuto indeterminato","tupleSizeIndeterminateSrcDest":"Dimensioni della tupla non corrispondenti; previsto {expected} o più, ma ricevuto indeterminato","tupleSizeMismatch":"Dimensioni tupla non corrispondenti; previsto {expected} ma ricevuto {received}","tupleSizeMismatchIndeterminateDest":"Dimensioni della tupla non corrispondenti; previsto {expected} o più ma ricevuto {received}","typeAliasInstanceCheck":"Non è possibile usare l\'alias di tipo creato con l\'istruzione \\"type\\" con controlli di classe e istanza","typeAssignmentMismatch":"impossibile assegnare il tipo \\"{sourceType}\\" al tipo \\"{destType}\\"","typeBound":"Il tipo \\"{sourceType}\\" non è compatibile con il tipo associato \\"{destType}\\" per la variabile di tipo \\"{name}\\"","typeConstrainedTypeVar":"Il tipo \\"{type}\\" non è compatibile con la variabile di tipo vincolato \\"{name}\\"","typeIncompatible":"\\"{sourceType}\\" non è compatibile con \\"{destType}\\"","typeNotClass":"\\"{type}\\" non è una classe","typeNotStringLiteral":"\\"{type}\\" non è un valore letterale stringa","typeOfSymbol":"Il tipo di \\"{name}\\" è \\"{type}\\"","typeParamSpec":"Il tipo \\"{type}\\" non è compatibile con il \\"{name}\\" ParamSpec","typeUnsupported":"Il tipo \\"{type}\\" non è supportato","typeVarDefaultOutOfScope":"La variabile di tipo \\"{name}\\" non è nell\'ambito","typeVarIsContravariant":"Il parametro di tipo \\"{name}\\" è controvariante, ma \\"{sourceType}\\" non è un supertipo di \\"{destType}\\"","typeVarIsCovariant":"Il parametro di tipo \\"{name}\\" è covariante, ma \\"{sourceType}\\" non è un sottotipo di \\"{destType}\\"","typeVarIsInvariant":"Il parametro di tipo \\"{name}\\" è invariante, ma \\"{sourceType}\\" non è uguale a \\"{destType}\\"","typeVarNotAllowed":"TypeVar non consentito per i controlli di istanze o classi","typeVarTupleRequiresKnownLength":"Non è possibile associare TypeVarTuple a una tupla di lunghezza sconosciuta","typeVarUnnecessarySuggestion":"Usare invece {type}","typeVarUnsolvableRemedy":"Specificare un overload che specifica il tipo restituito quando l\'argomento non viene fornito","typeVarsMissing":"Variabili di tipo mancanti: {names}","typedDictBaseClass":"La classe \\"{type}\\" non è un TypedDict","typedDictClassNotAllowed":"Classe TypedDict non consentita per i controlli di istanze o classi","typedDictClosedExtraNotAllowed":"Non è possibile aggiungere l\'elemento \\"{name}\\"","typedDictClosedExtraTypeMismatch":"Non è possibile aggiungere l\'elemento \\"{name}\\" con tipo \\"{type}\\"","typedDictClosedFieldNotRequired":"Non è possibile aggiungere l\'elemento \\"{name}\\" perché deve essere NotRequired","typedDictExtraFieldNotAllowed":"\\"{name}\\" non è presente in \\"{type}\\"","typedDictExtraFieldTypeMismatch":"Il tipo di \\"{name}\\" non è compatibile con il tipo \\"__extra_items__\\" in \\"{type}\\"","typedDictFieldMissing":"\\"{name}\\" mancante nel \\"{type}\\"","typedDictFieldNotReadOnly":"\\"{name}\\" non è di sola lettura in \\"{type}\\"","typedDictFieldNotRequired":"\\"{name}\\" non è obbligatorio in \\"{type}\\"","typedDictFieldRequired":"\\"{name}\\" è obbligatorio in \\"{type}\\"","typedDictFieldTypeMismatch":"Il tipo \\"{type}\\" non può essere assegnato all’elemento \\"{name}\\"","typedDictFieldUndefined":"\\"{name}\\" è un elemento non definito nel tipo \\"{type}\\"","typedDictFinalMismatch":"\\"{sourceType}\\" non è compatibile con \\"{destType}\\" a causa di una @final mancata corrispondenza","typedDictKeyAccess":"Usare [\\"{name}\\"] per fare riferimento all\'elemento in TypedDict","typedDictNotAllowed":"Non è possibile usare TypedDict per i controlli di istanze o classi","unhashableType":"Il tipo \\"{type}\\" non è hashable","uninitializedAbstractVariable":"La variabile di istanza \\"{name}\\" è definita nella classe di base astratta \\"{classType}\\" ma non è inizializzata","unreachableExcept":"\\"{exceptionType}\\" è una sottoclasse di \\"{parentType}\\"","useDictInstead":"Usare Dict[T1, T2] per indicare un tipo di dizionario","useListInstead":"Usare List[T] per indicare un tipo di elenco o Union[T1, T2] per indicare un tipo di unione","useTupleInstead":"Usare tuple[T1, ..., Tn] per indicare un tipo di tupla o Union[T1, T2] per indicare un tipo di unione","useTypeInstead":"In alternativa, usare Type[T]","varianceMismatchForClass":"La varianza dell\'argomento tipo \\"{typeVarName}\\" non è compatibile con la classe di base \\"{className}\\"","varianceMismatchForTypeAlias":"La varianza dell\'argomento tipo \\"{typeVarName}\\" non è compatibile con \\"{typeAliasParam}\\""}}')},77388:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"型スタブの作成","createTypeStubFor":"\\"{moduleName}\\" の型スタブを作成する","executingCommand":"コマンドの実行中","filesToAnalyzeCount":"分析する {count} 個のファイル","filesToAnalyzeOne":"分析する 1 つのファイル","findingReferences":"参照を検索しています","organizeImports":"インポートを整理","renameShadowedFile":"\\"{oldFile}\\" の名前を \\"{newFile}\\" に変更します"},"Completion":{"autoImportDetail":"自動インポート","indexValueDetail":"インデックス値"},"Diagnostic":{"abstractMethodInvocation":"メソッド \\"{method}\\" は抽象メソッドであり、実装されていないため、呼び出すことができません","annotatedParamCountMismatch":"パラメーター注釈数の不一致: {expected} が必要ですが、{received} を受信しました","annotatedTypeArgMissing":"\\"Annotationed\\" には 1 つの型引数と 1 つ以上の注釈が必要です","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"型注釈では、書式指定文字列リテラル (f 文字列) を使用できません","annotationNotSupported":"このステートメントでは型注釈はサポートされていません","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"型注釈を複数の文字列リテラルにまたがることはできません","annotationStringEscape":"型注釈にエスケープ文字を含めることはできません","argAssignment":"型 \\"{argType}\\" の引数を型 \\"{paramType}\\" のパラメーターに割り当てることはできません","argAssignmentFunction":"型 \\"{argType}\\" の引数を関数 \\"{functionName}\\" の型 \\"{paramType}\\" のパラメーターに割り当てることはできません","argAssignmentParam":"型 \\"{argType}\\" の引数を型 \\"{paramType}\\" のパラメーター \\"{paramName}\\" に割り当てることはできません","argAssignmentParamFunction":"型 \\"{argType}\\" の引数を、関数 \\"{functionName}\\" の型 \\"{paramType}\\" のパラメーター \\"{paramName}\\" に割り当てることはできません","argMissingForParam":"パラメーター {name} に引数がありません","argMissingForParams":"パラメーター {names} に引数がありません","argMorePositionalExpectedCount":"さらに {expected} 個の位置引数が必要です","argMorePositionalExpectedOne":"さらに 1 つの位置引数が必要です","argPositional":"必要な位置引数","argPositionalExpectedCount":"{expected} 個の位置引数が必要です","argPositionalExpectedOne":"1 個の位置引数が必要です","argTypePartiallyUnknown":"引数の型が部分的に不明です","argTypeUnknown":"引数の型が不明です","assertAlwaysTrue":"Assert 式は常に true に評価されます","assertTypeArgs":"\\"assert_type\\" には 2 つの位置引数が必要です","assertTypeTypeMismatch":"\\"assert_type\\" の不一致: \\"{expected}\\" が必要ですが、\\"{received}\\" を受信しました","assignmentExprComprehension":"代入式のターゲット \\"{name}\\" は、ターゲットの理解と同じ名前を使用できません","assignmentExprContext":"代入式は、モジュール、関数、またはラムダ内に存在する必要があります","assignmentExprInSubscript":"下付き文字内の代入式は、Python 3.10 以降でのみサポートされます","assignmentInProtocol":"Protocol クラス内のインスタンス変数またはクラス変数は、クラス本体内で明示的に宣言する必要があります","assignmentTargetExpr":"式を代入先にすることはできません","asyncNotInAsyncFunction":"非同期関数の外部では \\"async\\" の使用は許可されていません","awaitIllegal":"\\"await\\" を使用するには Python 3.5 以降が必要です","awaitNotAllowed":"型の注釈で \\"await\\" は使用できません","awaitNotInAsync":"\\"await\\" は非同期関数内でのみ許可されます","backticksIllegal":"バッククォートで囲まれた式は、Python 3.x ではサポートされていません。代わりに repr を使用してください","baseClassCircular":"クラス自体から派生することはできません","baseClassFinal":"基底クラス \\"{type}\\" は final とマークされており、サブクラス化できません","baseClassIncompatible":"{type} の基底クラスは相互に互換性がありません","baseClassInvalid":"クラスへの引数は基底クラスである必要があります","baseClassMethodTypeIncompatible":"\\"{classType}\\" の基底クラスは、互換性のない方法でメソッド \\"{name}\\" を定義します","baseClassUnknown":"基底クラスの型が不明で、派生クラスの型が不明です","baseClassVariableTypeIncompatible":"クラス \\"{classType}\\" の基底クラスは、互換性のない方法で変数 \\"{name}\\" を定義します","binaryOperationNotAllowed":"型の注釈で 2 項演算子は使用できません","bindTypeMismatch":"\\"{type}\\" がパラメーター \\"{paramName}\\" に割り当てできないため、メソッド \\"{methodName}\\" をバインドできませんでした","breakOutsideLoop":"\\"break\\" はループ内でのみ使用できます","callableExtraArgs":"\\"Callable\\" に必要な型引数は 2 つだけです","callableFirstArg":"パラメーターの型リストまたは \\"...\\" が必要です。","callableNotInstantiable":"型 \\"{type}\\" をインスタンス化できません","callableSecondArg":"\\"Callable\\" の 2 番目の型引数として戻り値の型が必要です","casePatternIsIrrefutable":"参照不可能なパターンは、最後の case ステートメントに対してのみ許可されます","classAlreadySpecialized":"型 \\"{type}\\" は既に特殊化されています","classDecoratorTypeUnknown":"型指定されていないクラス デコレーターはクラスの型を隠します。デコレーターを無視する","classDefinitionCycle":"\\"{name}\\" のクラス定義は、それ自体に依存します","classGetItemClsParam":"__class_getitem__ override は \\"cls\\" パラメーターを受け取る必要があります","classMethodClsParam":"クラス メソッドは \\"cls\\" パラメーターを受け取る必要があります","classNotRuntimeSubscriptable":"クラス \\"{name}\\" の添字はランタイム例外を生成します。型の注釈を引用符で囲む","classPatternBuiltInArgPositional":"クラス パターンは位置指定サブパターンのみを受け入れます","classPatternPositionalArgCount":"クラス \\"{type}\\" の位置指定パターンが多すぎます。{expected} が必要ですが、{received} を受信しました","classPatternTypeAlias":"\\"{type}\\" は特殊な型エイリアスであるため、クラス パターンでは使用できません","classPropertyDeprecated":"クラス プロパティは Python 3.11 では非推奨であり、Python 3.13 ではサポートされなくなります","classTypeParametersIllegal":"クラス型パラメーターの構文には Python 3.12 以降が必要です","classVarFirstArgMissing":"\\"ClassVar\\" の後に型引数が必要です","classVarNotAllowed":"\\"ClassVar\\" はこのコンテキストでは許可されていません","classVarOverridesInstanceVar":"クラス変数 \\"{name}\\" は、クラス \\"{className}\\" の同じ名前のインスタンス変数をオーバーライドします","classVarTooManyArgs":"\\"ClassVar\\" の後に必要な型引数は 1 つだけです","classVarWithTypeVar":"\\"ClassVar\\" 型に型変数を含めることはできません","clsSelfParamTypeMismatch":"パラメーター \\"{name}\\" の型は、そのクラス \\"{classType}\\" のスーパータイプである必要があります","codeTooComplexToAnalyze":"コードが複雑すぎるため、分析できません。サブルーチンにリファクタリングするか、条件付きコード パスを減らすことで複雑さを軽減してください","collectionAliasInstantiation":"型 \\"{type}\\" はインスタンス化できません。代わりに \\"{alias}\\" を使用してください","comparisonAlwaysFalse":"型 \\"{leftType}\\" と \\"{rightType}\\" に重複がないため、条件は常に False に評価されます","comparisonAlwaysTrue":"型 \\"{leftType}\\" と \\"{rightType}\\" に重複がないため、条件は常に True に評価されます","comprehensionInDict":"他の辞書エントリと共に理解することはできません","comprehensionInSet":"他のセット エントリと共に理解を使用することはできません","concatenateContext":"\\"Concatenate\\" はこのコンテキストで許可されていません","concatenateParamSpecMissing":"\\"Concatenate\\" の最後の型引数は ParamSpec または \\"...\\" である必要があります","concatenateTypeArgsMissing":"\\"連結\\" には少なくとも 2 つの型引数が必要です","conditionalOperandInvalid":"型 \\"{type}\\" の条件オペランドが無効です","constantRedefinition":"\\"{name}\\" は定数であり (大文字であるため)、再定義できません","constructorNoArgs":"\\"{type}\\" コンストラクターに引数が必要ありません","constructorParametersMismatch":"クラス \\"{classType}\\" の__new__と__init__のシグネチャの不一致","containmentAlwaysFalse":"型 \\"{leftType}\\" と \\"{rightType}\\" に重複がないため、式は常に False に評価されます","containmentAlwaysTrue":"型 \\"{leftType}\\" と \\"{rightType}\\" に重複がないため、式は常に True に評価されます","continueInFinally":"finally 句内では \\"continue\\" を使用できません","continueOutsideLoop":"\\"continue\\" はループ内でのみ使用できます","coroutineInConditionalExpression":"常に True に評価される条件式参照コルーチン","dataClassBaseClassFrozen":"固定されていないクラスは、固定されているクラスから継承できません","dataClassBaseClassNotFrozen":"固定されたクラスは、固定されていないクラスから継承できません","dataClassConverterFunction":"型 \\"{argType}\\" の引数は、型 \\"{fieldType}\\" のフィールド \\"{fieldName}\\" の有効なコンバーターではありません","dataClassConverterOverloads":"{funcName}\\" のオーバーロードは、型 \\"{fieldType}\\" のフィールド \\"{fieldName}\\" に対して有効なコンバーターではありません","dataClassFieldWithDefault":"既定値のないフィールドは、既定値を持つフィールドの後に表示できません","dataClassFieldWithPrivateName":"データクラス フィールドはプライベート名を使用できません","dataClassFieldWithoutAnnotation":"型注釈のないデータクラス フィールドが原因でランタイム例外が発生する","dataClassPostInitParamCount":"Dataclass __post_init__ パラメーター数が正しくありません。InitVar フィールドの数は {expected} です","dataClassPostInitType":"フィールド \\"{fieldName}\\" の Dataclass __post_init__ メソッド パラメーターの型が一致しません","dataClassSlotsOverwrite":"__slots__はクラスで既に定義されています","dataClassTransformExpectedBoolLiteral":"静的に True または False に評価される式が必要です","dataClassTransformFieldSpecifier":"クラスまたは関数のタプルが必要ですが、型 \\"{type}\\" を受け取りました","dataClassTransformPositionalParam":"\\"dataclass_transform\\" に対するすべての引数はキーワード引数である必要があります","dataClassTransformUnknownArgument":"引数 \\"{name}\\" はdataclass_transform でサポートされていません","dataProtocolInSubclassCheck":"データ プロトコル (メソッド以外の属性を含む) は、issubclass 呼び出しで使用できません","declaredReturnTypePartiallyUnknown":"宣言された戻り値の型 \\"{returnType}\\" は部分的に不明です","declaredReturnTypeUnknown":"宣言された戻り値の型が不明です","defaultValueContainsCall":"パラメーターの既定値の式内では、関数呼び出しと変更可能なオブジェクトは許可されません","defaultValueNotAllowed":"\\"*\\" または \\"**\\" のパラメーターに既定値を指定することはできません","delTargetExpr":"式を削除できません","deprecatedClass":"クラス \\"{name}\\" は非推奨です","deprecatedConstructor":"クラス \\"{name}\\" のコンストラクターは非推奨です","deprecatedDescriptorDeleter":"記述子 \\"{name}\\" の \\"__delete__\\" メソッドは非推奨です","deprecatedDescriptorGetter":"記述子 \\"{name}\\" の \\"__get__\\" メソッドは非推奨です","deprecatedDescriptorSetter":"記述子 \\"{name}\\" の \\"__set__\\" メソッドは非推奨です","deprecatedFunction":"関数 \\"{name}\\" は非推奨です","deprecatedMethod":"クラス \\"{className}\\" のメソッド \\"{name}\\" は非推奨です","deprecatedPropertyDeleter":"プロパティ \\"{name}\\" の削除子は非推奨です","deprecatedPropertyGetter":"プロパティ \\"{name}\\" のゲッターは非推奨です","deprecatedPropertySetter":"プロパティ \\"{name}\\" のセッターは非推奨です","deprecatedType":"この型は Python {version} では非推奨です。代わりに\\"{replacement}\\"を使用してください","dictExpandIllegalInComprehension":"辞書の展開は理解できません","dictInAnnotation":"辞書式は型注釈では使用できません","dictKeyValuePairs":"辞書エントリにはキー/値のペアが含まれている必要があります","dictUnpackIsNotMapping":"ディクショナリ アンパック演算子に必要なマッピング","dunderAllSymbolNotPresent":"\\"{name}\\" は __all__ で指定されていますが、モジュールには存在しません","duplicateArgsParam":"許可される \\"*\\" パラメーターは 1 つだけです","duplicateBaseClass":"重複する基底クラスは許可されていません","duplicateCapturePatternTarget":"Capture ターゲット \\"{name}\\" を同じパターン内に複数回出現させることはできません","duplicateCatchAll":"許可される catch-all except 句は 1 つだけです","duplicateEnumMember":"列挙型メンバー \\"{name}\\" は既に宣言されています","duplicateGenericAndProtocolBase":"許可される Generic[...] または Protocol[...] 基底クラスは 1 つだけです","duplicateImport":"\\"{importName}\\" が複数回インポートされています","duplicateKeywordOnly":"\\"*\\" 区切り記号を 1 つだけ使用できます","duplicateKwargsParam":"許可される \\"**\\" パラメーターは 1 つだけです","duplicateParam":"パラメーター \\"{name}\\" が重複しています","duplicatePositionOnly":"許可される \\"/\\" パラメーターは 1 つだけです","duplicateStarPattern":"パターン シーケンスで使用できる \\"*\\" パターンは 1 つだけです","duplicateStarStarPattern":"許可されている \\"**\\" エントリは 1 つだけです","duplicateUnpack":"リストで許可されているアンパック操作は 1 つだけです","ellipsisAfterUnpacked":"\\"...\\" はアンパックされた TypeVarTuple または tuple と共に使用することはできません","ellipsisContext":"\\"...\\" はこのコンテキストでは許可されていません","ellipsisSecondArg":"\\"...\\" は2 つの引数の 2 番目の引数としてのみ使用できます","enumClassOverride":"列挙型クラス \\"{name}\\" は最終的なクラスであり、サブクラス化できません","exceptionGroupIncompatible":"例外グループの構文 (\\"except*\\") には Python 3.11 以降が必要です","exceptionTypeIncorrect":"\\"{type}\\" は BaseException から派生していません","exceptionTypeNotClass":"\\"{type}\\" は有効な例外クラスではありません","exceptionTypeNotInstantiable":"例外の種類 \\"{type}\\" のコンストラクターには 1 つ以上の引数が必要です","expectedAfterDecorator":"デコレーターの後に必要な関数またはクラス宣言","expectedArrow":"\\"->\\" の後に戻り値の型注釈が続く必要があります","expectedAsAfterException":"例外の種類の後に \\"as\\" が必要です","expectedAssignRightHandExpr":"\\"=\\" の右側に式が必要です","expectedBinaryRightHandExpr":"演算子の右側に式が必要です","expectedBoolLiteral":"True または False が必要です","expectedCase":"\\"case\\" ステートメントが必要です","expectedClassName":"必要なクラス名","expectedCloseBrace":"\\"{\\" は閉じられていません","expectedCloseBracket":"\\"[\\" は閉じられていません","expectedCloseParen":"\\"(\\" が閉じられませんでした","expectedColon":"\\":\\" が必要です","expectedComplexNumberLiteral":"パターン マッチングに必要な複素数リテラル","expectedDecoratorExpr":"Python 3.9 より前のデコレーターでは、式フォームはサポートされていません","expectedDecoratorName":"デコレーター名が必要です","expectedDecoratorNewline":"デコレーターの末尾に新しい行が必要です","expectedDelExpr":"\\"del\\" の後に式が必要です","expectedElse":"\\"else\\" が必要です","expectedEquals":"\\"=\\" が必要です","expectedExceptionClass":"例外クラスまたはオブジェクトが無効です","expectedExceptionObj":"例外オブジェクト、例外クラス、または None が必要です","expectedExpr":"式が必要です","expectedFunctionAfterAsync":"\\"async\\" の後に必要な関数定義","expectedFunctionName":"\\"def\\" の後に関数名が必要です","expectedIdentifier":"必要な識別子","expectedImport":"\\"import\\" が必要です","expectedImportAlias":"\\"as\\" の後にシンボルが必要です","expectedImportSymbols":"インポート後に 1 つ以上のシンボル名が必要です","expectedIn":"\'in\' が必要です","expectedInExpr":"\\"in\\" の後に式が必要です","expectedIndentedBlock":"インデントされたブロックが必要です","expectedMemberName":"\\".\\" の後にメンバー名が必要です。","expectedModuleName":"必要なモジュール名","expectedNameAfterAs":"\\"as\\" の後にシンボル名が必要です","expectedNamedParameter":"キーワード パラメーターは \\"*\\" の後に続く必要があります","expectedNewline":"改行が必要です","expectedNewlineOrSemicolon":"ステートメントは改行またはセミコロンで区切る必要があります","expectedOpenParen":"\\"(\\" が必要です","expectedParamName":"必要なパラメーター名","expectedPatternExpr":"必要なパターン式","expectedPatternSubjectExpr":"必要なパターンの件名の式","expectedPatternValue":"\\"a.b\\" 形式のパターン値式が必要です","expectedReturnExpr":"\\"return\\" の後に式が必要です","expectedSliceIndex":"インデックスまたはスライス式が必要です","expectedTypeNotString":"必要な型ですが、文字列リテラルを受け取りました","expectedTypeParameterName":"必要な型パラメーター名","expectedYieldExpr":"yield ステートメントで必要な式","finalClassIsAbstract":"クラス \\"{type}\\" は final とマークされており、すべての抽象なシンボルを実装する必要があります","finalContext":"\\"Final\\" はこのコンテキストでは許可されていません","finalMethodOverride":"メソッド \\"{name}\\" は、クラス \\"{className}\\" で定義されている最終的なメソッドをオーバーライドできません","finalNonMethod":"関数 \\"{name}\\" はメソッドではないため、@final としてマークできません","finalReassigned":"\\"{name}\\" は Final として宣言されており、再割り当てできません","finalRedeclaration":"\\"{name}\\" は以前に Final として宣言されました","finalRedeclarationBySubclass":"親クラス \\"{className}\\" が Final として宣言しているため、\\"{name}\\" を再宣言できません","finalTooManyArgs":"\\"Final\\" の後に 1 つの型引数が必要です","finalUnassigned":"\\"{name}\\" は Final と宣言されていますが、値は割り当てされていません","formatStringBrace":"f-string リテラル内では、1 つの閉じかっこは使用できません。二重閉じかっこを使用してください","formatStringBytes":"書式指定文字列リテラル (f 文字列) をバイナリにすることはできません","formatStringDebuggingIllegal":"F-string デバッグ指定子 \\"=\\" には Python 3.8 以降が必要です","formatStringEscape":"Python 3.12 より前の f-string の式部分ではエスケープ シーケンス (バックスラッシュ) は使用できません","formatStringExpectedConversion":"f-string の \\"!\\" の後に変換指定子が必要です","formatStringIllegal":"書式文字列リテラル (f 文字列) には Python 3.6 以降が必要です","formatStringInPattern":"書式指定文字列はパターンでは使用できません","formatStringNestedFormatSpecifier":"書式指定子内で入れ子になった式が深すぎます","formatStringNestedQuote":"f-string 内で入れ子になった文字列は、Python 3.12 より前の f-string と同じ引用符文字を使用できません","formatStringUnicode":"書式指定文字列リテラル (f 文字列) を Unicode にすることはできません","formatStringUnterminated":"f-string の式が終了していません。\\"}\\" が必要です","functionDecoratorTypeUnknown":"型指定されていない関数デコレーターは、関数の型を隠します。デコレーターを無視しています","functionInConditionalExpression":"常に True に評価される条件式参照関数","functionTypeParametersIllegal":"関数型パラメーターの構文には Python 3.12 以降が必要です","futureImportLocationNotAllowed":"__future__ からのインポートは、ファイルの先頭にある必要があります","generatorAsyncReturnType":"非同期ジェネレーター関数の戻り値の型は、\\"AsyncGenerator[{yieldType}, Any]\\" と互換性がある必要があります","generatorNotParenthesized":"ジェネレーター式は、唯一の引数でない場合はかっこで囲む必要があります","generatorSyncReturnType":"ジェネレーター関数の戻り値の型は、\\"Generator[{yieldType}, Any, Any]\\" と互換性がある必要があります","genericBaseClassNotAllowed":"\\"Generic\\" 基底クラスを型パラメーター構文と共に使用することはできません","genericClassAssigned":"ジェネリック クラス型を割り当てることはできません","genericClassDeleted":"ジェネリック クラス型を削除できません","genericInstanceVariableAccess":"クラスを介したジェネリック インスタンス変数へのアクセスがあいまいです","genericNotAllowed":"\\"Generic\\" はこのコンテキストでは無効です","genericTypeAliasBoundTypeVar":"クラス内のジェネリック型エイリアスはバインドされた型変数 {names} を使用できません","genericTypeArgMissing":"\\"Generic\\" には少なくとも 1 つの型引数が必要です","genericTypeArgTypeVar":"\\"Generic\\" の型引数は型変数である必要があります","genericTypeArgUnique":"\\"Generic\\" の型引数は一意である必要があります","globalReassignment":"\\"{name}\\" はグローバル宣言の前に割り当てられます","globalRedefinition":"\\"{name}\\" は既にグローバルに宣言されています","implicitStringConcat":"暗黙的な文字列連結は許可されていません","importCycleDetected":"インポート チェーンで循環が検出されました","importDepthExceeded":"インポート チェーンの深さが {depth} を超えました","importResolveFailure":"インポート \\"{importName}\\" を解決できませんでした","importSourceResolveFailure":"インポート \\"{importName}\\" をソースから解決できませんでした","importSymbolUnknown":"\\"{name}\\" は不明なインポート シンボルです","incompatibleMethodOverride":"メソッド \\"{name}\\" は互換性のない方法でクラス \\"{className}\\" をオーバーライドします","inconsistentIndent":"元のサイズが前のインデントと一致しません","inconsistentTabs":"インデントでのタブとスペースの一貫性のない使用","initMustReturnNone":"\\"__init__\\" の戻り値の型は None でなければなりません","initSubclassCallFailed":"__init_subclass__ メソッドのキーワード引数が正しくありません","initSubclassClsParam":"__class_getitem__ override は \\"cls\\" パラメーターを受け取る必要があります","initVarNotAllowed":"\\"InitVar\\" はこのコンテキストでは許可されていません","instanceMethodSelfParam":"インスタンス メソッドは \\"self\\" パラメーターを受け取る必要があります","instanceVarOverridesClassVar":"インスタンス変数 \\"{name}\\" は、クラス \\"{className}\\" の同じ名前のクラス変数をオーバーライドします","instantiateAbstract":"抽象クラス \\"{type}\\" をインスタンス化できません","instantiateProtocol":"プロトコル クラス \\"{type}\\" をインスタンス化できません","internalBindError":"ファイル \\"{file}\\" のバインド中に内部エラーが発生しました: {message}","internalParseError":"ファイル \\"{file}\\" の解析中に内部エラーが発生しました: {message}","internalTypeCheckingError":"ファイル \\"{file}\\" の種類チェック中に内部エラーが発生しました: {message}","invalidIdentifierChar":"識別子の無効な文字","invalidStubStatement":"ステートメントは型スタブ ファイル内では意味がありません","invalidTokenChars":"トークン内の無効な文字 \\"{text}\\"","isInstanceInvalidType":"\\"isinstance\\" の 2 番目の引数は、クラスのクラスまたはタプルである必要があります","isSubclassInvalidType":"\\"issubclass\\" の 2 番目の引数は、クラスまたはクラスのタプルである必要があります","keyValueInSet":"キー/値のペアはセット内では使用できません","keywordArgInTypeArgument":"キーワード引数は型引数リストでは使用できません","keywordOnlyAfterArgs":"キーワードのみの引数の区切り記号は、\\"*\\" パラメーターの後には使用できません","keywordParameterMissing":"1 つ以上のキーワード パラメーターが \\"*\\" パラメーターの後に続く必要があります","keywordSubscriptIllegal":"添字内のキーワード引数はサポートされていません","lambdaReturnTypePartiallyUnknown":"ラムダの戻り値の型、\\"{returnType}\\" が部分的に不明です","lambdaReturnTypeUnknown":"ラムダの戻り値の型が不明です","listAssignmentMismatch":"型 \\"{type}\\" の式をターゲット リストに割り当てることはできません","listInAnnotation":"型注釈ではリスト式は使用できません","literalEmptyArgs":"\\"Literal\\" の後に 1 つ以上の型引数が必要です","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"\\"Literal\\" は、型引数なしでこのコンテキストでは使用できません","literalNotCallable":"リテラル型をインスタンス化できません","literalUnsupportedType":"\\"Literal\\" の型引数は None、リテラル値 (int、bool、str、または bytes)、または列挙型の値である必要があります","matchIncompatible":"Match ステートメントには Python 3.10 以降が必要です","matchIsNotExhaustive":"match ステートメント内のケースでは、すべての値が完全に処理されるわけではありません","maxParseDepthExceeded":"解析の最大深さを超えました。式を小さい部分式に分割する","memberAccess":"型 \\"{type}\\" のメンバー \\"{name}\\" にアクセスできません","memberDelete":"型 \\"{type}\\" のメンバー \\"{name}\\" を削除できません","memberSet":"型 \\"{type}\\" にメンバー \\"{name}\\" を割り当てることができません","metaclassConflict":"派生クラスのメタクラスは、そのすべての基底クラスのメタクラスのサブクラスである必要があります","metaclassDuplicate":"指定できるメタクラスは 1 つだけです","metaclassIsGeneric":"メタクラスをジェネリックにすることはできません","methodNotDefined":"\\"{name}\\" メソッドが定義されていません","methodNotDefinedOnType":"型 \\"{type}\\" に \\"{name}\\" メソッドが定義されていません","methodOrdering":"一貫性のあるメソッドの順序を作成できません","methodOverridden":"\\"{name}\\" は、クラス \\"{className}\\" の同じ名前のメソッドを互換性のない型 \\"{type}\\" でオーバーライドします","methodReturnsNonObject":"\\"{name}\\" メソッドはオブジェクトを返しません","missingSuperCall":"メソッド \\"{methodName}\\" は親クラスで同じ名前のメソッドを呼び出しません","moduleAsType":"モジュールを型として使用することはできません","moduleNotCallable":"モジュールは呼び出し可能ではありません","moduleUnknownMember":"\\"{memberName}\\" はモジュール \\"{moduleName}\\" の既知のメンバーではありません","namedExceptAfterCatchAll":"名前付き except 句は、catch-all except 句の後には使用できません","namedParamAfterParamSpecArgs":"ParamSpec args パラメーターの後にキーワード パラメーター \\"{name}\\" をシグネチャに含めることはできません","namedTupleEmptyName":"名前付きタプル内の名前を空にすることはできません","namedTupleEntryRedeclared":"親クラス \\"{className}\\" が名前付きタプルであるため、\\"{name}\\" をオーバーライドできません","namedTupleFirstArg":"最初の引数として名前付きタプル クラス名が必要です","namedTupleMultipleInheritance":"NamedTuple による複数の継承はサポートされていません","namedTupleNameKeyword":"フィールド名をキーワードにすることはできません","namedTupleNameType":"エントリ名と型を指定する 2 エントリタプルが必要です","namedTupleNameUnique":"名前付きタプル内の名前は一意である必要があります","namedTupleNoTypes":"\\"namedtuple\\" はタプル エントリに型を提供しません。代わりに \\"NamedTuple\\" を使用してください","namedTupleSecondArg":"2 番目の引数として名前付きタプル エントリ リストが必要です","newClsParam":"__new__ override は \\"cls\\" パラメーターを受け取る必要があります","newTypeAnyOrUnknown":"NewType の 2 番目の引数は、Any や Unknown ではなく、既知のクラスでなければなりません","newTypeBadName":"NewType の最初の引数は文字列リテラルである必要があります","newTypeLiteral":"NewType はリテラル型では使用できません","newTypeNameMismatch":"NewType は同じ名前の変数に割り当てる必要があります","newTypeNotAClass":"NewType の 2 番目の引数としてクラスが必要です","newTypeParamCount":"NewType には 2 つの位置引数が必要です","newTypeProtocolClass":"NewType は構造型 (プロトコルまたは TypedDict クラス) では使用できません","noOverload":"指定された引数に一致する \\"{name}\\" のオーバーロードがありません","noReturnContainsReturn":"戻り値の型が \\"NoReturn\\" として宣言されている関数に return ステートメントを含めることはできません","noReturnContainsYield":"戻り値の型 \\"NoReturn\\" を宣言した関数に yield ステートメントを含めることはできません","noReturnReturnsNone":"戻り値の型が \\"NoReturn\\" として宣言されている関数は \\"None\\" を返すことができません","nonDefaultAfterDefault":"既定以外の引数は既定の引数の後に続きます","nonLocalInModule":"モジュール レベルでは非ローカル宣言は許可されません","nonLocalNoBinding":"非ローカル \\"{name}\\" のバインドが見つかりません","nonLocalReassignment":"\\"{name}\\" は非ローカル宣言の前に割り当てられます","nonLocalRedefinition":"\\"{name}\\" は既に非ローカルとして宣言されています","noneNotCallable":"\\"None\\" 型のオブジェクトを呼び出すことはできません","noneNotIterable":"型 \\"None\\" のオブジェクトを反復可能な値として使用することはできません","noneNotSubscriptable":"\\"None\\" 型のオブジェクトは添字可能ではありません","noneNotUsableWith":"\\"None\\" 型のオブジェクトを \\"with\\" と共に使用することはできません","noneOperator":"演算子 \\"{operator}\\" は \\"None\\" ではサポートされていません","noneUnknownMember":"\\"{name}\\" は \\"None\\" の既知のメンバーではありません","notRequiredArgCount":"\\"NotRequired\\" の後に 1 つの型引数が必要です","notRequiredNotInTypedDict":"\\"NotRequired\\" はこのコンテキストでは許可されていません","objectNotCallable":"型 \\"{type}\\" のオブジェクトは呼び出し可能ではありません","obscuredClassDeclaration":"クラス宣言 \\"{name}\\" は、同じ名前の宣言によって隠されています","obscuredFunctionDeclaration":"関数宣言 \\"{name}\\" は、同じ名前の宣言によって隠されています","obscuredMethodDeclaration":"メソッド宣言 \\"{name}\\" は、同じ名前の宣言によって隠されています","obscuredParameterDeclaration":"パラメーター宣言 \\"{name}\\" は、同じ名前の宣言によって隠されています","obscuredTypeAliasDeclaration":"型エイリアス宣言 \\"{name}\\" は、同じ名前の宣言によって隠されています","obscuredVariableDeclaration":"宣言 \\"{name}\\" は、同じ名前の宣言によって隠されています","operatorLessOrGreaterDeprecated":"演算子 \\"<>\\" は Python 3 ではサポートされていません。代わりに \\"!=\\" を使用してください","optionalExtraArgs":"\\"Optional\\" の後に 1 つの型引数が必要です","orPatternIrrefutable":"参照不可能なパターンは、\\"or\\" パターンの最後のサブパターンとしてのみ許可されます","orPatternMissingName":"\\"or\\" パターン内のすべてのサブパターンは、同じ名前をターゲットにする必要があります","overlappingKeywordArgs":"入力された辞書はキーワード パラメーターと重複しています: {names}","overlappingOverload":"パラメーターがオーバーロード {obscuredBy} と重複しているため、\\"{name}\\" のオーバーロード {obscured} は使用されません","overloadAbstractMismatch":"オーバーロードされたメソッドはすべて抽象である必要があります。","overloadClassMethodInconsistent":"\\"{name}\\" のオーバーロードでは、@classmethod を不整合に使用します","overloadFinalInconsistencyImpl":"\\"{name}\\" のオーバーロードは @final としてマークされていますが、実装は @final としてマークされていません","overloadFinalInconsistencyNoImpl":"\\"{name}\\" のオーバーロード {index} は @final としてマークされていますが、オーバーロード 1 は @final としてマークされていません","overloadImplementationMismatch":"オーバーロードされた実装がオーバーロード {index} のシグネチャと一致しません","overloadReturnTypeMismatch":"\\"{name}\\" のオーバーロード {prevIndex} はオーバーロード {newIndex} と重複し、互換性のない型を返します","overloadStaticMethodInconsistent":"\\"{name}\\" のオーバーロードでは、@staticmethod を不整合に使用します","overloadWithoutImplementation":"\\"{name}\\" はオーバーロードとしてマークされていますが、実装は提供されていません","overriddenMethodNotFound":"メソッド \\"{name}\\" はオーバーライドとしてマークされていますが、同じ名前の基本メソッドが存在しません","overrideDecoratorMissing":"メソッド \\"{name}\\" はオーバーライドとしてマークされていませんが、クラス \\"{className}\\" のメソッドをオーバーライドしています","paramAfterKwargsParam":"パラメーターは \\"**\\" パラメーターの後に続けることはできません","paramAlreadyAssigned":"パラメーター \\"{name}\\" は既に割り当て済みです","paramAnnotationMissing":"パラメーター \\"{name}\\" に型注釈がありません","paramAssignmentMismatch":"型 \\"{sourceType}\\" の式を型 \\"{paramType}\\" のパラメーターに割り当てることはできません","paramNameMissing":"\\"{name}\\" という名前のパラメーターがありません","paramSpecArgsKwargsUsage":"ParamSpec の \\"args\\" メンバーと \\"kwargs\\" メンバーの両方が関数シグネチャ内に含まれている必要があります","paramSpecArgsMissing":"ParamSpec \\"{type}\\" の引数がありません","paramSpecArgsUsage":"ParamSpec の \\"args\\" メンバーは、*args パラメーターと共に使用する場合にのみ有効です","paramSpecAssignedName":"ParamSpec は 、\\"{name}\\" という名前の変数に割り当てる必要があります","paramSpecContext":"ParamSpec はこのコンテキストでは許可されていません","paramSpecDefaultNotTuple":"ParamSpec の既定値には、省略記号、タプル式、または ParamSpec が必要です","paramSpecFirstArg":"最初の引数として ParamSpec の名前が必要です","paramSpecKwargsUsage":"ParamSpec の \\"kwargs\\" メンバーは、**kwargs パラメーターと共に使用する場合にのみ有効です","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" はこのコンテキストでは意味がありません","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" は、戻り値の型内の呼び出し可能なスコープであり、関数本体では参照できません","paramSpecUnknownArg":"ParamSpec は複数の引数をサポートしていません","paramSpecUnknownMember":"\\"{name}\\" は ParamSpec の既知のメンバーではありません","paramSpecUnknownParam":"\\"{name}\\" は ParamSpec に対する不明なパラメーターです","paramTypeCovariant":"共変の型変数はパラメーター型では使用できません","paramTypePartiallyUnknown":"パラメーター \\"{paramName}\\" の型が部分的に不明です","paramTypeUnknown":"パラメーター \\"{paramName}\\" の型が不明です","parenthesizedContextManagerIllegal":"\\"with\\" ステートメント内のかっこには Python 3.9 以降が必要です","patternNeverMatches":"サブジェクトの種類 \\"{type}\\" のパターンは一致しません","positionArgAfterNamedArg":"キーワード引数の後に位置引数を指定することはできません","positionOnlyAfterArgs":"\\"*\\" パラメーターの後に位置のみのパラメーターの区切り文字を使用することはできません","positionOnlyAfterKeywordOnly":"\\"/\\" パラメーターは 、\\"*\\" パラメーターの前に指定する必要があります","positionOnlyAfterNon":"位置のみのパラメーターの後に位置のみのパラメーターを指定することはできません","positionOnlyFirstParam":"位置のみのパラメーターの区切り記号を最初のパラメーターとして使用することはできません","positionOnlyIncompatible":"位置のみのパラメーターの区切り文字には Python 3.8 以降が必要です","privateImportFromPyTypedModule":"\\"{name}\\" はモジュール \\"{module}\\" からエクスポートされていません","privateUsedOutsideOfClass":"\\"{name}\\" はプライベートであり、宣言されているクラスの外部で使用されます","privateUsedOutsideOfModule":"\\"{name}\\" はプライベートであり、それが宣言されているモジュールの外部で使用されています","propertyOverridden":"\\"{name}\\" は、クラス \\"{className}\\" の同じ名前のプロパティを誤ってオーバーライドします","propertyStaticMethod":"静的メソッドは、プロパティ getter、setter、または deleter では許可されていません","protectedUsedOutsideOfClass":"\\"{name}\\" は保護され、宣言されているクラスの外部で使用されます","protocolBaseClass":"プロトコル クラス \\"{classType}\\" は非プロトコル クラス \\"{baseType}\\" から派生できません","protocolBaseClassWithTypeArgs":"型パラメーター構文を使用する場合、Protocol クラスでは型引数を使用できません","protocolIllegal":"\\"Protocol\\" を使用するには Python 3.7 以降が必要です","protocolNotAllowed":"\\"Protocol\\" はこのコンテキストでは使用できません","protocolUnsafeOverlap":"クラスが安全でない方法で \\"{name}\\" と重複しており、実行時に一致する可能性があります","protocolVarianceContravariant":"ジェネリック プロトコル \\"{class}\\" で使用される型変数 \\"{variable}\\" は反変である必要があります","protocolVarianceCovariant":"ジェネリック プロトコル \\"{class}\\" で使用される型変数 \\"{variable}\\" は共変である必要があります","protocolVarianceInvariant":"ジェネリック プロトコル \\"{class}\\" で使用される型変数 \\"{variable}\\" は不変である必要があります","pyrightCommentInvalidDiagnosticBoolValue":"Pyright コメント ディレクティブの後には \\"=\\" と値 true または false を指定する必要があります","pyrightCommentInvalidDiagnosticSeverityValue":"Pyright コメント ディレクティブの後に \\"=\\" を指定し、true、false、エラー、警告、情報、または none の値を指定する必要があります","pyrightCommentMissingDirective":"Pyright コメントの後にはディレクティブ (基本または厳格) または診断規則を指定する必要があります","pyrightCommentNotOnOwnLine":"ファイル レベルの設定を制御するために使用する Pyright コメントは、独自の行に表示する必要があります","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" は、azureight コメントの不明な診断規則です","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" は、pyright コメントに対して無効な値です。true、false、エラー、警告、情報、またはなしが必要です","pyrightCommentUnknownDirective":"\\"{directive}\\" は、pyright コメントの不明なディレクティブです。\\"strict\\" または \\"basic\\" が必要です","readOnlyArgCount":"\\"ReadOnly\\" の後に 1 つの型引数が必要です","readOnlyNotInTypedDict":"\\"ReadOnly\\" はこのコンテキストでは許可されていません","recursiveDefinition":"\\"{name}\\" の型は、それ自体を参照しているため、特定できませんでした","relativeImportNotAllowed":"相対インポートは、\\"import .a\\" フォームでは使用できません。代わりに \\"from . import a\\" を使用します。","requiredArgCount":"\\"Required\\" の後に 1 つの型引数が必要です","requiredNotInTypedDict":"このコンテキストでは\\"必須\\" は許可されていません","returnInAsyncGenerator":"値を持つ return ステートメントは、非同期ジェネレーターでは使用できません","returnMissing":"戻り値の型が \\"{returnType}\\" として宣言されている関数は、すべてのコード パスで値を返す必要があります","returnOutsideFunction":"\\"return\\" は関数内でのみ使用できます","returnTypeContravariant":"反変の型変数は戻り値の型では使用できません","returnTypeMismatch":"型 \\"{exprType}\\" の式を戻り値の型 \\"{returnType}\\" に割り当てることはできません","returnTypePartiallyUnknown":"戻り値の型 \\"{returnType}\\" は部分的に不明です","returnTypeUnknown":"戻り値の型が不明です","revealLocalsArgs":"\\"reveal_locals\\" 呼び出しに引数が必要ありません","revealLocalsNone":"このスコープにはローカルがありません","revealTypeArgs":"\\"reveal_type\\" 呼び出しに 1 つの位置引数が必要です","revealTypeExpectedTextArg":"関数 \\"reveal_type\\" の \\"expected_text\\" 引数は、str リテラル値である必要があります","revealTypeExpectedTextMismatch":"入力テキストの不一致;\\"{expected}\\" が必要ですが、\\"{received}\\" を受信しました","revealTypeExpectedTypeMismatch":"型が一致しません。\\"{expected}\\" が必要ですが、\\"{received}\\" を受信しました","selfTypeContext":"\\"Self\\" はこのコンテキストでは無効です","selfTypeMetaclass":"\\"Self\\" はメタクラス (\\"type\\" のサブクラス) 内では使用できません","selfTypeWithTypedSelfOrCls":"\\"Self\\" は、\\"Self\\" 以外の型注釈を持つ \'self\' または \'cls\' パラメーターを持つ関数では使用できません","setterGetterTypeMismatch":"プロパティ セッター値の型は、getter の戻り値の型に割り当てできません","singleOverload":"\\"{name}\\" はオーバーロードとしてマークされていますが、追加のオーバーロードがありません","slotsAttributeError":"__slots__で \\"{name}\\" が指定されていません","slotsClassVarConflict":"\\"{name}\\" が __slots__ で宣言されたインスタンス変数と競合しています","starPatternInAsPattern":"スター パターンを \\"as\\" ターゲットと共に使用することはできません","starPatternInOrPattern":"スター パターンを他のパターン内で OR 化することはできません","starStarWildcardNotAllowed":"** はワイルドカード \\"_\\" と共に使用できません","staticClsSelfParam":"静的メソッドに \\"self\\" または \\"cls\\" パラメーターを指定することはできません","stdlibModuleOverridden":"\\"{path}\\" は stdlib モジュール \\"{name}\\" をオーバーライドしています","stringNonAsciiBytes":"非 ASCII 文字はバイト文字列リテラルでは使用できません","stringNotSubscriptable":"型注釈では文字列式を添字にすることはできません。注釈全体を引用符で囲んでください","stringUnsupportedEscape":"文字列リテラルでサポートされていないエスケープ シーケンス","stringUnterminated":"文字列リテラルが未終了です","stubFileMissing":"\\"{importName}\\" のスタブ ファイルが見つかりません","stubUsesGetAttr":"スタブ ファイルの種類が不完全です。\\"__getattr__\\" はモジュールの型エラーを隠します","sublistParamsIncompatible":"Python 3.x ではサブリスト パラメーターはサポートされていません","superCallArgCount":"\\"super\\" 呼び出しには 2 つ以下の引数が必要です","superCallFirstArg":"\\"super\\" 呼び出しの最初の引数としてクラス型が必要ですが、\\"{type}\\" を受け取りました","superCallSecondArg":"\\"super\\" 呼び出しの 2 番目の引数は、\\"{type}\\" から派生したオブジェクトまたはクラスである必要があります","superCallZeroArgForm":"\\"super\\" 呼び出しの 0 引数形式は、メソッド内でのみ有効です","superCallZeroArgFormStaticMethod":"\\"super\\" 呼び出しの 0 引数形式は、静的メソッド内では有効ではありません","symbolIsPossiblyUnbound":"\\"{name}\\" はバインドされていない可能性があります","symbolIsUnbound":"\\"{name}\\" はバインドされていません","symbolIsUndefined":"\\"{name}\\" が定義されていません","symbolOverridden":"\\"{name}\\" はクラス \\"{className}\\" の同じ名前のシンボルをオーバーライドします","ternaryNotAllowed":"型の注釈で 3 項式 は使用できません","totalOrderingMissingMethod":"total_orderingを使用するには、クラスで \\"__lt__\\"、\\"__le__\\"、\\"__gt__\\"、または \\"__ge__\\" のいずれかを定義する必要があります","trailingCommaInFromImport":"末尾のコンマはかっこで囲まずには使用できません","tryWithoutExcept":"Try ステートメントには、少なくとも 1 つの except 句または finally 句が必要です","tupleAssignmentMismatch":"型 \\"{type}\\" の式をターゲット タプルに割り当てることはできません","tupleInAnnotation":"タプル式は型注釈では使用できません","tupleIndexOutOfRange":"インデックス {index} が型 {type} の範囲外です","typeAliasIllegalExpressionForm":"型エイリアス定義の式フォームが無効です","typeAliasIsRecursiveDirect":"型エイリアス \\"{name}\\" は、その定義でそれ自体を使用できません","typeAliasNotInModuleOrClass":"TypeAlias は、モジュールまたはクラススコープ内でのみ定義できます","typeAliasRedeclared":"\\"{name}\\" は TypeAlias として宣言されており、1 回だけ割り当てることができます","typeAliasStatementBadScope":"type ステートメントは、モジュールまたはクラススコープ内でのみ使用できます","typeAliasStatementIllegal":"型エイリアス ステートメントには Python 3.12 以降が必要です","typeAliasTypeBaseClass":"\\"type\\" ステートメントで定義された型エイリアスを基底クラスとして使用することはできません","typeAliasTypeMustBeAssigned":"TypeAliasType は、型エイリアスと同じ名前の変数に割り当てる必要があります","typeAliasTypeNameArg":"TypeAliasType の最初の引数は、型エイリアスの名前を表す文字列リテラルである必要があります","typeAliasTypeNameMismatch":"型エイリアスの名前は、それが割り当てられている変数の名前と一致する必要があります","typeAliasTypeParamInvalid":"型パラメーター リストは、TypeVar、TypeVarTuple、または ParamSpec のみを含むタプルである必要があります","typeAnnotationCall":"型式では呼び出し式を使用できません","typeAnnotationVariable":"型式では変数を使用できません","typeAnnotationWithCallable":"\\"type\\" の型引数はクラスである必要があります。呼び出し可能関数はサポートされていません","typeArgListExpected":"ParamSpec、省略記号、または型の一覧が必要です","typeArgListNotAllowed":"この型引数にはリスト式を使用できません","typeArgsExpectingNone":"クラス \\"{name}\\" に型引数が必要ありません","typeArgsMismatchOne":"1 つの型引数が必要ですが、{received} を受け取りました","typeArgsMissingForAlias":"ジェネリック型エイリアス \\"{name}\\" に必要な型引数","typeArgsMissingForClass":"ジェネリック クラス \\"{name}\\" に必要な型引数","typeArgsTooFew":"\\"{name}\\" に指定された型引数が少なすぎます。{expected} が必要ですが、{received} を受信しました","typeArgsTooMany":"\\"{name}\\" に指定された型引数が多すぎます。{expected} が必要ですが、{received} を受信しました","typeAssignmentMismatch":"型 \\"{sourceType}\\" の式を宣言された型 \\"{destType}\\" に割り当てることはできません","typeAssignmentMismatchWildcard":"宣言された型 \\"{destType}\\" に割り当てできないシンボル \\"{name}\\" のインポートに型 \\"{sourceType}\\" があります","typeCallNotAllowed":"type() 呼び出しは型注釈で使用しないでください","typeCheckOnly":"\\"{name}\\" は@type_check_onlyとしてマークされており、型注釈でのみ使用できます","typeCommentDeprecated":"型コメントの使用は非推奨です。代わりに型注釈を使用してください","typeExpectedClass":"型式が必要ですが、\\"{type}\\" を受け取りました","typeGuardArgCount":"\\"TypeGuard\\" または \\"TypeIs\\" の後に 1 つの型引数が必要です","typeGuardParamCount":"ユーザー定義型ガード関数とメソッドには、少なくとも 1 つの入力パラメーターが必要です","typeIsReturnType":"TypeIs の戻り値の型 (\\"{returnType}\\") と値パラメーターの型 (\\"{type}\\") が一致しません","typeNotAwaitable":"\\"{type}\\" は待機できません","typeNotIntantiable":"\\"{type}\\" をインスタンス化できません","typeNotIterable":"\\"{type}\\" は反復できません","typeNotSpecializable":"型 \\"{type}\\" を特殊化できませんでした","typeNotSubscriptable":"型 \\"{type}\\" のオブジェクトは添字可能ではありません","typeNotSupportBinaryOperator":"演算子 \\"{operator}\\" は型 \\"{leftType}\\" と \\"{rightType}\\" ではサポートされていません","typeNotSupportBinaryOperatorBidirectional":"型 \\"{leftType}\\" と \\"{rightType}\\" に対して演算子 \\"{operator}\\" はサポートされていません。予期された型が \\"{expectedType}\\" の場合","typeNotSupportUnaryOperator":"演算子 \\"{operator}\\" は型 \\"{type}\\" ではサポートされていません","typeNotSupportUnaryOperatorBidirectional":"型 \\"{type}\\" が \\"{expectedType}\\" の場合、演算子 \\"{operator}\\" はサポートされていません","typeNotUsableWith":"型 \\"{type}\\" のオブジェクトは 、{method} を実装していないため、\\"with\\" と共に使用できません","typeParameterBoundNotAllowed":"バインドまたは制約を可変個引数型パラメーターまたは ParamSpec と共に使用することはできません","typeParameterConstraintTuple":"型パラメーター制約は、2 つ以上の型のタプルである必要があります","typeParameterExistingTypeParameter":"型パラメーター \\"{name}\\" は既に使用されています","typeParameterNotDeclared":"型パラメーター \\"{name}\\" は、\\"{container}\\" の型パラメーターリストに含まれていません","typeParametersMissing":"少なくとも 1 つの型パラメーターを指定する必要があります","typePartiallyUnknown":"\\"{name}\\" の種類が部分的に不明です","typeUnknown":"\\"{name}\\" の種類が不明です","typeVarAssignedName":"TypeVar は 、\\"{name}\\" という名前の変数に割り当てる必要があります","typeVarAssignmentMismatch":"型 \\"{type}\\" を型変数 \\"{name}\\" に割り当てることはできません","typeVarBoundAndConstrained":"TypeVar をバインドと制約の両方にすることはできません","typeVarBoundGeneric":"TypeVar バインド型をジェネリックにすることはできません","typeVarConstraintGeneric":"TypeVar 制約型をジェネリックにすることはできません","typeVarDefaultBoundMismatch":"TypeVar の既定の型はバインドされた型のサブタイプである必要があります","typeVarDefaultConstraintMismatch":"TypeVar の既定の型は、制約付き型のいずれかである必要があります","typeVarDefaultIllegal":"型変数の既定の型には Python 3.13 以降が必要です","typeVarDefaultInvalidTypeVar":"型パラメーター \\"{name}\\" には、スコープ外の 1 つ以上の型変数を参照する既定の型があります","typeVarFirstArg":"最初の引数として TypeVar の名前が必要です","typeVarNoMember":"TypeVar \\"{type}\\" にはメンバー \\"{name}\\" がありません","typeVarNotSubscriptable":"TypeVar \\"{type}\\" は添字可能ではありません","typeVarNotUsedByOuterScope":"型変数 \\"{name}\\" は、このコンテキストでは意味がありません","typeVarPossiblyUnsolvable":"呼び出し元がパラメーター \\"{param}\\" に引数を指定しない場合、型変数 \\"{name}\\" は解決されない可能性があります","typeVarScopedToReturnType":"型変数 \\"{name}\\" のスコープは戻り値の型内の呼び出し可能な変数であり、関数本体では参照できません","typeVarSingleConstraint":"TypeVar には少なくとも 2 つの制約付き型が必要です","typeVarTupleConstraints":"TypeVarTuple に値制約を持たせることはできません","typeVarTupleContext":"TypeVarTuple はこのコンテキストでは許可されていません","typeVarTupleDefaultNotUnpacked":"TypeVarTuple の既定の型は、アンパックされたタプルまたは TypeVarTuple である必要があります","typeVarTupleMustBeUnpacked":"TypeVarTuple 値にはアンパック演算子が必要です","typeVarTupleUnknownParam":"\\"{name}\\" は TypeVarTuple に対する不明なパラメーターです","typeVarUnknownParam":"\\"{name}\\" は TypeVar に対する不明なパラメーターです","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" は外部スコープで既に使用されています","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" はジェネリック関数シグネチャに 1 回だけ出現します","typeVarVariance":"TypeVar を共変と反変の両方にすることはできません","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\" には既定値があり、TypeVarTuple \\"{variadicName}\\" の後に続けることはできません","typeVarWithoutDefault":"\\"{name}\\" は既定の型がないため、型パラメーター リストの \\"{other}\\" の後に表示できません","typeVarsNotInGenericOrProtocol":"Generic[] または Protocol[] には、すべての型変数を含める必要があります","typedDictAccess":"TypedDict の項目にアクセスできませんでした","typedDictAssignedName":"TypedDict は \\"{name}\\" という名前の変数に割り当てる必要があります","typedDictBadVar":"TypedDict クラスには型注釈のみを含めることができます","typedDictBaseClass":"TypedDict クラスのすべての基底クラスも TypedDict クラスである必要があります","typedDictBoolParam":"\\"{name}\\" パラメーターの値は True または False である必要があります","typedDictClosedExtras":"基底クラス \\"{name}\\" は終了した TypedDict です。余分な項目は型 \\"{type}\\" である必要があります","typedDictClosedNoExtras":"基底クラス \\"{name}\\" は終了した TypedDict です。追加のアイテムは許可されていません","typedDictDelete":"TypedDict の項目を削除できませんでした","typedDictEmptyName":"TypedDict 内の名前を空にすることはできません","typedDictEntryName":"辞書エントリ名に文字列リテラルが必要です","typedDictEntryUnique":"ディクショナリ内の名前は一意である必要があります","typedDictExtraArgs":"追加の TypedDict 引数はサポートされていません","typedDictFieldNotRequiredRedefinition":"TypedDict アイテム \\"{name}\\" を NotRequired として再定義することはできません","typedDictFieldReadOnlyRedefinition":"TypedDict アイテム \\"{name}\\" を ReadOnly として再定義することはできません","typedDictFieldRequiredRedefinition":"TypedDict アイテム \\"{name}\\" を Required として再定義することはできません","typedDictFirstArg":"最初の引数として TypedDict クラス名が必要です","typedDictInitsubclassParameter":"TypedDict は __init_subclass__パラメーター \\"{name}\\" をサポートしていません","typedDictNotAllowed":"\\"TypedDict\\" はこのコンテキストでは使用できません","typedDictSecondArgDict":"2 番目のパラメーターとして dict パラメーターまたはキーワード パラメーターが必要です","typedDictSecondArgDictEntry":"単純な辞書エントリが必要です","typedDictSet":"TypedDict で項目を割り当てることができませんでした","unaccessedClass":"クラス \\"{name}\\" にアクセスできません","unaccessedFunction":"関数 \\"{name}\\" にアクセスできません","unaccessedImport":"インポート \\"{name}\\" にアクセスできません","unaccessedSymbol":"\\"{name}\\" にアクセスできません","unaccessedVariable":"変数 \\"{name}\\" にアクセスできません","unannotatedFunctionSkipped":"関数 \\"{name}\\" の分析は、表示されないためスキップされます","unaryOperationNotAllowed":"型の注釈で単項演算子は使用できません","unexpectedAsyncToken":"\\"def\\"、\\"with\\"、または \\"for\\" が \\"async\\" の後に続く必要があります","unexpectedExprToken":"式の最後に予期しないトークンが含まれています","unexpectedIndent":"予期しないインデント","unexpectedUnindent":"インデント解除は予期されていません","unhashableDictKey":"辞書キーはハッシュ可能である必要があります","unhashableSetEntry":"設定エントリはハッシュ可能である必要があります","uninitializedAbstractVariables":"抽象基底クラスで定義された変数は、最終クラス \\"{classType}\\" で初期化されません","uninitializedInstanceVariable":"インスタンス変数 \\"{name}\\" は、クラス本体または__init__ メソッドで初期化されていません","unionForwardReferenceNotAllowed":"共用体構文を文字列オペランドと共に使用することはできません。式全体を引用符で囲んでください","unionSyntaxIllegal":"共用体の代替構文には Python 3.10 以降が必要です","unionTypeArgCount":"共用体には 2 つ以上の型引数が必要です","unionUnpackedTuple":"アンパックされたタプルを union に含めることはできません","unionUnpackedTypeVarTuple":"アンパックされた TypeVarTuple を union に含めることはできません","unnecessaryCast":"不要な \\"キャスト\\" 呼び出し。型は既に \\"{type}\\" です","unnecessaryIsInstanceAlways":"不要な isinstance 呼び出し。\\"{testType}\\" は常に \\"{classType}\\" のインスタンスです","unnecessaryIsSubclassAlways":"不要な issubclass 呼び出し。\\"{testType}\\" は常に \\"{classType}\\" のサブクラスです","unnecessaryPyrightIgnore":"不要な \\"#ight: ignore\\" コメント","unnecessaryPyrightIgnoreRule":"不要な \\"# pyright: ignore\\" ルール: \\"{name}\\"","unnecessaryTypeIgnore":"不要な \\"# type: ignore\\" コメント","unpackArgCount":"\\"Unpack\\" の後に 1 つの型引数が必要です","unpackExpectedTypeVarTuple":"Unpack の型引数として TypeVarTuple または tuple が必要です","unpackExpectedTypedDict":"Unpack に必要な TypedDict 型引数","unpackIllegalInComprehension":"アンパック操作は理解できません","unpackInAnnotation":"型注釈ではアンパック演算子は使用できません","unpackInDict":"アンパック操作はディクショナリで許可されていません","unpackInSet":"アンパック演算子はセット内では使用できません","unpackNotAllowed":"アンパックはこのコンテキストでは許可されていません","unpackOperatorNotAllowed":"このコンテキストではアンパック操作は許可されていません","unpackTuplesIllegal":"Python 3.8 より前のタプルではアンパック操作は許可されていません","unpackedArgInTypeArgument":"アンパックされた引数は、型引数リストでは使用できません","unpackedArgWithVariadicParam":"アンパックされた引数は TypeVarTuple パラメーターには使用できません","unpackedDictArgumentNotMapping":"** の後の引数式は、\\"str\\" キー型のマッピングである必要があります","unpackedDictSubscriptIllegal":"下付き文字の辞書アンパック演算子は使用できません","unpackedSubscriptIllegal":"下付き文字の Unpack 演算子には Python 3.11 以降が必要です","unpackedTypeVarTupleExpected":"アンパックされた TypeVarTuple が必要です。Unpack[{name1}] または *{name2} を使用してください","unpackedTypedDictArgument":"アンパックされた TypedDict 引数をパラメーターと一致させることはできません","unreachableCode":"コードに到達できません","unreachableExcept":"例外が既に処理されているため、Except 句に到達できません","unsupportedDunderAllOperation":"\\"__all__\\" に対する操作はサポートされていないため、エクスポートされたシンボル リストが正しくない可能性があります","unusedCallResult":"呼び出し式の結果は \\"{type}\\" 型であり、使用されません。これが意図的な場合は変数 \\"_\\" に代入する","unusedCoroutine":"非同期関数呼び出しの結果は使用されません。\\"await\\" を使用するか、結果を変数に代入してください","unusedExpression":"式の値が使用されていません","varAnnotationIllegal":"変数の型注釈には Python 3.6 以降が必要です。以前のバージョンとの互換性のために型コメントを使用する","variableFinalOverride":"変数 \\"{name}\\" は Final とマークされ、クラス \\"{className}\\" の同じ名前の Final 以外の変数をオーバーライドします","variadicTypeArgsTooMany":"型引数リストには、アンパックされた TypeVarTuple または tuple を最大 1 つ含めることができます","variadicTypeParamTooManyAlias":"型エイリアスには TypeVarTuple 型パラメーターを最大 1 つ含めることができますが、複数の ({names}) を受け取りました","variadicTypeParamTooManyClass":"ジェネリック クラスには最大 1 つの TypeVarTuple 型パラメーターを指定できますが、複数の ({names}) を受け取りました","walrusIllegal":"演算子 \\":=\\" には Python 3.8 以降が必要です","walrusNotAllowed":"演算子 \\":=\\" は、かっこを囲まないこのコンテキストでは使用できません","wildcardInFunction":"ワイルドカードのインポートは、クラスまたは関数内では許可されていません","wildcardLibraryImport":"ライブラリからのワイルドカードインポートは許可されていません","wildcardPatternTypePartiallyUnknown":"ワイルドカード パターンによってキャプチャされた型は部分的に不明です","wildcardPatternTypeUnknown":"ワイルドカード パターンによってキャプチャされた型が不明です","yieldFromIllegal":"\\"yield from\\" を使用するには Python 3.3 以降が必要です","yieldFromOutsideAsync":"非同期関数では \\"yield from\\" は使用できません","yieldOutsideFunction":"関数またはラムダの外部では \\"yield\\" は許可されません","yieldWithinListCompr":"\\"yield\\" はリスト理解内では使用できません","zeroCaseStatementsFound":"Match ステートメントには、少なくとも 1 つの case ステートメントを含める必要があります","zeroLengthTupleNotAllowed":"このコンテキストでは長さ 0 のタプルは使用できません"},"DiagnosticAddendum":{"annotatedNotAllowed":"\\"注釈付き\\" 特殊フォームは、インスタンスおよびクラスのチェックでは使用できません","argParam":"引数はパラメーター \\"{paramName}\\" に対応します","argParamFunction":"引数は関数 \\"{functionName}\\" のパラメーター \\"{paramName}\\" に対応します","argsParamMissing":"パラメーター \\"*{paramName}\\" に対応するパラメーターがありません","argsPositionOnly":"位置のみのパラメーターの不一致。{expected} が必要ですが、{received} を受信しました","argumentType":"引数の型は \\"{type}\\" です","argumentTypes":"引数の型: ({types})","assignToNone":"型を \\"None\\" 型に割り当てることはできません","asyncHelp":"\\"async with\\" を意味しましたか?","baseClassIncompatible":"基底クラス \\"{baseClass}\\" は型 \\"{type}\\" と互換性がありません","baseClassIncompatibleSubclass":"基底クラス \\"{baseClass}\\" は、型 \\"{type}\\" と互換性のない \\"{subclass}\\" から派生しています","baseClassOverriddenType":"基底クラス \\"{baseClass}\\" は、オーバーライドされる型 \\"{type}\\" を提供します","baseClassOverridesType":"基底クラス \\"{baseClass}\\" は型 \\"{type}\\" でオーバーライドします","bytesTypePromotions":"disableBytesTypePromotions を false に設定して、\\"bytearray\\" と \\"memoryview\\" の型昇格動作を有効にします","conditionalRequiresBool":"型 \\"{operandType}\\" のメソッド __bool__は、\\"bool\\" ではなく型 \\"{boolReturnType}\\" を返します","dataClassFieldLocation":"フィールド宣言","dataClassFrozen":"\\"{name}\\" は固定されています","dataProtocolUnsupported":"\\"{name}\\" はデータ プロトコルです","descriptorAccessBindingFailed":"記述子クラス \\"{className}\\" のメソッド \\"{name}\\" をバインドできませんでした","descriptorAccessCallFailed":"記述子クラス \\"{className}\\" のメソッド \\"{name}\\" を呼び出せませんでした","finalMethod":"最終的なメソッド","functionParamDefaultMissing":"パラメーター \\"{name}\\" に既定の引数がありません","functionParamName":"パラメーター名の不一致: \\"{destName}\\" と \\"{srcName}\\"","functionParamPositionOnly":"位置のみのパラメーターの不一致; パラメーター \\"{name}\\" は位置のみではありません","functionReturnTypeMismatch":"関数の戻り値の型 \\"{sourceType}\\" は型 \\"{destType}\\" と互換性がありません","functionTooFewParams":"関数が受け入れる位置指定パラメーターが少なすぎます。{expected} が必要ですが、{received} を受信しました","functionTooManyParams":"関数が受け入れる位置指定パラメーターが多すぎます。{expected} が必要ですが、{received} を受信しました","genericClassNotAllowed":"インスタンスまたはクラスのチェックでは、型引数を含むジェネリック型は使用できません","incompatibleDeleter":"プロパティ削除子メソッドに互換性がありません","incompatibleGetter":"プロパティ getter メソッドに互換性がありません","incompatibleSetter":"プロパティ セッター メソッドに互換性がありません","initMethodLocation":"__init__ メソッドはクラス \\"{type}\\" で定義されています","initMethodSignature":"__init__の署名は \\"{type}\\" です","initSubclassLocation":"__init_subclass__ メソッドはクラス \\"{name}\\" で定義されています","invariantSuggestionDict":"\\"dict\\" から値の型の共変である \\"Mapping\\" への切り替えを検討してください","invariantSuggestionList":"\\"list\\" から共変である \\"Sequence\\" への切り替えを検討してください","invariantSuggestionSet":"\\"set\\" から共変である \\"Container\\" への切り替えを検討してください","keyNotRequired":"\\"{name}\\" は \\"{type}\\" の必須キーではないため、アクセスすると実行時例外が発生する可能性があります","keyReadOnly":"\\"{name}\\" は \\"{type}\\" の読み取り専用キーです","keyRequiredDeleted":"\\"{name}\\" は必須キーであり、削除できません","keyUndefined":"\\"{name}\\" は \\"{type}\\" で定義されたキーではありません","kwargsParamMissing":"パラメーター \\"**{paramName}\\" に対応するパラメーターがありません","listAssignmentMismatch":"型 \\"{type}\\" はターゲット リストと互換性がありません","literalAssignmentMismatch":"\\"{sourceType}\\" を型 \\"{destType}\\" に割り当てることはできません","matchIsNotExhaustiveHint":"完全な処理が意図されていない場合は、\\"case _: pass\\" を追加します","matchIsNotExhaustiveType":"ハンドルされない型: \\"{type}\\"","memberAssignment":"型 \\"{type}\\" の式をクラス \\"{classType}\\" のメンバー \\"{name}\\" に割り当てることはできません","memberIsAbstract":"\\"{type}.{name}\\" は実装されていません","memberIsAbstractMore":"その他 {count} 件...","memberIsClassVarInProtocol":"\\"{name}\\" はプロトコルで ClassVar として定義されています","memberIsFinalInProtocol":"\\"{name}\\" はプロトコルで Final とマークされています","memberIsInitVar":"メンバー \\"{name}\\" は init 専用フィールドです","memberIsInvariant":"\\"{name}\\" は変更可能であるため、不変です","memberIsNotClassVarInClass":"プロトコルと互換性を持たせるには、\\"{name}\\" を ClassVar として定義する必要があります","memberIsNotClassVarInProtocol":"\\"{name}\\" はプロトコルで ClassVar として定義されていません","memberIsNotFinalInProtocol":"\\"{name}\\" はプロトコルで Final としてマークされていません","memberIsWritableInProtocol":"\\"{name}\\" はプロトコルで書き込み可能です","memberSetClassVar":"メンバー \\"{name}\\" は ClassVar であるため、クラス インスタンスを介して割り当てることはできません","memberTypeMismatch":"\\"{name}\\" は互換性のない型です","memberUnknown":"メンバー \\"{name}\\" が不明です","metaclassConflict":"メタクラス \\"{metaclass1}\\" が \\"{metaclass2}\\" と競合しています","missingDeleter":"プロパティ削除メソッドがありません","missingGetter":"プロパティ getter メソッドがありません","missingSetter":"プロパティ セッター メソッドがありません","namedParamMissingInDest":"キーワード パラメーター \\"{name}\\" が変換先に見つかりません","namedParamMissingInSource":"キーワード パラメーター \\"{name}\\" がソースに見つかりません","namedParamTypeMismatch":"型 \\"{sourceType}\\" のキーワード パラメーター \\"{name}\\" を型 \\"{destType}\\" に割り当てることはできません","namedTupleNotAllowed":"NamedTuple はインスタンスまたはクラスのチェックには使用できません","newMethodLocation":"__new__ メソッドはクラス \\"{type}\\" で定義されています","newMethodSignature":"__new__の署名は \\"{type}\\" です","newTypeClassNotAllowed":"NewType で作成されたクラスは、インスタンスおよびクラスのチェックでは使用できません","noOverloadAssignable":"型 \\"{type}\\" に一致するオーバーロードされた関数はありません","noneNotAllowed":"インスタンスまたはクラスのチェックには何も使用できません","orPatternMissingName":"名前がありません: {name}","overloadIndex":"オーバーロード {index} が最も近い一致です","overloadNotAssignable":"\\"{name}\\" の 1 つ以上のオーバーロードが割り当て可能ではありません","overloadSignature":"オーバーロードシグネチャはここで定義されています","overriddenMethod":"オーバーライドされたメソッド","overriddenSymbol":"オーバーライドされたシンボル","overrideInvariantMismatch":"オーバーライドの型 \\"{overrideType}\\" が基本データ型 \\"{baseType}\\" と同じではありません","overrideIsInvariant":"変数は変更可能であるため、その型は不変です","overrideNoOverloadMatches":"オーバーライドのオーバーロード シグネチャが基本メソッドと互換性がありません","overrideNotClassMethod":"基本メソッドは classmethod として宣言されていますが、オーバーライドはされていません","overrideNotInstanceMethod":"基本メソッドはインスタンス メソッドとして宣言されていますが、オーバーライドは宣言されていません","overrideNotStaticMethod":"基本メソッドは staticmethod として宣言されていますが、オーバーライドは宣言されていません","overrideOverloadNoMatch":"オーバーライドは基本メソッドのすべてのオーバーロードを処理しません","overrideOverloadOrder":"オーバーライド メソッドのオーバーロードは、基本メソッドと同じ順序にする必要があります","overrideParamKeywordNoDefault":"キーワード パラメーター \\"{name}\\" の不一致: 基本パラメーターに既定の引数値があり、オーバーライド パラメーターにはありません","overrideParamKeywordType":"キーワード パラメーター \\"{name}\\" の型が一致しません: 基本パラメーターは型 \\"{baseType}\\"、オーバーライド パラメーターは型 \\"{overrideType}\\" です","overrideParamName":"パラメーター {index} 名が一致しません: ベース パラメーターの名前は \\"{baseName}\\"、オーバーライド パラメーターは \\"{overrideName}\\" です","overrideParamNameExtra":"パラメーター \\"{name}\\" が ベース に見つかりません","overrideParamNameMissing":"パラメーター \\"{name}\\" がオーバーライドに見つかりません","overrideParamNamePositionOnly":"パラメーター {index} の不一致: ベース パラメーター \\"{baseName}\\" はキーワード パラメーターで、オーバーライド パラメーターは位置のみです","overrideParamNoDefault":"パラメーター {index} の不一致: 基本パラメーターに既定の引数値があり、オーバーライド パラメーターが指定されていません","overrideParamType":"パラメーター {index} の型が一致しません: 基本パラメーターは型 \\"{baseType}\\"、オーバーライド パラメーターは型 \\"{overrideType}\\" です","overridePositionalParamCount":"位置指定パラメーター数が一致しません。基本メソッドには {baseCount} がありますが、オーバーライドには {overrideCount} があります","overrideReturnType":"戻り値の型の不一致: 基本メソッドは型 \\"{baseType}\\" を返し、オーバーライドは型 \\"{overrideType}\\" を返します","overrideType":"基底クラスは型を \\"{type}\\" として定義します","paramAssignment":"パラメーター {index}: 型 \\"{sourceType}\\" を型 \\"{destType}\\" に割り当てることはできません","paramSpecMissingInOverride":"ParamSpec パラメーターが override メソッドに見つかりません","paramType":"パラメーターの型は \\"{paramType}\\" です","privateImportFromPyTypedSource":"代わりに \\"{module}\\" からインポートする","propertyAccessFromProtocolClass":"プロトコル クラス内で定義されたプロパティにクラス変数としてアクセスできない","propertyMethodIncompatible":"プロパティ メソッド \\"{name}\\" は互換性がありません","propertyMethodMissing":"プロパティ メソッド \\"{name}\\" がオーバーライドに見つかりません","propertyMissingDeleter":"プロパティ \\"{name}\\" に定義済みの削除子がありません","propertyMissingSetter":"プロパティ \\"{name}\\" に定義済みのセッターがありません","protocolIncompatible":"\\"{sourceType}\\" はプロトコル \\"{destType}\\" と互換性がありません","protocolMemberMissing":"\\"{name}\\" が存在しません","protocolRequiresRuntimeCheckable":"インスタンスとクラスのチェックで使用するには、プロトコル クラスは @runtime_checkable である必要があります","protocolSourceIsNotConcrete":"\\"{sourceType}\\" は具象クラス型ではないため、型 \\"{destType}\\" に割り当てることはできません","protocolUnsafeOverlap":"\\"{name}\\" の属性の名前がプロトコルの名前と同じです","pyrightCommentIgnoreTip":"\\"#ight: ignore[<diagnostic rules>] を使用して 1 行の診断を抑制する","readOnlyAttribute":"属性 \\"{name}\\" は読み取り専用です","seeClassDeclaration":"クラス宣言を参照してください","seeDeclaration":"宣言を参照してください","seeFunctionDeclaration":"関数の宣言を参照してください","seeMethodDeclaration":"メソッド宣言を参照してください","seeParameterDeclaration":"パラメーター宣言を参照してください","seeTypeAliasDeclaration":"型のエイリアス宣言を参照してください","seeVariableDeclaration":"変数宣言を参照してください","tupleAssignmentMismatch":"型 \\"{type}\\" はターゲット タプルと互換性がありません","tupleEntryTypeMismatch":"タプル エントリ {entry} の型が正しくありません","tupleSizeIndeterminateSrc":"タプル サイズが一致しません。{expected} が必要ですが、受け取りは不確定です","tupleSizeIndeterminateSrcDest":"タプル サイズが一致しません。{expected} 以上が必要ですが、受け取りは不確定です","tupleSizeMismatch":"タプルのサイズが一致しません。{expected} が必要ですが、{received} を受信しました","tupleSizeMismatchIndeterminateDest":"タプルのサイズが一致しません。{expected} 以上が必要ですが、{received} を受信しました","typeAliasInstanceCheck":"\\"type\\" ステートメントで作成された型エイリアスは、インスタンスとクラスのチェックでは使用できません","typeAssignmentMismatch":"型 \\"{sourceType}\\" を型 \\"{destType}\\" に割り当てることはできません","typeBound":"型 \\"{sourceType}\\" は、型変数 \\"{name}\\" のバインドされた型 \\"{destType}\\" と互換性がありません","typeConstrainedTypeVar":"型 \\"{type}\\" は制約付き型変数 \\"{name}\\" と互換性がありません","typeIncompatible":"\\"{sourceType}\\" は \\"{destType}\\" と互換性がありません","typeNotClass":"\\"{type}\\" はクラスではありません","typeNotStringLiteral":"\\"{type}\\" は文字列リテラルではありません","typeOfSymbol":"\\"{name}\\" の型は \\"{type}\\" です","typeParamSpec":"型 \\"{type}\\" は ParamSpec \\"{name}\\" と互換性がありません","typeUnsupported":"型 \\"{type}\\" はサポートされていません","typeVarDefaultOutOfScope":"型変数 \\"{name}\\" はスコープ内にありません","typeVarIsContravariant":"型パラメーター \\"{name}\\" は反変ですが、\\"{sourceType}\\" は \\"{destType}\\" のスーパータイプではありません","typeVarIsCovariant":"型パラメーター \\"{name}\\" は共変ですが、\\"{sourceType}\\" は \\"{destType}\\" のサブタイプではありません","typeVarIsInvariant":"型パラメーター \\"{name}\\" は不変ですが、\\"{sourceType}\\" は \\"{destType}\\" と同じではありません","typeVarNotAllowed":"TypeVar は、インスタンスまたはクラスのチェックには使用できません","typeVarTupleRequiresKnownLength":"TypeVarTuple を不明な長さのタプルにバインドすることはできません","typeVarUnnecessarySuggestion":"代わりに {type} を使用してください","typeVarUnsolvableRemedy":"引数が指定されていない場合に戻り値の型を指定するオーバーロードを指定します","typeVarsMissing":"型変数がありません: {names}","typedDictBaseClass":"クラス \\"{type}\\" は TypedDict ではありません","typedDictClassNotAllowed":"TypedDict クラスはインスタンスまたはクラスのチェックには使用できません","typedDictClosedExtraNotAllowed":"アイテム \\"{name}\\" を追加できません","typedDictClosedExtraTypeMismatch":"型 \\"{type}\\" のアイテム \\"{name}\\" を追加できません","typedDictClosedFieldNotRequired":"アイテム \\"{name}\\" を追加できません。これは NotRequired である必要があるためです。","typedDictExtraFieldNotAllowed":"\\"{name}\\" は \\"{type}\\" に存在しません","typedDictExtraFieldTypeMismatch":"\\"{name}\\" の型は、\\"{type}\\" の \\"__extra_items__\\" 型と互換性がありません","typedDictFieldMissing":"\\"{name}\\" が \\"{type}\\" に見つかりません","typedDictFieldNotReadOnly":"\\"{name}\\" は \\"{type}\\" では読み取り専用ではありません","typedDictFieldNotRequired":"\\"{name}\\" は \\"{type}\\" には必要ありません","typedDictFieldRequired":"\\"{name}\\" は \\"{type}\\" に必要です","typedDictFieldTypeMismatch":"型 \\"{type}\\" は、アイテム \\"{name}\\" に割り当てできません","typedDictFieldUndefined":"\\"{name}\\" は型 \\"{type}\\" の未定義のアイテムです","typedDictFinalMismatch":"@final が一致しないため、\\"{sourceType}\\" は \\"{destType}\\" と互換性がありません","typedDictKeyAccess":"[\\"{name}\\"] を使用して TypedDict の項目を参照する","typedDictNotAllowed":"TypedDict はインスタンスまたはクラスのチェックには使用できません","unhashableType":"型 \\"{type}\\" はハッシュ可能ではありません","uninitializedAbstractVariable":"インスタンス変数 \\"{name}\\" は抽象基本クラス \\"{classType}\\" で定義されていますが、初期化されていません","unreachableExcept":"\\"{exceptionType}\\" は \\"{parentType}\\" のサブクラスです","useDictInstead":"辞書の種類を示すには、Dict[T1, T2] を使用します","useListInstead":"List[T] を使用してリストの種類を指定するか、Union[T1, T2] を使用して共用体の型を示す","useTupleInstead":"tuple[T1, ..., Tn] を使用してタプル型を示すか、Union[T1, T2] を使用して共用体型を示します","useTypeInstead":"代わりに Type[T] を使用する","varianceMismatchForClass":"型引数 \\"{typeVarName}\\" の分散は、基底クラス \\"{className}\\" と互換性がありません","varianceMismatchForTypeAlias":"型引数 \\"{typeVarName}\\" の分散は \\"{typeAliasParam}\\" と互換性がありません"}}')},84444:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"형식 스텁 만들기","createTypeStubFor":"\\"{moduleName}\\"에 대한 형식 스텁 만들기","executingCommand":"명령 실행","filesToAnalyzeCount":"분석할 파일 {count}개","filesToAnalyzeOne":"분석할 파일 1개","findingReferences":"참조 찾기","organizeImports":"가져오기 구성","renameShadowedFile":"‘{oldFile}’에서 ‘{newFile}’(으)로 이름 바꾸기"},"Completion":{"autoImportDetail":"자동 가져오기","indexValueDetail":"인덱스 값"},"Diagnostic":{"abstractMethodInvocation":"메서드 \\"{method}\\"은(는) 추상적이고 구현되지 않았으므로 호출할 수 없습니다.","annotatedParamCountMismatch":"매개 변수 주석 개수가 일치하지 않습니다. {expected}이)(가) 필요하지만 {received}을(를) 받았습니다.","annotatedTypeArgMissing":"\\"Annotated\\"에 대해 하나의 형식 인수와 하나 이상의 주석이 필요합니다.","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"형식 주석은 형식 문자열 리터럴(f-문자열)을 사용할 수 없습니다.","annotationNotSupported":"이 문에는 형식 주석이 지원되지 않습니다.","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"형식 주석은 여러 문자열 리터럴에 걸쳐 있을 수 없습니다.","annotationStringEscape":"형식 주석에는 이스케이프 문자를 사용할 수 없습니다.","argAssignment":"\\"{argType}\\" 형식의 인수를 \\"{paramType}\\" 형식의 매개 변수에 할당할 수 없습니다.","argAssignmentFunction":"\\"{argType}\\" 형식의 인수를 \\"{functionName}\\" 함수의 \\"{paramType}\\" 형식의 매개 변수에 할당할 수 없습니다.","argAssignmentParam":"\\"{argType}\\" 형식의 인수를 \\"{paramType}\\" 형식의 \\"{paramName}\\" 매개 변수에 할당할 수 없습니다.","argAssignmentParamFunction":"\\"{argType}\\" 형식의 인수를 \\"{functionName}\\" 함수에서 \\"{paramType}\\" 형식의 \\"{paramName}\\" 매개 변수에 할당할 수 없습니다.","argMissingForParam":"매개 변수 {name}에 대한 인수가 없습니다.","argMissingForParams":"매개 변수 {names}에 대한 인수가 없습니다.","argMorePositionalExpectedCount":"{expected}개 이상의 위치 인수가 필요합니다.","argMorePositionalExpectedOne":"1개의 위치 인수가 더 필요합니다.","argPositional":"위치 인수가 필요합니다.","argPositionalExpectedCount":"{expected} 위치 인수가 필요합니다.","argPositionalExpectedOne":"1개의 위치 인수가 필요합니다.","argTypePartiallyUnknown":"인수 형식을 부분적으로 알 수 없습니다.","argTypeUnknown":"인수 형식을 알 수 없습니다.","assertAlwaysTrue":"어설션 식은 항상 true로 평가됩니다.","assertTypeArgs":"\\"assert_type\\"에는 두 개의 위치 인수가 필요합니다.","assertTypeTypeMismatch":"\\"assert_type\\" 불일치: \\"{expected}\\"이(가) 필요하지만 \\"{received}\\"을(를) 받았습니다.","assignmentExprComprehension":"‘{name}’ 할당 식 대상은 대상에 대한 이해력과 같은 이름을 사용할 수 없습니다.","assignmentExprContext":"할당 식은 모듈, 함수 또는 람다 내에 있어야 합니다.","assignmentExprInSubscript":"아래 첨자 내의 할당 식은 Python 3.10 이상에서만 지원됩니다.","assignmentInProtocol":"Protocol 클래스 내의 인스턴스 또는 클래스 변수는 클래스 본문 내에서 명시적으로 선언해야 합니다.","assignmentTargetExpr":"식은 할당 대상이 될 수 없습니다.","asyncNotInAsyncFunction":"비동기 함수 외부에서는 ‘async’가 허용되지 않습니다.","awaitIllegal":"\\"await\\"를 사용하려면 Python 3.5 이상이 필요합니다.","awaitNotAllowed":"형식 주석은 \\"await\\"를 사용할 수 없습니다.","awaitNotInAsync":"비동기 함수 내에서만 \\"await\\"를 사용할 수 있습니다.","backticksIllegal":"백틱으로 묶인 식은 Python 3.x에서 지원되지 않습니다. 대신 repr 사용","baseClassCircular":"클래스는 스스로에서 파생될 수 없습니다.","baseClassFinal":"기본 클래스 \\"{type}\\"이(가) final로 표시되어 서브클래스할 수 없습니다.","baseClassIncompatible":"{type}의 기본 클래스는 상호 호환되지 않습니다.","baseClassInvalid":"클래스에 대한 인수는 기본 클래스여야 합니다.","baseClassMethodTypeIncompatible":"\\"{classType}\\" 클래스의 기본 클래스가 호환되지 않는 방식으로 \\"{name}\\" 메서드를 정의합니다.","baseClassUnknown":"기본 클래스 형식을 알 수 없으므로 파생 클래스의 형식이 모호합니다.","baseClassVariableTypeIncompatible":"\\"{classType}\\" 클래스의 기본 클래스가 \\"{name}\\" 변수를 호환되지 않는 방식으로 정의합니다.","binaryOperationNotAllowed":"형식 주석에는 이항 연산자를 사용할 수 없습니다.","bindTypeMismatch":"‘{type}’을(를) 매개 변수 ‘{paramName}’에 할당할 수 없으므로 ‘{methodName}’ 메서드를 바인딩할 수 없습니다.","breakOutsideLoop":"‘break’는 루프 내에서만 사용할 수 있습니다.","callableExtraArgs":"\\"Callable\\"에 두 개의 형식 인수만 필요합니다.","callableFirstArg":"매개 변수 형식 목록 또는 \\"...\\"가 필요합니다.","callableNotInstantiable":"\\"{type}\\" 형식을 인스턴스화할 수 없습니다.","callableSecondArg":"반환 형식이 \\"Callable\\"에 대한 두 번째 형식 인수로 필요합니다.","casePatternIsIrrefutable":"되돌릴 수 없는 패턴은 마지막 case 문에만 사용할 수 있습니다.","classAlreadySpecialized":"\\"{type}\\" 형식이 이미 특수화되어 있습니다.","classDecoratorTypeUnknown":"형식화되지 않은 클래스 데코레이터는 클래스 형식을 모호하게 합니다. 데코레이터를 무시합니다.","classDefinitionCycle":"‘{name}’에 대한 클래스 정의가 스스로에 종속됩니다.","classGetItemClsParam":"__class_getitem__ 재정의는 \\"cls\\" 매개 변수를 사용해야 합니다.","classMethodClsParam":"클래스 메서드는 ‘cls’ 매개 변수를 사용해야 합니다.","classNotRuntimeSubscriptable":"클래스 \\"{name}\\"에 대한 첨자는 런타임 예외를 생성합니다. 따옴표로 형식 주석 묶기","classPatternBuiltInArgPositional":"클래스 패턴은 위치 하위 패턴만 허용합니다.","classPatternPositionalArgCount":"클래스 \\"{type}\\"에 대한 위치 패턴이 너무 많습니다. {expected}이(가) 필요하지만 {received}을(를) 받았습니다.","classPatternTypeAlias":"‘{type}’은(는) 특수 형식 별칭이므로 클래스 패턴에서 사용할 수 없습니다.","classPropertyDeprecated":"클래스 속성은 Python 3.11에서 더 이상 사용되지 않으며 Python 3.13에서 지원되지 않습니다.","classTypeParametersIllegal":"클래스 형식 매개 변수 구문에는 Python 3.12 이상이 필요합니다.","classVarFirstArgMissing":"‘ClassVar’ 뒤에 형식 인수가 필요합니다.","classVarNotAllowed":"이 컨텍스트에서는 \\"ClassVar\\"를 사용할 수 없습니다.","classVarOverridesInstanceVar":"클래스 변수 \\"{name}\\"이(가) \\"{className}\\" 클래스에서 같은 이름의 인스턴스 변수를 재정의합니다.","classVarTooManyArgs":"‘ClassVar’ 뒤에는 형식 인수가 하나만 필요합니다.","classVarWithTypeVar":"‘ClassVar’ 형식에는 형식 변수를 포함할 수 없습니다.","clsSelfParamTypeMismatch":"‘{name}’ 매개 변수의 형식은 해당 ‘{classType}’ 클래스의 상위 형식이어야 합니다.","codeTooComplexToAnalyze":"코드가 너무 복잡하여 분석할 수 없습니다. 하위 경로로 리팩터링하거나 조건부 코드 경로를 줄여 복잡성 감소","collectionAliasInstantiation":"‘{type}’ 형식을 인스턴스화할 수 없습니다. 대신 ‘{alias}’을(를) 사용하세요.","comparisonAlwaysFalse":"\\"{leftType}\\" 및 \\"{rightType}\\" 형식이 겹치지 않으므로 조건은 항상 False로 평가됩니다.","comparisonAlwaysTrue":"\\"{leftType}\\" 및 \\"{rightType}\\" 형식이 겹치지 않으므로 조건은 항상 True로 평가됩니다.","comprehensionInDict":"이해력은 다른 사전 항목과 함께 사용할 수 없습니다.","comprehensionInSet":"이해력은 다른 집합 항목과 함께 사용할 수 없습니다.","concatenateContext":"이 컨텍스트에서는 \\"연결\\"을 사용할 수 없습니다.","concatenateParamSpecMissing":"\\"Concatenate\\"의 마지막 형식 인수는 ParamSpec 또는 \\"...\\"이어야 합니다.","concatenateTypeArgsMissing":"‘연결’에는 적어도 두 개의 형식 인수가 필요합니다.","conditionalOperandInvalid":"’{type}’ 형식의 조건부 피연산자입니다.","constantRedefinition":"‘{name}’은(는) 대문자이므로 상수이고 다시 정의할 수 없습니다.","constructorNoArgs":"\\"{type}\\" 생성자에 인수가 필요하지 않습니다.","constructorParametersMismatch":"‘{classType}’ 클래스에서 __new__ 서명과 __init__가 불일치합니다.","containmentAlwaysFalse":"‘{leftType}’ 및 ‘{rightType}’ 형식이 겹치지 않으므로 식은 항상 False로 평가됩니다.","containmentAlwaysTrue":"‘{leftType}’ 및 ‘{rightType}’ 형식이 겹치지 않으므로 식은 항상 True로 평가됩니다.","continueInFinally":"finally 절 내에서는 \\"continue\\"를 사용할 수 없습니다.","continueOutsideLoop":"\\"continue\\"는 루프 내에서만 사용할 수 있습니다.","coroutineInConditionalExpression":"조건식은 항상 True로 평가되는 코루틴을 참조합니다.","dataClassBaseClassFrozen":"고정되지 않은 클래스는 고정된 클래스에서 상속할 수 없습니다.","dataClassBaseClassNotFrozen":"고정 클래스는 고정되지 않은 클래스에서 상속할 수 없습니다.","dataClassConverterFunction":"\\"{argType}\\" 형식의 인수는 \\"{fieldType}\\" 형식의 \\"{fieldName}\\" 필드에 유효한 변환기가 아닙니다.","dataClassConverterOverloads":"\\"{funcName}\\"의 오버로드는 \\"{fieldType}\\" 형식의 \\"{fieldName}\\" 필드에 유효한 변환기가 아닙니다.","dataClassFieldWithDefault":"기본값이 없는 필드는 기본값이 있는 필드 뒤에 나타날 수 없습니다.","dataClassFieldWithPrivateName":"데이터 클래스 필드는 프라이빗 이름을 사용할 수 없습니다.","dataClassFieldWithoutAnnotation":"형식 주석이 없는 데이터 클래스 필드를 사용하면 런타임 예외가 발생합니다.","dataClassPostInitParamCount":"데이터 클래스 __post_init__의 잘못된 매개 변수 수입니다. InitVar 필드 수가 {expected}개입니다.","dataClassPostInitType":"데이터 클래스 __post_init__ 메서드 매개 변수 형식이 필드 \\"{fieldName}\\"에 대해 일치하지 않습니다.","dataClassSlotsOverwrite":"__slots__ 클래스에 이미 정의되어 있습니다.","dataClassTransformExpectedBoolLiteral":"정적으로 True 또는 False로 계산되는 식이 필요합니다.","dataClassTransformFieldSpecifier":"클래스 또는 함수의 튜플이 필요하지만 ‘{type}’ 형식을 받았습니다.","dataClassTransformPositionalParam":"\\"dataclass_transform\\"에 대한 모든 인수는 키워드 인수여야 합니다.","dataClassTransformUnknownArgument":"dataclass_transform은 \\"{name}\\" 인수를 지원하지 않습니다.","dataProtocolInSubclassCheck":"데이터 프로토콜(비 메서드 특성 포함)은 issubclass 호출에서 허용되지 않습니다.","declaredReturnTypePartiallyUnknown":"선언된 반환 형식 \\"{returnType}\\"을(를) 부분적으로 알 수 없습니다.","declaredReturnTypeUnknown":"선언된 반환 형식을 알 수 없습니다.","defaultValueContainsCall":"매개 변수 기본값 식 내에서는 함수 호출 및 변경 가능한 개체를 사용할 수 없습니다.","defaultValueNotAllowed":"\\"*\\" 또는 \\"**\\"가 있는 매개 변수는 기본값을 가질 수 없습니다.","delTargetExpr":"식을 삭제할 수 없습니다.","deprecatedClass":"‘{name}’ 클래스는 사용되지 않습니다.","deprecatedConstructor":"클래스 \\"{name}\\"의 생성자는 더 이상 사용되지 않습니다.","deprecatedDescriptorDeleter":"\\"{name}\\" 설명자에 대한 \\"____delete____\\" 메서드는 사용되지 않습니다.","deprecatedDescriptorGetter":"\\"{name}\\" 설명자에 대한 \\"__get__\\" 메서드는 사용되지 않습니다.","deprecatedDescriptorSetter":"\\"{name}\\" 설명자에 대한 \\"__set__\\" 메서드는 사용되지 않습니다.","deprecatedFunction":"\\"{name}\\" 함수는 더 이상 사용되지 않습니다.","deprecatedMethod":"\\"{className}\\" 클래스의 \\"{name}\\" 메서드는 더 이상 사용되지 않습니다.","deprecatedPropertyDeleter":"\\"{name}\\" 속성에 대한 deleter는 사용되지 않습니다.","deprecatedPropertyGetter":"\\"{name}\\" 속성에 대한 getter는 사용되지 않습니다.","deprecatedPropertySetter":"\\"{name}\\" 속성에 대한 setter는 사용되지 않습니다.","deprecatedType":"이 형식은 Python {version}부터 사용되지 않습니다. 대신 \\"{replacement}\\"을(를) 사용하세요.","dictExpandIllegalInComprehension":"사전 확장은 이해에 사용할 수 없습니다.","dictInAnnotation":"형식 주석에는 사전 식을 사용할 수 없습니다.","dictKeyValuePairs":"사전 항목은 키/값 쌍을 포함해야 합니다.","dictUnpackIsNotMapping":"사전 압축 풀기 연산자에 대한 매핑이 필요합니다.","dunderAllSymbolNotPresent":"\\"{name}\\"이(가) __all__에 지정되었지만 모듈에 없습니다.","duplicateArgsParam":"\\"*\\" 매개 변수 하나만 허용됨","duplicateBaseClass":"중복 기본 클래스는 허용되지 않습니다.","duplicateCapturePatternTarget":"‘{name}’ 캡처 대상이 동일한 패턴 내에 두 번 이상 나타날 수 없습니다.","duplicateCatchAll":"절을 제외한 하나의 catch-all만 허용됨","duplicateEnumMember":"열거형 멤버 \\"{name}\\"이(가) 이미 선언되었습니다.","duplicateGenericAndProtocolBase":"하나의 Generic[...] 또는 Protocol[...] 기본 클래스만 허용됩니다.","duplicateImport":"\\"{importName}\\"을(를) 두 번 이상 가져왔습니다.","duplicateKeywordOnly":"\\"*\\" 구분 기호는 하나만 사용할 수 있습니다.","duplicateKwargsParam":"\\"**\\" 매개 변수 하나만 허용됨","duplicateParam":"매개 변수 \\"{name}\\"이(가) 중복되었습니다.","duplicatePositionOnly":"‘/’ 매개 변수 하나민 허용됩니다.","duplicateStarPattern":"패턴 시퀀스에는 ‘*’ 패턴을 하나만 사용할 수 있습니다.","duplicateStarStarPattern":"‘**’ 항목 하나만 허용됩니다.","duplicateUnpack":"목록에서는 한 개의 압축 풀기 작업만 허용됩니다.","ellipsisAfterUnpacked":"\\"...\\" 압축을 풀고 있는 TypeVarTuple 또는 튜플과 함께 사용할 수 없습니다.","ellipsisContext":"\\"...\\"는 이 컨텍스트에서는 허용되지 않습니다.","ellipsisSecondArg":"\\"...\\"는 두 인수 중 두 번째 인수로만 허용됩니다.","enumClassOverride":"열거형 클래스 \\"{name}\\"은(는) 최종 클래스이며 서브클래스할 수 없습니다.","exceptionGroupIncompatible":"예외 그룹 구문(\\"except*\\")에는 Python 3.11 이상이 필요합니다.","exceptionTypeIncorrect":"‘{type}’은 BaseException에서 파생되지 않습니다.","exceptionTypeNotClass":"\\"{type}\\"은(는) 올바른 예외 클래스가 아닙니다.","exceptionTypeNotInstantiable":"예외 형식 \\"{type}\\"에 대한 생성자에는 하나 이상의 인수가 필요합니다.","expectedAfterDecorator":"데코레이터 다음에 함수 또는 클래스 선언이 필요합니다.","expectedArrow":"\\"->\\" 다음에 반환 형식 주석이 와야 합니다.","expectedAsAfterException":"예외 형식 뒤에 ‘as’가 필요합니다.","expectedAssignRightHandExpr":"\\"=\\" 오른쪽에 식이 필요합니다.","expectedBinaryRightHandExpr":"연산자 오른쪽에 식이 필요합니다.","expectedBoolLiteral":"True 또는 False가 필요합니다.","expectedCase":"\\"case\\" 문이 필요합니다.","expectedClassName":"클래스 이름이 필요합니다.","expectedCloseBrace":"\\"{\\"가 닫혀 있지 않습니다.","expectedCloseBracket":"\\"[{0}\\"이(가) 닫혀 있지 않습니다.","expectedCloseParen":"\\"(\\"가 닫혀 있지 않음","expectedColon":"\':\'가 필요합니다.","expectedComplexNumberLiteral":"패턴 일치에 복소수 리터럴이 필요합니다.","expectedDecoratorExpr":"Python 3.9 이전의 데코레이터에는 식 형식이 지원되지 않습니다.","expectedDecoratorName":"데코레이터 이름이 필요합니다.","expectedDecoratorNewline":"데코레이터 끝에 새 줄이 필요합니다.","expectedDelExpr":"\\"del\\" 뒤에 식이 필요합니다.","expectedElse":"\\"else\\"가 필요합니다.","expectedEquals":"\\"=\\"가 필요합니다.","expectedExceptionClass":"잘못된 예외 클래스 또는 개체","expectedExceptionObj":"필요한 예외 개체, 예외 클래스 또는 없음","expectedExpr":"식이 필요합니다.","expectedFunctionAfterAsync":"‘async’ 다음에 함수 정의가 필요합니다.","expectedFunctionName":"\\"def\\" 뒤에 함수 이름이 필요합니다.","expectedIdentifier":"식별자가 필요합니다.","expectedImport":"\\"import\\"가 필요합니다.","expectedImportAlias":"\\"as\\" 뒤에 기호가 필요합니다.","expectedImportSymbols":"가져온 후 하나 이상의 기호 이름이 필요합니다.","expectedIn":"\\"in\\"이 필요합니다.","expectedInExpr":"\\"in\\" 뒤에 식이 필요합니다.","expectedIndentedBlock":"들여쓰기 블록이 필요합니다.","expectedMemberName":"\\".\\" 뒤에 멤버 이름이 필요합니다.","expectedModuleName":"필요한 모듈 이름","expectedNameAfterAs":"‘as’ 뒤에는 기호 이름이 와야 합니다.","expectedNamedParameter":"키워드 매개 변수는 \\"*\\"를 따라야 합니다.","expectedNewline":"줄 바꿈이 필요합니다.","expectedNewlineOrSemicolon":"문은 줄 바꿈 또는 세미콜론으로 구분해야 합니다.","expectedOpenParen":"’(‘가 필요합니다.","expectedParamName":"매개 변수 이름이 필요합니다.","expectedPatternExpr":"패턴 식이 필요합니다.","expectedPatternSubjectExpr":"패턴 제목 식이 필요합니다.","expectedPatternValue":"\\"a.b\\" 형식의 패턴 값 식이 필요합니다.","expectedReturnExpr":"\\"return\\" 뒤에 식이 필요합니다.","expectedSliceIndex":"인덱스 또는 조각 식이 필요합니다.","expectedTypeNotString":"형식이 필요하지만 문자열 리터럴을 받았습니다.","expectedTypeParameterName":"형식 매개 변수 이름이 필요합니다.","expectedYieldExpr":"yield 문에 식이 필요합니다.","finalClassIsAbstract":"\\"{type}\\" 클래스가 Final로 표시되어 있으며 모든 추상 기호를 구현해야 합니다.","finalContext":"\\"Final\\"은 이 컨텍스트에서 허용되지 않습니다.","finalMethodOverride":"\\"{name}\\" 메서드는 \\"{className}\\" 클래스에 정의된 최종 메서드를 재정의할 수 없습니다.","finalNonMethod":"함수 \\"{name}\\"은(는) 메서드가 아니므로 @final로 표시할 수 없습니다.","finalReassigned":"‘{name}’이 Final로 선언되었으므로 다시 할당할 수 없습니다.","finalRedeclaration":"\\"{name}\\"이(가) 이전에 Final로 선언되었습니다.","finalRedeclarationBySubclass":"부모 클래스 \\"{className}\\"이(가) Final로 선언하므로 \\"{name}\\"을(를) 다시 선언할 수 없습니다.","finalTooManyArgs":"\\"Final\\" 뒤에 단일 형식 인수가 필요합니다.","finalUnassigned":"\\"{name}\\"이(가) Final로 선언되었지만 값이 할당되지 않았습니다.","formatStringBrace":"f-string 리터럴 내에서는 단일 닫는 중괄호를 사용할 수 없습니다. 이중 닫는 중괄호를 사용하세요.","formatStringBytes":"형식 문자열 리터럴(f-strings)은 이진일 수 없습니다.","formatStringDebuggingIllegal":"F-string 디버깅 지정자인 ‘=’는 Python 3.8 이상이 필요합니다.","formatStringEscape":"Python 3.12 이전의 f-string의 식 부분에 이스케이프 시퀀스(백슬래시)를 사용할 수 없습니다.","formatStringExpectedConversion":"f-string에서 \\"!\\" 뒤에 변환 지정자가 필요합니다.","formatStringIllegal":"형식 문자열 리터럴(f-strings)은 Python 3.6 이상이 필요합니다.","formatStringInPattern":"패턴에서 형식 문자열을 사용할 수 없습니다.","formatStringNestedFormatSpecifier":"형식 문자열 지정자 내에 너무 깊게 중첩된 식","formatStringNestedQuote":"f-string 내에 중첩된 문자열은 Python 3.12 이전의 f-string과 같은 따옴표를 사용할 수 없습니다.","formatStringUnicode":"형식 문자열 리터럴(f-문자열)은 유니코드일 수 없습니다.","formatStringUnterminated":"f-string에 종결되지 않은 식이 있습니다. ‘}‘가 필요합니다.","functionDecoratorTypeUnknown":"형식화되지 않은 함수 데코레이터는 함수 형식을 모호하게 합니다. 데코레이터 무시","functionInConditionalExpression":"조건식은 항상 True로 평가되는 함수를 참조합니다.","functionTypeParametersIllegal":"함수 형식 매개 변수 구문에는 Python 3.12 이상이 필요합니다.","futureImportLocationNotAllowed":"__future__ 가져오기는 파일의 시작 부분에 있어야 합니다.","generatorAsyncReturnType":"비동기 생성기 함수의 반환 형식은 \\"AsyncGenerator[{yieldType}, Any]\\"와 호환되어야 합니다.","generatorNotParenthesized":"생성기 식은 단독 인수가 아닌 경우 괄호로 지정해야 합니다.","generatorSyncReturnType":"생성기 함수의 반환 형식은 \\"Generator[{yieldType}, Any, Any]\\"와 호환되어야 합니다.","genericBaseClassNotAllowed":"‘제네릭’ 기본 클래스는 형식 매개 변수 구문과 함께 사용할 수 없습니다.","genericClassAssigned":"제네릭 클래스 형식을 할당할 수 없습니다.","genericClassDeleted":"제네릭 클래스 형식을 삭제할 수 없습니다.","genericInstanceVariableAccess":"클래스를 통한 제네릭 인스턴스 변수에 대한 액세스가 모호합니다.","genericNotAllowed":"이 컨텍스트에서 \\"Generic\\"이 잘못되었습니다.","genericTypeAliasBoundTypeVar":"클래스 내의 제네릭 형식 별칭은 바인딩된 형식 변수 {names}을(를) 사용할 수 없습니다.","genericTypeArgMissing":"\\"Generic\\"에는 하나 이상의 형식 인수가 필요합니다.","genericTypeArgTypeVar":"\\"Generic\\"의 형식 인수는 형식 변수여야 합니다.","genericTypeArgUnique":"\\"Generic\\"의 형식 인수는 고유해야 합니다.","globalReassignment":"전역 선언 전에 \\"{name}\\"이(가) 할당되었습니다.","globalRedefinition":"\\"{name}\\"이(가) 이미 전역으로 선언되었습니다.","implicitStringConcat":"암시적 문자열 연결이 허용되지 않습니다.","importCycleDetected":"가져오기 체인에서 순환이 검색되었습니다.","importDepthExceeded":"가져오기 체인 깊이가 {depth}을(를) 초과했습니다.","importResolveFailure":"가져오기 \\"{importName}\\"을(를) 확인할 수 없습니다.","importSourceResolveFailure":"원본에서 가져오기 \\"{importName}\\"을(를) 확인할 수 없습니다.","importSymbolUnknown":"\\"{name}\\"은(는) 알 수 없는 가져오기 기호입니다.","incompatibleMethodOverride":"\\"{name}\\" 메서드가 호환되지 않는 방식으로 \\"{className}\\" 클래스를 재정의합니다.","inconsistentIndent":"들여쓰기하지 않은 양이 이전 들여쓰기와 일치하지 않습니다.","inconsistentTabs":"들여쓰기에서 탭 및 공백의 일관성 없는 사용","initMustReturnNone":"\\"__init__\\"의 반환 형식은 None이어야 합니다.","initSubclassCallFailed":"__init_subclass__ 메서드의 키워드 인수가 잘못됨","initSubclassClsParam":"__init_subclass__ 재정의는 \\"cls\\" 매개 변수를 사용해야 합니다.","initVarNotAllowed":"이 컨텍스트에서는 \\"InitVar\\"가 허용되지 않습니다.","instanceMethodSelfParam":"인스턴스 메서드는 \\"self\\" 매개 변수를 사용해야 합니다.","instanceVarOverridesClassVar":"‘{name}’ 인스턴스 변수가 ‘{className}’ 클래스에서 같은 이름의 클래스 변수를 재정의합니다.","instantiateAbstract":"\'{type}\' 추상 클래스를 인스턴스화할 수 없습니다.","instantiateProtocol":"‘{type}’ 프로토콜 클래스를 인스턴스화할 수 없습니다.","internalBindError":"파일 \\"{file}\\"을(를) 바인딩하는 동안 내부 오류가 발생했습니다. {message}","internalParseError":"파일 \\"{file}\\"을(를) 구문 분석하는 동안 내부 오류가 발생했습니다. {message}","internalTypeCheckingError":"파일 \\"{file}\\"의 형식을 확인하는 동안 내부 오류가 발생했습니다. {message}","invalidIdentifierChar":"식별자에 잘못된 문자가 있습니다.","invalidStubStatement":"형식 스텁 파일 내에서는 문이 의미가 없습니다.","invalidTokenChars":"토큰에 잘못된 문자 ‘{text}’이(가) 있습니다.","isInstanceInvalidType":"‘issubclass’에 대한 두 번째 인수는 클래스 또는 클래스의 튜플이어야 합니다.","isSubclassInvalidType":"\\"issubclass\\"에 대한 두 번째 인수는 클래스 또는 클래스의 튜플이어야 합니다.","keyValueInSet":"집합 내에서 키/값 쌍을 사용할 수 없습니다.","keywordArgInTypeArgument":"키워드 인수는 형식 인수 목록에서 사용할 수 없습니다.","keywordOnlyAfterArgs":"키워드 전용 인수 구분 기호는 \\"*\\" 매개 변수 뒤에 사용할 수 없습니다.","keywordParameterMissing":"하나 이상의 키워드 매개 변수는 ’*‘ 매개 변수 뒤에 와야 합니다.","keywordSubscriptIllegal":"아래 첨자 내의 키워드 인수는 지원되지 않습니다.","lambdaReturnTypePartiallyUnknown":"람다의 반환 형식 \\"{returnType}\\"을(를) 부분적으로 알 수 없습니다.","lambdaReturnTypeUnknown":"람다의 반환 형식을 알 수 없습니다.","listAssignmentMismatch":"형식이 \\"{type}\\"인 식을 대상 목록에 할당할 수 없습니다.","listInAnnotation":"형식 주석에는 목록 식을 사용할 수 없습니다.","literalEmptyArgs":"‘Literal’ 뒤에 하나 이상의 형식 인수가 필요합니다.","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"형식 인수가 없으면 이 컨텍스트에서 \\"Literal\\"을 사용할 수 없습니다.","literalNotCallable":"리터럴 형식은 인스턴스화할 수 없습니다.","literalUnsupportedType":"\\"Literal\\"의 형식 인수는 None, 리터럴 값(int, bool, str 또는 bytes) 또는 열거형 값이어야 합니다.","matchIncompatible":"Match 문에는 Python 3.10 이상이 필요합니다.","matchIsNotExhaustive":"match 문 내의 사례는 모든 값을 완전히 처리하지 않습니다.","maxParseDepthExceeded":"최대 구문 분석 깊이를 초과했습니다. 식을 더 작은 하위 식으로 나누기","memberAccess":"\\"{type}\\" 형식의 멤버 \\"{name}\\"에 액세스할 수 없습니다.","memberDelete":"\\"{type}\\" 형식의 멤버 \\"{name}\\"을(를) 삭제할 수 없습니다.","memberSet":"‘{type}’ 형식의 ‘{name}’ 멤버에 액세스할 수 없습니다.","metaclassConflict":"파생 클래스의 메타클래스는 모든 기본 클래스의 메타클래스의 서브클래스여야 합니다.","metaclassDuplicate":"메타클래스를 하나만 제공할 수 있습니다.","metaclassIsGeneric":"메타클래스는 제네릭일 수 없습니다.","methodNotDefined":"\\"{name}\\" 메서드가 정의되지 않았습니다.","methodNotDefinedOnType":"\\"{name}\\" 메서드가 \\"{type}\\" 형식에 정의되지 않았습니다.","methodOrdering":"일관된 메서드 순서를 만들 수 없습니다.","methodOverridden":"‘{name}’은(는) ‘{className}’ 클래스에서 같은 이름의 메서드를 호환되지 않는 ‘{type}’ 형식으로 재정의합니다.","methodReturnsNonObject":"\\"{name}\\" 메서드가 개체를 반환하지 않습니다.","missingSuperCall":"\\"{methodName}\\" 메서드가 부모 클래스에서 같은 이름의 메서드를 호출하지 않습니다.","moduleAsType":"모듈은 형식으로 사용할 수 없습니다.","moduleNotCallable":"모듈을 호출할 수 없습니다.","moduleUnknownMember":"‘{memberName}’은(는) ‘{moduleName}’ 모듈의 알려진 멤버가 아닙니다.","namedExceptAfterCatchAll":"명명된 except 절은 catch-all except 절 뒤에 나타날 수 없습니다.","namedParamAfterParamSpecArgs":"ParamSpec args 매개 변수 뒤에 키워드 매개 변수 \\"{name}\\"을(를) 시그니처에 표시할 수 없습니다.","namedTupleEmptyName":"명명된 튜플 내의 이름은 비워 둘 수 없습니다.","namedTupleEntryRedeclared":"부모 클래스 \\"{className}\\"이(가) 명명된 튜플이므로 \\"{name}\\"을(를) 재정의할 수 없습니다.","namedTupleFirstArg":"명명된 튜플 클래스 이름이 첫 번째 인수로 필요합니다.","namedTupleMultipleInheritance":"NamedTuple을 사용한 여러 상속은 지원되지 않습니다.","namedTupleNameKeyword":"필드 이름은 키워드일 수 없습니다.","namedTupleNameType":"항목 이름 및 형식을 지정하는 2개 항목 튜플이 필요합니다.","namedTupleNameUnique":"명명된 튜플 내의 이름은 고유해야 합니다.","namedTupleNoTypes":"\\"namedtuple\\"은 튜플 항목에 대한 형식을 제공하지 않습니다. 대신 \\"NamedTuple\\" 사용","namedTupleSecondArg":"두 번째 인수로 명명된 튜플 항목 목록이 필요합니다.","newClsParam":"__new__ 재정의는 \\"cls\\" 매개 변수를 사용해야 합니다.","newTypeAnyOrUnknown":"NewType에 대한 두 번째 인수는 Any 또는 Unknown이 아닌 알려진 클래스여야 합니다.","newTypeBadName":"NewType의 첫 번째 인수는 문자열 리터럴이어야 합니다.","newTypeLiteral":"NewType은 리터럴 형식과 함께 사용할 수 없습니다.","newTypeNameMismatch":"NewType은 이름이 같은 변수에 할당되어야 합니다.","newTypeNotAClass":"NewType에 대한 두 번째 인수로 클래스가 필요합니다.","newTypeParamCount":"NewType에는 두 개의 위치 인수가 필요합니다.","newTypeProtocolClass":"NewType은 구조적 유형(프로토콜 또는 TypedDict 클래스)과 함께 사용할 수 없습니다.","noOverload":"제공된 인수와 일치하는 \\"{name}\\"에 대한 오버로드가 없습니다.","noReturnContainsReturn":"선언된 반환 형식이 \\"NoReturn\\"인 함수는 return 문을 포함할 수 없습니다.","noReturnContainsYield":"선언된 반환 형식이 \\"NoReturn\\"인 함수는 yield 문을 포함할 수 없습니다.","noReturnReturnsNone":"선언된 반환 형식이 \\"NoReturn\\"인 함수는 \\"None\\"을 반환할 수 없습니다.","nonDefaultAfterDefault":"기본값이 아닌 인수가 기본 인수를 따릅니다.","nonLocalInModule":"모듈 수준에서는 비로컬 선언을 사용할 수 없습니다.","nonLocalNoBinding":"비로컬 \\"{name}\\"에 대한 바인딩을 찾을 수 없습니다.","nonLocalReassignment":"비로컬 선언 전에 \\"{name}\\"이(가) 할당되었습니다.","nonLocalRedefinition":"\\"{name}\\"이(가) 이미 비로컬로 선언되었습니다.","noneNotCallable":"‘None’ 유형의 개체를 호출할 수 없습니다.","noneNotIterable":"\\"None\\" 형식의 개체는 반복 가능한 값으로 사용할 수 없습니다.","noneNotSubscriptable":"’None’ 유형의 개체는 아래 첨자를 사용할 수 없습니다.","noneNotUsableWith":"\\"None\\" 형식의 개체는 \\"with\\"와 함께 사용할 수 없습니다.","noneOperator":"\\"None\\"에 대해 연산자 \\"{operator}\\"이(가) 지원되지 않습니다.","noneUnknownMember":"\\"{name}\\"은(는) \\"None\\"의 알려진 멤버가 아닙니다.","notRequiredArgCount":"\\"NotRequired\\" 뒤에 단일 형식 인수가 필요합니다.","notRequiredNotInTypedDict":"이 컨텍스트에서는 \\"NotRequired\\"를 사용할 수 없습니다.","objectNotCallable":"\\"{type}\\" 형식의 개체를 호출할 수 없습니다.","obscuredClassDeclaration":"클래스 선언 \\"{name}\\"이(가) 같은 이름의 선언으로 가려져 있습니다.","obscuredFunctionDeclaration":"함수 선언 \\"{name}\\"이(가) 동일한 이름의 선언으로 가려집니다.","obscuredMethodDeclaration":"메서드 선언 \\"{name}\\"이(가) 동일한 이름의 선언으로 가려집니다.","obscuredParameterDeclaration":"매개 변수 선언 \\"{name}\\"이(가) 동일한 이름의 선언으로 가려집니다.","obscuredTypeAliasDeclaration":"형식 별칭 선언 \\"{name}\\"이(가) 동일한 이름의 선언으로 가려집니다.","obscuredVariableDeclaration":"\\"{name}\\" 선언이 같은 이름의 선언으로 가려집니다.","operatorLessOrGreaterDeprecated":"\\"<>\\" 연산자는 Python 3에서 지원되지 않습니다. 대신 \\"!=\\"를 사용하세요.","optionalExtraArgs":"‘선택 사항’ 뒤에 1개의 형식 인수가 필요합니다.","orPatternIrrefutable":"되돌릴 수 없는 패턴은 ‘or’ 패턴의 마지막 하위 페이지로만 허용됩니다.","orPatternMissingName":"\\"or\\" 패턴 내의 모든 하위 패턴은 동일한 이름을 대상으로 해야 합니다.","overlappingKeywordArgs":"형식화된 사전이 키워드 매개 변수 {names}과(와) 겹칩니다.","overlappingOverload":"매개 변수가 오버로드 {obscuredBy}과(와) 겹치므로 \\"{name}\\"에 대한 오버로드 {obscured}이(가) 사용되지 않습니다.","overloadAbstractMismatch":"오버로드된 메서드는 모두 추상이거나 모두 추상이 아니어야 합니다.","overloadClassMethodInconsistent":"\\"{name}\\"의 오버로드가 @classmethod를 일관되지 않게 사용합니다.","overloadFinalInconsistencyImpl":"\\"{name}\\"에 대한 오버로드가 @final로 표시되었지만 구현은 아닙니다.","overloadFinalInconsistencyNoImpl":"\\"{name}\\"에 대한 오버로드 {index}는 @final로 표시되지만 오버로드 1은 표시되지 않습니다.","overloadImplementationMismatch":"오버로드된 구현이 오버로드 {index}의 시그니처와 일치하지 않습니다.","overloadReturnTypeMismatch":"\\"{name}\\"에 대한 {prevIndex} 오버로드가 오버로드 {newIndex}과(와) 겹치고 호환되지 않는 형식을 반환합니다.","overloadStaticMethodInconsistent":"\\"{name}\\"의 오버로드가 @staticmethod를 일관되지 않게 사용합니다.","overloadWithoutImplementation":"‘{name}’이(가) 오버로드로 표시되어 있지만 구현이 제공되지 않았습니다.","overriddenMethodNotFound":"‘{name}’ 메서드가 재정의로 표시되어 있지만 이름이 같은 기본 메서드가 없습니다.","overrideDecoratorMissing":"‘{name}’ 메서드가 재정의로 표시되지 않았지만 ‘{className}’ 클래스에서 메서드를 재정의하고 있습니다.","paramAfterKwargsParam":"매개 변수는 ‘**’ 매개 변수 다음에 와야 합니다.","paramAlreadyAssigned":"매개 변수 \\"{name}\\"이(가) 이미 할당되었습니다.","paramAnnotationMissing":"‘{name}’ 매개 변수에 대한 형식 주석이 없습니다.","paramAssignmentMismatch":"‘{sourceType}’ 형식의 식을 ‘{paramType}’ 형식의 매개 변수에 할당할 수 없습니다.","paramNameMissing":"이름이 \\"{name}\\"인 매개 변수가 없습니다.","paramSpecArgsKwargsUsage":"ParamSpec의 \\"args\\" 및 \\"kwargs\\" 멤버는 모두 함수 서명 내에 나타나야 합니다.","paramSpecArgsMissing":"ParamSpec \\"{type}\\"에 대한 인수가 없습니다.","paramSpecArgsUsage":"ParamSpec의 ‘args’ 멤버는 *args 매개 변수와 함께 사용할 경우에만 유효합니다.","paramSpecAssignedName":"ParamSpec을 \\"{name}\\"이라는 변수에 할당해야 합니다.","paramSpecContext":"ParamSpec은 이 컨텍스트에서 허용되지 않습니다.","paramSpecDefaultNotTuple":"ParamSpec의 기본값에는 줄임표, 튜플 식 또는 ParamSpec이 필요합니다.","paramSpecFirstArg":"첫 번째 인수로 ParamSpec의 이름이 필요합니다.","paramSpecKwargsUsage":"ParamSpec의 \\"kwargs\\" 멤버는 **kwargs 매개 변수와 함께 사용할 때만 유효합니다.","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\"은(는) 이 컨텍스트에서 의미가 없습니다.","paramSpecScopedToReturnType":"ParamSpec ‘{name}’은 반환 형식 내에서 호출 가능으로 범위가 지정되며 함수 본문에서 참조할 수 없습니다.","paramSpecUnknownArg":"ParamSpec은 한 개 이상의 인수를 지원하지 않습니다.","paramSpecUnknownMember":"\\"{name}\\"은(는) ParamSpec의 알려진 멤버가 아닙니다.","paramSpecUnknownParam":"‘{name}’은(는) ParamSpec에 대한 알 수 없는 매개 변수입니다.","paramTypeCovariant":"공변(Covariant) 형식 변수는 매개 변수 형식에 사용할 수 없습니다.","paramTypePartiallyUnknown":"매개 변수 \\"{paramName}\\"의 형식을 부분적으로 알 수 없습니다.","paramTypeUnknown":"매개 변수 \\"{paramName}\\"의 형식을 알 수 없습니다.","parenthesizedContextManagerIllegal":"‘with’ 문 내의 괄호는 Python 3.9 이상이 필요합니다.","patternNeverMatches":"제목 형식 \\"{type}\\"에 대해 패턴이 일치하지 않습니다.","positionArgAfterNamedArg":"위치 인수는 키워드 인수 뒤에 나타날 수 없습니다.","positionOnlyAfterArgs":"위치 전용 매개 변수 구분 기호는 \\"*\\" 매개 변수 뒤에 사용할 수 없습니다.","positionOnlyAfterKeywordOnly":"\\"/\\" 매개 변수는 \\"*\\" 매개 변수 앞에 나타나야 합니다.","positionOnlyAfterNon":"위치 전용이 아닌 매개 변수 다음에는 위치 전용 매개 변수를 사용할 수 없습니다.","positionOnlyFirstParam":"위치 전용 매개 변수 구분 기호는 첫 번째 매개 변수로 허용되지 않습니다.","positionOnlyIncompatible":"위치 전용 매개 변수 구분 기호에는 Python 3.8 이상이 필요합니다.","privateImportFromPyTypedModule":"\\"{name}\\"은(는) \\"{module}\\" 모듈에서 내보내지지 않습니다.","privateUsedOutsideOfClass":"\\"{name}\\"은(는) 프라이빗이며 선언된 클래스 외부에서 사용됩니다.","privateUsedOutsideOfModule":"\\"{name}\\"은(는) 프라이빗이며 선언된 모듈 외부에서 사용됩니다.","propertyOverridden":"‘{name}’은(는) ‘{className}’ 클래스에서 같은 이름의 속성을 잘못 재정의합니다.","propertyStaticMethod":"속성 getter, setter 또는 deleter에는 정적 메서드를 사용할 수 없습니다.","protectedUsedOutsideOfClass":"‘{name}’은(는) 선언된 클래스 외부에서 보호되고 사용됩니다.","protocolBaseClass":"‘{classType}’ 프로토콜 클래스는 ‘{baseType}’ 비프로토콜 클래스에서 파생될 수 없습니다.","protocolBaseClassWithTypeArgs":"형식 매개 변수 구문을 사용할 때는 Protocol 클래스에 형식 인수가 허용되지 않습니다.","protocolIllegal":"\\"프로토콜\\"을 사용하려면 Python 3.7 이상이 필요합니다.","protocolNotAllowed":"이 컨텍스트에서는 \\"Protocol\\"을 사용할 수 없습니다.","protocolUnsafeOverlap":"클래스가 \\"{name}\\"과(와) 안전하지 않게 겹치며 런타임에 일치 항목을 생성할 수 있습니다.","protocolVarianceContravariant":"‘{class}‘ 제네릭 프로토콜에서 사용되는 ’{variable}‘ 형식 변수는 반공변이어야 합니다.","protocolVarianceCovariant":"‘{class}‘ 제네릭 프로토콜에서 사용되는 ’{variable}‘ 형식 변수는 공변이어야 합니다","protocolVarianceInvariant":"‘{class}‘ 제네릭 프로토콜에서 사용되는 ’{variable}‘ 형식 변수는 고정 변수여야 합니다.","pyrightCommentInvalidDiagnosticBoolValue":"Pyright 주석 지시문 뒤에는 \\"=\\"와 true 또는 false 값이 와야 합니다.","pyrightCommentInvalidDiagnosticSeverityValue":"Pyright 주석 지시문 뒤에는 \\"=\\"와 true, false, error, warning, information 또는 none 값이 와야 합니다.","pyrightCommentMissingDirective":"Pyright 주석 뒤에는 지시문(기본 또는 엄격) 또는 진단 규칙이 있어야 합니다.","pyrightCommentNotOnOwnLine":"파일 수준 설정을 제어하는 데 사용되는Pyright 주석은 고유의 줄에 표시되어야 합니다.","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\"은(는) pyright 주석에 대한 알 수 없는 진단 규칙입니다.","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\"이(가) pyright 주석에 대해 잘못된 값입니다. true, false, error, warning, information 또는 none이 필요합니다.","pyrightCommentUnknownDirective":"\\"{directive}\\"은(는) pyright 주석에 대한 알 수 없는 지시문입니다. \\"strict\\" 또는 \\"basic\\"이 필요합니다.","readOnlyArgCount":"‘ReadOnly‘ 뒤에는 단일 형식 인수가 필요합니다.","readOnlyNotInTypedDict":"이 컨텍스트에서는 \\"ReadOnly\\"를 사용할 수 없습니다.","recursiveDefinition":"‘{name}’ 형식이 스스로를 참조하므로 확인할 수 없습니다.","relativeImportNotAllowed":"상대 가져오기는 \\"import .a\\" 양식과 함께 사용할 수 없습니다. 대신 \\"from . import a\\"을(를) 사용합니다.","requiredArgCount":"‘Required’ 뒤에 단일 형식 인수가 필요합니다.","requiredNotInTypedDict":"이 컨텍스트에서는 \\"Required\\"를 사용할 수 없습니다.","returnInAsyncGenerator":"값이 있는 Return 문은 비동기 생성기에서 사용할 수 없습니다.","returnMissing":"선언된 반환 형식이 \\"{returnType}\\"인 함수는 모든 코드 경로에서 값을 반환해야 합니다.","returnOutsideFunction":"‘return’은 함수 내에서만 사용할 수 있습니다.","returnTypeContravariant":"반공변 유형 변수는 반환 형식에 사용할 수 없습니다.","returnTypeMismatch":"\\"{exprType}\\" 형식의 식을 반환 형식 \\"{returnType}\\"에 할당할 수 없습니다.","returnTypePartiallyUnknown":"반환 형식 \\"{returnType}\\"을(를) 부분적으로 알 수 없습니다.","returnTypeUnknown":"반환 유형을 알 수 없습니다.","revealLocalsArgs":"‘reveal_locals’ 호출은 인수가 필요하지 않습니다.","revealLocalsNone":"이 범위에 로컬이 없습니다.","revealTypeArgs":"\\"reveal_type\\" 호출에는 단일 위치 인수가 필요합니다.","revealTypeExpectedTextArg":"‘reveal_type’ 함수의 ‘expected_text’ 인수는 str 리터럴 값이어야 합니다.","revealTypeExpectedTextMismatch":"텍스트 형식이 일치하지 않습니다. \\"{expected}\\"이(가) 필요하지만 \\"{received}\\"을(를) 받았습니다.","revealTypeExpectedTypeMismatch":"텍스트 형식이 일치하지 않습니다. ‘{expected}’이(가) 필요하지만 ‘{received}’을(를) 받았습니다.","selfTypeContext":"이 컨텍스트에서는 \\"Self\\"가 잘못되었습니다.","selfTypeMetaclass":"메타클래스(\\"type\\"의 서브클래스) 내에서 \\"Self\\"를 사용할 수 없습니다.","selfTypeWithTypedSelfOrCls":"\\"Self\\"는 \\"Self\\" 이외의 형식 주석이 있는 \'self\' 또는 \'cls\' 매개 변수가 있는 함수에서 사용할 수 없습니다.","setterGetterTypeMismatch":"속성 setter 값 형식을 getter 반환 형식에 할당할 수 없습니다.","singleOverload":"\\"{name}\\"이(가) 오버로드로 표시되었지만 추가 오버로드가 없습니다.","slotsAttributeError":"__slots__에서 ‘{name}’이(가) 지정되지 않았습니다.","slotsClassVarConflict":"‘{name}‘이(가) __slots__에 선언된 instance 변수와 충돌합니다.","starPatternInAsPattern":"별 무늬는 \\"as\\" 대상과 함께 사용할 수 없습니다.","starPatternInOrPattern":"별 무늬는 다른 패턴 내에서 ORed할 수 없습니다.","starStarWildcardNotAllowed":"**는 와일드카드 \\"_\\"와 함께 사용할 수 없습니다.","staticClsSelfParam":"정적 메서드는 \\"self\\" 또는 \\"cls\\" 매개 변수를 사용하면 안 됩니다.","stdlibModuleOverridden":"‘{path}’이(가) ‘{name}’ stdlib 모듈을 재정의하고 있습니다.","stringNonAsciiBytes":"ASCII가 아닌 문자는 바이트 문자열 리터럴에 허용되지 않습니다.","stringNotSubscriptable":"형식 주석에는 문자열 식을 첨자할 수 없습니다. 전체 주석을 따옴표로 묶습니다.","stringUnsupportedEscape":"문자열 리터럴에 지원되지 않는 이스케이프 시퀀스가 있습니다.","stringUnterminated":"문자열 리터럴이 종료되지 않았습니다.","stubFileMissing":"\\"{importName}\\"에 대한 스텁 파일을 찾을 수 없습니다.","stubUsesGetAttr":"형식 스텁 파일이 불완전합니다. \\"__getattr__\\"는 모듈에 대한 형식 오류를 모호하게 합니다.","sublistParamsIncompatible":"하위 목록 매개 변수는 Python 3.x에서 지원되지 않습니다.","superCallArgCount":"‘super’ 호출에는 인수가 2개 이하여야 합니다.","superCallFirstArg":"\\"super\\" 호출에 대한 첫 번째 인수로 클래스 형식이 필요하지만 \\"{type}\\"을(를) 받았습니다.","superCallSecondArg":"\\"super\\" 호출에 대한 두 번째 인수는 \\"{type}\\"에서 파생된 개체 또는 클래스여야 합니다.","superCallZeroArgForm":"\\"super\\" 호출의 인수가 0인 형식은 메서드 내에서만 유효합니다.","superCallZeroArgFormStaticMethod":"\\"super\\" 호출의 인수가 0인 형식은 정적 메서드 내에서 유효하지 않습니다.","symbolIsPossiblyUnbound":"\\"{name}\\"은(는) 바인딩되지 않은 것일 수 있습니다.","symbolIsUnbound":"\\"{name}\\"의 바인딩이 해제되었습니다.","symbolIsUndefined":"\\"{name}\\"이(가) 정의되지 않았습니다.","symbolOverridden":"\\"{name}\\"이(가) 클래스 \\"{className}\\"에서 동일한 이름의 기호를 재정의합니다.","ternaryNotAllowed":"형식 주석에는 3항 식이 허용되지 않습니다.","totalOrderingMissingMethod":"클래스는 total_ordering을 사용하려면 \\"__lt__\\", \\"__le__\\", \\"__gt__\\" 또는 \\"__ge__\\" 중 하나를 정의해야 합니다.","trailingCommaInFromImport":"주변 괄호 없이는 후행 쉼표를 사용할 수 없습니다.","tryWithoutExcept":"try 문에는 except 또는 finally 절이 하나 이상 있어야 합니다.","tupleAssignmentMismatch":"형식이 ‘{type}’인 식을 대상 목록에 할당할 수 없습니다.","tupleInAnnotation":"형식 주석에는 튜플 식을 사용할 수 없습니다.","tupleIndexOutOfRange":"{index} 인덱스가 {type} 형식의 범위를 벗어났습니다.","typeAliasIllegalExpressionForm":"형식 별칭 정의에 대한 식 양식이 잘못되었습니다.","typeAliasIsRecursiveDirect":"형식 별칭 ‘{name}’의 정의에서 스스로를 사용할 수 없습니다.","typeAliasNotInModuleOrClass":"TypeAlias는 모듈 또는 클래스 범위 내에서만 정의할 수 있습니다.","typeAliasRedeclared":"\\"{name}\\"은(는) TypeAlias로 선언되며 한 번만 할당할 수 있습니다.","typeAliasStatementBadScope":"type 문은 모듈 또는 클래스 범위 내에서만 사용할 수 있습니다.","typeAliasStatementIllegal":"형식 별칭 문에는 Python 3.12 이상이 필요합니다.","typeAliasTypeBaseClass":"\\"type\\" 문에 정의된 형식 별칭은 기본 클래스로 사용할 수 없습니다.","typeAliasTypeMustBeAssigned":"TypeAliasType은 형식 별칭과 이름이 같은 변수에 할당해야 합니다.","typeAliasTypeNameArg":"TypeAliasType의 첫 번째 인수는 형식 별칭의 이름을 나타내는 문자열 리터럴이어야 합니다.","typeAliasTypeNameMismatch":"형식 별칭의 이름은 할당된 변수의 이름과 일치해야 합니다.","typeAliasTypeParamInvalid":"형식 매개 변수 목록은 TypeVar, TypeVarTuple 또는 ParamSpec만 포함하는 튜플이어야 합니다.","typeAnnotationCall":"형식 식에는 호출 식을 사용할 수 없습니다.","typeAnnotationVariable":"형식 식에는 변수를 사용할 수 없습니다.","typeAnnotationWithCallable":"\\"type\\"에 대한 형식 인수는 클래스여야 합니다. 콜러블은 지원되지 않습니다.","typeArgListExpected":"ParamSpec, 줄임표 또는 형식 목록이 필요합니다.","typeArgListNotAllowed":"이 형식 인수에는 목록 식을 사용할 수 없습니다.","typeArgsExpectingNone":"클래스 \\"{name}\\"에 형식 인수가 필요하지 않습니다.","typeArgsMismatchOne":"하나의 형식 인수가 필요하지만 {received}을(를) 받았습니다.","typeArgsMissingForAlias":"제네릭 형식 별칭 \\"{name}\\"에 대한 형식 인수가 필요합니다.","typeArgsMissingForClass":"‘{name}’ 제네릭 클래스에 대한 형식 인수가 필요합니다.","typeArgsTooFew":"\\"{name}\\"에 대해 제공된 형식 인수가 너무 적습니다. {expected}이(가) 필요하지만 {received}을(를) 받았습니다.","typeArgsTooMany":"‘{name}’에 대한 형식 인수가 너무 많습니다. {expected}이(가) 필요하지만 {received}을(를) 받았습니다.","typeAssignmentMismatch":"\\"{sourceType}\\" 형식의 식을 선언된 형식 \\"{destType}\\"에 할당할 수 없습니다.","typeAssignmentMismatchWildcard":"가져오기 기호 \\"{name}\\"에 선언된 형식 \\"{destType}\\"에 할당할 수 없는 \\"{sourceType}\\" 형식이 있습니다.","typeCallNotAllowed":"type() 호출은 형식 주석에 사용하면 안 됩니다.","typeCheckOnly":"\\"{name}\\"이(가) @type_check_only로 표시되어 있으므로 형식 주석에서만 사용할 수 있습니다.","typeCommentDeprecated":"형식 주석의 사용은 더 이상 사용되지 않습니다. 대신 형식 주석 사용","typeExpectedClass":"형식 식이 필요하지만 \\"{type}\\"을(를) 받았습니다.","typeGuardArgCount":"\\"TypeGuard\\" 또는 \\"TypeIs\\" 뒤에 단일 형식 인수가 필요합니다.","typeGuardParamCount":"사용자 정의 type guard 함수 및 메서드에는 하나 이상의 입력 매개 변수가 있어야 합니다.","typeIsReturnType":"TypeIs의 반환 형식(\\"{returnType}\\")이 값 매개 변수 형식(\\"{type}\\")과 일치하지 않습니다.","typeNotAwaitable":"‘{type}’은(는) 대기할 수 없습니다.","typeNotIntantiable":"\\"{type}\\"을(를) 인스턴스화할 수 없습니다.","typeNotIterable":"\\"{type}\\" 반복할 수 없습니다.","typeNotSpecializable":"‘{type}’ 형식을 특수화할 수 없습니다.","typeNotSubscriptable":"\\"{type}\\" 형식의 개체를 첨자할 수 없습니다.","typeNotSupportBinaryOperator":"‘{operator}’ 연산자는 ‘{leftType}’ 및 ‘{rightType}’ 형식에 대해 지원되지 않습니다.","typeNotSupportBinaryOperatorBidirectional":"예상 형식이 ‘{expectedType}’인 경우 ‘{leftType}’ 및 ‘{rightType}’ 형식에 대해 ‘{operator}’ 연산자가 지원되지 않습니다.","typeNotSupportUnaryOperator":"‘{type}’‘에 대해 ’{operator}‘ 연산자가 지원되지 않습니다.","typeNotSupportUnaryOperatorBidirectional":"예상 형식이 \\"{expectedType}\\" 경우 형식 \\"{type}\\"에 대해 연산자 \\"{operator}\\"이(가) 지원되지 않습니다.","typeNotUsableWith":"\\"{type}\\" 형식의 개체는 {method}을(를) 구현하지 않으므로 \\"with\\"와 함께 사용할 수 없습니다.","typeParameterBoundNotAllowed":"바운드 또는 제약 조건은 가변 인자 형식 매개 변수 또는 ParamSpec와 함께 사용할 수 없습니다.","typeParameterConstraintTuple":"형식 매개 변수 제약 조건은 두 개 이상의 형식 튜플이어야 합니다.","typeParameterExistingTypeParameter":"형식 매개 변수 \\"{name}\\"이(가) 이미 사용 중입니다.","typeParameterNotDeclared":"형식 매개 변수 \\"{name}\\"이(가) \\"{container}\\"의 형식 매개 변수 목록에 포함되어 있지 않습니다.","typeParametersMissing":"하나 이상의 형식 매개 변수를 지정해야 합니다.","typePartiallyUnknown":"\\"{name}\\"의 형식을 부분적으로 알 수 없습니다.","typeUnknown":"\\"{name}\\" 유형을 알 수 없습니다.","typeVarAssignedName":"TypeVar을 \\"{name}\\"이라는 변수에 할당해야 합니다.","typeVarAssignmentMismatch":"‘{type}’ 형식을 ‘{name}’ 형식 변수에 할당할 수 없습니다.","typeVarBoundAndConstrained":"TypeVar는 바인딩되고 제한될 수 없습니다.","typeVarBoundGeneric":"TypeVar 바인딩 형식은 제네릭일 수 없습니다.","typeVarConstraintGeneric":"TypeVar 제약 조건 형식은 제네릭일 수 없습니다.","typeVarDefaultBoundMismatch":"TypeVar 기본 형식은 바인딩된 형식의 하위 형식이어야 합니다.","typeVarDefaultConstraintMismatch":"TypeVar 기본 형식은 제약이 있는 형식 중 하나여야 합니다.","typeVarDefaultIllegal":"형식 변수 기본 형식은 Python 3.13 이상이 필요합니다.","typeVarDefaultInvalidTypeVar":"형식 매개 변수 \\"{name}\\"에 범위를 벗어난 하나 이상의 형식 변수를 참조하는 기본 형식이 있습니다.","typeVarFirstArg":"TypeVar의 이름이 첫 번째 인수로 필요합니다.","typeVarNoMember":"TypeVar \\"{type}\\"에 멤버 \\"{name}\\"이(가) 없습니다.","typeVarNotSubscriptable":"TypeVar \\"{type}\\"을(를) 첨자할 수 없습니다.","typeVarNotUsedByOuterScope":"형식 변수 \\"{name}\\"은(는) 이 컨텍스트에서 의미가 없습니다.","typeVarPossiblyUnsolvable":"호출자가 ‘{param}’ 매개 변수에 대한 인수를 제공하지 않으면 ‘{name}’ 형식 변수가 확인되지 않을 수 있습니다.","typeVarScopedToReturnType":"‘{name}’ 형식 변수는 반환 형식 내에서 호출 가능으로 범위가 지정되며 함수 본문에서 참조할 수 없습니다.","typeVarSingleConstraint":"TypeVar에는 두 개 이상의 제한된 형식이 있어야 합니다.","typeVarTupleConstraints":"TypeVarTuple에는 값 제약 조건이 있을 수 없습니다.","typeVarTupleContext":"TypeVarTuple은 이 컨텍스트에서 허용되지 않습니다.","typeVarTupleDefaultNotUnpacked":"TypeVarTuple 기본 형식은 압축을 푼 튜플 또는 TypeVarTuple이어야 합니다.","typeVarTupleMustBeUnpacked":"TypeVarTuple 값에는 압축 풀기 연산자가 필요합니다.","typeVarTupleUnknownParam":"\\"{name}\\"은(는) TypeVarTuple에 대한 알 수 없는 매개 변수입니다.","typeVarUnknownParam":"‘{name}’은(는) TypeVar에 대한 알 수 없는 매개 변수입니다.","typeVarUsedByOuterScope":"TypeVar ‘{name}’은(는) 외부 범위에서 이미 사용 중입니다.","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\"이(가) 제네릭 함수 시그니처에 한 번만 나타납니다.","typeVarVariance":"TypeVar는 공변이면서 반공변일 수 없습니다.","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\"에 기본값이 있으며 TypeVarTuple \\"{variadicName}\\"을(를) 따를 수 없습니다.","typeVarWithoutDefault":"‘{name}’은 기본 형식이 없으므로 형식 매개 변수 목록에서 ‘{other}’ 뒤에 나타날 수 없습니다.","typeVarsNotInGenericOrProtocol":"Generic[] 또는 Protocol[]에는 모든 형식 변수가 포함되어야 합니다.","typedDictAccess":"TypedDict의 항목에 액세스할 수 없습니다.","typedDictAssignedName":"TypedDict를 \\"{name}\\"이라는 변수에 할당해야 합니다.","typedDictBadVar":"TypedDict 클래스는 형식 주석만 포함할 수 있습니다.","typedDictBaseClass":"TypedDict 클래스의 모든 기본 클래스도 TypedDict 클래스여야 합니다.","typedDictBoolParam":"\\"{name}\\" 매개 변수에 True 또는 False 값이 있어야 합니다.","typedDictClosedExtras":"기본 클래스 \\"{name}\\"은(는) 닫힌 TypedDict입니다. 추가 항목은 \\"{type}\\" 형식이어야 합니다.","typedDictClosedNoExtras":"기본 클래스 \\"{name}\\"은(는) 닫힌 TypedDict입니다. 추가 항목은 허용되지 않습니다.","typedDictDelete":"TypedDict에서 항목을 삭제할 수 없습니다.","typedDictEmptyName":"TypedDict 내의 이름은 비워 둘 수 없습니다.","typedDictEntryName":"사전 항목 이름에 필요한 문자열 리터럴","typedDictEntryUnique":"사전 내의 이름은 고유해야 합니다.","typedDictExtraArgs":"추가 TypedDict 인수가 지원되지 않음","typedDictFieldNotRequiredRedefinition":"TypedDict 항목 \\"{name}\\"은(는) NotRequired로 재정의될 수 없습니다.","typedDictFieldReadOnlyRedefinition":"TypedDict 항목 \\"{name}\\"은(는) ReadOnly로 재정의될 수 없습니다.","typedDictFieldRequiredRedefinition":"TypedDict 항목 \\"{name}\\"은(는) 필수 항목으로 재정의될 수 없습니다.","typedDictFirstArg":"TypedDict 클래스 이름이 첫 번째 인수로 필요합니다.","typedDictInitsubclassParameter":"TypedDict는 __init_subclass__ 매개 변수 \\"{name}\\"을(를) 지원하지 않습니다.","typedDictNotAllowed":"이 컨텍스트에서는 \\"TypedDict\\"를 사용할 수 없습니다.","typedDictSecondArgDict":"두 번째 매개 변수로 사전 또는 키워드 매개 변수가 필요합니다.","typedDictSecondArgDictEntry":"단순 사전 항목이 필요합니다.","typedDictSet":"TypedDict에서 항목을 할당할 수 없습니다.","unaccessedClass":"‘{name}’ 클래스에 액세스할 수 없습니다.","unaccessedFunction":"함수 \\"{name}\\"에 액세스할 수 없습니다.","unaccessedImport":"가져오기 \\"{name}\\"에 액세스할 수 없습니다.","unaccessedSymbol":"\\"{name}\\"에 액세스할 수 없습니다.","unaccessedVariable":"변수 \\"{name}\\"에 액세스할 수 없습니다.","unannotatedFunctionSkipped":"주석이 없으므로 ‘{name}’ 함수 분석을 건너뜁니다.","unaryOperationNotAllowed":"형식 주석에는 단항 연산자를 사용할 수 없습니다.","unexpectedAsyncToken":"\\"async\\"를 따르려면 \\"def\\", \\"with\\" 또는 \\"for\\"가 필요합니다.","unexpectedExprToken":"식 끝에 예기치 않은 토큰이 있습니다.","unexpectedIndent":"예기치 않은 들여쓰기","unexpectedUnindent":"들여쓰기가 필요 없음","unhashableDictKey":"사전 키는 해시 가능해야 합니다.","unhashableSetEntry":"집합 항목은 해시가 가능해야 합니다.","uninitializedAbstractVariables":"추상 기본 클래스에 정의된 변수가 최종 클래스 \\"{classType}\\"에서 초기화되지 않았습니다.","uninitializedInstanceVariable":"인스턴스 변수 \\"{name}\\"이(가) 클래스 본문 또는 __init__ 메서드에서 초기화되지 않았습니다.","unionForwardReferenceNotAllowed":"공용 구조체 구문은 문자열 피연산자에서 사용할 수 없습니다. 전체 식 주위에 따옴표 사용","unionSyntaxIllegal":"공용 구조체에 대한 대체 구문에는 Python 3.10 이상이 필요합니다.","unionTypeArgCount":"공용 구조체에는 둘 이상의 형식 인수가 필요합니다.","unionUnpackedTuple":"Union은 압축을 푼 튜플을 포함할 수 없습니다.","unionUnpackedTypeVarTuple":"Union은 압축을 푼 TypeVarTuple을 포함할 수 없습니다.","unnecessaryCast":"불필요한 ‘캐스트’ 호출입니다. 형식이 이미 ‘{type}’입니다.","unnecessaryIsInstanceAlways":"불필요한 isinstance 호출입니다. \\"{testType}\\"은(는) 항상 \\"{classType}\\"의 인스턴스입니다.","unnecessaryIsSubclassAlways":"불필요한 issubclass 호출입니다. ’{testType}‘은(는) 항상 ’{classType}‘의 하위 클래스입니다.","unnecessaryPyrightIgnore":"불필요한 ‘# pyright: 무시’ 주석입니다.","unnecessaryPyrightIgnoreRule":"불필요한 \\"#ight: ignore\\" 규칙: \\"{name}\\"","unnecessaryTypeIgnore":"불필요한 ‘# 형식: 무시’ 주석입니다.","unpackArgCount":"‘Final’ 뒤에는 단일 형식 인수가 필요합니다.","unpackExpectedTypeVarTuple":"Unpack에 대한 형식 인수로 TypeVarTuple 또는 튜플이 필요합니다.","unpackExpectedTypedDict":"압축 풀기를 위해서는 TypedDict 형식 인수가 필요합니다.","unpackIllegalInComprehension":"압축 풀기 작업은 이해에서 사용할 수 없습니다.","unpackInAnnotation":"형식 주석에는 압축 풀기 연산자를 사용할 수 없습니다.","unpackInDict":"사전에서 압축 풀기 작업이 허용되지 않음","unpackInSet":"집합 내에서는 압축 풀기 연산자를 사용할 수 없습니다.","unpackNotAllowed":"이 컨텍스트에서는 압축 풀기가 허용되지 않습니다.","unpackOperatorNotAllowed":"이 컨텍스트에서는 압축 풀기 작업이 허용되지 않습니다.","unpackTuplesIllegal":"Python 3.8 이전의 튜플에서는 압축 풀기 작업이 허용되지 않습니다.","unpackedArgInTypeArgument":"압축되지 않은 인수는 형식 인수 목록에 사용할 수 없습니다.","unpackedArgWithVariadicParam":"압축을 푼 인수는 TypeVarTuple 매개 변수에 사용할 수 없습니다.","unpackedDictArgumentNotMapping":"** 뒤의 인수 식은 \\"str\\" 키 형식의 매핑이어야 합니다.","unpackedDictSubscriptIllegal":"아래 첨자에서 사전 압축 풀기 연산자는 사용할 수 없습니다.","unpackedSubscriptIllegal":"아래 첨자의 압축 풀기 연산자에는 Python 3.11 이상이 필요합니다.","unpackedTypeVarTupleExpected":"압축 해제된 TypeVarTuple이 필요합니다. 압축 풀기[{name1}] 또는 *{name2} 사용","unpackedTypedDictArgument":"압축되지 않은 TypedDict 인수를 매개 변수와 일치시킬 수 없습니다.","unreachableCode":"코드에 접근할 수 없습니다.","unreachableExcept":"예외가 이미 처리되었으므로 Except 절에 연결할 수 없습니다.","unsupportedDunderAllOperation":"\\"__all__\\"에 대한 작업이 지원되지 않으므로 내보낸 기호 목록이 잘못되었을 수 있습니다.","unusedCallResult":"호출 식의 결과가 ‘{type}’ 형식이므로 사용되지 않습니다. 의도적인 경우 변수 ‘_’에 할당하세요.","unusedCoroutine":"비동기 함수 호출의 결과가 사용되지 않습니다. \\"await\\"를 사용하거나 변수에 결과 할당","unusedExpression":"식 값은 사용되지 않습니다.","varAnnotationIllegal":"변수에 대한 형식 주석에는 Python 3.6 이상이 필요합니다. 이전 버전과의 호환성을 위해 형식 주석 사용","variableFinalOverride":"변수 \\"{name}\\"이(가) Final로 표시되고 \\"{className}\\" 클래스에서 이름이 같은 비-Final 변수를 재정의합니다.","variadicTypeArgsTooMany":"형식 인수 목록에는 압축을 풀고 있는 TypeVarTuple 또는 튜플이 하나만 있을 수 있습니다.","variadicTypeParamTooManyAlias":"형식 별칭에는 TypeVarTuple 형식 매개 변수가 최대 하나만 있을 수 있지만 여러 ({names})가 수신되었습니다.","variadicTypeParamTooManyClass":"제네릭 클래스에는 TypeVarTuple 형식 매개 변수가 하나만 있을 수 있지만 여러 ({names})을(를) 받았습니다.","walrusIllegal":"연산자 \\":=\\"에는 Python 3.8 이상이 필요합니다.","walrusNotAllowed":"주변 괄호 없이는 이 컨텍스트에서 \\":=\\" 연산자를 사용할 수 없습니다.","wildcardInFunction":"클래스 또는 함수 내에서 와일드카드 가져오기가 허용되지 않음","wildcardLibraryImport":"라이브러리에서 와일드카드를 가져오는 것은 허용되지 않습니다.","wildcardPatternTypePartiallyUnknown":"와일드카드 패턴으로 캡처된 형식을 부분적으로 알 수 없습니다.","wildcardPatternTypeUnknown":"와일드카드 패턴으로 캡처된 형식을 부분적으로 알 수 없습니다.","yieldFromIllegal":"\\"yield from\\"을 사용하려면 Python 3.3 이상이 필요합니다.","yieldFromOutsideAsync":"비동기 함수에서는 \\"yield from\\"을 사용할 수 없습니다.","yieldOutsideFunction":"함수 또는 람다 외부에서는 ‘yield’를 사용할 수 없습니다.","yieldWithinListCompr":"목록 이해 내에서는 \\"yield\\"를 사용할 수 없습니다.","zeroCaseStatementsFound":"Match 문에는 Case 문이 하나 이상 포함되어야 합니다.","zeroLengthTupleNotAllowed":"길이가 0인 튜플은 이 컨텍스트에서 허용되지 않습니다."},"DiagnosticAddendum":{"annotatedNotAllowed":"\\"주석이 추가된\\" 특수 양식은 인스턴스 및 클래스 검사와 함께 사용할 수 없습니다.","argParam":"인수가 \\"{paramName}\\" 매개 변수에 해당합니다.","argParamFunction":"인수가 \\"{functionName}\\" 함수의 \\"{paramName}\\" 매개 변수에 해당합니다.","argsParamMissing":"‘*{paramName}’ 매개 변수에 해당하는 매개 변수가 없습니다.","argsPositionOnly":"위치 전용 매개 변수가 일치하지 않습니다. {expected}이)(가) 필요하지만 {received}을(를) 받았습니다.","argumentType":"인수 형식이 \\"{type}\\"입니다.","argumentTypes":"인수 형식: ({types})","assignToNone":"\\"None\\" 형식에는 형식을 할당할 수 없습니다.","asyncHelp":"‘async with’를 사용하시겠습니까?","baseClassIncompatible":"기본 클래스 \\"{baseClass}\\"은(는) \\"{type}\\" 유형과 호환되지 않습니다.","baseClassIncompatibleSubclass":"기본 클래스 \\"{baseClass}\\"은(는) \\"{type}\\" 유형과 호환되지 않는 \\"{subclass}\\"에서 파생됩니다.","baseClassOverriddenType":"기본 클래스 \\"{baseClass}\\"이(가) 재정의된 \\"{type}\\" 형식을 제공합니다.","baseClassOverridesType":"‘{baseClass}’ 기본 클래스가 ‘{type}’ 형식을 재정의합니다.","bytesTypePromotions":"disableBytesTypePromotions를 false로 설정하여 \\"bytearray\\" 및 \\"memoryview\\"에 대한 형식 승격 동작을 사용하도록 설정합니다.","conditionalRequiresBool":"\\"{operandType}\\" 형식에 대한 메서드 __bool__에서 \\"bool\\" 대신 \\"{boolReturnType}\\" 형식을 반환합니다.","dataClassFieldLocation":"필드 선언","dataClassFrozen":"\\"{name}\\"이(가) 고정되어 있습니다.","dataProtocolUnsupported":"\\"{name}\\"은(는) 데이터 프로토콜입니다.","descriptorAccessBindingFailed":"설명자 클래스 \\"{className}\\"에 대한 메서드 \\"{name}\\"을(를) 바인딩하지 못했습니다.","descriptorAccessCallFailed":"설명자 클래스 \\"{className}\\"에 대한 메서드 \\"{name}\\"을(를) 호출하지 못했습니다.","finalMethod":"최종 메서드","functionParamDefaultMissing":"‘{name}’ 매개 변수에 기본 인수가 없습니다.","functionParamName":"매개 변수 이름 불일치: \\"{destName}\\" 및 \\"{srcName}\\"","functionParamPositionOnly":"위치 전용 매개 변수가 일치하지 않습니다. 매개 변수 \\"{name}\\"은(는) 위치 전용이 아닙니다.","functionReturnTypeMismatch":"‘{sourceType}’ 함수 반환 형식은 ‘{destType}’ 형식과 호환되지 않습니다.","functionTooFewParams":"함수가 너무 적은 위치 매개 변수를 허용합니다. {expected}이(가) 필요하지만 {received}을(를) 받았습니다.","functionTooManyParams":"함수가 너무 많은 위치 매개 변수를 허용합니다. {expected}이(가) 필요하지만 {received}을(를) 받았습니다.","genericClassNotAllowed":"인스턴스 또는 클래스 검사에 형식 인수가 허용되지 않는 제네릭 형식","incompatibleDeleter":"속성 삭제자 메서드가 호환되지 않습니다.","incompatibleGetter":"속성 getter 메서드가 호환되지 않습니다.","incompatibleSetter":"속성 setter 메서드가 호환되지 않습니다.","initMethodLocation":"__init__ 메서드가 \\"{type}\\" 클래스에 정의되어 있습니다.","initMethodSignature":"__init__의 서명은 \\"{type}\\"입니다.","initSubclassLocation":"__init_subclass__ 메서드는 \\"{name}\\" 클래스에 정의되어 있음","invariantSuggestionDict":"값 형식에서 공변(covariant)인 \\"dict\\"에서 \\"Mapping\\"(매핑)으로 전환하는 것이 좋습니다.","invariantSuggestionList":"공변(covariant)인 \\"list\\"에서 \\"Sequence\\"로 전환하는 것이 좋습니다.","invariantSuggestionSet":"공변(covariant)인 \\"set\\"에서 \\"Container\\"로 전환하는 것이 좋습니다.","keyNotRequired":"‘{name}’은(는) ‘{type}’에서 필수 키가 아니므로 액세스로 인해 런타임 예외가 발생할 수 있습니다.","keyReadOnly":"\\"{name}\\"은(는) \\"{type}\\"의 읽기 전용 키입니다.","keyRequiredDeleted":"\\"{name}\\"은(는) 필수 키이므로 삭제할 수 없습니다.","keyUndefined":"\\"{name}\\"이 \\"{type}\\"에 정의된 키가 아닙니다.","kwargsParamMissing":"‘**{paramName}’ 매개 변수에 해당하는 매개 변수가 없습니다.","listAssignmentMismatch":"\\"{type}\\" 형식이 대상 목록과 호환되지 않습니다.","literalAssignmentMismatch":"\\"{sourceType}\\"을(를) \\"{destType}\\" 형식에 할당할 수 없습니다.","matchIsNotExhaustiveHint":"전체 처리가 의도되지 않은 경우 \\"case _: pass\\"를 추가합니다.","matchIsNotExhaustiveType":"처리되지 않은 형식: \\"{type}\\"","memberAssignment":"‘{type}’ 형식의 식을 ‘{classType}’ 클래스의 ‘{name}’ 멤버에 할당할 수 없습니다.","memberIsAbstract":"\\"{type}.{name}\\"이(가) 구현되지 않았습니다.","memberIsAbstractMore":"{count}개 더...","memberIsClassVarInProtocol":"\\"{name}\\"은(는) 프로토콜에서 ClassVar로 정의됩니다.","memberIsFinalInProtocol":"\\"{name}\\"이(가) 프로토콜에서 Final로 표시됨","memberIsInitVar":"멤버 \\"{name}\\"은(는) 초기화 전용 필드입니다.","memberIsInvariant":"\\"{name}\\"은(는) 변경 가능하므로 고정되지 않습니다.","memberIsNotClassVarInClass":"\\"{name}\\"은(는) 프로토콜과 호환되려면 ClassVar로 정의해야 합니다.","memberIsNotClassVarInProtocol":"\\"{name}\\"이(가) 프로토콜에서 ClassVar로 정의되지 않았습니다.","memberIsNotFinalInProtocol":"‘{name}’이(가) 프로토콜에서 최종으로 표시되지 않았습니다.","memberIsWritableInProtocol":"\\"{name}\\"은(는) 프로토콜에서 쓸 수 있습니다.","memberSetClassVar":"‘{name}’ 멤버는 ClassVar이므로 클래스 인스턴스를 통해 할당할 수 없습니다.","memberTypeMismatch":"\\"{name}\\"은(는) 호환되지 않는 형식입니다.","memberUnknown":"멤버 \\"{name}\\"을(를) 알 수 없습니다.","metaclassConflict":"메타클래스 \\"{metaclass1}\\"이(가) \\"{metaclass2}\\"과(와) 충돌합니다.","missingDeleter":"속성 삭제자 메서드가 없습니다.","missingGetter":"속성 getter 메서드가 없습니다.","missingSetter":"속성 setter 메서드가 없습니다.","namedParamMissingInDest":"키워드 매개 변수 ‘{name}’이(가) 대상에 없습니다.","namedParamMissingInSource":"키워드 매개 변수 ‘{name}’이(가) 소스에 없습니다.","namedParamTypeMismatch":"\\"{sourceType}\\" 형식의 키워드 매개 변수 \\"{name}\\"을(를) \\"{destType}\\" 형식에 할당할 수 없습니다.","namedTupleNotAllowed":"인스턴스 또는 클래스 검사에는 NamedTuple을 사용할 수 없습니다.","newMethodLocation":"__new__ 메서드가 \\"{type}\\" 클래스에 정의되어 있습니다.","newMethodSignature":"__new__ 의 서명은 \\"{type}\\"입니다.","newTypeClassNotAllowed":"NewType으로 만든 클래스는 인스턴스 및 클래스 검사에 사용할 수 없습니다.","noOverloadAssignable":"\\"{type}\\" 형식과 일치하는 오버로드된 함수가 없습니다.","noneNotAllowed":"인스턴스 또는 클래스 검사에는 None을 사용할 수 없음","orPatternMissingName":"누락된 이름: {name}","overloadIndex":"오버로드 {index}이(가) 가장 가까운 일치 항목입니다.","overloadNotAssignable":"\\"{name}\\"의 오버로드를 하나 이상 할당할 수 없습니다.","overloadSignature":"오버로드 서명은 여기에 정의되어 있습니다.","overriddenMethod":"재정의된 메서드","overriddenSymbol":"재정의된 기호","overrideInvariantMismatch":"\\"{overrideType}\\" 재정의 형식이 \\"{baseType}\\" 기본 형식과 같지 않습니다.","overrideIsInvariant":"변수를 변경할 수 있으므로 해당 형식은 고정됩니다.","overrideNoOverloadMatches":"재정의의 오버로드 서명이 기본 메서드와 호환되지 않습니다.","overrideNotClassMethod":"기본 메서드가 classmethod로 선언되었지만 재정의는 그렇지 않은 경우","overrideNotInstanceMethod":"기본 메서드가 instance 메서드로 선언되었지만 재정의가","overrideNotStaticMethod":"기본 메서드가 staticmethod로 선언되었지만 재정의는 그렇지 않습니다.","overrideOverloadNoMatch":"재정의는 기본 메서드의 모든 오버로드를 처리하지 않습니다.","overrideOverloadOrder":"재정의 메서드에 대한 오버로드는 기본 메서드와 동일한 순서여야 합니다.","overrideParamKeywordNoDefault":"‘{name}’ 키워드 매개 변수가 불일치합니다. 기본 매개 변수에 기본 인수 값이 있습니다. 재정의 매개 변수에는 없습니다.","overrideParamKeywordType":"‘{name}’ 키워드 매개 변수 형식이 일치하지 않습니다. 기본 매개 변수는 형식이 ‘{baseType}’, 재정의 매개 변수는 형식이 ‘{overrideType}’입니다.","overrideParamName":"{index} 매개 변수 이름이 일치하지 않습니다. 기본 매개 변수는 이름이 ‘{baseName}’입니다. 재정의 매개 변수는 이름이 ‘{overrideName}’입니다.","overrideParamNameExtra":"기본에 매개 변수 \\"{name}\\"이(가) 없습니다.","overrideParamNameMissing":"재정의에 ‘{name}’ 매개 변수가 없습니다.","overrideParamNamePositionOnly":"매개 변수 {index} 불일치: 기본 매개 변수 \\"{baseName}\\"은(는) 키워드 매개 변수이며 재정의 매개 변수는 위치 전용임","overrideParamNoDefault":"{index} 매개 변수가 불일치합니다. 기본 매개 변수에 기본 인수 값이 있습니다. 재정의 매개 변수에는 없습니다.","overrideParamType":"‘{index}’ 매개 변수 형식이 일치하지 않습니다. 기본 매개 변수는 형식이 ‘{baseType}’, 재정의 매개 변수는 형식이 ‘{overrideType}’입니다.","overridePositionalParamCount":"위치 매개 변수 개수가 일치하지 않습니다. 기본 메서드에 {baseCount}개가 있지만 재정의에는 {overrideCount}개가 있습니다.","overrideReturnType":"반환 형식 불일치: 기본 메서드는 \\"{baseType}\\" 형식을 반환하고 재정의는 \\"{overrideType}\\" 형식을 반환합니다.","overrideType":"기본 클래스는 형식을 \\"{type}\\"으로 정의합니다.","paramAssignment":"매개 변수 {index}: \\"{sourceType}\\" 형식을 \\"{destType}\\" 형식에 할당할 수 없습니다.","paramSpecMissingInOverride":"재정의 메서드에 ParamSpec 매개 변수가 없습니다.","paramType":"매개 변수 형식은 \\"{paramType}\\"입니다.","privateImportFromPyTypedSource":"대신 \\"{module}\\"에서 가져오기","propertyAccessFromProtocolClass":"프로토콜 클래스 내에 정의된 속성은 클래스 변수로 액세스할 수 없습니다.","propertyMethodIncompatible":"속성 메서드 \\"{name}\\"이(가) 호환되지 않습니다.","propertyMethodMissing":"재정의에 ‘{name}’ 속성 메서드가 없습니다.","propertyMissingDeleter":"\\"{name}\\" 속성에 정의된 삭제자가 없습니다.","propertyMissingSetter":"\\"{name}\\" 속성에 정의된 setter가 없습니다.","protocolIncompatible":"‘{sourceType}’은(는) ‘{destType}’ 프로토콜과 호환되지 않습니다.","protocolMemberMissing":"\\"{name}\\"이(가) 없습니다.","protocolRequiresRuntimeCheckable":"인스턴스 및 클래스 검사와 함께 사용하려면 프로토콜 클래스를 @runtime_checkable 합니다.","protocolSourceIsNotConcrete":"‘{sourceType}’은(는) 구체적인 클래스 형식이 아니므로 ‘{destType}’ 형식에 할당할 수 없습니다.","protocolUnsafeOverlap":"\\"{name}\\"의 특성은 프로토콜과 이름이 같습니다.","pyrightCommentIgnoreTip":"\\"# pyright: ignore[<diagnostic rules>]을(를) 사용하여 한 줄에 대한 진단을 억제합니다.","readOnlyAttribute":"특성 \\"{name}\\"은(는) 읽기 전용입니다.","seeClassDeclaration":"클래스 선언 참조","seeDeclaration":"선언 참조","seeFunctionDeclaration":"함수 선언 참조","seeMethodDeclaration":"메서드 선언 참조","seeParameterDeclaration":"매개 변수 선언 보기","seeTypeAliasDeclaration":"형식 별칭 선언 참조","seeVariableDeclaration":"변수 선언 보기","tupleAssignmentMismatch":"‘{type}’ 형식이 대상 튜플과 호환되지 않습니다.","tupleEntryTypeMismatch":"튜플 항목 {entry}이(가) 잘못된 형식입니다.","tupleSizeIndeterminateSrc":"튜플 크기 불일치: {expected}이(가) 필요하지만 미정을 받았습니다.","tupleSizeIndeterminateSrcDest":"튜플 크기 불일치: {expected} 이상이 필요하지만 미정을 받았습니다.","tupleSizeMismatch":"튜플 크기 불일치: {expected}이(가) 필요하지만 {received}을(를) 받았습니다.","tupleSizeMismatchIndeterminateDest":"튜플 크기 불일치: {expected} 이상이 필요하지만 {received}을(를) 받았습니다.","typeAliasInstanceCheck":"\\"type\\" 문을 사용해 만든 형식 별칭은 인스턴스 및 클래스 검사에 사용할 수 없습니다.","typeAssignmentMismatch":"\\"{sourceType}\\" 형식은 \\"{destType}\\" 형식에 할당할 수 없습니다.","typeBound":"형식 변수 \\"{name}\\"에 대해 형식 \\"{sourceType}\\"이(가) 바인딩된 형식 \\"{destType}\\"과(와) 호환되지 않습니다.","typeConstrainedTypeVar":"\\"{type}\\" 형식이 제한된 형식 변수 \\"{name}\\"과(와) 호환되지 않습니다.","typeIncompatible":"\\"{sourceType}\\"이(가) \\"{destType}\\"과(와) 호환되지 않습니다.","typeNotClass":"\\"{type}\\"이 클래스가 아닙니다.","typeNotStringLiteral":"‘{type}’은(는) 문자열 리터럴이 아닙니다.","typeOfSymbol":"‘{name}’의 유형이 ‘{type}’입니다.","typeParamSpec":"\\"{type}\\" 형식이 ParamSpec \\"{name}\\"과(와) 호환되지 않습니다.","typeUnsupported":"\\"{type}\\" 형식은 지원되지 않습니다.","typeVarDefaultOutOfScope":"형식 변수 \\"{name}\\"이(가) 범위에 없습니다.","typeVarIsContravariant":"\\"{name}\\" 형식 매개 변수는 반공변형식 매개 변수)이지만 \\"{sourceType}\\"은(는) \\"{destType}\\"의 상위 형식이 아닙니다.","typeVarIsCovariant":"\\"{name}\\" 형식 매개 변수는 공변(covariant)이지만 \\"{sourceType}\\"은(는) \\"{destType}\\"의 하위 형식이 아닙니다.","typeVarIsInvariant":"\\"{name}\\" 형식 매개 변수는 고정이지만 \\"{sourceType}\\"은(는) \\"{destType}\\"와 같지 않습니다.","typeVarNotAllowed":"인스턴스 또는 클래스 검사에 TypeVar가 허용되지 않음","typeVarTupleRequiresKnownLength":"TypeVarTuple을 알 수 없는 길이의 튜플에 바인딩할 수 없습니다.","typeVarUnnecessarySuggestion":"대신 {type}을(를) 사용하세요.","typeVarUnsolvableRemedy":"인수가 제공되지 않을 때 반환 형식을 지정하는 오버로드를 제공합니다.","typeVarsMissing":"누락된 형식 변수: {names}","typedDictBaseClass":"\\"{type}\\" 클래스는 TypedDict가 아닙니다.","typedDictClassNotAllowed":"인스턴스 또는 클래스 검사에 TypedDict 클래스를 사용할 수 없습니다.","typedDictClosedExtraNotAllowed":"항목 \\"{name}\\"을(를) 추가할 수 없음","typedDictClosedExtraTypeMismatch":"형식이 \\"{type}\\"인 항목 \\"{name}\\"을(를) 추가할 수 없음","typedDictClosedFieldNotRequired":"\\"{name}\\" 항목은 NotRequired여야 하므로 추가할 수 없습니다.","typedDictExtraFieldNotAllowed":"\\"{name}\\"이(가) \\"{type}\\"에 없음","typedDictExtraFieldTypeMismatch":"\\"{name}\\" 형식은 \\"{type}\\"의 \\"__extra_items__\\" 형식과 호환되지 않습니다.","typedDictFieldMissing":"\\"{name}\\"이(가) \\"{type}\\"에 없습니다.","typedDictFieldNotReadOnly":"\\"{name}\\"은(는) \\"{type}\\"에서 읽기 전용이 아닙니다.","typedDictFieldNotRequired":"\\"{name}\\"은(는) \\"{type}\\"에 필요하지 않습니다.","typedDictFieldRequired":"\\"{type}\\"에 \\"{name}\\"이(가) 필요합니다.","typedDictFieldTypeMismatch":"\\"{type}\\" 형식은 \\"{name}\\" 항목에 할당할 수 없습니다.","typedDictFieldUndefined":"\\"{name}\\"은(는) \\"{type}\\" 형식의 정의되지 않은 항목입니다.","typedDictFinalMismatch":"@final 불일치로 인해 \\"{sourceType}\\"이(가) \\"{destType}\\"과(와) 호환되지 않습니다.","typedDictKeyAccess":"TypedDict에서 항목을 참조하려면 [\\"{name}\\"]을(를) 사용하세요.","typedDictNotAllowed":"TypedDict는 인스턴스 또는 클래스 검사에 사용할 수 없습니다.","unhashableType":"‘{type}’ 형식을 해시할 수 없습니다.","uninitializedAbstractVariable":"인스턴스 변수 \\"{name}\\"이(가) 추상 기본 클래스 \\"{classType}\\"에 정의되어 있지만 초기화되지 않았습니다.","unreachableExcept":"\\"{exceptionType}\\"은(는) \\"{parentType}\\"의 서브클래스입니다.","useDictInstead":"사전 형식을 나타내려면 Dict[T1, T2]를 사용하세요.","useListInstead":"List[T]를 사용하여 목록 형식을 나타내거나 Union[T1, T2]를 사용하여 공용 구조체 형식을 나타내세요.","useTupleInstead":"튜플[T1, ..., Tn]을 사용하여 튜플 형식을 나타내거나 Union[T1, T2]을 사용하여 공용 구조체 형식을 나타냅니다.","useTypeInstead":"대신 Type[T] 사용","varianceMismatchForClass":"‘{typeVarName}’ 형식 인수의 차이는 ‘{className}’ 기본 클래스와 호환되지 않습니다.","varianceMismatchForTypeAlias":"‘{typeVarName}’ 형식 인수의 차이는 ‘{typeAliasParam}’와(과) 호환되지 않습니다."}}')},28146:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Utwórz typ zastępczy","createTypeStubFor":"Utwórz typ zastępczy dla „{moduleName}”","executingCommand":"Wykonywanie polecenia","filesToAnalyzeCount":"Pliki do przeanalizowania: {count}","filesToAnalyzeOne":"1 plik do analizy","findingReferences":"Znajdowanie odwołań","organizeImports":"Organizuj dyrektywy Import","renameShadowedFile":"Zmień nazwę „{oldFile}” na „{newFile}”"},"Completion":{"autoImportDetail":"Automatyczne importowanie","indexValueDetail":"Wartość indeksu"},"Diagnostic":{"abstractMethodInvocation":"Nie można wywołać metody „{method}”, ponieważ jest abstrakcyjna i niezaimplementowana","annotatedParamCountMismatch":"Niezgodność liczby adnotacji parametru; oczekiwano {expected}, a uzyskano {received}","annotatedTypeArgMissing":"Oczekiwano jednego argumentu typu i co najmniej jednej adnotacji dla wartości „Annotated”","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Adnotacje typu nie mogą używać literałów ciągów formatu (f-strings)","annotationNotSupported":"Adnotacja typu nie jest obsługiwana dla tej instrukcji","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Adnotacje typu nie mogą obejmować wielu literałów ciągów","annotationStringEscape":"Adnotacje typu nie mogą zawierać znaków ucieczki","argAssignment":"Argumentu typu „{argType}” nie można przypisać do parametru typu „{paramType}”","argAssignmentFunction":"Argumentu typu „{argType}” nie można przypisać do parametru typu „{paramType}” w funkcji „{functionName}”","argAssignmentParam":"Argumentu typu „{argType}” nie można przypisać do parametru „{paramName}” typu „{paramType}”","argAssignmentParamFunction":"Argumentu typu „{argType}” nie można przypisać do parametru „{paramName}” typu „{paramType}” w funkcji „{functionName}”","argMissingForParam":"Brak argumentu dla parametru {name}","argMissingForParams":"Brak argumentów dla parametrów {names}","argMorePositionalExpectedCount":"Oczekiwano większej liczby argumentów pozycyjnych: {expected}","argMorePositionalExpectedOne":"Oczekiwano jeszcze 1 argumentu pozycyjnego","argPositional":"Oczekiwano argumentu pozycyjnego","argPositionalExpectedCount":"Oczekiwano liczby argumentów pozycyjnych: {expected}","argPositionalExpectedOne":"Oczekiwano 1 argumentu pozycyjnego","argTypePartiallyUnknown":"Typ argumentu jest częściowo nieznany","argTypeUnknown":"Typ argumentu jest nieznany","assertAlwaysTrue":"Wyrażenie Assert zawsze ma wartość Prawda","assertTypeArgs":"Typ „assert_type” oczekuje dwóch argumentów pozycyjnych","assertTypeTypeMismatch":"Niezgodność „assert_type”; oczekiwano „{expected}”, ale otrzymano „{received}”","assignmentExprComprehension":"Element docelowy wyrażenia przypisania „{name}” nie może używać tej samej nazwy co zrozumienie dla elementu docelowego","assignmentExprContext":"Wyrażenie przypisania musi należeć do modułu, funkcji lub wyrażenia lambda","assignmentExprInSubscript":"Wyrażenia przypisania w indeksie dolnym są obsługiwane tylko w języku Python w wersji 3.10 i nowszej","assignmentInProtocol":"Zmienne wystąpienia lub klasy w klasie protokołu muszą być jawnie zadeklarowane w treści klasy","assignmentTargetExpr":"Wyrażenie nie może być elementem docelowym przypisania","asyncNotInAsyncFunction":"Użycie wartość „async” jest niedozwolone poza funkcją asynchroniczną","awaitIllegal":"Użycie „oczekiwania” wymaga języka Python w wersji 3.5 lub nowszej","awaitNotAllowed":"Adnotacje typu nie mogą używać elementu „await”","awaitNotInAsync":"Wartość „await” jest dozwolona tylko w ramach funkcji asynchronicznej","backticksIllegal":"Wyrażenia otoczone znakami wstecznymi nie są obsługiwane w języku Python w wersji 3.x; zamiast tego użyj wyrażenia repr","baseClassCircular":"Klasa nie może pochodzić od samej siebie","baseClassFinal":"Klasa bazowa „{type}” jest oznaczona jako końcowa i nie można jej podzielić na podklasy","baseClassIncompatible":"Klasy bazowe typu {type} są wzajemnie niezgodne","baseClassInvalid":"Argument klasy musi być klasą bazową","baseClassMethodTypeIncompatible":"Klasy bazowe dla klasy „{classType}” definiują metodę „{name}” w niezgodny sposób","baseClassUnknown":"Typ klasy bazowej jest nieznany, zasłaniając typ klasy pochodnej","baseClassVariableTypeIncompatible":"Klasy bazowe dla klasy „{classType}” definiują zmienną „{name}” w niezgodny sposób","binaryOperationNotAllowed":"Operator binarny nie jest dozwolony w adnotacji typu","bindTypeMismatch":"Nie można powiązać metody „{methodName}”, ponieważ nie można przypisać typu „{type}” do parametru „{paramName}”","breakOutsideLoop":"Wartość „break” może być używana tylko w pętli","callableExtraArgs":"Oczekiwano tylko dwóch argumentów typu „Callable”","callableFirstArg":"Oczekiwano listy typów parametrów lub znaków „...”","callableNotInstantiable":"Nie można utworzyć wystąpienia typu „{type}”","callableSecondArg":"Oczekiwano zwracanego typu jako drugiego argumentu typu dla elementu „Callable”","casePatternIsIrrefutable":"Niepodważalny wzorzec jest dozwolony tylko dla ostatniej instrukcji dotyczącej wielkości liter","classAlreadySpecialized":"Typ „{type}” jest już wyspecjalizowany","classDecoratorTypeUnknown":"Dekorator klasy bez typu przesłania typ klasy; ignorowanie dekoratora","classDefinitionCycle":"Definicja klasy dla „{name}” zależy od niej samej","classGetItemClsParam":"Przesłonięcie __class_getitem__ powinno przyjmować parametr „cls”.","classMethodClsParam":"Metody klasy powinny przyjmować parametr „cls”","classNotRuntimeSubscriptable":"Indeks dolny dla klasy „{name}” wygeneruje wyjątek czasu uruchamiania; umieść adnotację typu w cudzysłowie","classPatternBuiltInArgPositional":"Wzorzec klasy akceptuje tylko podwzorzec pozycyjny","classPatternPositionalArgCount":"Zbyt wiele wzorców pozycyjnych dla klasy „{type}”; oczekiwano {expected}, ale otrzymano {received}","classPatternTypeAlias":"„{type}” nie może być używany we wzorcu klasy, ponieważ jest to alias typu specjalnego","classPropertyDeprecated":"Właściwości klasy są przestarzałe w języku Python 3.11 i nie będą obsługiwane w języku Python 3.13","classTypeParametersIllegal":"Składnia parametru typu klasy wymaga języka Python w wersji 3.12 lub nowszej","classVarFirstArgMissing":"Oczekiwano argumentu typu po wartości „ClassVar”","classVarNotAllowed":"Element „ClassVar” jest niedozwolony w tym kontekście","classVarOverridesInstanceVar":"Zmienna klasy „{name}” przesłania zmienną wystąpienia o tej samej nazwie w klasie „{className}”","classVarTooManyArgs":"Oczekiwano tylko jednego argumentu typu po wartości „ClassVar”","classVarWithTypeVar":"Typ „ClassVar” nie może zawierać zmiennych typu","clsSelfParamTypeMismatch":"Typ parametru „{name}” musi być nadtypem jego klasy „{classType}”","codeTooComplexToAnalyze":"Kod jest zbyt złożony, aby go analizować; zmniejsz złożoność przez refaktoryzację w podprocedury lub poprzez zmniejszenie ścieżek kodu warunkowego","collectionAliasInstantiation":"Nie można utworzyć wystąpienia typu „{type}”. Zamiast niego użyj „{alias}”","comparisonAlwaysFalse":"Warunek zawsze będzie miał wartość Fałsz, ponieważ typy „{leftType}” i „{rightType}” nie nakładają się","comparisonAlwaysTrue":"Warunek zawsze będzie miał wartość Prawda, ponieważ typy „{leftType}” i „{rightType}” nie nakładają się","comprehensionInDict":"Zrozumienia nie można używać z innymi wpisami słownika","comprehensionInSet":"Nie można używać rozumienia z innymi wpisami zestawu","concatenateContext":"„Łączenie” jest niedozwolone w tym kontekście","concatenateParamSpecMissing":"Ostatni argument typu dla elementu „Concatenate” musi mieć wartość ParamSpec lub „...”","concatenateTypeArgsMissing":"Element „Concatenate” wymaga co najmniej dwóch argumentów typu","conditionalOperandInvalid":"Nieprawidłowy warunkowy argument operacji typu „{type}”","constantRedefinition":"Nazwa „{name}” jest stałą (ponieważ jest pisana wielkimi literami) i nie można jej ponownie zdefiniować","constructorNoArgs":"Oczekiwano braku argumentów do konstruktora „{type}”.","constructorParametersMismatch":"Niezgodność między sygnaturą „__new__” i „__init__” w klasie „{classType}”","containmentAlwaysFalse":"Warunek zawsze będzie miał wartość „Fałsz”, ponieważ typy „{leftType}” i „{rightType}” nie nakładają się na siebie","containmentAlwaysTrue":"Warunek zawsze będzie miał wartość „True”, ponieważ typy „{leftType}” i „{rightType}” nie nakładają się na siebie","continueInFinally":"Wartość „continue” nie może być używana w klauzuli finally","continueOutsideLoop":"Wartość „continue” może być używana tylko w pętli","coroutineInConditionalExpression":"Wyrażenie warunkowe odwołuje się do koprocedury, która zawsze wyznacza wartość True","dataClassBaseClassFrozen":"Klasa niezablokowana nie może dziedziczyć po klasie zablokowanej","dataClassBaseClassNotFrozen":"Zamrożona klasa nie może dziedziczyć po klasie niezamrożonej","dataClassConverterFunction":"Argument typu „{argType}” nie jest prawidłowym konwerterem pola „{fieldName}” typu „{fieldType}”","dataClassConverterOverloads":"Żadne przeciążenia „{funcName}” nie są prawidłowymi konwerterami dla pola „{fieldName}” typu „{fieldType}”","dataClassFieldWithDefault":"Pola bez wartości domyślnych nie mogą występować po polach z wartościami domyślnymi","dataClassFieldWithPrivateName":"Pole klasy danych nie może używać nazwy prywatnej","dataClassFieldWithoutAnnotation":"Pole klasy danych bez adnotacji typu spowoduje wyjątek środowiska uruchomieniowego","dataClassPostInitParamCount":"Klasa danych __post_init__ ma niepoprawną liczbę parametrów; oczekiwana liczba pól InitVar to: {expected}","dataClassPostInitType":"Klasa danych __post_init__ ma niezgodność typu parametru metody dla pola „{fieldName}”","dataClassSlotsOverwrite":"Element __slots__ jest już zdefiniowany w klasie","dataClassTransformExpectedBoolLiteral":"Oczekiwano wyrażenia, które statycznie daje w wyniku wartość True lub False","dataClassTransformFieldSpecifier":"Oczekiwano krotki klas lub funkcji, a uzyskano typ „{type}”","dataClassTransformPositionalParam":"Wszystkie argumenty elementu „dataclass_transform” muszą być argumentami słów kluczowych","dataClassTransformUnknownArgument":"Argument „{name}” nie jest obsługiwany przez dataclass_transform","dataProtocolInSubclassCheck":"Protokoły danych (które zawierają atrybuty niebędące atrybutami metody) są niedozwolone w wywołaniach klasy issubclass","declaredReturnTypePartiallyUnknown":"Zadeklarowany zwracany typ „{returnType}” jest częściowo nieznany","declaredReturnTypeUnknown":"Deklarowany zwracany typ jest nieznany","defaultValueContainsCall":"Wywołania funkcji i modyfikowalne obiekty są niedozwolone w wyrażeniu wartości domyślnej parametru","defaultValueNotAllowed":"Parametr o wartości „*” lub „**” nie może mieć wartości domyślnej","delTargetExpr":"Nie można usunąć wyrażenia","deprecatedClass":"Klasa „{name}” jest przestarzała","deprecatedConstructor":"Konstruktor klasy „{name}” jest przestarzały","deprecatedDescriptorDeleter":"Metoda „__set__” dla deskryptora „{name}” jest przestarzała","deprecatedDescriptorGetter":"Metoda „__set__” dla deskryptora „{name}” jest przestarzała","deprecatedDescriptorSetter":"Metoda „__set__” dla deskryptora „{name}” jest przestarzała","deprecatedFunction":"Ta funkcja „{name}” jest przestarzała","deprecatedMethod":"Metoda „{name}” w klasie „{className}” jest przestarzała","deprecatedPropertyDeleter":"Metoda usuwająca dla właściwości „{name}” jest przestarzała","deprecatedPropertyGetter":"Metoda pobierająca dla właściwości „{name}” jest przestarzała","deprecatedPropertySetter":"Metoda pobierająca dla właściwości „{name}” jest przestarzała","deprecatedType":"Ten typ jest przestarzały dla języka Python w wersji {version}; zamiast tego użyj „{replacement}”.","dictExpandIllegalInComprehension":"Rozszerzanie słownika jest niedozwolone w rozumieniu","dictInAnnotation":"Wyrażenie słownikowe jest niedozwolone w adnotacji typu","dictKeyValuePairs":"Wpisy słownika muszą zawierać pary klucz/wartość","dictUnpackIsNotMapping":"Oczekiwano mapowania dla operatora rozpakowywania słownika","dunderAllSymbolNotPresent":"Nazwa „{name}” jest określona w wartości __all__, ale nie występuje w module","duplicateArgsParam":"Dozwolony tylko jeden parametr „*”","duplicateBaseClass":"Zduplikowana klasa bazowa jest niedozwolona","duplicateCapturePatternTarget":"Element docelowy przechwytywania „{name}” nie może występować więcej niż raz w obrębie tego samego wzorca","duplicateCatchAll":"Dozwolona jest tylko jedna klauzula typu catch-all z wyjątkiem klauzuli","duplicateEnumMember":"Składowa wyliczenia „{name}” jest już zadeklarowana","duplicateGenericAndProtocolBase":"Dozwolona jest tylko jedna klasa bazowa Generic[...] lub Protocol[...].","duplicateImport":"Nazwa „{importName}” została zaimportowana więcej niż raz","duplicateKeywordOnly":"Dozwolony tylko jeden separator „*”.","duplicateKwargsParam":"Dozwolony tylko jeden parametr „**”.","duplicateParam":"Duplikuj parametr „{name}”","duplicatePositionOnly":"Dozwolony tylko jeden parametr „/”","duplicateStarPattern":"W sekwencji wzorca dozwolony jest tylko jeden wzorzec „*”","duplicateStarStarPattern":"Dozwolony jest tylko jeden wpis „**”","duplicateUnpack":"Na liście dozwolona jest tylko jedna operacja rozpakowywania","ellipsisAfterUnpacked":"Nie można używać „...” z rozpakowanym typeVarTuple lub krotką","ellipsisContext":"Wartość „...” jest niedozwolona w tym kontekście","ellipsisSecondArg":"Wartość „...” jest dozwolona tylko jako drugi z dwóch argumentów","enumClassOverride":"Klasa wyliczenia „{name}” jest ostateczna i nie można jej podzielić na podklasy","exceptionGroupIncompatible":"Składnia grupy wyjątków („except*”) wymaga języka Python w wersji 3.11 lub nowszej","exceptionTypeIncorrect":"Typ „{type}” nie pochodzi od parametru BaseException","exceptionTypeNotClass":"Typ „{type}” nie jest prawidłową klasą wyjątku","exceptionTypeNotInstantiable":"Konstruktor typu wyjątku „{type}” wymaga co najmniej jednego argumentu","expectedAfterDecorator":"Oczekiwano deklaracji funkcji lub klasy po dekoratorze","expectedArrow":"Oczekiwano wartości „->”, po której następuje adnotacja zwracanego typu","expectedAsAfterException":"Oczekiwano „jako” po typie wyjątku","expectedAssignRightHandExpr":"Oczekiwano wyrażenia po prawej stronie znaku „=”","expectedBinaryRightHandExpr":"Oczekiwano wyrażenia po prawej stronie operatora","expectedBoolLiteral":"Oczekiwano wartości True lub False","expectedCase":"Oczekiwano instrukcji „case”","expectedClassName":"Oczekiwano nazwy klasy","expectedCloseBrace":"Brak zamknięcia dla: „{”","expectedCloseBracket":"Brak zamknięcia dla: „[”","expectedCloseParen":"Brak zamknięcia dla: „(”","expectedColon":"Oczekiwano „:”","expectedComplexNumberLiteral":"Oczekiwano literału liczby zespolonej na potrzeby dopasowywania wzorca","expectedDecoratorExpr":"Formularz wyrażenia nie jest obsługiwany przez dekorator w wersji wcześniejszej niż Python 3.9","expectedDecoratorName":"Oczekiwano nazwy dekoratora","expectedDecoratorNewline":"Oczekiwano nowego wiersza na końcu dekoratora","expectedDelExpr":"Oczekiwano wyrażenia po „del”","expectedElse":"Oczekiwano elementu „innego”","expectedEquals":"Oczekiwano „=”","expectedExceptionClass":"Nieprawidłowa klasa lub obiekt wyjątku","expectedExceptionObj":"Oczekiwano obiektu wyjątku, klasy wyjątku lub wartości Brak","expectedExpr":"Oczekiwano wyrażenia","expectedFunctionAfterAsync":"Oczekiwano definicji funkcji po wartości „async”","expectedFunctionName":"Oczekiwano nazwy funkcji po wyrażeniu „def”","expectedIdentifier":"Oczekiwany identyfikator","expectedImport":"Oczekiwano wartości „import”","expectedImportAlias":"Oczekiwano symbolu po parametrze „as”","expectedImportSymbols":"Oczekiwano jednej lub więcej nazw symboli po zaimportowaniu","expectedIn":"Oczekiwano parametru „in”","expectedInExpr":"Oczekiwano wyrażenia po „in”","expectedIndentedBlock":"Oczekiwano wciętego bloku","expectedMemberName":"Oczekiwano nazwy składowej po znaku „.”","expectedModuleName":"Oczekiwana nazwa modułu","expectedNameAfterAs":"Oczekiwano nazwy symbolu po „jako”","expectedNamedParameter":"Parametr słowa kluczowego musi następować po znaku „*”","expectedNewline":"Oczekiwano nowego wiersza","expectedNewlineOrSemicolon":"Instrukcje muszą być oddzielone znakami nowych wierszy lub średnikami","expectedOpenParen":"Oczekiwano „(”","expectedParamName":"Oczekiwano nazwy parametru","expectedPatternExpr":"Oczekiwano wyrażenia wzorca","expectedPatternSubjectExpr":"Oczekiwano wyrażenia tematu wzorca","expectedPatternValue":"Oczekiwano wyrażenia wartości wzorca w postaci „a.b”","expectedReturnExpr":"Oczekiwano wyrażenia po „return”.","expectedSliceIndex":"Oczekiwano wyrażenia indeksu lub wycinka","expectedTypeNotString":"Oczekiwano typu, ale otrzymano literał ciągu","expectedTypeParameterName":"Oczekiwano nazwy parametru typu","expectedYieldExpr":"Oczekiwano wyrażenia w instrukcji wstrzymywania","finalClassIsAbstract":"Klasa „{type}” jest oznaczona jako ostateczna i musi implementować wszystkie symbole abstrakcyjne","finalContext":"Wartość „Final” jest niedozwolona w tym kontekście","finalMethodOverride":"Metoda „{name}” nie może przesłonić metody końcowej zdefiniowanej w klasie „{className}”","finalNonMethod":"Nie można oznaczyć funkcji „{name}” jako @final, ponieważ nie jest to metoda","finalReassigned":"Element „{name}” jest zadeklarowany jako wersja ostateczna i nie można go ponownie przypisać","finalRedeclaration":"Nazwa „{name}” została wcześniej zadeklarowana jako końcowa","finalRedeclarationBySubclass":"Nie można ponownie zadeklarować nazwy „{name}”, ponieważ klasa nadrzędna „{className}” deklaruje ją jako końcową","finalTooManyArgs":"Oczekiwano jednego argumentu typu po wartości „Final”","finalUnassigned":"Nazwa „{name}” jest zadeklarowana jako końcowa, ale wartość nie jest przypisana","formatStringBrace":"Pojedynczy zamykający nawias klamrowy jest niedozwolony w literale ciągu f; użyj podwójnego zamykającego nawiasu klamrowego","formatStringBytes":"Literały ciągów formatu (ciągi f) nie mogą być binarne","formatStringDebuggingIllegal":"Specyfikator debugowania ciągu f „=” wymaga wersji języka Python 3.8 lub nowszej","formatStringEscape":"Sekwencja ucieczki (ukośnik odwrotny) jest niedozwolona w części wyrażenia ciągu f w wersji języka wcześniejszej niż Python 3.12","formatStringExpectedConversion":"Oczekiwano specyfikatora konwersji po znaku „!” w ciągu f-string","formatStringIllegal":"Literały ciągów formatu (ciągi f) wymagają wersji języka Python 3.6 lub nowszej","formatStringInPattern":"Ciąg formatu jest niedozwolony we wzorcu","formatStringNestedFormatSpecifier":"Wyrażenia zagnieżdżone zbyt głęboko w specyfikatorze ciągu formatu","formatStringNestedQuote":"Ciągi zagnieżdżone w ciągu f nie mogą używać tego samego znaku cudzysłowu co ciąg f w wersji języka wcześniejszej niż Python 3.12","formatStringUnicode":"Literały ciągu formatu (f-strings) nie mogą być formatu unicode","formatStringUnterminated":"Niezakończone wyrażenie w ciągu f; oczekiwano znaku „}”","functionDecoratorTypeUnknown":"Nietypowany dekorator funkcji zasłania typ funkcji; ignorując dekoratora","functionInConditionalExpression":"Wyrażenie warunkowe odwołuje się do funkcji, której wynikiem zawsze jest wartość Prawda","functionTypeParametersIllegal":"Składnia parametru typu klasy wymaga wersji języka Python 3.12 lub nowszej","futureImportLocationNotAllowed":"Importy z __future__ muszą znajdować się na początku pliku","generatorAsyncReturnType":"Zwracany typ funkcji generatora asynchronicznego musi być zgodny z elementem „AsyncGenerator[{yieldType}, Any]”","generatorNotParenthesized":"Wyrażenia generatora muszą być ujęte w nawiasy, jeśli nie są jedynym argumentem","generatorSyncReturnType":"Zwracany typ funkcji generatora musi być zgodny z elementem „Generator[{yieldType}, Any, Any]”","genericBaseClassNotAllowed":"Nie można użyć klasy bazowej „Generic” ze składnią parametru typu","genericClassAssigned":"Nie można przypisać ogólnego typu klasy","genericClassDeleted":"Nie można usunąć ogólnego typu klasy","genericInstanceVariableAccess":"Dostęp do ogólnej zmiennej wystąpienia za pośrednictwem klasy jest niejednoznaczny","genericNotAllowed":"Element „ogólny” jest nieprawidłowy w tym kontekście","genericTypeAliasBoundTypeVar":"Alias typu ogólnego w klasie nie może używać zmiennych typu powiązanego {names}","genericTypeArgMissing":"Wartość „Generic” wymaga co najmniej jednego argumentu typu","genericTypeArgTypeVar":"Argument typu dla wartości „Generic” musi być zmienną typu","genericTypeArgUnique":"Argumenty typu dla elementu „Generic” muszą być unikatowe","globalReassignment":"Nazwa „{name}” jest przypisywana przed deklaracją globalną","globalRedefinition":"Nazwa „{name}” została już zadeklarowana jako globalna","implicitStringConcat":"Niejawne łączenie ciągów jest niedozwolone","importCycleDetected":"Wykryto cykl w łańcuchu importu","importDepthExceeded":"Głębokość łańcucha importu przekroczyła {depth}","importResolveFailure":"Nie można rozpoznać importu „{importName}”.","importSourceResolveFailure":"Nie można rozpoznać importu „{importName}” ze źródła","importSymbolUnknown":"Nazwa „{name}” jest nieznanym symbolem importu","incompatibleMethodOverride":"Metoda „{name}” przesłania klasę „{className}” w niezgodny sposób","inconsistentIndent":"Wartość zmniejszenia wcięcia jest niezgodna z poprzednim wcięciem","inconsistentTabs":"Niespójne użycie tabulatorów i spacji we wcięciach","initMustReturnNone":"Zwracany typ „__init__” musi mieć wartość Brak","initSubclassCallFailed":"Nieprawidłowe argumenty słów kluczowych dla metody __init_subclass__","initSubclassClsParam":"Przesłonięcie __init_subclass__ powinno przyjmować parametr „cls”.","initVarNotAllowed":"Element „InitVar” jest niedozwolony w tym kontekście","instanceMethodSelfParam":"Metody wystąpienia powinny przyjmować parametr „self”","instanceVarOverridesClassVar":"Zmienna wystąpienia „{name}” zastępuje zmienną klasy o tej samej nazwie w klasie „{className}”","instantiateAbstract":"Nie można utworzyć wystąpienia klasy abstrakcyjnej „{type}”","instantiateProtocol":"Nie można utworzyć wystąpienia klasy protokołu typu „{type}”","internalBindError":"Wystąpił błąd wewnętrzny podczas wiązania pliku „{file}”: {message}","internalParseError":"Wystąpił błąd wewnętrzny podczas analizowania pliku „{file}”: {message}","internalTypeCheckingError":"Wystąpił błąd wewnętrzny podczas sprawdzania typu pliku „{file}”: {message}","invalidIdentifierChar":"Nieprawidłowy znak w identyfikatorze","invalidStubStatement":"Instrukcja nie ma znaczenia w pliku zastępczym typu","invalidTokenChars":"Nieprawidłowy znak „{text}” w tokenie","isInstanceInvalidType":"Drugi argument instrukcji „isinstance” musi być klasą lub krotką klas","isSubclassInvalidType":"Drugi argument „issubclass” musi być klasą lub krotką klas","keyValueInSet":"Pary klucz/wartość nie są dozwolone w zestawie","keywordArgInTypeArgument":"Argumentów słów kluczowych nie można używać na listach argumentów typu","keywordOnlyAfterArgs":"Separator argumentów tylko ze słowami kluczowymi jest niedozwolony po parametrze „*”","keywordParameterMissing":"Co najmniej jeden parametr słowa kluczowego musi występować po parametrze „*”","keywordSubscriptIllegal":"Argumenty słów kluczowych w indeksach podrzędnych nie są obsługiwane","lambdaReturnTypePartiallyUnknown":"Zwracany typ wyrażenia lambda „{returnType}” jest częściowo nieznany","lambdaReturnTypeUnknown":"Zwracany typ wyrażenia lambda jest nieznany","listAssignmentMismatch":"Wyrażenia typu „{type}” nie można przypisać do listy docelowej","listInAnnotation":"Wyrażenie listy jest niedozwolone w adnotacji typu","literalEmptyArgs":"Oczekiwano co najmniej jednego argumentu typu po wartości „Literal”","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"„Literał” nie może być używany w tym kontekście bez argumentu typu","literalNotCallable":"Nie można utworzyć wystąpienia typu literału","literalUnsupportedType":"Argumenty typu dla elementu „Literal” muszą mieć wartość Brak, wartość literału (int, bool, str lub bytes) lub wartość wyliczenia","matchIncompatible":"Instrukcje dopasowania wymagają języka Python w wersji 3.10 lub nowszej","matchIsNotExhaustive":"Przypadki w instrukcji dopasowania nie obsługują wyczerpująco wszystkich wartości","maxParseDepthExceeded":"Przekroczono maksymalną głębokość analizy; podziel wyrażenie na mniejsze wyrażenia podrzędne","memberAccess":"Nie można uzyskać dostępu do składowej „{name}” dla typu „{type}”","memberDelete":"Nie można usunąć składowej „{name}” dla typu „{type}”","memberSet":"Nie można uzyskać przypisać składowej „{name}” dla typu „{type}”","metaclassConflict":"Metaklasa klasy pochodnej musi być podklasą metaklas wszystkich jej klas bazowych","metaclassDuplicate":"Można podać tylko jedną metaklasę","metaclassIsGeneric":"Metaklasa nie może być ogólna","methodNotDefined":"Nie zdefiniowano metody „{name}”.","methodNotDefinedOnType":"Metoda „{name}” nie została zdefiniowana dla typu „{type}”","methodOrdering":"Nie można utworzyć spójnej kolejności metod","methodOverridden":"„{name}” przesłania metodę o tej samej nazwie w klasie „{className}” o niezgodnym typie „{type}”","methodReturnsNonObject":"Metoda „{name}” nie zwraca obiektu","missingSuperCall":"Metoda „{methodName}” nie wywołuje metody o tej samej nazwie w klasie nadrzędnej","moduleAsType":"Nie można użyć modułu jako typu","moduleNotCallable":"Moduł nie jest wywoływalny","moduleUnknownMember":"„{memberName}” nie jest znaną składową modułu „{moduleName}”","namedExceptAfterCatchAll":"Nazwana klauzula „except” nie może występować po klauzuli „catch-all except”","namedParamAfterParamSpecArgs":"Parametr słowa kluczowego \\"{name}\\" nie może występować w sygnaturze po parametrze argumentów ParamSpec","namedTupleEmptyName":"Nazwy w nazwanej krotce nie mogą być puste","namedTupleEntryRedeclared":"Nie można nadpisać „{name}”, ponieważ klasa nadrzędna „{className}” jest nazwaną krotką.","namedTupleFirstArg":"Oczekiwano nazwanej nazwy klasy krotki jako pierwszego argumentu","namedTupleMultipleInheritance":"Wielokrotne dziedziczenie z kotki NamedTuple nie jest obsługiwane","namedTupleNameKeyword":"Nazwy pól nie mogą być słowem kluczowym","namedTupleNameType":"Oczekiwano krotki z dwoma wpisami określającej nazwę i typ wpisu","namedTupleNameUnique":"Nazwy w nazwanej krotce muszą być unikatowe","namedTupleNoTypes":"Krotka „namedtuple” nie zapewnia typów wpisów krotki; zamiast tego użyj „NamedTuple”.","namedTupleSecondArg":"Oczekiwano nazwanej listy wpisów krotki jako drugiego argumentu","newClsParam":"Przesłonięcie __new__ powinno przyjmować parametr „cls”.","newTypeAnyOrUnknown":"Drugi argument elementu NewType musi być znaną klasą, a nie dowolną lub nieznaną","newTypeBadName":"Pierwszy argument elementu NewType musi być literałem ciągu","newTypeLiteral":"Typ NewType nie może być używany z typem Literał","newTypeNameMismatch":"Element NewType musi być przypisany do zmiennej o tej samej nazwie","newTypeNotAClass":"Oczekiwano klasy jako drugiego argumentu dla elementu NewType","newTypeParamCount":"Typ NewType wymaga dwóch argumentów pozycyjnych","newTypeProtocolClass":"Elementu NewType nie można używać z typem strukturalnym (protokołem lub klasą TypedDict)","noOverload":"Żadne przeciążenia dla nazwy „{name}” nie pasują do podanych argumentów","noReturnContainsReturn":"Funkcja z zadeklarowanym zwracanym typem „NoReturn” nie może zawierać instrukcji Return","noReturnContainsYield":"Funkcja z zadeklarowanym zwracanym typem „NoReturn” nie może zawierać instrukcji Yield","noReturnReturnsNone":"Funkcja z zadeklarowanym typem zwracanym „NoReturn” nie może zwracać wartości „None”","nonDefaultAfterDefault":"Argument inny niż domyślny następuje po argumencie domyślnym","nonLocalInModule":"Deklaracja nielokalna nie jest dozwolona na poziomie modułu","nonLocalNoBinding":"Nie znaleziono powiązania dla nielokalnej nazwy „{name}”.","nonLocalReassignment":"Nazwa „{name}” jest przypisywana przed deklaracją nielokalną","nonLocalRedefinition":"Nazwa „{name}” została już zadeklarowana jako nielokalna","noneNotCallable":"Nie można wywołać obiektu typu „None”","noneNotIterable":"Obiekt typu „Brak” nie może być używany jako wartość iterowalna","noneNotSubscriptable":"Obiekt typu „None” nie może być użyty w indeksie dolnym","noneNotUsableWith":"Obiekt typu „Brak” nie może być używany z parametrem „with”","noneOperator":"Operator „{operator}” nie jest obsługiwany dla wartości „Brak”","noneUnknownMember":"Nazwa „{name}” nie jest znaną składową elementu „None”","notRequiredArgCount":"Oczekiwano jednego argumentu typu po wartości „NotRequired”","notRequiredNotInTypedDict":"Element „NotRequired” jest niedozwolony w tym kontekście","objectNotCallable":"Obiekt typu „{type}” nie jest wywoływalny","obscuredClassDeclaration":"Deklaracja klasy „{name}” jest zasłonięta przez deklarację o tej samej nazwie","obscuredFunctionDeclaration":"Deklaracja funkcji „{name}” jest zasłonięta przez deklarację o tej samej nazwie","obscuredMethodDeclaration":"Deklaracja metody „{name}” jest zasłonięta przez deklarację o tej samej nazwie","obscuredParameterDeclaration":"Deklaracja parametru „{name}” jest zasłonięta przez deklarację o tej samej nazwie","obscuredTypeAliasDeclaration":"Deklaracja aliasu typu „{name}” jest zasłonięta przez deklarację o tej samej nazwie","obscuredVariableDeclaration":"Deklaracja „{name}” jest zasłonięta przez deklarację o tej samej nazwie","operatorLessOrGreaterDeprecated":"Operator „<>” nie jest obsługiwany w języku Python w wersji 3; zamiast tego użyj „!=”.","optionalExtraArgs":"Oczekiwano jednego argumentu typu po parametrze „Optional”","orPatternIrrefutable":"Niepodważalny wzorzec jest dozwolony tylko jako ostatni podwzorzec we wzorcu „or”","orPatternMissingName":"Wszystkie wzorce podrzędne we wzorcu „or” muszą dotyczyć tych samych nazw","overlappingKeywordArgs":"Wpisany słownik nakłada się na parametr słowa kluczowego: {names}","overlappingOverload":"Przeciążenie {obscured} dla nazwy „{name}” nigdy nie zostanie użyte, ponieważ jego parametry nakładają się na przeciążenie {obscuredBy}","overloadAbstractMismatch":"Przeciążone metody muszą być abstrakcyjne lub nieabstrakcyjne","overloadClassMethodInconsistent":"Przeciążenia dla nazwy „{name}” używają metody @classmethod niekonsekwentnie","overloadFinalInconsistencyImpl":"Przeciążenie elementu „{name}” jest oznaczone @final, ale implementacja nie jest","overloadFinalInconsistencyNoImpl":"Przeciążenie {index} dla elementu „{name}” jest oznaczone @final, ale przeciążenie 1 nie jest","overloadImplementationMismatch":"Przeciążone wdrożenie jest niespójne z sygnaturą przeciążenia {index}","overloadReturnTypeMismatch":"Przeciążenie {prevIndex} dla nazwy „{name}” nakłada się na przeciążenie {newIndex} i zwraca niezgodny typ","overloadStaticMethodInconsistent":"Przeciążenia dla nazwy „{name}” używają metody @staticmethod niekonsekwentnie","overloadWithoutImplementation":"Element „{name}” jest oznaczony jako przeciążony, ale nie podano implementacji","overriddenMethodNotFound":"Metoda „{name}” jest oznaczona jako zastąpienie, ale nie istnieje metoda bazowa o tej samej nazwie","overrideDecoratorMissing":"Metoda „{name}” nie jest oznaczona jako zastąpienie, ale zastępuje metodę w klasie „{className}”","paramAfterKwargsParam":"Parametr nie może następować po parametrze „**”","paramAlreadyAssigned":"Parametr „{name}” jest już przypisany","paramAnnotationMissing":"Brak adnotacji typu dla parametru „{name}”","paramAssignmentMismatch":"Wyrażenia typu „{sourceType}” nie można przypisać do parametru typu „{paramType}”","paramNameMissing":"Brak parametru o nazwie „{name}”","paramSpecArgsKwargsUsage":"Składowe „args” i „kwargs” specyfikacji ParamSpec muszą znajdować się w sygnaturze funkcji","paramSpecArgsMissing":"Brak argumentów dla parametru ParamSpec „{type}”.","paramSpecArgsUsage":"Składowa „args” parametru ParamSpec jest ważna tylko wtedy, gdy jest używana z parametrem *args","paramSpecAssignedName":"Parametr ParamSpec musi być przypisany do zmiennej o nazwie „{name}”","paramSpecContext":"Wartość ParamSpec jest niedozwolona w tym kontekście","paramSpecDefaultNotTuple":"Oczekiwano wielokropka, wyrażenia krotki lub parametru ParamSpec dla domyślnej wartości ParamSpec","paramSpecFirstArg":"Oczekiwano nazwy parametru ParamSpec jako pierwszego argumentu","paramSpecKwargsUsage":"Składowa „kwargs” parametru ParamSpec jest ważna tylko wtedy, gdy jest używana z parametrem **kwargs","paramSpecNotUsedByOuterScope":"Element ParamSpec „{name}” nie ma znaczenia w tym kontekście","paramSpecScopedToReturnType":"Parametr ParamSpec „{name}” jest objęty zakresem możliwości wywołania w ramach zwracanego typu i nie można odwoływać się do niego w treści funkcji","paramSpecUnknownArg":"Parametr ParamSpec nie obsługuje więcej niż jednego argumentu","paramSpecUnknownMember":"Nazwa „{name}” nie jest znaną składową parametru ParamSpec","paramSpecUnknownParam":"„{name}” jest nieznanym parametrem dla parametru ParamSpec","paramTypeCovariant":"Zmienna typu kowariantnego nie może być używana w typie parametru","paramTypePartiallyUnknown":"Typ parametru „{paramName}” jest częściowo nieznany","paramTypeUnknown":"Typ parametru „{paramName}” jest nieznany","parenthesizedContextManagerIllegal":"Nawiasy w instrukcji „with” wymagają wersji języka Python 3.9 lub nowszej","patternNeverMatches":"Wzorzec nigdy nie zostanie dopasowany do typu podmiotu „{type}”","positionArgAfterNamedArg":"Argument pozycyjny nie może występować po argumentach słów kluczowych","positionOnlyAfterArgs":"Separator parametru tylko do pozycjonowania jest niedozwolony po parametrze „*”","positionOnlyAfterKeywordOnly":"Parametr „/” musi występować przed parametrem „*”.","positionOnlyAfterNon":"Parametr tylko do pozycjonowania jest niedozwolony po parametrze, który nie jest tylko do pozycjonowania","positionOnlyFirstParam":"Separator parametrów tylko do pozycjonowania nie jest dozwolony jako pierwszy parametr","positionOnlyIncompatible":"Separator parametrów tylko do pozycjonowania wymaga języka Python 3.8 lub nowszego","privateImportFromPyTypedModule":"Nazwa „{name}” nie jest eksportowana z modułu „{module}”","privateUsedOutsideOfClass":"Nazwa „{name}” jest prywatna i używana poza klasą, w której została zadeklarowana","privateUsedOutsideOfModule":"Nazwa „{name}” jest prywatna i używana poza modułem, w którym została zadeklarowana","propertyOverridden":"„{name}” nieprawidłowo zastępuje właściwość o tej samej nazwie w klasie „{className}”","propertyStaticMethod":"Metody statyczne nie są dozwolone w przypadku metod pobierających, ustawiających lub usuwających właściwości","protectedUsedOutsideOfClass":"Nazwa „{name}” jest chroniona i używana poza klasą, w której została zadeklarowana","protocolBaseClass":"Klasa protokołu typu „{classType}” nie może pochodzić od klasy niebędącej klasą protokołu typu „{baseType}”","protocolBaseClassWithTypeArgs":"Argumenty typu są niedozwolone w przypadku klasy protokołu, gdy jest używana składnia parametru typu","protocolIllegal":"Użycie elementu „Protocol” wymaga języka Python w wersji 3.7 lub nowszej","protocolNotAllowed":"„Protokół” nie może być używany w tym kontekście","protocolUnsafeOverlap":"Klasa nakłada się niebezpiecznie na element „{name}” i może utworzyć dopasowanie w czasie wykonywania","protocolVarianceContravariant":"Zmienna typu „{variable}” używana w klasie protokołu ogólnego „{class}” powinna być kontrawariantna","protocolVarianceCovariant":"Zmienna typu „{variable}” używana w klasie protokołu ogólnego „{class}” powinna być kowariantna","protocolVarianceInvariant":"Zmienna typu „{variable}” używana w klasie protokołu ogólnego „{class}” powinna być niezmienna","pyrightCommentInvalidDiagnosticBoolValue":"Po dyrektywie komentarza Pyright musi następować znak „=” oraz wartość Prawda lub Fałsz","pyrightCommentInvalidDiagnosticSeverityValue":"Po dyrektywie komentarza Pyright musi następować znak „=” oraz wartość Prawda, Fałsz, Błąd, Ostrzeżenie, Informacja lub Brak","pyrightCommentMissingDirective":"Komentarz Pyright musi poprzedzać dyrektywę (bazową lub ścisłą) lub regułę diagnostyczną","pyrightCommentNotOnOwnLine":"Komentarze Pyright używane do kontrolowania ustawień na poziomie plików muszą pojawiać się w oddzielnych wierszach","pyrightCommentUnknownDiagnosticRule":"Reguła „{rule}” jest nieznaną regułą diagnostyczną dla komentarza Pyright","pyrightCommentUnknownDiagnosticSeverityValue":"Wartość „{value}” jest nieprawidłowa dla komentarza Pyright; oczekiwano wartości: Prawda, Fałsz, Błąd, Ostrzeżenie, Informacja lub Brak","pyrightCommentUnknownDirective":"Wartość „{directive}” jest nieznaną dyrektywą dla komentarza Pyright; oczekiwano wartości „strict” lub „basic”","readOnlyArgCount":"Oczekiwano jednego argumentu typu po wartości „ReadOnly”","readOnlyNotInTypedDict":"Element „ReadOnly” jest niedozwolony w tym kontekście","recursiveDefinition":"Nie można określić typu „{name}”, ponieważ odwołuje się on do samego siebie","relativeImportNotAllowed":"Importy względne nie mogą być używane z formularzem „import .a”; zamiast tego użyj „from . import a”.","requiredArgCount":"Oczekiwano jednego argumentu typu po wartości „Required”","requiredNotInTypedDict":"Element „Required” jest niedozwolony w tym kontekście","returnInAsyncGenerator":"Instrukcja „return” z wartością jest niedozwolona w generatorze asynchronicznym","returnMissing":"Funkcja z zadeklarowanym typem zwracanym „{returnType}” musi zwracać wartość we wszystkich ścieżkach kodu","returnOutsideFunction":"Instrukcja „return” może być używana tylko w ramach funkcji","returnTypeContravariant":"Kontrawariantna zmienna typu nie może być używana w zwracanym typie","returnTypeMismatch":"Wyrażenia typu „{exprType}” nie można przypisać do zwracanego typu „{returnType}”","returnTypePartiallyUnknown":"Zwracany typ „{returnType}” jest częściowo nieznany","returnTypeUnknown":"Zwracany typ jest nieznany","revealLocalsArgs":"Oczekiwano braku argumentów dla wywołania „reveal_locals”","revealLocalsNone":"Brak elementów lokalnych w tym zakresie","revealTypeArgs":"Oczekiwano pojedynczego argumentu pozycyjnego dla wywołania „reveal_type”","revealTypeExpectedTextArg":"Argument „expected_text” dla funkcji „reveal_type” musi być wartością literału str","revealTypeExpectedTextMismatch":"Wpisz niezgodność tekstu; oczekiwano „{expected}”, ale otrzymano „{received}”","revealTypeExpectedTypeMismatch":"Niezgodność typu; oczekiwano wartości „{expected}”, a uzyskano „{received}”","selfTypeContext":"Wartość „Self” jest nieprawidłowa w tym kontekście","selfTypeMetaclass":"Nie można użyć elementu „Self” w ramach metaklasy (podklasy elementu „type”)","selfTypeWithTypedSelfOrCls":"Nie można użyć wartości „Self” w funkcji z parametrem „self” lub „cls”, która ma adnotację typu inną niż „Self”","setterGetterTypeMismatch":"Typu wartości metody ustawiającej właściwość nie można przypisać do zwracanego typu metody pobierającej","singleOverload":"Nazwa „{name}” jest oznaczona jako przeciążona, ale brakuje dodatkowych przeciążeń","slotsAttributeError":"Nie określono atrybutu „{name}” w elemencie __slots__","slotsClassVarConflict":"„{name}” powoduje konflikt ze zmienną wystąpienia zadeklarowaną w elemencie „__slots__”","starPatternInAsPattern":"Wzór gwiazdy nie może być użyty z miejscem docelowym parametru „as”.","starPatternInOrPattern":"Wzór gwiazdy nie może mieć wartości ORed w ramach innych wzorów","starStarWildcardNotAllowed":"Symbolu ** nie można używać z symbolem wieloznacznym „_”","staticClsSelfParam":"Metody statyczne nie powinny przyjmować parametru „self” ani „cls”.","stdlibModuleOverridden":"Ścieżka „{path}” zastępuje moduł stdlib „{name}”","stringNonAsciiBytes":"Znak inny niż ASCII jest niedozwolony w literale ciągu bajtów","stringNotSubscriptable":"Wyrażenie ciągu nie może być indeksowane w adnotacji typu; ujmij całą adnotację w cudzysłów","stringUnsupportedEscape":"Nieobsługiwana sekwencja ucieczki w literale ciągu","stringUnterminated":"Literał ciągu jest niezakończony","stubFileMissing":"Nie znaleziono pliku zastępczego dla „{importName}”","stubUsesGetAttr":"Typ pliku zastępczego jest niekompletny; element „__getattr__” przesłania błędy typu dla modułu","sublistParamsIncompatible":"Parametry podlisty nie są obsługiwane w wersji języka Python 3.x","superCallArgCount":"Oczekiwano nie więcej niż dwóch argumentów wywołania „super”","superCallFirstArg":"Oczekiwano typu klasy jako pierwszego argumentu wywołania „super”, ale otrzymano „{type}”","superCallSecondArg":"Drugi argument wywołania „super” musi być obiektem lub klasą wywodzącą się z typu „{type}”","superCallZeroArgForm":"Forma bez argumentów wywołania „super” jest prawidłowa tylko w ramach metody","superCallZeroArgFormStaticMethod":"Forma z zerowym argumentem wywołania „super” jest nieprawidłowa w metodzie statycznej","symbolIsPossiblyUnbound":"Nazwa „{name}” jest prawdopodobnie niepowiązana","symbolIsUnbound":"Nazwa „{name}” jest niepowiązana","symbolIsUndefined":"Nazwa „{name}” nie jest zdefiniowana","symbolOverridden":"Nazwa „{name}” przesłania symbol o tej samej nazwie w klasie „{className}”","ternaryNotAllowed":"Wyrażenie słownikowe jest niedozwolone w adnotacji typu","totalOrderingMissingMethod":"Klasa musi definiować jedną z następujących wartości: „__lt__”, „__le__”, „__gt__” lub „__ge__”, aby użyć parametru total_ordering","trailingCommaInFromImport":"Końcowy przecinek nie jest dozwolony bez otaczających nawiasów","tryWithoutExcept":"Instrukcja „Try” musi mieć co najmniej jedną klauzulę „except” lub „finally”","tupleAssignmentMismatch":"Wyrażenia typu „{type}” nie można przypisać do docelowej krotki","tupleInAnnotation":"Wyrażenie krotki jest niedozwolone w adnotacji typu","tupleIndexOutOfRange":"Indeks {index} jest poza zakresem dla typu {type}","typeAliasIllegalExpressionForm":"Nieprawidłowy formularz wyrażenia dla definicji aliasu typu","typeAliasIsRecursiveDirect":"Alias typu „{name}” nie może używać samego siebie w swojej definicji","typeAliasNotInModuleOrClass":"Typ TypeAlias można zdefiniować tylko w zakresie modułu lub klasy","typeAliasRedeclared":"Nazwa „{name}” jest zadeklarowana jako TypeAlias i może być przypisana tylko raz","typeAliasStatementBadScope":"Deklaracja typu może być użyta tylko w zakresie modułu lub klasy","typeAliasStatementIllegal":"Instrukcja typu alias wymaga języka Python w wersji 3.12 lub nowszej","typeAliasTypeBaseClass":"Alias typu zdefiniowany w instrukcji „{type}” nie może być użyty jako klasa bazowa","typeAliasTypeMustBeAssigned":"Typ TypeAliasType musi być przypisany do zmiennej o takiej samej nazwie jak alias typu","typeAliasTypeNameArg":"Pierwszy argument dla typu typeAliasType musi być literałem ciągu reprezentującym nazwę aliasu typu","typeAliasTypeNameMismatch":"Nazwa aliasu typu musi być zgodna z nazwą zmiennej, do której jest przypisana","typeAliasTypeParamInvalid":"Lista parametrów typu musi być krotką zawierającą tylko parametry TypeVar, TypeVarTuple lub ParamSpec","typeAnnotationCall":"Wyrażenie wywołania jest niedozwolone w wyrażeniu typu","typeAnnotationVariable":"Zmienna niedozwolona w wyrażeniu typu","typeAnnotationWithCallable":"Argument typu „type” musi być klasą; elementy wywoływane nie są obsługiwane","typeArgListExpected":"Oczekiwano parametru ParamSpec, wielokropka lub listy typów","typeArgListNotAllowed":"Wyrażenie listy jest niedozwolone dla tego argumentu typu","typeArgsExpectingNone":"Oczekiwano braku argumentów typu dla klasy „{name}”","typeArgsMismatchOne":"Oczekiwano jednego argumentu typu, ale otrzymano {received}","typeArgsMissingForAlias":"Oczekiwano argumentów typu dla aliasu typu ogólnego „{name}”","typeArgsMissingForClass":"Oczekiwano argumentów typu dla ogólnej klasy „{name}”","typeArgsTooFew":"Podano zbyt mało argumentów typu dla „{name}”; oczekiwano wartości {expected}, ale otrzymano {received}","typeArgsTooMany":"Podano zbyt wiele argumentów typu dla nazwy „{name}”; oczekiwano {expected}, a uzyskano {received}","typeAssignmentMismatch":"Wyrażenie typu „{sourceType}” nie może być przypisane do zadeklarowanego typu „{destType}”","typeAssignmentMismatchWildcard":"Symbol importu „{name}” ma typ „{sourceType}”, którego nie można przypisać do zadeklarowanego typu „{destType}”","typeCallNotAllowed":"Wywołanie type() nie powinno być używane w adnotacji typu","typeCheckOnly":"Nazwa „{name}” jest oznaczona jako @type_check_only i może być używana tylko w adnotacjach typu","typeCommentDeprecated":"Używanie komentarzy typu jest przestarzałe; zamiast tego użyj adnotacji typu","typeExpectedClass":"Oczekiwano wyrażenia typu, ale otrzymano „{type}”","typeGuardArgCount":"Oczekiwano pojedynczego argumentu typu po parametrze „TypeGuard” lub „TypeIs”","typeGuardParamCount":"Funkcje i metody zabezpieczające typu zdefiniowane przez użytkownika muszą mieć co najmniej jeden parametr wejściowy","typeIsReturnType":"Zwracany typ TypeIs („{returnType}”) jest niezgodny z typem parametru wartości („{type}”)","typeNotAwaitable":"Nie można oczekiwać typu „{type}”","typeNotIntantiable":"Nie można utworzyć wystąpienia „{type}”","typeNotIterable":"Typ „{type}” nie jest iterowalny","typeNotSpecializable":"Nie można specjalizować typu „{type}”","typeNotSubscriptable":"Obiekt typu „{type}” nie może być użyty w indeksie dolnym","typeNotSupportBinaryOperator":"Operator „{operator}” nieobsługiwany dla typów „{leftType}” i „{rightType}”","typeNotSupportBinaryOperatorBidirectional":"Operator „{operator}” nie jest obsługiwany dla typów „{leftType}” i „{rightType}”, gdy oczekiwanym typem jest „{expectedType}”","typeNotSupportUnaryOperator":"Operator „{operator}” nie jest obsługiwany dla typu „{type}”","typeNotSupportUnaryOperatorBidirectional":"Operator „{operator}” nie jest obsługiwany dla typu „{type}”, gdy oczekiwanym typem jest „{expectedType}”","typeNotUsableWith":"Obiekt typu „{type}” nie może być używany z parametrem „with”, ponieważ nie wdraża metody {method}","typeParameterBoundNotAllowed":"Powiązanie lub ograniczenie nie może być używane z parametrem typu ze zmienną liczbą argumentów lub parametrem ParamSpec","typeParameterConstraintTuple":"Ograniczenie parametru typu musi być krotką dwóch lub więcej typów","typeParameterExistingTypeParameter":"Parametr typu „{name}” jest już używany","typeParameterNotDeclared":"Parametr typu „{name}” nie znajduje się na liście parametrów typu dla „{container}”","typeParametersMissing":"Należy określić co najmniej jeden parametr typu","typePartiallyUnknown":"Typ „{name}” jest częściowo nieznany","typeUnknown":"Typ „{name}” jest nieznany","typeVarAssignedName":"Typ TypeVar musi być przypisany do zmiennej o nazwie „{name}”","typeVarAssignmentMismatch":"Nie można przypisać typu „{type}” do zmiennej typu „{name}”","typeVarBoundAndConstrained":"Typ TypeVar nie może być jednocześnie powiązany i ograniczony","typeVarBoundGeneric":"Typ powiązany TypeVar nie może być ogólny","typeVarConstraintGeneric":"Typ ograniczenia TypeVar nie może być ogólny","typeVarDefaultBoundMismatch":"Domyślny typ TypeVar musi być podtypem powiązanego typu","typeVarDefaultConstraintMismatch":"Typ domyślny TypeVar musi być jednym z typów z ograniczeniami","typeVarDefaultIllegal":"Typy domyślne zmiennych typów wymagają wersji języka Python 3.13 lub nowszej","typeVarDefaultInvalidTypeVar":"Parametr typu „{name}” ma typ domyślny, który odnosi się do co najmniej jednej zmiennej typu, która jest poza zakresem","typeVarFirstArg":"Oczekiwano nazwy TypeVar jako pierwszego argumentu","typeVarNoMember":"Typ TypeVar „{type}” nie ma składowej „{name}”","typeVarNotSubscriptable":"Typ TypeVar „{type}” nie może być subskrybowany","typeVarNotUsedByOuterScope":"Zmienna typu „{name}” nie ma w tym kontekście żadnego znaczenia","typeVarPossiblyUnsolvable":"Zmienna typu „{name}” może zostać nierozwiązana, jeśli obiekt wywołujący nie poda argumentu dla parametru „{param}”","typeVarScopedToReturnType":"Zmienna typu „{name}” jest objęta zakresem możliwości wywołania w typie zwracanym i nie można odwoływać się do niej w treści funkcji","typeVarSingleConstraint":"Typ TypeVar musi mieć co najmniej dwa typy ograniczone","typeVarTupleConstraints":"Element TypeVarTuple nie może mieć ograniczeń wartości","typeVarTupleContext":"Wartość TypeVarTuple jest niedozwolona w tym kontekście","typeVarTupleDefaultNotUnpacked":"Typ domyślny TypeVarTuple musi być nierozpakowaną krotką lub parametrem TypeVarTuple","typeVarTupleMustBeUnpacked":"Operator rozpakowywania jest wymagany dla wartości parametru TypeVarTuple","typeVarTupleUnknownParam":"Nazwa „{name}” jest nieznanym parametrem typu TypeVarTuple","typeVarUnknownParam":"„{name}” jest nieznanym parametrem dla argumentu TypeVar","typeVarUsedByOuterScope":"Argument TypeVar „{name}” jest już używany przez zakres zewnętrzny","typeVarUsedOnlyOnce":"Typ TypeVar „{name}” pojawia się tylko raz w sygnaturze funkcji ogólnej","typeVarVariance":"Zmienna typu TypeVar nie może być jednocześnie kowariantna i kontrawariantna","typeVarWithDefaultFollowsVariadic":"Wartość TypeVar „{typeVarName}” ma wartość domyślną i nie może następować po wartości TypeVarTuple „{variadicName}”.","typeVarWithoutDefault":"Element „{name}” nie może występować po elemencie „{other}” na liście parametrów typu, ponieważ nie ma typu domyślnego","typeVarsNotInGenericOrProtocol":"Elementy Generic[] lub Protocol[] muszą zawierać wszystkie zmienne typu","typedDictAccess":"Nie można uzyskać dostępu do elementu w TypedDict","typedDictAssignedName":"Element TypedDict musi być przypisany do zmiennej o nazwie „{name}”","typedDictBadVar":"Klasy TypedDict mogą zawierać tylko adnotacje typu","typedDictBaseClass":"Wszystkie klasy bazowe dla klas TypedDict muszą być również klasami TypedDict","typedDictBoolParam":"Oczekiwano, że parametr „{name}” będzie miał wartość Prawda lub Fałsz","typedDictClosedExtras":"Klasa bazowa „{name}” jest zamkniętym elementem TypedDict; dodatkowe elementy muszą być typu „{type}”","typedDictClosedNoExtras":"Klasa bazowa „{name}” jest zamkniętym elementem TypedDict; dodatkowe elementy są niedozwolone","typedDictDelete":"Nie można usunąć elementu w typie TypedDict","typedDictEmptyName":"Nazwy w elemencie TypedDict nie mogą być puste","typedDictEntryName":"Oczekiwano literału ciągu dla nazwy wpisu słownika","typedDictEntryUnique":"Nazwy w słowniku muszą być unikatowe","typedDictExtraArgs":"Dodatkowe argumenty TypedDict nie są obsługiwane","typedDictFieldNotRequiredRedefinition":"Element TypedDict „{name}” nie może zostać przedefiniowany jako Niewymagany","typedDictFieldReadOnlyRedefinition":"Element TypedDict „{name}” nie może być przedefiniowany jako Tylko do odczytu.","typedDictFieldRequiredRedefinition":"Element TypedDict „{name}” nie może zostać przedefiniowany jako Wymagany","typedDictFirstArg":"Oczekiwano nazwy klasy TypedDict jako pierwszego argumentu","typedDictInitsubclassParameter":"Element TypedDict nie obsługuje parametru __init_subclass__ „{name}”","typedDictNotAllowed":"Nie można użyć elementu „TypedDict” w tym kontekście","typedDictSecondArgDict":"Oczekiwano parametru dict lub słowa kluczowego jako drugiego parametru","typedDictSecondArgDictEntry":"Oczekiwano prostego wpisu słownika","typedDictSet":"Nie można przypisać elementu w TypedDict","unaccessedClass":"Nie uzyskano dostępu do klasy „{name}”","unaccessedFunction":"Brak dostępu do funkcji „{name}”.","unaccessedImport":"Import „{name}” nie jest dostępny","unaccessedSymbol":"Brak dostępu do „{name}”.","unaccessedVariable":"Brak dostępu do zmiennej „{name}”.","unannotatedFunctionSkipped":"Analiza funkcji „{name}” została pominięta, ponieważ nie ma adnotacji","unaryOperationNotAllowed":"Operator jednoargumentowy nie jest dozwolony w adnotacji typu","unexpectedAsyncToken":"Oczekiwano wartości „def”, „with” lub „for” po „async”","unexpectedExprToken":"Nieoczekiwany token na końcu wyrażenia","unexpectedIndent":"Nieoczekiwane wcięcie","unexpectedUnindent":"Nieoczekiwany brak wcięcia","unhashableDictKey":"Klucz słownika musi być wartością skrótu","unhashableSetEntry":"Ustawiany wpis musi być wartością skrótu","uninitializedAbstractVariables":"Zmienne zdefiniowane w abstrakcyjnej klasie bazowej nie są inicjowane w klasie końcowej „{classType}”","uninitializedInstanceVariable":"Zmienna wystąpienia „{name}” nie została zainicjowana w treści klasy ani w metodzie __init__","unionForwardReferenceNotAllowed":"Składnia unii nie może być używana z operandem ciągu; użyj cudzysłowów wokół całego wyrażenia","unionSyntaxIllegal":"Alternatywna składnia unii wymaga języka Python w wersji 3.10 lub nowszej","unionTypeArgCount":"Unia wymaga co najmniej dwóch argumentów typu","unionUnpackedTuple":"Związek nie może zawierać rozpakowanej krotki","unionUnpackedTypeVarTuple":"Unia nie może zawierać rozpakowanego elementu TypeVarTuple","unnecessaryCast":"Niepotrzebne wywołanie „cast”; typ jest już „{type}”","unnecessaryIsInstanceAlways":"Niepotrzebne wywołanie wystąpienia; „{testType}” jest zawsze wystąpieniem „{classType}”","unnecessaryIsSubclassAlways":"Niepotrzebne wywołanie „issubclass”; „{testType}” jest zawsze podklasą klasy „{classType}”","unnecessaryPyrightIgnore":"Niepotrzebny komentarz „# pyright: ignore”","unnecessaryPyrightIgnoreRule":"Niepotrzebna reguła „# pyright: ignore”: „{name}”","unnecessaryTypeIgnore":"Niepotrzebny komentarz „# type: ignore”","unpackArgCount":"Oczekiwano jednego argumentu typu po wartości „Unpack”","unpackExpectedTypeVarTuple":"Oczekiwano typu TypeVarTuple lub krotki jako argumentu typu dla rozpakowywania","unpackExpectedTypedDict":"Oczekiwano argumentu typu TypedDict dla rozpakowywania","unpackIllegalInComprehension":"Operacja rozpakowywania nie jest dozwolona w rozumieniu","unpackInAnnotation":"Operator rozpakowywania nie jest dozwolony w adnotacji typu","unpackInDict":"Operacja rozpakowywania nie jest dozwolona w słownikach","unpackInSet":"Rozpakowywanie operatora jest niedozwolone w zestawie","unpackNotAllowed":"Rozpakowywanie jest niedozwolone w tym kontekście","unpackOperatorNotAllowed":"Operacja rozpakowywania jest niedozwolona w tym kontekście","unpackTuplesIllegal":"Operacja rozpakowywania nie jest dozwolona w krotkach przed językiem Python w wersji 3.8","unpackedArgInTypeArgument":"Rozpakowanych argumentów nie można używać na listach argumentów typu","unpackedArgWithVariadicParam":"Nie można użyć nierozpakowanego argumentu dla parametru TypeVarTuple","unpackedDictArgumentNotMapping":"Wyrażenie argumentu po znakach ** musi być mapowaniem z typem klucza „str”","unpackedDictSubscriptIllegal":"Operator rozpakowywania słownika w indeksie dolnym jest niedozwolony","unpackedSubscriptIllegal":"Operator rozpakowywania w indeksie dolnym wymaga języka Python w wersji 3.11 lub nowszej","unpackedTypeVarTupleExpected":"Oczekiwano nierozpakowanego typu TypeVarTuple; użyj Unpack[{name1}] lub *{name2}","unpackedTypedDictArgument":"Nie można dopasować nierozpakowanego argumentu TypedDict do parametrów","unreachableCode":"Kod jest nieosiągalny","unreachableExcept":"Klauzula wyjątku jest nieosiągalna, ponieważ wyjątek jest już obsługiwany","unsupportedDunderAllOperation":"Operacja na elemencie „__all__” nie jest obsługiwana, więc wyeksportowana lista symboli może być nieprawidłowa","unusedCallResult":"Wynik wyrażenia wywołania jest typu „{type}” i nie jest używany; przypisz do zmiennej „_”, jeśli jest to zamierzone","unusedCoroutine":"Wynik wywołania funkcji asynchronicznej nie jest używany; użyj wartości „await” lub przypisz wynik do zmiennej","unusedExpression":"Wartość wyrażenia jest nieużywana","varAnnotationIllegal":"Adnotacje typu dla zmiennych wymagają języka Python w wersji 3.6 lub nowszej; użyj komentarza typu, aby uzyskać zgodność z poprzednimi wersjami","variableFinalOverride":"Zmienna „{name}” jest oznaczona jako końcowa i zastępuje zmienną inną niż końcowa o tej samej nazwie w klasie „{className}”","variadicTypeArgsTooMany":"Lista argumentów typu może zawierać co najwyżej jeden nierozpakowany typ TypeVarTuple lub krotkę","variadicTypeParamTooManyAlias":"Alias typu może mieć co najwyżej jeden parametr typu TypeVarTuple, ale otrzymał wiele ({names})","variadicTypeParamTooManyClass":"Klasa ogólna może mieć co najwyżej jeden parametr typu TypeVarTuple, ale otrzymał wiele ({names})","walrusIllegal":"Operator „:=” wymaga języka Python w wersji 3.8 lub nowszej","walrusNotAllowed":"Operator „:=” jest niedozwolony w tym kontekście bez otaczających nawiasów","wildcardInFunction":"Importowanie symboli wieloznacznych jest niedozwolone w obrębie klasy lub funkcji","wildcardLibraryImport":"Importowanie symboli wieloznacznych z biblioteki jest niedozwolone","wildcardPatternTypePartiallyUnknown":"Typ przechwycony przez wzorzec symboli wieloznacznych jest częściowo nieznany","wildcardPatternTypeUnknown":"Typ przechwycony przez wzorzec symboli wieloznacznych jest nieznany","yieldFromIllegal":"Użycie wartości „yield from” wymaga języka Python w wersji 3.3 lub nowszej","yieldFromOutsideAsync":"Instrukcja „yield from” jest niedozwolona w funkcji asynchronicznej","yieldOutsideFunction":"Instrukcja „yield” jest niedozwolona poza funkcją lub wyrażeniem lambda","yieldWithinListCompr":"Instrukcja „yield” nie jest dozwolona w rozumieniu listy","zeroCaseStatementsFound":"Instrukcja dopasowania musi zawierać co najmniej jedną instrukcję dotyczącą wielkości liter","zeroLengthTupleNotAllowed":"Krotka o zerowej długości jest niedozwolona w tym kontekście"},"DiagnosticAddendum":{"annotatedNotAllowed":"Formularza specjalnego „Adnotacja” nie można używać z kontrolami wystąpień i klas","argParam":"Argument odpowiada parametrowi „{paramName}”","argParamFunction":"Argument odpowiada parametrowi „{paramName}” w funkcji „{functionName}”","argsParamMissing":"Parametr „*{paramName}” nie ma odpowiadającego mu parametru","argsPositionOnly":"Niezgodność parametrów tylko dla pozycji; oczekiwano wartości „{expected}”, a uzyskano „{received}”","argumentType":"Typ argumentu to „{type}”","argumentTypes":"Typy argumentów: ({types})","assignToNone":"Nie można przypisać typu do typu „Brak”","asyncHelp":"Czy chodziło o wartość „async with”?","baseClassIncompatible":"Klasa bazowa „{baseClass}” jest niezgodna z typem „{type}”","baseClassIncompatibleSubclass":"Klasa bazowa „{baseClass}” pochodzi od klasy podrzędnej „{subclass}”, która jest niezgodna z typem „{type}”","baseClassOverriddenType":"Klasa bazowa „{baseClass}” udostępnia typ „{type}”, który jest przesłonięty","baseClassOverridesType":"Zastąpienie klasy bazowej „{baseClass}” typem „{type}”","bytesTypePromotions":"Ustaw właściwość disableBytesTypePromotions na wartość false, aby włączyć zachowanie promocji typu dla elementów „bytearray” i „memoryview”","conditionalRequiresBool":"Metoda __bool__ dla typu „{operandType}” zwraca typ \\"{boolReturnType}\\" zamiast „bool”","dataClassFieldLocation":"Deklaracja pola","dataClassFrozen":"Nazwa „{name}” jest zamrożona","dataProtocolUnsupported":"Element „{name}” to protokół danych","descriptorAccessBindingFailed":"Nie można powiązać metody „{name}” dla klasy deskryptora „{className}”","descriptorAccessCallFailed":"Nie można wywołać metody „{name}” dla klasy deskryptora „{className}”","finalMethod":"Metoda końcowa","functionParamDefaultMissing":"Brak domyślnego argumentu dla parametru „{name}”","functionParamName":"Niezgodność nazw parametrów: „{destName}” a „{srcName}”","functionParamPositionOnly":"Niezgodność parametrów tylko do położenia; parametr „{name}” nie jest tylko pozycją","functionReturnTypeMismatch":"Typ zwracanego typu funkcji „{sourceType}” jest niezgodny z typem „{destType}”","functionTooFewParams":"Funkcja akceptuje zbyt mało parametrów pozycyjnych; oczekiwano {expected}, ale otrzymano {received}","functionTooManyParams":"Funkcja akceptuje zbyt wiele parametrów pozycyjnych; oczekiwano {expected}, ale otrzymano {received}","genericClassNotAllowed":"Typ ogólny z argumentami typu jest niedozwolony dla sprawdzania wystąpienia lub klasy","incompatibleDeleter":"Metoda usuwająca właściwości jest niezgodna","incompatibleGetter":"Metoda pobierająca właściwości jest niezgodna","incompatibleSetter":"Metoda ustawiająca właściwości jest niezgodna","initMethodLocation":"Metoda __init__ jest zdefiniowana w klasie „{type}”","initMethodSignature":"Sygnatura __init__ to typ „{type}”","initSubclassLocation":"Metoda __init_subclass__ jest zdefiniowana w klasie „{name}”","invariantSuggestionDict":"Rozważ przełączenie z wartości „dict” na „Mapping”, która jest kowariantna w typie wartości","invariantSuggestionList":"Rozważ zmianę wartości „list” na „Sequence”, która jest kowariantna","invariantSuggestionSet":"Rozważ przełączenie z wartości „set” na „Container”, która jest kowariantna","keyNotRequired":"„{name}” nie jest wymaganym kluczem w typie „{type}”, więc dostęp może spowodować wyjątek środowiska uruchomieniowego","keyReadOnly":"Nazwa „{name}” jest kluczem tylko do odczytu w typie „{type}”","keyRequiredDeleted":"Nazwa „{name}” jest wymaganym kluczem i nie można go usunąć","keyUndefined":"Nazwa „{name}” nie jest zdefiniowanym kluczem w typie „{type}”","kwargsParamMissing":"Parametr „**{paramName}” nie ma odpowiadającego mu parametru","listAssignmentMismatch":"Typ „{type}” jest niezgodny z listą docelową","literalAssignmentMismatch":"Nie można przypisać typu „{sourceType}” do typu „{destType}”","matchIsNotExhaustiveHint":"Jeśli kompleksowa obsługa nie jest zamierzona, dodaj „case _: pass”","matchIsNotExhaustiveType":"Nieobsługiwany typ: „{type}”","memberAssignment":"Wyrażenia typu „{type}” nie można przypisać do składowej „{name}” klasy „{classType}”","memberIsAbstract":"„{type}.{name}” nie zostało zaimplementowane","memberIsAbstractMore":"i jeszcze {count}...","memberIsClassVarInProtocol":"Element „{name}” jest zdefiniowany jako element ClassVar w protokole","memberIsFinalInProtocol":"Nazwa „{name}” jest oznaczona jako końcowa w protokole","memberIsInitVar":"Składowa „{name}” jest polem tylko do operacji init","memberIsInvariant":"Nazwa „{name}” jest niezmienna, ponieważ jest modyfikowalna","memberIsNotClassVarInClass":"Element „{name}” musi być zdefiniowany jako ClassVar, aby był zgodny z protokołem","memberIsNotClassVarInProtocol":"Element „{name}” nie jest zdefiniowany jako ClassVar w protokole","memberIsNotFinalInProtocol":"Element „{name}” nie jest oznaczony jako wersja ostateczna w protokole","memberIsWritableInProtocol":"Nazwa „{name}” jest zapisywalna w protokole","memberSetClassVar":"Nie można przypisać składowej „{name}” przez wystąpienie klasy, ponieważ jest to element ClassVar","memberTypeMismatch":"Nazwa „{name}” jest niezgodnym typem","memberUnknown":"Składowa „{name}” jest nieznana","metaclassConflict":"Metaklasa „{metaclass1}” powoduje konflikt z „{metaclass2}”","missingDeleter":"Brak metody usuwania właściwości","missingGetter":"Brak metody pobierającej właściwości","missingSetter":"Brak metody zestawu właściwości","namedParamMissingInDest":"W lokalizacji docelowej brakuje parametru słowa kluczowego „{name}”.","namedParamMissingInSource":"W źródle brakuje parametru słowa kluczowego „{name}”.","namedParamTypeMismatch":"Parametru słowa kluczowego „{name}” typu „{sourceType}” nie można przypisać do typu „{destType}”","namedTupleNotAllowed":"Funkcja NamedTuple nie może być używana do sprawdzania wystąpień lub klas","newMethodLocation":"Metoda __new__ jest zdefiniowana w klasie „{type}”","newMethodSignature":"Sygnatura __new__ to typ „{type}”","newTypeClassNotAllowed":"Klasy utworzonej za pomocą elementu NewType nie można używać z sprawdzaniem wystąpień i klas","noOverloadAssignable":"Żadna przeciążona funkcja nie pasuje do typu „{type}”","noneNotAllowed":"Żadne nie może być używane do sprawdzania wystąpienia ani klasy","orPatternMissingName":"Brak nazw: {name}","overloadIndex":"Przeciążenie {index} jest najbardziej zbliżonym dopasowaniem","overloadNotAssignable":"Nie można przypisać jednego lub więcej przeciążeń „{name}”.","overloadSignature":"Sygnatura przeciążenia jest zdefiniowana tutaj","overriddenMethod":"Przesłonięta metoda","overriddenSymbol":"Przesłonięty symbol","overrideInvariantMismatch":"Typ zastąpienia „{overrideType}” nie jest taki sam jak typ podstawowy „{baseType}”","overrideIsInvariant":"Zmienna podlega przeobrażeniom, dlatego jej typ jest niezmienny","overrideNoOverloadMatches":"Żadna sygnatura przeciążenia w przesłonięciu nie jest zgodna z metodą bazową","overrideNotClassMethod":"Metoda bazowa jest zadeklarowana jako metoda classmethod, ale przesłonięcie nie","overrideNotInstanceMethod":"Metoda bazowa jest zadeklarowana jako metoda wystąpienia, ale zastąpienie nie jest","overrideNotStaticMethod":"Metoda bazowa jest zadeklarowana jako metoda statyczna, ale przesłonięcie nie","overrideOverloadNoMatch":"Zastąpienie nie obsługuje wszystkich przeciążeń metody podstawowej","overrideOverloadOrder":"Przeciążenia dla metody przesłaniania muszą być w takiej samej kolejności, co metoda bazowa","overrideParamKeywordNoDefault":"Niezgodność parametru słowa kluczowego „{name}”: parametr bazowy ma domyślną wartość argumentu, parametr zastąpienia nie ma jej","overrideParamKeywordType":"Niezgodność typu parametru słowa kluczowego „{name}”: parametr bazowy jest typu „{baseType}”, a parametr zastąpienia jest typu „{overrideType}”","overrideParamName":"Niezgodność nazwy parametru {index}: parametr podstawowy nosi nazwę „{baseName}”, a parametr zastąpienia — „{overrideName}”","overrideParamNameExtra":"W bazie brakuje parametru „{name}”.","overrideParamNameMissing":"Brak parametru „{name}” w zastąpieniu","overrideParamNamePositionOnly":"Niezgodność parametru {index}: parametr podstawowy „{baseName}” jest parametrem słowa kluczowego, parametr przesłonięcia jest tylko w pozycji","overrideParamNoDefault":"Niezgodność parametru {index}: parametr bazowy ma domyślną wartość argumentu, a parametr zastąpienia nie ma jej","overrideParamType":"Niezgodność typów parametru {index}: parametr bazowy jest typu „{baseType}”, parametr zastąpienia jest typu „{overrideType}”","overridePositionalParamCount":"Niezgodność liczby parametrów pozycyjnych; metoda podstawowa ma {baseCount}, a zastąpienie {overrideCount}","overrideReturnType":"Niezgodność zwracanego typu: metoda podstawowa zwraca typ „{baseType}”, przesłonięcie zwraca typ „{overrideType}”","overrideType":"Klasa bazowa definiuje typ jako „{type}”","paramAssignment":"Parametr {index}: typu „{sourceType}” nie można przypisać do typu „{destType}”","paramSpecMissingInOverride":"Brak parametrów ParamSpec w metodzie zastąpienia","paramType":"Typ parametru to „{paramType}”","privateImportFromPyTypedSource":"Zamiast tego importuj z modułu „{module}”.","propertyAccessFromProtocolClass":"Nie można uzyskać dostępu do właściwości zdefiniowanej w klasie protokołu jako zmiennej klasy","propertyMethodIncompatible":"Metoda właściwości „{name}” jest niezgodna","propertyMethodMissing":"Brak metody właściwości „{name}” w zastąpieniu","propertyMissingDeleter":"Właściwość „{name}” nie ma zdefiniowanego elementu usuwającego","propertyMissingSetter":"Właściwość „{name}” nie ma zdefiniowanej metody ustawiającej","protocolIncompatible":"Protokół „{sourceType}” jest niezgodny z protokołem „{destType}”","protocolMemberMissing":"Brak nazwy „{name}”.","protocolRequiresRuntimeCheckable":"Klasa protokołu musi być @runtime_checkable, aby mogła być używana ze sprawdzaniem wystąpienia i klasy","protocolSourceIsNotConcrete":"„{sourceType}” nie jest typem specyficznej klasy i nie można go przypisać do typu „{destType}”","protocolUnsafeOverlap":"Atrybuty „{name}” mają takie same nazwy jak protokół","pyrightCommentIgnoreTip":"Użyj polecenia „# pyright: ignore[<diagnostic rules>], aby pominąć diagnostykę przez jeden wiersz","readOnlyAttribute":"Atrybut „{name}” jest tylko do odczytu","seeClassDeclaration":"Zobacz deklarację klasy","seeDeclaration":"Zobacz deklarację","seeFunctionDeclaration":"Zobacz deklarację funkcji","seeMethodDeclaration":"Zobacz deklarację metody","seeParameterDeclaration":"Zobacz deklarację parametru","seeTypeAliasDeclaration":"Zobacz deklarację aliasu typu","seeVariableDeclaration":"Zobacz deklarację zmiennej","tupleAssignmentMismatch":"Typ „{type}” jest niezgodny z docelową krotką","tupleEntryTypeMismatch":"Wpis krotki {entry} jest nieprawidłowego typu","tupleSizeIndeterminateSrc":"Niezgodność rozmiaru krotki; oczekiwano {expected}, ale otrzymano nieokreślony","tupleSizeIndeterminateSrcDest":"Niezgodność rozmiaru krotki; oczekiwano {expected}, a otrzymano rozmiar nieokreślony","tupleSizeMismatch":"Niezgodność rozmiaru krotki; oczekiwano {expected}, ale otrzymano {received}","tupleSizeMismatchIndeterminateDest":"Niezgodność rozmiaru krotki; oczekiwano {expected}, a otrzymano {received}","typeAliasInstanceCheck":"Alias typu utworzony za pomocą instrukcji „{type}” nie może być użyty do sprawdzania wystąpień i klas","typeAssignmentMismatch":"Nie można przypisać typu „{sourceType}” do typu „{destType}”","typeBound":"Typ „{sourceType}” jest niezgodny z typem powiązanym „{destType}” dla zmiennej typu „{name}”","typeConstrainedTypeVar":"Typ „{type}” jest niezgodny ze zmienną typu ograniczonego „{name}”","typeIncompatible":"Typ „{sourceType}” jest niezgodny z „{destType}”","typeNotClass":"Typ „{type}” nie jest klasą","typeNotStringLiteral":"„{type}” nie jest literałem ciągu","typeOfSymbol":"Typ nazwy „{name}” jest to „{type}”","typeParamSpec":"Typ „{type}” jest niezgodny ze specyfikacją ParamSpec „{name}”","typeUnsupported":"Typ „{type}” nie jest obsługiwany","typeVarDefaultOutOfScope":"Zmienna typu „{name}” nie wchodzi w zakres","typeVarIsContravariant":"Parametr typu „{name}” jest kontrawariantny, ale „{sourceType}” nie jest nadtypem „{destType}”","typeVarIsCovariant":"Parametr typu „{name}” jest kowariantny, ale „{sourceType}” nie jest podtypem „{destType}”","typeVarIsInvariant":"Parametr typu „{name}” jest niezmienny, ale „{sourceType}” nie jest taki sam jak „{destType}”","typeVarNotAllowed":"Typ TypeVar nie jest dozwolony dla sprawdzania wystąpienia lub klasy","typeVarTupleRequiresKnownLength":"Nie można powiązać parametru TypeVarTuple z krotką o nieznanej długości","typeVarUnnecessarySuggestion":"Zamiast tego użyj elementu {type}","typeVarUnsolvableRemedy":"Podaj przeciążenie, które określa zwracany typ, gdy nie podano argumentu","typeVarsMissing":"Brak zmiennych typu: {names}","typedDictBaseClass":"Klasa „{type}” nie jest typem TypedDict","typedDictClassNotAllowed":"Klasa TypedDict nie jest dozwolona na potrzeby sprawdzania wystąpienia lub klasy","typedDictClosedExtraNotAllowed":"Nie można dodać elementu \\"{name}\\"","typedDictClosedExtraTypeMismatch":"Nie można dodać elementu \\"{name}\\" z typem „{type}”","typedDictClosedFieldNotRequired":"Nie można dodać elementu \\"{name}\\", ponieważ musi on mieć wartość NotRequired","typedDictExtraFieldNotAllowed":"Element „{name}” nie jest obecny w typie „{type}”","typedDictExtraFieldTypeMismatch":"Typ „{name}” jest niezgodny z typem „__extra_items__” w typie „{type}”","typedDictFieldMissing":"Brak nazwy „{name}” w „{type}”","typedDictFieldNotReadOnly":"Nazwa „{name}” nie jest tylko do odczytu w „{type}”","typedDictFieldNotRequired":"Nazwa „{name}” nie jest wymagana w typie „{type}”","typedDictFieldRequired":"Nazwa „{name}” jest wymagana w typie „{type}”","typedDictFieldTypeMismatch":"Nie można przypisać typu „{type}” do elementu „{name}”","typedDictFieldUndefined":"Nazwa „{name}” jest niezdefiniowanym elementem w typie „{type}”","typedDictFinalMismatch":"Typ „{sourceType}” jest niezgodny z typem „{destType}” z powodu niezgodności @final","typedDictKeyAccess":"Użyj elementu [\\"{name}\\"], aby odwołać się do elementu w TypedDict","typedDictNotAllowed":"Funkcja TypedDict nie może być używana do sprawdzania wystąpień lub klas","unhashableType":"Typ „{type}” nie jest wartością skrótu","uninitializedAbstractVariable":"zmienna wystąpienia „{name}” jest zdefiniowana w abstrakcyjnej klasie bazowej „{classType}” ale nie została zainicjowana","unreachableExcept":"Typ „{exceptionType}” jest podklasą typu „{parentType}”","useDictInstead":"Użyj funkcji Dict[T1, T2], aby wskazać typ słownika","useListInstead":"Użyj funkcji List[T], aby wskazać typ listy, lub Union[T1, T2], aby wskazać typ unii","useTupleInstead":"Użyj Tuple[T1, ..., Tn], aby wskazać typ krotki lub Union[T1, T2], aby wskazać typ unii","useTypeInstead":"Zamiast tego użyj typu Type[T].","varianceMismatchForClass":"Wariancja argumentu typu „{typeVarName}” jest niezgodna z klasą bazową „{className}”","varianceMismatchForTypeAlias":"Wariancja argumentu typu „{typeVarName}” jest niezgodna z parametrem „{typeAliasParam}”"}}')},55352:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Criar Stub de Tipo","createTypeStubFor":"Criar stub de tipo para \\"{moduleName}\\"","executingCommand":"Executando comando","filesToAnalyzeCount":"{count} arquivos a serem analisados","filesToAnalyzeOne":"1 arquivo a ser analisado","findingReferences":"Localizando referências","organizeImports":"Organizar as importações","renameShadowedFile":"Renomear \\"{oldFile}\\" para \\"{newFile}\\""},"Completion":{"autoImportDetail":"Importação automática","indexValueDetail":"Valor do índice"},"Diagnostic":{"abstractMethodInvocation":"O método \\"{method}\\" não pode ser chamado porque é abstrato e não está implementado","annotatedParamCountMismatch":"Incompatibilidade de contagem de anotações de parâmetro: esperado {expected}, mas recebido {received}","annotatedTypeArgMissing":"Esperava-se um argumento de tipo e uma ou mais anotações para \\"Annotated\\"","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"As anotações de tipo não podem usar literais de cadeia de caracteres de formato (cadeias de caracteres f)","annotationNotSupported":"Anotação de tipo sem suporte para esta instrução","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Anotações de tipo não podem abranger vários literais de cadeia de caracteres","annotationStringEscape":"Anotações de tipo não podem conter caracteres de escape","argAssignment":"O argumento do tipo \\"{argType}\\" não pode ser atribuído ao parâmetro do tipo \\"{paramType}\\"","argAssignmentFunction":"O argumento do tipo \\"{argType}\\" não pode ser atribuído ao parâmetro do tipo \\"{paramType}\\" na função \\"{functionName}\\"","argAssignmentParam":"O argumento do tipo \\"{argType}\\" não pode ser atribuído ao parâmetro \\"{paramName}\\" do tipo \\"{paramType}\\"","argAssignmentParamFunction":"O argumento do tipo \\"{argType}\\" não pode ser atribuído ao parâmetro \\"{paramName}\\" do tipo \\"{paramType}\\" na função \\"{functionName}\\"","argMissingForParam":"Argumento ausente para o parâmetro {name}","argMissingForParams":"Argumentos ausentes para os parâmetros {names}","argMorePositionalExpectedCount":"Esperavam-se mais {expected} argumentos posicionais","argMorePositionalExpectedOne":"Espera-se mais um argumento posicional","argPositional":"Argumento posicional esperado","argPositionalExpectedCount":"{expected} argumentos posicionais esperados","argPositionalExpectedOne":"Argumento posicional esperado 1","argTypePartiallyUnknown":"O tipo de argumento é parcialmente desconhecido","argTypeUnknown":"O tipo de argumento é desconhecido","assertAlwaysTrue":"A expressão assert sempre é avaliada como true","assertTypeArgs":"\\"assert_type\\" espera dois argumentos posicionais","assertTypeTypeMismatch":"Incompatibilidade \\"assert_type\\": esperava-se \\"{expected}\\", mas recebeu \\"{received}\\"","assignmentExprComprehension":"O destino da expressão de atribuição \\"{name}\\" não pode usar o mesmo nome da compreensão para o destino","assignmentExprContext":"A expressão de atribuição deve estar dentro de módulo, função ou lambda","assignmentExprInSubscript":"Expressões de atribuição em um subscrito são compatíveis apenas no Python 3.10 e mais recente","assignmentInProtocol":"As variáveis de instância ou classe dentro de uma classe Protocol devem ser declaradas explicitamente dentro do corpo da classe","assignmentTargetExpr":"A expressão não pode ser o destino de atribuição","asyncNotInAsyncFunction":"Uso de \\"async\\" não permitido fora da função assíncrona","awaitIllegal":"O uso de \\"await\\" requer o Python 3.5 ou mais recente","awaitNotAllowed":"Anotações de tipo não podem usar \\"await\\"","awaitNotInAsync":"\\"await\\" permitido somente dentro da função assíncrona","backticksIllegal":"Não há suporte para expressões delimitadas por backticks no Python 3.x. Use repr em vez disso","baseClassCircular":"A classe não pode derivar de si mesma","baseClassFinal":"A classe base \\"{type}\\" está marcada como final e não pode ser subclasse","baseClassIncompatible":"Classes base de {type} são mutuamente incompatíveis","baseClassInvalid":"O argumento para a classe deve ser uma classe base","baseClassMethodTypeIncompatible":"Classes base para a classe \\"{classType}\\" definem o método \\"{name}\\" de maneira incompatível","baseClassUnknown":"O tipo de classe base é desconhecido, ocultando o tipo de classe derivada","baseClassVariableTypeIncompatible":"Classes base para a classe \\"{classType}\\" definem a variável \\"{name}\\" de maneira incompatível","binaryOperationNotAllowed":"Operador binário não permitido na anotação de tipo","bindTypeMismatch":"Não foi possível associar o método \\"{methodName}\\" porque \\"{type}\\" não é atribuível ao parâmetro \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" só pode ser usado dentro de um loop","callableExtraArgs":"Esperava-se apenas dois argumentos de tipo para \\"Callable\\"","callableFirstArg":"Lista de tipos de parâmetro esperado ou \\"...\\"","callableNotInstantiable":"Não é possível criar uma instância do tipo \\"{type}\\"","callableSecondArg":"Tipo de retorno esperado como segundo argumento de tipo para \\"Callable\\"","casePatternIsIrrefutable":"O padrão irrefutável é permitido somente para a última instrução case","classAlreadySpecialized":"O tipo \\"{type}\\" já é especializado","classDecoratorTypeUnknown":"Um decorador de classe sem tipo obscurece o tipo de classe. Ignorando o decorador","classDefinitionCycle":"A definição de classe para \\"{name}\\" depende de si mesma","classGetItemClsParam":"A substituição__class_getitem__ deve usar um parâmetro \\"cls\\"","classMethodClsParam":"Os métodos de classe devem usar um parâmetro \\"cls\\"","classNotRuntimeSubscriptable":"O subscrito para a classe \\"{name}\\" gerará uma exceção de runtime. Coloque a anotação de tipo entre aspas","classPatternBuiltInArgPositional":"O padrão de classe aceita apenas sub-padrão posicional","classPatternPositionalArgCount":"Muitos padrões posicionais para a classe \\"{type}\\"; esperado {expected} mas recebido {received}","classPatternTypeAlias":"\\"{type}\\" não pode ser usado em um padrão de classe porque é um alias de tipo especializado","classPropertyDeprecated":"As propriedades de classe foram preteridas no Python 3.11 e não terão suporte no Python 3.13","classTypeParametersIllegal":"A sintaxe do parâmetro de tipo de classe requer o Python 3.12 ou mais recente","classVarFirstArgMissing":"Um argumento de tipo era esperado após \\"ClassVar\\"","classVarNotAllowed":"\\"ClassVar\\" não é permitido neste contexto","classVarOverridesInstanceVar":"A variável de classe \\"{name}\\" substitui a variável de instância do mesmo nome na classe \\"{className}\\"","classVarTooManyArgs":"Espera-se apenas um argumento de tipo após \\"ClassVar\\"","classVarWithTypeVar":"O tipo \\"ClassVar\\" não pode incluir variáveis de tipo","clsSelfParamTypeMismatch":"O tipo de parâmetro \\"{name}\\" deve ser um supertipo de sua classe \\"{classType}\\"","codeTooComplexToAnalyze":"O código é muito complexo para ser analisado. Reduza a complexidade refatorando em sub-rotinas ou reduzindo caminhos de código condicionais","collectionAliasInstantiation":"O tipo \\"{type}\\" não pode ser instanciado, use \\"{alias}\\" em vez disso","comparisonAlwaysFalse":"A condição sempre será avaliada como False, pois os tipos \\"{leftType}\\" e \\"{rightType}\\" não têm sobreposição","comparisonAlwaysTrue":"A condição sempre será avaliada como True, pois os tipos \\"{leftType}\\" e \\"{rightType}\\" não têm sobreposição","comprehensionInDict":"A compreensão não pode ser usada com outras entradas de dicionário","comprehensionInSet":"A compreensão não pode ser usada com outras entradas definidas","concatenateContext":"\\"Concatenate\\" não é permitido nesse contexto","concatenateParamSpecMissing":"O último tipo de argumento para \\"Concatenate\\" deve ser um ParamSpec ou \\"...\\"","concatenateTypeArgsMissing":"\\"Concatenate\\" requer pelo menos dois argumentos de tipo","conditionalOperandInvalid":"Operando condicional inválido do tipo \\"{type}\\"","constantRedefinition":"\\"{name}\\" é constante (porque está em maiúsculas) e não pode ser redefinido","constructorNoArgs":"Nenhum argumento esperado para o construtor \\"{type}\\"","constructorParametersMismatch":"Incompatibilidade entre a assinatura de __new__ e __init__ na classe \\"{classType}\\"","containmentAlwaysFalse":"A expressão sempre será avaliada como False, pois os tipos \\"{leftType}\\" e \\"{rightType}\\" não têm sobreposição","containmentAlwaysTrue":"A expressão sempre será avaliada como True, pois os tipos \\"{leftType}\\" e \\"{rightType}\\" não têm sobreposição","continueInFinally":"\\"continue\\" não pode ser usado em uma cláusula finally","continueOutsideLoop":"\\"continue\\" só pode ser usado dentro de um loop","coroutineInConditionalExpression":"A expressão condicional faz referência à corrotina, que sempre é avaliada como True","dataClassBaseClassFrozen":"Uma classe não congelada não pode herdar de uma classe congelada","dataClassBaseClassNotFrozen":"Uma classe congelada não pode herdar de uma classe que não está congelada","dataClassConverterFunction":"O argumento do tipo \\"{argType}\\" não é um conversor válido para o campo \\"{fieldName}\\" do tipo \\"{fieldType}\\"","dataClassConverterOverloads":"Nenhuma sobrecarga de \\"{funcName}\\" são conversores válidos para o campo \\"{fieldName}\\" do tipo \\"{fieldType}\\"","dataClassFieldWithDefault":"Campos sem valores padrão não podem aparecer após campos com valores padrão","dataClassFieldWithPrivateName":"O campo Dataclass não pode usar o nome privado","dataClassFieldWithoutAnnotation":"O campo Dataclass sem anotação de tipo causará uma exceção de runtime","dataClassPostInitParamCount":"Contagem de parâmetros de dataclasse __post_init__ incorreta. O número de campos InitVar é {expected}","dataClassPostInitType":"Incompatibilidade de tipo de parâmetro de método de dataclasse __post_init__ para o campo \\"{fieldName}\\"","dataClassSlotsOverwrite":"__slots__ já está definido na classe","dataClassTransformExpectedBoolLiteral":"Expressão esperada que é avaliada estaticamente como True ou False","dataClassTransformFieldSpecifier":"Esperava-se tupla de classes ou funções, mas recebeu o tipo \\"{type}\\"","dataClassTransformPositionalParam":"Todos os argumentos para \\"dataclass_transform\\" devem ser argumentos de palavra-chave","dataClassTransformUnknownArgument":"O argumento \\"{name}\\" dataclass_transform não é compatível","dataProtocolInSubclassCheck":"Protocolos de dados (que incluem atributos que não são de método) não são permitidos em chamadas issubclass","declaredReturnTypePartiallyUnknown":"O tipo de retorno declarado, \\"{returnType}\\", é parcialmente desconhecido","declaredReturnTypeUnknown":"O tipo de retorno declarado é desconhecido","defaultValueContainsCall":"Chamadas de função e objetos mutáveis não permitidos na expressão de valor padrão do parâmetro","defaultValueNotAllowed":"O parâmetro com \\"*\\" ou \\"**\\" não pode ter valor padrão","delTargetExpr":"A expressão não pode ser excluída","deprecatedClass":"A classe \\"{name}\\" foi preterida","deprecatedConstructor":"O construtor da classe \\"{name}\\" foi preterido","deprecatedDescriptorDeleter":"O método \\"__delete__\\" para o descritor \\"{name}\\" está preterido","deprecatedDescriptorGetter":"O método \\"__get__\\" para o descritor \\"{name}\\" está preterido","deprecatedDescriptorSetter":"O método \\"__set__\\" para o descritor \\"{name}\\" está preterido","deprecatedFunction":"A função \\"{name}\\" está obsoleta","deprecatedMethod":"O método \\"{name}\\" na classe \\"{className}\\" está obsoleto","deprecatedPropertyDeleter":"O excluídor da propriedade \\"{name}\\" foi preterido","deprecatedPropertyGetter":"O getter da propriedade \\"{name}\\" foi preterido","deprecatedPropertySetter":"O setter da propriedade \\"{name}\\" está preterido","deprecatedType":"Este tipo foi preterido no Python {version}. Use \\"{replacement}\\" em vez disso","dictExpandIllegalInComprehension":"Expansão de dicionário não permitida na compreensão","dictInAnnotation":"Expressão de dicionário não permitida na anotação de tipo","dictKeyValuePairs":"Entradas de dicionário devem conter pares chave/valor","dictUnpackIsNotMapping":"Mapeamento esperado para o operador de desempacotamento de dicionário","dunderAllSymbolNotPresent":"\\"{name}\\" está especificado no __all__ mas não está presente no módulo","duplicateArgsParam":"Somente um parâmetro \\"*\\" permitido","duplicateBaseClass":"Classe base duplicada não permitida","duplicateCapturePatternTarget":"O destino de captura \\"{name}\\" não pode aparecer mais de uma vez dentro do mesmo padrão","duplicateCatchAll":"Somente uma cláusula de exceção catch-all é permitida","duplicateEnumMember":"O membro de enumeração \\"{name}\\" já está declarado","duplicateGenericAndProtocolBase":"Somente uma classe base Generic[...] ou Protocol[...] é permitida","duplicateImport":"\\"{importName}\\" foi importado mais de uma vez","duplicateKeywordOnly":"Somente um separador \\"*\\" permitido","duplicateKwargsParam":"Somente um parâmetro \\"**\\" é permitido","duplicateParam":"Nome de parâmetro \\"{name}\\" duplicado","duplicatePositionOnly":"Somente um parâmetro \\"/\\" permitido","duplicateStarPattern":"Somente um padrão \\"*\\" permitido em uma sequência de padrões","duplicateStarStarPattern":"Somente uma entrada \\"**\\" é permitida","duplicateUnpack":"Somente uma operação unpack é permitida na lista","ellipsisAfterUnpacked":"\\"...\\" não pode ser usado com um TypeVarTuple ou tupla descompactado","ellipsisContext":"\\"...\\" não é permitido neste contexto","ellipsisSecondArg":"\\"...\\" é permitido apenas como o segundo de dois argumentos","enumClassOverride":"A classe Enum \\"{name}\\" é final e não pode ser subclasse","exceptionGroupIncompatible":"A sintaxe do grupo de exceção (\\"exceto*\\") requer o Python 3.11 ou mais recente","exceptionTypeIncorrect":"\\"{type}\\" não deriva de BaseException","exceptionTypeNotClass":"\\"{type}\\" não é uma classe de exceção válida","exceptionTypeNotInstantiable":"O construtor para o tipo de exceção \\"{type}\\" requer um ou mais argumentos","expectedAfterDecorator":"Função ou declaração de classe esperada após o decorador","expectedArrow":"Esperava-se \\"->\\" seguido pela anotação de tipo de retorno","expectedAsAfterException":"Espera-se \\"as\\" após o tipo de exceção","expectedAssignRightHandExpr":"Expressão esperada à direita de \\"=\\"","expectedBinaryRightHandExpr":"Expressão esperada à direita do operador","expectedBoolLiteral":"Espera-se True ou False","expectedCase":"Instrução \\"case\\" esperada","expectedClassName":"Nome de classe esperado","expectedCloseBrace":"\\"{\\" não foi fechado","expectedCloseBracket":"\\"[\\" não foi fechado","expectedCloseParen":"\\"(\\" não foi fechado","expectedColon":"Esperava-se \\":\\"","expectedComplexNumberLiteral":"Literal de número complexo esperado para correspondência de padrões","expectedDecoratorExpr":"Formulário de expressão sem suporte para decorador antes do Python 3.9","expectedDecoratorName":"Nome do decorador esperado","expectedDecoratorNewline":"Nova linha esperada no final do decorador","expectedDelExpr":"Expressão esperada após \\"del\\"","expectedElse":"Esperava-se #else","expectedEquals":"Esperava-se \\"=\\"","expectedExceptionClass":"Classe ou objeto de exceção inválido","expectedExceptionObj":"Objeto de exceção esperado: classe de exceção ou None","expectedExpr":"Expressão esperada","expectedFunctionAfterAsync":"Definição de função esperada após \\"assíncrona\\"","expectedFunctionName":"Nome da função esperado após \\"def\\"","expectedIdentifier":"Identificador esperado","expectedImport":"\\"importação\\" esperada","expectedImportAlias":"Símbolo esperado após \\"as\\"","expectedImportSymbols":"Esperado um ou mais nomes de símbolo após a importação","expectedIn":"Esperava-se \\"in\\"","expectedInExpr":"Expressão esperada após \\"in\\"","expectedIndentedBlock":"Bloco recuado esperado","expectedMemberName":"Nome de membro esperado após \\".\\"","expectedModuleName":"Nome do módulo esperado","expectedNameAfterAs":"Nome de símbolo esperado após \\"as\\"","expectedNamedParameter":"O parâmetro de palavra-chave deve seguir \\"*\\"","expectedNewline":"Nova linha esperada","expectedNewlineOrSemicolon":"As instruções devem ser separadas por novas linhas ou ponto e vírgula","expectedOpenParen":"Esperava-se \\"(\\"","expectedParamName":"Nome do parâmetro esperado","expectedPatternExpr":"Expressão padrão esperada","expectedPatternSubjectExpr":"Expressão de assunto padrão esperada","expectedPatternValue":"Expressão de valor padrão esperada da forma \\"a.b\\"","expectedReturnExpr":"Expressão esperada após \\"return\\" ","expectedSliceIndex":"Expressão de índice ou fatia esperada","expectedTypeNotString":"Tipo esperado, mas recebeu um literal de cadeia de caracteres","expectedTypeParameterName":"Nome do parâmetro de tipo esperado","expectedYieldExpr":"Expressão esperada na instrução yield","finalClassIsAbstract":"A classe \\"{type}\\" está marcada como final e deve implementar todos os símbolos abstratos","finalContext":"\\"Final\\" não é permitido neste contexto","finalMethodOverride":"O método \\"{name}\\" não pode substituir o método final definido na classe \\"{className}\\"","finalNonMethod":"A função \\"{name}\\" não pode ser marcada como @final porque não é um método","finalReassigned":"\\"{name}\\" está declarado como Final e não pode ser reatribuído","finalRedeclaration":"\\"{name}\\" foi declarado anteriormente como Final","finalRedeclarationBySubclass":"\\"{name}\\" não pode ser redeclarado porque a classe pai \\"{className}\\" a declara como Final","finalTooManyArgs":"Argumento de tipo único esperado após \\"Final\\"","finalUnassigned":"\\"{name}\\" está declarado como Final, mas o valor não foi atribuído","formatStringBrace":"Chave de fechamento única não permitida no literal de cadeia de caracteres f. Usar chave de fechamento dupla","formatStringBytes":"Literais de cadeia de caracteres de formato (cadeia de caracteres f) não podem ser binárias","formatStringDebuggingIllegal":"O especificador de depuração de cadeia de caracteres f \\"=\\" requer o Python 3.8 ou mais recente","formatStringEscape":"Sequência de escape (barra invertida) não permitida na parte de expressão da cadeia de caracteres f em versões anteriores ao Python 3.12","formatStringExpectedConversion":"Esperava-se um especificador de conversão após \\"!\\" na cadeia de caracteres f","formatStringIllegal":"Literais de cadeia de caracteres de formato (cadeias de caracteres f) exigem Python 3.6 ou mais recente","formatStringInPattern":"Cadeia de caracteres de formato não permitida no padrão","formatStringNestedFormatSpecifier":"Expressões aninhadas muito profundamente dentro do especificador de cadeia de caracteres de formato","formatStringNestedQuote":"Cadeias de caracteres aninhadas em uma cadeia de caracteres f não podem usar o mesmo caractere de aspas que a cadeia de caracteres f antes do Python 3.12","formatStringUnicode":"As literais de cadeia de caracteres de formato (f-strings) não podem ser unicode","formatStringUnterminated":"Expressão não finalizada na cadeia de caracteres f. \\"}\\" era esperado","functionDecoratorTypeUnknown":"Um decorador de função sem tipo obscurece o tipo de função. Ignorando o decorador","functionInConditionalExpression":"Função de referências de expressão condicional que sempre é avaliada como True","functionTypeParametersIllegal":"A sintaxe do parâmetro de tipo de função requer o Python 3.12 ou mais recente","futureImportLocationNotAllowed":"As importações __future__ devem estar no início do arquivo","generatorAsyncReturnType":"O tipo de retorno da função geradora assíncrona deve ser compatível com \\"AsyncGenerator[{yieldType}, Any]\\"","generatorNotParenthesized":"As expressões de gerador devem estar entre parênteses se não forem argumentos exclusivos","generatorSyncReturnType":"O tipo de retorno da função de gerador deve ser compatível com \\"Generator[{yieldType}, Any, Any]\\"","genericBaseClassNotAllowed":"A classe base \\"Generic\\" não pode ser usada com sintaxe de parâmetro de tipo","genericClassAssigned":"O tipo de classe genérica não pode ser atribuído","genericClassDeleted":"O tipo de classe genérica não pode ser excluído","genericInstanceVariableAccess":"O acesso à variável de instância genérica por meio da classe é ambíguo","genericNotAllowed":"__arglist não é válido neste contexto","genericTypeAliasBoundTypeVar":"O alias de tipo genérico dentro da classe não pode usar variáveis de tipo associado {names}","genericTypeArgMissing":"\\"Generic\\" requer pelo menos um argumento de tipo","genericTypeArgTypeVar":"O argumento de tipo para \\"Generic\\" deve ser uma variável de tipo","genericTypeArgUnique":"Os argumentos de tipo para \\"Genérico\\" devem ser exclusivos","globalReassignment":"\\"{name}\\" é atribuído antes da declaração global","globalRedefinition":"\\"{name}\\" já foi declarado global","implicitStringConcat":"Concatenação de cadeia de caracteres implícita não permitida","importCycleDetected":"Ciclo detectado na cadeia de importação","importDepthExceeded":"A profundidade da cadeia de importação excedeu {depth}","importResolveFailure":"Não foi possível resolver a importação \\"{importName}\\"","importSourceResolveFailure":"Não foi possível resolver a importação \\"{importName}\\" da origem","importSymbolUnknown":"\\"{name}\\" é um símbolo de importação desconhecido","incompatibleMethodOverride":"O método \\"{name}\\" substitui a classe \\"{className}\\" de maneira incompatível","inconsistentIndent":"O valor de recuo não corresponde ao recuo anterior","inconsistentTabs":"Uso inconsistente de guias e espaços no recuo","initMustReturnNone":"O tipo de retorno de \\"__init__\\" deve ser None","initSubclassCallFailed":"Argumentos de palavra-chave incorretos para o método __init_subclass__","initSubclassClsParam":"A substituição __init_subclass__ deve usar um parâmetro \\"cls\\"","initVarNotAllowed":"\\"InitVar\\" não é permitido neste contexto","instanceMethodSelfParam":"Os métodos de instância devem usar um parâmetro \\"self\\"","instanceVarOverridesClassVar":"A variável de instância \\"{name}\\" substitui a variável de classe de mesmo nome na classe \\"{className}\\"","instantiateAbstract":"Não é possível instanciar a classe abstrata \\"{type}\\"","instantiateProtocol":"Não é possível instanciar a classe de protocolo \\"{type}\\"","internalBindError":"Erro interno ao associar o arquivo de associação \\"{file}\\": {message}","internalParseError":"Ocorreu um erro interno ao analisar o arquivo \\"{file}\\": {message}","internalTypeCheckingError":"Erro interno ao digitar o arquivo de verificação \\"{file}\\": {message}","invalidIdentifierChar":"Caractere inválido no identificador","invalidStubStatement":"A instrução não faz sentido dentro de um arquivo stub de tipo","invalidTokenChars":"Caractere inválido \\"{text}\\" no token","isInstanceInvalidType":"O segundo argumento para \\"instance\\" deve ser uma classe ou tupla de classes","isSubclassInvalidType":"O segundo argumento para \\"issubclass\\" deve ser uma classe ou tupla de classes","keyValueInSet":"Pares chave/valor não são permitidos em um conjunto","keywordArgInTypeArgument":"Argumentos de palavra-chave não podem ser usados em listas de argumentos de tipo","keywordOnlyAfterArgs":"Separador de argumento somente palavra-chave não permitido após o parâmetro \\"*\\"","keywordParameterMissing":"Um ou mais parâmetros de palavra-chave devem seguir o parâmetro \\"*\\"","keywordSubscriptIllegal":"Não há suporte para argumentos de palavra-chave em subscritos","lambdaReturnTypePartiallyUnknown":"O tipo de retorno de lambda, \\"{returnType}\\", é parcialmente desconhecido","lambdaReturnTypeUnknown":"O tipo de retorno de lambda é desconhecido","listAssignmentMismatch":"A expressão com o tipo \\"{type}\\" não pode ser atribuída à lista de destino","listInAnnotation":"Expressão de lista não permitida na anotação de tipo","literalEmptyArgs":"Um ou mais argumentos de tipo esperados após \\"Literal\\"","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"\\"Literal\\" não pode ser usado nesse contexto sem um argumento de tipo","literalNotCallable":"O tipo literal não pode ser instanciado","literalUnsupportedType":"Os argumentos de tipo para \\"Literal\\" devem ser None, um valor literal (int, bool, str ou bytes) ou um valor de enumeração","matchIncompatible":"As instruções de correspondência exigem Python 3.10 ou mais recente","matchIsNotExhaustive":"Os casos dentro da instrução match não lidam exaustivamente com todos os valores","maxParseDepthExceeded":"Profundidade máxima de análise excedida. Divida a expressão em subexpressões menores","memberAccess":"Não é possível acessar o membro \\"{name}\\" para o tipo \\"{type}\\"","memberDelete":"Não é possível excluir o membro \\"{name}\\" para o tipo \\"{type}\\"","memberSet":"Não é possível atribuir o membro \\"{name}\\" para o tipo \\"{type}\\"","metaclassConflict":"A metaclasse de uma classe derivada deve ser uma subclasse das metaclasses de todas as suas classes base","metaclassDuplicate":"Apenas uma metaclasse pode ser fornecida","metaclassIsGeneric":"A metaclasse não pode ser genérica","methodNotDefined":"Método \\"{name}\\" não definido","methodNotDefinedOnType":"Método \\"{name}\\" não definido no tipo \\"{type}\\"","methodOrdering":"Não é possível criar ordenação de método consistente","methodOverridden":"\\"{name}\\" substitui o método de mesmo nome na classe \\"{className}\\" pelo tipo incompatível \\"{type}\\"","methodReturnsNonObject":"O método \\"{name}\\" não retorna um objeto","missingSuperCall":"O método \\"{methodName}\\" não chama o método do mesmo nome na classe pai","moduleAsType":"O módulo não pode ser usado como um tipo.","moduleNotCallable":"O módulo não pode ser chamado","moduleUnknownMember":"\\"{memberName}\\" não é um membro conhecido do módulo \\"{moduleName}\\"","namedExceptAfterCatchAll":"Uma cláusula except nomeada não pode aparecer após a cláusula catch-all except","namedParamAfterParamSpecArgs":"O parâmetro de palavra-chave \\"{name}\\" não pode aparecer na assinatura após o parâmetro args ParamSpec","namedTupleEmptyName":"Nomes dentro de uma tupla nomeada não podem ficar vazios","namedTupleEntryRedeclared":"Não é possível substituir \\"{name}\\" porque a classe pai \\"{className}\\" é uma tupla nomeada","namedTupleFirstArg":"Nome de classe de tupla nomeado esperado como primeiro argumento","namedTupleMultipleInheritance":"Não há suporte para herança múltipla com NamedTuple","namedTupleNameKeyword":"Os nomes dos campos não podem ser uma palavra-chave","namedTupleNameType":"Tupla de duas entradas esperada especificando o nome e o tipo de entrada","namedTupleNameUnique":"Os nomes dentro de uma tupla nomeada devem ser exclusivos","namedTupleNoTypes":"\\"namedtuple\\" não fornece tipos para entradas de tupla. Em vez disso, use \\"NamedTuple\\"","namedTupleSecondArg":"Lista de entrada de tupla nomeada esperada como segundo argumento","newClsParam":"A substituição __new__ deve usar um parâmetro \\"cls\\"","newTypeAnyOrUnknown":"O segundo argumento para NewType deve ser uma classe conhecida, não Qualquer ou Desconhecido","newTypeBadName":"O primeiro argumento para NewType deve ser um literal de cadeia de caracteres","newTypeLiteral":"NewType não pode ser usado com o tipo Literal","newTypeNameMismatch":"NewType deve ser atribuído a uma variável com o mesmo nome","newTypeNotAClass":"Classe esperada como segundo argumento para NewType","newTypeParamCount":"NewType requer dois argumentos posicionais","newTypeProtocolClass":"NewType não pode ser usado com tipo estrutural (um protocolo ou classe TypedDict)","noOverload":"Nenhuma sobrecarga para \\"{name}\\" corresponde aos argumentos fornecidos","noReturnContainsReturn":"A função com o tipo de retorno declarado \\"NoReturn\\" não pode incluir uma instrução return","noReturnContainsYield":"A função com o tipo de retorno declarado \\"NoReturn\\" não pode incluir uma instrução yield","noReturnReturnsNone":"Função com tipo de retorno declarado \\"NoReturn\\" não pode retornar \\"None\\"","nonDefaultAfterDefault":"O argumento não padrão segue o argumento padrão","nonLocalInModule":"Declaração não local não permitida no nível do módulo","nonLocalNoBinding":"Nenhuma associação para \\"{name}\\" não local encontrada","nonLocalReassignment":"\\"{name}\\" é atribuído antes da declaração não local","nonLocalRedefinition":"\\"{name}\\" já foi declarado não local","noneNotCallable":"O objeto do tipo \\"None\\" não pode ser chamado","noneNotIterable":"O objeto do tipo \\"None\\" não pode ser usado como valor iterável","noneNotSubscriptable":"O objeto do tipo \\"None\\" não é subscrito","noneNotUsableWith":"O objeto do tipo \\"None\\" não pode ser usado com \\"with\\"","noneOperator":"Operador \\"{operator}\\" incompatível com \\"None\\"","noneUnknownMember":"\\"{name}\\" não é um membro conhecido de \\"None\\"","notRequiredArgCount":"Argumento de tipo único esperado após \\"NotRequired\\"","notRequiredNotInTypedDict":"\\"NotRequired\\" não é permitido neste contexto","objectNotCallable":"O objeto do tipo \\"{type}\\" não pode ser chamado","obscuredClassDeclaration":"A declaração de classe \\"{name}\\" está obscurecida por uma declaração de mesmo nome","obscuredFunctionDeclaration":"A declaração de função \\"{name}\\" é obscurecida por uma declaração de mesmo nome","obscuredMethodDeclaration":"A declaração de método \\"{name}\\" é obscurecida por uma declaração de mesmo nome","obscuredParameterDeclaration":"A declaração de parâmetro \\"{name}\\" é obscurecida por uma declaração de mesmo nome","obscuredTypeAliasDeclaration":"A declaração de alias de tipo \\"{name}\\" é obscurecida por uma declaração de mesmo nome","obscuredVariableDeclaration":"A declaração \\"{name}\\" é obscurecida por uma declaração de mesmo nome","operatorLessOrGreaterDeprecated":"O operador \\"<>\\" não é compatível no Python 3. Use \\"!=\\" em vez disso","optionalExtraArgs":"Espera-se um argumento de tipo após \\"Opcional\\"","orPatternIrrefutable":"Padrão irrefutável permitido somente como o último subpadrão em um padrão \\"or\\"","orPatternMissingName":"Todos os subpadrões dentro de um padrão \\"ou\\" devem ter como destino os mesmos nomes","overlappingKeywordArgs":"O dicionário digitado se sobrepõe ao parâmetro de palavra-chave: {names}","overlappingOverload":"A sobrecarga {obscured} para \\"{name}\\" nunca será usada porque seus parâmetros se sobrepõem à sobrecarga {obscuredBy}","overloadAbstractMismatch":"Os métodos sobrecarregados devem ser abstratos ou não","overloadClassMethodInconsistent":"Sobrecargas para \\"{name}\\" usam @classmethod inconsistentemente","overloadFinalInconsistencyImpl":"A sobrecarga para \\"{name}\\" está marcada como @final mas a implementação não está","overloadFinalInconsistencyNoImpl":"A sobrecarga {index} para \\"{name}\\" está marcada como @final mas a sobrecarga 1 não está","overloadImplementationMismatch":"A implementação sobrecarregada não é consistente com a assinatura da sobrecarga {index}","overloadReturnTypeMismatch":"A sobrecarga {prevIndex} para \\"{name}\\" sobrepõe a sobrecarga {newIndex} e retorna um tipo incompatível","overloadStaticMethodInconsistent":"Sobrecargas para \\"{name}\\" usam @staticmethod inconsistentemente","overloadWithoutImplementation":"\\"{name}\\" está marcado como sobrecarga, mas nenhuma implementação foi fornecida","overriddenMethodNotFound":"O método \\"{name}\\" está marcado como substituição, mas nenhum método base de mesmo nome está presente","overrideDecoratorMissing":"O método \\"{name}\\" não está marcado como substituição, mas está substituindo um método na classe \\"{className}\\"","paramAfterKwargsParam":"O parâmetro não pode seguir o parâmetro \\"**\\"","paramAlreadyAssigned":"O parâmetro \\"{name}\\" já está atribuído","paramAnnotationMissing":"A anotação de tipo está ausente para o parâmetro \\"{name}\\"","paramAssignmentMismatch":"A expressão do tipo \\"{sourceType}\\" não pode ser atribuída ao parâmetro do tipo \\"{paramType}\\"","paramNameMissing":"Nenhum parâmetro chamado \\"{name}\\"","paramSpecArgsKwargsUsage":"Os membros \\"args\\" e \\"kwargs\\" de ParamSpec devem aparecer dentro de uma assinatura de função","paramSpecArgsMissing":"Argumentos para ParamSpec \\"{type}\\" estão ausentes","paramSpecArgsUsage":"O membro \\"args\\" de ParamSpec é válido somente quando usado com o parâmetro *args","paramSpecAssignedName":"ParamSpec deve ser atribuído a uma variável chamada \\"{name}\\"","paramSpecContext":"ParamSpec não é permitido neste contexto","paramSpecDefaultNotTuple":"Reticências esperadas, uma expressão de tupla ou ParamSpec para o valor padrão de ParamSpec","paramSpecFirstArg":"Nome esperado de ParamSpec como primeiro argumento","paramSpecKwargsUsage":"O membro \\"kwargs\\" de ParamSpec é válido somente quando usado com o parâmetro **kwargs","paramSpecNotUsedByOuterScope":"O ParamSpec \\"{name}\\" não tem significado neste contexto","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" tem como escopo um chamador dentro do tipo de retorno e não pode ser referenciado no corpo da função","paramSpecUnknownArg":"ParamSpec não é compatível com mais de um argumento","paramSpecUnknownMember":"\\"{name}\\" não é um membro conhecido de ParamSpec","paramSpecUnknownParam":"\\"{name}\\" é um parâmetro desconhecido para ParamSpec","paramTypeCovariant":"Variável de tipo covariante não pode ser usada no tipo de parâmetro","paramTypePartiallyUnknown":"O tipo de parâmetro \\"{paramName}\\" é parcialmente desconhecido","paramTypeUnknown":"O tipo de parâmetro \\"{paramName}\\" é desconhecido","parenthesizedContextManagerIllegal":"Parênteses dentro da instrução \\"with\\" exigem Python 3.9 ou mais recente","patternNeverMatches":"O padrão nunca será correspondido para o tipo de assunto \\"{type}\\"","positionArgAfterNamedArg":"O argumento posicional não pode aparecer após argumentos de palavra-chave","positionOnlyAfterArgs":"Separador de parâmetro somente de posição não permitido após o parâmetro \\"*\\"","positionOnlyAfterKeywordOnly":"O parâmetro \\"/\\" deve aparecer antes do parâmetro \\"*\\"","positionOnlyAfterNon":"Parâmetro somente de posição não permitido após o parâmetro que não é somente posição","positionOnlyFirstParam":"Separador de parâmetro somente de posição não permitido como primeiro parâmetro","positionOnlyIncompatible":"O separador de parâmetro somente de posição requer o Python 3.8 ou mais recente","privateImportFromPyTypedModule":"\\"{name}\\" não é exportado do módulo \\"{module}\\"","privateUsedOutsideOfClass":"\\"{name}\\" é privado e usado fora da classe na qual é declarado","privateUsedOutsideOfModule":"\\"{name}\\" é privado e usado fora do módulo no qual ele é declarado","propertyOverridden":"\\"{name}\\" substitui incorretamente a propriedade de mesmo nome na classe \\"{className}\\"","propertyStaticMethod":"Métodos estáticos não permitidos para as propriedades getter, setter ou deleter","protectedUsedOutsideOfClass":"\\"{name}\\" está protegido e usado fora da classe na qual está declarado","protocolBaseClass":"A classe de protocolo \\"{classType}\\" não pode derivar da classe \\"{baseType}\\" que não é de protocolo","protocolBaseClassWithTypeArgs":"Argumentos de tipo não são permitidos com a classe Protocol ao usar a sintaxe de parâmetro de tipo","protocolIllegal":"O uso de \\"Protocol\\" requer o Python 3.7 ou mais recente","protocolNotAllowed":"\\"Protocol\\" não pode ser usado nesse contexto","protocolUnsafeOverlap":"A classe se sobrepõe a \\"{name}\\" de forma não segura e pode produzir uma correspondência em runtime","protocolVarianceContravariant":"A variável de tipo \\"{variable}\\" usada no protocolo genérico \\"{class}\\" deve ser contravariante","protocolVarianceCovariant":"A variável de tipo \\"{variable}\\" usada no protocolo genérico \\"{class}\\" deve ser covariante","protocolVarianceInvariant":"A variável de tipo \\"{variable}\\" usada no protocolo genérico \\"{class}\\" deve ser invariável","pyrightCommentInvalidDiagnosticBoolValue":"A diretiva de comentário Pyright deve ser seguida por \\"=\\" e um valor true ou false","pyrightCommentInvalidDiagnosticSeverityValue":"A diretiva de comentário Pyright deve ser seguida por \\"=\\" e um valor de true, false, error, warning, information ou none","pyrightCommentMissingDirective":"O comentário pyright deve ser seguido por uma diretiva (básica ou estrita) ou uma regra de diagnóstico","pyrightCommentNotOnOwnLine":"Comentários pyright usados para controlar as configurações de nível de arquivo devem aparecer em sua própria linha","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" é uma regra de diagnóstico desconhecida para o comentário pyright","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" é um valor inválido para o comentário pyright. True, false, error, warning, information ou none esperados.","pyrightCommentUnknownDirective":"\\"{directive}\\" é uma diretiva desconhecida para o comentário pyright. Esperava-se \\"estrito\\" ou \\"básico\\"","readOnlyArgCount":"Argumento de tipo único esperado após \\"ReadOnly\\"","readOnlyNotInTypedDict":"\\"ReadOnly\\" não é permitido neste contexto","recursiveDefinition":"Não foi possível determinar o tipo de \\"{name}\\" porque ele refere-se a si mesmo","relativeImportNotAllowed":"Importações relativas não podem ser usadas com o formulário \\"import. a\\". Use \\"from . import a\\" em vez disso","requiredArgCount":"Argumento de tipo único esperado após \\"Obrigatório\\"","requiredNotInTypedDict":"\\"Obrigatório\\" não é permitido neste contexto","returnInAsyncGenerator":"A instrução return com valor não é permitida no gerador assíncrono","returnMissing":"Função com tipo de retorno declarado \\"{returnType}\\" deve retornar valor em todos os caminhos de código","returnOutsideFunction":"\\"return\\" só pode ser usado dentro de uma função","returnTypeContravariant":"A variável de tipo contravariante não pode ser usada no tipo de retorno","returnTypeMismatch":"A expressão do tipo \\"{exprType}\\" não pode ser atribuída ao tipo de retorno \\"{returnType}\\"","returnTypePartiallyUnknown":"O tipo de retorno, \\"{returnType}\\", é parcialmente desconhecido","returnTypeUnknown":"O tipo de retorno é desconhecido","revealLocalsArgs":"Nenhum argumento esperado para a chamada \\"reveal_locals\\"","revealLocalsNone":"Nenhum local neste escopo","revealTypeArgs":"Esperava-se um único argumento posicional para a chamada \\"reveal_type\\"","revealTypeExpectedTextArg":"O argumento \\"expected_text\\" para a função \\"reveal_type\\" deve ser um valor literal str","revealTypeExpectedTextMismatch":"Tipo de incompatibilidade de texto. O esperado era \\"{expected}\\", mas recebeu \\"{received}\\"","revealTypeExpectedTypeMismatch":"Incompatibilidade de tipo. Esperava-se \\"{expected}\\", mas recebeu \\"{received}\\"","selfTypeContext":"\\"Self\\" não é válido neste contexto.","selfTypeMetaclass":"\\"Self\\" não pode ser usado em uma metaclasse (uma subclasse de \\"type\\")","selfTypeWithTypedSelfOrCls":"\\"Self\\" não pode ser usado em uma função com um parâmetro `self` ou `cls que tenha uma anotação de tipo diferente de \\"Self\\"","setterGetterTypeMismatch":"O tipo de valor do setter da propriedade não é atribuível ao tipo de retorno getter","singleOverload":"\\"{name}\\" está marcado como sobrecarga, mas sobrecargas adicionais estão ausentes","slotsAttributeError":"\\"{name}\\" não está especificado em __slots__","slotsClassVarConflict":"\\"{name}\\" está em conflito com a variável de instância declarada __slots__","starPatternInAsPattern":"O padrão de estrela não pode ser usado com o destino \\"as\\"","starPatternInOrPattern":"O padrão de estrela não pode ser ORed em outros padrões","starStarWildcardNotAllowed":"** não pode ser usado com curinga \\"_\\"","staticClsSelfParam":"Os métodos estáticos não devem usar um parâmetro \\"self\\" ou \\"cls\\"","stdlibModuleOverridden":"\\"{path}\\" está substituindo o módulo stdlib \\"{name}\\"","stringNonAsciiBytes":"Caractere não ASCII não permitido em literal de cadeia de caracteres de bytes","stringNotSubscriptable":"A expressão de cadeia de caracteres não pode ser subscrito na anotação de tipo. Coloque a anotação inteira entre aspas","stringUnsupportedEscape":"Sequência de escape sem suporte no literal de cadeia de caracteres","stringUnterminated":"Literal de cadeia de caracteres não finalizado","stubFileMissing":"Arquivo stub não encontrado para \\"{importName}\\"","stubUsesGetAttr":"O arquivo stub de tipo está incompleto. \\"__getattr__\\" obscurece erros de tipo para o módulo","sublistParamsIncompatible":"parâmetros de sublista não são suportados no Python 3.x","superCallArgCount":"Não mais que dois argumentos eram esperados para a chamada \\"super\\"","superCallFirstArg":"Tipo de classe esperado como o primeiro argumento para a chamada \\"super\\", mas recebeu \\"{type}\\"","superCallSecondArg":"O segundo argumento para a chamada \\"super\\" deve ser objeto ou classe que deriva de \\"{type}\\"","superCallZeroArgForm":"A forma de chamada \\"super\\" com argumento zero é válida apenas dentro de um método","superCallZeroArgFormStaticMethod":"A forma de chamada \\"super\\" com argumento zero é válida apenas dentro de um método","symbolIsPossiblyUnbound":"\\"{name}\\" possivelmente não está associado","symbolIsUnbound":"\\"{name}\\" não está associado","symbolIsUndefined":"\\"{name}\\" não está definido","symbolOverridden":"\\"{name}\\" substitui o símbolo de mesmo nome na classe \\"{className}\\"","ternaryNotAllowed":"Expressão de ternário não permitida na anotação de tipo","totalOrderingMissingMethod":"A classe deve definir um dos \\"__lt__\\", \\"__le__\\", \\"__gt__\\" ou \\"__ge__\\" para usar total_ordering","trailingCommaInFromImport":"A vírgula à direita não é permitida sem parênteses ao redor","tryWithoutExcept":"A instrução Try deve ter pelo menos uma cláusula except ou finally","tupleAssignmentMismatch":"A expressão com o tipo \\"{type}\\" não pode ser atribuída à tupla de destino","tupleInAnnotation":"Expressão de tupla não permitida na anotação de tipo","tupleIndexOutOfRange":"O índice {index} está fora do intervalo para o tipo {type}","typeAliasIllegalExpressionForm":"Formulário de expressão inválido para definição de alias de tipo","typeAliasIsRecursiveDirect":"O alias de tipo \\"{name}\\" não pode usar a si mesmo em sua definição","typeAliasNotInModuleOrClass":"Um TypeAlias só pode ser definido dentro de um módulo ou escopo de classe","typeAliasRedeclared":"\\"{name}\\" é declarado como um TypeAlias e só pode ser atribuído uma vez","typeAliasStatementBadScope":"Uma instrução type só pode ser usada dentro de um módulo ou escopo de classe","typeAliasStatementIllegal":"A instrução de alias de tipo requer o Python 3.12 ou mais recente","typeAliasTypeBaseClass":"Um alias de tipo definido em uma instrução \\"type\\" não pode ser usado como uma classe base","typeAliasTypeMustBeAssigned":"TypeAliasType deve ser atribuído a uma variável com o mesmo nome que o alias de tipo","typeAliasTypeNameArg":"O primeiro argumento para TypeAliasType deve ser um literal de cadeia de caracteres que representa o nome do alias de tipo","typeAliasTypeNameMismatch":"O nome do alias de tipo deve corresponder ao nome da variável à qual ela está atribuída","typeAliasTypeParamInvalid":"A lista de parâmetros de tipo deve ser uma tupla contendo apenas TypeVar, TypeVarTuple ou ParamSpec","typeAnnotationCall":"Expressão de chamada não permitida na expressão de tipo","typeAnnotationVariable":"Variável não permitida na expressão de tipo","typeAnnotationWithCallable":"O argumento de tipo para \\"type\\" deve ser uma classe; não há suporte para callables","typeArgListExpected":"ParamSpec, reticências ou lista de tipos esperados","typeArgListNotAllowed":"Expressão de lista não permitida para este argumento de tipo","typeArgsExpectingNone":"Nenhum argumento de tipo era esperado para a classe \\"{name}\\"","typeArgsMismatchOne":"Esperava-se um argumento de tipo, mas recebeu {received}","typeArgsMissingForAlias":"Argumentos de tipo esperados para o alias de tipo genérico \\"{name}\\"","typeArgsMissingForClass":"Argumentos de tipo esperados para a classe genérica \\"{name}\\"","typeArgsTooFew":"Poucos argumentos de tipo fornecidos para \\"{name}\\". Esperava-se {expected}, mas recebeu {received}","typeArgsTooMany":"Muitos argumentos de tipo fornecidos para \\"{name}\\". Esperava-se {expected}, mas recebeu {received}","typeAssignmentMismatch":"A expressão do tipo \\"{sourceType}\\" não pode ser atribuída ao tipo declarado \\"{destType}\\"","typeAssignmentMismatchWildcard":"O símbolo de importação \\"{name}\\" tem o tipo \\"{sourceType}\\", que não pode ser atribuído ao tipo declarado \\"{destType}\\"","typeCallNotAllowed":"A chamada type() não deve ser usada na anotação de tipo","typeCheckOnly":"\\"{name}\\" está marcado como @type_check_only e pode ser usado apenas em anotações de tipo","typeCommentDeprecated":"O uso de comentários de tipo foi preterido. Use anotação de tipo em vez disso","typeExpectedClass":"Expressão de tipo esperada, mas recebeu \\"{type}\\"","typeGuardArgCount":"Argumento de tipo único esperado após \\"TypeGuard\\" ou \\"TypeIs\\"","typeGuardParamCount":"Funções e métodos de proteção de tipo definidos pelo usuário devem ter pelo menos um parâmetro de entrada","typeIsReturnType":"O tipo de retorno de TypeIs (\\"{returnType}\\") não é consistente com o tipo de parâmetro de valor (\\"{type}\\")","typeNotAwaitable":"\\"{type}\\" não é previsível","typeNotIntantiable":"\\"{type}\\" não pode ser instanciado","typeNotIterable":"\\"{type}\\" não é iterável","typeNotSpecializable":"Não foi possível especializar o tipo \\"{type}\\"","typeNotSubscriptable":"O objeto do tipo \\"{type}\\" não é subscrito","typeNotSupportBinaryOperator":"Operador \\"{operator}\\" sem suporte para os tipos \\"{leftType}\\" e \\"{rightType}\\"","typeNotSupportBinaryOperatorBidirectional":"O operador \\"{operator}\\" não tem suporte para os tipos \\"{leftType}\\" e \\"{rightType}\\" quando o tipo esperado é \\"{expectedType}\\"","typeNotSupportUnaryOperator":"Operador \\"{operator}\\" sem suporte para o tipo \\"{type}\\"","typeNotSupportUnaryOperatorBidirectional":"O operador \\"{operator}\\" não tem suporte para o tipo \\"{type}\\" quando o tipo esperado é \\"{expectedType}\\"","typeNotUsableWith":"O objeto do tipo \\"{type}\\" não pode ser usado com \\"with\\" porque não implementa {method}","typeParameterBoundNotAllowed":"Associação ou restrição não pode ser usada com um parâmetro de tipo variadic ou ParamSpec","typeParameterConstraintTuple":"A restrição de parâmetro de tipo deve ser uma tupla de dois ou mais tipos","typeParameterExistingTypeParameter":"O parâmetro de tipo \\"{name}\\" já está em uso","typeParameterNotDeclared":"O parâmetro de tipo \\"{name}\\" não está incluído na lista de parâmetros de tipo para \\"{container}\\"","typeParametersMissing":"Pelo menos um parâmetro de tipo deve ser especificado","typePartiallyUnknown":"O tipo de \\"{name}\\" é parcialmente desconhecido","typeUnknown":"O tipo de \\"{name}\\" é desconhecido","typeVarAssignedName":"TypeVar deve ser atribuído a uma variável chamada \\"{name}\\"","typeVarAssignmentMismatch":"O tipo \\"{type}\\" não pode ser atribuído à variável de tipo \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar não pode ser associado e restrito","typeVarBoundGeneric":"O tipo associado TypeVar não pode ser genérico","typeVarConstraintGeneric":"O tipo de restrição TypeVar não pode ser genérico","typeVarDefaultBoundMismatch":"O tipo padrão TypeVar deve ser um subtipo do tipo associado","typeVarDefaultConstraintMismatch":"O tipo padrão TypeVar deve ser um dos tipos restritos","typeVarDefaultIllegal":"Tipos padrão de variável de tipo exigem Python 3.13 ou mais recente","typeVarDefaultInvalidTypeVar":"O parâmetro de tipo \\"{name}\\" tem um tipo padrão que se refere a uma ou mais variáveis de tipo que estão fora do escopo","typeVarFirstArg":"Nome esperado de TypeVar como primeiro argumento","typeVarNoMember":"TypeVar \\"{type}\\" não tem membro \\"{name}\\"","typeVarNotSubscriptable":"Não é possível subscrever TypeVar \\"{type}\\"","typeVarNotUsedByOuterScope":"A variável de tipo \\"{name}\\" não tem significado neste contexto","typeVarPossiblyUnsolvable":"A variável de tipo \\"{name}\\" pode ficar sem resolução se o chamador não fornecer nenhum argumento para o parâmetro \\"{param}\\"","typeVarScopedToReturnType":"A variável de tipo \\"{name}\\" tem como escopo um chamador dentro do tipo de retorno e não pode ser referenciada no corpo da função","typeVarSingleConstraint":"TypeVar deve ter pelo menos dois tipos restritos","typeVarTupleConstraints":"TypeVarTuple não pode ter restrições de valor","typeVarTupleContext":"TypeVarTuple não é permitido neste contexto","typeVarTupleDefaultNotUnpacked":"O tipo padrão TypeVarTuple deve ser uma tupla desempacotamento ou TypeVarTuple","typeVarTupleMustBeUnpacked":"O operador Unpack é necessário para o valor TypeVarTuple","typeVarTupleUnknownParam":"\\"{name}\\" é um parâmetro desconhecido para TypeVarTuple","typeVarUnknownParam":"\\"{name}\\" é um parâmetro desconhecido para TypeVar","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" já está em uso por um escopo externo","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" aparece apenas uma vez na assinatura de função genérica","typeVarVariance":"TypeVar não pode ser covariante e contravariante","typeVarWithDefaultFollowsVariadic":"O TypeVar \\"{typeVarName}\\" tem um valor padrão e não pode seguir TypeVarTuple \\"{variadicName}\\"","typeVarWithoutDefault":"\\"{name}\\" não pode aparecer após \\"{other}\\" na lista de parâmetros de tipo porque não tem nenhum tipo padrão","typeVarsNotInGenericOrProtocol":"Generic[] ou Protocol[] deve incluir todas as variáveis de tipo","typedDictAccess":"Não foi possível acessar o item em TypedDict","typedDictAssignedName":"TypedDict deve ser atribuído a uma variável chamada \\"{name}\\"","typedDictBadVar":"As classes TypedDict podem conter apenas anotações de tipo","typedDictBaseClass":"Todas as classes base para classes TypedDict também devem ser classes TypedDict","typedDictBoolParam":"Esperava-se que o parâmetro \\"{name}\\" tivesse um valor True ou False","typedDictClosedExtras":"A classe base \\"{name}\\" é um TypedDict fechado; itens extras devem ser do tipo \\"{type}\\"","typedDictClosedNoExtras":"A classe base \\"{name}\\" é um TypedDict fechado; itens extras não são permitidos","typedDictDelete":"Não foi possível excluir o item em TypedDict","typedDictEmptyName":"Os nomes dentro de um TypedDict não podem estar vazios","typedDictEntryName":"Literal de cadeia de caracteres esperado para o nome da entrada do dicionário","typedDictEntryUnique":"Os nomes dentro de um dicionário devem ser exclusivos","typedDictExtraArgs":"Argumentos TypedDict extras são incompatíveis","typedDictFieldNotRequiredRedefinition":"O item TypedDict \\"{name}\\" não pode ser redefinido como NotRequired","typedDictFieldReadOnlyRedefinition":"O item TypedDict \\"{name}\\" não pode ser redefinido como ReadOnly","typedDictFieldRequiredRedefinition":"O item TypedDict \\"{name}\\" não pode ser redefinido como Obrigatório","typedDictFirstArg":"Nome da classe TypedDict esperado como primeiro argumento","typedDictInitsubclassParameter":"TypedDict não dá suporte ao parâmetro __init_subclass__ \\"{name}\\"","typedDictNotAllowed":"\\"TypedDict\\" não pode ser usado neste contexto","typedDictSecondArgDict":"Parâmetro dict ou de palavra-chave esperado como segundo parâmetro","typedDictSecondArgDictEntry":"Entrada de dicionário simples esperada","typedDictSet":"Não foi possível atribuir o item em TypedDict","unaccessedClass":"A classe \\"{name}\\" não foi acessada","unaccessedFunction":"A função \\"{name}\\" não foi acessada","unaccessedImport":"A importação \\"{name}\\" não foi acessada","unaccessedSymbol":"\\"{name}\\" não foi acessado","unaccessedVariable":"A variável \\"{name}\\" não foi acessada","unannotatedFunctionSkipped":"A análise da função \\"{name}\\" foi ignorada porque não foi anotada","unaryOperationNotAllowed":"Operador unário não permitido na anotação de tipo","unexpectedAsyncToken":"Esperado \\"def\\", \\"with\\" ou \\"for\\" para acompanhar \\"async\\"","unexpectedExprToken":"Token inesperado no final da expressão","unexpectedIndent":"Recuo inesperado","unexpectedUnindent":"Recuo não esperado","unhashableDictKey":"A chave do dicionário deve ser hash","unhashableSetEntry":"A entrada set deve ser permitir hash","uninitializedAbstractVariables":"As variáveis definidas na classe base abstrata não são inicializadas na classe final \\"{classType}\\"","uninitializedInstanceVariable":"A variável de instância \\"{name}\\" não foi inicializada no corpo da classe ou no método __init__","unionForwardReferenceNotAllowed":"A sintaxe de união não pode ser usada com operando de cadeia de caracteres. Use aspas em toda a expressão","unionSyntaxIllegal":"A sintaxe alternativa para uniões requer o Python 3.10 ou mais recente","unionTypeArgCount":"A união requer dois ou mais argumentos de tipo","unionUnpackedTuple":"A união não pode incluir uma tupla desempacotada","unionUnpackedTypeVarTuple":"A união não pode incluir um TypeVarTuple desempacotado","unnecessaryCast":"Chamada \\"cast\\" desnecessária. O tipo já é \\"{type}\\"","unnecessaryIsInstanceAlways":"Chamada de iinstância desnecessária. \\"{testType}\\" é sempre uma instância de \\"{classType}\\"","unnecessaryIsSubclassAlways":"Chamada issubclass desnecessária. \\"{testType}\\" é sempre uma subclasse de \\"{classType}\\"","unnecessaryPyrightIgnore":"Comentário desnecessário \\"# pyright: ignore\\"","unnecessaryPyrightIgnoreRule":"Regra desnecessária \\"# pyright: ignore\\": \\"{name}\\"","unnecessaryTypeIgnore":"Comentário \\"# type: ignore\\" desnecessário","unpackArgCount":"Argumento de tipo único esperado após \\"Unpack\\"","unpackExpectedTypeVarTuple":"TypeVarTuple ou tupla esperado como argumento de tipo para Unpack","unpackExpectedTypedDict":"Argumento de tipo TypedDict esperado para Desempacotar","unpackIllegalInComprehension":"Operação de desempacotamento não permitida na compreensão","unpackInAnnotation":"Operador Desempacotar não permitido na anotação de tipo","unpackInDict":"Operação de desempacotamento não permitida em dicionários","unpackInSet":"Operador unpack não permitido em um conjunto","unpackNotAllowed":"Descompactar não é permitido neste contexto","unpackOperatorNotAllowed":"A operação de descompactação não é permitida neste contexto","unpackTuplesIllegal":"Operação de desempacotamento não permitida em tuplas anteriores ao Python 3.8","unpackedArgInTypeArgument":"Argumentos desempacotamento não podem ser usados em listas de argumentos de tipo","unpackedArgWithVariadicParam":"O argumento desempacotado não pode ser usado para o parâmetro TypeVarTuple","unpackedDictArgumentNotMapping":"A expressão de argumento após ** deve ser um mapeamento com um tipo de chave \\"str\\"","unpackedDictSubscriptIllegal":"O operador de desempacotamento de dicionário no subscrito não é permitido","unpackedSubscriptIllegal":"O operador Unpack no subscrito requer o Python 3.11 ou mais recente","unpackedTypeVarTupleExpected":"Esperava-se TypeVarTuple desempacotada. Use Unpack[{name1}] ou *{name2}","unpackedTypedDictArgument":"Não é possível corresponder o argumento TypedDict desempacotado aos parâmetros","unreachableCode":"O código está inacessível.","unreachableExcept":"A cláusula Except está inacessível porque a exceção já foi tratada","unsupportedDunderAllOperation":"A operação em \\"__all__\\" não é compatível, portanto, a lista de símbolos exportada pode estar incorreta","unusedCallResult":"O resultado da expressão de chamada é do tipo \\"{type}\\" e não é usado. Atribua à variável \\"_\\" se isso for intencional","unusedCoroutine":"O resultado da chamada de função assíncrona não foi usado. Use \\"await\\" ou atribua o resultado à variável","unusedExpression":"O valor da expressão não é usado","varAnnotationIllegal":"As anotações de tipo para variáveis exigem Python 3.6 ou mais recente. Use comentário de tipo para compatibilidade com versões anteriores","variableFinalOverride":"A variável \\"{name}\\" está marcada como Final e substitui a variável não final de mesmo nome na classe \\"{className}\\"","variadicTypeArgsTooMany":"A lista de argumentos de tipo pode ter no máximo um TypeVarTuple ou tupla descompactado","variadicTypeParamTooManyAlias":"O alias de tipo pode ter no máximo um parâmetro de tipo TypeVarTuple, mas recebeu vários ({names})","variadicTypeParamTooManyClass":"A classe genérica pode ter no máximo um parâmetro de tipo TypeVarTuple, mas recebeu vários ({names})","walrusIllegal":"O operador \\":=\\" requer o Python 3.8 ou mais recente","walrusNotAllowed":"Operador \\":=\\" não é permitido neste contexto sem parênteses","wildcardInFunction":"Importação de curinga não permitida em uma classe ou função","wildcardLibraryImport":"Importação de curinga de uma biblioteca não permitida","wildcardPatternTypePartiallyUnknown":"O tipo capturado pelo padrão curinga é parcialmente desconhecido","wildcardPatternTypeUnknown":"O tipo capturado pelo padrão curinga é desconhecido","yieldFromIllegal":"O uso de \\"yield from\\" requer o Python 3.3 ou mais recente","yieldFromOutsideAsync":"\\"yield from\\" não é permitido em uma função assíncrona","yieldOutsideFunction":"\\"yield\\" não permitido fora de uma função ou lambda","yieldWithinListCompr":"\\"yield\\" não é permitido dentro de uma compreensão de lista","zeroCaseStatementsFound":"A instrução Match deve incluir pelo menos uma instrução case","zeroLengthTupleNotAllowed":"Tupla de comprimento zero não é permitida neste contexto"},"DiagnosticAddendum":{"annotatedNotAllowed":"O formulário especial \\"Anotado\\" não pode ser usado com verificações de instância e classe","argParam":"O argumento corresponde ao parâmetro \\"{paramName}\\"","argParamFunction":"O argumento corresponde ao parâmetro \\"{paramName}\\" na função \\"{functionName}\\"","argsParamMissing":"O parâmetro \\"*{paramName}\\" não tem nenhum parâmetro correspondente","argsPositionOnly":"Incompatibilidade de parâmetro somente de posição; esperava-se {expected}, mas recebeu {received}","argumentType":"O tipo de argumento é \\"{type}\\"","argumentTypes":"Tipos de argumento: ({types})","assignToNone":"O tipo não pode ser atribuído ao tipo \\"None\\"","asyncHelp":"Você quis dizer \\"async with\\"?","baseClassIncompatible":"A classe base \\"{baseClass}\\" é incompatível com o tipo \\"{type}\\"","baseClassIncompatibleSubclass":"A classe base \\"{baseClass}\\" deriva de \\"{subclass}\\" que é incompatível com o tipo \\"{type}\\"","baseClassOverriddenType":"A classe base \\"{baseClass}\\" fornece o tipo \\"{type}\\", que é substituído","baseClassOverridesType":"A classe base \\"{baseClass}\\" substitui pelo tipo \\"{type}\\"","bytesTypePromotions":"Defina disableBytesTypePromotions como false para habilitar o comportamento de promoção de tipo para \\"bytearray\\" e \\"memoryview\\"","conditionalRequiresBool":"O método __bool__ para o tipo \\"{operandType}\\" retorna o tipo \\"{boolReturnType}\\" em vez de \\"bool\\"","dataClassFieldLocation":"Declaração de campo","dataClassFrozen":"\\"{name}\\" está congelado","dataProtocolUnsupported":"\\"{name}\\" é um protocolo de dados","descriptorAccessBindingFailed":"Falha ao associar o método \\"{name}\\" para a classe de descritor \\"{className}\\"","descriptorAccessCallFailed":"Falha ao chamar o método \\"{name}\\" para a classe de descritor \\"{className}\\"","finalMethod":"Método final","functionParamDefaultMissing":"O parâmetro \\"{name}\\" não tem um argumento padrão","functionParamName":"Incompatibilidade de nome de parâmetro: \\"{destName}\\" versus \\"{srcName}\\"","functionParamPositionOnly":"Incompatibilidade de parâmetro somente posição; o parâmetro \\"{name}\\" não é somente posição","functionReturnTypeMismatch":"O tipo de retorno de função \\"{sourceType}\\" é incompatível com o tipo \\"{destType}\\"","functionTooFewParams":"A função aceita poucos parâmetros posicionais. Esperava-se {expected}, mas recebeu {received}","functionTooManyParams":"A função aceita muitos parâmetros posicionais. Esperava-se {expected}, mas recebeu {received}","genericClassNotAllowed":"Tipo genérico com argumentos de tipo não permitidos para verificações de instância ou de classe","incompatibleDeleter":"O método de exclusão de propriedade é incompatível","incompatibleGetter":"O método getter de propriedade é incompatível","incompatibleSetter":"O método setter de propriedade é incompatível","initMethodLocation":"O método __init__ é definido na classe \\"{type}\\"","initMethodSignature":"A assinatura de __init__ é \\"{type}\\"","initSubclassLocation":"O método __init_subclass__ é definido na classe \\"{name}\\"","invariantSuggestionDict":"Considere alternar de \\"dict\\" para \\"Mapping\\", que é covariante no tipo de valor","invariantSuggestionList":"Considere alternar de \\"list\\" para \\"Sequence\\", que é covariante","invariantSuggestionSet":"Considere alternar de \\"set\\" para \\"Container\\", que é covariante","keyNotRequired":"\\"{name}\\" não é uma chave necessária em \\"{type}\\", portanto, o acesso pode resultar em exceção de runtime","keyReadOnly":"\\"{name}\\" é uma chave somente leitura em \\"{type}\\"","keyRequiredDeleted":"\\"{name}\\" é uma chave obrigatória e não pode ser excluída","keyUndefined":"\\"{name}\\" não é uma chave definida em \\"{type}\\"","kwargsParamMissing":"O parâmetro \\"**{paramName}\\" não tem nenhum parâmetro correspondente","listAssignmentMismatch":"O tipo \\"{type}\\" é incompatível com a lista de destino","literalAssignmentMismatch":"\\"{sourceType}\\" não pode ser atribuído ao tipo \\"{destType}\\"","matchIsNotExhaustiveHint":"Se não pretende usar a manipulação exaustiva, adicione \\"case _: pass\\"","matchIsNotExhaustiveType":"Tipo sem tratamento: \\"{type}\\"","memberAssignment":"A expressão do tipo \\"{type}\\" não pode ser atribuída ao membro \\"{name}\\" da classe \\"{classType}\\"","memberIsAbstract":"\\"{type}.{name}\\" não está implementado","memberIsAbstractMore":"e mais {count}...","memberIsClassVarInProtocol":"\\"{name}\\" é definido como um ClassVar no protocolo","memberIsFinalInProtocol":"\\"{name}\\" está marcado como Final no protocolo","memberIsInitVar":"O membro \\"{name}\\" é um campo somente inicialização","memberIsInvariant":"\\"{name}\\" é invariável porque é mutável","memberIsNotClassVarInClass":"\\"{name}\\" deve ser definido como um ClassVar para ser compatível com o protocolo","memberIsNotClassVarInProtocol":"\\"{name}\\" não está definido como um ClassVar no protocolo","memberIsNotFinalInProtocol":"\\"{name}\\" não está marcado como Final no protocolo","memberIsWritableInProtocol":"\\"{name}\\" é gravável no protocolo","memberSetClassVar":"O membro \\"{name}\\" não pode ser atribuído por meio de uma instância de classe porque é um ClassVar","memberTypeMismatch":"\\"{name}\\" é um tipo incompatível","memberUnknown":"O membro \\"{name}\\" é desconhecido","metaclassConflict":"A metaclasse \\"{metaclass1}\\" entra em conflito com \\"{metaclass2}\\"","missingDeleter":"O método de exclusão de propriedade está ausente","missingGetter":"O método getter da propriedade está ausente","missingSetter":"O método setter da propriedade está ausente","namedParamMissingInDest":"O parâmetro de palavra-chave \\"{name}\\" está ausente no destino","namedParamMissingInSource":"O parâmetro de palavra-chave \\"{name}\\" está ausente na origem","namedParamTypeMismatch":"O parâmetro de palavra-chave \\"{name}\\" do tipo \\"{sourceType}\\" não pode ser atribuído ao tipo \\"{destType}\\"","namedTupleNotAllowed":"NamedTuple não pode ser usado para verificações de instância ou de classe","newMethodLocation":"O método __new__ é definido na classe \\"{type}\\"","newMethodSignature":"A assinatura de__new__ é \\"{type}\\"","newTypeClassNotAllowed":"A classe criada com NewType não pode ser usada com verificações de instância e classe","noOverloadAssignable":"Nenhuma função sobrecarregada corresponde ao tipo \\"{type}\\"","noneNotAllowed":"Nenhum não pode ser usado para verificações de instância ou de classe","orPatternMissingName":"Nomes ausentes: {name}","overloadIndex":"Sobrecarga {index} é a correspondência mais próxima","overloadNotAssignable":"Uma ou mais sobrecargas de \\"{name}\\" não podem ser atribuídas","overloadSignature":"A assinatura de sobrecarga é definida aqui","overriddenMethod":"Método substituído","overriddenSymbol":"Símbolo substituído","overrideInvariantMismatch":"O tipo da substituição \\"{overrideType}\\" não é o mesmo do tipo básico \\"{baseType}\\"","overrideIsInvariant":"A variável é mutável, então seu tipo é invariável","overrideNoOverloadMatches":"Nenhuma assinatura de sobrecarga na substituição é compatível com o método base","overrideNotClassMethod":"O método base é declarado como um classmethod, mas a substituição não é","overrideNotInstanceMethod":"O método base é declarado como um método de instância, mas a substituição não é","overrideNotStaticMethod":"O método base é declarado como staticmethod, mas a substituição não é","overrideOverloadNoMatch":"Override não lida com todas as sobrecargas do método base","overrideOverloadOrder":"As sobrecargas para o método de substituição devem estar na mesma ordem que o método base","overrideParamKeywordNoDefault":"Incompatibilidade de parâmetro de palavra-chave \\"{name}\\": o parâmetro base tem valor de argumento padrão, o parâmetro de substituição não","overrideParamKeywordType":"Incompatibilidade de tipo de parâmetro de palavra-chave \\"{name}\\": o parâmetro base é do tipo \\"{baseType}\\", o parâmetro de substituição é do tipo \\"{overrideType}\\"","overrideParamName":"Incompatibilidade de nome de parâmetro {index}: o parâmetro base é denominado \\"{baseName}\\", o parâmetro de substituição é denomidado \\"{overrideName}\\"","overrideParamNameExtra":"O parâmetro \\"{name}\\" está ausente na base","overrideParamNameMissing":"O parâmetro \\"{name}\\" está ausente na substituição","overrideParamNamePositionOnly":"Incompatibilidade de parâmetro {index}: o parâmetro base \\"{baseName}\\" é o parâmetro de palavra-chave, o parâmetro de substituição é somente posição","overrideParamNoDefault":"Parâmetro {index} incompatível: o parâmetro base tem valor de argumento padrão, o parâmetro de substituição não","overrideParamType":"Incompatibilidade de tipo de parâmetro {index}: o parâmetro base é do tipo \\"{baseType}\\", o parâmetro de substituição é do tipo \\"{overrideType}\\"","overridePositionalParamCount":"Incompatibilidade de contagem de parâmetros posicionais. O método base tem {baseCount}, mas a substituição tem {overrideCount}","overrideReturnType":"Incompatibilidade de tipo de retorno: o método base retorna o tipo \\"{baseType}\\", a substituição retorna o tipo \\"{overrideType}\\"","overrideType":"A classe base define o tipo como \\"{type}\\"","paramAssignment":"Parâmetro {index}: o tipo \\"{sourceType}\\" não pode ser atribuído ao tipo \\"{destType}\\"","paramSpecMissingInOverride":"Os parâmetros ParamSpec estão ausentes no método de substituição","paramType":"O tipo de parâmetro é \\"{paramType}\\"","privateImportFromPyTypedSource":"Em vez disso, importe de \\"{module}\\"","propertyAccessFromProtocolClass":"Uma propriedade definida dentro de uma classe de protocolo não pode ser acessada como uma variável de classe","propertyMethodIncompatible":"O método de propriedade \\"{name}\\" é incompatível","propertyMethodMissing":"O método de propriedade \\"{name}\\" está ausente na substituição","propertyMissingDeleter":"A propriedade \\"{name}\\" não tem nenhum excluidor definido","propertyMissingSetter":"A propriedade \\"{name}\\" não tem um setter definido","protocolIncompatible":"\\"{sourceType}\\" é incompatível com o protocolo \\"{destType}\\"","protocolMemberMissing":"\\"{name}\\" não está presente","protocolRequiresRuntimeCheckable":"A classe do protocolo deve ser @runtime_checkable para ser usada com verificações de instância e de classe","protocolSourceIsNotConcrete":"\\"{sourceType}\\" não é um tipo de classe concreta e não pode ser atribuído ao tipo \\"{destType}\\"","protocolUnsafeOverlap":"Os atributos de \\"{name}\\" têm os mesmos nomes que o protocolo","pyrightCommentIgnoreTip":"Use \\"# pyright: ignore[<diagnostic rules>] para suprimir o diagnóstico de uma única linha","readOnlyAttribute":"O atributo \\"{name}\\" é somente leitura","seeClassDeclaration":"Consulte a declaração de classe","seeDeclaration":"Consulte a declaração","seeFunctionDeclaration":"Ver declaração de função","seeMethodDeclaration":"Consulte a declaração de método","seeParameterDeclaration":"Consulte a declaração de parâmetro","seeTypeAliasDeclaration":"Ver declaração de alias de tipo","seeVariableDeclaration":"Consulte a declaração de variável","tupleAssignmentMismatch":"O tipo \\"{type}\\" é incompatível com a tupla de destino","tupleEntryTypeMismatch":"A entrada de tupla {entry} é do tipo incorreto","tupleSizeIndeterminateSrc":"Incompatibilidade de tamanho de tupla; esperado {expected} mas recebido indeterminado","tupleSizeIndeterminateSrcDest":"Incompatibilidade de tamanho de tupla; {expected} ou mais esperado, mas indeterminado recebido","tupleSizeMismatch":"Incompatibilidade de tamanho de tupla; esperado {expected} mas recebido {received}","tupleSizeMismatchIndeterminateDest":"Incompatibilidade de tamanho de tupla; {expected} ou mais esperado, mas {received} recebido","typeAliasInstanceCheck":"O alias de tipo criado com a instrução \\"type\\" não pode ser usado com verificações de instância e de classe","typeAssignmentMismatch":"O tipo \\"{sourceType}\\" não pode ser atribuído ao tipo \\"{destType}\\"","typeBound":"O tipo \\"{sourceType}\\" é incompatível com o tipo associado \\"{destType}\\" para a variável de tipo \\"{name}\\"","typeConstrainedTypeVar":"O tipo \\"{type}\\" é incompatível com a variável de tipo restrita \\"{name}\\"","typeIncompatible":"\\"{sourceType}\\" é incompatível com \\"{destType}\\"","typeNotClass":"\\"{type}\\" não é uma classe.","typeNotStringLiteral":"\\"{type}\\" não é um literal de cadeia de caracteres","typeOfSymbol":"O tipo de \\"{name}\\" é \\"{type}\\"","typeParamSpec":"O tipo \\"{type}\\" é incompatível com ParamSpec \\"{name}\\"","typeUnsupported":"O tipo \\"{type}\\" é incompatível","typeVarDefaultOutOfScope":"A variável de tipo \\"{name}\\" não está no escopo","typeVarIsContravariant":"O parâmetro de tipo \\"{name}\\" é contravariante, mas \\"{sourceType}\\" não é um supertipo de \\"{destType}\\"","typeVarIsCovariant":"O parâmetro de tipo \\"{name}\\" é covariante, mas \\"{sourceType}\\" não é um subtipo de \\"{destType}\\"","typeVarIsInvariant":"O parâmetro de tipo \\"{name}\\" é invariável, mas \\"{sourceType}\\" não é o mesmo que \\"{destType}\\"","typeVarNotAllowed":"TypeVar não permitido para verificações de instância ou de classe","typeVarTupleRequiresKnownLength":"TypeVarTuple não pode ser associado a uma tupla de comprimento desconhecido","typeVarUnnecessarySuggestion":"Use {type} em vez disso","typeVarUnsolvableRemedy":"Forneça uma sobrecarga que especifica o tipo de retorno quando o argumento não é fornecido","typeVarsMissing":"Variáveis de tipo ausentes: {names}","typedDictBaseClass":"A classe \\"{type}\\" não é um TypedDict","typedDictClassNotAllowed":"A classe TypedDict não é permitida para verificações de instância ou classe","typedDictClosedExtraNotAllowed":"Não é possível adicionar o item \\"{name}\\"","typedDictClosedExtraTypeMismatch":"Não é possível adicionar o item \\"{name}\\" com o tipo \\"{type}\\"","typedDictClosedFieldNotRequired":"Não é possível adicionar o item \\"{name}\\" porque ele deve ser NotRequired","typedDictExtraFieldNotAllowed":"\\"{name}\\" não está presente em \\"{type}\\"","typedDictExtraFieldTypeMismatch":"O tipo de \\"{name}\\" é incompatível com o tipo de \\"__extra_items__\\" em \\"{type}\\"","typedDictFieldMissing":"\\"{name}\\" está ausente de \\"{type}\\"","typedDictFieldNotReadOnly":"\\"{name}\\" não é somente leitura em \\"{type}\\"","typedDictFieldNotRequired":"\\"{name}\\" não é obrigatório em \\"{type}\\"","typedDictFieldRequired":"\\"{name}\\" é necessário em \\"{type}\\"","typedDictFieldTypeMismatch":"O tipo \\"{type}\\" não é atribuível ao item \\"{name}\\"","typedDictFieldUndefined":"\\"{name}\\" é um item indefinido no tipo \\"{type}\\"","typedDictFinalMismatch":"\\"{sourceType}\\" é incompatível com \\"{destType}\\" devido a uma @final incompatível","typedDictKeyAccess":"Usar [\\"{name}\\"] para fazer referência ao item em TypedDict","typedDictNotAllowed":"TypedDict não pode ser usado para verificações de instância ou de classe","unhashableType":"O tipo \\"{type}\\" não é pode fazer hash","uninitializedAbstractVariable":"A variável de instância \\"{name}\\" está definida na classe base abstrata \\"{classType}\\", mas não foi inicializada","unreachableExcept":"\\"{exceptionType}\\" é uma subclasse de \\"{parentType}\\"","useDictInstead":"Use Dict[T1, T2] para indicar um tipo de dicionário","useListInstead":"Use List[T] para indicar um tipo de lista ou Union[T1, T2] para indicar um tipo de união","useTupleInstead":"Use tuple[T1, ..., Tn] para indicar um tipo de tupla ou Union[T1, T2] para indicar um tipo de união","useTypeInstead":"Use Type[T] em vez disso","varianceMismatchForClass":"A variação do argumento de tipo \\"{typeVarName}\\" é incompatível com a classe base \\"{className}\\"","varianceMismatchForTypeAlias":"A variação do argumento de tipo \\"{typeVarName}\\" é incompatível com \\"{typeAliasParam}\\""}}')},72266:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"[4i3uH][นั้Çrëætë Tÿpë §tµþẤğ倪İЂҰนั้ढूँ]","createTypeStubFor":"[oXYb0][นั้Çrëætë Tÿpë §tµþ Før \\"{møðµlëÑæmë}\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","executingCommand":"[AxS1Z][นั้Ëxëçµtïñg çømmæñðẤğ倪İЂҰक्นั้ढूँ]","filesToAnalyzeCount":"[94Ml3][นั้{çøµñt} fïlës tø æñælÿzëẤğ倪İЂҰक्र्นั้ढूँ]","filesToAnalyzeOne":"[2zuMu][นั้1 fïlë tø æñælÿzëẤğ倪İЂҰक्นั้ढूँ]","findingReferences":"[0UmwS][นั้Fïñðïñg rëfërëñçësẤğ倪İЂҰक्นั้ढूँ]","organizeImports":"[KhOyl][นั้Ørgæñïzë ÏmpørtsẤğ倪İЂҰนั้ढूँ]","renameShadowedFile":"[E02Ab][นั้Rëñæmë \\"{ølðFïlë}\\" tø \\"{ñëwFïlë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]"},"Completion":{"autoImportDetail":"[WdNQG][นั้Æµtø-ïmpørtẤğ倪İนั้ढूँ]","indexValueDetail":"[mX94Q][นั้Ïñðëx vælµëẤğ倪İนั้ढूँ]"},"Diagnostic":{"abstractMethodInvocation":"[fE8MD][นั้Mëthøð \\"{mëthøð}\\" çæññøt þë çællëð þëçæµsë ït ïs æþstræçt æñð µñïmplëmëñtëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","annotatedParamCountMismatch":"[VZvZc][นั้Pæræmëtër æññøtætïøñ çøµñt mïsmætçh: ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","annotatedTypeArgMissing":"[mTgtG][นั้Ëxpëçtëð øñë tÿpë ærgµmëñt æñð øñë ør mørë æññøtætïøñs før \\"Æññøtætëð\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","annotationBytesString":"[W1g86][นั้Tÿpë æññøtætïøñs çæññøt µsë þÿtës strïñg lïtërælsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","annotationFormatString":"[zaI8H][นั้Tÿpë æññøtætïøñs çæññøt µsë førmæt strïñg lïtëræls (f-strïñgs)Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","annotationNotSupported":"[xYlM8][นั้Tÿpë æññøtætïøñ ñøt sµppørtëð før thïs stætëmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","annotationRawString":"[WOMum][นั้Tÿpë æññøtætïøñs çæññøt µsë ræw strïñg lïtërælsẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","annotationSpansStrings":"[6Gg9x][นั้Tÿpë æññøtætïøñs çæññøt spæñ mµltïplë strïñg lïtërælsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","annotationStringEscape":"[MQdsm][นั้Tÿpë æññøtætïøñs çæññøt çøñtæïñ ësçæpë çhæræçtërsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","argAssignment":"[7pdVt][นั้Ærgµmëñt øf tÿpë \\"{ærgTÿpë}\\" çæññøt þë æssïgñëð tø pæræmëtër øf tÿpë \\"{pæræmTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","argAssignmentFunction":"[J08ms][นั้Ærgµmëñt øf tÿpë \\"{ærgTÿpë}\\" çæññøt þë æssïgñëð tø pæræmëtër øf tÿpë \\"{pæræmTÿpë}\\" ïñ fµñçtïøñ \\"{fµñçtïøñÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","argAssignmentParam":"[hEBRl][นั้Ærgµmëñt øf tÿpë \\"{ærgTÿpë}\\" çæññøt þë æssïgñëð tø pæræmëtër \\"{pæræmÑæmë}\\" øf tÿpë \\"{pæræmTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","argAssignmentParamFunction":"[0sIuD][นั้Ærgµmëñt øf tÿpë \\"{ærgTÿpë}\\" çæññøt þë æssïgñëð tø pæræmëtër \\"{pæræmÑæmë}\\" øf tÿpë \\"{pæræmTÿpë}\\" ïñ fµñçtïøñ \\"{fµñçtïøñÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","argMissingForParam":"[1oqiG][นั้Ærgµmëñt mïssïñg før pæræmëtër {ñæmë}Ấğ倪İЂҰक्र्तिृまẤนั้ढूँ]","argMissingForParams":"[iAF8C][นั้Ærgµmëñts mïssïñg før pæræmëtërs {ñæmës}Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","argMorePositionalExpectedCount":"[q3jgC][นั้Ëxpëçtëð {ëxpëçtëð} mørë pøsïtïøñæl ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","argMorePositionalExpectedOne":"[DNcCo][นั้Ëxpëçtëð 1 mørë pøsïtïøñæl ærgµmëñtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","argPositional":"[XBHa9][นั้Ëxpëçtëð pøsïtïøñæl ærgµmëñtẤğ倪İЂҰक्र्तिृนั้ढूँ]","argPositionalExpectedCount":"[F5Y6t][นั้Ëxpëçtëð {ëxpëçtëð} pøsïtïøñæl ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","argPositionalExpectedOne":"[XW4kV][นั้Ëxpëçtëð 1 pøsïtïøñæl ærgµmëñtẤğ倪İЂҰक्र्तिृนั้ढूँ]","argTypePartiallyUnknown":"[Y02o3][นั้Ærgµmëñt tÿpë ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまนั้ढूँ]","argTypeUnknown":"[l0ccD][นั้Ærgµmëñt tÿpë ïs µñkñøwñẤğ倪İЂҰक्र्นั้ढूँ]","assertAlwaysTrue":"[5Weld][นั้Æssërt ëxprëssïøñ ælwæÿs ëvælµætës tø trµëẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","assertTypeArgs":"[QHRQ7][นั้\\"æssërt_tÿpë\\" ëxpëçts twø pøsïtïøñæl ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","assertTypeTypeMismatch":"[fc1Kk][นั้\\"æssërt_tÿpë\\" mïsmætçh: ëxpëçtëð \\"{ëxpëçtëð}\\" þµt rëçëïvëð \\"{rëçëïvëð}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","assignmentExprComprehension":"[F5OTr][นั้Æssïgñmëñt ëxprëssïøñ tærgët \\"{ñæmë}\\" çæññøt µsë sæmë ñæmë æs çømprëhëñsïøñ før tærgëtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","assignmentExprContext":"[U4d41][นั้Æssïgñmëñt ëxprëssïøñ mµst þë wïthïñ møðµlë, fµñçtïøñ ør læmþðæẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","assignmentExprInSubscript":"[mnJzw][นั้Æssïgñmëñt ëxprëssïøñs wïthïñ æ sµþsçrïpt ærë sµppørtëð øñlÿ ïñ Pÿthøñ 3.10 æñð ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","assignmentInProtocol":"[vey5h][นั้Ïñstæñçë ør çlæss værïæþlës wïthïñ æ Prøtøçøl çlæss mµst þë ëxplïçïtlÿ ðëçlærëð wïthïñ thë çlæss þøðÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","assignmentTargetExpr":"[22xbu][นั้Ëxprëssïøñ çæññøt þë æssïgñmëñt tærgëtẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","asyncNotInAsyncFunction":"[u0Y7U][นั้Üsë øf \\"æsÿñç\\" ñøt ælløwëð øµtsïðë øf æsÿñç fµñçtïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","awaitIllegal":"[2Wa68][นั้Üsë øf \\"æwæït\\" rëqµïrës Pÿthøñ 3.5 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","awaitNotAllowed":"[TpX77][นั้Tÿpë æññøtætïøñs çæññøt µsë \\"æwæït\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","awaitNotInAsync":"[qau2Q][นั้\\"æwæït\\" ælløwëð øñlÿ wïthïñ æsÿñç fµñçtïøñẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","backticksIllegal":"[V1LZI][นั้Ëxprëssïøñs sµrrøµñðëð þÿ þæçktïçks ærë ñøt sµppørtëð ïñ Pÿthøñ 3.x; µsë rëpr ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","baseClassCircular":"[frqWt][นั้Çlæss çæññøt ðërïvë frøm ïtsëlfẤğ倪İЂҰक्र्तिृนั้ढूँ]","baseClassFinal":"[C9i92][นั้ßæsë çlæss \\"{tÿpë}\\" ïs mærkëð fïñæl æñð çæññøt þë sµþçlæssëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","baseClassIncompatible":"[K3wZ2][นั้ßæsë çlæssës øf {tÿpë} ærë mµtµællÿ ïñçømpætïþlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","baseClassInvalid":"[qULQr][นั้Ærgµmëñt tø çlæss mµst þë æ þæsë çlæssẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","baseClassMethodTypeIncompatible":"[2lM0z][นั้ßæsë çlæssës før çlæss \\"{çlæssTÿpë}\\" ðëfïñë mëthøð \\"{ñæmë}\\" ïñ ïñçømpætïþlë wæÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","baseClassUnknown":"[QQxIX][นั้ßæsë çlæss tÿpë ïs µñkñøwñ, øþsçµrïñg tÿpë øf ðërïvëð çlæssẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","baseClassVariableTypeIncompatible":"[YmxlD][นั้ßæsë çlæssës før çlæss \\"{çlæssTÿpë}\\" ðëfïñë værïæþlë \\"{ñæmë}\\" ïñ ïñçømpætïþlë wæÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","binaryOperationNotAllowed":"[1lzlz][นั้ßïñærÿ øpërætør ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","bindTypeMismatch":"[x4sbf][นั้Çøµlð ñøt þïñð mëthøð \\"{mëthøðÑæmë}\\" þëçæµsë \\"{tÿpë}\\" ïs ñøt æssïgñæþlë tø pæræmëtër \\"{pæræmÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","breakOutsideLoop":"[Ca4Ip][นั้\\"þrëæk\\" çæñ þë µsëð øñlÿ wïthïñ æ løøpẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","callableExtraArgs":"[M3UIb][นั้Ëxpëçtëð øñlÿ twø tÿpë ærgµmëñts tø \\"Çællæþlë\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","callableFirstArg":"[W1wTU][นั้Ëxpëçtëð pæræmëtër tÿpë lïst ør \\"...\\"Ấğ倪İЂҰक्र्तिृまẤนั้ढूँ]","callableNotInstantiable":"[sJ0Q8][นั้Çæññøt ïñstæñtïætë tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","callableSecondArg":"[9c1cS][นั้Ëxpëçtëð rëtµrñ tÿpë æs sëçøñð tÿpë ærgµmëñt før \\"Çællæþlë\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","casePatternIsIrrefutable":"[NR6tj][นั้Ïrrëfµtæþlë pættërñ ïs ælløwëð øñlÿ før thë læst çæsë stætëmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","classAlreadySpecialized":"[Puetc][นั้Tÿpë \\"{tÿpë}\\" ïs ælrëæðÿ spëçïælïzëðẤğ倪İЂҰक्र्तिृまนั้ढूँ]","classDecoratorTypeUnknown":"[FhL8V][นั้Üñtÿpëð çlæss ðëçørætør øþsçµrës tÿpë øf çlæss; ïgñørïñg ðëçørætørẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","classDefinitionCycle":"[21Tlp][นั้Çlæss ðëfïñïtïøñ før \\"{ñæmë}\\" ðëpëñðs øñ ïtsëlfẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","classGetItemClsParam":"[A2iHF][นั้__çlæss_gëtïtëm__ øvërrïðë shøµlð tækë æ \\"çls\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","classMethodClsParam":"[aWMN3][นั้Çlæss mëthøðs shøµlð tækë æ \\"çls\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","classNotRuntimeSubscriptable":"[O9BL6][นั้§µþsçrïpt før çlæss \\"{ñæmë}\\" wïll gëñërætë rµñtïmë ëxçëptïøñ; ëñçløsë tÿpë æññøtætïøñ ïñ qµøtësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","classPatternBuiltInArgPositional":"[DOfs5][นั้Çlæss pættërñ æççëpts øñlÿ pøsïtïøñæl sµþ-pættërñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","classPatternPositionalArgCount":"[B65y5][นั้Tøø mæñÿ pøsïtïøñæl pættërñs før çlæss \\"{tÿpë}\\"; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","classPatternTypeAlias":"[AxDtv][นั้\\"{tÿpë}\\" çæññøt þë µsëð ïñ æ çlæss pættërñ þëçæµsë ït ïs æ spëçïælïzëð tÿpë ælïæsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","classPropertyDeprecated":"[Q6JgP][นั้Çlæss prøpërtïës ærë ðëprëçætëð ïñ Pÿthøñ 3.11 æñð wïll ñøt þë sµppørtëð ïñ Pÿthøñ 3.13Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","classTypeParametersIllegal":"[GybXD][นั้Çlæss tÿpë pæræmëtër sÿñtæx rëqµïrës Pÿthøñ 3.12 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","classVarFirstArgMissing":"[VtcEd][นั้Ëxpëçtëð æ tÿpë ærgµmëñt æftër \\"ÇlæssVær\\"Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","classVarNotAllowed":"[BU07G][นั้\\"ÇlæssVær\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","classVarOverridesInstanceVar":"[UEaro][นั้Çlæss værïæþlë \\"{ñæmë}\\" øvërrïðës ïñstæñçë værïæþlë øf sæmë ñæmë ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","classVarTooManyArgs":"[Mj1R5][นั้Ëxpëçtëð øñlÿ øñë tÿpë ærgµmëñt æftër \\"ÇlæssVær\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","classVarWithTypeVar":"[6mnjY][นั้\\"ÇlæssVær\\" tÿpë çæññøt ïñçlµðë tÿpë værïæþlësẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","clsSelfParamTypeMismatch":"[MBrCQ][นั้Tÿpë øf pæræmëtër \\"{ñæmë}\\" mµst þë æ sµpërtÿpë øf ïts çlæss \\"{çlæssTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","codeTooComplexToAnalyze":"[FNQd7][นั้Çøðë ïs tøø çømplëx tø æñælÿzë; rëðµçë çømplëxïtÿ þÿ rëfæçtørïñg ïñtø sµþrøµtïñës ør rëðµçïñg çøñðïtïøñæl çøðë pæthsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","collectionAliasInstantiation":"[rZb8i][นั้Tÿpë \\"{tÿpë}\\" çæññøt þë ïñstæñtïætëð, µsë \\"{ælïæs}\\" ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","comparisonAlwaysFalse":"[N16ve][นั้Çøñðïtïøñ wïll ælwæÿs ëvælµætë tø Fælsë sïñçë thë tÿpës \\"{lëftTÿpë}\\" æñð \\"{rïghtTÿpë}\\" hævë ñø øvërlæpẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","comparisonAlwaysTrue":"[0TOLo][นั้Çøñðïtïøñ wïll ælwæÿs ëvælµætë tø Trµë sïñçë thë tÿpës \\"{lëftTÿpë}\\" æñð \\"{rïghtTÿpë}\\" hævë ñø øvërlæpẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","comprehensionInDict":"[Orm2O][นั้Çømprëhëñsïøñ çæññøt þë µsëð wïth øthër ðïçtïøñærÿ ëñtrïësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","comprehensionInSet":"[YUnu9][นั้Çømprëhëñsïøñ çæññøt þë µsëð wïth øthër sët ëñtrïësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","concatenateContext":"[8tRy6][นั้\\"Çøñçætëñætë\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","concatenateParamSpecMissing":"[3s1CV][นั้£æst tÿpë ærgµmëñt før \\"Çøñçætëñætë\\" mµst þë æ Pæræm§pëç ør \\"...\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","concatenateTypeArgsMissing":"[aH5g8][นั้\\"Çøñçætëñætë\\" rëqµïrës æt lëæst twø tÿpë ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","conditionalOperandInvalid":"[HnbrG][นั้Ïñvælïð çøñðïtïøñæl øpëræñð øf tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","constantRedefinition":"[oRKBh][นั้\\"{ñæmë}\\" ïs çøñstæñt (þëçæµsë ït ïs µppërçæsë) æñð çæññøt þë rëðëfïñëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","constructorNoArgs":"[2g3jZ][นั้Ëxpëçtëð ñø ærgµmëñts tø \\"{tÿpë}\\" çøñstrµçtørẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","constructorParametersMismatch":"[WWloK][นั้Mïsmætçh þëtwëëñ sïgñætµrë øf __ñëw__ æñð __ïñït__ ïñ çlæss \\"{çlæssTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","containmentAlwaysFalse":"[e6PIv][นั้Ëxprëssïøñ wïll ælwæÿs ëvælµætë tø Fælsë sïñçë thë tÿpës \\"{lëftTÿpë}\\" æñð \\"{rïghtTÿpë}\\" hævë ñø øvërlæpẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","containmentAlwaysTrue":"[8OhUO][นั้Ëxprëssïøñ wïll ælwæÿs ëvælµætë tø Trµë sïñçë thë tÿpës \\"{lëftTÿpë}\\" æñð \\"{rïghtTÿpë}\\" hævë ñø øvërlæpẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","continueInFinally":"[RZIyI][นั้\\"çøñtïñµë\\" çæññøt þë µsëð wïthïñ æ fïñællÿ çlæµsëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","continueOutsideLoop":"[6ACvd][นั้\\"çøñtïñµë\\" çæñ þë µsëð øñlÿ wïthïñ æ løøpẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","coroutineInConditionalExpression":"[ygK2r][นั้Çøñðïtïøñæl ëxprëssïøñ rëfërëñçës çørøµtïñë whïçh ælwæÿs ëvælµætës tø TrµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","dataClassBaseClassFrozen":"[jjiw4][นั้Æ ñøñ-frøzëñ çlæss çæññøt ïñhërït frøm æ çlæss thæt ïs frøzëñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","dataClassBaseClassNotFrozen":"[KOz4K][นั้Æ frøzëñ çlæss çæññøt ïñhërït frøm æ çlæss thæt ïs ñøt frøzëñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","dataClassConverterFunction":"[FxD8r][นั้Ærgµmëñt øf tÿpë \\"{ærgTÿpë}\\" ïs ñøt æ vælïð çøñvërtër før fïëlð \\"{fïëlðÑæmë}\\" øf tÿpë \\"{fïëlðTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","dataClassConverterOverloads":"[ZJ0SE][นั้Ñø øvërløæðs øf \\"{fµñçÑæmë}\\" ærë vælïð çøñvërtërs før fïëlð \\"{fïëlðÑæmë}\\" øf tÿpë \\"{fïëlðTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","dataClassFieldWithDefault":"[iJuju][นั้Fïëlðs wïthøµt ðëfæµlt vælµës çæññøt æppëær æftër fïëlðs wïth ðëfæµlt vælµësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","dataClassFieldWithPrivateName":"[miQYb][นั้Ðætæçlæss fïëlð çæññøt µsë prïvætë ñæmëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","dataClassFieldWithoutAnnotation":"[zq5t5][นั้Ðætæçlæss fïëlð wïthøµt tÿpë æññøtætïøñ wïll çæµsë rµñtïmë ëxçëptïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","dataClassPostInitParamCount":"[yl0Bg][นั้Ðætæçlæss __pøst_ïñït__ ïñçørrëçt pæræmëtër çøµñt; ñµmþër øf ÏñïtVær fïëlðs ïs {ëxpëçtëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","dataClassPostInitType":"[74TW4][นั้Ðætæçlæss __pøst_ïñït__ mëthøð pæræmëtër tÿpë mïsmætçh før fïëlð \\"{fïëlðÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","dataClassSlotsOverwrite":"[D17er][นั้__sløts__ ïs ælrëæðÿ ðëfïñëð ïñ çlæssẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","dataClassTransformExpectedBoolLiteral":"[y2upJ][นั้Ëxpëçtëð ëxprëssïøñ thæt stætïçællÿ ëvælµætës tø Trµë ør FælsëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","dataClassTransformFieldSpecifier":"[xE1Cp][นั้Ëxpëçtëð tµplë øf çlæssës ør fµñçtïøñs þµt rëçëïvëð tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","dataClassTransformPositionalParam":"[Cu7w4][นั้Æll ærgµmëñts tø \\"ðætæçlæss_træñsførm\\" mµst þë këÿwørð ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","dataClassTransformUnknownArgument":"[hLQXL][นั้Ærgµmëñt \\"{ñæmë}\\" ïs ñøt sµppørtëð þÿ ðætæçlæss_træñsførmẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","dataProtocolInSubclassCheck":"[kIIkO][นั้Ðætæ prøtøçøls (whïçh ïñçlµðë ñøñ-mëthøð ættrïþµtës) ærë ñøt ælløwëð ïñ ïssµþçlæss çællsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","declaredReturnTypePartiallyUnknown":"[pDeOu][นั้Ðëçlærëð rëtµrñ tÿpë, \\"{rëtµrñTÿpë}\\", ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","declaredReturnTypeUnknown":"[XRFJs][นั้Ðëçlærëð rëtµrñ tÿpë ïs µñkñøwñẤğ倪İЂҰक्र्तिृนั้ढूँ]","defaultValueContainsCall":"[G3smw][นั้Fµñçtïøñ çælls æñð mµtæþlë øþjëçts ñøt ælløwëð wïthïñ pæræmëtër ðëfæµlt vælµë ëxprëssïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","defaultValueNotAllowed":"[SuRpb][นั้Pæræmëtër wïth \\"*\\" ør \\"**\\" çæññøt hævë ðëfæµlt vælµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","delTargetExpr":"[VLtXk][นั้Ëxprëssïøñ çæññøt þë ðëlëtëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","deprecatedClass":"[DIyRn][นั้Thë çlæss \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","deprecatedConstructor":"[jq4aQ][นั้Thë çøñstrµçtør før çlæss \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","deprecatedDescriptorDeleter":"[ljYHS][นั้Thë \\"__ðëlëtë__\\" mëthøð før ðësçrïptør \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","deprecatedDescriptorGetter":"[06Y3N][นั้Thë \\"__gët__\\" mëthøð  før ðësçrïptør \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","deprecatedDescriptorSetter":"[6nQQu][นั้Thë \\"__sët__\\" mëthøð  før ðësçrïptør \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","deprecatedFunction":"[GdF0l][นั้Thë fµñçtïøñ \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまนั้ढूँ]","deprecatedMethod":"[GxfND][นั้Thë mëthøð \\"{ñæmë}\\" ïñ çlæss \\"{çlæssÑæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","deprecatedPropertyDeleter":"[BUlI2][นั้Thë ðëlëtër før prøpërtÿ \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","deprecatedPropertyGetter":"[54BuI][นั้Thë gëttër før prøpërtÿ \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","deprecatedPropertySetter":"[EHGoz][นั้Thë sëttër før prøpërtÿ \\"{ñæmë}\\" ïs ðëprëçætëðẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","deprecatedType":"[IWdSs][นั้Thïs tÿpë ïs ðëprëçætëð æs øf Pÿthøñ {vërsïøñ}; µsë \\"{rëplæçëmëñt}\\" ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","dictExpandIllegalInComprehension":"[3B8LL][นั้Ðïçtïøñærÿ ëxpæñsïøñ ñøt ælløwëð ïñ çømprëhëñsïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","dictInAnnotation":"[0UcII][นั้Ðïçtïøñærÿ ëxprëssïøñ ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","dictKeyValuePairs":"[Hnd6W][นั้Ðïçtïøñærÿ ëñtrïës mµst çøñtæïñ këÿ/vælµë pæïrsẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","dictUnpackIsNotMapping":"[RhO60][นั้Ëxpëçtëð mæppïñg før ðïçtïøñærÿ µñpæçk øpërætørẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","dunderAllSymbolNotPresent":"[mlrcI][นั้\\"{ñæmë}\\" ïs spëçïfïëð ïñ __æll__ þµt ïs ñøt prësëñt ïñ møðµlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","duplicateArgsParam":"[bt3Os][นั้Øñlÿ øñë \\"*\\" pæræmëtër ælløwëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","duplicateBaseClass":"[HIzyw][นั้Ðµplïçætë þæsë çlæss ñøt ælløwëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","duplicateCapturePatternTarget":"[zq38Z][นั้Çæptµrë tærgët \\"{ñæmë}\\" çæññøt æppëær mørë thæñ øñçë wïthïñ thë sæmë pættërñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","duplicateCatchAll":"[6gO00][นั้Øñlÿ øñë çætçh-æll ëxçëpt çlæµsë ælløwëðẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","duplicateEnumMember":"[k9W8A][นั้Ëñµm mëmþër \\"{ñæmë}\\" ïs ælrëæðÿ ðëçlærëðẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","duplicateGenericAndProtocolBase":"[4EO4W][นั้Øñlÿ øñë Gëñërïç[...] ør Prøtøçøl[...] þæsë çlæss ælløwëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","duplicateImport":"[qgZGm][นั้\\"{ïmpørtÑæmë}\\" ïs ïmpørtëð mørë thæñ øñçëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","duplicateKeywordOnly":"[pbf3W][นั้Øñlÿ øñë \\"*\\" sëpærætør ælløwëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","duplicateKwargsParam":"[4QsUE][นั้Øñlÿ øñë \\"**\\" pæræmëtër ælløwëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","duplicateParam":"[s0XGf][นั้Ðµplïçætë pæræmëtër \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","duplicatePositionOnly":"[9hzW4][นั้Øñlÿ øñë \\"/\\" pæræmëtër ælløwëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","duplicateStarPattern":"[8quwQ][นั้Øñlÿ øñë \\"*\\" pættërñ ælløwëð ïñ æ pættërñ sëqµëñçëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","duplicateStarStarPattern":"[wScoI][นั้Øñlÿ øñë \\"**\\" ëñtrÿ ælløwëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","duplicateUnpack":"[wjeOP][นั้Øñlÿ øñë µñpæçk øpërætïøñ ælløwëð ïñ lïstẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","ellipsisAfterUnpacked":"[4EsWH][นั้\\"...\\" çæññøt þë µsëð wïth æñ µñpæçkëð TÿpëVærTµplë ør tµplëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","ellipsisContext":"[Y4jK3][นั้\\"...\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","ellipsisSecondArg":"[pvXJA][นั้\\"...\\" ïs ælløwëð øñlÿ æs thë sëçøñð øf twø ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","enumClassOverride":"[2JsL1][นั้Ëñµm çlæss \\"{ñæmë}\\" ïs fïñæl æñð çæññøt þë sµþçlæssëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","exceptionGroupIncompatible":"[d0SLP][นั้Ëxçëptïøñ grøµp sÿñtæx (\\"ëxçëpt*\\") rëqµïrës Pÿthøñ 3.11 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","exceptionTypeIncorrect":"[G7AZt][นั้\\"{tÿpë}\\" ðøës ñøt ðërïvë frøm ßæsëËxçëptïøñẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","exceptionTypeNotClass":"[v1FmY][นั้\\"{tÿpë}\\" ïs ñøt æ vælïð ëxçëptïøñ çlæssẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","exceptionTypeNotInstantiable":"[PfdeG][นั้Çøñstrµçtør før ëxçëptïøñ tÿpë \\"{tÿpë}\\" rëqµïrës øñë ør mørë ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","expectedAfterDecorator":"[rzMVF][นั้Ëxpëçtëð fµñçtïøñ ør çlæss ðëçlærætïøñ æftër ðëçørætørẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","expectedArrow":"[DrZKr][นั้Ëxpëçtëð \\"->\\" følløwëð þÿ rëtµrñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","expectedAsAfterException":"[FDdTe][นั้Ëxpëçtëð \\"æs\\" æftër ëxçëptïøñ tÿpëẤğ倪İЂҰक्र्तिृまนั้ढूँ]","expectedAssignRightHandExpr":"[mPzHP][นั้Ëxpëçtëð ëxprëssïøñ tø thë rïght øf \\"=\\"Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","expectedBinaryRightHandExpr":"[MgqnF][นั้Ëxpëçtëð ëxprëssïøñ tø thë rïght øf øpërætørẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","expectedBoolLiteral":"[bhZAe][นั้Ëxpëçtëð Trµë ør FælsëẤğ倪İЂҰक्र्นั้ढूँ]","expectedCase":"[kQ1sa][นั้Ëxpëçtëð \\"çæsë\\" stætëmëñtẤğ倪İЂҰक्र्นั้ढूँ]","expectedClassName":"[f0XRc][นั้Ëxpëçtëð çlæss ñæmëẤğ倪İЂҰक्นั้ढूँ]","expectedCloseBrace":"[MQHKY][นั้\\"{\\" wæs ñøt çløsëðẤğ倪İЂҰक्นั้ढूँ]","expectedCloseBracket":"[YfM0n][นั้\\"[\\" wæs ñøt çløsëðẤğ倪İЂҰक्นั้ढूँ]","expectedCloseParen":"[tAuag][นั้\\"(\\" wæs ñøt çløsëðẤğ倪İЂҰक्นั้ढूँ]","expectedColon":"[KmzHa][นั้Ëxpëçtëð \\":\\"Ấğ倪İЂนั้ढूँ]","expectedComplexNumberLiteral":"[dc2rM][นั้Ëxpëçtëð çømplëx ñµmþër lïtëræl før pættërñ mætçhïñgẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","expectedDecoratorExpr":"[415JG][นั้Ëxprëssïøñ førm ñøt sµppørtëð før ðëçørætør prïør tø Pÿthøñ 3.9Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","expectedDecoratorName":"[IKO4m][นั้Ëxpëçtëð ðëçørætør ñæmëẤğ倪İЂҰक्र्นั้ढूँ]","expectedDecoratorNewline":"[Bsyx3][นั้Ëxpëçtëð ñëw lïñë æt ëñð øf ðëçørætørẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","expectedDelExpr":"[u8JgL][นั้Ëxpëçtëð ëxprëssïøñ æftër \\"ðël\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","expectedElse":"[eROaU][นั้Ëxpëçtëð \\"ëlsë\\"Ấğ倪İЂҰนั้ढूँ]","expectedEquals":"[TXK4x][นั้Ëxpëçtëð \\"=\\"Ấğ倪İЂนั้ढूँ]","expectedExceptionClass":"[sYtUr][นั้Ïñvælïð ëxçëptïøñ çlæss ør øþjëçtẤğ倪İЂҰक्र्तिृนั้ढूँ]","expectedExceptionObj":"[w4tAQ][นั้Ëxpëçtëð ëxçëptïøñ øþjëçt, ëxçëptïøñ çlæss ør ÑøñëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","expectedExpr":"[iKSsw][นั้Ëxpëçtëð ëxprëssïøñẤğ倪İЂҰक्นั้ढूँ]","expectedFunctionAfterAsync":"[fWBMb][นั้Ëxpëçtëð fµñçtïøñ ðëfïñïtïøñ æftër \\"æsÿñç\\"Ấğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","expectedFunctionName":"[cR036][นั้Ëxpëçtëð fµñçtïøñ ñæmë æftër \\"ðëf\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","expectedIdentifier":"[Lj4l5][นั้Ëxpëçtëð ïðëñtïfïërẤğ倪İЂҰक्นั้ढूँ]","expectedImport":"[FNK2F][นั้Ëxpëçtëð \\"ïmpørt\\"Ấğ倪İЂҰक्นั้ढूँ]","expectedImportAlias":"[mb4fF][นั้Ëxpëçtëð sÿmþøl æftër \\"æs\\"Ấğ倪İЂҰक्र्นั้ढूँ]","expectedImportSymbols":"[QUZ7S][นั้Ëxpëçtëð øñë ør mørë sÿmþøl ñæmës æftër ïmpørtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","expectedIn":"[9XkiC][นั้Ëxpëçtëð \\"ïñ\\"Ấğ倪İЂนั้ढूँ]","expectedInExpr":"[RXryp][นั้Ëxpëçtëð ëxprëssïøñ æftër \\"ïñ\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","expectedIndentedBlock":"[7ZvJC][นั้Ëxpëçtëð ïñðëñtëð þløçkẤğ倪İЂҰक्र्นั้ढूँ]","expectedMemberName":"[VvTAF][นั้Ëxpëçtëð mëmþër ñæmë æftër \\".\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","expectedModuleName":"[Jky7g][นั้Ëxpëçtëð møðµlë ñæmëẤğ倪İЂҰक्นั้ढूँ]","expectedNameAfterAs":"[KnNbR][นั้Ëxpëçtëð sÿmþøl ñæmë æftër \\"æs\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","expectedNamedParameter":"[ZsE8l][นั้Këÿwørð pæræmëtër mµst følløw \\"*\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","expectedNewline":"[bW0cY][นั้Ëxpëçtëð ñëwlïñëẤğ倪İЂҰนั้ढूँ]","expectedNewlineOrSemicolon":"[av2Gz][นั้§tætëmëñts mµst þë sëpærætëð þÿ ñëwlïñës ør sëmïçøløñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","expectedOpenParen":"[CLuzo][นั้Ëxpëçtëð \\"(\\"Ấğ倪İЂนั้ढूँ]","expectedParamName":"[b0il7][นั้Ëxpëçtëð pæræmëtër ñæmëẤğ倪İЂҰक्र्นั้ढूँ]","expectedPatternExpr":"[76AU4][นั้Ëxpëçtëð pættërñ ëxprëssïøñẤğ倪İЂҰक्र्तिृนั้ढूँ]","expectedPatternSubjectExpr":"[GUw9q][นั้Ëxpëçtëð pættërñ sµþjëçt ëxprëssïøñẤğ倪İЂҰक्र्तिृまนั้ढूँ]","expectedPatternValue":"[Ah06c][นั้Ëxpëçtëð pættërñ vælµë ëxprëssïøñ øf thë førm \\"æ.þ\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","expectedReturnExpr":"[nyeYf][นั้Ëxpëçtëð ëxprëssïøñ æftër \\"rëtµrñ\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","expectedSliceIndex":"[0HjFA][นั้Ëxpëçtëð ïñðëx ør slïçë ëxprëssïøñẤğ倪İЂҰक्र्तिृまนั้ढूँ]","expectedTypeNotString":"[FXeAr][นั้Ëxpëçtëð tÿpë þµt rëçëïvëð æ strïñg lïtërælẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","expectedTypeParameterName":"[aHX5Q][นั้Ëxpëçtëð tÿpë pæræmëtër ñæmëẤğ倪İЂҰक्र्तिृนั้ढूँ]","expectedYieldExpr":"[TrB0N][นั้Ëxpëçtëð ëxprëssïøñ ïñ ÿïëlð stætëmëñtẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","finalClassIsAbstract":"[qEcDN][นั้Çlæss \\"{tÿpë}\\" ïs mærkëð fïñæl æñð mµst ïmplëmëñt æll æþstræçt sÿmþølsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","finalContext":"[KT2Ma][นั้\\"Fïñæl\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","finalMethodOverride":"[rVyi2][นั้Mëthøð \\"{ñæmë}\\" çæññøt øvërrïðë fïñæl mëthøð ðëfïñëð ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","finalNonMethod":"[ITFlU][นั้Fµñçtïøñ \\"{ñæmë}\\" çæññøt þë mærkëð @fïñæl þëçæµsë ït ïs ñøt æ mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","finalReassigned":"[fgpqP][นั้\\"{ñæmë}\\" ïs ðëçlærëð æs Fïñæl æñð çæññøt þë rëæssïgñëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","finalRedeclaration":"[8jVSa][นั้\\"{ñæmë}\\" wæs prëvïøµslÿ ðëçlærëð æs FïñælẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","finalRedeclarationBySubclass":"[0VswQ][นั้\\"{ñæmë}\\" çæññøt þë rëðëçlærëð þëçæµsë pærëñt çlæss \\"{çlæssÑæmë}\\" ðëçlærës ït æs FïñælẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","finalTooManyArgs":"[9fleE][นั้Ëxpëçtëð æ sïñglë tÿpë ærgµmëñt æftër \\"Fïñæl\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","finalUnassigned":"[PmdtN][นั้\\"{ñæmë}\\" ïs ðëçlærëð Fïñæl, þµt vælµë ïs ñøt æssïgñëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","formatStringBrace":"[j606J][นั้§ïñglë çløsë þræçë ñøt ælløwëð wïthïñ f-strïñg lïtëræl; µsë ðøµþlë çløsë þræçëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","formatStringBytes":"[1Xo44][นั้Førmæt strïñg lïtëræls (f-strïñgs) çæññøt þë þïñærÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","formatStringDebuggingIllegal":"[mQueA][นั้F-strïñg ðëþµggïñg spëçïfïër \\"=\\" rëqµïrës Pÿthøñ 3.8 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","formatStringEscape":"[lcP3H][นั้Ësçæpë sëqµëñçë (þæçkslæsh) ñøt ælløwëð ïñ ëxprëssïøñ pørtïøñ øf f-strïñg prïør tø Pÿthøñ 3.12Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","formatStringExpectedConversion":"[AjO2F][นั้Ëxpëçtëð æ çøñvërsïøñ spëçïfïër æftër \\"!\\" ïñ f-strïñgẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","formatStringIllegal":"[HhOeX][นั้Førmæt strïñg lïtëræls (f-strïñgs) rëqµïrë Pÿthøñ 3.6 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","formatStringInPattern":"[KqV2l][นั้Førmæt strïñg ñøt ælløwëð ïñ pættërñẤğ倪İЂҰक्र्तिृまนั้ढूँ]","formatStringNestedFormatSpecifier":"[OFqi6][นั้Ëxprëssïøñs ñëstëð tøø ðëëplÿ wïthïñ førmæt strïñg spëçïfïërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","formatStringNestedQuote":"[buq49][นั้§trïñgs ñëstëð wïthïñ æñ f-strïñg çæññøt µsë thë sæmë qµøtë çhæræçtër æs thë f-strïñg prïør tø Pÿthøñ 3.12Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","formatStringUnicode":"[RCCfD][นั้Førmæt strïñg lïtëræls (f-strïñgs) çæññøt þë µñïçøðëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","formatStringUnterminated":"[PnOZr][นั้Üñtërmïñætëð ëxprëssïøñ ïñ f-strïñg; ëxpëçtïñg \\"}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","functionDecoratorTypeUnknown":"[Gv66U][นั้Üñtÿpëð fµñçtïøñ ðëçørætør øþsçµrës tÿpë øf fµñçtïøñ; ïgñørïñg ðëçørætørẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","functionInConditionalExpression":"[9A68n][นั้Çøñðïtïøñæl ëxprëssïøñ rëfërëñçës fµñçtïøñ whïçh ælwæÿs ëvælµætës tø TrµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","functionTypeParametersIllegal":"[0JM96][นั้Fµñçtïøñ tÿpë pæræmëtër sÿñtæx rëqµïrës Pÿthøñ 3.12 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","futureImportLocationNotAllowed":"[IdoQY][นั้Ïmpørts frøm __fµtµrë__ mµst þë æt thë þëgïññïñg øf thë fïlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","generatorAsyncReturnType":"[dYKl9][นั้Rëtµrñ tÿpë øf æsÿñç gëñërætør fµñçtïøñ mµst þë çømpætïþlë wïth \\"ÆsÿñçGëñërætør[{ÿïëlðTÿpë}, Æñÿ]\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","generatorNotParenthesized":"[WmWZM][นั้Gëñërætør ëxprëssïøñs mµst þë pærëñthësïzëð ïf ñøt sølë ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","generatorSyncReturnType":"[ASD1z][นั้Rëtµrñ tÿpë øf gëñërætør fµñçtïøñ mµst þë çømpætïþlë wïth \\"Gëñërætør[{ÿïëlðTÿpë}, Æñÿ, Æñÿ]\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","genericBaseClassNotAllowed":"[fniUT][นั้\\"Gëñërïç\\" þæsë çlæss çæññøt þë µsëð wïth tÿpë pæræmëtër sÿñtæxẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","genericClassAssigned":"[iU1tH][นั้Gëñërïç çlæss tÿpë çæññøt þë æssïgñëðẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","genericClassDeleted":"[C942e][นั้Gëñërïç çlæss tÿpë çæññøt þë ðëlëtëðẤğ倪İЂҰक्र्तिृまนั้ढूँ]","genericInstanceVariableAccess":"[rpanq][นั้Æççëss tø gëñërïç ïñstæñçë værïæþlë thrøµgh çlæss ïs æmþïgµøµsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","genericNotAllowed":"[vnF07][นั้\\"Gëñërïç\\" ïs ñøt vælïð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","genericTypeAliasBoundTypeVar":"[S1NAS][นั้Gëñërïç tÿpë ælïæs wïthïñ çlæss çæññøt µsë þøµñð tÿpë værïæþlës {ñæmës}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","genericTypeArgMissing":"[OlCEv][นั้\\"Gëñërïç\\" rëqµïrës æt lëæst øñë tÿpë ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","genericTypeArgTypeVar":"[09E7H][นั้Tÿpë ærgµmëñt før \\"Gëñërïç\\" mµst þë æ tÿpë værïæþlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","genericTypeArgUnique":"[xHwpY][นั้Tÿpë ærgµmëñts før \\"Gëñërïç\\" mµst þë µñïqµëẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","globalReassignment":"[B2UyK][นั้\\"{ñæmë}\\" ïs æssïgñëð þëførë gløþæl ðëçlærætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","globalRedefinition":"[UZSMp][นั้\\"{ñæmë}\\" wæs ælrëæðÿ ðëçlærëð gløþælẤğ倪İЂҰक्र्तिृまนั้ढूँ]","implicitStringConcat":"[t0D1l][นั้Ïmplïçït strïñg çøñçætëñætïøñ ñøt ælløwëðẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","importCycleDetected":"[FFPSZ][นั้Çÿçlë ðëtëçtëð ïñ ïmpørt çhæïñẤğ倪İЂҰक्र्तिृนั้ढूँ]","importDepthExceeded":"[8G4s1][นั้Ïmpørt çhæïñ ðëpth ëxçëëðëð {ðëpth}Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","importResolveFailure":"[oBYA4][นั้Ïmpørt \\"{ïmpørtÑæmë}\\" çøµlð ñøt þë rësølvëðẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","importSourceResolveFailure":"[hjHFa][นั้Ïmpørt \\"{ïmpørtÑæmë}\\" çøµlð ñøt þë rësølvëð frøm søµrçëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","importSymbolUnknown":"[jY9ZH][นั้\\"{ñæmë}\\" ïs µñkñøwñ ïmpørt sÿmþølẤğ倪İЂҰक्र्तिृนั้ढूँ]","incompatibleMethodOverride":"[i45Ka][นั้Mëthøð \\"{ñæmë}\\" øvërrïðës çlæss \\"{çlæssÑæmë}\\" ïñ æñ ïñçømpætïþlë mæññërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","inconsistentIndent":"[gdrcy][นั้Üñïñðëñt æmøµñt ðøës ñøt mætçh prëvïøµs ïñðëñtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","inconsistentTabs":"[I3Z6K][นั้Ïñçøñsïstëñt µsë øf tæþs æñð spæçës ïñ ïñðëñtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","initMustReturnNone":"[RlXyC][นั้Rëtµrñ tÿpë øf \\"__ïñït__\\" mµst þë ÑøñëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","initSubclassCallFailed":"[w22Kh][นั้Ïñçørrëçt këÿwørð ærgµmëñts før __ïñït_sµþçlæss__ mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","initSubclassClsParam":"[6CWuS][นั้__ïñït_sµþçlæss__ øvërrïðë shøµlð tækë æ \\"çls\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","initVarNotAllowed":"[Bb6V0][นั้\\"ÏñïtVær\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","instanceMethodSelfParam":"[dPZPj][นั้Ïñstæñçë mëthøðs shøµlð tækë æ \\"sëlf\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","instanceVarOverridesClassVar":"[cfYeg][นั้Ïñstæñçë værïæþlë \\"{ñæmë}\\" øvërrïðës çlæss værïæþlë øf sæmë ñæmë ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","instantiateAbstract":"[IyeLb][นั้Çæññøt ïñstæñtïætë æþstræçt çlæss \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","instantiateProtocol":"[Xa6p2][นั้Çæññøt ïñstæñtïætë prøtøçøl çlæss \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","internalBindError":"[PnkgK][นั้Æñ ïñtërñæl ërrør øççµrrëð whïlë þïñðïñg fïlë \\"{fïlë}\\": {mëssægë}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","internalParseError":"[T91nL][นั้Æñ ïñtërñæl ërrør øççµrrëð whïlë pærsïñg fïlë \\"{fïlë}\\": {mëssægë}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","internalTypeCheckingError":"[9E5Bn][นั้Æñ ïñtërñæl ërrør øççµrrëð whïlë tÿpë çhëçkïñg fïlë \\"{fïlë}\\": {mëssægë}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","invalidIdentifierChar":"[Vpy5i][นั้Ïñvælïð çhæræçtër ïñ ïðëñtïfïërẤğ倪İЂҰक्र्तिृนั้ढूँ]","invalidStubStatement":"[sxuu1][นั้§tætëmëñt ïs mëæñïñglëss wïthïñ æ tÿpë stµþ fïlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","invalidTokenChars":"[n9Jty][นั้Ïñvælïð çhæræçtër \\"{tëxt}\\" ïñ tøkëñẤğ倪İЂҰक्र्तिृまนั้ढूँ]","isInstanceInvalidType":"[Q3jK3][นั้§ëçøñð ærgµmëñt tø \\"ïsïñstæñçë\\" mµst þë æ çlæss ør tµplë øf çlæssësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","isSubclassInvalidType":"[6Q7qf][นั้§ëçøñð ærgµmëñt tø \\"ïssµþçlæss\\" mµst þë æ çlæss ør tµplë øf çlæssësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","keyValueInSet":"[tmmyt][นั้Këÿ/vælµë pæïrs ærë ñøt ælløwëð wïthïñ æ sëtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","keywordArgInTypeArgument":"[BzcKx][นั้Këÿwørð ærgµmëñts çæññøt þë µsëð ïñ tÿpë ærgµmëñt lïstsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","keywordOnlyAfterArgs":"[RLvT4][นั้Këÿwørð-øñlÿ ærgµmëñt sëpærætør ñøt ælløwëð æftër \\"*\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","keywordParameterMissing":"[gTcAl][นั้Øñë ør mørë këÿwørð pæræmëtërs mµst følløw \\"*\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","keywordSubscriptIllegal":"[khu47][นั้Këÿwørð ærgµmëñts wïthïñ sµþsçrïpts ærë ñøt sµppørtëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","lambdaReturnTypePartiallyUnknown":"[Z5ML1][นั้Rëtµrñ tÿpë øf læmþðæ, \\"{rëtµrñTÿpë}\\", ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","lambdaReturnTypeUnknown":"[h4icY][นั้Rëtµrñ tÿpë øf læmþðæ ïs µñkñøwñẤğ倪İЂҰक्र्तिृนั้ढूँ]","listAssignmentMismatch":"[DZh64][นั้Ëxprëssïøñ wïth tÿpë \\"{tÿpë}\\" çæññøt þë æssïgñëð tø tærgët lïstẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","listInAnnotation":"[i5U8t][นั้£ïst ëxprëssïøñ ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","literalEmptyArgs":"[VkrFm][นั้Ëxpëçtëð øñë ør mørë tÿpë ærgµmëñts æftër \\"£ïtëræl\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","literalNamedUnicodeEscape":"[8cbe7][นั้Ñæmëð µñïçøðë ësçæpë sëqµëñçës ærë ñøt sµppørtëð ïñ \\"£ïtëræl\\" strïñg æññøtætïøñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","literalNotAllowed":"[FAk6E][นั้\\"£ïtëræl\\" çæññøt þë µsëð ïñ thïs çøñtëxt wïthøµt æ tÿpë ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","literalNotCallable":"[C75sx][นั้£ïtëræl tÿpë çæññøt þë ïñstæñtïætëðẤğ倪İЂҰक्र्तिृまนั้ढूँ]","literalUnsupportedType":"[10Yse][นั้Tÿpë ærgµmëñts før \\"£ïtëræl\\" mµst þë Ñøñë, æ lïtëræl vælµë (ïñt, þøøl, str, ør þÿtës), ør æñ ëñµm vælµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","matchIncompatible":"[9ljpM][นั้Mætçh stætëmëñts rëqµïrë Pÿthøñ 3.10 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","matchIsNotExhaustive":"[BJ8EI][นั้Çæsës wïthïñ mætçh stætëmëñt ðø ñøt ëxhæµstïvëlÿ hæñðlë æll vælµësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","maxParseDepthExceeded":"[5nAZx][นั้Mæxïmµm pærsë ðëpth ëxçëëðëð; þrëæk ëxprëssïøñ ïñtø smællër sµþ-ëxprëssïøñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","memberAccess":"[YP5V0][นั้Çæññøt æççëss mëmþër \\"{ñæmë}\\" før tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","memberDelete":"[o47cn][นั้Çæññøt ðëlëtë mëmþër \\"{ñæmë}\\" før tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","memberSet":"[JCDqa][นั้Çæññøt æssïgñ mëmþër \\"{ñæmë}\\" før tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","metaclassConflict":"[XgAJj][นั้Thë mëtæçlæss øf æ ðërïvëð çlæss mµst þë æ sµþçlæss øf thë mëtæçlæssës øf æll ïts þæsë çlæssësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","metaclassDuplicate":"[wrGuH][นั้Øñlÿ øñë mëtæçlæss çæñ þë prøvïðëðẤğ倪İЂҰक्र्तिृまนั้ढूँ]","metaclassIsGeneric":"[K5fXC][นั้Mëtæçlæss çæññøt þë gëñërïçẤğ倪İЂҰक्र्तिृนั้ढूँ]","methodNotDefined":"[ZuPf7][นั้\\"{ñæmë}\\" mëthøð ñøt ðëfïñëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","methodNotDefinedOnType":"[sEtO5][นั้\\"{ñæmë}\\" mëthøð ñøt ðëfïñëð øñ tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","methodOrdering":"[0M0tn][นั้Çæññøt çrëætë çøñsïstëñt mëthøð ørðërïñgẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","methodOverridden":"[2Bu15][นั้\\"{ñæmë}\\" øvërrïðës mëthøð øf sæmë ñæmë ïñ çlæss \\"{çlæssÑæmë}\\" wïth ïñçømpætïþlë tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","methodReturnsNonObject":"[9nnVb][นั้\\"{ñæmë}\\" mëthøð ðøës ñøt rëtµrñ æñ øþjëçtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","missingSuperCall":"[jNXGA][นั้Mëthøð \\"{mëthøðÑæmë}\\" ðøës ñøt çæll thë mëthøð øf thë sæmë ñæmë ïñ pærëñt çlæssẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","moduleAsType":"[p9N4B][นั้Møðµlë çæññøt þë µsëð æs æ tÿpëẤğ倪İЂҰक्र्तिृนั้ढूँ]","moduleNotCallable":"[YY0Jq][นั้Møðµlë ïs ñøt çællæþlëẤğ倪İЂҰक्र्นั้ढूँ]","moduleUnknownMember":"[tegoa][นั้\\"{mëmþërÑæmë}\\" ïs ñøt æ kñøwñ mëmþër øf møðµlë \\"{møðµlëÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","namedExceptAfterCatchAll":"[pMR1l][นั้Æ ñæmëð ëxçëpt çlæµsë çæññøt æppëær æftër çætçh-æll ëxçëpt çlæµsëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","namedParamAfterParamSpecArgs":"[sF38r][นั้Këÿwørð pæræmëtër \\"{ñæmë}\\" çæññøt æppëær ïñ sïgñætµrë æftër Pæræm§pëç ærgs pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","namedTupleEmptyName":"[vnXqF][นั้Ñæmës wïthïñ æ ñæmëð tµplë çæññøt þë ëmptÿẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","namedTupleEntryRedeclared":"[0tiaC][นั้Çæññøt øvërrïðë \\"{ñæmë}\\" þëçæµsë pærëñt çlæss \\"{çlæssÑæmë}\\" ïs æ ñæmëð tµplëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","namedTupleFirstArg":"[L5ZXq][นั้Ëxpëçtëð ñæmëð tµplë çlæss ñæmë æs fïrst ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","namedTupleMultipleInheritance":"[KYJOA][นั้Mµltïplë ïñhërïtæñçë wïth ÑæmëðTµplë ïs ñøt sµppørtëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","namedTupleNameKeyword":"[g6NTa][นั้Fïëlð ñæmës çæññøt þë æ këÿwørðẤğ倪İЂҰक्र्तिृนั้ढूँ]","namedTupleNameType":"[AxfdS][นั้Ëxpëçtëð twø-ëñtrÿ tµplë spëçïfÿïñg ëñtrÿ ñæmë æñð tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","namedTupleNameUnique":"[TQaej][นั้Ñæmës wïthïñ æ ñæmëð tµplë mµst þë µñïqµëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","namedTupleNoTypes":"[Fn6FF][นั้\\"ñæmëðtµplë\\" prøvïðës ñø tÿpës før tµplë ëñtrïës; µsë \\"ÑæmëðTµplë\\" ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","namedTupleSecondArg":"[SqoXY][นั้Ëxpëçtëð ñæmëð tµplë ëñtrÿ lïst æs sëçøñð ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","newClsParam":"[EUESX][นั้__ñëw__ øvërrïðë shøµlð tækë æ \\"çls\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","newTypeAnyOrUnknown":"[D4ZjA][นั้Thë sëçøñð ærgµmëñt tø ÑëwTÿpë mµst þë æ kñøwñ çlæss, ñøt Æñÿ ør ÜñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","newTypeBadName":"[cqWvO][นั้Thë fïrst ærgµmëñt tø ÑëwTÿpë mµst þë æ strïñg lïtërælẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","newTypeLiteral":"[4k8om][นั้ÑëwTÿpë çæññøt þë µsëð wïth £ïtëræl tÿpëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","newTypeNameMismatch":"[kQgMv][นั้ÑëwTÿpë mµst þë æssïgñëð tø æ værïæþlë wïth thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","newTypeNotAClass":"[ta6tZ][นั้Ëxpëçtëð çlæss æs sëçøñð ærgµmëñt tø ÑëwTÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","newTypeParamCount":"[6b2ro][นั้ÑëwTÿpë rëqµïrës twø pøsïtïøñæl ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","newTypeProtocolClass":"[1l02t][นั้ÑëwTÿpë çæññøt þë µsëð wïth strµçtµræl tÿpë (æ prøtøçøl ør TÿpëðÐïçt çlæss)Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","noOverload":"[IcBNQ][นั้Ñø øvërløæðs før \\"{ñæmë}\\" mætçh thë prøvïðëð ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","noReturnContainsReturn":"[nBLDq][นั้Fµñçtïøñ wïth ðëçlærëð rëtµrñ tÿpë \\"ÑøRëtµrñ\\" çæññøt ïñçlµðë æ rëtµrñ stætëmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","noReturnContainsYield":"[V3G36][นั้Fµñçtïøñ wïth ðëçlærëð rëtµrñ tÿpë \\"ÑøRëtµrñ\\" çæññøt ïñçlµðë æ ÿïëlð stætëmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","noReturnReturnsNone":"[O3XA6][นั้Fµñçtïøñ wïth ðëçlærëð rëtµrñ tÿpë \\"ÑøRëtµrñ\\" çæññøt rëtµrñ \\"Ñøñë\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","nonDefaultAfterDefault":"[mFFgP][นั้Ñøñ-ðëfæµlt ærgµmëñt følløws ðëfæµlt ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","nonLocalInModule":"[kmLlv][นั้Ñøñløçæl ðëçlærætïøñ ñøt ælløwëð æt møðµlë lëvëlẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","nonLocalNoBinding":"[WTA2d][นั้Ñø þïñðïñg før ñøñløçæl \\"{ñæmë}\\" føµñðẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","nonLocalReassignment":"[T1M6J][นั้\\"{ñæmë}\\" ïs æssïgñëð þëførë ñøñløçæl ðëçlærætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","nonLocalRedefinition":"[gwh1h][นั้\\"{ñæmë}\\" wæs ælrëæðÿ ðëçlærëð ñøñløçælẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","noneNotCallable":"[sIZ5J][นั้Øþjëçt øf tÿpë \\"Ñøñë\\" çæññøt þë çællëðẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","noneNotIterable":"[spDD0][นั้Øþjëçt øf tÿpë \\"Ñøñë\\" çæññøt þë µsëð æs ïtëræþlë vælµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","noneNotSubscriptable":"[Emzwj][นั้Øþjëçt øf tÿpë \\"Ñøñë\\" ïs ñøt sµþsçrïptæþlëẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","noneNotUsableWith":"[zlOOD][นั้Øþjëçt øf tÿpë \\"Ñøñë\\" çæññøt þë µsëð wïth \\"wïth\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","noneOperator":"[3U0d3][นั้Øpërætør \\"{øpërætør}\\" ñøt sµppørtëð før \\"Ñøñë\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","noneUnknownMember":"[4KvEX][นั้\\"{ñæmë}\\" ïs ñøt æ kñøwñ mëmþër øf \\"Ñøñë\\"Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","notRequiredArgCount":"[uOeAb][นั้Ëxpëçtëð æ sïñglë tÿpë ærgµmëñt æftër \\"ÑøtRëqµïrëð\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","notRequiredNotInTypedDict":"[Vl6XL][นั้\\"ÑøtRëqµïrëð\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","objectNotCallable":"[bzlKk][นั้Øþjëçt øf tÿpë \\"{tÿpë}\\" ïs ñøt çællæþlëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","obscuredClassDeclaration":"[ixjN9][นั้Çlæss ðëçlærætïøñ \\"{ñæmë}\\" ïs øþsçµrëð þÿ æ ðëçlærætïøñ øf thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","obscuredFunctionDeclaration":"[O71DX][นั้Fµñçtïøñ ðëçlærætïøñ \\"{ñæmë}\\" ïs øþsçµrëð þÿ æ ðëçlærætïøñ øf thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","obscuredMethodDeclaration":"[m04yf][นั้Mëthøð ðëçlærætïøñ \\"{ñæmë}\\" ïs øþsçµrëð þÿ æ ðëçlærætïøñ øf thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","obscuredParameterDeclaration":"[NaF76][นั้Pæræmëtër ðëçlærætïøñ \\"{ñæmë}\\" ïs øþsçµrëð þÿ æ ðëçlærætïøñ øf thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","obscuredTypeAliasDeclaration":"[0GZdR][นั้Tÿpë ælïæs ðëçlærætïøñ \\"{ñæmë}\\" ïs øþsçµrëð þÿ æ ðëçlærætïøñ øf thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","obscuredVariableDeclaration":"[HR10j][นั้Ðëçlærætïøñ \\"{ñæmë}\\" ïs øþsçµrëð þÿ æ ðëçlærætïøñ øf thë sæmë ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","operatorLessOrGreaterDeprecated":"[bNZp7][นั้Øpërætør \\"<>\\" ïs ñøt sµppørtëð ïñ Pÿthøñ 3; µsë \\"!=\\" ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","optionalExtraArgs":"[yW5W0][นั้Ëxpëçtëð øñë tÿpë ærgµmëñt æftër \\"Øptïøñæl\\"Ấğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","orPatternIrrefutable":"[peFRW][นั้Ïrrëfµtæþlë pættërñ ælløwëð øñlÿ æs thë læst sµþpættërñ ïñ æñ \\"ør\\" pættërñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","orPatternMissingName":"[OxMxP][นั้Æll sµþpættërñs wïthïñ æñ \\"ør\\" pættërñ mµst tærgët thë sæmë ñæmësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overlappingKeywordArgs":"[46dQE][นั้Tÿpëð ðïçtïøñærÿ øvërlæps wïth këÿwørð pæræmëtër: {ñæmës}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","overlappingOverload":"[SCQMv][นั้Øvërløæð {øþsçµrëð} før \\"{ñæmë}\\" wïll ñëvër þë µsëð þëçæµsë ïts pæræmëtërs øvërlæp øvërløæð {øþsçµrëðßÿ}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","overloadAbstractMismatch":"[54DCM][นั้Øvërløæðëð mëthøðs mµst æll þë æþstræçt ør ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","overloadClassMethodInconsistent":"[8y6vM][นั้Øvërløæðs før \\"{ñæmë}\\" µsë @çlæssmëthøð ïñçøñsïstëñtlÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","overloadFinalInconsistencyImpl":"[0hpZY][นั้Øvërløæð før \\"{ñæmë}\\" ïs mærkëð @fïñæl þµt ïmplëmëñtætïøñ ïs ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overloadFinalInconsistencyNoImpl":"[Z6TSL][นั้Øvërløæð {ïñðëx} før \\"{ñæmë}\\" ïs mærkëð @fïñæl þµt øvërløæð 1 ïs ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overloadImplementationMismatch":"[dXlXE][นั้Øvërløæðëð ïmplëmëñtætïøñ ïs ñøt çøñsïstëñt wïth sïgñætµrë øf øvërløæð {ïñðëx}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","overloadReturnTypeMismatch":"[6BN74][นั้Øvërløæð {prëvÏñðëx} før \\"{ñæmë}\\" øvërlæps øvërløæð {ñëwÏñðëx} æñð rëtµrñs æñ ïñçømpætïþlë tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","overloadStaticMethodInconsistent":"[PKQvM][นั้Øvërløæðs før \\"{ñæmë}\\" µsë @stætïçmëthøð ïñçøñsïstëñtlÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","overloadWithoutImplementation":"[mn33a][นั้\\"{ñæmë}\\" ïs mærkëð æs øvërløæð, þµt ñø ïmplëmëñtætïøñ ïs prøvïðëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overriddenMethodNotFound":"[YKdBy][นั้Mëthøð \\"{ñæmë}\\" ïs mærkëð æs øvërrïðë, þµt ñø þæsë mëthøð øf sæmë ñæmë ïs prësëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","overrideDecoratorMissing":"[2BnJq][นั้Mëthøð \\"{ñæmë}\\" ïs ñøt mærkëð æs øvërrïðë þµt ïs øvërrïðïñg æ mëthøð ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","paramAfterKwargsParam":"[wJZkp][นั้Pæræmëtër çæññøt følløw \\"**\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","paramAlreadyAssigned":"[srzhT][นั้Pæræmëtër \\"{ñæmë}\\" ïs ælrëæðÿ æssïgñëðẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","paramAnnotationMissing":"[1OYGc][นั้Tÿpë æññøtætïøñ ïs mïssïñg før pæræmëtër \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","paramAssignmentMismatch":"[Q8zha][นั้Ëxprëssïøñ øf tÿpë \\"{søµrçëTÿpë}\\" çæññøt þë æssïgñëð tø pæræmëtër øf tÿpë \\"{pæræmTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","paramNameMissing":"[ivXu4][นั้Ñø pæræmëtër ñæmëð \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","paramSpecArgsKwargsUsage":"[oVRV0][นั้\\"ærgs\\" æñð \\"kwærgs\\" mëmþërs øf Pæræm§pëç mµst þøth æppëær wïthïñ æ fµñçtïøñ sïgñætµrëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","paramSpecArgsMissing":"[rd6zO][นั้Ærgµmëñts før Pæræm§pëç \\"{tÿpë}\\" ærë mïssïñgẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","paramSpecArgsUsage":"[2U9SN][นั้\\"ærgs\\" mëmþër øf Pæræm§pëç ïs vælïð øñlÿ whëñ µsëð wïth *ærgs pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","paramSpecAssignedName":"[ww5mM][นั้Pæræm§pëç mµst þë æssïgñëð tø æ værïæþlë ñæmëð \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","paramSpecContext":"[y6xyK][นั้Pæræm§pëç ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","paramSpecDefaultNotTuple":"[6Tdff][นั้Ëxpëçtëð ëllïpsïs, æ tµplë ëxprëssïøñ, ør Pæræm§pëç før ðëfæµlt vælµë øf Pæræm§pëçẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","paramSpecFirstArg":"[W2Y3X][นั้Ëxpëçtëð ñæmë øf Pæræm§pëç æs fïrst ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","paramSpecKwargsUsage":"[2UE71][นั้\\"kwærgs\\" mëmþër øf Pæræm§pëç ïs vælïð øñlÿ whëñ µsëð wïth **kwærgs pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","paramSpecNotUsedByOuterScope":"[5Pk7H][นั้Pæræm§pëç \\"{ñæmë}\\" hæs ñø mëæñïñg ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","paramSpecScopedToReturnType":"[vVuXS][นั้Pæræm§pëç \\"{ñæmë}\\" ïs sçøpëð tø æ çællæþlë wïthïñ thë rëtµrñ tÿpë æñð çæññøt þë rëfërëñçëð ïñ thë fµñçtïøñ þøðÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","paramSpecUnknownArg":"[6zeYc][นั้Pæræm§pëç ðøës ñøt sµppørt mørë thæñ øñë ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","paramSpecUnknownMember":"[GhhiY][นั้\\"{ñæmë}\\" ïs ñøt æ kñøwñ mëmþër øf Pæræm§pëçẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","paramSpecUnknownParam":"[YADLo][นั้\\"{ñæmë}\\" ïs µñkñøwñ pæræmëtër tø Pæræm§pëçẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","paramTypeCovariant":"[USAuF][นั้Çøværïæñt tÿpë værïæþlë çæññøt þë µsëð ïñ pæræmëtër tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","paramTypePartiallyUnknown":"[1ShLP][นั้Tÿpë øf pæræmëtër \\"{pæræmÑæmë}\\" ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","paramTypeUnknown":"[fweDh][นั้Tÿpë øf pæræmëtër \\"{pæræmÑæmë}\\" ïs µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","parenthesizedContextManagerIllegal":"[NBxCb][นั้Pærëñthësës wïthïñ \\"wïth\\" stætëmëñt rëqµïrës Pÿthøñ 3.9 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","patternNeverMatches":"[lyG7p][นั้Pættërñ wïll ñëvër þë mætçhëð før sµþjëçt tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","positionArgAfterNamedArg":"[szCz2][นั้Pøsïtïøñæl ærgµmëñt çæññøt æppëær æftër këÿwørð ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","positionOnlyAfterArgs":"[Vqb7c][นั้Pøsïtïøñ-øñlÿ pæræmëtër sëpærætør ñøt ælløwëð æftër \\"*\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","positionOnlyAfterKeywordOnly":"[z1FIK][นั้\\"/\\" pæræmëtër mµst æppëær þëførë \\"*\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","positionOnlyAfterNon":"[iXb2r][นั้Pøsïtïøñ-øñlÿ pæræmëtër ñøt ælløwëð æftër pæræmëtër thæt ïs ñøt pøsïtïøñ-øñlÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","positionOnlyFirstParam":"[bmnbs][นั้Pøsïtïøñ-øñlÿ pæræmëtër sëpærætør ñøt ælløwëð æs fïrst pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","positionOnlyIncompatible":"[Ick28][นั้Pøsïtïøñ-øñlÿ pæræmëtër sëpærætør rëqµïrës Pÿthøñ 3.8 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","privateImportFromPyTypedModule":"[VRdf4][นั้\\"{ñæmë}\\" ïs ñøt ëxpørtëð frøm møðµlë \\"{møðµlë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","privateUsedOutsideOfClass":"[3YBNL][นั้\\"{ñæmë}\\" ïs prïvætë æñð µsëð øµtsïðë øf thë çlæss ïñ whïçh ït ïs ðëçlærëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","privateUsedOutsideOfModule":"[TgDgt][นั้\\"{ñæmë}\\" ïs prïvætë æñð µsëð øµtsïðë øf thë møðµlë ïñ whïçh ït ïs ðëçlærëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","propertyOverridden":"[mwp5C][นั้\\"{ñæmë}\\" ïñçørrëçtlÿ øvërrïðës prøpërtÿ øf sæmë ñæmë ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","propertyStaticMethod":"[qs3pr][นั้§tætïç mëthøðs ñøt ælløwëð før prøpërtÿ gëttër, sëttër ør ðëlëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","protectedUsedOutsideOfClass":"[z2Y7X][นั้\\"{ñæmë}\\" ïs prøtëçtëð æñð µsëð øµtsïðë øf thë çlæss ïñ whïçh ït ïs ðëçlærëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","protocolBaseClass":"[lv3rP][นั้Prøtøçøl çlæss \\"{çlæssTÿpë}\\" çæññøt ðërïvë frøm ñøñ-prøtøçøl çlæss \\"{þæsëTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","protocolBaseClassWithTypeArgs":"[tpYEx][นั้Tÿpë ærgµmëñts ærë ñøt ælløwëð wïth Prøtøçøl çlæss whëñ µsïñg tÿpë pæræmëtër sÿñtæxẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","protocolIllegal":"[jYjYe][นั้Üsë øf \\"Prøtøçøl\\" rëqµïrës Pÿthøñ 3.7 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","protocolNotAllowed":"[2GEt6][นั้\\"Prøtøçøl\\" çæññøt þë µsëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","protocolUnsafeOverlap":"[79LbC][นั้Çlæss øvërlæps \\"{ñæmë}\\" µñsæfëlÿ æñð çøµlð prøðµçë æ mætçh æt rµñtïmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","protocolVarianceContravariant":"[B4htZ][นั้Tÿpë værïæþlë \\"{værïæþlë}\\" µsëð ïñ gëñërïç prøtøçøl \\"{çlæss}\\" shøµlð þë çøñtræværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","protocolVarianceCovariant":"[Hcnn5][นั้Tÿpë værïæþlë \\"{værïæþlë}\\" µsëð ïñ gëñërïç prøtøçøl \\"{çlæss}\\" shøµlð þë çøværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","protocolVarianceInvariant":"[o8oB7][นั้Tÿpë værïæþlë \\"{værïæþlë}\\" µsëð ïñ gëñërïç prøtøçøl \\"{çlæss}\\" shøµlð þë ïñværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","pyrightCommentInvalidDiagnosticBoolValue":"[eaJY0][นั้Pÿrïght çømmëñt ðïrëçtïvë mµst þë følløwëð þÿ \\"=\\" æñð æ vælµë øf trµë ør fælsëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","pyrightCommentInvalidDiagnosticSeverityValue":"[2YA7K][นั้Pÿrïght çømmëñt ðïrëçtïvë mµst þë følløwëð þÿ \\"=\\" æñð æ vælµë øf trµë, fælsë, ërrør, wærñïñg, ïñførmætïøñ, ør ñøñëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","pyrightCommentMissingDirective":"[yy6rB][นั้Pÿrïght çømmëñt mµst þë følløwëð þÿ æ ðïrëçtïvë (þæsïç ør strïçt) ør æ ðïægñøstïç rµlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","pyrightCommentNotOnOwnLine":"[mM2bV][นั้Pÿrïght çømmëñts µsëð tø çøñtrøl fïlë-lëvël sëttïñgs mµst æppëær øñ thëïr øwñ lïñëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","pyrightCommentUnknownDiagnosticRule":"[DFAZp][นั้\\"{rµlë}\\" ïs æñ µñkñøwñ ðïægñøstïç rµlë før pÿrïght çømmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","pyrightCommentUnknownDiagnosticSeverityValue":"[Tgt0Y][นั้\\"{vælµë}\\" ïs ïñvælïð vælµë før pÿrïght çømmëñt; ëxpëçtëð trµë, fælsë, ërrør, wærñïñg, ïñførmætïøñ, ør ñøñëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","pyrightCommentUnknownDirective":"[HD6T4][นั้\\"{ðïrëçtïvë}\\" ïs æñ µñkñøwñ ðïrëçtïvë før pÿrïght çømmëñt; ëxpëçtëð \\"strïçt\\" ør \\"þæsïç\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","readOnlyArgCount":"[B1Erm][นั้Ëxpëçtëð æ sïñglë tÿpë ærgµmëñt æftër \\"RëæðØñlÿ\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","readOnlyNotInTypedDict":"[xJrLN][นั้\\"RëæðØñlÿ\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","recursiveDefinition":"[G3UUN][นั้Tÿpë øf \\"{ñæmë}\\" çøµlð ñøt þë ðëtërmïñëð þëçæµsë ït rëfërs tø ïtsëlfẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","relativeImportNotAllowed":"[JZqjC][นั้Rëlætïvë ïmpørts çæññøt þë µsëð wïth \\"ïmpørt .æ\\" førm; µsë \\"frøm . ïmpørt æ\\" ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","requiredArgCount":"[aZX4z][นั้Ëxpëçtëð æ sïñglë tÿpë ærgµmëñt æftër \\"Rëqµïrëð\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","requiredNotInTypedDict":"[TArW6][นั้\\"Rëqµïrëð\\" ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","returnInAsyncGenerator":"[qb5pt][นั้Rëtµrñ stætëmëñt wïth vælµë ïs ñøt ælløwëð ïñ æsÿñç gëñërætørẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","returnMissing":"[kPevK][นั้Fµñçtïøñ wïth ðëçlærëð rëtµrñ tÿpë \\"{rëtµrñTÿpë}\\" mµst rëtµrñ vælµë øñ æll çøðë pæthsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","returnOutsideFunction":"[O4SJp][นั้\\"rëtµrñ\\" çæñ þë µsëð øñlÿ wïthïñ æ fµñçtïøñẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","returnTypeContravariant":"[KkMhh][นั้Çøñtræværïæñt tÿpë værïæþlë çæññøt þë µsëð ïñ rëtµrñ tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","returnTypeMismatch":"[QYqHy][นั้Ëxprëssïøñ øf tÿpë \\"{ëxprTÿpë}\\" çæññøt þë æssïgñëð tø rëtµrñ tÿpë \\"{rëtµrñTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","returnTypePartiallyUnknown":"[261DZ][นั้Rëtµrñ tÿpë, \\"{rëtµrñTÿpë}\\", ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","returnTypeUnknown":"[II3Ix][นั้Rëtµrñ tÿpë ïs µñkñøwñẤğ倪İЂҰक्र्นั้ढूँ]","revealLocalsArgs":"[qKEIL][นั้Ëxpëçtëð ñø ærgµmëñts før \\"rëvëæl_løçæls\\" çællẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","revealLocalsNone":"[xOTfI][นั้Ñø løçæls ïñ thïs sçøpëẤğ倪İЂҰक्र्นั้ढूँ]","revealTypeArgs":"[Sdo9V][นั้Ëxpëçtëð æ sïñglë pøsïtïøñæl ærgµmëñt før \\"rëvëæl_tÿpë\\" çællẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","revealTypeExpectedTextArg":"[6cFBk][นั้Thë \\"ëxpëçtëð_tëxt\\" ærgµmëñt før fµñçtïøñ \\"rëvëæl_tÿpë\\" mµst þë æ str lïtëræl vælµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","revealTypeExpectedTextMismatch":"[ILnEV][นั้Tÿpë tëxt mïsmætçh; ëxpëçtëð \\"{ëxpëçtëð}\\" þµt rëçëïvëð \\"{rëçëïvëð}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","revealTypeExpectedTypeMismatch":"[3XS8T][นั้Tÿpë mïsmætçh; ëxpëçtëð \\"{ëxpëçtëð}\\" þµt rëçëïvëð \\"{rëçëïvëð}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","selfTypeContext":"[Hugyy][นั้\\"§ëlf\\" ïs ñøt vælïð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","selfTypeMetaclass":"[YvoBy][นั้\\"§ëlf\\" çæññøt þë µsëð wïthïñ æ mëtæçlæss (æ sµþçlæss øf \\"tÿpë\\")Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","selfTypeWithTypedSelfOrCls":"[sYgyY][นั้\\"§ëlf\\" çæññøt þë µsëð ïñ æ fµñçtïøñ wïth æ `sëlf` ør `çls` pæræmëtër thæt hæs æ tÿpë æññøtætïøñ øthër thæñ \\"§ëlf\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","setterGetterTypeMismatch":"[8ZD1z][นั้Prøpërtÿ sëttër vælµë tÿpë ïs ñøt æssïgñæþlë tø thë gëttër rëtµrñ tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","singleOverload":"[YQVUc][นั้\\"{ñæmë}\\" ïs mærkëð æs øvërløæð, þµt æððïtïøñæl øvërløæðs ærë mïssïñgẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","slotsAttributeError":"[OF4rK][นั้\\"{ñæmë}\\" ïs ñøt spëçïfïëð ïñ __sløts__Ấğ倪İЂҰक्र्तिृまẤนั้ढूँ]","slotsClassVarConflict":"[tcS3q][นั้\\"{ñæmë}\\" çøñflïçts wïth ïñstæñçë værïæþlë ðëçlærëð ïñ __sløts__Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","starPatternInAsPattern":"[ZFdWe][นั้§tær pættërñ çæññøt þë µsëð wïth \\"æs\\" tærgëtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","starPatternInOrPattern":"[y9LX3][นั้§tær pættërñ çæññøt þë ØRëð wïthïñ øthër pættërñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","starStarWildcardNotAllowed":"[Ll1UV][นั้** çæññøt þë µsëð wïth wïlðçærð \\"_\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","staticClsSelfParam":"[mO4QU][นั้§tætïç mëthøðs shøµlð ñøt tækë æ \\"sëlf\\" ør \\"çls\\" pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","stdlibModuleOverridden":"[AV6K3][นั้\\"{pæth}\\" ïs øvërrïðïñg thë stðlïþ møðµlë \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","stringNonAsciiBytes":"[dFNRn][นั้Ñøñ-Æ§ÇÏÏ çhæræçtër ñøt ælløwëð ïñ þÿtës strïñg lïtërælẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","stringNotSubscriptable":"[hKZT7][นั้§trïñg ëxprëssïøñ çæññøt þë sµþsçrïptëð ïñ tÿpë æññøtætïøñ; ëñçløsë ëñtïrë æññøtætïøñ ïñ qµøtësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","stringUnsupportedEscape":"[K2WsY][นั้Üñsµppørtëð ësçæpë sëqµëñçë ïñ strïñg lïtërælẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","stringUnterminated":"[jUKYA][นั้§trïñg lïtëræl ïs µñtërmïñætëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","stubFileMissing":"[Ua5GT][นั้§tµþ fïlë ñøt føµñð før \\"{ïmpørtÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤนั้ढूँ]","stubUsesGetAttr":"[KMBwK][นั้Tÿpë stµþ fïlë ïs ïñçømplëtë; \\"__gëtættr__\\" øþsçµrës tÿpë ërrørs før møðµlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","sublistParamsIncompatible":"[582LE][นั้§µþlïst pæræmëtërs ærë ñøt sµppørtëð ïñ Pÿthøñ 3.xẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","superCallArgCount":"[iLYq6][นั้Ëxpëçtëð ñø mørë thæñ twø ærgµmëñts tø \\"sµpër\\" çællẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","superCallFirstArg":"[HSEvD][นั้Ëxpëçtëð çlæss tÿpë æs fïrst ærgµmëñt tø \\"sµpër\\" çæll þµt rëçëïvëð \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","superCallSecondArg":"[dKoHi][นั้§ëçøñð ærgµmëñt tø \\"sµpër\\" çæll mµst þë øþjëçt ør çlæss thæt ðërïvës frøm \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","superCallZeroArgForm":"[0XO27][นั้Zërø-ærgµmëñt førm øf \\"sµpër\\" çæll ïs vælïð øñlÿ wïthïñ æ mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","superCallZeroArgFormStaticMethod":"[9hJPB][นั้Zërø-ærgµmëñt førm øf \\"sµpër\\" çæll ïs ñøt vælïð wïthïñ æ stætïç mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","symbolIsPossiblyUnbound":"[cUgue][นั้\\"{ñæmë}\\" ïs pøssïþlÿ µñþøµñðẤğ倪İЂҰक्र्तिृนั้ढूँ]","symbolIsUnbound":"[zhGl5][นั้\\"{ñæmë}\\" ïs µñþøµñðẤğ倪İЂҰक्นั้ढूँ]","symbolIsUndefined":"[qCm6F][นั้\\"{ñæmë}\\" ïs ñøt ðëfïñëðẤğ倪İЂҰक्र्นั้ढूँ]","symbolOverridden":"[JwRrv][นั้\\"{ñæmë}\\" øvërrïðës sÿmþøl øf sæmë ñæmë ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","ternaryNotAllowed":"[5NH6C][นั้Tërñærÿ ëxprëssïøñ ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","totalOrderingMissingMethod":"[eYfjn][นั้Çlæss mµst ðëfïñë øñë øf \\"__lt__\\", \\"__lë__\\", \\"__gt__\\", ør \\"__gë__\\" tø µsë tøtæl_ørðërïñgẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","trailingCommaInFromImport":"[NcaZY][นั้Træïlïñg çømmæ ñøt ælløwëð wïthøµt sµrrøµñðïñg pærëñthësësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","tryWithoutExcept":"[6z9oA][นั้Trÿ stætëmëñt mµst hævë æt lëæst øñë ëxçëpt ør fïñællÿ çlæµsëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","tupleAssignmentMismatch":"[xySRW][นั้Ëxprëssïøñ wïth tÿpë \\"{tÿpë}\\" çæññøt þë æssïgñëð tø tærgët tµplëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","tupleInAnnotation":"[j2RAZ][นั้Tµplë ëxprëssïøñ ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","tupleIndexOutOfRange":"[aNqDv][นั้Ïñðëx {ïñðëx} ïs øµt øf ræñgë før tÿpë {tÿpë}Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeAliasIllegalExpressionForm":"[4u4ay][นั้Ïñvælïð ëxprëssïøñ førm før tÿpë ælïæs ðëfïñïtïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeAliasIsRecursiveDirect":"[r8PyZ][นั้Tÿpë ælïæs \\"{ñæmë}\\" çæññøt µsë ïtsëlf ïñ ïts ðëfïñïtïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeAliasNotInModuleOrClass":"[iQpDJ][นั้Æ TÿpëÆlïæs çæñ þë ðëfïñëð øñlÿ wïthïñ æ møðµlë ør çlæss sçøpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeAliasRedeclared":"[P036x][นั้\\"{ñæmë}\\" ïs ðëçlærëð æs æ TÿpëÆlïæs æñð çæñ þë æssïgñëð øñlÿ øñçëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeAliasStatementBadScope":"[C24Up][นั้Æ tÿpë stætëmëñt çæñ þë µsëð øñlÿ wïthïñ æ møðµlë ør çlæss sçøpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeAliasStatementIllegal":"[2EW0Q][นั้Tÿpë ælïæs stætëmëñt rëqµïrës Pÿthøñ 3.12 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeAliasTypeBaseClass":"[RIpMs][นั้Æ tÿpë ælïæs ðëfïñëð ïñ æ \\"tÿpë\\" stætëmëñt çæññøt þë µsëð æs æ þæsë çlæssẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","typeAliasTypeMustBeAssigned":"[aV4Nn][นั้TÿpëÆlïæsTÿpë mµst þë æssïgñëð tø æ værïæþlë wïth thë sæmë ñæmë æs thë tÿpë ælïæsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeAliasTypeNameArg":"[dUUf1][นั้Fïrst ærgµmëñt tø TÿpëÆlïæsTÿpë mµst þë æ strïñg lïtëræl rëprësëñtïñg thë ñæmë øf thë tÿpë ælïæsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeAliasTypeNameMismatch":"[jW1bQ][นั้Ñæmë øf tÿpë ælïæs mµst mætçh thë ñæmë øf thë værïæþlë tø whïçh ït ïs æssïgñëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typeAliasTypeParamInvalid":"[RdHRE][นั้Tÿpë pæræmëtër lïst mµst þë æ tµplë çøñtæïñïñg øñlÿ TÿpëVær, TÿpëVærTµplë, ør Pæræm§pëçẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeAnnotationCall":"[7pNts][นั้Çæll ëxprëssïøñ ñøt ælløwëð ïñ tÿpë ëxprëssïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeAnnotationVariable":"[GeXWQ][นั้Værïæþlë ñøt ælløwëð ïñ tÿpë ëxprëssïøñẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typeAnnotationWithCallable":"[JJENJ][นั้Tÿpë ærgµmëñt før \\"tÿpë\\" mµst þë æ çlæss; çællæþlës ærë ñøt sµppørtëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typeArgListExpected":"[2efoA][นั้Ëxpëçtëð Pæræm§pëç, ëllïpsïs, ør lïst øf tÿpësẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeArgListNotAllowed":"[oV7JF][นั้£ïst ëxprëssïøñ ñøt ælløwëð før thïs tÿpë ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeArgsExpectingNone":"[faycH][นั้Ëxpëçtëð ñø tÿpë ærgµmëñts før çlæss \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeArgsMismatchOne":"[BBe1n][นั้Ëxpëçtëð øñë tÿpë ærgµmëñt þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeArgsMissingForAlias":"[hk8aw][นั้Ëxpëçtëð tÿpë ærgµmëñts før gëñërïç tÿpë ælïæs \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeArgsMissingForClass":"[SkdfG][นั้Ëxpëçtëð tÿpë ærgµmëñts før gëñërïç çlæss \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeArgsTooFew":"[6PAb0][นั้Tøø fëw tÿpë ærgµmëñts prøvïðëð før \\"{ñæmë}\\"; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeArgsTooMany":"[NKF2Z][นั้Tøø mæñÿ tÿpë ærgµmëñts prøvïðëð før \\"{ñæmë}\\"; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeAssignmentMismatch":"[wwjSP][นั้Ëxprëssïøñ øf tÿpë \\"{søµrçëTÿpë}\\" çæññøt þë æssïgñëð tø ðëçlærëð tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","typeAssignmentMismatchWildcard":"[qdgVA][นั้Ïmpørt sÿmþøl \\"{ñæmë}\\" hæs tÿpë \\"{søµrçëTÿpë}\\", whïçh çæññøt þë æssïgñëð tø ðëçlærëð tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeCallNotAllowed":"[OGMmG][นั้tÿpë() çæll shøµlð ñøt þë µsëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeCheckOnly":"[cSmKj][นั้\\"{ñæmë}\\" ïs mærkëð æs @tÿpë_çhëçk_øñlÿ æñð çæñ þë µsëð øñlÿ ïñ tÿpë æññøtætïøñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeCommentDeprecated":"[SRhVz][นั้Üsë øf tÿpë çømmëñts ïs ðëprëçætëð; µsë tÿpë æññøtætïøñ ïñstëæðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeExpectedClass":"[r0pdu][นั้Ëxpëçtëð tÿpë ëxprëssïøñ þµt rëçëïvëð \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeGuardArgCount":"[Zl47K][นั้Ëxpëçtëð æ sïñglë tÿpë ærgµmëñt æftër \\"TÿpëGµærð\\" ør \\"TÿpëÏs\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeGuardParamCount":"[I3HUH][นั้Üsër-ðëfïñëð tÿpë gµærð fµñçtïøñs æñð mëthøðs mµst hævë æt lëæst øñë ïñpµt pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeIsReturnType":"[5bBbd][นั้Rëtµrñ tÿpë øf TÿpëÏs (\\"{rëtµrñTÿpë}\\") ïs ñøt çøñsïstëñt wïth vælµë pæræmëtër tÿpë (\\"{tÿpë}\\")Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeNotAwaitable":"[NZ9Yu][นั้\\"{tÿpë}\\" ïs ñøt æwæïtæþlëẤğ倪İЂҰक्र्นั้ढूँ]","typeNotIntantiable":"[f3xEe][นั้\\"{tÿpë}\\" çæññøt þë ïñstæñtïætëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeNotIterable":"[XMDzF][นั้\\"{tÿpë}\\" ïs ñøt ïtëræþlëẤğ倪İЂҰक्र्นั้ढूँ]","typeNotSpecializable":"[ZCsyD][นั้Çøµlð ñøt spëçïælïzë tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","typeNotSubscriptable":"[fpefi][นั้Øþjëçt øf tÿpë \\"{tÿpë}\\" ïs ñøt sµþsçrïptæþlëẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeNotSupportBinaryOperator":"[C0OGX][นั้Øpërætør \\"{øpërætør}\\" ñøt sµppørtëð før tÿpës \\"{lëftTÿpë}\\" æñð \\"{rïghtTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typeNotSupportBinaryOperatorBidirectional":"[25nah][นั้Øpërætør \\"{øpërætør}\\" ñøt sµppørtëð før tÿpës \\"{lëftTÿpë}\\" æñð \\"{rïghtTÿpë}\\" whëñ ëxpëçtëð tÿpë ïs \\"{ëxpëçtëðTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeNotSupportUnaryOperator":"[f2pEG][นั้Øpërætør \\"{øpërætør}\\" ñøt sµppørtëð før tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeNotSupportUnaryOperatorBidirectional":"[Z51QN][นั้Øpërætør \\"{øpërætør}\\" ñøt sµppørtëð før tÿpë \\"{tÿpë}\\" whëñ ëxpëçtëð tÿpë ïs \\"{ëxpëçtëðTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeNotUsableWith":"[R7VpZ][นั้Øþjëçt øf tÿpë \\"{tÿpë}\\" çæññøt þë µsëð wïth \\"wïth\\" þëçæµsë ït ðøës ñøt ïmplëmëñt {mëthøð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeParameterBoundNotAllowed":"[iA0kz][นั้ßøµñð ør çøñstræïñt çæññøt þë µsëð wïth æ værïæðïç tÿpë pæræmëtër ør Pæræm§pëçẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typeParameterConstraintTuple":"[8wa57][นั้Tÿpë pæræmëtër çøñstræïñt mµst þë æ tµplë øf twø ør mørë tÿpësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeParameterExistingTypeParameter":"[M2QXP][นั้Tÿpë pæræmëtër \\"{ñæmë}\\" ïs ælrëæðÿ ïñ µsëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typeParameterNotDeclared":"[WD9B6][นั้Tÿpë pæræmëtër \\"{ñæmë}\\" ïs ñøt ïñçlµðëð ïñ thë tÿpë pæræmëtër lïst før \\"{çøñtæïñër}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeParametersMissing":"[7nPE2][นั้Æt lëæst øñë tÿpë pæræmëtër mµst þë spëçïfïëðẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typePartiallyUnknown":"[K72xm][นั้Tÿpë øf \\"{ñæmë}\\" ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","typeUnknown":"[flab2][นั้Tÿpë øf \\"{ñæmë}\\" ïs µñkñøwñẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeVarAssignedName":"[AnBke][นั้TÿpëVær mµst þë æssïgñëð tø æ værïæþlë ñæmëð \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarAssignmentMismatch":"[IYCuH][นั้Tÿpë \\"{tÿpë}\\" çæññøt þë æssïgñëð tø tÿpë værïæþlë \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeVarBoundAndConstrained":"[nSFES][นั้TÿpëVær çæññøt þë þøth þøµñð æñð çøñstræïñëðẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeVarBoundGeneric":"[scFkM][นั้TÿpëVær þøµñð tÿpë çæññøt þë gëñërïçẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typeVarConstraintGeneric":"[k7N05][นั้TÿpëVær çøñstræïñt tÿpë çæññøt þë gëñërïçẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typeVarDefaultBoundMismatch":"[knxtI][นั้TÿpëVær ðëfæµlt tÿpë mµst þë æ sµþtÿpë øf thë þøµñð tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarDefaultConstraintMismatch":"[BlQvu][นั้TÿpëVær ðëfæµlt tÿpë mµst þë øñë øf thë çøñstræïñëð tÿpësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeVarDefaultIllegal":"[Z5lrX][นั้Tÿpë værïæþlë ðëfæµlt tÿpës rëqµïrë Pÿthøñ 3.13 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarDefaultInvalidTypeVar":"[bOQ21][นั้Tÿpë pæræmëtër \\"{ñæmë}\\" hæs æ ðëfæµlt tÿpë thæt rëfërs tø øñë ør mørë tÿpë værïæþlës thæt ærë øµt øf sçøpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typeVarFirstArg":"[XBVgA][นั้Ëxpëçtëð ñæmë øf TÿpëVær æs fïrst ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typeVarNoMember":"[Trelb][นั้TÿpëVær \\"{tÿpë}\\" hæs ñø mëmþër \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typeVarNotSubscriptable":"[3KoEm][นั้TÿpëVær \\"{tÿpë}\\" ïs ñøt sµþsçrïptæþlëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","typeVarNotUsedByOuterScope":"[on7uQ][นั้Tÿpë værïæþlë \\"{ñæmë}\\" hæs ñø mëæñïñg ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarPossiblyUnsolvable":"[PP5xz][นั้Tÿpë værïæþlë \\"{ñæmë}\\" mæÿ gø µñsølvëð ïf çællër sµpplïës ñø ærgµmëñt før pæræmëtër \\"{pæræm}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeVarScopedToReturnType":"[AYNcY][นั้Tÿpë værïæþlë \\"{ñæmë}\\" ïs sçøpëð tø æ çællæþlë wïthïñ thë rëtµrñ tÿpë æñð çæññøt þë rëfërëñçëð ïñ thë fµñçtïøñ þøðÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeVarSingleConstraint":"[51MwX][นั้TÿpëVær mµst hævë æt lëæst twø çøñstræïñëð tÿpësẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","typeVarTupleConstraints":"[ouP8u][นั้TÿpëVærTµplë çæññøt hævë vælµë çøñstræïñtsẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typeVarTupleContext":"[Q8vE2][นั้TÿpëVærTµplë ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typeVarTupleDefaultNotUnpacked":"[S2joz][นั้TÿpëVærTµplë ðëfæµlt tÿpë mµst þë æñ µñpæçkëð tµplë ør TÿpëVærTµplëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeVarTupleMustBeUnpacked":"[TA5HX][นั้Üñpæçk øpërætør ïs rëqµïrëð før TÿpëVærTµplë vælµëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeVarTupleUnknownParam":"[fOW23][นั้\\"{ñæmë}\\" ïs µñkñøwñ pæræmëtër tø TÿpëVærTµplëẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typeVarUnknownParam":"[veXvU][นั้\\"{ñæmë}\\" ïs µñkñøwñ pæræmëtër tø TÿpëVærẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typeVarUsedByOuterScope":"[GJ5N3][นั้TÿpëVær \\"{ñæmë}\\" ïs ælrëæðÿ ïñ µsë þÿ æñ øµtër sçøpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarUsedOnlyOnce":"[vSn0W][นั้TÿpëVær \\"{ñæmë}\\" æppëærs øñlÿ øñçë ïñ gëñërïç fµñçtïøñ sïgñætµrëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeVarVariance":"[1Dxdn][นั้TÿpëVær çæññøt þë þøth çøværïæñt æñð çøñtræværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeVarWithDefaultFollowsVariadic":"[h1V5a][นั้TÿpëVær \\"{tÿpëVærÑæmë}\\" hæs æ ðëfæµlt vælµë æñð çæññøt følløw TÿpëVærTµplë \\"{værïæðïçÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarWithoutDefault":"[w630R][นั้\\"{ñæmë}\\" çæññøt æppëær æftër \\"{øthër}\\" ïñ tÿpë pæræmëtër lïst þëçæµsë ït hæs ñø ðëfæµlt tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeVarsNotInGenericOrProtocol":"[ydmAV][นั้Gëñërïç[] ør Prøtøçøl[] mµst ïñçlµðë æll tÿpë værïæþlësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictAccess":"[55CCf][นั้Çøµlð ñøt æççëss ïtëm ïñ TÿpëðÐïçtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typedDictAssignedName":"[Dkf5M][นั้TÿpëðÐïçt mµst þë æssïgñëð tø æ værïæþlë ñæmëð \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictBadVar":"[OL8Ox][นั้TÿpëðÐïçt çlæssës çæñ çøñtæïñ øñlÿ tÿpë æññøtætïøñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typedDictBaseClass":"[HxyA2][นั้Æll þæsë çlæssës før TÿpëðÐïçt çlæssës mµst ælsø þë TÿpëðÐïçt çlæssësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typedDictBoolParam":"[GALOD][นั้Ëxpëçtëð \\"{ñæmë}\\" pæræmëtër tø hævë æ vælµë øf Trµë ør FælsëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typedDictClosedExtras":"[mlkJO][นั้ßæsë çlæss \\"{ñæmë}\\" ïs æ çløsëð TÿpëðÐïçt; ëxtræ ïtëms mµst þë tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typedDictClosedNoExtras":"[BCyXd][นั้ßæsë çlæss \\"{ñæmë}\\" ïs æ çløsëð TÿpëðÐïçt; ëxtræ ïtëms ærë ñøt ælløwëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typedDictDelete":"[bdBu7][นั้Çøµlð ñøt ðëlëtë ïtëm ïñ TÿpëðÐïçtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typedDictEmptyName":"[h45e7][นั้Ñæmës wïthïñ æ TÿpëðÐïçt çæññøt þë ëmptÿẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typedDictEntryName":"[NT4np][นั้Ëxpëçtëð strïñg lïtëræl før ðïçtïøñærÿ ëñtrÿ ñæmëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typedDictEntryUnique":"[nWy0L][นั้Ñæmës wïthïñ æ ðïçtïøñærÿ mµst þë µñïqµëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typedDictExtraArgs":"[0gX32][นั้Ëxtræ TÿpëðÐïçt ærgµmëñts ñøt sµppørtëðẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typedDictFieldNotRequiredRedefinition":"[rNYD1][นั้TÿpëðÐïçt ïtëm \\"{ñæmë}\\" çæññøt þë rëðëfïñëð æs ÑøtRëqµïrëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typedDictFieldReadOnlyRedefinition":"[8IFAz][นั้TÿpëðÐïçt ïtëm \\"{ñæmë}\\" çæññøt þë rëðëfïñëð æs RëæðØñlÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictFieldRequiredRedefinition":"[lpw97][นั้TÿpëðÐïçt ïtëm \\"{ñæmë}\\" çæññøt þë rëðëfïñëð æs RëqµïrëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictFirstArg":"[OPlNk][นั้Ëxpëçtëð TÿpëðÐïçt çlæss ñæmë æs fïrst ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","typedDictInitsubclassParameter":"[HMpfK][นั้TÿpëðÐïçt ðøës ñøt sµppørt __ïñït_sµþçlæss__ pæræmëtër \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","typedDictNotAllowed":"[UWg4F][นั้\\"TÿpëðÐïçt\\" çæññøt þë µsëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typedDictSecondArgDict":"[mwrv7][นั้Ëxpëçtëð ðïçt ør këÿwørð pæræmëtër æs sëçøñð pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictSecondArgDictEntry":"[oAT5Z][นั้Ëxpëçtëð sïmplë ðïçtïøñærÿ ëñtrÿẤğ倪İЂҰक्र्तिृนั้ढूँ]","typedDictSet":"[30hTC][นั้Çøµlð ñøt æssïgñ ïtëm ïñ TÿpëðÐïçtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","unaccessedClass":"[dou8i][นั้Çlæss \\"{ñæmë}\\" ïs ñøt æççëssëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","unaccessedFunction":"[AdgDz][นั้Fµñçtïøñ \\"{ñæmë}\\" ïs ñøt æççëssëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","unaccessedImport":"[2a90g][นั้Ïmpørt \\"{ñæmë}\\" ïs ñøt æççëssëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","unaccessedSymbol":"[MmnM7][นั้\\"{ñæmë}\\" ïs ñøt æççëssëðẤğ倪İЂҰक्र्นั้ढूँ]","unaccessedVariable":"[n5l1e][นั้Værïæþlë \\"{ñæmë}\\" ïs ñøt æççëssëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","unannotatedFunctionSkipped":"[Ovgyl][นั้Æñælÿsïs øf fµñçtïøñ \\"{ñæmë}\\" ïs skïppëð þëçæµsë ït ïs µñæññøtætëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","unaryOperationNotAllowed":"[2WB31][นั้Üñærÿ øpërætør ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unexpectedAsyncToken":"[fKSJb][นั้Ëxpëçtëð \\"ðëf\\", \\"wïth\\" ør \\"før\\" tø følløw \\"æsÿñç\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","unexpectedExprToken":"[MtBsu][นั้Üñëxpëçtëð tøkëñ æt ëñð øf ëxprëssïøñẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","unexpectedIndent":"[uZUVS][นั้Üñëxpëçtëð ïñðëñtætïøñẤğ倪İЂҰक्र्นั้ढूँ]","unexpectedUnindent":"[yqwy4][นั้Üñïñðëñt ñøt ëxpëçtëðẤğ倪İЂҰक्นั้ढूँ]","unhashableDictKey":"[pIvHj][นั้Ðïçtïøñærÿ këÿ mµst þë hæshæþlëẤğ倪İЂҰक्र्तिृนั้ढूँ]","unhashableSetEntry":"[rWf72][นั้§ët ëñtrÿ mµst þë hæshæþlëẤğ倪İЂҰक्र्นั้ढूँ]","uninitializedAbstractVariables":"[SpCPH][นั้Værïæþlës ðëfïñëð ïñ æþstræçt þæsë çlæss ærë ñøt ïñïtïælïzëð ïñ fïñæl çlæss \\"{çlæssTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","uninitializedInstanceVariable":"[5pgFw][นั้Ïñstæñçë værïæþlë \\"{ñæmë}\\" ïs ñøt ïñïtïælïzëð ïñ thë çlæss þøðÿ ør __ïñït__ mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","unionForwardReferenceNotAllowed":"[MOLby][นั้Üñïøñ sÿñtæx çæññøt þë µsëð wïth strïñg øpëræñð; µsë qµøtës ærøµñð ëñtïrë ëxprëssïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","unionSyntaxIllegal":"[vbTDG][นั้Æltërñætïvë sÿñtæx før µñïøñs rëqµïrës Pÿthøñ 3.10 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unionTypeArgCount":"[vc6vA][นั้Üñïøñ rëqµïrës twø ør mørë tÿpë ærgµmëñtsẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","unionUnpackedTuple":"[owRjE][นั้Üñïøñ çæññøt ïñçlµðë æñ µñpæçkëð tµplëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","unionUnpackedTypeVarTuple":"[a6msY][นั้Üñïøñ çæññøt ïñçlµðë æñ µñpæçkëð TÿpëVærTµplëẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unnecessaryCast":"[QgPoI][นั้Üññëçëssærÿ \\"çæst\\" çæll; tÿpë ïs ælrëæðÿ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","unnecessaryIsInstanceAlways":"[gX4s7][นั้Üññëçëssærÿ ïsïñstæñçë çæll; \\"{tëstTÿpë}\\" ïs ælwæÿs æñ ïñstæñçë øf \\"{çlæssTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unnecessaryIsSubclassAlways":"[BzHtx][นั้Üññëçëssærÿ ïssµþçlæss çæll; \\"{tëstTÿpë}\\" ïs ælwæÿs æ sµþçlæss øf \\"{çlæssTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unnecessaryPyrightIgnore":"[7QhdX][นั้Üññëçëssærÿ \\"# pÿrïght: ïgñørë\\" çømmëñtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","unnecessaryPyrightIgnoreRule":"[0ESoQ][นั้Üññëçëssærÿ \\"# pÿrïght: ïgñørë\\" rµlë: \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unnecessaryTypeIgnore":"[IoWr9][นั้Üññëçëssærÿ \\"# tÿpë: ïgñørë\\" çømmëñtẤğ倪İЂҰक्र्तिृまนั้ढूँ]","unpackArgCount":"[bkAT1][นั้Ëxpëçtëð æ sïñglë tÿpë ærgµmëñt æftër \\"Üñpæçk\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unpackExpectedTypeVarTuple":"[CWX8o][นั้Ëxpëçtëð TÿpëVærTµplë ør tµplë æs tÿpë ærgµmëñt før ÜñpæçkẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unpackExpectedTypedDict":"[ha9qw][นั้Ëxpëçtëð TÿpëðÐïçt tÿpë ærgµmëñt før ÜñpæçkẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","unpackIllegalInComprehension":"[7a4pV][นั้Üñpæçk øpërætïøñ ñøt ælløwëð ïñ çømprëhëñsïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unpackInAnnotation":"[6gqFu][นั้Üñpæçk øpërætør ñøt ælløwëð ïñ tÿpë æññøtætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unpackInDict":"[eKn69][นั้Üñpæçk øpërætïøñ ñøt ælløwëð ïñ ðïçtïøñærïësẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unpackInSet":"[lKyO0][นั้Üñpæçk øpërætør ñøt ælløwëð wïthïñ æ sëtẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","unpackNotAllowed":"[MZq6e][นั้Üñpæçk ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","unpackOperatorNotAllowed":"[lMq2B][นั้Üñpæçk øpërætïøñ ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","unpackTuplesIllegal":"[RJvzW][นั้Üñpæçk øpërætïøñ ñøt ælløwëð ïñ tµplës prïør tø Pÿthøñ 3.8Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unpackedArgInTypeArgument":"[skxlo][นั้Üñpæçkëð ærgµmëñts çæññøt þë µsëð ïñ tÿpë ærgµmëñt lïstsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","unpackedArgWithVariadicParam":"[ZP3kP][นั้Üñpæçkëð ærgµmëñt çæññøt þë µsëð før TÿpëVærTµplë pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unpackedDictArgumentNotMapping":"[iSTnU][นั้Ærgµmëñt ëxprëssïøñ æftër ** mµst þë æ mæppïñg wïth æ \\"str\\" këÿ tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","unpackedDictSubscriptIllegal":"[slATr][นั้Ðïçtïøñærÿ µñpæçk øpërætør ïñ sµþsçrïpt ïs ñøt ælløwëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","unpackedSubscriptIllegal":"[2CpZz][นั้Üñpæçk øpërætør ïñ sµþsçrïpt rëqµïrës Pÿthøñ 3.11 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unpackedTypeVarTupleExpected":"[tgdHs][นั้Ëxpëçtëð µñpæçkëð TÿpëVærTµplë; µsë Üñpæçk[{ñæmë1}] ør *{ñæmë2}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","unpackedTypedDictArgument":"[iCgjR][นั้Üñæþlë tø mætçh µñpæçkëð TÿpëðÐïçt ærgµmëñt tø pæræmëtërsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unreachableCode":"[bpJSK][นั้Çøðë ïs µñrëæçhæþlëẤğ倪İЂҰक्นั้ढूँ]","unreachableExcept":"[zFMWg][นั้Ëxçëpt çlæµsë ïs µñrëæçhæþlë þëçæµsë ëxçëptïøñ ïs ælrëæðÿ hæñðlëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","unsupportedDunderAllOperation":"[KsX0f][นั้Øpërætïøñ øñ \\"__æll__\\" ïs ñøt sµppørtëð, sø ëxpørtëð sÿmþøl lïst mæÿ þë ïñçørrëçtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","unusedCallResult":"[9IsV5][นั้Rësµlt øf çæll ëxprëssïøñ ïs øf tÿpë \\"{tÿpë}\\" æñð ïs ñøt µsëð; æssïgñ tø værïæþlë \\"_\\" ïf thïs ïs ïñtëñtïøñælẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","unusedCoroutine":"[nQUJ2][นั้Rësµlt øf æsÿñç fµñçtïøñ çæll ïs ñøt µsëð; µsë \\"æwæït\\" ør æssïgñ rësµlt tø værïæþlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","unusedExpression":"[ghmaU][นั้Ëxprëssïøñ vælµë ïs µñµsëðẤğ倪İЂҰक्र्นั้ढूँ]","varAnnotationIllegal":"[v2cs9][นั้Tÿpë æññøtætïøñs før værïæþlës rëqµïrës Pÿthøñ 3.6 ør ñëwër; µsë tÿpë çømmëñt før çømpætïþïlïtÿ wïth prëvïøµs vërsïøñsẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","variableFinalOverride":"[LcrNS][นั้Værïæþlë \\"{ñæmë}\\" ïs mærkëð Fïñæl æñð øvërrïðës ñøñ-Fïñæl værïæþlë øf sæmë ñæmë ïñ çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","variadicTypeArgsTooMany":"[1QX0D][นั้Tÿpë ærgµmëñt lïst çæñ hævë æt møst øñë µñpæçkëð TÿpëVærTµplë ør tµplëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","variadicTypeParamTooManyAlias":"[43VIR][นั้Tÿpë ælïæs çæñ hævë æt møst øñë TÿpëVærTµplë tÿpë pæræmëtër þµt rëçëïvëð mµltïplë ({ñæmës})Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","variadicTypeParamTooManyClass":"[fboqC][นั้Gëñërïç çlæss çæñ hævë æt møst øñë TÿpëVærTµplë tÿpë pæræmëtër þµt rëçëïvëð mµltïplë ({ñæmës})Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","walrusIllegal":"[iR3y3][นั้Øpërætør \\":=\\" rëqµïrës Pÿthøñ 3.8 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","walrusNotAllowed":"[kdD5j][นั้Øpërætør \\":=\\" ïs ñøt ælløwëð ïñ thïs çøñtëxt wïthøµt sµrrøµñðïñg pærëñthësësẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","wildcardInFunction":"[NyGOv][นั้Wïlðçærð ïmpørt ñøt ælløwëð wïthïñ æ çlæss ør fµñçtïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","wildcardLibraryImport":"[Yk3ai][นั้Wïlðçærð ïmpørt frøm æ lïþrærÿ ñøt ælløwëðẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","wildcardPatternTypePartiallyUnknown":"[eRR5M][นั้Tÿpë çæptµrëð þÿ wïlðçærð pættërñ ïs pærtïællÿ µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","wildcardPatternTypeUnknown":"[Bo3gT][นั้Tÿpë çæptµrëð þÿ wïlðçærð pættërñ ïs µñkñøwñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","yieldFromIllegal":"[DkXto][นั้Üsë øf \\"ÿïëlð frøm\\" rëqµïrës Pÿthøñ 3.3 ør ñëwërẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","yieldFromOutsideAsync":"[ZONEz][นั้\\"ÿïëlð frøm\\" ñøt ælløwëð ïñ æñ æsÿñç fµñçtïøñẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","yieldOutsideFunction":"[2lDBQ][นั้\\"ÿïëlð\\" ñøt ælløwëð øµtsïðë øf æ fµñçtïøñ ør læmþðæẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","yieldWithinListCompr":"[3Rv4s][นั้\\"ÿïëlð\\" ñøt ælløwëð ïñsïðë æ lïst çømprëhëñsïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","zeroCaseStatementsFound":"[ArU3j][นั้Mætçh stætëmëñt mµst ïñçlµðë æt lëæst øñë çæsë stætëmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","zeroLengthTupleNotAllowed":"[3gVpF][นั้Zërø-lëñgth tµplë ïs ñøt ælløwëð ïñ thïs çøñtëxtẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]"},"DiagnosticAddendum":{"annotatedNotAllowed":"[Mws6g][นั้\\"Æññøtætëð\\" spëçïæl førm çæññøt þë µsëð wïth ïñstæñçë æñð çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","argParam":"[nmvvb][นั้Ærgµmëñt çørrëspøñðs tø pæræmëtër \\"{pæræmÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","argParamFunction":"[7Xwg8][นั้Ærgµmëñt çørrëspøñðs tø pæræmëtër \\"{pæræmÑæmë}\\" ïñ fµñçtïøñ \\"{fµñçtïøñÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","argsParamMissing":"[vg3b8][นั้Pæræmëtër \\"*{pæræmÑæmë}\\" hæs ñø çørrëspøñðïñg pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","argsPositionOnly":"[sNlU1][นั้Pøsïtïøñ-øñlÿ pæræmëtër mïsmætçh; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","argumentType":"[JJxeD][นั้Ærgµmëñt tÿpë ïs \\"{tÿpë}\\"Ấğ倪İЂҰक्र्นั้ढूँ]","argumentTypes":"[Omlwm][นั้Ærgµmëñt tÿpës: ({tÿpës})Ấğ倪İЂҰक्र्นั้ढूँ]","assignToNone":"[z249G][นั้Tÿpë çæññøt þë æssïgñëð tø tÿpë \\"Ñøñë\\"Ấğ倪İЂҰक्र्तिृまẤนั้ढूँ]","asyncHelp":"[2nasS][นั้Ðïð ÿøµ mëæñ \\"æsÿñç wïth\\"?Ấğ倪İЂҰक्र्นั้ढूँ]","baseClassIncompatible":"[oW6Ip][นั้ßæsë çlæss \\"{þæsëÇlæss}\\" ïs ïñçømpætïþlë wïth tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","baseClassIncompatibleSubclass":"[mMUCH][นั้ßæsë çlæss \\"{þæsëÇlæss}\\" ðërïvës frøm \\"{sµþçlæss}\\" whïçh ïs ïñçømpætïþlë wïth tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","baseClassOverriddenType":"[Hp8Sl][นั้ßæsë çlæss \\"{þæsëÇlæss}\\" prøvïðës tÿpë \\"{tÿpë}\\", whïçh ïs øvërrïððëñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","baseClassOverridesType":"[P7N4Y][นั้ßæsë çlæss \\"{þæsëÇlæss}\\" øvërrïðës wïth tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","bytesTypePromotions":"[qIXYb][นั้§ët ðïsæþlëßÿtësTÿpëPrømøtïøñs tø fælsë tø ëñæþlë tÿpë prømøtïøñ þëhævïør før \\"þÿtëærræÿ\\" æñð \\"mëmørÿvïëw\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","conditionalRequiresBool":"[k1G9a][นั้Mëthøð __þøøl__ før tÿpë \\"{øpëræñðTÿpë}\\" rëtµrñs tÿpë \\"{þøølRëtµrñTÿpë}\\" ræthër thæñ \\"þøøl\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","dataClassFieldLocation":"[vQxtf][นั้Fïëlð ðëçlærætïøñẤğ倪İЂҰक्นั้ढूँ]","dataClassFrozen":"[d4uiK][นั้\\"{ñæmë}\\" ïs frøzëñẤğ倪İЂҰक्นั้ढूँ]","dataProtocolUnsupported":"[7gIT2][นั้\\"{ñæmë}\\" ïs æ ðætæ prøtøçølẤğ倪İЂҰक्र्तिृนั้ढूँ]","descriptorAccessBindingFailed":"[RiEhE][นั้Fæïlëð tø þïñð mëthøð \\"{ñæmë}\\" før ðësçrïptør çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","descriptorAccessCallFailed":"[8EXvg][นั้Fæïlëð tø çæll mëthøð \\"{ñæmë}\\" før ðësçrïptør çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","finalMethod":"[zz1yN][นั้Fïñæl mëthøðẤğ倪İЂนั้ढूँ]","functionParamDefaultMissing":"[yWAIy][นั้Pæræmëtër \\"{ñæmë}\\" ïs mïssïñg ðëfæµlt ærgµmëñtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","functionParamName":"[NrJqx][นั้Pæræmëtër ñæmë mïsmætçh: \\"{ðëstÑæmë}\\" vërsµs \\"{srçÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","functionParamPositionOnly":"[XOhUP][นั้Pøsïtïøñ-øñlÿ pæræmëtër mïsmætçh; pæræmëtër \\"{ñæmë}\\" ïs ñøt pøsïtïøñ-øñlÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","functionReturnTypeMismatch":"[x4qH0][นั้Fµñçtïøñ rëtµrñ tÿpë \\"{søµrçëTÿpë}\\" ïs ïñçømpætïþlë wïth tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","functionTooFewParams":"[575uy][นั้Fµñçtïøñ æççëpts tøø fëw pøsïtïøñæl pæræmëtërs; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","functionTooManyParams":"[zj9vw][นั้Fµñçtïøñ æççëpts tøø mæñÿ pøsïtïøñæl pæræmëtërs; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","genericClassNotAllowed":"[MDEt3][นั้Gëñërïç tÿpë wïth tÿpë ærgµmëñts ñøt ælløwëð før ïñstæñçë ør çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","incompatibleDeleter":"[LCJuj][นั้Prøpërtÿ ðëlëtër mëthøð ïs ïñçømpætïþlëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","incompatibleGetter":"[yds2G][นั้Prøpërtÿ gëttër mëthøð ïs ïñçømpætïþlëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","incompatibleSetter":"[GDoso][นั้Prøpërtÿ sëttër mëthøð ïs ïñçømpætïþlëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","initMethodLocation":"[D4O2l][นั้Thë __ïñït__ mëthøð ïs ðëfïñëð ïñ çlæss \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","initMethodSignature":"[EULjB][นั้§ïgñætµrë øf __ïñït__ ïs \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","initSubclassLocation":"[eEcCS][นั้Thë __ïñït_sµþçlæss__ mëthøð ïs ðëfïñëð ïñ çlæss \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","invariantSuggestionDict":"[OIoHo][นั้Çøñsïðër swïtçhïñg frøm \\"ðïçt\\" tø \\"Mæppïñg\\" whïçh ïs çøværïæñt ïñ thë vælµë tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","invariantSuggestionList":"[irYWI][นั้Çøñsïðër swïtçhïñg frøm \\"lïst\\" tø \\"§ëqµëñçë\\" whïçh ïs çøværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","invariantSuggestionSet":"[64U47][นั้Çøñsïðër swïtçhïñg frøm \\"sët\\" tø \\"Çøñtæïñër\\" whïçh ïs çøværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","keyNotRequired":"[K1bDP][นั้\\"{ñæmë}\\" ïs ñøt æ rëqµïrëð këÿ ïñ \\"{tÿpë}\\", sø æççëss mæÿ rësµlt ïñ rµñtïmë ëxçëptïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","keyReadOnly":"[dhAH3][นั้\\"{ñæmë}\\" ïs æ rëæð-øñlÿ këÿ ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","keyRequiredDeleted":"[YeZa5][นั้\\"{ñæmë}\\" ïs æ rëqµïrëð këÿ æñð çæññøt þë ðëlëtëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","keyUndefined":"[6mQGu][นั้\\"{ñæmë}\\" ïs ñøt æ ðëfïñëð këÿ ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","kwargsParamMissing":"[KHgb2][นั้Pæræmëtër \\"**{pæræmÑæmë}\\" hæs ñø çørrëspøñðïñg pæræmëtërẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","listAssignmentMismatch":"[fERKI][นั้Tÿpë \\"{tÿpë}\\" ïs ïñçømpætïþlë wïth tærgët lïstẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","literalAssignmentMismatch":"[17LiQ][นั้\\"{søµrçëTÿpë}\\" çæññøt þë æssïgñëð tø tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","matchIsNotExhaustiveHint":"[3NR39][นั้Ïf ëxhæµstïvë hæñðlïñg ïs ñøt ïñtëñðëð, æðð \\"çæsë _: pæss\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","matchIsNotExhaustiveType":"[9RN1P][นั้Üñhæñðlëð tÿpë: \\"{tÿpë}\\"Ấğ倪İЂҰक्र्นั้ढूँ]","memberAssignment":"[1WFCt][นั้Ëxprëssïøñ øf tÿpë \\"{tÿpë}\\" çæññøt þë æssïgñëð tø mëmþër \\"{ñæmë}\\" øf çlæss \\"{çlæssTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","memberIsAbstract":"[l912U][นั้\\"{tÿpë}.{ñæmë}\\" ïs ñøt ïmplëmëñtëðẤğ倪İЂҰक्र्तिृまนั้ढूँ]","memberIsAbstractMore":"[dgfwa][นั้æñð {çøµñt} mørë...Ấğ倪İЂҰक्นั้ढूँ]","memberIsClassVarInProtocol":"[ZZeb4][นั้\\"{ñæmë}\\" ïs ðëfïñëð æs æ ÇlæssVær ïñ prøtøçølẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","memberIsFinalInProtocol":"[chVyJ][นั้\\"{ñæmë}\\" ïs mærkëð Fïñæl ïñ prøtøçølẤğ倪İЂҰक्र्तिृまนั้ढूँ]","memberIsInitVar":"[0SGIB][นั้Mëmþër \\"{ñæmë}\\" ïs æñ ïñït-øñlÿ fïëlðẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","memberIsInvariant":"[rBPX6][นั้\\"{ñæmë}\\" ïs ïñværïæñt þëçæµsë ït ïs mµtæþlëẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","memberIsNotClassVarInClass":"[bKhkE][นั้\\"{ñæmë}\\" mµst þë ðëfïñëð æs æ ÇlæssVær tø þë çømpætïþlë wïth prøtøçølẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","memberIsNotClassVarInProtocol":"[OAmE1][นั้\\"{ñæmë}\\" ïs ñøt ðëfïñëð æs æ ÇlæssVær ïñ prøtøçølẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","memberIsNotFinalInProtocol":"[Mw2lB][นั้\\"{ñæmë}\\" ïs ñøt mærkëð Fïñæl ïñ prøtøçølẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","memberIsWritableInProtocol":"[x53Kg][นั้\\"{ñæmë}\\" ïs wrïtæþlë ïñ prøtøçølẤğ倪İЂҰक्र्तिृนั้ढूँ]","memberSetClassVar":"[2pVfQ][นั้Mëmþër \\"{ñæmë}\\" çæññøt þë æssïgñëð thrøµgh æ çlæss ïñstæñçë þëçæµsë ït ïs æ ÇlæssVærẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","memberTypeMismatch":"[IHN4x][นั้\\"{ñæmë}\\" ïs æñ ïñçømpætïþlë tÿpëẤğ倪İЂҰक्र्तिृนั้ढूँ]","memberUnknown":"[7kDIF][นั้Mëmþër \\"{ñæmë}\\" ïs µñkñøwñẤğ倪İЂҰक्र्นั้ढूँ]","metaclassConflict":"[fjWW1][นั้Mëtæçlæss \\"{mëtæçlæss1}\\" çøñflïçts wïth \\"{mëtæçlæss2}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","missingDeleter":"[5IVNI][นั้Prøpërtÿ ðëlëtër mëthøð ïs mïssïñgẤğ倪İЂҰक्र्तिृまนั้ढूँ]","missingGetter":"[Mzn4K][นั้Prøpërtÿ gëttër mëthøð ïs mïssïñgẤğ倪İЂҰक्र्तिृนั้ढूँ]","missingSetter":"[goeIY][นั้Prøpërtÿ sëttër mëthøð ïs mïssïñgẤğ倪İЂҰक्र्तिृนั้ढूँ]","namedParamMissingInDest":"[dc07X][นั้Këÿwørð pæræmëtër \\"{ñæmë}\\" ïs mïssïñg ïñ ðëstïñætïøñẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","namedParamMissingInSource":"[N59fC][นั้Këÿwørð pæræmëtër \\"{ñæmë}\\" ïs mïssïñg ïñ søµrçëẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","namedParamTypeMismatch":"[9CAV6][นั้Këÿwørð pæræmëtër \\"{ñæmë}\\" øf tÿpë \\"{søµrçëTÿpë}\\" çæññøt þë æssïgñëð tø tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","namedTupleNotAllowed":"[gAlSp][นั้ÑæmëðTµplë çæññøt þë µsëð før ïñstæñçë ør çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","newMethodLocation":"[n0dxL][นั้Thë __ñëw__ mëthøð ïs ðëfïñëð ïñ çlæss \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","newMethodSignature":"[NeWKO][นั้§ïgñætµrë øf __ñëw__ ïs \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","newTypeClassNotAllowed":"[JQmcY][นั้Çlæss çrëætëð wïth ÑëwTÿpë çæññøt þë µsëð wïth ïñstæñçë æñð çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","noOverloadAssignable":"[FJ88c][นั้Ñø øvërløæðëð fµñçtïøñ mætçhës tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","noneNotAllowed":"[Yn8Lx][นั้Ñøñë çæññøt þë µsëð før ïñstæñçë ør çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","orPatternMissingName":"[kgiPM][นั้Mïssïñg ñæmës: {ñæmë}Ấğ倪İЂҰक्นั้ढूँ]","overloadIndex":"[vNPxL][นั้Øvërløæð {ïñðëx} ïs thë çløsëst mætçhẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","overloadNotAssignable":"[BA2kK][นั้Øñë ør mørë øvërløæðs øf \\"{ñæmë}\\" ïs ñøt æssïgñæþlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","overloadSignature":"[NPzwf][นั้Øvërløæð sïgñætµrë ïs ðëfïñëð hërëẤğ倪İЂҰक्र्तिृまนั้ढूँ]","overriddenMethod":"[CcUB2][นั้Øvërrïððëñ mëthøðẤğ倪İЂҰक्นั้ढूँ]","overriddenSymbol":"[cvpXz][นั้Øvërrïððëñ sÿmþølẤğ倪İЂҰक्นั้ढूँ]","overrideInvariantMismatch":"[uODzM][นั้Øvërrïðë tÿpë \\"{øvërrïðëTÿpë}\\" ïs ñøt thë sæmë æs þæsë tÿpë \\"{þæsëTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","overrideIsInvariant":"[j45KZ][นั้Værïæþlë ïs mµtæþlë sø ïts tÿpë ïs ïñværïæñtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","overrideNoOverloadMatches":"[vG14w][นั้Ñø øvërløæð sïgñætµrë ïñ øvërrïðë ïs çømpætïþlë wïth þæsë mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overrideNotClassMethod":"[t5OaH][นั้ßæsë mëthøð ïs ðëçlærëð æs æ çlæssmëthøð þµt øvërrïðë ïs ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","overrideNotInstanceMethod":"[e2Xo5][นั้ßæsë mëthøð ïs ðëçlærëð æs æñ ïñstæñçë mëthøð þµt øvërrïðë ïs ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overrideNotStaticMethod":"[Eu8Oy][นั้ßæsë mëthøð ïs ðëçlærëð æs æ stætïçmëthøð þµt øvërrïðë ïs ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","overrideOverloadNoMatch":"[smVSW][นั้Øvërrïðë ðøës ñøt hæñðlë æll øvërløæðs øf þæsë mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","overrideOverloadOrder":"[HrUeN][นั้Øvërløæðs før øvërrïðë mëthøð mµst þë ïñ thë sæmë ørðër æs thë þæsë mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","overrideParamKeywordNoDefault":"[yIoa8][นั้Këÿwørð pæræmëtër \\"{ñæmë}\\" mïsmætçh: þæsë pæræmëtër hæs ðëfæµlt ærgµmëñt vælµë, øvërrïðë pæræmëtër ðøës ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","overrideParamKeywordType":"[SAOAr][นั้Këÿwørð pæræmëtër \\"{ñæmë}\\" tÿpë mïsmætçh: þæsë pæræmëtër ïs tÿpë \\"{þæsëTÿpë}\\", øvërrïðë pæræmëtër ïs tÿpë \\"{øvërrïðëTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","overrideParamName":"[fRWyy][นั้Pæræmëtër {ïñðëx} ñæmë mïsmætçh: þæsë pæræmëtër ïs ñæmëð \\"{þæsëÑæmë}\\", øvërrïðë pæræmëtër ïs ñæmëð \\"{øvërrïðëÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","overrideParamNameExtra":"[HEG0d][นั้Pæræmëtër \\"{ñæmë}\\" ïs mïssïñg ïñ þæsëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","overrideParamNameMissing":"[PN8Rl][นั้Pæræmëtër \\"{ñæmë}\\" ïs mïssïñg ïñ øvërrïðëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","overrideParamNamePositionOnly":"[3yVlj][นั้Pæræmëtër {ïñðëx} mïsmætçh: þæsë pæræmëtër \\"{þæsëÑæmë}\\" ïs këÿwørð pæræmëtër, øvërrïðë pæræmëtër ïs pøsïtïøñ-øñlÿẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","overrideParamNoDefault":"[azvZD][นั้Pæræmëtër {ïñðëx} mïsmætçh: þæsë pæræmëtër hæs ðëfæµlt ærgµmëñt vælµë, øvërrïðë pæræmëtër ðøës ñøtẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overrideParamType":"[FXBcO][นั้Pæræmëtër {ïñðëx} tÿpë mïsmætçh: þæsë pæræmëtër ïs tÿpë \\"{þæsëTÿpë}\\", øvërrïðë pæræmëtër ïs tÿpë \\"{øvërrïðëTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","overridePositionalParamCount":"[jJZNP][นั้Pøsïtïøñæl pæræmëtër çøµñt mïsmætçh; þæsë mëthøð hæs {þæsëÇøµñt}, þµt øvërrïðë hæs {øvërrïðëÇøµñt}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overrideReturnType":"[mdPwX][นั้Rëtµrñ tÿpë mïsmætçh: þæsë mëthøð rëtµrñs tÿpë \\"{þæsëTÿpë}\\", øvërrïðë rëtµrñs tÿpë \\"{øvërrïðëTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","overrideType":"[ryAgb][นั้ßæsë çlæss ðëfïñës tÿpë æs \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","paramAssignment":"[HGg7D][นั้Pæræmëtër {ïñðëx}: tÿpë \\"{søµrçëTÿpë}\\" çæññøt þë æssïgñëð tø tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","paramSpecMissingInOverride":"[AUge7][นั้Pæræm§pëç pæræmëtërs ærë mïssïñg ïñ øvërrïðë mëthøðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","paramType":"[hHLAX][นั้Pæræmëtër tÿpë ïs \\"{pæræmTÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","privateImportFromPyTypedSource":"[8gX6u][นั้Ïmpørt frøm \\"{møðµlë}\\" ïñstëæðẤğ倪İЂҰक्र्तिृนั้ढूँ]","propertyAccessFromProtocolClass":"[h75EJ][นั้Æ prøpërtÿ ðëfïñëð wïthïñ æ prøtøçøl çlæss çæññøt þë æççëssëð æs æ çlæss værïæþlëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","propertyMethodIncompatible":"[dWDwG][นั้Prøpërtÿ mëthøð \\"{ñæmë}\\" ïs ïñçømpætïþlëẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","propertyMethodMissing":"[xWlRK][นั้Prøpërtÿ mëthøð \\"{ñæmë}\\" ïs mïssïñg ïñ øvërrïðëẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","propertyMissingDeleter":"[r2oGK][นั้Prøpërtÿ \\"{ñæmë}\\" hæs ñø ðëfïñëð ðëlëtërẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","propertyMissingSetter":"[Sr1R9][นั้Prøpërtÿ \\"{ñæmë}\\" hæs ñø ðëfïñëð sëttërẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","protocolIncompatible":"[4uTqc][นั้\\"{søµrçëTÿpë}\\" ïs ïñçømpætïþlë wïth prøtøçøl \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","protocolMemberMissing":"[Ad9PZ][นั้\\"{ñæmë}\\" ïs ñøt prësëñtẤğ倪İЂҰक्र्นั้ढूँ]","protocolRequiresRuntimeCheckable":"[c9ewn][นั้Prøtøçøl çlæss mµst þë @rµñtïmë_çhëçkæþlë tø þë µsëð wïth ïñstæñçë æñð çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","protocolSourceIsNotConcrete":"[DnLrN][นั้\\"{søµrçëTÿpë}\\" ïs ñøt æ çøñçrëtë çlæss tÿpë æñð çæññøt þë æssïgñëð tø tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","protocolUnsafeOverlap":"[fKiUM][นั้Ættrïþµtës øf \\"{ñæmë}\\" hævë thë sæmë ñæmës æs thë prøtøçølẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","pyrightCommentIgnoreTip":"[raFZN][นั้Üsë \\"# pÿrïght: ïgñørë[<ðïægñøstïç rµlës>] tø sµpprëss ðïægñøstïçs før æ sïñglë lïñëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","readOnlyAttribute":"[k9waY][นั้Ættrïþµtë \\"{ñæmë}\\" ïs rëæð-øñlÿẤğ倪İЂҰक्र्तिृนั้ढूँ]","seeClassDeclaration":"[8sx7n][นั้§ëë çlæss ðëçlærætïøñẤğ倪İЂҰक्นั้ढूँ]","seeDeclaration":"[K0X6p][นั้§ëë ðëçlærætïøñẤğ倪İЂҰนั้ढूँ]","seeFunctionDeclaration":"[1N6ig][นั้§ëë fµñçtïøñ ðëçlærætïøñẤğ倪İЂҰक्र्นั้ढूँ]","seeMethodDeclaration":"[eJSye][นั้§ëë mëthøð ðëçlærætïøñẤğ倪İЂҰक्र्นั้ढूँ]","seeParameterDeclaration":"[mBEpT][นั้§ëë pæræmëtër ðëçlærætïøñẤğ倪İЂҰक्र्นั้ढूँ]","seeTypeAliasDeclaration":"[Pjnb8][นั้§ëë tÿpë ælïæs ðëçlærætïøñẤğ倪İЂҰक्र्นั้ढूँ]","seeVariableDeclaration":"[M3EiY][นั้§ëë værïæþlë ðëçlærætïøñẤğ倪İЂҰक्र्นั้ढूँ]","tupleAssignmentMismatch":"[aLGep][นั้Tÿpë \\"{tÿpë}\\" ïs ïñçømpætïþlë wïth tærgët tµplëẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","tupleEntryTypeMismatch":"[ny8Sn][นั้Tµplë ëñtrÿ {ëñtrÿ} ïs ïñçørrëçt tÿpëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","tupleSizeIndeterminateSrc":"[EnNiw][นั้Tµplë sïzë mïsmætçh; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð ïñðëtërmïñætëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","tupleSizeIndeterminateSrcDest":"[lrxYh][นั้Tµplë sïzë mïsmætçh; ëxpëçtëð {ëxpëçtëð} ør mørë þµt rëçëïvëð ïñðëtërmïñætëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","tupleSizeMismatch":"[F2Yc7][นั้Tµplë sïzë mïsmætçh; ëxpëçtëð {ëxpëçtëð} þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृนั้ढूँ]","tupleSizeMismatchIndeterminateDest":"[6vxdi][นั้Tµplë sïzë mïsmætçh; ëxpëçtëð {ëxpëçtëð} ør mørë þµt rëçëïvëð {rëçëïvëð}Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","typeAliasInstanceCheck":"[29G7K][นั้Tÿpë ælïæs çrëætëð wïth \\"tÿpë\\" stætëmëñt çæññøt þë µsëð wïth ïñstæñçë æñð çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeAssignmentMismatch":"[VF9B4][นั้Tÿpë \\"{søµrçëTÿpë}\\" çæññøt þë æssïgñëð tø tÿpë \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeBound":"[AIZri][นั้Tÿpë \\"{søµrçëTÿpë}\\" ïs ïñçømpætïþlë wïth þøµñð tÿpë \\"{ðëstTÿpë}\\" før tÿpë værïæþlë \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeConstrainedTypeVar":"[qHztb][นั้Tÿpë \\"{tÿpë}\\" ïs ïñçømpætïþlë wïth çøñstræïñëð tÿpë værïæþlë \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまนั้ढूँ]","typeIncompatible":"[L3llJ][นั้\\"{søµrçëTÿpë}\\" ïs ïñçømpætïþlë wïth \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","typeNotClass":"[DTm1E][นั้\\"{tÿpë}\\" ïs ñøt æ çlæssẤğ倪İЂҰक्र्นั้ढूँ]","typeNotStringLiteral":"[D7UY3][นั้\\"{tÿpë}\\" ïs ñøt æ strïñg lïtërælẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeOfSymbol":"[qlRHN][นั้Tÿpë øf \\"{ñæmë}\\" ïs \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","typeParamSpec":"[m23b5][นั้Tÿpë \\"{tÿpë}\\" ïs ïñçømpætïþlë wïth Pæræm§pëç \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeUnsupported":"[Dx3Cx][นั้Tÿpë \\"{tÿpë}\\" ïs µñsµppørtëðẤğ倪İЂҰक्र्तिृนั้ढूँ]","typeVarDefaultOutOfScope":"[05ALy][นั้Tÿpë værïæþlë \\"{ñæmë}\\" ïs ñøt ïñ sçøpëẤğ倪İЂҰक्र्तिृまẤนั้ढूँ]","typeVarIsContravariant":"[kup2Y][นั้Tÿpë pæræmëtër \\"{ñæmë}\\" ïs çøñtræværïæñt, þµt \\"{søµrçëTÿpë}\\" ïs ñøt æ sµpërtÿpë øf \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeVarIsCovariant":"[EeRng][นั้Tÿpë pæræmëtër \\"{ñæmë}\\" ïs çøværïæñt, þµt \\"{søµrçëTÿpë}\\" ïs ñøt æ sµþtÿpë øf \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarIsInvariant":"[WLZaN][นั้Tÿpë pæræmëtër \\"{ñæmë}\\" ïs ïñværïæñt, þµt \\"{søµrçëTÿpë}\\" ïs ñøt thë sæmë æs \\"{ðëstTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typeVarNotAllowed":"[37OGF][นั้TÿpëVær ñøt ælløwëð før ïñstæñçë ør çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","typeVarTupleRequiresKnownLength":"[GGttd][นั้TÿpëVærTµplë çæññøt þë þøµñð tø æ tµplë øf µñkñøwñ lëñgthẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","typeVarUnnecessarySuggestion":"[k0XTd][นั้Üsë {tÿpë} ïñstëæðẤğ倪İЂҰक्นั้ढूँ]","typeVarUnsolvableRemedy":"[PaRa7][นั้Prøvïðë æñ øvërløæð thæt spëçïfïës thë rëtµrñ tÿpë whëñ thë ærgµmëñt ïs ñøt sµpplïëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","typeVarsMissing":"[R1SEV][นั้Mïssïñg tÿpë værïæþlës: {ñæmës}Ấğ倪İЂҰक्र्तिृนั้ढूँ]","typedDictBaseClass":"[Zv6vP][นั้Çlæss \\"{tÿpë}\\" ïs ñøt æ TÿpëðÐïçtẤğ倪İЂҰक्र्तिृนั้ढूँ]","typedDictClassNotAllowed":"[Vgl7x][นั้TÿpëðÐïçt çlæss ñøt ælløwëð før ïñstæñçë ør çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictClosedExtraNotAllowed":"[zT7Rm][นั้Çæññøt æðð ïtëm \\"{ñæmë}\\"Ấğ倪İЂҰक्र्นั้ढूँ]","typedDictClosedExtraTypeMismatch":"[blC1e][นั้Çæññøt æðð ïtëm \\"{ñæmë}\\" wïth tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typedDictClosedFieldNotRequired":"[6rtDR][นั้Çæññøt æðð ïtëm \\"{ñæmë}\\" þëçæµsë ït mµst þë ÑøtRëqµïrëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","typedDictExtraFieldNotAllowed":"[kFDh9][นั้\\"{ñæmë}\\" ïs ñøt prësëñt ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","typedDictExtraFieldTypeMismatch":"[DnAhM][นั้Tÿpë øf \\"{ñæmë}\\" ïs ïñçømpætïþlë wïth tÿpë øf \\"__ëxtræ_ïtëms__\\" ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğนั้ढूँ]","typedDictFieldMissing":"[rNzn7][นั้\\"{ñæmë}\\" ïs mïssïñg frøm \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","typedDictFieldNotReadOnly":"[BJy1V][นั้\\"{ñæmë}\\" ïs ñøt rëæð-øñlÿ ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤนั้ढूँ]","typedDictFieldNotRequired":"[eqatW][นั้\\"{ñæmë}\\" ïs ñøt rëqµïrëð ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまนั้ढूँ]","typedDictFieldRequired":"[ckyH4][นั้\\"{ñæmë}\\" ïs rëqµïrëð ïñ \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृนั้ढूँ]","typedDictFieldTypeMismatch":"[XYIBH][นั้Tÿpë \\"{tÿpë}\\" ïs ñøt æssïgñæþlë tø ïtëm \\"{ñæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂนั้ढूँ]","typedDictFieldUndefined":"[UsDC9][นั้\\"{ñæmë}\\" ïs æñ µñðëfïñëð ïtëm ïñ tÿpë \\"{tÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typedDictFinalMismatch":"[tFb04][นั้\\"{søµrçëTÿpë}\\" ïs ïñçømpætïþlë wïth \\"{ðëstTÿpë}\\" þëçæµsë øf æ @fïñæl mïsmætçhẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","typedDictKeyAccess":"[67DLq][นั้Üsë [\\"{ñæmë}\\"] tø rëfërëñçë ïtëm ïñ TÿpëðÐïçtẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","typedDictNotAllowed":"[eTsPP][นั้TÿpëðÐïçt çæññøt þë µsëð før ïñstæñçë ør çlæss çhëçksẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","unhashableType":"[IJEeq][นั้Tÿpë \\"{tÿpë}\\" ïs ñøt hæshæþlëẤğ倪İЂҰक्र्तिृนั้ढूँ]","uninitializedAbstractVariable":"[uDuHt][นั้Ïñstæñçë værïæþlë \\"{ñæmë}\\" ïs ðëfïñëð ïñ æþstræçt þæsë çlæss \\"{çlæssTÿpë}\\" þµt ñøt ïñïtïælïzëðẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्นั้ढूँ]","unreachableExcept":"[3CSUL][นั้\\"{ëxçëptïøñTÿpë}\\" ïs æ sµþçlæss øf \\"{pærëñtTÿpë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰนั้ढूँ]","useDictInstead":"[LReB5][นั้Üsë Ðïçt[T1, T2] tø ïñðïçætë æ ðïçtïøñærÿ tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]","useListInstead":"[RPu0E][นั้Üsë £ïst[T] tø ïñðïçætë æ lïst tÿpë ør Üñïøñ[T1, T2] tø ïñðïçætë æ µñïøñ tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪นั้ढूँ]","useTupleInstead":"[jaFqC][นั้Üsë tµplë[T1, ..., Tñ] tø ïñðïçætë æ tµplë tÿpë ør Üñïøñ[T1, T2] tø ïñðïçætë æ µñïøñ tÿpëẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","useTypeInstead":"[Zig8D][นั้Üsë Tÿpë[T] ïñstëæðẤğ倪İЂҰक्นั้ढूँ]","varianceMismatchForClass":"[fqhIl][นั้Værïæñçë øf tÿpë ærgµmëñt \\"{tÿpëVærÑæmë}\\" ïs ïñçømpætïþlë wïth þæsë çlæss \\"{çlæssÑæmë}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्นั้ढूँ]","varianceMismatchForTypeAlias":"[YSiVx][นั้Værïæñçë øf tÿpë ærgµmëñt \\"{tÿpëVærÑæmë}\\" ïs ïñçømpætïþlë wïth \\"{tÿpëÆlïæsPæræm}\\"Ấğ倪İЂҰक्र्तिृまẤğ倪İЂҰक्र्तिृまẤğ倪İนั้ढूँ]"}}')},26624:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Создать заглушку типа","createTypeStubFor":"Создать заглушку типа для \\"{moduleName}\\"","executingCommand":"Производится выполнение команды","filesToAnalyzeCount":"{count} файлов для анализа","filesToAnalyzeOne":"1 файл для анализа","findingReferences":"Производится поиск ссылок","organizeImports":"Упорядочение импорта","renameShadowedFile":"Переименовать \\"{oldFile}\\" в \\"{newFile}\\""},"Completion":{"autoImportDetail":"Автоматический импорт","indexValueDetail":"Значение индекса"},"Diagnostic":{"abstractMethodInvocation":"Невозможно вызвать метод \\"{method}\\", так как он является абстрактным и нереализованным","annotatedParamCountMismatch":"Несоответствие числа аннотаций параметра: ожидается {expected}, но получено {received}","annotatedTypeArgMissing":"Для \\"Annotated\\" ожидается один аргумент типа и одна или несколько заметок типа","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"В заметках типа не могут использоваться строковые литералы формата (f-строки)","annotationNotSupported":"Заметка типа не поддерживается для этой инструкции","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Заметки с типом не могут охватывать несколько строковых литералов","annotationStringEscape":"Заметки с типом не могут содержать escape-символы","argAssignment":"Аргумент типа \\"{argType}\\" нельзя присвоить параметру типа \\"{paramType}\\"","argAssignmentFunction":"Аргумент типа \\"{argType}\\" нельзя присвоить параметру типа \\"{paramType}\\" в функции \\"{functionName}\\"","argAssignmentParam":"Аргумент типа \\"{argType}\\" нельзя присвоить параметру \\"{paramName}\\" типа \\"{paramType}\\"","argAssignmentParamFunction":"Аргумент типа \\"{argType}\\" нельзя присвоить параметру \\"{paramName}\\" типа \\"{paramType}\\" в функции \\"{functionName}\\"","argMissingForParam":"Отсутствует аргумент для параметра {name}","argMissingForParams":"Отсутствуют аргументы для параметров {names}","argMorePositionalExpectedCount":"Ожидаются еще позиционные аргументы: {expected}","argMorePositionalExpectedOne":"Ожидается еще 1 позиционный аргумент","argPositional":"Ожидается позиционный аргумент","argPositionalExpectedCount":"Ожидаемые позиционные аргументы: {expected}","argPositionalExpectedOne":"Ожидается 1 позиционный аргумент","argTypePartiallyUnknown":"Тип аргумента частично неизвестен","argTypeUnknown":"Тип аргумента неизвестен","assertAlwaysTrue":"Выражение assert всегда вычисляется как true","assertTypeArgs":"Для \\"assert_type\\" ожидается два позиционных аргумента","assertTypeTypeMismatch":"Несоответствие типов \\"assert_type\\": ожидается \\"{expected}\\", но получено \\"{received}\\"","assignmentExprComprehension":"Цель выражения назначения \\"{name}\\" не может использовать то же имя, что и понимание для целевого объекта","assignmentExprContext":"Выражение присваивания должно находиться в модуле, функции или лямбде","assignmentExprInSubscript":"Выражения назначения внутри оператора получения подстроки можно использовать в Python версии не ниже 3.10","assignmentInProtocol":"Переменные экземпляра или класса в классе Protocol должны быть явно объявлены в тексте класса","assignmentTargetExpr":"Выражение не может быть целевым объектом присваивания","asyncNotInAsyncFunction":"Использование \\"async\\" не разрешено вне асинхронной функции","awaitIllegal":"Инструкцию \\"await\\" можно использовать в Python версии не ранее 3.5","awaitNotAllowed":"Заметки типов не могут использовать \\"await\\"","awaitNotInAsync":"Ключевое слово \\"await\\" допускается только в асинхронной функции","backticksIllegal":"Выражения, окруженные одиночными обратными кавычками, не поддерживаются в Python 3.x; используйте вместо этого функцию repr","baseClassCircular":"Класс не может быть производным от себя","baseClassFinal":"Базовый класс \\"{type}\\" помечен как окончательный, и от него нельзя создать производный класс","baseClassIncompatible":"Базовые классы {type} взаимно несовместимы","baseClassInvalid":"Аргумент класса должен быть базовым классом","baseClassMethodTypeIncompatible":"Базовые классы класса \\"{classType}\\" определяют метод \\"{name}\\" несовместимым способом","baseClassUnknown":"Неизвестный тип базового класса скрывает тип производного класса","baseClassVariableTypeIncompatible":"Базовые классы класса \\"{classType}\\" определяют переменную \\"{name}\\" несовместимым способом","binaryOperationNotAllowed":"Бинарный оператор нельзя использовать в заметке типа","bindTypeMismatch":"Не удалось привязать метод \\"{methodName}\\", \\"{type}\\" не может быть назначен параметру \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" можно использовать только внутри цикла","callableExtraArgs":"В \\"Callable\\" ожидается только два аргумента типа","callableFirstArg":"Ожидается список типов параметров или \\"...\\"","callableNotInstantiable":"Невозможно создать экземпляр типа \\"{type}\\"","callableSecondArg":"В качестве аргумента второго типа для \\"Callable\\" ожидается возвращаемый тип","casePatternIsIrrefutable":"Неопровержимый шаблон допускается только для последнего оператора case","classAlreadySpecialized":"Тип \\"{type}\\" уже специализирован","classDecoratorTypeUnknown":"Нетипизированный декоратор класса скрывает тип класса. Игнорирование декоратора","classDefinitionCycle":"Определение класса для \\"{name}\\" зависит от себя","classGetItemClsParam":"Переопределение метода __class_getitem__ должно принимать параметр \\"cls\\"","classMethodClsParam":"Методы класса должны принимать параметр cls","classNotRuntimeSubscriptable":"Операция взятия подстроки для класса \\"{name}\\" создаст исключение среды выполнения; заключите заметку типа в кавычки","classPatternBuiltInArgPositional":"Шаблон класса принимает только позиционный вложенный шаблон","classPatternPositionalArgCount":"Слишком много позиционных шаблонов для класса \\"{type}\\"; ожидается {expected}, но получено {received}","classPatternTypeAlias":"\\"{type}\\" нельзя использовать в шаблоне класса, поскольку это псевдоним специализированного типа","classPropertyDeprecated":"Свойства класса упразднены в Python 3.11 и не будут поддерживаться в Python 3.13","classTypeParametersIllegal":"Синтаксис параметра типа класса может использоваться в Python версии не ниже 3.12.","classVarFirstArgMissing":"Ожидается аргумент типа после \\"ClassVar\\"","classVarNotAllowed":"Использование \\"ClassVar\\" в этом контексте не допускается","classVarOverridesInstanceVar":"Переменная класса \\"{name}\\" переопределяет переменную экземпляра с тем же именем в классе \\"{className}\\"","classVarTooManyArgs":"Ожидается только один аргумент типа после \\"ClassVar\\"","classVarWithTypeVar":"Тип \\"ClassVar\\" не может включать переменные типа","clsSelfParamTypeMismatch":"Тип параметра \\"{name}\\" должен быть супертипом своего класса \\"{classType}\\"","codeTooComplexToAnalyze":"Код слишком сложен для анализа; уменьшите сложность, разбив его на фрагменты (вложенные процедуры) или сократите количество условных конструкций","collectionAliasInstantiation":"Тип \\"{type}\\" не может быть создан, вместо этого используйте \\"{alias}\\"","comparisonAlwaysFalse":"Условие всегда будет оцениваться как ЛОЖЬ, поскольку типы \\"{leftType}\\" и \\"{rightType}\\" не перекрываются","comparisonAlwaysTrue":"Выражение всегда будет возвращать значение True, поскольку типы \\"{leftType}\\" и \\"{rightType}\\" не перекрываются","comprehensionInDict":"Понимание не может использоваться с другими записями словаря","comprehensionInSet":"Понимание не может использоваться с другими записями набора","concatenateContext":"\\"Concatenate\\" не допускается в этом контексте","concatenateParamSpecMissing":"Последний аргумент типа для \\"Concatenate\\" должен быть ParamSpec или \\"...\\"","concatenateTypeArgsMissing":"Для \\"Concatenate\\" требуется по крайней мере два аргумента типа","conditionalOperandInvalid":"Недопустимый условный операнд типа \\"{type}\\"","constantRedefinition":"\\"{name}\\" является константой (поскольку оно в верхнем регистре) и не может быть переопределено.","constructorNoArgs":"Для конструктора \\"{type}\\" не ожидается аргументов","constructorParametersMismatch":"Несоответствие подписи __new__ и __init__ в классе \\"{classType}\\"","containmentAlwaysFalse":"Выражение всегда будет оцениваться как ЛОЖЬ, так как типы \\"{leftType}\\" и \\"{rightType}\\" не перекрываются","containmentAlwaysTrue":"Выражение всегда будет оцениваться как ИСТИНА, так как типы \\"{leftType}\\" и \\"{rightType}\\" не перекрываются","continueInFinally":"Невозможно использовать \\"continue\\" в предложении finally","continueOutsideLoop":"Ключевое слово \\"continue\\" можно использовать только внутри цикла","coroutineInConditionalExpression":"Условное выражение ссылается на сопрограмму, которая всегда возвращает значение True","dataClassBaseClassFrozen":"Незафиксированный класс не может наследоваться от зафиксированного класса","dataClassBaseClassNotFrozen":"Незафиксированный класс не может наследоваться от зафиксированного класса","dataClassConverterFunction":"Аргумент типа \\"{argType}\\" не является допустимым преобразователем для поля \\"{fieldName}\\" типа \\"{fieldType}\\"","dataClassConverterOverloads":"Ни одна перегрузка \\"{funcName}\\" не является допустимым преобразователем поля \\"{fieldName}\\" типа \\"{fieldType}\\"","dataClassFieldWithDefault":"Поля без значений по умолчанию не могут отображаться после полей со значениями по умолчанию.","dataClassFieldWithPrivateName":"Поле класса данных не может использовать закрытое имя","dataClassFieldWithoutAnnotation":"Поле dataclass без заметки с типом вызовет исключение среды выполнения","dataClassPostInitParamCount":"Неверное число параметров в методе __post_init__ класса данных; ожидается число, соответствующее числу полей InitVar {expected}","dataClassPostInitType":"Тип параметра метода __post_init__ в классе данных не соответствует типу поля \\"{fieldName}\\"","dataClassSlotsOverwrite":"__slots__ уже определен в классе","dataClassTransformExpectedBoolLiteral":"Ожидается выражение, статически оцениваемое как ИСТИНА или ЛОЖЬ","dataClassTransformFieldSpecifier":"Ожидается кортеж классов или функций, но получен тип \\"{type}\\"","dataClassTransformPositionalParam":"Все аргументы \\"dataclass_transform\\" должны быть аргументами типа \\"ключевое слово\\"","dataClassTransformUnknownArgument":"Аргумент \\"{name}\\" не поддерживается в dataclass_transform","dataProtocolInSubclassCheck":"Протоколы данных (включающие атрибуты, не связанные с методами) запрещены в вызовах issubclass","declaredReturnTypePartiallyUnknown":"Объявленный тип возвращаемого значения \\"{returnType}\\" частично неизвестен","declaredReturnTypeUnknown":"Объявленный тип возвращаемого значения неизвестен","defaultValueContainsCall":"Вызовы функций и изменяемые объекты не разрешены в выражении значения параметра по умолчанию","defaultValueNotAllowed":"Параметр с \\"*\\" или \\"**\\" не может иметь значение по умолчанию","delTargetExpr":"Не удается удалить выражение","deprecatedClass":"Класс \\"{name}\\" является нерекомендуемым","deprecatedConstructor":"Конструктор для класса \\"{name}\\" больше не рекомендуется к использованию","deprecatedDescriptorDeleter":"Метод \\"__delete__\\" для дескриптора \\"{name}\\" не рекомендуется","deprecatedDescriptorGetter":"Метод \\"__get__\\" для дескриптора \\"{name}\\" не рекомендуется","deprecatedDescriptorSetter":"Метод \\"__set__\\" для дескриптора \\"{name}\\" не рекомендуется","deprecatedFunction":"Функция \\"{name}\\" больше не рекомендуется к использованию","deprecatedMethod":"Метод \\"{name}\\" в классе \\"{className}\\" не рекомендуется к использованию","deprecatedPropertyDeleter":"Метод удаления для свойства \\"{name}\\" не рекомендуется","deprecatedPropertyGetter":"Метод получения для свойства \\"{name}\\" не рекомендуется","deprecatedPropertySetter":"Метод задания для свойства \\"{name}\\" не рекомендуется","deprecatedType":"Этот тип больше не рекомендуется к использованию начиная с версии Python {version}; используйте вместо него \\"{replacement}\\"","dictExpandIllegalInComprehension":"Расширение словаря в понимании не допускается","dictInAnnotation":"Словарные выражения не разрешены в заметках типа","dictKeyValuePairs":"Записи словаря должны содержать пары \\"ключ-значение\\"","dictUnpackIsNotMapping":"Ожидается сопоставление для оператора распаковки словаря","dunderAllSymbolNotPresent":"\\"{name}\\" указано в методе __all__, но отсутствует в модуле","duplicateArgsParam":"Разрешен только один параметр \\"*\\"","duplicateBaseClass":"Дублирование базового класса не допускается","duplicateCapturePatternTarget":"Целевой объект захвата \\"{name}\\" не может появляться более одного раза в одном шаблоне","duplicateCatchAll":"В блоке except допускается только одно предложение catch-all","duplicateEnumMember":"Элемент перечислимого типа \\"{name}\\" уже объявлен","duplicateGenericAndProtocolBase":"Допускается только один базовый класс Generic[...] или Protocol[...]","duplicateImport":"\\"{importName}\\" импортируется несколько раз","duplicateKeywordOnly":"Разрешен только один разделитель \\"*\\"","duplicateKwargsParam":"Разрешен только один параметр \\"**\\"","duplicateParam":"Параметр \\"{name}\\" повторяется","duplicatePositionOnly":"Разрешен только один параметр \\"/\\"","duplicateStarPattern":"В последовательности шаблонов допускается только один шаблон \\"*\\"","duplicateStarStarPattern":"Допускается только одна запись \\"**\\"","duplicateUnpack":"В списке разрешена только одна операция распаковки","ellipsisAfterUnpacked":"\\"...\\" не может использоваться с распакованным элементом TypeVarTuple или кортежем","ellipsisContext":"\\"...\\" не допускается в данном контексте","ellipsisSecondArg":"\\"...\\" разрешается только в качестве второго из двух аргументов","enumClassOverride":"Перечислимый класс \\"{name}\\" является окончательным и не может иметь производных классов","exceptionGroupIncompatible":"Синтаксис группы исключений (\\"except*\\") можно использовать в Python версии не ранее 3.11","exceptionTypeIncorrect":"\\"{type}\\" не является производным от BaseException","exceptionTypeNotClass":"\\"{type}\\" не является допустимым классом исключений","exceptionTypeNotInstantiable":"Конструктору типа исключения \\"{type}\\" требуется один или несколько аргументов","expectedAfterDecorator":"Ожидаемая функция или объявление класса после декоратора","expectedArrow":"Ожидается \\"->\\", за которым следует заметка типа к возвращаемому типу","expectedAsAfterException":"Ожидается \\"as\\" после типа исключения","expectedAssignRightHandExpr":"Справа от \\"=\\" ожидается выражение","expectedBinaryRightHandExpr":"Справа от оператора ожидается выражение","expectedBoolLiteral":"Ожидается ИСТИНА или ЛОЖЬ","expectedCase":"Ожидается оператор case","expectedClassName":"Ожидается имя класса","expectedCloseBrace":"Для скобки \\"{\\" отсутствует закрывающая скобка","expectedCloseBracket":"Для скобки \\"[\\" отсутствует закрывающая скобка","expectedCloseParen":"Для скобки \\"(\\" отсутствует закрывающая скобка","expectedColon":"Ожидается \\":\\"","expectedComplexNumberLiteral":"Для сопоставления шаблонов ожидается сложный числовой литерал","expectedDecoratorExpr":"Форму выражения для декоратора можно использовать в Python версии не ниже 3.9","expectedDecoratorName":"Ожидается имя декоратора","expectedDecoratorNewline":"В конце декоратора ожидается символ перехода на новую строку","expectedDelExpr":"После \\"del\\" ожидается выражение","expectedElse":"Ожидается ключевое слово \\"else\\"","expectedEquals":"Ожидается \\"=\\"","expectedExceptionClass":"Недопустимый класс или объект исключения","expectedExceptionObj":"Ожидается объект исключения, класс исключения или значение None","expectedExpr":"Ожидается выражение","expectedFunctionAfterAsync":"Ожидается определение функции после \\"async\\"","expectedFunctionName":"После ключевого слова \\"def\\" ожидается имя функции","expectedIdentifier":"Ожидается идентификатор","expectedImport":"Ожидается \\"import\\"","expectedImportAlias":"После \\"as\\" ожидается символ","expectedImportSymbols":"После операторов импорта ожидается одно или несколько имен символов","expectedIn":"Ожидается \\"in\\"","expectedInExpr":"После ключевого слова \\"in\\" ожидается выражение","expectedIndentedBlock":"Ожидается блок с отступом","expectedMemberName":"После \\".\\" ожидается имя элемента","expectedModuleName":"Ожидаемое имя модуля","expectedNameAfterAs":"Ожидается имя символа после \\"as\\"","expectedNamedParameter":"За \\"*\\" должен следовать параметр типа \\"ключевое слово\\"","expectedNewline":"Ожидается новая строка","expectedNewlineOrSemicolon":"Операторы должны быть разделены символами перевода строки или точками с запятой","expectedOpenParen":"Ожидается \\"(\\"","expectedParamName":"Ожидается имя параметра","expectedPatternExpr":"Ожидается выражение шаблона","expectedPatternSubjectExpr":"Ожидаемое выражение субъекта шаблона","expectedPatternValue":"Ожидается выражение значения шаблона в форме \\"a.b\\"","expectedReturnExpr":"После \\"return\\" ожидается выражение","expectedSliceIndex":"Ожидается выражение индекса или среза","expectedTypeNotString":"Ожидался тип, но получен строковый литерал","expectedTypeParameterName":"Ожидаемое имя параметра типа","expectedYieldExpr":"Ожидаемое выражение в операторе yield","finalClassIsAbstract":"Класс \\"{type}\\" помечен как final (окончательный) и должен реализовать все абстрактные символы.","finalContext":"\\"Final\\" не допускается в данном контексте","finalMethodOverride":"Метод \\"{name}\\" не может переопределять окончательный метод, определенный в классе \\"{className}\\"","finalNonMethod":"Функцию \\"{name}\\" нельзя пометить как @окончательную, так как она не является методом","finalReassigned":"\\"{name}\\" объявляется окончательным и не может быть переназначено","finalRedeclaration":"\\"{name}\\" ранее объявлено как Final","finalRedeclarationBySubclass":"\\"{name}\\" невозможно повторно объявить, поскольку в родительском классе \\"{className}\\" он объявлен как final","finalTooManyArgs":"После \\"Final\\" ожидается один аргумент типа","finalUnassigned":"\\"{name}\\" объявлен как Final, но ему не присвоено значение","formatStringBrace":"Одиночная закрывающая скобка не допускается в литерале f-строки. Используйте двойную закрывающую скобку","formatStringBytes":"Строковые литералы формата (f-строки) не могут быть двоичными","formatStringDebuggingIllegal":"Для описателя отладки F-строки \\"=\\" требуется версия Python 3.8 или более новая","formatStringEscape":"Escape-последовательность (обратная косая черта) не разрешена в части выражения f-строки до версии Python 3.12","formatStringExpectedConversion":"После \\"!\\" в f-строке ожидался спецификатор преобразования","formatStringIllegal":"Для строковых литералов формата (f-строки) требуется версия Python 3.6 или более новая","formatStringInPattern":"Строка формата не разрешена в шаблоне","formatStringNestedFormatSpecifier":"В строке спецификации формата слишком высок уровень вложенности выражений","formatStringNestedQuote":"Строки, вложенные в f-строку, не могут использовать тот же символ кавычка, что и f-строка до Python 3.12","formatStringUnicode":"Строковые литералы формата (f-строки) не могут быть в кодировке Unicode","formatStringUnterminated":"Незавершенное выражение в f-строке; ожидается \\"}\\"","functionDecoratorTypeUnknown":"Нетипизированный декоратор функции скрывает тип функции; декоратор будет игнорирован","functionInConditionalExpression":"Условное выражение ссылается на функцию, которая всегда возвращает значение True","functionTypeParametersIllegal":"Для синтаксиса параметра типа функции требуется версия Python 3.12 или более новая","futureImportLocationNotAllowed":"Операторы импорта из __future__ должны находиться в начале файла","generatorAsyncReturnType":"Возвращаемый тип функции асинхронного генератора должен быть совместим с \\"AsyncGenerator[{yieldType}, Any]\\"","generatorNotParenthesized":"Выражения генератора следует взять в скобки, если аргументов больше одного","generatorSyncReturnType":"Возвращаемый тип функции генератора должен быть совместим с \\"Generator[{yieldType}, Any, Any]\\"","genericBaseClassNotAllowed":"Базовый класс \\"Generic\\" нельзя использовать с синтаксисом параметра типа","genericClassAssigned":"Универсальный тип класса невозможно присвоить","genericClassDeleted":"Не удается удалить универсальный тип класса","genericInstanceVariableAccess":"Доступ к универсальной переменной экземпляра через класс является неоднозначным","genericNotAllowed":"Ключевое слово \\"Generic\\" недопустимо в этом контексте","genericTypeAliasBoundTypeVar":"Псевдоним универсального типа в классе не может использовать переменные привязанного типа {names}","genericTypeArgMissing":"Для \\"Generic\\" требуется по крайней мере один аргумент типа","genericTypeArgTypeVar":"Аргумент типа для \\"Generic\\" должен быть переменной типа","genericTypeArgUnique":"Аргументы типа для \\"Generic\\" должны быть уникальными","globalReassignment":"Присвоение \\"{name}\\" происходит раньше глобального объявления","globalRedefinition":"Имя \\"{name}\\" уже объявлено ранее как глобальное","implicitStringConcat":"Неявное объединение строк не разрешено","importCycleDetected":"Обнаружен цикл в цепочке импорта","importDepthExceeded":"Глубина цепочки импорта превысила {depth}","importResolveFailure":"Не удается разрешить импорт \\"{importName}\\"","importSourceResolveFailure":"Не удается разрешить импорт \\"{importName}\\" из источника","importSymbolUnknown":"\\"{name}\\" — неизвестный символ импорта","incompatibleMethodOverride":"Метод \\"{name}\\" переопределяет класс \\"{className}\\" несовместимым образом","inconsistentIndent":"Сумма отступа не соответствует предыдущему отступу","inconsistentTabs":"Непоследовательное использование вкладок и пробелов в отступах","initMustReturnNone":"Метод \\"__init__\\" должен возвращать тип None","initSubclassCallFailed":"Неверные аргументы ключевых слов для метода __init_subclass__","initSubclassClsParam":"Переопределение метода __init_subclass__ должно принимать параметр \\"cls\\"","initVarNotAllowed":"Использование \\"InitVar\\" в этом контексте не допускается","instanceMethodSelfParam":"Методы экземпляра должны принимать параметр \\"self\\"","instanceVarOverridesClassVar":"Переменная экземпляра \\"{name}\\" переопределяет переменную класса с тем же именем в классе \\"{className}\\"","instantiateAbstract":"Не удается создать экземпляр абстрактного класса \\"{type}\\"","instantiateProtocol":"Не удается создать экземпляр класса протокола \\"{type}\\"","internalBindError":"При привязке файла \\"{file}\\" произошла внутренняя ошибка: {message}","internalParseError":"При разборе файла \\"{file}\\" произошла внутренняя ошибка: {message}","internalTypeCheckingError":"При проверке файла \\"{file}\\" произошла внутренняя ошибка: {message}","invalidIdentifierChar":"Недопустимый символ в идентификаторе","invalidStubStatement":"Инструкция не имеет смысла в файле-заглушке типа","invalidTokenChars":"Недопустимый символ \\"{text}\\" в маркере","isInstanceInvalidType":"Второй аргумент \\"isinstance\\" должен быть классом или кортежем классов","isSubclassInvalidType":"Второй аргумент в \\"issubclass\\" должен быть классом или кортежем классов","keyValueInSet":"Пары \\"ключ-значение\\" не допускаются в наборе","keywordArgInTypeArgument":"Аргументы ключевых слов нельзя использовать в списках аргументов типа","keywordOnlyAfterArgs":"Разделитель аргументов типа \\"только ключевое слово\\" не разрешен после параметра \\"*\\"","keywordParameterMissing":"За параметром \\"*\\" должен следовать один или несколько параметров ключевого слова.","keywordSubscriptIllegal":"Аргументы ключевых слов в нижних индексах не поддерживаются","lambdaReturnTypePartiallyUnknown":"Тип возвращаемого лямбдой значения \\"{returnType}\\" частично неизвестен","lambdaReturnTypeUnknown":"Тип значения, возвращаемого лямбдой, неизвестен","listAssignmentMismatch":"Выражение с типом \\"{type}\\" нельзя присвоить целевому списку","listInAnnotation":"Списочное выражение не разрешено в заметке типа","literalEmptyArgs":"Ожидается один или несколько аргументов типа после \\"Literal\\"","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"Невозможно использовать \\"Literal\\" в этом контексте без аргумента типа","literalNotCallable":"Не удается создать экземпляр типа литерала","literalUnsupportedType":"Аргументы типа для \\"Literal\\" должны иметь значение None, литеральное значение (int, bool, str или bytes) или значение перечислимого типа","matchIncompatible":"Операторы соответствия могут использоваться в Python версии не ниже 3.10","matchIsNotExhaustive":"Блоки case в операторе match обрабатывают не все множество возможных значений","maxParseDepthExceeded":"Превышена максимальная глубина разбора; разбейте выражение на составляющие выражения меньшего размера","memberAccess":"Не удается получить доступ к элементу \\"{name}\\" типа \\"{type}\\"","memberDelete":"Не удается удалить элемент \\"{name}\\" типа \\"{type}\\"","memberSet":"Не удается назначить элемент \\"{name}\\" для типа \\"{type}\\"","metaclassConflict":"Метакласс производного класса должен быть производным классом метаклассов всех его базовых классов","metaclassDuplicate":"Можно указать только один метакласс","metaclassIsGeneric":"Метакласс не может быть универсальным","methodNotDefined":"Метод \\"{name}\\" не определен","methodNotDefinedOnType":"Метод \\"{name}\\" не определен для типа \\"{type}\\"","methodOrdering":"Не удается создать согласованный порядок методов","methodOverridden":"\\"{name}\\" переопределяет метод с тем же именем в классе \\"{className}\\" с несовместимым типом \\"{type}\\"","methodReturnsNonObject":"Метод \\"{name}\\" не возвращает объект","missingSuperCall":"Метод \\"{methodName}\\" не вызывает метод с тем же именем в родительском классе","moduleAsType":"Модуль не может использоваться в качестве типа","moduleNotCallable":"Модуль не является вызываемым","moduleUnknownMember":"\\"{memberName}\\" не является известным элементом модуля \\"{moduleName}\\"","namedExceptAfterCatchAll":"Именованное предложение исключения не может стоять после предложения catch-all except","namedParamAfterParamSpecArgs":"Параметр ключевого слова \\"{name}\\" не может размещаться в сигнатуре после параметра аргументов ParamSpec","namedTupleEmptyName":"Имена в именованном кортеже не могут быть пустыми","namedTupleEntryRedeclared":"Не удается переопределить \\"{name}\\", так как родительский класс \\"{className}\\" является именованным кортежем","namedTupleFirstArg":"В качестве первого аргумента ожидалось имя именованного класса кортежа","namedTupleMultipleInheritance":"Множественное наследование для NamedTuple не поддерживается","namedTupleNameKeyword":"Имена полей не могут быть ключевыми словами","namedTupleNameType":"Ожидается двухфакторный кортеж с указанием имени и типа записи","namedTupleNameUnique":"Имена внутри именованного кортежа должны быть уникальными","namedTupleNoTypes":"\\"namedtuple\\" не предоставляет типов для записей кортежа; используйте вместо него \\"NamedTuple\\"","namedTupleSecondArg":"В качестве второго аргумента ожидается список записей именованного кортежа","newClsParam":"Переопределение метода __new__ должно принимать параметр \\"cls\\"","newTypeAnyOrUnknown":"Второй аргумент для NewType должен быть известным классом, а не вариантом \\"Любой\\" или \\"Неизвестный\\"","newTypeBadName":"Первый аргумент NewType должен быть строковым литералом","newTypeLiteral":"NewType нельзя использовать с типом литерала","newTypeNameMismatch":"NewType должен быть назначен переменной с тем же именем","newTypeNotAClass":"В NewType в качестве второго аргумента ожидается класс","newTypeParamCount":"Для NewType требуются два позиционных аргумента","newTypeProtocolClass":"NewType нельзя использовать со структурным типом (протокол или класс TypedDict)","noOverload":"Не существует перегрузок для \\"{name}\\", соответствующих указанным аргументам","noReturnContainsReturn":"Функция с объявленным типом возвращаемого значения \\"NoReturn\\" не может содержать оператор return","noReturnContainsYield":"Функция с объявленным типом возвращаемого значения \\"NoReturn\\" не может содержать инструкцию yield","noReturnReturnsNone":"Функция с объявленным типом возвращаемого значения \\"NoReturn\\" не может возвращать \\"None\\"","nonDefaultAfterDefault":"Аргумент, отличный от аргумента по умолчанию, следует за аргументом по умолчанию","nonLocalInModule":"Нелокальные объявления на уровне модулей не разрешены","nonLocalNoBinding":"Привязка для нелокального элемента \\"{name}\\" не найдена","nonLocalReassignment":"Назначение \\"{name}\\" происходит раньше нелокального объявления","nonLocalRedefinition":"\\"{name}\\" уже объявлено ранее как нелокальное","noneNotCallable":"Объект типа \\"None\\" не может быть вызван","noneNotIterable":"Объект типа \\"None\\" не может использоваться в качестве итерируемого значения","noneNotSubscriptable":"Объект типа \\"None\\" не подлежит подписке","noneNotUsableWith":"Объект типа \\"None\\" нельзя использовать с ключевым словом \\"with\\"","noneOperator":"Оператор \\"{operator}\\" не поддерживается для \\"None\\"","noneUnknownMember":"\\"{name}\\" не является известным элементом \\"None\\"","notRequiredArgCount":"После \\"NotRequired\\" ожидается один аргумент типа","notRequiredNotInTypedDict":"Использование \\"NotRequired\\" в этом контексте не допускается","objectNotCallable":"Объект типа \\"{type}\\" не является вызываемым","obscuredClassDeclaration":"Объявление класса \\"{name}\\" скрывается объявлением с тем же именем","obscuredFunctionDeclaration":"Объявление функции \\"{name}\\" скрывается объявлением с тем же именем","obscuredMethodDeclaration":"Объявление метода \\"{name}\\" скрывается объявлением с тем же именем","obscuredParameterDeclaration":"Объявление параметра \\"{name}\\" скрывается объявлением с тем же именем","obscuredTypeAliasDeclaration":"Объявление псевдонима типа \\"{name}\\" скрывается объявлением с тем же именем","obscuredVariableDeclaration":"Объявление \\"{name}\\" скрывается объявлением с тем же именем","operatorLessOrGreaterDeprecated":"Оператор \\"<>\\" не поддерживается в Python 3; используйте вместо него \\"!=\\"","optionalExtraArgs":"Ожидается один аргумент типа после \\"Optional\\"","orPatternIrrefutable":"Неопровержимый шаблон допускается только в качестве последнего вложенного шаблона в шаблоне \\"or\\"","orPatternMissingName":"Все вложенные шаблоны в шаблоне \\"or\\" должны быть привязаны к одним и тем же именам","overlappingKeywordArgs":"Типизированный словарь перекрывается с параметром ключевого слова: {names}","overlappingOverload":"Перегрузка {obscured} для \\"{name}\\" никогда не будет использоваться, так как ее параметры перекрывают перегрузку {obscuredBy}","overloadAbstractMismatch":"Все перегруженные методы должны быть абстрактными или не абстрактными","overloadClassMethodInconsistent":"Перегрузки для \\"{name}\\" используют @classmethod несогласованно","overloadFinalInconsistencyImpl":"Перегрузка для \\"{name}\\" помечена как @окончательная, но реализация — нет","overloadFinalInconsistencyNoImpl":"Перегрузка {index} для \\"{name}\\" помечена как @окончательная, но перегрузка 1 — нет","overloadImplementationMismatch":"Перегруженная реализация не согласована с сигнатурой перегрузки {index}","overloadReturnTypeMismatch":"Перегрузка {prevIndex} для \\"{name}\\" перекрывает перегрузку {newIndex} и возвращает несовместимый тип","overloadStaticMethodInconsistent":"Перегрузки для \\"{name}\\" используют @staticmethod несогласованно","overloadWithoutImplementation":"\\"{name}\\" помечен как перегруженный, но реализация не предоставлена","overriddenMethodNotFound":"Метод \\"{name}\\" помечен как переопределение, но базового метода с таким же именем нет.","overrideDecoratorMissing":"Метод \\"{name}\\" не помечен в качестве переопределения, но переопределяет метод в классе \\"{className}\\"","paramAfterKwargsParam":"Параметр не может следовать за параметром \\"**\\"","paramAlreadyAssigned":"Параметр \\"{name}\\" уже назначен.","paramAnnotationMissing":"Отсутствует заметка с типом для параметра \\"{name}\\"","paramAssignmentMismatch":"Выражение типа \\"{sourceType}\\" не может быть назначено параметру типа \\"{paramType}\\"","paramNameMissing":"Параметра с именем \\"{name}\\" не существует","paramSpecArgsKwargsUsage":"Элементы ParamSpec \\"args\\" и \\"kwargs\\" должны одновременно присутствовать в сигнатуре функции","paramSpecArgsMissing":"Отсутствуют аргументы для \\"{type}\\" ParamSpec","paramSpecArgsUsage":"Элемент \\"args\\" ParamSpec допустим только при использовании с параметром *args.","paramSpecAssignedName":"ParamSpec необходимо присвоить переменной с именем \\"{name}\\"","paramSpecContext":"ParamSpec не допускается в этом контексте","paramSpecDefaultNotTuple":"Для значения ParamSpec по умолчанию ожидается многоточие, выражение кортежа или ParamSpec","paramSpecFirstArg":"Ожидается имя ParamSpec в качестве первого аргумента","paramSpecKwargsUsage":"Элемент \\"kwargs\\" ParamSpec допустим только при использовании с параметром **kwargs.","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" не имеет смысла в этом контексте","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" относится к области вызываемого объекта в возвращаемом типе, и на него нельзя ссылаться в тексте функции.","paramSpecUnknownArg":"ParamSpec не поддерживает более одного аргумента","paramSpecUnknownMember":"\\"{name}\\" не является известным элементом ParamSpec","paramSpecUnknownParam":"\\"{name}\\" является неизвестным параметром для ParamSpec","paramTypeCovariant":"Переменную ковариантного типа нельзя использовать в типе параметра","paramTypePartiallyUnknown":"Тип параметра \\"{paramName}\\" частично неизвестен","paramTypeUnknown":"Тип параметра \\"{paramName}\\" неизвестен","parenthesizedContextManagerIllegal":"Для скобок в операторе \\"with\\" требуется версия Python 3.9 или более новая","patternNeverMatches":"Шаблон никогда не будет совпадать для типа субъекта \\"{type}\\"","positionArgAfterNamedArg":"Позиционный аргумент не может стоять после аргументов типа \\"ключевое слово\\"","positionOnlyAfterArgs":"Разделитель чисто позиционных параметров после параметра \\"*\\" не разрешен","positionOnlyAfterKeywordOnly":"Параметр \\"/\\" должен располагаться перед параметром \\"*\\"","positionOnlyAfterNon":"Чисто позиционный параметр не разрешен после параметра, который не является чисто позиционным","positionOnlyFirstParam":"Разделитель чисто позиционных параметров в качестве первого параметра не разрешен","positionOnlyIncompatible":"Разделитель чисто позиционных параметров можно использовать в Python версии не ниже 3.8","privateImportFromPyTypedModule":"\\"{name}\\" не экспортируется из модуля \\"{module}\\"","privateUsedOutsideOfClass":"Элемент \\"{name}\\" является закрытым, но используется вне класса, в котором объявлен","privateUsedOutsideOfModule":"\\"{name}\\" является закрытым, но используется вне модуля, в котором объявлен","propertyOverridden":"\\"{name}\\" неправильно переопределяет свойство с таким же именем в классе \\"{className}\\"","propertyStaticMethod":"Статические методы не разрешены в методах получения, задания и удаления свойств","protectedUsedOutsideOfClass":"\\"{name}\\" защищено и используется вне класса, в котором оно объявлено","protocolBaseClass":"Класс протокола \\"{classType}\\" не может быть производным от непротокольного класса \\"{baseType}\\"","protocolBaseClassWithTypeArgs":"Аргументы типа не допускаются с классом протокола при использовании синтаксиса параметра типа","protocolIllegal":"Ключевое слово \\"Protocol\\" можно использовать в Python версии не ниже 3.7","protocolNotAllowed":"Невозможно использовать \\"Protocol\\" в этом контексте","protocolUnsafeOverlap":"Класс небезопасно перекрывает \\"{name}\\" и может вызвать совпадение во время выполнения","protocolVarianceContravariant":"Переменная типа \\"{variable}\\", используемая в универсальном протоколе \\"{class}\\", должна быть контравариантной.","protocolVarianceCovariant":"Переменная типа \\"{variable}\\", используемая в универсальном протоколе \\"{class}\\", должна быть ковариантной","protocolVarianceInvariant":"Переменная типа \\"{variable}\\", используемая в универсальном протоколе \\"{class}\\", должна быть инвариантной","pyrightCommentInvalidDiagnosticBoolValue":"За директивой комментария Pyright должно следовать \\"=\\" и значение true или false","pyrightCommentInvalidDiagnosticSeverityValue":"За директивой комментария pyright должно следовать \\"=\\" и одно из следующих значений: true, false, error, warning, information или none","pyrightCommentMissingDirective":"После комментария pyright должна следовать директива (обычная или строгая) или правило диагностики","pyrightCommentNotOnOwnLine":"Комментарии Pyright, используемые для управления параметрами на уровне файлов, должны располагаться в отдельной строке","pyrightCommentUnknownDiagnosticRule":"Правило диагностики \\"{rule}\\" для комментария pyright неизвестно","pyrightCommentUnknownDiagnosticSeverityValue":"Значение \\"{value}\\" недопустимо для комментария pyright; ожидается одно из значений true, false, error, warning, information или none","pyrightCommentUnknownDirective":"\\"{directive}\\" является неизвестной директивой для комментария pyright; ожидается \\"strict\\" или \\"basic\\"","readOnlyArgCount":"Ожидается один аргумент типа после \\"ReadOnly\\"","readOnlyNotInTypedDict":"Использование \\"ReadOnly\\" в этом контексте не допускается","recursiveDefinition":"Не удалось определить тип \\"{name}\\", так как он ссылается на себя","relativeImportNotAllowed":"Операции импорта с относительным путем нельзя использовать с формой \\"import .a\\"; используйте вместо этого \\"from . import a\\"","requiredArgCount":"Ожидается один аргумент типа после \\"Required\\"","requiredNotInTypedDict":"Использование \\"Required\\" в этом контексте не допускается","returnInAsyncGenerator":"Оператор return со значением не допускается в асинхронном генераторе","returnMissing":"Функция с объявленным типом возвращаемого значения \\"{returnType}\\" должна возвращать значение во всех путях кода","returnOutsideFunction":"\\"return\\" можно использовать только внутри функции","returnTypeContravariant":"Переменная контравариантного типа не может использоваться в возвращаемом типе","returnTypeMismatch":"Выражение типа \\"{exprType}\\" не может быть назначено возвращаемому типу \\"{returnType}\\"","returnTypePartiallyUnknown":"Тип возвращаемого значения \\"{returnType}\\" частично неизвестен","returnTypeUnknown":"Тип возвращаемого значения неизвестен","revealLocalsArgs":"Не ожидаются аргументы для вызова \\"reveal_locals\\"","revealLocalsNone":"В этой области нет локальных элементов","revealTypeArgs":"Для вызова \\"reveal_type\\" ожидается один позиционный аргумент","revealTypeExpectedTextArg":"Аргумент \\"expected_text\\" для функции \\"reveal_type\\" должен быть значением литерала str","revealTypeExpectedTextMismatch":"Несоответствие текста в типе; ожидалось \\"{expected}\\", но получено \\"{received}\\"","revealTypeExpectedTypeMismatch":"Несоответствие типов; ожидается \\"{expected}\\", но получено \\"{received}\\"","selfTypeContext":"\'В этом контексте ключевое слово \\"Self\\" недопустимо","selfTypeMetaclass":"\\"Self\\" нельзя использовать в метаклассе (подкласс \\"type\\")","selfTypeWithTypedSelfOrCls":"Ключевое слово \\"Self\\" нельзя использовать в функции с параметром \\"self\\" или \\"cls\\" с заметкой типа, отличной от \\"Self\\".","setterGetterTypeMismatch":"Тип значения метода задания свойства нельзя присвоить типу возвращаемого значения метода получения","singleOverload":"Элемент \\"{name}\\" помечен как перегруженный, но дополнительные перегрузки отсутствуют","slotsAttributeError":"\\"{name}\\" не указано в __slots__","slotsClassVarConflict":"\\"{name}\\" конфликтует с переменной экземпляра, объявленной в __slots__","starPatternInAsPattern":"Шаблон \\"звездочка\\" не может использоваться с целевым объектом \\"as\\"","starPatternInOrPattern":"Шаблон \\"звездочка\\" не может быть аргументом операции OR в других шаблонах","starStarWildcardNotAllowed":"** нельзя использовать с символом подстановки \\"_\\"","staticClsSelfParam":"Статические методы не принимают в качестве параметра \\"self\\" и \\"cls\\"","stdlibModuleOverridden":"\\"{path}\\" переопределяет модуль stdlib \\"{name}\\"","stringNonAsciiBytes":"Символы, отличные от ASCII, не допускаются в строковом литерале байтов","stringNotSubscriptable":"От строкового выражения нельзя взять подстроку в заметке типа; заключите всю заметку в кавычки","stringUnsupportedEscape":"Неподдерживаемая escape-последовательность в строковом литерале","stringUnterminated":"В строковом литерале отсутствует символ конца строки","stubFileMissing":"Файл-заглушка для \\"{importName}\\" не найден","stubUsesGetAttr":"Файл-заглушка типа неполон; \\"__getattr__\\" скрывает ошибки типа для модуля","sublistParamsIncompatible":"Параметры вложенного списка не поддерживаются в Python 3.x","superCallArgCount":"Ожидается не более двух аргументов для вызова \\"super\\"","superCallFirstArg":"В качестве первого аргумента для вызова \\"super\\" ожидался тип класса, но получен \\"{type}\\"","superCallSecondArg":"Второй аргумент для вызова \\"super\\" должен быть объектом или классом, производным от \\"{type}\\"","superCallZeroArgForm":"Форма вызова \\"super\\" с нулевым аргументом допустима только внутри метода","superCallZeroArgFormStaticMethod":"Форма вызова \\"super\\" с нулевым аргументом недопустима в статическом методе","symbolIsPossiblyUnbound":"Элемент \\"{name}\\", возможно, не привязан","symbolIsUnbound":"Элемент \\"{name}\\" не привязан","symbolIsUndefined":"\\"{name}\\" не определено","symbolOverridden":"\\"{name}\\" переопределяет символ с тем же именем в классе \\"{className}\\"","ternaryNotAllowed":"Тернарное выражение не разрешено в заметке типа","totalOrderingMissingMethod":"Чтобы можно было использовать total_ordering, в классе должен быть определен один из операторов: \\"__lt__\\", \\"__le__\\", \\"__gt__\\" или \\"__ge__\\"","trailingCommaInFromImport":"Конечные запятые можно использовать только при заключении в скобки","tryWithoutExcept":"В операторе try должно быть хотя бы одно предложение exclude или finally.","tupleAssignmentMismatch":"Выражение с типом \\"{type}\\" не может быть назначено целевому кортежу","tupleInAnnotation":"Выражение кортежа не разрешено в заметке с типом","tupleIndexOutOfRange":"Индекс {index} выходит за пределы допустимого диапазона для типа {type}","typeAliasIllegalExpressionForm":"Недопустимая форма выражения для определения псевдонима типа","typeAliasIsRecursiveDirect":"Псевдоним типа \\"{name}\\" не может использовать себя в своем определении","typeAliasNotInModuleOrClass":"TypeAlias можно определить только внутри области модуля или класса","typeAliasRedeclared":"\\"{name}\\" объявлен как TypeAlias и может быть присвоен только один раз","typeAliasStatementBadScope":"Утверждение типа можно использовать только внутри области модуля или класса","typeAliasStatementIllegal":"Оператор псевдонима типа можно использовать в Python версии не ниже 3.12","typeAliasTypeBaseClass":"Псевдоним типа, определяемый в операторе \\"type\\", не может использоваться в качестве базового класса.","typeAliasTypeMustBeAssigned":"TypeAliasType должен быть назначен переменной с тем же именем, что и псевдоним типа","typeAliasTypeNameArg":"Первый аргумент TypeAliasType должен быть строковым литералом, представляющим имя псевдонима типа","typeAliasTypeNameMismatch":"Имя псевдонима типа должно соответствовать имени переменной, которой оно назначено","typeAliasTypeParamInvalid":"Список параметров типа должен быть кортежем, содержащим только TypeVar, TypeVarTuple или ParamSpec","typeAnnotationCall":"Выражение вызова не разрешено в выражении типа","typeAnnotationVariable":"Переменная не разрешена в выражении типа","typeAnnotationWithCallable":"Аргумент типа для \\"type\\" должен быть классом. Вызываемые объекты не поддерживаются","typeArgListExpected":"Ожидается ParamSpec, многоточие или список типов","typeArgListNotAllowed":"Выражение списка не разрешено для аргумента этого типа","typeArgsExpectingNone":"Для класса \\"{name}\\" не ожидается аргументов типа","typeArgsMismatchOne":"Ожидается один аргумент типа, но получено {received}","typeArgsMissingForAlias":"Для псевдонима универсального типа \\"{name}\\" ожидаются аргументы типа","typeArgsMissingForClass":"Ожидаются аргументы типа для универсального класса \\"{name}\\"","typeArgsTooFew":"Указано слишком мало аргументов типа для \\"{name}\\"; ожидалось {expected}, но получено {received}","typeArgsTooMany":"Для \\"{name}\\" предоставлено слишком много аргументов типа. Ожидается {expected}, но получено {received}","typeAssignmentMismatch":"Выражение типа \\"{sourceType}\\" нельзя присвоить объявленному типу \\"{destType}\\"","typeAssignmentMismatchWildcard":"Символ импорта \\"{name}\\" имеет тип \\"{sourceType}\\", который не может быть назначен объявленному типу \\"{destType}\\"","typeCallNotAllowed":"Вызов type() не разрешен в заметках типа","typeCheckOnly":"\\"{name}\\" помечено как @type_check_only и может использоваться только в заметках с типом","typeCommentDeprecated":"Комментарии типа больше не рекомендуются к использованию; вместо них используйте заметки типа","typeExpectedClass":"Ожидалось выражение типа, но получено \\"{type}\\"","typeGuardArgCount":"После \\"TypeGuard\\" или \\"TypeIs\\" ожидается один аргумент типа","typeGuardParamCount":"Определяемые пользователем функции и методы защиты типов должны иметь по крайней мере один входной параметр","typeIsReturnType":"Тип возвращаемого значения TypeIs (\\"{returnType}\\") не соответствует типу параметра значения (\\"{type}\\")","typeNotAwaitable":"\\"{type}\\" не является ожидаемым","typeNotIntantiable":"Не удается создать экземпляр \\"{type}\\"","typeNotIterable":"\\"{type}\\" не является итерируемым","typeNotSpecializable":"Не удалось специализировать тип \\"{type}\\"","typeNotSubscriptable":"Объект типа \\"{type}\\" не поддерживает операцию получения подстроки","typeNotSupportBinaryOperator":"Оператор \\"{operator}\\" не поддерживается для типов \\"{leftType}\\" и \\"{rightType}\\"","typeNotSupportBinaryOperatorBidirectional":"Оператор \\"{operator}\\" не поддерживается для типов \\"{leftType}\\" и \\"{rightType}\\", если ожидаемый тип является \\"{expectedType}\\"","typeNotSupportUnaryOperator":"Оператор \\"{operator}\\" не поддерживается для типа \\"{type}\\"","typeNotSupportUnaryOperatorBidirectional":"Оператор \\"{operator}\\" не поддерживается для типа \\"{type}\\", если ожидается тип \\"{expectedType}\\"","typeNotUsableWith":"Объект типа \\"{type}\\" нельзя использовать с ключевым словом \\"with\\", так как он не реализует метод {method}","typeParameterBoundNotAllowed":"Привязку или ограничение нельзя использовать с параметром типа variadic или ParamSpec","typeParameterConstraintTuple":"Ограничение параметра типа должно быть кортежем двух или более типов","typeParameterExistingTypeParameter":"Параметр типа \\"{name}\\" уже используется","typeParameterNotDeclared":"Параметр типа \\"{name}\\" не включен в список параметров типа для контейнера \\"{container}\\"","typeParametersMissing":"Необходимо указать хотя бы один параметр типа","typePartiallyUnknown":"Тип \\"{name}\\" частично неизвестен","typeUnknown":"Тип \\"{name}\\" неизвестен","typeVarAssignedName":"TypeVar необходимо присвоить переменной с именем \\"{name}\\"","typeVarAssignmentMismatch":"Тип \\"{type}\\" не может быть присвоен переменной типа \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar не может быть одновременно привязанным и ограниченным","typeVarBoundGeneric":"Тип привязки TypeVar не может быть универсальным","typeVarConstraintGeneric":"Тип ограничения TypeVar не может быть универсальным","typeVarDefaultBoundMismatch":"Тип по умолчанию TypeVar должен быть подтипом привязанного типа","typeVarDefaultConstraintMismatch":"Тип по умолчанию TypeVar должен быть одним из ограниченных типов","typeVarDefaultIllegal":"Для типов переменных по умолчанию требуется версия Python 3.13 или более новая","typeVarDefaultInvalidTypeVar":"Параметр типа \\"{name}\\" имеет тип по умолчанию, который ссылается на одну или несколько переменных типа, находящихся вне области","typeVarFirstArg":"В качестве первого аргумента ожидалось имя TypeVar","typeVarNoMember":"У \\"{type}\\" TypeVar нет элемента \\"{name}\\"","typeVarNotSubscriptable":"Невозможно взять подстроку от \\"{type}\\" TypeVar","typeVarNotUsedByOuterScope":"Переменная типа \\"{name}\\" не имеет смысла в этом контексте","typeVarPossiblyUnsolvable":"Переменная типа \\"{name}\\" может остаться нерешенной, если вызывающая сторона не указывает аргумент для параметра \\"{param}\\"","typeVarScopedToReturnType":"Переменная типа \\"{name}\\" относится к вызываемому объекту в возвращаемом типе, и на нее нельзя ссылаться в тексте функции.","typeVarSingleConstraint":"TypeVar должен иметь не менее двух ограниченных типов","typeVarTupleConstraints":"TypeVarTuple не может использовать ограничения значений","typeVarTupleContext":"TypeVarTuple не допускается в этом контексте","typeVarTupleDefaultNotUnpacked":"Тип по умолчанию TypeVarTuple должен быть распакованным кортежем или TypeVarTuple.","typeVarTupleMustBeUnpacked":"Для значения TypeVarTuple требуется оператор распаковки","typeVarTupleUnknownParam":"\\"{name}\\" является неизвестным параметром для TypeVarTuple","typeVarUnknownParam":"\\"{name}\\" является неизвестным параметром для TypeVar","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" уже используется внешней областью","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" появляется в сигнатуре универсальной функции только один раз","typeVarVariance":"TypeVar не может быть одновременно ковариантным и контравариантным","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\" имеет значение по умолчанию и не может следовать за typeVarTuple \\"{variadicName}\\"","typeVarWithoutDefault":"\\"{name}\\" не может появиться после \\"{other}\\" в списке параметров типа, так как у него нет типа по умолчанию","typeVarsNotInGenericOrProtocol":"Generic[] и Protocol[] должны включать все переменные типа","typedDictAccess":"Не удалось получить доступ к элементу в TypedDict","typedDictAssignedName":"TypedDict необходимо присвоить переменной с именем \\"{name}\\"","typedDictBadVar":"Классы TypedDict могут содержать только заметки с типом","typedDictBaseClass":"Все базовые классы для классов TypedDict также должны быть классами TypedDict","typedDictBoolParam":"От параметра \\"{name}\\" ожидается значение True или False","typedDictClosedExtras":"Базовый класс \\"{name}\\" представляет собой закрытый TypedDict; дополнительные элементы должны иметь тип \\"{type}\\"","typedDictClosedNoExtras":"Базовый класс \\"{name}\\" представляет собой закрытый TypedDict; дополнительные элементы не разрешены","typedDictDelete":"Не удалось удалить элемент в TypedDict","typedDictEmptyName":"Имена в TypedDict не могут быть пустыми","typedDictEntryName":"Для имени записи словаря ожидается строковый литерал","typedDictEntryUnique":"Имена в словаре должны быть уникальными","typedDictExtraArgs":"Дополнительные аргументы TypedDict не поддерживаются","typedDictFieldNotRequiredRedefinition":"Элемент TypedDict \\"{name}\\" нельзя переопределить как необязательный","typedDictFieldReadOnlyRedefinition":"Элемент TypedDict \\"{name}\\" нельзя переопределить как доступный только для чтения","typedDictFieldRequiredRedefinition":"Элемент TypedDict \\"{name}\\" нельзя переопределить как обязательный","typedDictFirstArg":"В качестве первого аргумента ожидается имя класса TypedDict","typedDictInitsubclassParameter":"TypedDict не поддерживает параметр __init_subclass__ \\"{name}\\"","typedDictNotAllowed":"Невозможно использовать \\"TypedDict\\" в этом контексте","typedDictSecondArgDict":"В качестве второго параметра ожидается словарь или ключевое слово","typedDictSecondArgDictEntry":"Ожидается простая запись словаря","typedDictSet":"Не удалось назначить элемент в TypedDict","unaccessedClass":"Нет доступа к классу \\"{name}\\"","unaccessedFunction":"Доступ к функции \\"{name}\\" не производится","unaccessedImport":"Доступ к импорту \\"{name}\\" не производится","unaccessedSymbol":"Доступ к \\"{name}\\" не осуществляется","unaccessedVariable":"Доступ к переменной \\"{name}\\" не производится","unannotatedFunctionSkipped":"Анализ функции \\"{name}\\" пропущен, так как она не аннотирована.","unaryOperationNotAllowed":"Унарный оператор нельзя использовать в заметке типа","unexpectedAsyncToken":"После \\"async\\" ожидается \\"def\\", \\"with\\" или \\"for\\"","unexpectedExprToken":"Непредвиденный токен в конце выражения","unexpectedIndent":"Непредвиденный отступ","unexpectedUnindent":"Отступ не ожидается","unhashableDictKey":"Ключ словаря должен быть хэшируемым","unhashableSetEntry":"Запись набора должна быть хэшируемой","uninitializedAbstractVariables":"Переменные, определенные в абстрактном базовом классе, не инициализированы в окончательном классе \\"{classType}\\"","uninitializedInstanceVariable":"Переменная экземпляра \\"{name}\\" не инициализирована ни в тексте класса, ни в методе __init__","unionForwardReferenceNotAllowed":"Синтаксис объединения не может использоваться со строковым операндом; заключите всё выражение в кавычки","unionSyntaxIllegal":"Альтернативный синтаксис объединений можно использовать в версии Python не ниже 3.10","unionTypeArgCount":"Для объединения требуется два или более аргумента типа","unionUnpackedTuple":"Объединение не может включать распакованный кортеж","unionUnpackedTypeVarTuple":"Объединение не может включать распакованный TypeVarTuple","unnecessaryCast":"Ненужный вызов \\"cast\\"; тип уже является \\"{type}\\"","unnecessaryIsInstanceAlways":"Ненужный вызов isinstance; \\"{testType}\\" всегда является экземпляром \\"{classType}\\"","unnecessaryIsSubclassAlways":"Ненужный вызов issubclass. \\"{testType}\\" всегда является подклассом \\"{classType}\\"","unnecessaryPyrightIgnore":"Ненужный комментарий \\"# pyright: ignore\\"","unnecessaryPyrightIgnoreRule":"Ненужное правило \\"# pyright: ignore\\": \\"{name}\\"","unnecessaryTypeIgnore":"Ненужный комментарий \\"# type: ignore\\"","unpackArgCount":"Ожидается один аргумент типа после \\"Unpack\\"","unpackExpectedTypeVarTuple":"В качестве аргумента типа для распаковки ожидается элемент TypeVarTuple или кортеж","unpackExpectedTypedDict":"Ожидается аргумент типа TypedDict для распаковки","unpackIllegalInComprehension":"Операция распаковки в понимании не разрешена","unpackInAnnotation":"Оператор распаковки нельзя использовать в заметке типа","unpackInDict":"Операция распаковки в словарях не разрешена","unpackInSet":"Оператор распаковки не разрешен в наборе","unpackNotAllowed":"Распаковка допускается в этом контексте","unpackOperatorNotAllowed":"Операция распаковки допускается в этом контексте","unpackTuplesIllegal":"Операцию распаковки в кортежах можно использовать в Python версии не ниже 3.8","unpackedArgInTypeArgument":"Неупакованные аргументы нельзя использовать в списках аргументов типа","unpackedArgWithVariadicParam":"Невозможно использовать распакованный аргумент для параметра TypeVarTuple","unpackedDictArgumentNotMapping":"Выражение аргумента после ** должно быть сопоставлением с типом ключа \\"str\\".","unpackedDictSubscriptIllegal":"Оператор распаковки словаря не допускается внутри операции взятия подстроки","unpackedSubscriptIllegal":"Оператор распаковки в операции взятия подстроки можно использовать в Python версии не ниже 3.11","unpackedTypeVarTupleExpected":"Ожидается распакованный TypeVarTuple; используйте Unpack[{name1}] или *{name2}","unpackedTypedDictArgument":"Не удалось сопоставить распакованный аргумент TypedDict с параметрами","unreachableCode":"Код недоступен","unreachableExcept":"Предложение Except недоступно, так как исключение уже обработано","unsupportedDunderAllOperation":"Операция на \\"__all__\\" не поддерживается, поэтому список экспортируемых символов может быть неправильным","unusedCallResult":"Результат выражения вызова принадлежит к типу \\"{type}\\" и не используется. Назначьте переменной \\"_\\", если это сделано намеренно","unusedCoroutine":"Результат вызова асинхронной функции не используется; добавьте ключевое слово \\"await\\" или присвойте результат переменной","unusedExpression":"Значение выражения не используется","varAnnotationIllegal":"Заметки типа для переменных можно использовать в Python версии не ниже 3.6. Для совместимости с более ранними версиями используйте комментарий к типу.","variableFinalOverride":"Переменная \\"{name}\\" помечена как Final и переопределяет неокончательную переменную с тем же именем в классе \\"{className}\\"","variadicTypeArgsTooMany":"Список аргументов типа может содержать не более одного распакованного элемента TypeVarTuple или кортежа","variadicTypeParamTooManyAlias":"Псевдоним типа может иметь не более одного параметра типа TypeVarTuple, но получил несколько ({names})","variadicTypeParamTooManyClass":"Универсальный класс может иметь не более одного параметра типа TypeVarTuple, но получил несколько ({names})","walrusIllegal":"Оператор \\":=\\" может использоваться в Python версии не ниже 3.8","walrusNotAllowed":"Оператор \\":=\\" не допускается в этом контексте без окружающих круглых скобок","wildcardInFunction":"Импорт с подстановочными знаками в классе или функции запрещен","wildcardLibraryImport":"Импорт подстановочных знаков из библиотеки запрещен","wildcardPatternTypePartiallyUnknown":"Тип, захваченный шаблоном подстановки, частично неизвестен","wildcardPatternTypeUnknown":"Тип, захваченный шаблоном подстановки, неизвестен","yieldFromIllegal":"\\"Yield from\\" можно использовать в Python версии не ниже 3.3","yieldFromOutsideAsync":"\\"yield from\\" не допускается в асинхронной функции","yieldOutsideFunction":"\\"yield\\" не допускается за пределами функции или лямбда-выражении","yieldWithinListCompr":"\\"yield\\" не допускается внутри понимания списка","zeroCaseStatementsFound":"Операторе match должен включать по крайней мере один оператор case","zeroLengthTupleNotAllowed":"Кортеж нулевой длины не допускается в этом контексте"},"DiagnosticAddendum":{"annotatedNotAllowed":"Специальную форму \\"С заметками\\" нельзя использовать с проверками экземпляра и класса","argParam":"Аргумент соответствует параметру \\"{paramName}\\"","argParamFunction":"Аргумент соответствует параметру \\"{paramName}\\" функции \\"{functionName}\\"","argsParamMissing":"У параметра \\"*{paramName}\\" нет соответствующего параметра","argsPositionOnly":"Несоответствие параметров только положения. Ожидается {expected}, но получено {received}","argumentType":"Аргумент принадлежит к типу \\"{type}\\"","argumentTypes":"Типы аргументов: ({types})","assignToNone":"Этот тип нельзя присвоить типу \\"None\\"","asyncHelp":"Вы имели в виду \\"async with\\"?","baseClassIncompatible":"Базовый класс \\"{baseClass}\\" несовместим с типом \\"{type}\\"","baseClassIncompatibleSubclass":"Базовый класс \\"{baseClass}\\" является производным от \\"{subclass}\\", который несовместим с типом \\"{type}\\"","baseClassOverriddenType":"Базовый класс \\"{baseClass}\\" предоставляет тип \\"{type}\\", который переопределен","baseClassOverridesType":"Базовый класс \\"{baseClass}\\" переопределяет тип \\"{type}\\"","bytesTypePromotions":"Установите для параметра DisableBytesTypePromotions значение ЛОЖЬ, чтобы включить повышение типа для \\"bytearray\\" и \\"memoryview\\"","conditionalRequiresBool":"Метод __bool__ для типа \\"{operandType}\\" возвращает тип \\"{boolReturnType}\\", а не \\"bool\\"","dataClassFieldLocation":"Объявление поля","dataClassFrozen":"Элемент \\"{name}\\" зафиксирован","dataProtocolUnsupported":"\\"{name}\\" является протоколом данных","descriptorAccessBindingFailed":"Не удалось привязать метод \\"{name}\\" для класса дескриптора \\"{className}\\"","descriptorAccessCallFailed":"Не удалось вызвать метод \\"{name}\\" для класса дескриптора \\"{className}\\"","finalMethod":"Окончательный метод","functionParamDefaultMissing":"В параметре \\"{name}\\" отсутствует аргумент по умолчанию.","functionParamName":"Несоответствие имени параметра: \\"{destName}\\" и \\"{srcName}\\"","functionParamPositionOnly":"Несоответствие исключительно позиционных параметров; параметр \\"{name}\\" не является исключительно позиционным","functionReturnTypeMismatch":"Тип возвращаемого значения функции \\"{sourceType}\\" несовместим с типом \\"{destType}\\"","functionTooFewParams":"Функция принимает слишком мало позиционных параметров; ожидалось {expected}, но получено {received}","functionTooManyParams":"Функция принимает слишком много позиционных параметров; ожидалось {expected}, но получено {received}","genericClassNotAllowed":"Универсальный тип с аргументами типа запрещен для проверок экземпляров или классов","incompatibleDeleter":"Метод удаления свойства является несовместимым","incompatibleGetter":"Несовместимый метод получения свойств","incompatibleSetter":"Метод задания свойства является несовместимым","initMethodLocation":"Метод __init__ определен в классе \\"{type}\\"","initMethodSignature":"Сигнатура __init__ — \\"{type}\\"","initSubclassLocation":"Метод __init_subclass__ определен в классе \\"{name}\\"","invariantSuggestionDict":"Рассмотрите возможность перехода с \\"dict\\" на \\"Mapping\\", являющийся ковариантным по типу значения.","invariantSuggestionList":"Рассмотрите возможность перехода с \\"list\\" на \\"Sequence\\", являющийся ковариантным.","invariantSuggestionSet":"Рассмотрите возможность переключения с \\"set\\" на \\"Container\\", который является ковариантным","keyNotRequired":"\\"{name}\\" не является обязательным ключом в \\"{type}\\", поэтому доступ может вызвать исключение во время выполнения","keyReadOnly":"\\"{name}\\" является ключом только для чтения в \\"{type}\\"","keyRequiredDeleted":"\\"{name}\\" является обязательным ключом и не подлежит удалению","keyUndefined":"\\"{name}\\" не является определенным ключом в \\"{type}\\"","kwargsParamMissing":"У параметра \\"**{paramName}\\" нет соответствующего параметра","listAssignmentMismatch":"Тип \\"{type}\\" несовместим с целевым списком","literalAssignmentMismatch":"\\"{sourceType}\\" нельзя присвоить типу \\"{destType}\\"","matchIsNotExhaustiveHint":"Если не предполагается исчерпывающая обработка, добавьте \\"case _: pass\\"","matchIsNotExhaustiveType":"Тип \\"{type}\\" не обрабатывается","memberAssignment":"Выражение типа \\"{type}\\" не может быть назначено элементу \\"{name}\\" класса \\"{classType}\\"","memberIsAbstract":"Отсутствует реализация \\"{type}.{name}\\".","memberIsAbstractMore":"и еще {{count}}","memberIsClassVarInProtocol":"\\"{name}\\" определено как класс ClassVar в протоколе","memberIsFinalInProtocol":"\\"{name}\\" помечено в протоколе как Final","memberIsInitVar":"Элемент \\"{name}\\" является полем только для инициализации","memberIsInvariant":"Элемент \\"{name}\\" инвариантен, поскольку помечен как mutable","memberIsNotClassVarInClass":"Необходимо определить \\"{name}\\" как ClassVar для совместимости с протоколом.","memberIsNotClassVarInProtocol":"\\"{name}\\" не определено как класс ClassVar в протоколе","memberIsNotFinalInProtocol":"\\"{name}\\" не помечен как окончательный в протоколе","memberIsWritableInProtocol":"\\"{name}\\" доступно для записи в протоколе","memberSetClassVar":"Элемент \\"{name}\\" не может быть назначен через экземпляр класса, так как это ClassVar","memberTypeMismatch":"\\"{name}\\" является несовместимым типом","memberUnknown":"Элемент \\"{name}\\" неизвестен","metaclassConflict":"Метакласс \\"{metaclass1}\\" конфликтует с \\"{metaclass2}\\"","missingDeleter":"Отсутствует метод удаления свойства","missingGetter":"Отсутствует метод получения свойства","missingSetter":"Отсутствует метод установки свойств","namedParamMissingInDest":"В целевом объекте отсутствует параметр ключевого слова \\"{name}\\"","namedParamMissingInSource":"В источнике нет параметра ключевого слова \\"{name}\\"","namedParamTypeMismatch":"Параметр ключевого слова {name} типа \\"{sourceType}\\" нельзя присвоить типу \\"{destType}\\"","namedTupleNotAllowed":"NamedTuple не может использоваться для проверок экземпляров или классов","newMethodLocation":"Метод __new__ определен в классе \\"{type}\\"","newMethodSignature":"Сигнатура метода __new__ требует \\"{type}\\"","newTypeClassNotAllowed":"Класс, созданный с NewType, нельзя использовать с проверками экземпляров и классов","noOverloadAssignable":"Нет перегруженной функции, соответствующей типу \\"{type}\\"","noneNotAllowed":"Их невозможно использовать для проверок экземпляров или классов","orPatternMissingName":"Отсутствуют имена: {name}","overloadIndex":"Наилучшее совпадение: {index} перегрузки","overloadNotAssignable":"Одна или несколько перегрузок \\"{name}\\" не подлежат присвоению","overloadSignature":"Здесь определена сигнатура перегрузки","overriddenMethod":"Переопределенный метод","overriddenSymbol":"Переопределенный символ","overrideInvariantMismatch":"Тип переопределения \\"{overrideType}\\" не совпадает с базовым типом \\"{baseType}\\"","overrideIsInvariant":"Переменная изменяема, поэтому ее тип является инвариантным","overrideNoOverloadMatches":"В переопределении нет сигнатуры перегрузки, совместимой с базовым методом","overrideNotClassMethod":"Базовый метод объявлен как classmethod, а его переопределение — нет","overrideNotInstanceMethod":"Базовый метод объявлен как метод экземпляра, а его переопределение — нет","overrideNotStaticMethod":"Базовый метод объявлен как статический, а его переопределение — нет","overrideOverloadNoMatch":"Переопределение не обрабатывает все перегрузки базового метода","overrideOverloadOrder":"Перегрузки в методе переопределения должны располагаться в том же порядке, что и в базовом методе","overrideParamKeywordNoDefault":"Несоответствие параметра ключевого слова \\"{name}\\": базовый параметр содержит значение аргумента по умолчанию, параметр переопределения — нет","overrideParamKeywordType":"Несоответствие типа параметра ключевого слова \\"{name}\\": базовый параметр имеет тип \\"{baseType}\\", параметр переопределения имеет тип \\"{overrideType}\\"","overrideParamName":"Несоответствие имени параметра {index}: базовый параметр называется \\"{baseName}\\", параметр переопределения называется \\"{overrideName}\\"","overrideParamNameExtra":"Параметр \\"{name}\\" отсутствует в базовом классе","overrideParamNameMissing":"Параметр \\"{name}\\" отсутствует в переопределении","overrideParamNamePositionOnly":"Несоответствие параметра {index}: базовый параметр \\"{baseName}\\" является параметром ключевого слова, параметр переопределения предназначен только для позиции","overrideParamNoDefault":"Несоответствие параметра {index}: базовый параметр содержит значение аргумента по умолчанию, параметр переопределения — нет","overrideParamType":"Несоответствие типа параметра {index}: базовый параметр имеет тип \\"{baseType}\\", параметр переопределения имеет тип \\"{overrideType}\\"","overridePositionalParamCount":"Несоответствие позиционного подсчета параметров. Базовый метод содержит {baseCount}, но переопределение содержит {overrideCount}","overrideReturnType":"Несоответствие типа возвращаемого значения: базовый метод возвращает тип \\"{baseType}\\", а переопределение — \\"{overrideType}\\"","overrideType":"Базовый класс определяет тип как \\"{type}\\"","paramAssignment":"Параметр {index}: тип \\"{sourceType}\\" нельзя присвоить типу \\"{destType}\\"","paramSpecMissingInOverride":"В методе переопределения отсутствуют параметры ParamSpec.","paramType":"Параметр принадлежит к типу \\"{paramType}\\"","privateImportFromPyTypedSource":"Вместо этого используйте импорт из \\"{module}\\"","propertyAccessFromProtocolClass":"Свойство, определенное в классе протокола, не может быть доступно как переменная класса.","propertyMethodIncompatible":"Метод свойства \\"{name}\\" несовместим","propertyMethodMissing":"Метод свойства \\"{name}\\" отсутствует в переопределении","propertyMissingDeleter":"Для свойства \\"{name}\\" не определен метод удаления","propertyMissingSetter":"Для свойства \\"{name}\\" не определен метод задания","protocolIncompatible":"\\"{sourceType}\\" несовместим с протоколом \\"{destType}\\"","protocolMemberMissing":"\\"{name}\\" отсутствует.","protocolRequiresRuntimeCheckable":"Класс протокола должен быть @runtime_checkable, чтобы его можно было использовать при проверках экземпляров и классов","protocolSourceIsNotConcrete":"\\"{sourceType}\\" не является конкретным типом класса и не может быть присвоен типу \\"{destType}\\"","protocolUnsafeOverlap":"Атрибуты \\"{name}\\" используют те же имена, что и протокол","pyrightCommentIgnoreTip":"Для подавления диагностики в одной строке используйте конструкцию \\"# pyright: ignore[<правила диагностики>]","readOnlyAttribute":"Атрибут \\"{name}\\" доступен только для чтения","seeClassDeclaration":"См. объявление класса","seeDeclaration":"См. объявление","seeFunctionDeclaration":"См. объявление функции","seeMethodDeclaration":"См. объявление метода","seeParameterDeclaration":"Просмотреть объявление параметра","seeTypeAliasDeclaration":"Просмотреть объявление псевдонима типа","seeVariableDeclaration":"Просмотреть объявление переменной","tupleAssignmentMismatch":"Тип \\"{type}\\" несовместим с целевым кортежем","tupleEntryTypeMismatch":"Запись кортежа {entry} имеет неверный тип","tupleSizeIndeterminateSrc":"Несоответствие размеров кортежа: ожидается \\"{expected}\\", но получено неопределенное значение","tupleSizeIndeterminateSrcDest":"Несоответствие размеров кортежа: ожидается {expected} или больше, но получено неопределенное значение","tupleSizeMismatch":"Несоответствие размеров кортежа: ожидается \\"{expected}\\", но получено \\"{received}\\"","tupleSizeMismatchIndeterminateDest":"Несоответствие размеров кортежа: ожидается {expected} или больше, но получено {received}","typeAliasInstanceCheck":"Псевдоним типа, создаваемый оператором \\"type\\", не может использоваться с проверками экземпляра и класса.","typeAssignmentMismatch":"Тип \\"{sourceType}\\" нельзя присвоить типу \\"{destType}\\"","typeBound":"Тип \\"{sourceType}\\" несовместим с привязанным типом \\"{destType}\\" для переменной типа \\"{name}\\"","typeConstrainedTypeVar":"Тип \\"{type}\\" несовместим с переменной ограниченного типа \\"{name}\\"","typeIncompatible":"\\"{sourceType}\\" несовместим с \\"{destType}\\"","typeNotClass":"\\"{type}\\" не является классом.","typeNotStringLiteral":"\\"{type}\\" не является строковым литералом","typeOfSymbol":"Тип \\"{name}\\" является \\"{type}\\"","typeParamSpec":"Тип \\"{type}\\" несовместим с ParamSpec \\"{name}\\"","typeUnsupported":"Тип \\"{type}\\" не поддерживается","typeVarDefaultOutOfScope":"Переменная типа \\"{name}\\" лежит за пределами области","typeVarIsContravariant":"Параметр типа \\"{name}\\" является контравариантным, но \\"{sourceType}\\" не является супертипом \\"{destType}\\"","typeVarIsCovariant":"Параметр типа \\"{name}\\" является ковариантным, но \\"{sourceType}\\" не является подтипом \\"{destType}\\"","typeVarIsInvariant":"Параметр типа \\"{name}\\" является инвариантным, но \\"{sourceType}\\" не совпадает с \\"{destType}\\"","typeVarNotAllowed":"TypeVar не допускается для проверок экземпляров или классов","typeVarTupleRequiresKnownLength":"TypeVarTuple не может граничить с кортежем неизвестной длины","typeVarUnnecessarySuggestion":"Вместо этого используйте {type}","typeVarUnsolvableRemedy":"Укажите перегрузку, которая указывает тип возвращаемого значения, если аргумент не передается","typeVarsMissing":"Отсутствуют переменные типа: {names}","typedDictBaseClass":"Класс \\"{type}\\" не является TypedDict","typedDictClassNotAllowed":"Класс TypedDict не допускается для проверок экземпляров или классов","typedDictClosedExtraNotAllowed":"Не удается добавить элемент \\"{name}\\"","typedDictClosedExtraTypeMismatch":"Не удается добавить элемент \\"{name}\\" типа \\"{type}\\"","typedDictClosedFieldNotRequired":"Не удается добавить элемент \\"{name}\\", так как он должен быть помечен как необязательный","typedDictExtraFieldNotAllowed":"Элемент \\"{name}\\" отсутствует в типе \\"{type}\\"","typedDictExtraFieldTypeMismatch":"Тип элемента \\"{name}\\" несовместим с типом \\"__extra_items__\\" в \\"{type}\\"","typedDictFieldMissing":"\\"{name}\\" отсутствует в \\"{type}\\"","typedDictFieldNotReadOnly":"\\"{name}\\" не является элементом \\"{type}\\" только для чтения","typedDictFieldNotRequired":"\\"{name}\\" не является обязательным в \\"{type}\\"","typedDictFieldRequired":"\\"{name}\\" является обязательным в \\"{type}\\"","typedDictFieldTypeMismatch":"Тип \\"{type}\\" нельзя присвоить полю \\"{name}\\"","typedDictFieldUndefined":"Элемент \\"{name}\\" не определен в типе \\"{type}\\"","typedDictFinalMismatch":"\\"{sourceType}\\" несовместим с \\"{destType}\\" из-за несоответствия окончательности","typedDictKeyAccess":"Использовать [\\"{name}\\"] для ссылки на элемент в TypedDict","typedDictNotAllowed":"TypedDict не может использоваться для проверок экземпляров или классов","unhashableType":"Тип \\"{type}\\" не является хэшируемым","uninitializedAbstractVariable":"Переменная экземпляра \\"{name}\\" определена в абстрактном базовом классе \\"{classType}\\", но не инициализирована","unreachableExcept":"\\"{exceptionType}\\" является подклассом \\"{parentType}\\"","useDictInstead":"Используйте Dict[T1, T2] для указания типа словаря","useListInstead":"Используйте List[T] для указания типа списка или Union[T1, T2] для указания типа объединения","useTupleInstead":"Используйте конструкцию tuple[T1, ..., Tn], чтобы указать тип кортежа, или Union[T1, T2], чтобы указать тип объединения","useTypeInstead":"Используйте вместо этого Type[T]","varianceMismatchForClass":"Вариант аргумента типа \\"{typeVarName}\\" несовместим с базовым классом \\"{className}\\"","varianceMismatchForTypeAlias":"Отклонение аргумента типа \\"{typeVarName}\\" несовместимо с \\"{typeAliasParam}\\""}}')},89400:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"Tür Saplaması Oluştur","createTypeStubFor":"\\"{moduleName}\\" için Tür Saplaması Oluştur","executingCommand":"Komut yürütülüyor","filesToAnalyzeCount":"analiz edilecek {count} dosya var","filesToAnalyzeOne":"Analiz edilecek 1 dosya","findingReferences":"Başvurular bulunuyor","organizeImports":"İçeri Aktarmaları Düzenle","renameShadowedFile":"\\"{oldFile}\\" dosyasını \\"{newFile}\\" olarak yeniden adlandır"},"Completion":{"autoImportDetail":"Otomatik içeri aktarma","indexValueDetail":"Dizin değeri"},"Diagnostic":{"abstractMethodInvocation":"\\"{method}\\" metodu soyut veya uygulanmamış olduğundan çağrılamaz","annotatedParamCountMismatch":"Parametre ek açıklama sayısı uyuşmazlığı: {expected} bekleniyordu ancak {received} alındı","annotatedTypeArgMissing":"\\"Annotated\\" için bir tür bağımsız değişkeni ve bir veya daha fazla ek açıklama bekleniyordu","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"Tür ek açıklamaları biçim dizesi sabit değerlerini (f-strings) kullanamaz","annotationNotSupported":"Tür ek açıklaması bu deyim için desteklenmiyor","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"Tür ek açıklamaları birden çok dize sabit değerine yayılamaz","annotationStringEscape":"Tür ek açıklamaları kaçış karakterleri içeremez","argAssignment":"\\"{argType}\\" türünde bağımsız değişken, \\"{paramType}\\" türündeki parametreye atanamaz","argAssignmentFunction":"\\"{argType}\\" türünde bağımsız değişken, \\"{functionName}\\" işlevi içinde \\"{paramType}\\" türündeki parametreye atanamaz","argAssignmentParam":"\\"{argType}\\" türünde bağımsız değişken, \\"{paramName}\\" türündeki \\"{paramType}\\" parametresine atanamaz","argAssignmentParamFunction":"\\"{argType}\\" türünde bağımsız değişken, \\"{functionName}\\" işlevi içinde \\"{paramName}\\" türündeki \\"{paramType}\\" parametresine atanamaz","argMissingForParam":"{name} parametresi için bağımsız değişken eksik","argMissingForParams":"{names} parametrelerinin bağımsız değişkenleri eksik","argMorePositionalExpectedCount":"{expected} tane daha konumsal bağımsız değişken bekleniyordu","argMorePositionalExpectedOne":"1 tane daha konumsal bağımsız değişken bekleniyordu","argPositional":"Konumsal bağımsız değişken bekleniyordu","argPositionalExpectedCount":"{expected} konumsal bağımsız değişken bekleniyordu","argPositionalExpectedOne":"1 konumsal bağımsız değişken bekleniyordu","argTypePartiallyUnknown":"Bağımsız değişken türü kısmen bilinmiyor","argTypeUnknown":"Bağımsız değişken türü bilinmiyor","assertAlwaysTrue":"Assert ifadesi her zaman true olarak değerlendirilir","assertTypeArgs":"\\"assert_type\\" iki konumsal bağımsız değişken bekliyor","assertTypeTypeMismatch":"\\"assert_type\\" uyuşmuyor; \\"{expected}\\" bekleniyordu ancak \\"{received}\\" alındı","assignmentExprComprehension":"\\"{name}\\" atama ifadesi hedefi, hedef için anlama ile aynı adı kullanamaz","assignmentExprContext":"Atama ifadesi modül, işlev veya lambda içinde olmalıdır","assignmentExprInSubscript":"Bir alt simge içindeki atama ifadeleri yalnızca Python 3.10 ve daha yeni sürümlerinde desteklenir","assignmentInProtocol":"Protokol sınıfı içindeki örnek veya sınıf değişkenleri sınıf gövdesi içinde açıkça bildirilmelidir","assignmentTargetExpr":"İfade, atama hedefi olamaz","asyncNotInAsyncFunction":"Zaman uyumsuz işlevin dışında \\"async\\" kullanımına izin verilmez","awaitIllegal":"\\"await\\" kullanımı için Python 3.5 veya daha yeni bir sürümü gerekiyor","awaitNotAllowed":"Tür ek açıklamaları \\"await\\" kullanamaz","awaitNotInAsync":"\\"await\\" öğesi yalnızca zaman uyumsuz işlev içinde kullanılabilir","backticksIllegal":"Eski kesme işaretleri arasında yer almayan ifadeler Python3.x’de desteklenmiyor; bunun yerine repr kullanın","baseClassCircular":"Sınıf kendi türevi olamaz","baseClassFinal":"\\"{type}\\" temel sınıfı final olarak işaretlendi ve alt sınıf olamaz","baseClassIncompatible":"{type} türündeki temel sınıflar karşılıklı olarak uyumsuzdur","baseClassInvalid":"Sınıfın bağımsız değişkeni bir temel sınıf olmalıdır","baseClassMethodTypeIncompatible":"\\"{classType}\\" sınıfına ait temel sınıflar, \\"{name}\\" metodunu uyumsuz bir şekilde tanımlıyor","baseClassUnknown":"Temel sınıf türü bilinmiyor, türetilmiş sınıfı gizliyor","baseClassVariableTypeIncompatible":"\\"{classType}\\" sınıfı için temel sınıflar, \\"{name}\\" değişkenini uyumsuz bir şekilde tanımlıyor","binaryOperationNotAllowed":"Tür ek açıklamasında ikili işleç kullanılamaz","bindTypeMismatch":"\\"{type}\\", \\"{paramName}\\" parametresine atanamadığından \\"{methodName}\\" metodu bağlanamadı","breakOutsideLoop":"\\"break\\" yalnızca bir döngü içinde kullanılabilir","callableExtraArgs":"\\"Callable\\" için yalnızca iki tür bağımsız değişkeni bekleniyordu","callableFirstArg":"Parametre türü listesi veya \\"...\\" bekleniyordu","callableNotInstantiable":"\\"{type}\\" türünün örneği oluşturulamıyor","callableSecondArg":"\\"Callable\\" için ikinci tür bağımsız değişkeni olarak dönüş türü bekleniyordu","casePatternIsIrrefutable":"Reddedilemez desene yalnızca son case deyimi için izin verilir","classAlreadySpecialized":"\\"{type}\\" türü zaten özelleştirilmiş","classDecoratorTypeUnknown":"Türü belirtilmemiş sınıf dekoratörü sınıf türünü gizliyor; dekoratör yoksayılıyor","classDefinitionCycle":"\\"{name}\\" için sınıf tanımı kendisine bağımlı","classGetItemClsParam":"__class_getitem__ geçersiz kılması bir \\"cls\\" parametresi almalı","classMethodClsParam":"Sınıf metotları bir \\"cls\\" parametresi almalıdır","classNotRuntimeSubscriptable":"\\"{name}\\" sınıfına ait alt simge çalışma zamanı özel durumunu oluşturur; tür ek açıklamalarını tırnak içine alın","classPatternBuiltInArgPositional":"Sınıf deseni yalnızca konumsal alt desen kabul eder","classPatternPositionalArgCount":"\\"{type}\\" sınıfı için çok fazla konumsal desen var; {expected} bekleniyordu ancak {received} alındı","classPatternTypeAlias":"\\"{type}\\" özel bir tür diğer adı olduğundan sınıf deseninde kullanılamaz","classPropertyDeprecated":"Sınıf özellikleri Python 3.11\'de kullanım dışıdır ve Python 3.13\'te desteklenmez","classTypeParametersIllegal":"Sınıf türü parametresi söz dizimi için Python 3.12 veya daha yeni bir sürümü gerekiyor","classVarFirstArgMissing":"\\"ClassVar\\" sonrasında tür bağımsız değişkeni bekleniyordu","classVarNotAllowed":"Bu bağlamda \\"ClassVar\\" kullanımına izin verilmiyor","classVarOverridesInstanceVar":"\\"{name}\\" sınıf değişkeni \\"{className}\\" sınıfındaki aynı ada sahip örnek değişkenini geçersiz kılıyor","classVarTooManyArgs":"\\"ClassVar\\" sonrasında yalnızca bir tür bağımsız değişkeni bekleniyordu","classVarWithTypeVar":"\\"ClassVar\\" türü tür değişkenleri içeremez","clsSelfParamTypeMismatch":"\\"{name}\\" parametre türü, \\"{classType}\\" sınıfının üst türü olmalıdır","codeTooComplexToAnalyze":"Kod analiz edilemeyecek kadar karmaşık; alt yordamlara ayırarak yeniden düzenleyip veya koşullu kod yollarını azaltarak karmaşıklığı azaltın","collectionAliasInstantiation":"\\"{type}\\" türündeki örnek oluşturulamıyor, bunun yerine \\"{alias}\\" kullanın","comparisonAlwaysFalse":"\\"{leftType}\\" türleri ve \\"{rightType}\\" türleri çakışmadığından koşul her zaman False olarak değerlendirilir","comparisonAlwaysTrue":"\\"{leftType}\\" ve \\"{rightType}\\" türleri çakışmadığından ifade her zaman True olarak değerlendirilir","comprehensionInDict":"Anlama diğer küme girdileri ile kullanılamaz","comprehensionInSet":"Anlama diğer küme girdileri ile kullanılamaz","concatenateContext":"Bu bağlamda \\"Concatenate\\" kullanılamaz","concatenateParamSpecMissing":"\\"Concatenate\\" için son tür bağımsız değişkeni bir ParamSpec veya \\"...\\" olmalıdır","concatenateTypeArgsMissing":"\\"Birleştirme\\" en az iki tür bağımsız değişken gerektirir","conditionalOperandInvalid":"\\"{type}\\" türündeki koşullu işlenen geçersiz","constantRedefinition":"\\"{name}\\" sabit (büyük harf olduğundan) ve yeniden tanımlanamaz","constructorNoArgs":"\\"{type}\\" oluşturucusu için bağımsız değişken beklenmiyordu","constructorParametersMismatch":"\\"{classType}\\" sınıfındaki __new__ ve __init__ imzaları arasında uyuşmazlık var","containmentAlwaysFalse":"\\"{leftType}\\" türleri ve \\"{rightType}\\" türleri çakışmadığından ifade her zaman False olarak değerlendirilir","containmentAlwaysTrue":"\\"{leftType}\\" türleri ve \\"{rightType}\\" türleri çakışmadığından ifade her zaman True olarak değerlendirilir","continueInFinally":"\\"continue\\" finally yan tümcesi içinde kullanılamaz","continueOutsideLoop":"\\"continue\\" yalnızca bir döngü içinde kullanılabilir","coroutineInConditionalExpression":"Koşullu ifade, her zaman True olarak değerlendirilen eş yordama başvurur","dataClassBaseClassFrozen":"Dondurulmuş olmayan bir sınıf dondurulmuş bir sınıftan devralamaz","dataClassBaseClassNotFrozen":"Dondurulmuş sınıf, dondurulmuş olmayan bir sınıftan devralamaz","dataClassConverterFunction":"\\"{argType}\\" türündeki bağımsız değişken, \\"{fieldName}\\" türündeki \\"{fieldType}\\" alanı için geçerli bir dönüştürücü değil","dataClassConverterOverloads":"\\"{funcName}\\" işlevinin aşırı yüklemelerinden hiçbiri \\"{fieldType}\\" türündeki \\"{fieldName}\\" alanı için geçerli dönüştürücüler değil","dataClassFieldWithDefault":"Varsayılan değerleri olmayan alanlar, varsayılan değerleri olan alanlardan sonra gelemez","dataClassFieldWithPrivateName":"Veri sınıfı alanı özel ad kullanamıyor","dataClassFieldWithoutAnnotation":"Tür ek açıklaması olmayan veri sınıfı alanı çalışma zamanı özel durumuna neden olur","dataClassPostInitParamCount":"Veri sınıfı __post_init__ parametre sayısı yanlış; InitVar alanlarının sayısı {expected}","dataClassPostInitType":"Veri sınıfı __post_init__ metodu parametre türü ile \\"{fieldName}\\" alanı uyuşmuyor","dataClassSlotsOverwrite":"__slots__ zaten sınıfta tanımlı","dataClassTransformExpectedBoolLiteral":"Statik olarak True veya False olarak değerlendirilen ifade bekleniyordu","dataClassTransformFieldSpecifier":"Sınıfların veya işlevlerin demeti bekleniyordu ancak \\"{type}\\" türü alındı","dataClassTransformPositionalParam":"\\"dataclass_transform\\" için tüm bağımsız değişkenlerin anahtar sözcük bağımsız değişkenleri olması gerekiyor","dataClassTransformUnknownArgument":"\\"{name}\\" bağımsız değişkeni, dataclass_transform tarafından desteklenmiyor","dataProtocolInSubclassCheck":"issubclass çağrılarında veri protokollerine (yöntem dışı öznitelikler dahil) izin verilmez","declaredReturnTypePartiallyUnknown":"Bildirilen \\"{returnType}\\" dönüş türü kısmen bilinmiyor","declaredReturnTypeUnknown":"Bildirilen dönüş türü bilinmiyor","defaultValueContainsCall":"Parametre varsayılan değer ifadesinde işlev çağrılarına ve değiştirilebilir nesnelere izin verilmez","defaultValueNotAllowed":"\\"*\\" veya \\"**\\" olan parametre varsayılan değere sahip olamaz","delTargetExpr":"İfade silinemiyor","deprecatedClass":"\\"{name}\\" sınıfı kullanım dışı","deprecatedConstructor":"\\"{name}\\" sınıfının oluşturucusu kullanım dışı","deprecatedDescriptorDeleter":"\\"{name}\\" tanımlayıcısı için \\"__delete__\\" yöntemi kullanım dışı","deprecatedDescriptorGetter":"\\"{name}\\" tanımlayıcısı için \\"__get__\\" yöntemi kullanım dışı","deprecatedDescriptorSetter":"\\"{name}\\" tanımlayıcısı için \\"__set__\\" yöntemi kullanım dışı","deprecatedFunction":"\\"{name}\\" işlevi kullanım dışı","deprecatedMethod":"\\"{className}\\" sınıfındaki \\"{name}\\" yöntemi kullanım dışı","deprecatedPropertyDeleter":"\\"{name}\\" özelliği silicisi kullanım dışı","deprecatedPropertyGetter":"\\"{name}\\" özelliği alıcısı kullanım dışı","deprecatedPropertySetter":"\\"{name}\\" özelliği ayarlayıcısı kullanım dışı","deprecatedType":"Bu tür Python {version} sürümünden itibaren kullanım dışı; bunun yerine \\"{replacement}\\" kullanın","dictExpandIllegalInComprehension":"Sözlük genişletmeye anlamada izin verilmiyor","dictInAnnotation":"Tür ek açıklamasında sözlük ifadesi kullanılamaz","dictKeyValuePairs":"Sözlük girdileri anahtar/değer çiftleri içermelidir","dictUnpackIsNotMapping":"Sözlük açma işleci için eşleme bekleniyordu","dunderAllSymbolNotPresent":"\\"{name}\\" __all__ ile belirtildi ancak modülde yok","duplicateArgsParam":"Yalnızca bir \\"*\\" parametresi kullanılabilir","duplicateBaseClass":"Yinelenen temel sınıfa izin verilmiyor","duplicateCapturePatternTarget":"\\"{name}\\" yakalama hedefi, aynı desen içinde birden çok kez bulunamaz","duplicateCatchAll":"Yalnızca bir catch-all except yan tümcesine izin verilir","duplicateEnumMember":"\\"{name}\\" sabit listesi üyesi zaten bildirildi","duplicateGenericAndProtocolBase":"Yalnızca bir Genel[...] veya Protocol[...] temel sınıfı kullanılabilir","duplicateImport":"\\"{importName}\\" birden çok kez içeri aktarıldı","duplicateKeywordOnly":"Yalnızca bir \\"*\\" ayırıcısı kullanılabilir","duplicateKwargsParam":"Yalnızca bir \\"**\\" parametresine izin verilir","duplicateParam":"\\"{name}\\" yinelenen parametresi","duplicatePositionOnly":"Yalnızca bir \\"/\\" parametresine izin verilir","duplicateStarPattern":"Desen dizisinde yalnızca bir \\"*\\" desenine izin verilir","duplicateStarStarPattern":"Yalnızca bir \\"**\\" girdisine izin verilir","duplicateUnpack":"Listede yalnızca bir paket açma işlemine izin veriliyor","ellipsisAfterUnpacked":"\\"...\\" paketlenmemiş TypeVarTuple veya tuple ile kullanılamaz","ellipsisContext":"\\"...\\" kullanımına bu bağlamda izin verilmiyor","ellipsisSecondArg":"\\"...\\" yalnızca iki bağımsız değişkenin ikincisi olarak kullanılabilir","enumClassOverride":"\\"{name}\\" sabit listesi sınıfı final niteliğinde ve alt sınıf olamaz","exceptionGroupIncompatible":"Özel durum grubu söz dizimi (\\"except*\\") için Python 3.11 veya daha yeni bir sürümü gerekiyor","exceptionTypeIncorrect":"\\"{type}\\", BaseException türevi değil","exceptionTypeNotClass":"\\"{type}\\" geçerli bir özel durum sınıfı değil","exceptionTypeNotInstantiable":"\\"{type}\\" özel durum türü oluşturucusu bir veya daha fazla bağımsız değişken gerektiriyor","expectedAfterDecorator":"Dekoratörden sonra işlev veya sınıf bildirimi bekleniyordu","expectedArrow":"Dönüş türü ek açıklaması sonrasında \\"->\\" bekleniyordu","expectedAsAfterException":"Özel durum türünden sonra \\"as\\" bekleniyordu","expectedAssignRightHandExpr":"\\"=\\" öğesinin sağ tarafında ifade bekleniyordu","expectedBinaryRightHandExpr":"İşlecin sağında ifade bekleniyordu","expectedBoolLiteral":"True veya False bekleniyor","expectedCase":"\\"case\\" deyimi bekleniyordu","expectedClassName":"Sınıf adı bekleniyordu","expectedCloseBrace":"\\"{\\" kapatılmadı","expectedCloseBracket":"\\"[\\" kapatılmadı","expectedCloseParen":"\\"(\\" kapatılmadı","expectedColon":"\\":\\" bekleniyordu","expectedComplexNumberLiteral":"Desen eşleme için karmaşık sayı sabit değeri bekleniyordu","expectedDecoratorExpr":"İfade formu Python 3.9\'dan önceki dekoratör için desteklenmiyor","expectedDecoratorName":"Dekoratör adı bekleniyordu","expectedDecoratorNewline":"Dekoratör sonunda yeni satır bekleniyordu","expectedDelExpr":"\\"del\\" sonrasında ifade bekleniyordu","expectedElse":"\\"else\\" bekleniyordu","expectedEquals":"\\"=\\" bekleniyordu","expectedExceptionClass":"Geçersiz özel durum sınıfı veya nesnesi","expectedExceptionObj":"Özel durum nesnesi, özel durum sınıfı veya None bekleniyordu","expectedExpr":"İfade bekleniyor","expectedFunctionAfterAsync":"\\"async\\" sonrasında işlev tanımı bekleniyordu","expectedFunctionName":"\\"def\\" sonrasında işlev adı bekleniyordu","expectedIdentifier":"Tanımlayıcı bekleniyordu","expectedImport":"\\"import\\" bekleniyordu","expectedImportAlias":"\\"as\\" sonrasında sembol bekleniyordu","expectedImportSymbols":"İçeri aktarmadan sonra bir veya daha fazla sembol adı bekleniyordu","expectedIn":"\\"in\\" bekleniyordu","expectedInExpr":"\\"in\\" sonrasında ifade bekleniyordu","expectedIndentedBlock":"Girintili blok bekleniyordu","expectedMemberName":"\\".\\" sonrasında üye adı bekleniyordu","expectedModuleName":"Modül adı bekleniyordu","expectedNameAfterAs":"\\"as\\" sonrasında sembol adı bekleniyordu","expectedNamedParameter":"Anahtar sözcük parametresi, \\"*\\" sonrasında gelmelidir","expectedNewline":"Yeni satır bekleniyordu","expectedNewlineOrSemicolon":"Deyimler yeni satırlarla veya noktalı virgüllerle ayrılarak belirtilmelidir","expectedOpenParen":"\\"(\\" bekleniyordu","expectedParamName":"Parametre adı bekleniyordu","expectedPatternExpr":"Desen ifadesi bekleniyordu","expectedPatternSubjectExpr":"Beklenen desen konusu ifadesi","expectedPatternValue":"\\"a.b\\" biçiminde bir desen değeri ifadesi bekleniyordu","expectedReturnExpr":"\\"return\\" sonrasında ifade bekleniyordu","expectedSliceIndex":"Dizin veya dilim ifadesi bekleniyordu","expectedTypeNotString":"Tür bekleniyordu ancak sabit değerli dize alındı","expectedTypeParameterName":"Beklenen tür parametresi adı","expectedYieldExpr":"Yield deyiminde ifade bekleniyordu","finalClassIsAbstract":"\\"{type}\\" sınıfı son olarak işaretlendi ve tüm soyut sembolleri uygulamalıdır","finalContext":"Bu bağlamda \\"Final\\" kullanılamaz","finalMethodOverride":"\\"{name}\\" yöntemi \\"{className}\\" sınıfı içinde tanımlanan final metodu geçersiz kılamaz","finalNonMethod":"\\"{name}\\" işlevi bir yöntem olmadığından @final olarak işaretlenemez","finalReassigned":"\\"{name}\\" Son olarak bildirildi ve yeniden atanamaz","finalRedeclaration":"\\"{name}\\" daha önce Final olarak bildirildi","finalRedeclarationBySubclass":"\\"{name}\\", \\"{className}\\" sınıf adı bu adı Final olarak bildirdiğinden yeniden bildirilemez","finalTooManyArgs":"\\"Final\\" sonrasında tek bir tür bağımsız değişken bekleniyordu","finalUnassigned":"\\"{name}\\" Final olarak bildirildi, ancak değer atanmadı","formatStringBrace":"f dizesi sabit değerinde tek bir kapatma küme ayracı kullanılamaz; çift sağ ayraç kullanın","formatStringBytes":"Biçim dizesi sabit değerleri (f-strings) ikili olamaz","formatStringDebuggingIllegal":"F dizesi hata ayıklama belirticisi \\"=\\", Python 3.8 veya daha yeni bir sürüm gerektirir","formatStringEscape":"Python 3.12 öncesinde f dizesinin ifade bölümünde kaçış sırasına (ters eğik çizgi) izin verilmez","formatStringExpectedConversion":"f-string\'de \\"!\\" öğesinden sonra bir dönüştürme tanımlayıcısı bekleniyordu","formatStringIllegal":"Biçim dizesi sabit değerleri (f dizeleri) Python 3.6 veya daha yeni bir sürüm gerektirir","formatStringInPattern":"Desende biçim dizesine izin verilmiyor","formatStringNestedFormatSpecifier":"İfadeler biçim dizesi belirticisi içinde çok derin iç içe geçmiş","formatStringNestedQuote":"F dizesi içinde iç içe geçmiş dizeler Python 3.12\'den önceki f dizesiyle aynı tırnak karakterini kullanamaz","formatStringUnicode":"Biçim dizesi sabit değerleri (f-strings) unicode olamaz","formatStringUnterminated":"F dizesi içinde sonlandırılmamış ifade; \\"}\\" bekleniyor","functionDecoratorTypeUnknown":"Türü belirsiz işlev dekoratörü işlevin türünü gizler; dekoratör yoksayılıyor","functionInConditionalExpression":"Koşullu ifade, her zaman True olarak değerlendirilen işleve başvurur","functionTypeParametersIllegal":"İşlev türü parametre sözdizimi Python 3.12 veya daha yeni bir sürüm gerektirir","futureImportLocationNotAllowed":"__future__ içeri aktarmaları dosyanın başında olmalıdır","generatorAsyncReturnType":"Zaman uyumsuz oluşturucu işlevinin dönüş türü \\"AsyncGenerator[{yieldType}, Any]\\" ile uyumlu olmalıdır","generatorNotParenthesized":"Tek bağımsız değişken olmadıklarında oluşturucu ifadeleri ayraç içine alınmalıdır","generatorSyncReturnType":"Oluşturucu işlevinin dönüş türü \\"Generator[{yieldType}, Any, Any]\\" ile uyumlu olmalıdır","genericBaseClassNotAllowed":"\\"Generic\\" temel sınıfı, tür parametresi sözdizimiyle kullanılamaz","genericClassAssigned":"Genel sınıf türü atanamıyor","genericClassDeleted":"Genel sınıf türü silinemiyor","genericInstanceVariableAccess":"Sınıf üzerinden genel örnek değişkenine erişim belirsiz","genericNotAllowed":"\\"Generic\\" bu bağlamda geçerli değil","genericTypeAliasBoundTypeVar":"Sınıf içindeki genel tür diğer adı {names} bağlı tür değişkenlerini kullanamıyor","genericTypeArgMissing":"\\"Generic\\" en az bir tür bağımsız değişkeni gerektirir","genericTypeArgTypeVar":"\\"Generic\\" için tür bağımsız değişkeni bir tür değişkeni olmalıdır","genericTypeArgUnique":"\\"Generic\\" için tür bağımsız değişkenleri benzersiz olmalıdır","globalReassignment":"\\"{name}\\" genel bildirimden önce atanmış","globalRedefinition":"\\"{name}\\" zaten genel olarak bildirildi","implicitStringConcat":"Örtük dize birleştirmesine izin verilmiyor","importCycleDetected":"İçeri aktarma zincirinde döngü algılandı","importDepthExceeded":"İçeri aktarma zinciri derinliği {depth} sınırını aştı","importResolveFailure":"\\"{importName}\\" adlı içeri aktarma çözümlenemedi","importSourceResolveFailure":"\\"{importName}\\" adlı içeri aktarma kaynaktan çözümlenemedi","importSymbolUnknown":"\\"{name}\\" alma simgesi bilinmiyor","incompatibleMethodOverride":"\\"{name}\\" metodu \\"{className}\\" sınıfını uyumsuz bir şekilde geçersiz kılıyor","inconsistentIndent":"Girintisiz miktar önceki girintiyle eşleşmiyor","inconsistentTabs":"Girinti içinde sekmelerin ve boşlukların kullanımı tutarsız","initMustReturnNone":"\\"__init__\\" dönüş türü None olmalıdır","initSubclassCallFailed":"__init_subclass__ yöntemi için yanlış anahtar bağımsız değişkenleri","initSubclassClsParam":"__init_subclass__ geçersiz kılması bir \\"cls\\" parametresi almalı","initVarNotAllowed":"\\"InitVar\\" öğesi bu bağlamda kullanılamaz","instanceMethodSelfParam":"Örnek metotları bir \\"self\\" parametresi almalıdır","instanceVarOverridesClassVar":"\\"{name}\\" örnek değişkeni \\"{className}\\" sınıfındaki aynı ada sahip sınıf değişkenini geçersiz kılıyor","instantiateAbstract":"\\"{type}\\" soyut sınıfı örneği oluşturulamıyor","instantiateProtocol":"\\"{type}\\" protokol sınıfının örneği oluşturulamıyor","internalBindError":"\\"{file}\\" dosyası bağlanırken dahili bir hata oluştu: {message}","internalParseError":"\\"{file}\\" dosyası ayrıştırılırken dahili bir hata oluştu: {message}","internalTypeCheckingError":"\\"{file}\\" dosyası tür denetimi gerçekleştirilirken dahili bir hata oluştu: {message}","invalidIdentifierChar":"Tanımlayıcıda geçersiz karakter","invalidStubStatement":"Deyim, bir tür saplama dosyası içinde anlamsız","invalidTokenChars":"Belirteçte geçersiz \\"{text}\\" karakteri var","isInstanceInvalidType":"\\"isinstance\\" için ikinci bağımsız değişken bir sınıf veya sınıf demeti olmalıdır","isSubclassInvalidType":"\\"issubclass\\" için ikinci bağımsız değişken bir sınıf veya sınıflar demeti olmalıdır","keyValueInSet":"Küme içinde anahtar/değer çiftlerine izin verilmiyor","keywordArgInTypeArgument":"Anahtar sözcük bağımsız değişkenleri tür bağımsız değişken listelerinde kullanılamaz","keywordOnlyAfterArgs":"\\"*\\" parametresinden sonra keyword-only bağımsız değişken ayırıcısı kullanılamaz","keywordParameterMissing":"Bir veya daha fazla anahtar sözcük parametresi \\"*\\" parametresini izlemeli","keywordSubscriptIllegal":"Alt simge içindeki anahtar sözcük bağımsız değişkenleri desteklenmiyor","lambdaReturnTypePartiallyUnknown":"Lambdanın \\"{returnType}\\" dönüş türü kısmen bilinmiyor","lambdaReturnTypeUnknown":"Lambdanın dönüş türü bilinmiyor","listAssignmentMismatch":"\\"{type}\\" türündeki ifade hedef listesine atanamaz","listInAnnotation":"Tür ek açıklamasında liste ifadesi kullanılamaz","literalEmptyArgs":"\\"Literal\\" sonrasında bir veya daha fazla tür bağımsız değişkeni bekleniyordu","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"\\"Değişmez değer\\" bir tür bağımsız değişken olmadan bu bağlamda kullanılamaz","literalNotCallable":"Değişmez tür örneği oluşturulamıyor","literalUnsupportedType":"\\"Literal\\" için tür bağımsız değişkenleri None, bir sabit değer (int, bool, str veya bytes) veya bir sabit listesi değeri olmalıdır","matchIncompatible":"Eşleme deyimleri için Python 3.10 veya daha yeni bir sürümü gerekiyor","matchIsNotExhaustive":"Eşleme deyimindeki durumlar değerlerin tümünü karşılayamıyor","maxParseDepthExceeded":"Maksimum ayrıştırma derinliği aşıldı; ifadeyi daha küçük alt ifadelere bölün","memberAccess":"\\"{type}\\" türü için \\"{name}\\" üyesine erişilemiyor","memberDelete":"\\"{type}\\" türü için \\"{name}\\" üyesi silinemiyor","memberSet":"\\"{type}\\" türü için \\"{name}\\" üyesi atanamıyor","metaclassConflict":"Türetilmiş sınıfın meta sınıfı, tüm temel sınıflarının meta sınıflarının bir alt sınıfı olmalıdır","metaclassDuplicate":"Yalnızca bir meta sınıfı sağlanmalıdır","metaclassIsGeneric":"Meta sınıfı genel olamaz","methodNotDefined":"\\"{name}\\" metodu tanımlanmadı","methodNotDefinedOnType":"\\"{name}\\" metodu \\"{type}\\" türü üzerinde tanımlanmadı","methodOrdering":"Tutarlı metot sıralaması oluşturulamıyor","methodOverridden":"\\"{name}\\", uyumsuz \\"{type}\\" türüne sahip \\"{className}\\" sınıfında aynı ad metodunu geçersiz kılar","methodReturnsNonObject":"\\"{name}\\" metodu bir nesne döndürmez","missingSuperCall":"\\"{methodName}\\" metodu üst sınıftaki aynı ada sahip metodu çağıramaz","moduleAsType":"Modül tür olarak kullanılamaz","moduleNotCallable":"Modül çağrılabilir değil","moduleUnknownMember":"\\"{memberName}\\", \\"{moduleName}\\" modülünün bilinen bir üyesi değil","namedExceptAfterCatchAll":"Adlandırılmış except yan tümcesi, catch-all except yan tümcesinden sonra gelemez","namedParamAfterParamSpecArgs":"\\"{name}\\" anahtar sözcük parametresi ParamSpec args parametresinden sonra imzada yer alamaz","namedTupleEmptyName":"Adlandırılmış demet içindeki adlar boş olamaz","namedTupleEntryRedeclared":"Üst sınıf \\"{name}\\" adlandırılmış bir demet olduğundan \\"{className}\\" geçersiz kılınamıyor","namedTupleFirstArg":"İlk bağımsız değişken olarak adlandırılmış demet sınıf adı bekleniyordu","namedTupleMultipleInheritance":"NamedTuple bulunan birden çok devralma desteklenmiyor","namedTupleNameKeyword":"Alan adları anahtar sözcük olamaz","namedTupleNameType":"Girdi adını ve türünü belirten iki girdili demet bekleniyordu","namedTupleNameUnique":"Adlandırılmış demet içindeki adlar benzersiz olmalıdır","namedTupleNoTypes":"\\"namedtuple\\" demet girdileri için tür sağlamaz; bunun yerine \\"NamedTuple\\" kullanın","namedTupleSecondArg":"İkinci bağımsız değişken olarak adlandırılmış demet girdi listesi bekleniyordu","newClsParam":"__new__ geçersiz kılması bir \\"cls\\" parametresi almalı","newTypeAnyOrUnknown":"NewType\'ın ikinci bağımsız değişkeni Any veya Unknown değil, bilinen bir sınıf olmalıdır","newTypeBadName":"NewType için ilk bağımsız değişken bir sabit değerli dize olmalıdır","newTypeLiteral":"NewType Literal türüyle kullanılamaz","newTypeNameMismatch":"NewType, aynı ada sahip bir değişkene atanmalıdır","newTypeNotAClass":"NewType için ikinci bağımsız değişken olarak sınıf bekleniyordu","newTypeParamCount":"NewType için iki konumsal bağımsız değişken gerekiyor","newTypeProtocolClass":"NewType yapısal türle (protokol veya TypedDict sınıfı) kullanılamaz","noOverload":"\\"{name}\\" için aşırı yüklemelerin hiçbiri sağlanan bağımsız değişkenlerle eşleşmiyor","noReturnContainsReturn":"Bildirilen dönüş türü \\"NoReturn\\" olan işlev bir return deyimi içeremez","noReturnContainsYield":"Bildirilen dönüş türü \\"NoReturn\\" olan işlev bir yield deyimi içeremez","noReturnReturnsNone":"Bildirilen \\"NoReturn\\" döndürme türüne sahip işlev \\"None\\" döndüremez","nonDefaultAfterDefault":"Varsayılan olmayan bağımsız değişken varsayılan bağımsız değişkeni izler","nonLocalInModule":"Modül düzeyinde yerel olmayan bildirim kullanılamaz","nonLocalNoBinding":"Yerel olmayan \\"{name}\\" öğesi için bağlama bulunamadı","nonLocalReassignment":"\\"{name}\\" yerel olmayan bildirimden önce atanmış","nonLocalRedefinition":"\\"{name}\\" zaten yerel olmayan olarak bildirildi","noneNotCallable":"\\"None\\" türündeki nesne çağrılamaz","noneNotIterable":"\\"None\\" türündeki nesne, yeniden kullanılabilir değer olarak kullanılamaz","noneNotSubscriptable":"\\"None\\" türündeki nesne alt simgeleştirilebilir değil","noneNotUsableWith":"\\"None\\" türündeki nesne \\"with\\" ile kullanılamaz","noneOperator":"\\"{operator}\\" işleci \\"None\\" için desteklenmiyor","noneUnknownMember":"\\"{name}\\" bilinen bir \\"None\\" üyesi değil","notRequiredArgCount":"\\"NotRequired\\" sonrasında tek bir tür bağımsız değişken bekleniyordu","notRequiredNotInTypedDict":"Bu bağlamda \\"NotRequired\\" kullanımına izin verilmiyor","objectNotCallable":"\\"{type}\\" türündeki nesne çağrılamaz","obscuredClassDeclaration":"\\"{name}\\" sınıf bildirimi aynı ada sahip bir bildirim tarafından gizlendi","obscuredFunctionDeclaration":"\\"{name}\\" işlev bildirimi aynı ada sahip bir bildirim tarafından gizlendi","obscuredMethodDeclaration":"\\"{name}\\" metot bildirimi aynı ada sahip bir bildirim tarafından gizlendi","obscuredParameterDeclaration":"\\"{name}\\" parametre bildirimi aynı ada sahip bir bildirim tarafından gizlendi","obscuredTypeAliasDeclaration":"\\"{name}\\" tür diğer ad bildirimi aynı ada sahip bir bildirim tarafından etkisiz kılındı","obscuredVariableDeclaration":"\\"{name}\\" bildirimi aynı ada sahip bir bildirim tarafından gizlendi","operatorLessOrGreaterDeprecated":"\\"<>\\" işleci Python 3\'de desteklenmiyor; bunun yerine \\"!=\\" kullanın","optionalExtraArgs":"\\"optional\\" sonrasında bir tür bağımsız değişkeni bekleniyordu","orPatternIrrefutable":"Reddedilemez desene yalnızca \\"or\\" deseninde son alt desen olarak izin verilir","orPatternMissingName":"Bir \\"or\\" deseni içindeki tüm alt desenlerde aynı adlar hedeflenmeli","overlappingKeywordArgs":"Türü belirlenmiş sözlük anahtar sözcük parametresiyle çakışıyor: {names}","overlappingOverload":"Parametreleri {obscuredBy} aşırı yüklemesi ile çakıştığından \\"{name}\\" {obscured} aşırı yüklemesi hiçbir zaman kullanılmayacak","overloadAbstractMismatch":"Aşırı yüklenmiş metotların tümü soyut olmalı veya tümü olmamalıdır","overloadClassMethodInconsistent":"\\"{name}\\" için aşırı yüklemeler, @classmethod yöntemini tutarlı kullanıyor","overloadFinalInconsistencyImpl":"\\"{name}\\" için aşırı yükleme @final olarak işaretlendi ancak uygulama işaretlenmedi","overloadFinalInconsistencyNoImpl":"\\"{name}\\" için aşırı yükleme {index} @final olarak işaretlendi ancak aşırı yükleme 1 işaretlenmedi","overloadImplementationMismatch":"Aşırı yüklenmiş uygulama, {index} aşırı yükleme imzası ile tutarlı değil","overloadReturnTypeMismatch":"\\"{name}\\" için {prevIndex} aşırı yüklemesi {newIndex} aşırı yüklemesi ile çakışıyor ve uyumsuz bir tür döndürüyor","overloadStaticMethodInconsistent":"\\"{name}\\" için aşırı yüklemeler, @staticmethod yöntemini tutarsız kullanıyor","overloadWithoutImplementation":"\\"{name}\\" aşırı yük olarak işaretlendi, ancak uygulama sağlanmadı","overriddenMethodNotFound":"\\"{name}\\" metodu geçersiz kılma olarak işaretlendi, ancak aynı ada sahip bir temel metot yok","overrideDecoratorMissing":"\\"{name}\\" metodu geçersiz kılma olarak işaretlenmedi ancak \\"{className}\\" sınıfındaki bir metodu geçersiz kılıyor","paramAfterKwargsParam":"Parametre \\"**\\" parametresini izleyemez","paramAlreadyAssigned":"\\"{name}\\" parametresi zaten atanmış","paramAnnotationMissing":"\\"{name}\\" parametresi için tür ek açıklaması eksik","paramAssignmentMismatch":"\\"{sourceType}\\" türündeki ifade, \\"{paramType}\\" türündeki parametreye atanamaz","paramNameMissing":"\\"{name}\\" adlı parametre yok","paramSpecArgsKwargsUsage":"ParamSpec\'in \\"args\\" ve \\"kwargs\\" üyeleri bir işlev imzasında görünmelidir","paramSpecArgsMissing":"ParamSpec \\"{type}\\" bağımsız değişkenleri eksik","paramSpecArgsUsage":"ParamSpec\'in \\"args\\" üyesi yalnızca *args parametresiyle kullanıldığında geçerlidir","paramSpecAssignedName":"ParamSpec, \\"{name}\\" adlı bir değişkene atanmalı","paramSpecContext":"ParamSpec bu bağlamda kullanılamaz","paramSpecDefaultNotTuple":"ParamSpec varsayılan değeri için üç nokta, demet ifadesi veya ParamSpec bekleniyordu","paramSpecFirstArg":"İlk bağımsız değişken olarak ParamSpec adı bekleniyordu","paramSpecKwargsUsage":"ParamSpec\'in \\"kwargs\\" üyesi yalnızca *kwargs parametresiyle kullanıldığında geçerlidir","paramSpecNotUsedByOuterScope":"\\"{name}\\" adlı ParamSpec bu bağlamda bir anlam ifade etmiyor","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" dönüş türü içinde çağrılabilir kapsamına alındı ve işlev gövdesinde başvurulamaz","paramSpecUnknownArg":"ParamSpec birden fazla bağımsız değişkeni desteklemiyor","paramSpecUnknownMember":"\\"{name}\\", ParamSpec’ın bilinen bir üyesi değil","paramSpecUnknownParam":"\\"{name}\\", ParamSpec için bilinmeyen bir parametre","paramTypeCovariant":"Kovaryant türü değişkeni parametre türünde kullanılamaz","paramTypePartiallyUnknown":"\\"{paramName}\\" parametresinin türü kısmen bilinmiyor","paramTypeUnknown":"\\"{paramName}\\" parametresinin türü bilinmiyor","parenthesizedContextManagerIllegal":"\\"with\\" deyimindeki parantezler Python 3.9 veya daha yeni bir sürüm gerektirir","patternNeverMatches":"Desen, \\"{type}\\" konu türü ile hiçbir zaman eşleşmez","positionArgAfterNamedArg":"Konumsal bağımsız değişken anahtar sözcük bağımsız değişkenlerden sonra gelemez","positionOnlyAfterArgs":"\\"*\\" parametresinden sonra yalnızca konum parametre ayırıcısı kullanılamaz","positionOnlyAfterKeywordOnly":"\\"/\\" parametresi \\"*\\" parametresinden önce gelmelidir","positionOnlyAfterNon":"Yalnızca konum parametresi olmayan parametreden sonra yalnızca konum parametresine izin verilmez","positionOnlyFirstParam":"Yalnızca konum parametre ayırıcısı ilk parametre olarak kullanılamaz","positionOnlyIncompatible":"Yalnızca konum parametre ayırıcısı için Python 3.8 veya daha yeni bir sürümü gerekiyor","privateImportFromPyTypedModule":"\\"{name}\\" \\"{module}\\" modülünden dışarı aktarılamadı","privateUsedOutsideOfClass":"\\"{name}\\" özeldir ve bildirildiği sınıfın dışında kullanılır","privateUsedOutsideOfModule":"\\"{name}\\" özeldir ve bildirildiği modülün dışında kullanılır","propertyOverridden":"\\"{name}\\", \\"{className}\\" sınıfında aynı ad özelliğini geçersiz kılar","propertyStaticMethod":"Static metotlar özellik alıcı, ayarlayıcı veya silici için kullanılamaz","protectedUsedOutsideOfClass":"\\"{name}\\" korumalıdır ve içinde bildirildiği sınıfın dışında kullanılır","protocolBaseClass":"Protokol sınıfı \\"{classType}\\", protokol olmayan \\"{baseType}\\" sınıfı türevi olamaz","protocolBaseClassWithTypeArgs":"Tür parametresi söz dizimi kullanılırken, tür bağımsız değişkenlerinin Protokol sınıfıyla kullanılmasına izin verilmez","protocolIllegal":"\\"Protocol\\" kullanımı için Python 3.7 veya daha yeni bir sürümü gerekiyor","protocolNotAllowed":"\\"Protokol\\" bu bağlamda kullanılamaz","protocolUnsafeOverlap":"Sınıf, \\"{name}\\" ile güvenli olmayan bir şekilde çakışıyor ve çalışma zamanında bir eşleşme üretebilir","protocolVarianceContravariant":"\\"{class}\\" genel protokolünde kullanılan \\"{variable}\\" tür değişkeni, değişken karşıtı olmalıdır","protocolVarianceCovariant":"\\"{class}\\" genel protokolünde kullanılan \\"{variable}\\" tür değişkeni birlikte değişen olmalıdır","protocolVarianceInvariant":"\\"{class}\\" genel protokolünde kullanılan \\"{variable}\\" tür değişkeni sabit olmalıdır","pyrightCommentInvalidDiagnosticBoolValue":"Pyright açıklama yönergesinden sonra \\"=\\" ve true veya false değeri olmalıdır","pyrightCommentInvalidDiagnosticSeverityValue":"Pyright açıklama yönergesinden sonra \\"=\\" ve true, false, error, warning, information veya none değeri girilmelidir","pyrightCommentMissingDirective":"Pyright açıklaması sonrasında bir yönerge (temel veya katı) veya tanılama kuralı gelmelidir","pyrightCommentNotOnOwnLine":"Dosya düzeyi ayarları kontrol etmek için kullanılan pyright açıklamaları kendi satırlarında görünmelidir","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\", pyright açıklaması için bilinmeyen bir tanılama kuralı","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" pyright açıklaması için geçersiz değer; true, false, error, warning, information veya none bekleniyordu","pyrightCommentUnknownDirective":"\\"{directive}\\", pyright açıklaması için bilinmeyen bir yönergedir; \\"strict\\" veya \\"basic\\" bekleniyordu","readOnlyArgCount":"\\"ReadOnly\\" sonrasında tek bir tür bağımsız değişken bekleniyordu","readOnlyNotInTypedDict":"Bu bağlamda \\"ReadOnly\\" kullanımına izin verilmiyor","recursiveDefinition":"Kendine başvurduğundan \\"{name}\\" türü belirlenemedi","relativeImportNotAllowed":"Göreli içeri aktarmalar \\"import .a\\" formuyla kullanılamaz; bunun yerine \\"from . import a\\" kullanın","requiredArgCount":"\\"Required\\" sonrasında tek bir tür bağımsız değişken bekleniyordu","requiredNotInTypedDict":"Bu bağlamda \\"Required\\" kullanımına izin verilmiyor","returnInAsyncGenerator":"Zaman uyumsuz oluşturucuda değer içeren dönüş deyimine izin verilmez","returnMissing":"Bildirilen \\"{returnType}\\" döndürme türüne sahip işlev, tüm kod yollarında değer döndürmelidir","returnOutsideFunction":"\\"return\\" yalnızca bir işlev içinde kullanılabilir","returnTypeContravariant":"Değişken karşıtı tür değişkeni dönüş türünde kullanılamaz","returnTypeMismatch":"\\"{exprType}\\" türündeki ifade \\"{returnType}\\" dönüş türüne atanamaz","returnTypePartiallyUnknown":"\\"{returnType}\\" dönüş türü kısmen bilinmiyor","returnTypeUnknown":"Dönüş türü bilinmiyor","revealLocalsArgs":"\\"reveal_locals\\" çağrısı için bağımsız değişken beklenmiyordu","revealLocalsNone":"Bu kapsamda yerel öğe yok","revealTypeArgs":"\\"reveal_type\\" çağrısı için tek bir konumsal bağımsız değişken bekleniyordu","revealTypeExpectedTextArg":"\\"reveal_type\\" bağımsız değişkeni için \\"expected_text\\" argümanı bir str sabit değeri olmalıdır","revealTypeExpectedTextMismatch":"Tür uyuşmazlığı; \\"{expected}\\" bekleniyordu ancak \\"{received}\\" alındı","revealTypeExpectedTypeMismatch":"Tür uyuşmazlığı; \\"{expected}\\" bekleniyordu ancak \\"{received}\\" alındı","selfTypeContext":"\\"Self\\" bu bağlamda geçerli değil","selfTypeMetaclass":"\\"Self\\" bir meta sınıfı (\\"type\\" alt sınıfı) içinde kullanılamaz","selfTypeWithTypedSelfOrCls":"\\"Self\\", \\"Self\\" dışında bir tür ek açıklamasına sahip bir `self` veya `cls` parametresine sahip bir işlevde kullanılamaz","setterGetterTypeMismatch":"Özellik ayarlayıcısı değer türü alıcı dönüş türüne atanamaz","singleOverload":"\\"{name}\\" aşırı yükleme olarak işaretlenmiş, ancak ek aşırı yüklemeler eksik","slotsAttributeError":"\\"{name}\\", __slots__ içinde belirtilmedi","slotsClassVarConflict":"\\"{name}\\", __slots__ içinde bildirilen örnek değişkenle çakışıyor","starPatternInAsPattern":"Yıldız deseni \\"as\\" hedefiyle kullanılamaz","starPatternInOrPattern":"Yıldız deseni diğer desenlerde ORed olamaz","starStarWildcardNotAllowed":"\\"_\\" joker karakteriyle ** kullanılamaz","staticClsSelfParam":"Static metotları \\"self\\" veya \\"cls\\" parametresi almamalıdır","stdlibModuleOverridden":"\\"{path}\\", \\"{name}\\" stdlib modülünü geçersiz kılıyor","stringNonAsciiBytes":"ASCII olmayan karaktere bayt sabit değerli dizesinde izin verilmez","stringNotSubscriptable":"Tür ek açıklamasında dize ifadesi alt simge olarak belirtilemez; ek açıklamanın tamamını tırnak içine alın","stringUnsupportedEscape":"Dize sabit değerinde desteklenmeyen kaçış dizisi","stringUnterminated":"Sabit değerli dize sonlandırılmamış","stubFileMissing":"\\"{importName}\\" için saplama dosyası bulunamadı","stubUsesGetAttr":"Tür saplama dosyası eksik; \\"__getattr__\\" modül için tür hatalarını gizliyor","sublistParamsIncompatible":"Alt liste parametreleri Python 3.x\'te desteklenmez","superCallArgCount":"\\"super\\" çağrısı için ikiden fazla bağımsız değişken beklenmiyordu","superCallFirstArg":"\\"super\\" çağrısının ilk bağımsız değişkeni olarak sınıf türü bekleniyordu ancak \\"{type}\\" alındı","superCallSecondArg":"\\"super\\" çağrısının ikinci bağımsız değişkeni, \\"{type}\\" türünden türetilen nesne veya sınıf olmalıdır","superCallZeroArgForm":"\\"super\\" çağrısının zero-argument biçimi yalnızca bir metot içinde geçerlidir","superCallZeroArgFormStaticMethod":"\\"super\\" çağrısının zero-argument biçimi statik bir metot içinde geçerli değildir","symbolIsPossiblyUnbound":"\\"{name}\\" büyük olasılıkla bağlı değil","symbolIsUnbound":"\\"{name}\\" bağlı değil","symbolIsUndefined":"\\"{name}\\" tanımlanmadı","symbolOverridden":"\\"{name}\\", \\"{className}\\" sınıfında aynı ada sahip sembolü geçersiz kılar","ternaryNotAllowed":"Tür ek açıklamasında üçlü ifade kullanılamaz","totalOrderingMissingMethod":"total_ordering kullanmak için sınıfta \\"__lt__\\", \\"__le__\\", \\"__gt__\\" veya \\"__ge__\\" metotlarından biri tanımlanmalıdır","trailingCommaInFromImport":"Çevreleyen parantezler olmadan sondaki virgüle izin verilmez","tryWithoutExcept":"Try deyimi en az bir except veya finally yan tümcesi içermelidir","tupleAssignmentMismatch":"\\"{type}\\" türündeki ifade hedef demetine atanamaz","tupleInAnnotation":"Tür ek açıklamasında demet ifadesine izin verilmiyor","tupleIndexOutOfRange":"{index} dizini {type} türü için aralık dışında","typeAliasIllegalExpressionForm":"Tür diğer ad tanımı için geçersiz ifade form","typeAliasIsRecursiveDirect":"Tür diğer adı \\"{name}\\", tanımında kendisini kullanamaz","typeAliasNotInModuleOrClass":"TypeAlias yalnızca bir modül veya sınıf kapsamında tanımlanabilir","typeAliasRedeclared":"\\"{name}\\" bir TypeAlias olarak bildirilmiş ve yalnızca bir kez atanabilir","typeAliasStatementBadScope":"Tür deyimi, yalnızca bir modül veya sınıf kapsamında kullanılabilir","typeAliasStatementIllegal":"Tür diğer adı deyimi için Python 3.12 veya daha yeni bir sürümü gerekiyor","typeAliasTypeBaseClass":"Bir “type” deyiminde tanımlanan tür diğer adı temel sınıf olarak kullanılamaz","typeAliasTypeMustBeAssigned":"TypeAliasType, tür diğer adıyla aynı ada sahip bir değişkene atanmalıdır","typeAliasTypeNameArg":"TypeAliasType için ilk bağımsız değişken, tür diğer adının adını temsil eden bir sabit değerli dize olmalıdır","typeAliasTypeNameMismatch":"Tür diğer adının atandığı değişkenin adıyla eşleşmesi gerekiyor","typeAliasTypeParamInvalid":"Tür parametresi listesi yalnızca TypeVar, TypeVarTuple veya ParamSpec içeren bir demet olmalıdır","typeAnnotationCall":"Tür ifadesinde çağrı ifadesine izin verilmiyor","typeAnnotationVariable":"Tür ifadesinde değişkene izin verilmiyor","typeAnnotationWithCallable":"“Tür” için tür bağımsız değişkeni bir sınıf olmalıdır; çağrılabilir öğeler desteklenmiyor","typeArgListExpected":"ParamSpec, üç nokta veya tür listesi bekleniyordu","typeArgListNotAllowed":"Bu tür bağımsız değişkeni için liste ifadesine izin verilmiyor","typeArgsExpectingNone":"\\"{name}\\" sınıfı için tür bağımsız değişkeni beklenmiyordu","typeArgsMismatchOne":"Bir tane tür bağımsız değişkeni bekleniyordu ancak {received} alındı","typeArgsMissingForAlias":"\\"{name}\\" genel tür diğer adı için tür bağımsız değişkenleri bekleniyordu","typeArgsMissingForClass":"\\"{name}\\" genel sınıf adı için tür bağımsız değişkenleri bekleniyordu","typeArgsTooFew":"\\"{name}\\" için çok az tür bağımsız değişkeni sağlandı; {expected} bekleniyordu ancak {received} alındı","typeArgsTooMany":"\\"{name}\\" için çok fazla tür bağımsız değişkeni sağlandı; {expected} bekleniyordu ancak {received} alındı","typeAssignmentMismatch":"\\"{sourceType}\\" türündeki ifade, \\"{destType}\\" bildirilen türüne atanamaz","typeAssignmentMismatchWildcard":"\\"{name}\\" içeri aktarma sembolü \\"{sourceType}\\" türüne sahip ve bu tür, \\"{destType}\\" bildirilen türüne atanamaz","typeCallNotAllowed":"Tür ek açıklamasında type() çağrısı kullanılmamalıdır","typeCheckOnly":"\\"{name}\\", @type_check_only olarak işaretlendi ve yalnızca tür ek açıklamalarında kullanılabilir","typeCommentDeprecated":"Tür açıklamalarının kullanımı kullanım dışı; bunun yerine tür ek açıklaması kullanın","typeExpectedClass":"Tür ifadesi bekleniyordu ancak \\"{type}\\" alındı","typeGuardArgCount":"\\"TypeGuard\\" veya \\"Typels\\" sonrasında tek bir tür bağımsız değişken bekleniyordu","typeGuardParamCount":"Kullanıcı tanımlı tür koruma işlevleri ve metotlarında en az bir giriş parametresi olmalıdır","typeIsReturnType":"TypeIs dönüş türü (\\"{returnType}\\"), değer parametresi türü (\\"{type}\\") ile tutarlı değil","typeNotAwaitable":"\\"{type}\\" beklenemez","typeNotIntantiable":"\\"{type}\\" örneği oluşturulamıyor","typeNotIterable":"\\"{type}\\" yeniden kullanılamaz","typeNotSpecializable":"\\"{type}\\" türü özelleştirilemedi","typeNotSubscriptable":"\\"{type}\\" türündeki nesne alt simgeleştirilebilir değil","typeNotSupportBinaryOperator":"İşleç \\"{operator}\\", \\"{leftType}\\" ve \\"{rightType}\\" türleri için desteklenmiyor","typeNotSupportBinaryOperatorBidirectional":"\\"{operator}\\" işleci, beklenen tür \\"{expectedType}\\" olduğunda \\"{leftType}\\" ve \\"{rightType}\\" türleri için desteklenmez","typeNotSupportUnaryOperator":"\\"{operator}\\" işleci \\"{type}\\" türü için desteklenmiyor","typeNotSupportUnaryOperatorBidirectional":"\\"{operator}\\" işleci, beklenen tür \\"{expectedType}\\" olduğunda \\"{type}\\" türü için desteklenmiyor","typeNotUsableWith":"{method} metodunu uygulamadığından \\"{type}\\" türündeki nesne \\"with\\" ile kullanılamaz","typeParameterBoundNotAllowed":"Sınır veya kısıtlama, değişen tür parametresi veya ParamSpec ile kullanılamaz","typeParameterConstraintTuple":"Tür parametresi kısıtlaması iki veya daha fazla türde bir demet olmalıdır","typeParameterExistingTypeParameter":"\\"{name}\\" tür parametresi zaten kullanılıyor","typeParameterNotDeclared":"\\"{name}\\" tür parametresi \\"{container}\\" öğesine ait tür parametreleri listesinde yok","typeParametersMissing":"En az bir tür parametresi belirtilmelidir","typePartiallyUnknown":"\\"{name}\\" türü kısmen bilinmiyor","typeUnknown":"\\"{name}\\" türü bilinmiyor","typeVarAssignedName":"TypeVar, \\"{name}\\" adlı bir değişkene atanmalı","typeVarAssignmentMismatch":"\\"{type}\\" türü \\"{name}\\" tür değişkenine atanamaz","typeVarBoundAndConstrained":"TypeVar hem bağlı hem de kısıtlanmış olamaz","typeVarBoundGeneric":"TypeVar bağlı türü genel olamaz","typeVarConstraintGeneric":"TypeVar kısıtlama türü genel olamaz","typeVarDefaultBoundMismatch":"TypeVar varsayılan türü, bağlı türün bir alt türü olmalıdır","typeVarDefaultConstraintMismatch":"TypeVar varsayılan türü kısıtlanmış türlerden biri olmalıdır","typeVarDefaultIllegal":"Tür değişkeni varsayılan türleri Python 3.13 veya daha yeni bir sürüm gerektirir","typeVarDefaultInvalidTypeVar":"\\"{name}\\" tür parametresi, kapsam dışı bir veya daha fazla tür değişkenine başvuran varsayılan bir türe sahip","typeVarFirstArg":"İlk bağımsız değişken olarak TypeVar adı bekleniyordu","typeVarNoMember":"TypeVar \\"{type}\\" \\"{name}\\" adlı üyesine sahip değil","typeVarNotSubscriptable":"TypeVar \\"{type}\\" alt yazılabilir değil","typeVarNotUsedByOuterScope":"\\"{name}\\" tür değişkeni bu bağlamda bir anlam ifade etmiyor","typeVarPossiblyUnsolvable":"\\"{name}\\" tür değişkeni, çağıran \\"{param}\\" parametresi için bağımsız değişken sağlamazsa çözümlenemeyebilir","typeVarScopedToReturnType":"\\"{name}\\" tür değişkeni, dönüş türü içinde çağrılabilir kapsamına alındı ve işlev gövdesinde başvurulamaz","typeVarSingleConstraint":"TypeVar en az iki kısıtlanmış türe sahip olmalıdır","typeVarTupleConstraints":"TypeVarTuple değer kısıtlamalarına sahip olamaz","typeVarTupleContext":"TypeVarTuple bu bağlamda kullanılamaz","typeVarTupleDefaultNotUnpacked":"TypeVarTuple varsayılan türü, paketlenmemiş bir demet veya TypeVarTuple olmalıdır","typeVarTupleMustBeUnpacked":"TypeVarTuple değeri için Paket açma işleci gereklidir","typeVarTupleUnknownParam":"\\"{name}\\", TypeVar için bilinmeyen bir parametre","typeVarUnknownParam":"\\"{name}\\", TypeVar için bilinmeyen bir parametre","typeVarUsedByOuterScope":"TypeVar \\"{name}\\" zaten bir dış kapsam tarafından kullanılıyor","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" genel işlev imzasında yalnızca bir kez görünür","typeVarVariance":"TypeVar hem birlikte değişken hem de değişken karşıtı olamaz","typeVarWithDefaultFollowsVariadic":"\\"{typeVarName}\\" TypeVar alanı bir varsayılan değer içerir ve \\"{variadicName}\\" TypeVarTuple alanına uyamaz","typeVarWithoutDefault":"\\"{name}\\" varsayılan türe sahip olmadığından tür parametresi listesinde \\"{other}\\" sonrasında bulunamaz","typeVarsNotInGenericOrProtocol":"Generic[] veya Protocol[] tüm tür değişkenlerini içermeli","typedDictAccess":"TypedDict\'da öğeye erişilemedi","typedDictAssignedName":"TypedDict, \\"{name}\\" adlı bir değişkene atanmalı","typedDictBadVar":"TypedDict sınıfları yalnızca tür ek açıklamaları içerebilir","typedDictBaseClass":"TypedDict sınıfları için tüm temel sınıflar da TypedDict sınıfları olmalıdır","typedDictBoolParam":"True veya False değeri olması için \\"{name}\\" parametresi bekleniyordu","typedDictClosedExtras":"\\"{name}\\" temel sınıfı kapalı bir TypedDict öğesidir; ek öğeler \\"{type}\\" türünde olmalıdır","typedDictClosedNoExtras":"\\"{name}\\" temel sınıfı kapalı bir TypedDict öğesidir; ek öğelere izin verilmiyor","typedDictDelete":"TypedDict\'da öğe silinemedi","typedDictEmptyName":"TypedDict içindeki adlar boş olamaz","typedDictEntryName":"Sözlük girdisi adı için sabit değerli dize bekleniyordu","typedDictEntryUnique":"Sözlük içindeki adlar benzersiz olmalıdır","typedDictExtraArgs":"Ekstra TypedDict bağımsız değişkenleri desteklenmiyor","typedDictFieldNotRequiredRedefinition":"\\"{name}\\" TypedDict öğesi NotRequired olarak yeniden tanımlanamaz","typedDictFieldReadOnlyRedefinition":"\\"{name}\\" TypedDict öğesi ReadOnly olarak yeniden tanımlanamaz","typedDictFieldRequiredRedefinition":"\\"{name}\\" TypedDict öğesi Required olarak yeniden tanımlanamaz","typedDictFirstArg":"Birinci bağımsız değişken olarak TypedDict sınıf adı bekleniyordu","typedDictInitsubclassParameter":"TypedDict, \\"{name}\\" __init_subclass__ parametresini desteklemez","typedDictNotAllowed":"\\"TypedDict\\" bu bağlamda kullanılamaz","typedDictSecondArgDict":"İkinci parametre olarak sözlük veya anahtar sözcük parametresi bekleniyordu","typedDictSecondArgDictEntry":"Basit sözlük girişi bekleniyordu","typedDictSet":"TypedDict içinde öğe atanamadı","unaccessedClass":"\\"{name}\\" sınıfına erişilemiyor","unaccessedFunction":"\\"{name}\\" işlevine erişilemiyor","unaccessedImport":"\\"{name}\\" içeri aktarma işlemine erişilemiyor","unaccessedSymbol":"\\"{name}\\" öğesine erişilemiyor","unaccessedVariable":"\\"{name}\\" değişkenine erişilemiyor","unannotatedFunctionSkipped":"\\"{name}\\" işlevinin analizi, açıklanmadığından atlandı","unaryOperationNotAllowed":"Tür ek açıklamasında birli işleç kullanılamaz","unexpectedAsyncToken":"\\"async\\" öğesinin ardından \\"def\\", \\"with\\" veya \\"for\\" bekleniyordu","unexpectedExprToken":"İfadenin sonunda beklenmeyen belirteç","unexpectedIndent":"Beklenmeyen girinti","unexpectedUnindent":"Girintiyi kaldırma beklenmiyordu","unhashableDictKey":"Sözlük anahtarı karmalanabilir olmalıdır","unhashableSetEntry":"Küme girdisi karmalanabilir olmalıdır","uninitializedAbstractVariables":"Soyut temel sınıfta tanımlanan değişkenler \\"{classType}\\" final sınıfında başlatılmaz","uninitializedInstanceVariable":"\\"{name}\\" örnek değişkeni sınıf gövdesinde veya __init__ metodunda başlatılmadı","unionForwardReferenceNotAllowed":"Union söz dizimi dize işleneni ile kullanılamaz; ifadenin tamamını tırnak içine alın","unionSyntaxIllegal":"Union işlemlerinde alternatif söz dizimi kullanılabilmesi için Python 3.10 veya daha yeni bir sürümü gerekiyor","unionTypeArgCount":"Union için iki veya daha fazla tür bağımsız değişkeni gerekiyor","unionUnpackedTuple":"Birleşim, paketlenmemiş bir demet içeremez","unionUnpackedTypeVarTuple":"Birleşim, paketlenmemiş bir TypeVarTuple içeremez","unnecessaryCast":"Gereksiz \\"cast\\" çağrısı; tür zaten \\"{type}\\"","unnecessaryIsInstanceAlways":"Gereksiz isinstance çağrısı; \\"{testType}\\" her zaman bir \\"{classType}\\" örneğidir","unnecessaryIsSubclassAlways":"Gereksiz issubclass çağrısı; \\"{testType}\\" her zaman \\"{classType}\\" sınıf türünün bir alt sınıfıdır","unnecessaryPyrightIgnore":"Gereksiz \\"# pyright: ignore\\" açıklaması","unnecessaryPyrightIgnoreRule":"\\"# pyright: ignore\\" rule: \\"{name}\\" gereksiz","unnecessaryTypeIgnore":"Gereksiz \\"# type: yoksay\\" açıklaması","unpackArgCount":"\\"Unpack\\" sonrasında tek bir tür bağımsız değişken bekleniyordu","unpackExpectedTypeVarTuple":"Unpack için tür bağımsız değişkeni olarak TypeVarTuple veya tuple bekleniyordu","unpackExpectedTypedDict":"Unpack için TypedDict tür bağımsız değişkeni bekleniyordu","unpackIllegalInComprehension":"Anlamada paket açma işlemi kullanılamaz","unpackInAnnotation":"Tür ek açıklamasında paket açma işlecine izin verilmiyor","unpackInDict":"Sözlüklerde paket açma işlemi kullanılamaz","unpackInSet":"Paket açma işlecine küme içinde izin verilmiyor","unpackNotAllowed":"Bu bağlamda paketi açma işlemine izin verilmiyor","unpackOperatorNotAllowed":"Bu bağlamda paket açma işlemi kullanılamaz","unpackTuplesIllegal":"Python 3.8\'den önceki demetler içinde paket açma işlemi kullanılamıyor","unpackedArgInTypeArgument":"Paketlenmemiş bağımsız değişkenler tür bağımsız değişkeni listelerinde kullanılamaz","unpackedArgWithVariadicParam":"Paketlenmemiş bağımsız değişken, TypeVarTuple parametresi için kullanılamaz","unpackedDictArgumentNotMapping":"** sonrasındaki bağımsız değişken ifadesi \\"str\\" anahtar türüne sahip bir eşleme olmalıdır","unpackedDictSubscriptIllegal":"Alt simgede sözlük açma işlecine izin verilmiyor","unpackedSubscriptIllegal":"Alt simgede açma işleci için Python 3.11 veya daha yeni bir sürümü gerekiyor","unpackedTypeVarTupleExpected":"Paketlenmemiş TypeVarTuple bekleniyordu; Unpack[{name1}] veya *{name2} kullanın","unpackedTypedDictArgument":"Paketlenmemiş TypedDict bağımsız değişkeni parametrelerle eşlenemiyor","unreachableCode":"Koda ulaşılamıyor","unreachableExcept":"Özel durum zaten işlenmiş olduğundan özel durum yan tümcesi erişilebilir değil","unsupportedDunderAllOperation":"\\"__all__\\" üzerinde işlem desteklenmiyor, bu nedenle dışarı aktarılan sembol listesi yanlış olabilir","unusedCallResult":"Çağrı ifadesinin sonucu \\"{type}\\" türünde ve kullanılmıyor; bilerek yapıldıysa \\"_\\" değişkenine atayın","unusedCoroutine":"Zaman uyumsuz işlev çağrısının sonucu kullanılmıyor; \\"await\\" kullanın veya sonucu değişkene atayın","unusedExpression":"İfade değeri kullanılmadı","varAnnotationIllegal":"Değişkenler için tür ek açıklamaları Python 3.6 veya daha yeni bir sürümünü gerektiriyor; önceki sürümlerle uyumluluk için tür açıklaması kullanın","variableFinalOverride":"\\"{name}\\" değişkeni Final olarak işaretlendi ve \\"{className}\\" sınıfı içinde aynı ada sahip Final olmayan değişkeni geçersiz kılıyor","variadicTypeArgsTooMany":"Tür bağımsız değişkeni listesinde en fazla bir paketlenmemiş TypeVarTuple veya tuple olabilir","variadicTypeParamTooManyAlias":"Tür diğer adı en fazla bir TypeVarTuple tür parametresine sahip olabilir ancak birden fazlası {names}) alındı","variadicTypeParamTooManyClass":"Genel sınıf en fazla bir TypeVarTuple tür parametresine sahip olabilir ancak birden fazlası {names}) alındı","walrusIllegal":"\\":=\\" işleci için Python 3.8 veya daha yeni bir sürümü gerekiyor","walrusNotAllowed":"Çevreleyen parantezler olmadan bu bağlamda \\":=\\" işlecine izin verilmiyor","wildcardInFunction":"Bir sınıf veya işlev içinde joker karakteri içeri aktarmaya izin verilmiyor","wildcardLibraryImport":"Kitaplıktan joker karakter aktarmaya izin verilmiyor","wildcardPatternTypePartiallyUnknown":"Joker karakter deseni tarafından yakalanan tür kısmen bilinmiyor","wildcardPatternTypeUnknown":"Joker karakter deseni tarafından yakalanan tür bilinmiyor","yieldFromIllegal":"\\"yield from\\" kullanımı için Python 3.3 veya daha yeni bir sürümü gerekiyor","yieldFromOutsideAsync":"Zaman uyumsuz bir işlevde \\"yield from\\" öğesine izin verilmez","yieldOutsideFunction":"\\"yield\\", işlev veya lambda dışında kullanılamaz","yieldWithinListCompr":"Liste anlama içinde \\"yield\\" kullanılamaz","zeroCaseStatementsFound":"Match deyimi en az bir case deyimi içermeli","zeroLengthTupleNotAllowed":"Bu bağlamda sıfır uzunluklu demete izin verilmiyor"},"DiagnosticAddendum":{"annotatedNotAllowed":"“Not eklenmiş” özel biçimi, örnek ve sınıf denetimleriyle kullanılamaz","argParam":"Bağımsız değişken \\"{paramName}\\" parametresine karşılık gelir","argParamFunction":"Bağımsız değişken, \\"{functionName}\\" işlevinde \\"{paramName}\\" parametresine karşılık gelir","argsParamMissing":"\\"*{paramName}\\" parametresine karşılık gelen bir parametre yok","argsPositionOnly":"Yalnızca konum parametresi uyuşmazlığı; {expected} bekleniyordu ancak {received} alındı","argumentType":"Bağımsız değişken türü \\"{type}\\"","argumentTypes":"Bağımsız değişken türleri: ({types})","assignToNone":"\\"None\\" türüne tür atanamaz","asyncHelp":"\\"async with\\" mi demek istediniz?","baseClassIncompatible":"\\"{baseClass}\\" temel sınıfı \\"{type}\\" türüyle uyumlu değil","baseClassIncompatibleSubclass":"\\"{baseClass}\\" temel sınıfı, \\"{type}\\" türüyle uyumlu olmayan \\"{subclass}\\" alt sınıfından türetiliyor","baseClassOverriddenType":"\\"{baseClass}\\" temel sınıfı geçersiz kılınan \\"{type}\\" türünü sağlar","baseClassOverridesType":"Temel sınıf \\"{baseClass}\\", \\"{type}\\" türünü geçersiz kılıyor","bytesTypePromotions":"“bytearray” ve “memoryview” için tür yükseltme davranışını etkinleştirmek için disableBytesTypePromotions seçeneğini “false” olarak ayarlayın","conditionalRequiresBool":"\\"{operandType}\\" türü için __bool__ metodu \\"bool\\" yerine \\"{boolReturnType}\\" türü döndürür","dataClassFieldLocation":"Alan bildirimi","dataClassFrozen":"\\"{name}\\" donduruldu","dataProtocolUnsupported":"\\"{name}\\" bir veri protokolü","descriptorAccessBindingFailed":"Tanımlayıcı sınıf \\"{className}\\" için \\"{name}\\" yöntemi bağlanamadı","descriptorAccessCallFailed":"Tanımlayıcı sınıf \\"{className}\\" için \\"{name}\\" yöntemi çağrılamadı","finalMethod":"Final metodu","functionParamDefaultMissing":"\\"{name}\\" parametresinde varsayılan bağımsız değişken eksik","functionParamName":"Parametre adı uyuşmazlığı: \\"{destName}\\" ve \\"{srcName}\\"","functionParamPositionOnly":"Yalnızca konum parametresi uyuşmazlığı; \\"{name}\\" parametresi yalnızca konum değil","functionReturnTypeMismatch":"\\"{sourceType}\\" işlev dönüş türü, \\"{destType}\\" türüyle uyumsuz","functionTooFewParams":"İşlev çok az konumsal parametre kabul ediyor; {expected} bekleniyordu ancak {received} alındı","functionTooManyParams":"İşlev çok fazla konumsal parametre kabul ediyor; {expected} bekleniyordu ancak {received} alındı","genericClassNotAllowed":"Örnek veya sınıf denetimleri için tür bağımsız değişkenlerine sahip genel türe izin verilmiyor","incompatibleDeleter":"Özellik silici metodu uyumsuz","incompatibleGetter":"Özellik alıcısı metodu uyumsuz","incompatibleSetter":"Özellik ayarlayıcı metodu uyumsuz","initMethodLocation":"\\"{type}\\" sınıfı içinde __init__ metodu tanımlandı","initMethodSignature":"__init__ imzası \\"{type}\\"","initSubclassLocation":"__init_subclass__ yöntemi \\"{name}\\" sınıfı içinde tanımlandı","invariantSuggestionDict":"“dict” öğesinden değer türünde eş değişken olan “Mapping” öğesine geçmeyi deneyin","invariantSuggestionList":"“list” öğesinden eş değişken olan “Sequence” öğesine geçmeyi deneyin","invariantSuggestionSet":"“Küme” öğesinden eş değişken olan “Kapsayıcı” öğesine geçmeyi deneyin","keyNotRequired":"\\"{name}\\", \\"{type}\\" türünde gerekli bir anahtar olmadığından çalışma zamanı özel durumuna neden olabilir","keyReadOnly":"\\"{name}\\", \\"{type}\\" içinde salt okunur","keyRequiredDeleted":"\\"{name}\\" gerekli bir anahtar olduğundan silinemez","keyUndefined":"\\"{name}\\", \\"{type}\\" içinde tanımlı bir anahtar değil","kwargsParamMissing":"\\"**{paramName}\\" parametresine karşılık gelen bir parametre yok","listAssignmentMismatch":"\\"{type}\\" türü hedef listeyle uyumsuz","literalAssignmentMismatch":"\\"{sourceType}\\" \\"{destType}\\" türüne atanamaz","matchIsNotExhaustiveHint":"Tümlemeli işleme amaçlanmadıysa \\"case _: pass\\" ekleyin","matchIsNotExhaustiveType":"\\"{type}\\" türü işlenmemiş","memberAssignment":"\\"{type}\\" türündeki ifade, \\"{classType}\\" sınıfının \\"{name}\\" üyesine atanamaz","memberIsAbstract":"\\"{type}.{name}\\" uygulanmadı","memberIsAbstractMore":"ve +{count} tane daha...","memberIsClassVarInProtocol":"\\"{name}\\", protokolde ClassVar olarak tanımlandı","memberIsFinalInProtocol":"\\"{name}\\" protokolde Final olarak işaretlendi","memberIsInitVar":"\\"{name}\\" üyesi bir init-only alanıdır","memberIsInvariant":"\\"{name}\\" değiştirilebilir olduğundan sabit ayarlanır","memberIsNotClassVarInClass":"\\"{name}\\" protokolle uyumlu olması için ClassVar olarak tanımlanmalıdır","memberIsNotClassVarInProtocol":"\\"{name}\\" protokolde ClassVar olarak tanımlanmadı","memberIsNotFinalInProtocol":"\\"{name}\\", protokolde Final olarak işaretlenmedi","memberIsWritableInProtocol":"\\"{name}\\" protokolde yazılabilir","memberSetClassVar":"\\"{name}\\" üyesi bir ClassVar olduğundan sınıf örneği aracılığıyla atanamaz","memberTypeMismatch":"\\"{name}\\" uyumsuz bir tür","memberUnknown":"\\"{name}\\" üyesi bilinmiyor","metaclassConflict":"Metaclass \\"{metaclass1}\\", \\"{metaclass2}\\" ile çakışıyor","missingDeleter":"Özellik silici metodu eksik","missingGetter":"Özellik alıcı metodu eksik","missingSetter":"Özellik ayarlayıcı metodu eksik","namedParamMissingInDest":"Hedefte \\"{name}\\" anahtar sözcük parametresi eksik","namedParamMissingInSource":"Kaynakta \\"{name}\\" anahtar sözcük parametresi eksik","namedParamTypeMismatch":"\\"{sourceType}\\" türündeki \\"{name}\\" anahtar sözcük parametresi, \\"{destType}\\" türüne atanamıyor","namedTupleNotAllowed":"NamedTuple örnek veya sınıf kontrolleri için kullanılamaz","newMethodLocation":"\\"{type}\\" sınıfı içinde __new__ metodu tanımlandı","newMethodSignature":"__new__ imzası \\"{type}\\"","newTypeClassNotAllowed":"NewType ile oluşturulan sınıf, örnek ve sınıf denetimleriyle kullanılamaz","noOverloadAssignable":"Aşırı yüklenmiş işlevlerden hiçbiri \\"{type}\\" türüyle uyuşmuyor","noneNotAllowed":"Örnek veya sınıf denetimleri için hiçbiri kullanılamaz","orPatternMissingName":"Eksik adlar: {name}","overloadIndex":"Aşırı yükleme {index} en yakın eşleşmedir","overloadNotAssignable":"Bir veya daha fazla \\"{name}\\" aşırı yüklemesi atanabilir değil","overloadSignature":"Aşırı yükleme imzası burada tanımlı","overriddenMethod":"Geçersiz kılınan metot","overriddenSymbol":"Geçersiz kılınan simge","overrideInvariantMismatch":"\\"{overrideType}\\" geçersiz kılma türü \\"{baseType}\\" temel türüyle aynı değil","overrideIsInvariant":"Değişken değişebilir, bu nedenle türü sabit","overrideNoOverloadMatches":"Geçersiz kılmadaki hiçbir aşırı yükleme imzası temel metotla uyumlu değil","overrideNotClassMethod":"Temel metot bir örnek metodu olarak bildirilir, ancak geçersiz kılma bu şekilde bildirilmez","overrideNotInstanceMethod":"Temel metot bir örnek metodu olarak bildirilir, ancak geçersiz kılma bu şekilde bildirilmez","overrideNotStaticMethod":"Temel metot bir staticmethod olarak bildirilir, ancak geçersiz kılma bu şekilde bildirilmez","overrideOverloadNoMatch":"Geçersiz kılma temel yöntemin tüm aşırı yüklemelerini işlemez","overrideOverloadOrder":"Geçersiz kılma metoduna ait aşırı yüklemeler temel metotla aynı sırada olmalıdır","overrideParamKeywordNoDefault":"\\"{name}\\" anahtar sözcük parametresi eşleşmiyor: Temel parametrede varsayılan bağımsız değişken değer var, geçersiz kılma parametresinde yok","overrideParamKeywordType":"\\"{name}\\" anahtar sözcük parametresi tür uyuşmazlığı: temel parametre \\"{baseType}\\" türünde, geçersiz kılma parametresi \\"{overrideType}\\" türünde","overrideParamName":"{index} parametresi ad uyuşmazlığı: temel parametre adı \\"{baseName}\\", geçersiz kılma parametresinin adı \\"{overrideName}\\"","overrideParamNameExtra":"Temelde \\"{name}\\" parametresi eksik","overrideParamNameMissing":"Geçersiz kılmada \\"{name}\\" parametresi eksik","overrideParamNamePositionOnly":"{index} parametresi eşleşmiyor: \\"{baseName}\\" temel parametresi, anahtar sözcük parametresidir, geçersiz kılma parametresi ise yalnızca konumdur","overrideParamNoDefault":"{index} parametresi eşleşmiyor: Temel parametrede varsayılan bağımsız değişken değer var, geçersiz kılma parametresinde yok","overrideParamType":"\\"{index}\\" parametresi tür uyuşmazlığı: temel parametre \\"{baseType}\\" türünde, geçersiz kılma parametresi \\"{overrideType}\\" türünde","overridePositionalParamCount":"Konumsal parametre sayısı uyuşmazlığı; temel metotta {baseCount} var, ancak geçersiz kılmada {overrideCount} var","overrideReturnType":"Dönüş türü uyuşmazlığı: temel metot tür \\"{baseType}\\" türü döndürür, geçersiz kılma ise \\"{overrideType}\\" türü döndürür","overrideType":"Temel sınıf, türü \\"{type}\\" olarak tanımlar","paramAssignment":"Parametre {index}: tür \\"{sourceType}\\", \\"{destType}\\" türüne atanamıyor","paramSpecMissingInOverride":"Geçersiz kılma metodunda ParamSpec parametreleri eksik","paramType":"Parametre türü \\"{paramType}\\"","privateImportFromPyTypedSource":"Bunun yerine \\"{module}\\" üzerinden içeri aktarın","propertyAccessFromProtocolClass":"Protokol sınıfı içinde tanımlanan bir özelliğe sınıf değişkeni olarak erişilemez","propertyMethodIncompatible":"\\"{name}\\" özellik metodu uyumsuz","propertyMethodMissing":"Geçersiz kılmada \\"{name}\\" özellik metodu eksik","propertyMissingDeleter":"\\"{name}\\" özelliği tanımlı bir siliciye sahip değil","propertyMissingSetter":"\\"{name}\\" özelliği tanımlı bir ayarlayıcıya sahip değil","protocolIncompatible":"\\"{sourceType}\\", \\"{destType}\\" protokol ayarlarıyla uyumsuz","protocolMemberMissing":"\\"{name}\\" yok","protocolRequiresRuntimeCheckable":"Protokol sınıfının örnekle ve sınıf denetimleriyle birlikte kullanılabilmesi için @runtime_checkable olması gerekir","protocolSourceIsNotConcrete":"\\"{sourceType}\\" somut bir sınıf türü değil ve \\"{destType}\\" türüne atanamaz","protocolUnsafeOverlap":"\\"{name}\\" öznitelikleri protokolle aynı adlara sahip","pyrightCommentIgnoreTip":"Tek bir satır için tanılamayı durdurmak için \\"# pyright: ignore[<diagnostic rules>] kullanın","readOnlyAttribute":"\\"{name}\\" özniteliği salt okunur","seeClassDeclaration":"Sınıf bildirimine bakın","seeDeclaration":"Bildirime bakın","seeFunctionDeclaration":"İşlev bildirimine bakın","seeMethodDeclaration":"Metot bildirimine bakın","seeParameterDeclaration":"Parametre bildirimine bakın","seeTypeAliasDeclaration":"Tür diğer adı bildirimine bakın","seeVariableDeclaration":"Değişken bildirimine bakın","tupleAssignmentMismatch":"\\"{type}\\" türü hedef demet ile uyumsuz","tupleEntryTypeMismatch":"{entry} demet girdisi doğru türde değil","tupleSizeIndeterminateSrc":"Demet boyutu uyuşmuyor; {expected} bekleniyordu ancak indeterminate alındı","tupleSizeIndeterminateSrcDest":"Demet boyutu uyuşmuyor; {expected} veya daha büyük bir değer bekleniyordu ancak belirsiz bir değer alındı","tupleSizeMismatch":"Demet boyutu uyuşmuyor; {expected} bekleniyordu ancak {received} alındı","tupleSizeMismatchIndeterminateDest":"Demet boyutu uyuşmuyor; {expected} veya daha büyük bir değer bekleniyordu ancak {received} alındı","typeAliasInstanceCheck":"“Type” deyimi ile oluşturulan tür diğer adı örnek ve sınıf denetimleri kullanılamaz","typeAssignmentMismatch":"\\"{sourceType}\\" türü \\"{destType}\\" türüne atanamaz","typeBound":"\\"{sourceType}\\" türü, \\"{name}\\" tür değişkeni için \\"{destType}\\" bağlı türü ile uyumlu değil","typeConstrainedTypeVar":"\\"{type}\\" türü, \\"{name}\\" kısıtlanmış tür değişkeni değişkeniyle uyumlu değil","typeIncompatible":"\\"{sourceType}\\", \\"{destType}\\" ile uyumlu değil","typeNotClass":"\\"{type}\\" bir sınıf değil","typeNotStringLiteral":"\\"{type}\\" bir sabit değeri dize değil","typeOfSymbol":"\\"{name}\\" türü \\"{type}\\"","typeParamSpec":"\\"{type}\\" türü \\"{name}\\" ParamSpec ile uyumlu değil","typeUnsupported":"\\"{type}\\" türü desteklenmiyor","typeVarDefaultOutOfScope":"\\"{name}\\" tür değişkeni kapsamda değil","typeVarIsContravariant":"\\"{name}\\" tür parametresi bir karşıt değişken ancak \\"{sourceType}\\", \\"{destType}\\" öğesinin bir üst türü değil","typeVarIsCovariant":"\\"{name}\\" tür parametresi bir eşdeğişken ancak \\"{sourceType}\\", \\"{destType}\\" öğesinin bir alt türü değil","typeVarIsInvariant":"\\"{name}\\" tür parametresi bir değişmez değer ancak \\"{sourceType}\\", \\"{destType}\\" ile aynı değil","typeVarNotAllowed":"Örnek veya sınıf denetimleri için TypeVar\'a izin verilmiyor","typeVarTupleRequiresKnownLength":"TypeVarTuple, uzunluğu bilinmeyen bir demete bağlanamaz","typeVarUnnecessarySuggestion":"Bunun yerine {type} kullanın","typeVarUnsolvableRemedy":"Bağımsız değişken sağlanmamışken dönüş türünü belirten bir aşırı yükleme belirtin","typeVarsMissing":"Eksik tür değişkenleri: {names}","typedDictBaseClass":"\\"{type}\\" sınıfı bir TypedDict değil","typedDictClassNotAllowed":"Örnek veya sınıf denetimleri için TypedDict sınıfına izin verilmiyor","typedDictClosedExtraNotAllowed":"\\"{name}\\" öğesi eklenemiyor","typedDictClosedExtraTypeMismatch":"\\"{type}\\" türündeki \\"{name}\\" öğesi eklenemiyor","typedDictClosedFieldNotRequired":"NotRequired olması gerektiğinden \\"{name}\\" öğesi eklenemiyor","typedDictExtraFieldNotAllowed":"\\"{name}\\" öğesi \\"{type}\\" türünde mevcut değil","typedDictExtraFieldTypeMismatch":"\\"{name}\\" türü, \\"{type}\\" altındaki \\"__extra_items__\\" türüyle uyumlu değil","typedDictFieldMissing":"\\"{type}\\" için \\"{name}\\" eksik","typedDictFieldNotReadOnly":"\\"{name}\\", \\"{type}\\" içinde salt okunur değil","typedDictFieldNotRequired":"\\"{type}\\" içinde \\"{name}\\" gerekli değil","typedDictFieldRequired":"\\"{type}\\" içinde \\"{name}\\" gerekiyor","typedDictFieldTypeMismatch":"\\"{type}\\" türü \\"{name}\\" öğesine atanamaz","typedDictFieldUndefined":"\\"{name}\\", \\"{type}\\" türündeki tanımsız bir öğedir","typedDictFinalMismatch":"\\"{sourceType}\\" @final uyumsuzluğu nedeniyle \\"{destType}\\" ile uyumsuz","typedDictKeyAccess":"TypedDict’te öğeye başvurmak için [\\"{name}\\"] değerini kullanın","typedDictNotAllowed":"TypedDict örnek veya sınıf kontrolleri için kullanılamaz","unhashableType":"\\"{type}\\" türü karmalanabilir değil","uninitializedAbstractVariable":"\\"{name}\\" örnek değişkeni, \\"{classType}\\" soyut temel sınıfında tanımlandı ancak başlatılmadı","unreachableExcept":"\\"{exceptionType}\\", \\"{parentType}\\" üst öğesinin bir alt sınıfı","useDictInstead":"Sözlük türünü belirtmek için Dict[T1, T2] kullanın","useListInstead":"Liste türü belirtmek için List[T] veya birleşim türü belirtmek için Union[T1, T2] kullanın","useTupleInstead":"Demet türünü belirtmek için Tuple[T1, ..., Tn] veya birleşim türünü belirtmek için Union[T1, T2] kullanın","useTypeInstead":"Bunun yerine Type[T] kullanın","varianceMismatchForClass":"\\"{typeVarName}\\" tür bağımsız değişkeni \\"{className}\\" taban sınıfıyla uyumsuz","varianceMismatchForTypeAlias":"\\"{typeVarName}\\" tür bağımsız değişkeninin varyansı, \\"{typeAliasParam}\\" ile uyumsuz"}}')},84870:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"创建类型存根","createTypeStubFor":"为“{moduleName}”创建类型存根","executingCommand":"正在执行命令","filesToAnalyzeCount":"要分析的 {count} 个文件","filesToAnalyzeOne":"1 个要分析的文件","findingReferences":"正在查找引用","organizeImports":"整理 Import","renameShadowedFile":"将“{oldFile}”重命名为“{newFile}”"},"Completion":{"autoImportDetail":"自动导入","indexValueDetail":"索引值"},"Diagnostic":{"abstractMethodInvocation":"无法调用方法“{method}”，因为它是抽象的且未实施","annotatedParamCountMismatch":"参数批注计数不匹配: 应为 {expected}，但收到 {received}","annotatedTypeArgMissing":"“Annotated”应为一个类型参数和一个或多个批注","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"类型批注不能使用格式字符串文本 (f 字符串)","annotationNotSupported":"此语句不支持类型批注","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"类型批注不能跨越多个字符串文本","annotationStringEscape":"类型批注不能包含转义字符","argAssignment":"无法将“{argType}”类型的参数分配给“{paramType}”类型的参数","argAssignmentFunction":"无法将\\"{argType}\\"类型的参数分配给函数\\"{functionName}\\"中的\\"{paramType}\\"类型参数","argAssignmentParam":"无法将“{argType}”类型的参数分配给“{paramType}”类型的参数“{paramName}”","argAssignmentParamFunction":"无法将“{argType}”类型的参数分配给函数“{functionName}”中类型为“{paramType}”的参数“{paramName}”","argMissingForParam":"参数 {name} 缺少参数","argMissingForParams":"参数 {names} 缺少参数","argMorePositionalExpectedCount":"预期还有 {expected} 个位置参数","argMorePositionalExpectedOne":"应为 1 个以上位置参数","argPositional":"应为位置参数","argPositionalExpectedCount":"应为 {expected} 个位置参数","argPositionalExpectedOne":"应为 1 个位置参数","argTypePartiallyUnknown":"参数类型部分未知","argTypeUnknown":"参数类型未知","assertAlwaysTrue":"断言表达式的计算结果始终为 true","assertTypeArgs":"“assert_type”需要两个位置参数","assertTypeTypeMismatch":"“assert_type”不匹配:应为“{expected}”，但收到“{received}”","assignmentExprComprehension":"赋值表达式目标“{name}”不能使用与目标理解相同的名称","assignmentExprContext":"赋值表达式必须在模块、函数或 lambda 中","assignmentExprInSubscript":"仅在 Python 3.10 和更高版本中支持下标中的赋值表达式","assignmentInProtocol":"协议类中的实例或类变量必须在类主体内显式声明","assignmentTargetExpr":"表达式不能是赋值目标","asyncNotInAsyncFunction":"异步函数之外不允许使用“async”","awaitIllegal":"使用 “await” 需要 Python 3.5 或更高版本","awaitNotAllowed":"类型注释不能使用“await”","awaitNotInAsync":"仅允许在异步函数内使用“await”","backticksIllegal":"Python 3.x 中不支持由反引号环绕的表达式；请改用 repr","baseClassCircular":"类不能从自身派生","baseClassFinal":"基类“{type}”被标记为最终类，不能为子类","baseClassIncompatible":"{type} 的基类相互不兼容","baseClassInvalid":"类的参数必须是基类","baseClassMethodTypeIncompatible":"类“{classType}”的基类以不兼容的方式定义方法“{name}”","baseClassUnknown":"基类类型未知，隐蔽派生类的类型","baseClassVariableTypeIncompatible":"类“{classType}”的基类以不兼容的方式定义变量“{name}”","binaryOperationNotAllowed":"类型注释中不允许使用二进制运算符","bindTypeMismatch":"无法绑定方法“{methodName}”，因为“{type}”不能分配给参数“{paramName}”","breakOutsideLoop":"“break”只能在循环中使用","callableExtraArgs":"\\"Callable\\"应只有两个类型参数","callableFirstArg":"应为参数类型列表或“...”","callableNotInstantiable":"无法实例化类型“{type}”","callableSecondArg":"返回类型应为\\"Callable\\"的第二个类型参数","casePatternIsIrrefutable":"仅最后一个 case 语句允许使用无可辩驳的模式","classAlreadySpecialized":"类型\\"{type}\\"已专用化","classDecoratorTypeUnknown":"非类型化类修饰器遮盖类类型;忽略修饰器","classDefinitionCycle":"“{name}”的类定义取决于自身","classGetItemClsParam":"__class_getitem__替代应采用“cls”参数","classMethodClsParam":"类方法应采用“cls”参数","classNotRuntimeSubscriptable":"类“{name}”的下标将生成运行时异常；将类型批注括在引号中","classPatternBuiltInArgPositional":"类模式仅接受位置子模式","classPatternPositionalArgCount":"类“{type}”的位置模式太多; 应为 {expected}，但收到了 {received}","classPatternTypeAlias":"无法在类模式中使用“{type}”，因为它是专用类型别名","classPropertyDeprecated":"类属性在 Python 3.11 中已弃用，在 Python 3.13 中将不受支持","classTypeParametersIllegal":"类类型参数语法需要 Python 3.12 或更高版本","classVarFirstArgMissing":"\\"ClassVar\\"后应为类型参数","classVarNotAllowed":"此上下文中不允许使用“ClassVar”","classVarOverridesInstanceVar":"类变量\\"{name}\\"替代类\\"{className}\\"中的同名实例变量","classVarTooManyArgs":"“ClassVar”后应只有一个类型参数","classVarWithTypeVar":"“ClassVar”类型不能包含类型变量","clsSelfParamTypeMismatch":"参数“{name}”的类型必须是类“{classType}”的超类型","codeTooComplexToAnalyze":"代码太复杂，无法分析；通过重构为子例程或减少条件代码路径来降低复杂性","collectionAliasInstantiation":"无法实例化类型“{type}”，请改用“{alias}”","comparisonAlwaysFalse":"条件的计算结果始终为 False，因为类型“{leftType}”和“{rightType}”没有重叠","comparisonAlwaysTrue":"条件的计算结果始终为 True，因为类型“{leftType}”和“{rightType}”没有重叠","comprehensionInDict":"理解不能与其他字典条目一起使用","comprehensionInSet":"理解不能与其他集条目一起使用","concatenateContext":"此上下文中不允许使用“Concatenate”","concatenateParamSpecMissing":"“Concatenate”的最后一个类型参数必须是 ParamSpec 或 \\"...\\"","concatenateTypeArgsMissing":"“Concatenate” 至少需要两个类型参数","conditionalOperandInvalid":"类型“{type}”的条件操作数无效","constantRedefinition":"“{name}”是常量 (因为它是大写)且无法重新定义","constructorNoArgs":"\\"{type}\\"构造函数不应有参数","constructorParametersMismatch":"类“{classType}”中__new__和__init__的签名不匹配","containmentAlwaysFalse":"表达式的计算结果始终为 False，因为类型“{leftType}”和“{rightType}”没有重叠","containmentAlwaysTrue":"表达式的计算结果始终为 True，因为类型“{leftType}”和“{rightType}”没有重叠","continueInFinally":"“continue”不能在 finally 子句中使用","continueOutsideLoop":"“continue”只能在循环中使用","coroutineInConditionalExpression":"始终计算结果为 True 的条件表达式引用协同例程","dataClassBaseClassFrozen":"非冻结类不能从已冻结类继承","dataClassBaseClassNotFrozen":"冻结类不能从未冻结的类继承","dataClassConverterFunction":"类型“{argType}”的参数不是类型为“{fieldType}”的字段“{fieldName}”的有效转换器","dataClassConverterOverloads":"“{funcName}”的重载不是类型为“{fieldType}”的字段“{fieldName}”的有效转换器","dataClassFieldWithDefault":"没有默认值的字段不能出现在具有默认值的字段之后","dataClassFieldWithPrivateName":"数据类字段不能使用专用名称","dataClassFieldWithoutAnnotation":"不带类型批注的数据类字段将导致运行时异常","dataClassPostInitParamCount":"数据类__post_init__参数计数不正确；InitVar 字段数为 {expected}","dataClassPostInitType":"数据类__post_init__方法参数类型不匹配 \\"{fieldName}\\"字段","dataClassSlotsOverwrite":"__slots__已在类中定义","dataClassTransformExpectedBoolLiteral":"静态计算结果为 True 或 False 的预期表达式","dataClassTransformFieldSpecifier":"应为类或函数的元组，但收到的类型\\"{type}\\"","dataClassTransformPositionalParam":"“dataclass_transform”的所有参数都必须是关键字参数","dataClassTransformUnknownArgument":"dataclass_transform不支持参数“{name}”","dataProtocolInSubclassCheck":"issubclass 调用中不允许使用数据协议(包括非方法属性)","declaredReturnTypePartiallyUnknown":"声明的返回类型“{returnType}”部分未知","declaredReturnTypeUnknown":"声明的返回类型未知","defaultValueContainsCall":"参数默认值表达式中不允许函数调用和可变对象","defaultValueNotAllowed":"“*”或“**”的参数不能有默认值","delTargetExpr":"无法删除表达式","deprecatedClass":"类\\"{name}\\"已弃用","deprecatedConstructor":"类\\"{name}\\"的构造函数已弃用","deprecatedDescriptorDeleter":"已弃用描述符“{name}”的“__delete__”方法","deprecatedDescriptorGetter":"已弃用描述符“{name}”的“__get__”方法","deprecatedDescriptorSetter":"已弃用描述符“{name}”的“__set__”方法","deprecatedFunction":"函数“{name}”已弃用","deprecatedMethod":"类“{className}”中的“{name}”方法已弃用","deprecatedPropertyDeleter":"已弃用属性“{name}”的删除程序","deprecatedPropertyGetter":"已弃用属性“{name}”的 getter","deprecatedPropertySetter":"已弃用属性“{name}”的资源库","deprecatedType":"自 Python {version} 起，此类型已弃用；请改用“{replacement}”","dictExpandIllegalInComprehension":"理解中不允许字典扩展","dictInAnnotation":"类型批注中不允许使用字典表达式","dictKeyValuePairs":"字典条目必须包含键/值对","dictUnpackIsNotMapping":"字典解包运算符的预期映射","dunderAllSymbolNotPresent":"\\"{name}\\"已在__all__中指定，但在模块中不存在","duplicateArgsParam":"只允许一个 \\"*\\" 参数","duplicateBaseClass":"不允许重复的基类","duplicateCapturePatternTarget":"捕获目标“{name}”不能在同一模式中出现多次","duplicateCatchAll":"仅允许一个 catch-all except 子句","duplicateEnumMember":"枚举成员\\"{name}\\"已声明","duplicateGenericAndProtocolBase":"只允许一个泛型[...]或协议[...]基类","duplicateImport":"已多次导入“{importName}”","duplicateKeywordOnly":"只允许一个“*”分隔符","duplicateKwargsParam":"仅允许一个 “**” 参数","duplicateParam":"参数“{name}”重复","duplicatePositionOnly":"只允许一个“/”参数","duplicateStarPattern":"模式序列中只允许一个“*”模式","duplicateStarStarPattern":"只允许一个“**”条目","duplicateUnpack":"列表中仅允许一个解包操作","ellipsisAfterUnpacked":"“...”不能与未打包的 TypeVarTuple 或元组一起使用","ellipsisContext":"不允许在此上下文中使用 \\"...\\"","ellipsisSecondArg":"仅允许 \\"...\\" 作为两个参数中的第二个参数","enumClassOverride":"枚举类“{name}”是最终类，不能为子类","exceptionGroupIncompatible":"异常组语法 (\\"except*\\") 需要 Python 3.11 或更高版本","exceptionTypeIncorrect":"\\"{type}\\" 不是派生自 BaseException","exceptionTypeNotClass":"“{type}”不是有效的异常类","exceptionTypeNotInstantiable":"异常类型\\"{type}\\"的构造函数需要一个或多个参数","expectedAfterDecorator":"修饰器后应有函数或类声明","expectedArrow":"应为“->”，后跟返回类型批注","expectedAsAfterException":"异常类型后应为“as”","expectedAssignRightHandExpr":"应为 “=” 右侧的表达式","expectedBinaryRightHandExpr":"应为运算符右侧的表达式","expectedBoolLiteral":"应为 True 或 False","expectedCase":"应为 “case” 语句","expectedClassName":"预期的类名","expectedCloseBrace":"\\"{\\" 未关闭","expectedCloseBracket":"“[”未关闭","expectedCloseParen":"\\"(\\" 未关闭","expectedColon":"应为 \\":\\"","expectedComplexNumberLiteral":"模式匹配的预期复数文本","expectedDecoratorExpr":"Python 3.9 之前的修饰器不支持表达式窗体","expectedDecoratorName":"预期的修饰器名称","expectedDecoratorNewline":"修饰器末尾应有新行","expectedDelExpr":"\\"del\\"后应为表达式","expectedElse":"应为 \\"else\\"","expectedEquals":"应为 \\"=\\"","expectedExceptionClass":"异常类或对象无效","expectedExceptionObj":"应为异常对象、异常类或 None","expectedExpr":"应为表达式","expectedFunctionAfterAsync":"\\"async\\"后面应有函数定义","expectedFunctionName":"“def”后应为函数名称","expectedIdentifier":"预期标识符","expectedImport":"应为 \\"import\\"","expectedImportAlias":"应为 “as” 后面的符号","expectedImportSymbols":"导入后应有一个或多个符号名称","expectedIn":"应为 \\"in\\"","expectedInExpr":"\\"in\\"后应为表达式","expectedIndentedBlock":"应为缩进块","expectedMemberName":"应为“.”后的成员名称。","expectedModuleName":"预期模块名称","expectedNameAfterAs":"\\"as\\" 后应有符号名","expectedNamedParameter":"关键字参数必须跟在 “*” 之后","expectedNewline":"需要换行符","expectedNewlineOrSemicolon":"语句必须用换行符或分号分隔","expectedOpenParen":"应为 \\"(\\"","expectedParamName":"应为参数名称","expectedPatternExpr":"预期的模式表达式","expectedPatternSubjectExpr":"预期的模式主题表达式","expectedPatternValue":"应为 “a.b”形式的模式值表达式","expectedReturnExpr":"“return” 后应有表达式","expectedSliceIndex":"预期索引或切片表达式","expectedTypeNotString":"应为类型，但收到字符串文本","expectedTypeParameterName":"应为类型参数名称","expectedYieldExpr":"yield 语句中的预期表达式","finalClassIsAbstract":"类“{type}”被标记为 final，并且必须实现所有抽象符号","finalContext":"不允许在此上下文中使用 \\"Final\\"","finalMethodOverride":"方法\\"{name}\\"无法替代在类\\"{className}\\"中定义的最终方法","finalNonMethod":"不能将函数“{name}”标记为 @final，因为它不是方法","finalReassigned":"\\"{name}\\"声明为 Final，无法重新分配","finalRedeclaration":"\\"{name}\\"以前声明为 Final","finalRedeclarationBySubclass":"无法重新声明“{name}”，因为父类“{className}”将其声明为 Final","finalTooManyArgs":"“Final”后应为单个类型参数","finalUnassigned":"“{name}”声明为“最终”，但未分配值","formatStringBrace":"f 字符串文本中不允许使用单个右大括号；使用双右大括号","formatStringBytes":"格式字符串文本(f 字符串)不能为二进制","formatStringDebuggingIllegal":"F 字符串调试说明符“=”需要 Python 3.8 或更高版本","formatStringEscape":"Python 3.12 之前 f 字符串的表达式部分中不允许使用转义序列(反斜杠)","formatStringExpectedConversion":"在 f 字符串中应为 \\"!\\" 之后的转换说明符","formatStringIllegal":"格式化字符串文本(f 字符串)需要 Python 3.6 或更高版本","formatStringInPattern":"模式中不允许使用格式字符串","formatStringNestedFormatSpecifier":"表达式嵌套在格式字符串说明符内太深","formatStringNestedQuote":"嵌套在 f 字符串中的字符串不能使用与 Python 3.12 之前的 f 字符串相同的引号字符","formatStringUnicode":"格式字符串文本(f 字符串)不能为 unicode","formatStringUnterminated":"f 字符串中未终止的表达式；应为 \\"}\\"","functionDecoratorTypeUnknown":"非类型化函数修饰器遮盖函数类型；忽略修饰器","functionInConditionalExpression":"始终计算结果为 True 的条件表达式引用函数","functionTypeParametersIllegal":"函数类型参数语法需要 Python 3.12 或更高版本","futureImportLocationNotAllowed":"从__future__导入必须位于文件的开头","generatorAsyncReturnType":"异步生成器函数的返回类型必须与 \\"AsyncGenerator[{yieldType}, Any]\\" 兼容","generatorNotParenthesized":"如果不是唯一参数，生成器表达式必须带圆括号","generatorSyncReturnType":"生成器函数的返回类型必须与 \\"Generator[{yieldType}, Any, Any]\\"兼容","genericBaseClassNotAllowed":"“Generic” 基类不能与类型参数语法一起使用","genericClassAssigned":"无法分配泛型类类型","genericClassDeleted":"无法删除泛型类类型","genericInstanceVariableAccess":"通过类访问泛型实例变量是不明确的","genericNotAllowed":"\\"Generic\\" 在此上下文中无效","genericTypeAliasBoundTypeVar":"类中的泛型类型别名不能使用绑定类型变量 {names}","genericTypeArgMissing":"“Generic”至少需要一个类型参数","genericTypeArgTypeVar":"“Generic”的类型参数必须是类型变量","genericTypeArgUnique":"“Generic”的类型参数必须是唯一","globalReassignment":"在全局声明之前分配了“{name}”","globalRedefinition":"“{name}”已声明为全局","implicitStringConcat":"不允许隐式字符串串联","importCycleDetected":"在导入链中检测到的周期数","importDepthExceeded":"导入链深度超过 {depth}","importResolveFailure":"无法解析导入“{importName}”","importSourceResolveFailure":"无法从源解析导入“{importName}”","importSymbolUnknown":"“{name}”是未知的导入符号","incompatibleMethodOverride":"方法“{name}”以不兼容的方式替代类“{className}”","inconsistentIndent":"取消缩进量与以前的缩进不匹配","inconsistentTabs":"缩进中制表符和空格的使用不一致","initMustReturnNone":"“__init__”的返回类型必须为 None","initSubclassCallFailed":"__init_subclass__ 方法的关键字参数不正确","initSubclassClsParam":"__init_subclass__替代应采用“cls”参数","initVarNotAllowed":"此上下文中不允许使用“InitVar”","instanceMethodSelfParam":"实例方法应采用 “self” 参数","instanceVarOverridesClassVar":"实例变量\\"{name}\\"替代类\\"{className}\\"中的同名类变量","instantiateAbstract":"无法实例化抽象类“{type}”","instantiateProtocol":"无法实例化协议类“{type}”","internalBindError":"绑定文件“{file}”时发生内部错误:{message}","internalParseError":"分析文件“{file}”时发生内部错误:{message}","internalTypeCheckingError":"类型检查文件“{file}”时发生内部错误:{message}","invalidIdentifierChar":"标识符中的字符无效","invalidStubStatement":"语句在类型存根文件中无意义","invalidTokenChars":"令牌中的字符\\"{text}\\"无效","isInstanceInvalidType":"“isinstance” 的第二个参数必须是类的类或元组","isSubclassInvalidType":"“issubclass”的第二个参数必须是类的类或元组","keyValueInSet":"不允许在集内使用键/值对","keywordArgInTypeArgument":"关键字参数不能在类型参数列表中使用","keywordOnlyAfterArgs":"“*”参数后不允许使用仅限关键字的参数分隔符","keywordParameterMissing":"一个或多个关键字参数必须遵循 \\"*\\"参数","keywordSubscriptIllegal":"不支持下标中的关键字参数","lambdaReturnTypePartiallyUnknown":"lambda 的返回类型“{returnType}”部分未知","lambdaReturnTypeUnknown":"lambda 的返回类型未知","listAssignmentMismatch":"无法将 \\"{type}\\" 类型的表达式分配给目标列表","listInAnnotation":"类型批注中不允许使用列表表达式","literalEmptyArgs":"“Literal”后应有一个或多个类型参数","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"如果没有类型参数，则 \\"Literal\\" 不能用于此上下文","literalNotCallable":"无法实例化文本类型","literalUnsupportedType":"“Literal” 的类型参数必须是 None、int、bool、str 或 bytes)(文本值，或者是枚举值","matchIncompatible":"匹配语句需要 Python 3.10 或更高版本","matchIsNotExhaustive":"match 语句中的事例不会彻底处理所有值","maxParseDepthExceeded":"超出最大分析深度;将表达式分解为较小的子表达式","memberAccess":"无法存取类型“{type}”的成员“{name}”","memberDelete":"无法删除类型\\"{type}\\"的成员\\"{name}\\"","memberSet":"无法为类型“{type}”分配成员“{name}”","metaclassConflict":"派生类的元类必须是其所有基类的元类的子类","metaclassDuplicate":"只能提供一个元类","metaclassIsGeneric":"元类不能是泛型","methodNotDefined":"未定义“{name}”方法","methodNotDefinedOnType":"未在类型\\"{type}\\"上定义\\"{name}\\"方法","methodOrdering":"无法创建一致的方法排序","methodOverridden":"“{name}”在类型“{type}”不兼容的类“{className}”中替代同名的方法","methodReturnsNonObject":"“{name}”方法不返回对象","missingSuperCall":"方法“{methodName}”在父类中不调用同名方法","moduleAsType":"模块不能用作类型","moduleNotCallable":"模块不可调用","moduleUnknownMember":"“{memberName}”不是模块“{moduleName}”的已知成员","namedExceptAfterCatchAll":"在 catch-all(除子句外)后不能出现命名的 except 子句","namedParamAfterParamSpecArgs":"关键字参数“{name}”不能出现在 ParamSpec args 参数之后的签名中","namedTupleEmptyName":"命名元组中的名称不能为空","namedTupleEntryRedeclared":"无法重写“{name}”，因为父类“{className}”是命名的元组","namedTupleFirstArg":"应将命名元组类名称作为第一个参数","namedTupleMultipleInheritance":"不支持使用 NamedTuple 进行多个继承","namedTupleNameKeyword":"字段名称不能是关键字","namedTupleNameType":"应为指定条目名称和类型的双条目元组","namedTupleNameUnique":"命名元组中的名称必须唯一","namedTupleNoTypes":"“namedtuple”不提供元组条目的类型；请改用“NamedTuple”","namedTupleSecondArg":"应将命名元组条目列表作为第二个参数","newClsParam":"__new__替代应采用“cls”参数","newTypeAnyOrUnknown":"NewType 的第二个参数必须是已知类，而不是“任何”或“未知”","newTypeBadName":"NewType 的第一个参数必须是字符串文本","newTypeLiteral":"NewType 不能与文本类型一起使用","newTypeNameMismatch":"必须将 NewType 分配给同名变量","newTypeNotAClass":"应为 NewType 的第二个参数的类","newTypeParamCount":"NewType 需要两个位置参数","newTypeProtocolClass":"NewType 不能与结构类型(协议或 TypedDict 类)一起使用","noOverload":"“{name}”的重载与提供的参数不匹配","noReturnContainsReturn":"声明返回类型为“NoReturn”的函数不能包含 return 语句","noReturnContainsYield":"声明的返回类型为 “NoReturn” 的函数不能包含 yield 语句","noReturnReturnsNone":"所声明的返回类型为 \\"NoReturn\\" 的函数无法返回 \\"None\\"","nonDefaultAfterDefault":"非默认参数遵循默认参数","nonLocalInModule":"模块级别不允许使用非本地声明","nonLocalNoBinding":"找不到非本地“{name}”的绑定","nonLocalReassignment":"在非本地声明之前分配了“{name}”","nonLocalRedefinition":"\\"{name}\\"已声明为非本地","noneNotCallable":"无法调用类型为“None”的对象","noneNotIterable":"类型为“None”的对象不能用作可迭代值","noneNotSubscriptable":"类型为“None”的对象不可下标","noneNotUsableWith":"类型为“None”的对象不能与“with”一起使用","noneOperator":"“None”不支持运算符\\"{operator}\\"","noneUnknownMember":"“{name}”不是“None”的已知成员","notRequiredArgCount":"“NotRequired” 之后应为单个类型参数","notRequiredNotInTypedDict":"此上下文中不允许使用“NotRequired”","objectNotCallable":"类型为“{type}”的对象不可调用","obscuredClassDeclaration":"类声明\\"{name}\\"被同名的声明遮蔽","obscuredFunctionDeclaration":"函数声明“{name}”被同名声明遮盖","obscuredMethodDeclaration":"方法声明“{name}”被同名声明遮盖","obscuredParameterDeclaration":"参数声明“{name}”被同名声明遮盖","obscuredTypeAliasDeclaration":"类型别名声明“{name}”被同名声明遮盖","obscuredVariableDeclaration":"声明“{name}”被同名声明遮盖","operatorLessOrGreaterDeprecated":"Python 3 不支持运算符“<>”；请改用 \\"!=\\"","optionalExtraArgs":"\\"Optional\\"后面应有一个类型参数","orPatternIrrefutable":"无可辩驳的模式仅允许作为 \\"or\\"模式中的最后一个子模式","orPatternMissingName":"“or”模式中的所有子节点必须以相同的名称为目标","overlappingKeywordArgs":"类型化字典与以下关键字参数重叠: {names}","overlappingOverload":"永远不会使用“{name}”的重载 {obscured}，因为其参数与重载 {obscuredBy} 重叠","overloadAbstractMismatch":"重载的方法必须全部为抽象方法或不为抽象方法","overloadClassMethodInconsistent":"“{name}”的重载使用 @classmethod 的方式不一致","overloadFinalInconsistencyImpl":"“{name}”的重载被标记为 @final，但实施未被标记","overloadFinalInconsistencyNoImpl":"“{name}”的重载 {index} 被标记为 @final，但重载 1 未被标记","overloadImplementationMismatch":"重载实现与重载 {index} 的签名不一致","overloadReturnTypeMismatch":"“{name}”的重载 {prevIndex} 与重载 {newIndex} 重叠，并返回不兼容的类型","overloadStaticMethodInconsistent":"“{name}”的重载使用 @staticmethod 的方式不一致","overloadWithoutImplementation":"\\"{name}\\"标记为重载，但未提供实现","overriddenMethodNotFound":"方法\\"{name}\\"标记为替代，但不存在同名的基方法","overrideDecoratorMissing":"方法\\"{name}\\"未标记为替代，但正在替代类\\"{className}\\"中的方法","paramAfterKwargsParam":"参数不能跟随“**”参数","paramAlreadyAssigned":"已分配参数“{name}”","paramAnnotationMissing":"参数“{name}”缺少类型批注","paramAssignmentMismatch":"无法将\\"{sourceType}\\"类型的表达式分配给\\"{paramType}\\"类型的参数","paramNameMissing":"没有名为“{name}”的参数","paramSpecArgsKwargsUsage":"ParamSpec 的“args”和“kwargs”成员必须同时出现在函数签名中","paramSpecArgsMissing":"缺少 ParamSpec“{type}”的参数","paramSpecArgsUsage":"ParamSpec 的 “args” 成员仅在与 *args 参数一起使用时有效","paramSpecAssignedName":"必须将 ParamSpec 分配给名为“{name}”的变量","paramSpecContext":"此上下文中不允许使用 ParamSpec","paramSpecDefaultNotTuple":"ParamSpec 的默认值应为省略号、元组表达式或 ParamSpec","paramSpecFirstArg":"ParamSpec 作为第一个参数的预期名称","paramSpecKwargsUsage":"ParamSpec 的“kwargs”成员仅在与 **kwargs 参数一起使用时有效","paramSpecNotUsedByOuterScope":"ParamSpec“{name}”在此上下文中没有意义","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\"在返回类型内的作用域为可调用，不能在函数体中引用","paramSpecUnknownArg":"ParamSpec 不支持多个参数","paramSpecUnknownMember":"“{name}”不是 ParamSpec 的已知成员","paramSpecUnknownParam":"“{name}”是 ParamSpec 的未知参数","paramTypeCovariant":"不能在参数类型中使用协变类型变量","paramTypePartiallyUnknown":"参数\\"{paramName}\\"的类型部分未知","paramTypeUnknown":"参数“{paramName}”的类型未知","parenthesizedContextManagerIllegal":"“with”语句中的括号需要 Python 3.9 或更高版本","patternNeverMatches":"主题类型“{type}”的模式永远不会匹配","positionArgAfterNamedArg":"位置参数不能出现在关键字参数之后","positionOnlyAfterArgs":"“*”参数后不允许使用仅位置参数分隔符","positionOnlyAfterKeywordOnly":"“/”参数必须出现在“*”参数之前","positionOnlyAfterNon":"非仅位置参数后面不允许仅位置参数","positionOnlyFirstParam":"不允许将仅位置参数分隔符用作第一个参数","positionOnlyIncompatible":"仅位置参数分隔符需要 Python 3.8 或更高版本","privateImportFromPyTypedModule":"未从模块“{module}”导出“{name}”","privateUsedOutsideOfClass":"\\"{name}\\"是专用的，在声明它的类之外使用","privateUsedOutsideOfModule":"“{name}”是专用的，在声明它的模块外部使用","propertyOverridden":"“{name}”错误地替代类“{className}”中同名的属性","propertyStaticMethod":"属性 getter、setter 或 deleter 不允许使用静态方法","protectedUsedOutsideOfClass":"“{name}”在声明它的类之外受到保护并被使用","protocolBaseClass":"协议类“{classType}”不能派生自非协议类“{baseType}”","protocolBaseClassWithTypeArgs":"使用类型参数语法时，协议类不允许使用类型参数","protocolIllegal":"使用 \\"Protocol\\" 需要 Python 3.7 或更高版本","protocolNotAllowed":"\\"Protocol\\" 不能用于此上下文","protocolUnsafeOverlap":"类与“{name}”不安全地重叠，并且可能在运行时生成匹配项","protocolVarianceContravariant":"泛型协议“{class}”中使用的类型变量“{variable}”应为逆变","protocolVarianceCovariant":"泛型协议“{class}”中使用的类型变量“{variable}”应为协变","protocolVarianceInvariant":"泛型协议“{class}”中使用的类型变量“{variable}”应为固定变量","pyrightCommentInvalidDiagnosticBoolValue":"Pyright 注释指令后面必须跟有“=”和 true 或 false 值","pyrightCommentInvalidDiagnosticSeverityValue":"Pyright 注释指令后面必须跟有“=”，并且值为 true、false、error、warning、information 或 none","pyrightCommentMissingDirective":"Pyright 注释后面必须是指令(基本或严格)或诊断规则","pyrightCommentNotOnOwnLine":"用于控制文件级设置的 Pyright 注释必须显示在其自己的行上","pyrightCommentUnknownDiagnosticRule":"“{rule}”是 pyright 注释的未知诊断规则","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\"是 pyright 注释的无效值；应为 true、false、error、warning、information 或 none","pyrightCommentUnknownDirective":"\\"{directive}\\"是 pyright 注释的未知指令；应为 “strict” 或 “basic”","readOnlyArgCount":"“ReadOnly”后应为单个类型参数","readOnlyNotInTypedDict":"此上下文中不允许使用“ReadOnly”","recursiveDefinition":"无法确定“{name}”的类型，因为它引用其自身","relativeImportNotAllowed":"相对导入不能与“import .a”窗体一起使用；改用 \\"from . import a\\"","requiredArgCount":"\\"Required\\"后应为单个类型参数","requiredNotInTypedDict":"此上下文中不允许使用\\"Required\\"","returnInAsyncGenerator":"异步生成器中不允许返回值为值的语句","returnMissing":"所声明的返回类型为“{returnType}”的函数必须在所有代码路径上返回值","returnOutsideFunction":"“return”只能在函数中使用","returnTypeContravariant":"逆变类型变量不能用于返回类型","returnTypeMismatch":"无法将类型“{exprType}”的表达式分配给返回类型“{returnType}”","returnTypePartiallyUnknown":"返回类型“{returnType}”部分未知","returnTypeUnknown":"返回类型未知","revealLocalsArgs":"“reveal_locals”调用应没有参数","revealLocalsNone":"此范围内没有局部变量","revealTypeArgs":"“reveal_type”调用应为单个位置参数","revealTypeExpectedTextArg":"函数“reveal_type”的“expected_text”参数必须是 str 文本值","revealTypeExpectedTextMismatch":"类型文本不匹配；应为\\"{expected}\\"但收到\\"{received}\\"","revealTypeExpectedTypeMismatch":"类型不匹配;应为“{expected}”，但收到“{received}”","selfTypeContext":"“Self”在此上下文中无效","selfTypeMetaclass":"“Self”不能在元类(“type”的子类)中使用","selfTypeWithTypedSelfOrCls":"“Self”不能在具有“self”或“cls”参数的函数中使用，该参数的类型批注不是“Self”","setterGetterTypeMismatch":"属性资源库值类型不可分配给 getter 返回类型","singleOverload":"“{name}”被标记为重载，但缺少其他重载","slotsAttributeError":"未在__slots__中指定“{name}”","slotsClassVarConflict":"\\"{name}\\"与__slots__中声明的实例变量冲突","starPatternInAsPattern":"星形模式不能与“as”目标一起使用","starPatternInOrPattern":"在其他模式中，星形图案不能为 ORed","starStarWildcardNotAllowed":"** 不能与通配符“_”一起使用","staticClsSelfParam":"静态方法不应采用“self”或“cls”参数","stdlibModuleOverridden":"\\"{path}\\"正在替代 stdlib 模块\\"{name}\\"","stringNonAsciiBytes":"不允许使用非 ASCII 字符(以字节为单位)字符串文本","stringNotSubscriptable":"字符串表达式不能在类型批注中下标；将整个批注括在引号中","stringUnsupportedEscape":"字符串文本中不受支持的转义序列","stringUnterminated":"字符串文本未终止","stubFileMissing":"找不到“{importName}”的存根文件","stubUsesGetAttr":"类型存根文件不完整；“__getattr__”会遮盖模块的类型错误","sublistParamsIncompatible":"Python 3.x 不支持子列表参数","superCallArgCount":"“super” 调用应不超过两个参数","superCallFirstArg":"应将类类型作为“super”调用的第一个参数，但收到“{type}”","superCallSecondArg":"“super”调用的第二个参数必须是派生自“{type}”的对象或类","superCallZeroArgForm":"“Super”调用的零参数形式仅在方法中有效","superCallZeroArgFormStaticMethod":"“super”调用的零参数形式在静态方法中无效","symbolIsPossiblyUnbound":"“{name}”可能未绑定","symbolIsUnbound":"“{name}”未绑定","symbolIsUndefined":"未定义“{name}”","symbolOverridden":"“{name}”替代类“{className}”中的同名符号","ternaryNotAllowed":"类型注释中不允许使用三元表达式","totalOrderingMissingMethod":"类必须定义“__lt__”、“__le__”、“__gt__”或“__ge__”之一才能使用total_ordering","trailingCommaInFromImport":"不允许使用尾随逗号，没有括号","tryWithoutExcept":"Try 语句必须至少有一个 except 或 finally 子句","tupleAssignmentMismatch":"无法将类型为“{type}”的表达式分配给目标元组","tupleInAnnotation":"类型批注中不允许元组表达式","tupleIndexOutOfRange":"类型 {type} 的索引 {index} 超出范围","typeAliasIllegalExpressionForm":"类型别名定义的表达式形式无效","typeAliasIsRecursiveDirect":"类型别名“{name}”不能在其定义中使用自身","typeAliasNotInModuleOrClass":"TypeAlias 只能在模块或类范围内定义","typeAliasRedeclared":"“{name}”声明为 TypeAlias，只能分配一次","typeAliasStatementBadScope":"type 语句只能在模块或类范围内使用","typeAliasStatementIllegal":"类型别名语句需要 Python 3.12 或更高版本","typeAliasTypeBaseClass":"\\"type\\" 语句中定义的类型别名不能用作基类","typeAliasTypeMustBeAssigned":"必须将 TypeAliasType 分配给与类型别名同名的变量","typeAliasTypeNameArg":"TypeAliasType 的第一个参数必须是表示类型别名名称的字符串文本","typeAliasTypeNameMismatch":"类型别名的名称必须与分配到的变量的名称匹配","typeAliasTypeParamInvalid":"类型参数列表必须是仅包含 TypeVar、TypeVarTuple 或 ParamSpec 的元组","typeAnnotationCall":"类型表达式中不允许使用调用表达式","typeAnnotationVariable":"类型表达式中不允许使用变量","typeAnnotationWithCallable":"“type”的类型参数必须为类; 不支持可调用项","typeArgListExpected":"应为 ParamSpec、省略号或类型列表","typeArgListNotAllowed":"不允许此类型参数使用列表表达式","typeArgsExpectingNone":"类“{name}”不应有类型参数","typeArgsMismatchOne":"应为一个类型参数，但收到 {received}","typeArgsMissingForAlias":"泛型类型别名“{name}”的预期类型参数","typeArgsMissingForClass":"泛型类“{name}”的预期类型参数","typeArgsTooFew":"为“{name}”提供的类型参数太少；应为 {expected}，但收到 {received}","typeArgsTooMany":"为“{name}”提供的类型参数太多；应为 {expected}，但收到 {received}","typeAssignmentMismatch":"无法将类型“{sourceType}”的表达式分配给声明的类型“{destType}”","typeAssignmentMismatchWildcard":"导入符号“{name}”的类型为“{sourceType}”，无法将其分配给声明的类型“{destType}”","typeCallNotAllowed":"type() 调用不应用于类型批注","typeCheckOnly":"“{name}”标记为 @type_check_only，并且只能在类型注释中使用","typeCommentDeprecated":"已弃用类型注释；请改用类型批注","typeExpectedClass":"应为类型表达式，但收到“{type}”","typeGuardArgCount":"“TypeGuard”或“TypeIs”后应为单个类型参数","typeGuardParamCount":"用户定义的类型防护函数和方法必须至少有一个输入参数","typeIsReturnType":"TypeIs 的返回类型(“{returnType}”)与值参数类型(“{type}”)不一致","typeNotAwaitable":"“{type}”不可等待","typeNotIntantiable":"无法实例化\\"{type}\\"","typeNotIterable":"“{type}”不可迭代","typeNotSpecializable":"无法专用化类型“{type}”","typeNotSubscriptable":"类型为“{type}”的对象不可下标","typeNotSupportBinaryOperator":"类型“{leftType}”和“{rightType}”不支持运算符“{operator}”","typeNotSupportBinaryOperatorBidirectional":"预期类型为“{expectedType}”时，类型“{leftType}”和“{rightType}”不支持运算符“{operator}”","typeNotSupportUnaryOperator":"类型“{type}”不支持运算符“{operator}”","typeNotSupportUnaryOperatorBidirectional":"预期类型为 \\"{expectedType}\\"时，类型\\"{type}\\"不支持运算符\\"{operator}\\"","typeNotUsableWith":"\\"{type}\\"类型的对象不能与 “with” 一起使用，因为它未实现{method}","typeParameterBoundNotAllowed":"绑定或约束不能与 variadic 类型参数或 ParamSpec 一起使用","typeParameterConstraintTuple":"类型参数约束必须是两个或更多类型的元组","typeParameterExistingTypeParameter":"类型参数\\"{name}\\"已在使用中","typeParameterNotDeclared":"类型参数“{name}”未包含在“{container}”的类型参数列表中","typeParametersMissing":"必须至少指定一个类型参数","typePartiallyUnknown":"“{name}”的类型部分未知","typeUnknown":"\\"{name}\\"类型未知","typeVarAssignedName":"必须将 TypeVar 分配给名为“{name}”的变量","typeVarAssignmentMismatch":"无法将类型\\"{type}\\"分配给类型变量\\"{name}\\"","typeVarBoundAndConstrained":"TypeVar 不能同时绑定和约束","typeVarBoundGeneric":"TypeVar 绑定类型不能是泛型","typeVarConstraintGeneric":"TypeVar 约束类型不能是泛型","typeVarDefaultBoundMismatch":"TypeVar 默认类型必须是绑定类型的子类型","typeVarDefaultConstraintMismatch":"TypeVar 默认类型必须是受约束类型之一","typeVarDefaultIllegal":"类型变量默认类型需要 Python 3.13 或更高版本","typeVarDefaultInvalidTypeVar":"类型参数“{name}”的默认类型是指超出范围的一个或多个类型变量","typeVarFirstArg":"TypeVar 作为第一个参数的预期名称","typeVarNoMember":"TypeVar \\"{type}\\"没有成员\\"{name}\\"","typeVarNotSubscriptable":"TypeVar“{type}”不可下标","typeVarNotUsedByOuterScope":"类型变量“{name}”在此上下文中没有意义","typeVarPossiblyUnsolvable":"如果调用方没有为参数提供参数\\"{param}\\"，则类型变量\\"{name}\\"可能无法解析","typeVarScopedToReturnType":"类型变量\\"{name}\\"在返回类型内的作用域为可调用，不能在函数体中引用","typeVarSingleConstraint":"TypeVar 必须至少有两种约束类型","typeVarTupleConstraints":"TypeVarTuple 不能有值约束","typeVarTupleContext":"此上下文中不允许使用 TypeVarTuple","typeVarTupleDefaultNotUnpacked":"TypeVarTuple 默认类型必须是未打包的元组或 TypeVarTuple","typeVarTupleMustBeUnpacked":"TypeVarTuple 值需要解包运算符","typeVarTupleUnknownParam":"“{name}”是 TypeVarTuple 的未知参数","typeVarUnknownParam":"typeVar 的\\"{name}\\"是未知参数","typeVarUsedByOuterScope":"TypeVar“{name}”已被外部作用域使用","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" 在泛型函数签名中仅显示一次","typeVarVariance":"TypeVar 不能同时为协变和逆变","typeVarWithDefaultFollowsVariadic":"TypeVar“{typeVarName}”具有默认值，并且不能遵循 TypeVarTuple“{variadicName}”","typeVarWithoutDefault":"“{name}”不能出现在类型参数列表的“{other}”后面，因为它没有默认类型","typeVarsNotInGenericOrProtocol":"Generic[] 或 Protocol[] 必须包括所有类型变量","typedDictAccess":"无法存取 TypedDict 中的项","typedDictAssignedName":"必须将 TypedDict 分配给名为“{name}”的变量","typedDictBadVar":"TypedDict 类只能包含类型批注","typedDictBaseClass":"TypedDict 类的所有基类也必须是 TypedDict 类","typedDictBoolParam":"预期“{name}”参数的值为 True 或 False","typedDictClosedExtras":"基类“{name}”是已关闭的 TypedDict；额外的项必须是类型“{type}”","typedDictClosedNoExtras":"基类“{name}”是已关闭的 TypedDict；不允许使用额外的项","typedDictDelete":"无法删除 TypedDict 中的项","typedDictEmptyName":"TypedDict 中的名称不能为空","typedDictEntryName":"字典条目名称的预期字符串文本","typedDictEntryUnique":"字典中的名称必须唯一","typedDictExtraArgs":"不支持额外的 TypedDict 参数","typedDictFieldNotRequiredRedefinition":"无法将 TypedDict 项“{name}”重新定义为 NotRequired","typedDictFieldReadOnlyRedefinition":"无法将 TypedDict 项“{name}”重新定义为 ReadOnly","typedDictFieldRequiredRedefinition":"无法将 TypedDict 项“{name}”重新定义为 Required","typedDictFirstArg":"应将 TypedDict 类名作为第一个参数","typedDictInitsubclassParameter":"TypedDict 不支持 __init_subclass__ parameter“{name}”","typedDictNotAllowed":"\\"TypedDict\\" 不能用于此上下文","typedDictSecondArgDict":"预期的 dict 或关键字参数作为第二个参数","typedDictSecondArgDictEntry":"应为简单字典条目","typedDictSet":"无法在 TypedDict 中分配项","unaccessedClass":"未存取类“{name}”","unaccessedFunction":"无法存取函数\\"{name}\\"","unaccessedImport":"未存取导入“{name}”","unaccessedSymbol":"未存取“{name}”","unaccessedVariable":"无法存取变量“{name}”","unannotatedFunctionSkipped":"已跳过对函数“{name}”的分析，因为它未被批注","unaryOperationNotAllowed":"类型注释中不允许使用一元运算符","unexpectedAsyncToken":"“def”、“with” 或 “for” 应跟随 “async”","unexpectedExprToken":"表达式末尾出现意外标记","unexpectedIndent":"意外缩进","unexpectedUnindent":"不应取消缩进","unhashableDictKey":"字典密钥必须可哈希","unhashableSetEntry":"设置条目必须是可哈希","uninitializedAbstractVariables":"抽象基类中定义的变量未在最终类“{classType}”中初始化","uninitializedInstanceVariable":"未在类体或__init__方法中初始化实例变量“{name}”","unionForwardReferenceNotAllowed":"联合语法不能与字符串操作数一起使用;在整个表达式周围使用引号","unionSyntaxIllegal":"联合的替代语法需要 Python 3.10 或更高版本","unionTypeArgCount":"联合需要两个或更多类型参数","unionUnpackedTuple":"并集不能包含未打包的元组","unionUnpackedTypeVarTuple":"并集不能包含未打包的 TypeVarTuple","unnecessaryCast":"不必要的 \\"cast\\" 调用；类型已为“{type}”","unnecessaryIsInstanceAlways":"不必要的 isinstance 调用；“{testType}”始终是“{classType}”的实例","unnecessaryIsSubclassAlways":"不必要的 issubclass 调用；“{testType}”始终是“{classType}”的子类","unnecessaryPyrightIgnore":"不必要的 \\"# pyright: ignore\\" 注释","unnecessaryPyrightIgnoreRule":"不必要的 \\"# pyright: ignore\\"规则: \\"{name}\\"","unnecessaryTypeIgnore":"不必要的 \\"# type: ignore\\" 注释","unpackArgCount":"\\"Unpack\\"后应为单个类型参数","unpackExpectedTypeVarTuple":"需要 TypeVarTuple 或元组作为 Unpack 的类型参数","unpackExpectedTypedDict":"解包的预期 TypedDict 类型参数","unpackIllegalInComprehension":"在理解中不允许解包操作","unpackInAnnotation":"类型批注中不允许解压缩运算符","unpackInDict":"字典中不允许解压缩操作","unpackInSet":"集内不允许解包运算符","unpackNotAllowed":"此上下文中不允许解包","unpackOperatorNotAllowed":"此上下文中不允许解压缩操作","unpackTuplesIllegal":"Python 3.8 之前的元组中不允许解包操作","unpackedArgInTypeArgument":"无法在类型参数列表中使用未打包的参数","unpackedArgWithVariadicParam":"未打包的参数不能用于 TypeVarTuple 参数","unpackedDictArgumentNotMapping":"** 后面的参数表达式必须是具有“str”键类型的映射","unpackedDictSubscriptIllegal":"不允许在下标中使用字典解包运算符","unpackedSubscriptIllegal":"下标中的解包运算符需要 Python 3.11 或更高版本","unpackedTypeVarTupleExpected":"应为未打包的 TypeVarTuple；使用 Unpack[{name1}] 或 *{name2}","unpackedTypedDictArgument":"无法将解压缩的 TypedDict 参数与参数匹配","unreachableCode":"代码无法访问","unreachableExcept":"无法访问 Except 子句，因为已处理异常","unsupportedDunderAllOperation":"不支持对“__all__”执行操作，因此导出的符号列表可能不正确","unusedCallResult":"调用表达式的结果类型为 \\"{type}\\" 且未使用；如果这是有意为之，则分配给变量 “_”","unusedCoroutine":"未使用异步函数调用的结果；使用 “await” 或将结果分配给变量","unusedExpression":"表达式值未使用","varAnnotationIllegal":"变量的类型批注需要 Python 3.6 或更高版本；使用类型注释与以前的版本兼容","variableFinalOverride":"变量\\"{name}\\"被标记为 Final，并替代类\\"{className}\\"中同名的非 Final 变量","variadicTypeArgsTooMany":"类型参数列表最多可以有一个未打包的 TypeVarTuple 或元组","variadicTypeParamTooManyAlias":"类型别名最多可以有一个 TypeVarTuple 类型参数，但收到多个 ({names})","variadicTypeParamTooManyClass":"泛型类最多可以有一个 TypeVarTuple 类型参数，但收到多个 ({names})","walrusIllegal":"运算符 \\":=\\" 需要 Python 3.8 或更高版本","walrusNotAllowed":"此上下文中不允许使用运算符 \\":=\\"，且不带括号","wildcardInFunction":"类或函数中不允许使用通配符导入","wildcardLibraryImport":"不允许从库中导入通配符","wildcardPatternTypePartiallyUnknown":"通配符模式捕获的类型部分未知","wildcardPatternTypeUnknown":"通配符模式捕获的类型未知","yieldFromIllegal":"使用“yield from”需要 Python 3.3 或更高版本","yieldFromOutsideAsync":"异步函数中不允许使用“yield from”","yieldOutsideFunction":"不允许在函数或 lambda 之外使用“yield”","yieldWithinListCompr":"不允许在列表理解中使用“yield”","zeroCaseStatementsFound":"Match 语句必须至少包含一个 case 语句","zeroLengthTupleNotAllowed":"此上下文中不允许使用零长度元组"},"DiagnosticAddendum":{"annotatedNotAllowed":"“已批注”特殊窗体不能与实例和类检查一起使用","argParam":"参数对应于参数“{paramName}”","argParamFunction":"参数对应于函数“{functionName}”中的参数“{paramName}”","argsParamMissing":"参数“*{paramName}”没有相应的参数","argsPositionOnly":"仅位置参数不匹配；应为 {expected}，但收到 {received}","argumentType":"参数类型为“{type}”","argumentTypes":"参数类型:({types})","assignToNone":"无法将类型分配给类型“None”","asyncHelp":"是否表示“async with”?","baseClassIncompatible":"基类“{baseClass}”与类型“{type}”不兼容","baseClassIncompatibleSubclass":"基类“{baseClass}”派生自与类型“{type}”不兼容的“{subclass}”","baseClassOverriddenType":"基类\\"{baseClass}\\"提供被替代的类型\\"{type}\\"","baseClassOverridesType":"基类“{baseClass}”替代类型{type}”","bytesTypePromotions":"将 disableBytesTypePromotions 设置为 false，以启用“bytearray”和“memoryview”的类型提升行为","conditionalRequiresBool":"类型“{operandType}”的方法__bool__返回类型“{boolReturnType}”而不是“bool”","dataClassFieldLocation":"字段声明","dataClassFrozen":"\\"{name}\\"已冻结","dataProtocolUnsupported":"“{name}”是数据协议","descriptorAccessBindingFailed":"无法绑定描述符类“{className}”的方法“{name}”","descriptorAccessCallFailed":"无法为描述符类“{className}”调用方法“{name}”","finalMethod":"Final 方法","functionParamDefaultMissing":"参数“{name}”缺少默认参数","functionParamName":"参数名称不匹配: \\"{destName}\\" versus \\"{srcName}\\"","functionParamPositionOnly":"仅位置参数不匹配; 参数“{name}”并非仅限位置","functionReturnTypeMismatch":"函数返回类型\\"{sourceType}\\"与类型\\"{destType}\\"不兼容","functionTooFewParams":"函数接受的位置参数太少；应为 {expected}，但收到 {received}","functionTooManyParams":"函数接受太多位置参数；应为 {expected}，但收到 {received}","genericClassNotAllowed":"不允许对实例或类检查使用具有类型参数的泛型类型","incompatibleDeleter":"属性deleter 方法不兼容","incompatibleGetter":"属性 getter 方法不兼容","incompatibleSetter":"属性 setter 方法不兼容","initMethodLocation":"__init__方法已在类“{type}”中定义","initMethodSignature":"__init__的签名为“{type}”","initSubclassLocation":"__init_subclass__ 方法在类“{name}”中定义","invariantSuggestionDict":"请考虑从 “dict” 切换到 “Mapping”(在值类型中为协变)","invariantSuggestionList":"考虑从“list”切换到“Sequence”(协变)","invariantSuggestionSet":"请考虑从“set”切换到“Container”，后者是协变的","keyNotRequired":"“{type}”中“{name}”不是必需的密钥，因此访问可能会导致运行时异常","keyReadOnly":"“{name}”是“{type}”中的只读密钥","keyRequiredDeleted":"“{name}”是必需的密钥，无法删除","keyUndefined":"“{name}”不是“{type}”中定义的密钥","kwargsParamMissing":"参数“**{paramName}”没有相应的参数","listAssignmentMismatch":"类型“{type}”与目标列表不兼容","literalAssignmentMismatch":"无法将“{sourceType}”分配给类型“{destType}”","matchIsNotExhaustiveHint":"如果未进行详尽处理，请添加\\"case _: pass\\"","matchIsNotExhaustiveType":"未处理的类型: \\"{type}\\"","memberAssignment":"无法将\\"{type}\\"类型的表达式分配给类\\"{classType}\\"的成员\\"{name}\\"","memberIsAbstract":"未实现“{type}.{name}”","memberIsAbstractMore":"还有 {count} 个...","memberIsClassVarInProtocol":"“{name}”在协议中定义为 ClassVar","memberIsFinalInProtocol":"\\"{name}\\"在协议中标记为 Final","memberIsInitVar":"成员“{name}”是仅初始字段","memberIsInvariant":"“{name}”是固定的，因为它是可变的","memberIsNotClassVarInClass":"“{name}”必须定义为 ClassVar 才能与协议兼容","memberIsNotClassVarInProtocol":"“{name}”未在协议中定义为 ClassVar","memberIsNotFinalInProtocol":"“{name}”未在协议中标记为 Final","memberIsWritableInProtocol":"“{name}”在协议中是可写入的","memberSetClassVar":"无法通过类实例分配成员“{name}”，因为它是 ClassVar","memberTypeMismatch":"\\"{name}\\"是不兼容的类型","memberUnknown":"成员\\"{name}\\"未知","metaclassConflict":"元类“{metaclass1}”与“{metaclass2}”存在冲突","missingDeleter":"缺少属性 deleter方法","missingGetter":"缺少属性 getter 方法","missingSetter":"缺少属性 setter 方法","namedParamMissingInDest":"源中缺少关键字参数 \\"{name}\\"","namedParamMissingInSource":"源中缺少关键字参数“{name}”","namedParamTypeMismatch":"无法将\\"{sourceType}\\"类型的关键字参数\\"{name}\\"分配给类型\\"{destType}\\"","namedTupleNotAllowed":"不能对实例或类检查使用 NamedTuple","newMethodLocation":"__new__方法已在类“{type}”中定义","newMethodSignature":"__new__的签名为“{type}”","newTypeClassNotAllowed":"不能将使用 NewType 创建的类用于实例和类检查","noOverloadAssignable":"没有重载函数与类型“{type}”匹配","noneNotAllowed":"不能对实例或类检查使用 None","orPatternMissingName":"缺少名称: {name}","overloadIndex":"重载 {index} 是最接近的匹配项","overloadNotAssignable":"无法分配“{name}”的一个或多个重载","overloadSignature":"此处定义了重载签名","overriddenMethod":"替代的方法","overriddenSymbol":"替代符号","overrideInvariantMismatch":"替代类型“{overrideType}”与基类型“{baseType}”不同","overrideIsInvariant":"变量是可变的，因此其类型是固定的","overrideNoOverloadMatches":"替代中没有与基本方法兼容的重载签名","overrideNotClassMethod":"基方法声明为 classmethod，但替代不是","overrideNotInstanceMethod":"基方法声明为实例方法，但替代不是","overrideNotStaticMethod":"基方法声明为 staticmethod，但替代不是","overrideOverloadNoMatch":"替代不处理基方法的所有重载","overrideOverloadOrder":"替代方法的重载必须与基方法的顺序相同","overrideParamKeywordNoDefault":"关键字参数\\"{name}\\"不匹配: 基参数具有默认参数值，替代参数不匹配","overrideParamKeywordType":"关键字参数“{name}”类型不匹配: 基参数是类型“{baseType}”，替代参数为类型“{overrideType}”","overrideParamName":"参数{index}名称不匹配: 基参数命名为 \\"{baseName}\\"，替代参数命名为 \\"{overrideName}\\"","overrideParamNameExtra":"基数中缺少参数“{name}”","overrideParamNameMissing":"替代中缺少参数“{name}”","overrideParamNamePositionOnly":"参数 {index} 不匹配: 基参数“{baseName}”是关键字参数，替代参数为仅位置参数","overrideParamNoDefault":"参数 {index} 不匹配: 基参数具有默认参数值，替代参数不匹配","overrideParamType":"参数 {index} 类型不匹配: 基参数为类型“{baseType}”，替代参数为类型“{overrideType}”","overridePositionalParamCount":"位置参数计数不匹配；基方法具有 {baseCount}，但替代具有 {overrideCount}","overrideReturnType":"返回类型不匹配:基方法返回类型\\"{baseType}\\"，替代返回类型\\"{overrideType}\\"","overrideType":"基类将类型定义为\\"{type}\\"","paramAssignment":"参数 {index}: 无法将类型“{sourceType}”分配给类型“{destType}”","paramSpecMissingInOverride":"替代方法中缺少 ParamSpec 参数","paramType":"参数类型为“{paramType}”","privateImportFromPyTypedSource":"改为从\\"{module}\\"导入","propertyAccessFromProtocolClass":"不能以类变量形式存取协议类中定义的属性","propertyMethodIncompatible":"属性方法\\"{name}\\"不兼容","propertyMethodMissing":"替代中缺少属性方法“{name}”","propertyMissingDeleter":"属性“{name}”没有定义的删除程序","propertyMissingSetter":"属性“{name}”没有定义的资源库","protocolIncompatible":"“{sourceType}”与协议“{destType}”不兼容","protocolMemberMissing":"“{name}”不存在","protocolRequiresRuntimeCheckable":"协议类必须为 @runtime_checkable 才能用于实例和类检查","protocolSourceIsNotConcrete":"“{sourceType}”不是具体类类型，无法分配给类型“{destType}”","protocolUnsafeOverlap":"“{name}”的属性与协议具有相同的名称","pyrightCommentIgnoreTip":"使用 \\"# pyright: ignore[<diagnostic rules>] 取消单行诊断","readOnlyAttribute":"属性“{name}”为只读","seeClassDeclaration":"查看类声明","seeDeclaration":"参见声明","seeFunctionDeclaration":"请参阅函数声明","seeMethodDeclaration":"请参阅方法声明","seeParameterDeclaration":"请参阅参数声明","seeTypeAliasDeclaration":"请参阅类型别名声明","seeVariableDeclaration":"查看变量声明","tupleAssignmentMismatch":"类型\\"{type}\\"与目标元组不兼容","tupleEntryTypeMismatch":"元组条目 {entry} 的类型不正确","tupleSizeIndeterminateSrc":"元组大小不匹配；应为 {expected}，但收到不确定的","tupleSizeIndeterminateSrcDest":"元组大小不匹配；应为 {expected} 或更多，但收到不确定的值","tupleSizeMismatch":"元组大小不匹配；应为 {expected}，但收到 {received}","tupleSizeMismatchIndeterminateDest":"元组大小不匹配；应为 {expected} 或更多，但收到 {received}","typeAliasInstanceCheck":"使用 \\"type\\" 语句创建的类型别名不能与实例和类检查一起使用","typeAssignmentMismatch":"无法将类型“{sourceType}”分配给类型“{destType}”","typeBound":"类型\\"{sourceType}\\"与类型变量\\"{destType}\\"的绑定类型\\"{name}\\"不兼容","typeConstrainedTypeVar":"类型\\"{type}\\"与受约束的类型变量\\"{name}\\"不兼容","typeIncompatible":"“{sourceType}”与“{destType}”不兼容","typeNotClass":"“{type}”不是类","typeNotStringLiteral":"“{type}”不是字符串文本","typeOfSymbol":"“{name}”的类型为“{type}”","typeParamSpec":"类型“{type}”与 ParamSpec“{name}”不兼容","typeUnsupported":"类型“{type}”不受支持","typeVarDefaultOutOfScope":"类型变量“{name}”不在范围内","typeVarIsContravariant":"类型参数 \\"{name}\\" 是逆变的，但 \\"{sourceType}\\" 不是 \\"{destType}\\" 的超类型","typeVarIsCovariant":"类型参数 \\"{name}\\" 是协变的，但 \\"{sourceType}\\" 不是 \\"{destType}\\" 的子类型","typeVarIsInvariant":"类型参数 \\"{name}\\" 是固定的，但 \\"{sourceType}\\" 与 \\"{destType}\\" 不同","typeVarNotAllowed":"不允许对实例或类检查使用 TypeVar","typeVarTupleRequiresKnownLength":"TypeVarTuple 不能绑定到长度未知的元组","typeVarUnnecessarySuggestion":"请改用 {type}","typeVarUnsolvableRemedy":"提供一个重载，该重载指定未提供参数时的返回类型","typeVarsMissing":"缺少类型变量: {names}","typedDictBaseClass":"类“{type}”不是 TypedDict","typedDictClassNotAllowed":"不允许对实例或类检查使用 TypedDict 类","typedDictClosedExtraNotAllowed":"无法添加项“{name}”","typedDictClosedExtraTypeMismatch":"无法添加类型为“{type}”的项“{name}”","typedDictClosedFieldNotRequired":"无法添加项“{name}”，因为它必须是 NotRequired","typedDictExtraFieldNotAllowed":"“{type}”中不存在“{name}”","typedDictExtraFieldTypeMismatch":"“{name}”的类型与“{type}”中的 “__extra_items__” 类型不兼容","typedDictFieldMissing":"\\"{type}\\"中缺少\\"{name}\\"","typedDictFieldNotReadOnly":"\\"{name}\\"在\\"{type}\\"中不是只读的","typedDictFieldNotRequired":"“{type}”中不需要“{name}”","typedDictFieldRequired":"\\"{type}\\"中需要\\"{name}\\"","typedDictFieldTypeMismatch":"类型“{type}”不可分配给项“{name}”","typedDictFieldUndefined":"“{name}”是类型“{type}”中的未定义项","typedDictFinalMismatch":"\\"{sourceType}\\"与\\"{destType}\\"不兼容，因为@final不匹配","typedDictKeyAccess":"使用 [\\"{name}\\"] 引用 TypedDict 中的项","typedDictNotAllowed":"不能对实例或类检查使用 TypedDict","unhashableType":"类型“{type}”不可哈希","uninitializedAbstractVariable":"实例变量“{name}”在抽象基类“{classType}”中定义，但未初始化","unreachableExcept":"“{exceptionType}”是“{parentType}”的子类","useDictInstead":"使用 Dict[T1, T2] 指示字典类型","useListInstead":"使用 List[T] 指示列表类型或 Union[T1, T2] 以指示联合类型","useTupleInstead":"使用 tuple[T1, ..., Tn] 指示元组类型或使用 Union[T1, T2] 指示联合类型","useTypeInstead":"改用类型[T]","varianceMismatchForClass":"类型参数\\"{typeVarName}\\"的差异与基类\\"{className}\\"不兼容","varianceMismatchForTypeAlias":"类型参数\\"{typeVarName}\\"的差异与\\"{typeAliasParam}\\"不兼容"}}')},25392:e=>{e.exports=JSON.parse('{"CodeAction":{"createTypeStub":"建立類型虛設常式","createTypeStubFor":"建立 \\"{moduleName}\\" 的類型虛設常式","executingCommand":"執行命令","filesToAnalyzeCount":"要分析的 {count} 個檔案","filesToAnalyzeOne":"1 個要分析的檔案","findingReferences":"尋找參考","organizeImports":"整理匯入","renameShadowedFile":"將 \\"{oldFile}\\" 重新命名為 \\"{newFile}\\""},"Completion":{"autoImportDetail":"自動匯入","indexValueDetail":"索引值"},"Diagnostic":{"abstractMethodInvocation":"無法呼叫方法 \\"{method}\\"，因為它是抽象且未執行","annotatedParamCountMismatch":"參數註釋計數不符: 應為 {expected}，但收到 {received}","annotatedTypeArgMissing":"預期 \\"Annotated\\" 有一個類型引數和一或多個註釋","annotationBytesString":"Type annotations cannot use bytes string literals","annotationFormatString":"類型註釋不能使用格式字串常值 (f-strings)","annotationNotSupported":"此陳述式不支援類型註釋","annotationRawString":"Type annotations cannot use raw string literals","annotationSpansStrings":"型別註釋無法跨越多個字串常值","annotationStringEscape":"型別註釋不可包含逸出字元","argAssignment":"類型 \\"{argType}\\" 的引數不能指派至類型 \\"{paramType}\\" 的參數","argAssignmentFunction":"類型 \\"{argType}\\" 的引數不能指派至函式 \\"{functionName}\\" 中類型 \\"{paramType}\\" 的參數","argAssignmentParam":"類型 \\"{argType}\\" 的引數不能指派至類型 \\"{paramType}\\" 的參數 \\"{paramName}\\"","argAssignmentParamFunction":"類型 \\"{argType}\\" 的引數不能指派至函式 \\"{functionName}\\" 中類型 \\"{paramType}\\" 的參數 \\"{paramName}\\"","argMissingForParam":"參數 {name} 遺漏引數","argMissingForParams":"參數 {names} 的引數遺失","argMorePositionalExpectedCount":"預期有另 {expected} 個位置引數","argMorePositionalExpectedOne":"預期有另 1 個位置引數","argPositional":"預期為位置引數","argPositionalExpectedCount":"預期有 {expected} 個位置引數","argPositionalExpectedOne":"預期為 1 個位置引數","argTypePartiallyUnknown":"引數型別為部分未知","argTypeUnknown":"引數類型未知","assertAlwaysTrue":"Assert 運算式一律會評估為 true","assertTypeArgs":"\\"assert_type\\" 需要兩個位置引數","assertTypeTypeMismatch":"\\"assert_type\\" 不符: 預期為 \\"{expected}\\"，但收到 \\"{received}\\"","assignmentExprComprehension":"指派運算式目標 \\"{name}\\" 不能使用與目標 comprehension 相同的名稱","assignmentExprContext":"Assignment 運算式必須在模組、函式或 Lambda 內","assignmentExprInSubscript":"下標內的 Assignment 運算式僅在 Python 3.10 和更新版本中支援","assignmentInProtocol":"必須在類別主體內明確宣告通訊協定類別內的執行個體或類別變數","assignmentTargetExpr":"運算式不能是指派目標","asyncNotInAsyncFunction":"不允許在非同步函式之外使用 \\"async\\"","awaitIllegal":"使用 \\"await\\" 需要 Python 3.5 或更新版本","awaitNotAllowed":"類型註釋不能使用 “await”","awaitNotInAsync":"只在非同步函式內允許 \\"await\\"","backticksIllegal":"Python 3.x 中不支援以反引號括住的運算式; 請改為使用 repr","baseClassCircular":"類別無法從本身衍生","baseClassFinal":"基底類別 \\"{type}\\" 標示為 Final，且不能設為子類別","baseClassIncompatible":"{type} 的基底類別互不相容","baseClassInvalid":"類別的引數必須是基底類別","baseClassMethodTypeIncompatible":"類別 \\"{classType}\\" 的基底類別以不相容的方式定義方法 \\"{name}\\"","baseClassUnknown":"基底類別類型未知，遮蔽衍生類別的類型","baseClassVariableTypeIncompatible":"類別 \\"{classType}\\" 的基底類別以不相容的方式定義變數 \\"{name}\\"","binaryOperationNotAllowed":"類型註釋中不允許二元運算子","bindTypeMismatch":"無法繫結方法 \\"{methodName}\\"，因為 \\"{type}\\" 無法指派給參數 \\"{paramName}\\"","breakOutsideLoop":"\\"break\\" 只能在迴圈內使用","callableExtraArgs":"預期 \\"Callable\\" 只有兩個類型引數","callableFirstArg":"預期為參數類型清單或 \\"...\\"","callableNotInstantiable":"不能具現化類型 \\"{type}\\"","callableSecondArg":"預期為傳回類型作為 \\"Callable\\" 的第二個類型引數","casePatternIsIrrefutable":"僅允許最後一個案例陳述式使用無法推翻的模式","classAlreadySpecialized":"類型 \\"{type}\\" 已特殊化","classDecoratorTypeUnknown":"不具型別的類別裝飾項目會掩蓋類別的型別; 略過裝飾項目","classDefinitionCycle":"\\"{name}\\" 的類別定義視其本身而定","classGetItemClsParam":"__class_getitem__ 覆寫應接受 \\"cls\\" 參數","classMethodClsParam":"類別方法應採用 \\"cls\\" 參數","classNotRuntimeSubscriptable":"類別 \\"{name}\\" 的下標會產生執行階段例外; 以引號括住類型註釋","classPatternBuiltInArgPositional":"類別模式僅接受位置子模式","classPatternPositionalArgCount":"類別 \\"{type}\\" 的位置模式太多;預期 {expected} 但收到 {received}","classPatternTypeAlias":"無法在類別模式中使用 \\"{type}\\"，因為它是特殊的型別別名","classPropertyDeprecated":"類別屬性在 Python 3.11 中已取代，在 Python 3.13 中將不受支援","classTypeParametersIllegal":"類別類型參數語法需要 Python 3.12 或更新版本","classVarFirstArgMissing":"\\"ClassVar\\" 後面應有一個型別引數","classVarNotAllowed":"此內容中不允許 \\"ClassVar\\"","classVarOverridesInstanceVar":"類別變數 \\"{name}\\" 會覆寫類別 \\"{className}\\" 中相同名稱的執行個體變數","classVarTooManyArgs":"\\"ClassVar\\" 後面應只能有一個型別引數","classVarWithTypeVar":"\\"ClassVar\\" 型別不能包含型別變數","clsSelfParamTypeMismatch":"參數 \\"{name}\\" 的型別必須是其類別 \\"{classType}\\" 的超級型別","codeTooComplexToAnalyze":"程式碼太複雜而無法分析; 重構為副常式或減少條件式程式碼路徑，以降低複雜性","collectionAliasInstantiation":"無法將型別 \\"{type}\\" 具現化，請改用 \\"{alias}\\"","comparisonAlwaysFalse":"條件一律會評估為 False，因為類型 \\"{leftType}\\" 和 \\"{rightType}\\" 沒有重疊","comparisonAlwaysTrue":"條件一律會評估為 True，因為類型 \\"{leftType}\\" 和 \\"{rightType}\\" 沒有重疊","comprehensionInDict":"理解不能與其他字典項目搭配使用","comprehensionInSet":"Comprehension 無法與其他集合輸入項目一起使用","concatenateContext":"此內容中不允許 \\"Concatenate\\"","concatenateParamSpecMissing":"\\"Concatenate\\" 的最後一個類型引數必須是 ParamSpec 或 \\"...\\"","concatenateTypeArgsMissing":"\\"Concatenate\\" 至少需要兩個型別引數","conditionalOperandInvalid":"型別 \\"{type}\\" 的條件運算元無效","constantRedefinition":"\\"{name}\\" 是常數 (因為它是大寫) 且無法重新定義","constructorNoArgs":"預期 \\"{type}\\" 建構函式沒有引數","constructorParametersMismatch":"類別 \\"{classType}\\" 中__new__與__init__的簽章不相符","containmentAlwaysFalse":"運算式一律會評估為 False，因為型別 \\"{leftType}\\" 和 \\"{rightType}\\" 沒有重疊","containmentAlwaysTrue":"運算式一律會評估為 True，因為型別 \\"{leftType}\\" 和 \\"{rightType}\\" 沒有重疊","continueInFinally":"\\"continue\\" 不能在 finally 子句內使用","continueOutsideLoop":"\\"continue\\" 只能在 loop 內使用","coroutineInConditionalExpression":"條件運算式參考協同程式，一律評估為 True","dataClassBaseClassFrozen":"未凍結的類別無法繼承已凍結的類別","dataClassBaseClassNotFrozen":"凍結的類別不能從未凍結的類別繼承","dataClassConverterFunction":"類型 \\"{argType}\\" 的引數不是類型 \\"{fieldType}\\" 欄位 \\"{fieldName}\\" 的有效轉換程式","dataClassConverterOverloads":"\\"{funcName}\\" 沒有任何多載是類型 \\"{fieldType}\\" 欄位 \\"{fieldName}\\" 的有效轉換程式","dataClassFieldWithDefault":"沒有預設值的欄位無法出現在具有預設值的欄位後面","dataClassFieldWithPrivateName":"Dataclass 欄位不能使用私人名稱","dataClassFieldWithoutAnnotation":"沒有型別註釋的 Dataclass 欄位會造成執行階段例外狀況","dataClassPostInitParamCount":"Dataclass __post_init__ 不正確的參數計數; InitVar 欄位數目為 {expected}","dataClassPostInitType":"欄位 \\"{fieldName}\\" 的 Dataclass __post_init__ 方法參數類型不符","dataClassSlotsOverwrite":"__slots__已定義在類別中","dataClassTransformExpectedBoolLiteral":"應為靜態評估為 True 或 False 的運算式","dataClassTransformFieldSpecifier":"應為類別或函式的元組，但收到的型別為 \\"{type}\\"","dataClassTransformPositionalParam":"\\"dataclass_transform\\" 的所有引數都必須是關鍵字引數","dataClassTransformUnknownArgument":"dataclass_transform 不支援引數 \\"{name}\\"","dataProtocolInSubclassCheck":"issubclass 呼叫中不允許資料通訊協定 (包含非方法屬性)","declaredReturnTypePartiallyUnknown":"宣告的傳回類型 \\"{returnType}\\" 部分未知","declaredReturnTypeUnknown":"宣告的傳回類型未知","defaultValueContainsCall":"參數預設值運算式內不允許函式呼叫和可變物件","defaultValueNotAllowed":"具有 \\"*\\" 或 \\"**\\" 的參數不能有預設值","delTargetExpr":"無法刪除運算式","deprecatedClass":"類別 \\"{name}\\" 已淘汰","deprecatedConstructor":"類別 \\"{name}\\" 的建構函式已取代","deprecatedDescriptorDeleter":"描述項 \\"{name}\\" 的 \\"__delete__\\" 方法已被取代","deprecatedDescriptorGetter":"描述項 \\"{name}\\" 的 \\"__get__\\" 方法已被取代","deprecatedDescriptorSetter":"描述項 \\"{name}\\" 的 \\"__set__\\" 方法已被取代","deprecatedFunction":"函式 \\"{name}\\" 已取代","deprecatedMethod":"類別 \\"{className}\\" 中的方法 \\"{name}\\" 已取代","deprecatedPropertyDeleter":"屬性 \\"{name}\\" 的 deleter 已被取代","deprecatedPropertyGetter":"屬性 \\"{name}\\" 的 getter 已被取代","deprecatedPropertySetter":"屬性 \\"{name}\\" 的 setter 已被取代","deprecatedType":"此類型已隨著 Python {version} 取代; 請改為使用 \\"{replacement}\\"","dictExpandIllegalInComprehension":"理解中不允許字典擴充","dictInAnnotation":"類型註釋中不允許字典運算式","dictKeyValuePairs":"字典項目必須包含金鑰/值組","dictUnpackIsNotMapping":"預期為字典解壓縮運算子的對應","dunderAllSymbolNotPresent":"\\"{name}\\" 已在 __all__ 中指定，但在模組中不存在","duplicateArgsParam":"只允許一個 \\"*\\" 參數","duplicateBaseClass":"不允許重複的基底類別","duplicateCapturePatternTarget":"擷取目標 \\"{name}\\" 不能在相同模式中出現一次以上","duplicateCatchAll":"只允許一個 catch-all 例外子句","duplicateEnumMember":"已宣告列舉成員 \\"{name}\\"","duplicateGenericAndProtocolBase":"只允許一個 Generic[...] 或 Protocol[...] 基底類別","duplicateImport":"\\"{importName}\\" 已匯入多次","duplicateKeywordOnly":"只允許一個 \\"*\\" 分隔符號","duplicateKwargsParam":"只允許一個 \\"**\\" 參數","duplicateParam":"重複的參數 \\"{name}\\"","duplicatePositionOnly":"僅允許一個 \\"/\\" 參數","duplicateStarPattern":"模式序列中僅允許一個 \\"*\\" 模式","duplicateStarStarPattern":"僅允許輸入一個 \\"**\\"","duplicateUnpack":"清單中僅允許一個解除封裝作業","ellipsisAfterUnpacked":"\\"...\\" 不能與解壓縮的 TypeVarTuple 或 tuple 一起使用","ellipsisContext":"此內容中不允許 \\"...\\"","ellipsisSecondArg":"\\"...\\" 只允許做為兩個引數的第二個","enumClassOverride":"列舉類別 \\"{name}\\" 為 Final，且不能設為子類別","exceptionGroupIncompatible":"例外群組語法 (\\"except*\\") 需要 Python 3.11 或更新版本","exceptionTypeIncorrect":"\\"{type}\\" 不是衍生自 BaseException","exceptionTypeNotClass":"\\"{type}\\" 不是有效的例外類別","exceptionTypeNotInstantiable":"例外類型 \\"{type}\\" 的建構函式需要一或多個引數","expectedAfterDecorator":"裝飾項目後面應有函式或類別宣告","expectedArrow":"預期為 \\"->\\"，後面接著傳回類型註釋","expectedAsAfterException":"例外狀況型別後面應有 \\"as\\"","expectedAssignRightHandExpr":"\\"=\\" 右側預期為運算式","expectedBinaryRightHandExpr":"運算子右側預期為運算式","expectedBoolLiteral":"應為 True 或 False","expectedCase":"預期為 \\"case\\" 陳述式","expectedClassName":"預期為類別名稱","expectedCloseBrace":"\\"{\\" 未關閉","expectedCloseBracket":"\\"[\\" 未關閉","expectedCloseParen":"\\"(\\" 未關閉","expectedColon":"預期為 \\":\\"","expectedComplexNumberLiteral":"模式比對預期為複數常值","expectedDecoratorExpr":"Python 3.9 之前的裝飾項目不支援運算式格式","expectedDecoratorName":"預期為裝飾項目名稱","expectedDecoratorNewline":"預期裝飾項目結尾為換行符號","expectedDelExpr":"\\"del\\" 後預期為運算式","expectedElse":"預期為 \\"else\\"","expectedEquals":"預期為 \\"=\\"","expectedExceptionClass":"不正確的例外狀況類別或物件","expectedExceptionObj":"預期為例外物件、例外類別或 None","expectedExpr":"應為運算式","expectedFunctionAfterAsync":"\\"async\\" 後面應有函式定義","expectedFunctionName":"\\"def\\" 後預期為函式名稱","expectedIdentifier":"應為識別碼","expectedImport":"預期為 \\"import\\"","expectedImportAlias":"\\"as\\" 之後預期為符號","expectedImportSymbols":"預期匯入後為一或多個符號名稱","expectedIn":"預期為 \\"in\\"","expectedInExpr":"\\"in\\" 後預期為運算式","expectedIndentedBlock":"預期為縮排區塊","expectedMemberName":"\\".\\" 後預期為成員名稱。","expectedModuleName":"應為模組名稱","expectedNameAfterAs":"\\"as\\" 後面應有符號名稱","expectedNamedParameter":"關鍵字參數必須接著 \\"*\\"","expectedNewline":"預期為換行符號","expectedNewlineOrSemicolon":"陳述式必須以換行符號或分號分隔","expectedOpenParen":"應為 \\"(\\"","expectedParamName":"預期為參數名稱","expectedPatternExpr":"預期為模式運算式","expectedPatternSubjectExpr":"應為模式主體運算式","expectedPatternValue":"預期為格式 \\"a.b\\" 的模式值運算式","expectedReturnExpr":"\\"return\\" 後預期為運算式","expectedSliceIndex":"應為索引或切片運算式","expectedTypeNotString":"預期為類型，但收到字串常值","expectedTypeParameterName":"應為型別參數名稱","expectedYieldExpr":"yield 陳述式中應有運算式","finalClassIsAbstract":"類別 \\"{type}\\" 標示為 Final，且必須實作所有抽象符號","finalContext":"此內容中不允許 \\"Final\\"","finalMethodOverride":"方法 \\"{name}\\" 不能覆寫類別 \\"{className}\\" 中定義的 Final 方法","finalNonMethod":"無法將函式 \\"{name}\\" 標示為 @final，因為它不是方法","finalReassigned":"\\"{name}\\" 已宣告為 Final，因此無法重新指派","finalRedeclaration":"\\"{name}\\" 先前已宣告為 Final","finalRedeclarationBySubclass":"不能重新宣告 \\"{name}\\"，因為父類別 \\"{className}\\" 將其宣告為 Final","finalTooManyArgs":"預期 \\"Final\\" 之後為單一類型引數","finalUnassigned":"\\"{name}\\" 宣告為 Final，但未指派值","formatStringBrace":"F 字串常值內不允許單一右大括弧; 請使用雙右大括弧","formatStringBytes":"格式字串常值 (f-strings) 不可為二進位","formatStringDebuggingIllegal":"F 字串偵錯指定名稱 \\"=\\" 需要 Python 3.8 或較新的版本","formatStringEscape":"Python 3.12 之前的 f 字串運算式部分不允許逸出序列 (反斜線)","formatStringExpectedConversion":"預期 f-string 中的 \\"!\\" 後為轉換指定元","formatStringIllegal":"格式字串常值 (f-strings) 需要 Python 3.6 或較新的版本","formatStringInPattern":"模式中不允許格式字串","formatStringNestedFormatSpecifier":"運算式在格式字串指定元內巢狀太深","formatStringNestedQuote":"f 字串內的巢狀字串無法使用與 Python 3.12 之前的 f 字串相同的引號字元","formatStringUnicode":"格式字串常值 (f-strings) 不能是 Unicode","formatStringUnterminated":"f 字串中有未結束的運算式; 應有 \\"}\\"","functionDecoratorTypeUnknown":"非類型化函式修飾項目會遮蔽函式的類型; 忽略裝飾項目","functionInConditionalExpression":"條件運算式參考函式，一律評估為 True","functionTypeParametersIllegal":"函式型別參數語法需要 Python 3.12 或較新的版本","futureImportLocationNotAllowed":"來自 __future__ 的匯入必須位於檔案的開頭","generatorAsyncReturnType":"非同步產生器函式的傳回類型必須與 \\"AsyncGenerator[{yieldType}, Any]\\" 相容","generatorNotParenthesized":"如果不是唯一引數，則必須將產生器運算式用括弧括住","generatorSyncReturnType":"產生器函式的傳回類型必須與 \\"Generator[{yieldType}, Any, Any]\\" 相容","genericBaseClassNotAllowed":"\\"Generic\\" 基底類別不能與型別參數語法一起使用","genericClassAssigned":"不能指派一般類別類型","genericClassDeleted":"無法刪除一般類別型別","genericInstanceVariableAccess":"透過類別存取泛型執行個體變數不明確","genericNotAllowed":"\\"Generic\\" 在此內容中無效","genericTypeAliasBoundTypeVar":"類別內的一般類型別名不能使用繫結類型變數 {names}","genericTypeArgMissing":"\\"Generic\\" 至少需要一個類型引數","genericTypeArgTypeVar":"\\"Generic\\" 的類型引數必須是類型變數","genericTypeArgUnique":"\\"Generic\\" 的類型引數必須是唯一的","globalReassignment":"\\"{name}\\" 在 global 宣告之前指派","globalRedefinition":"\\"{name}\\" 已宣告為 global","implicitStringConcat":"不允許隱含字串串連","importCycleDetected":"在匯入鏈結中偵測到迴圈","importDepthExceeded":"匯入鏈結深度超過 {depth}","importResolveFailure":"無法解析匯入 \\"{importName}\\"","importSourceResolveFailure":"無法從來源解析匯入 \\"{importName}\\"","importSymbolUnknown":"\\"{name}\\" 是未知的匯入符號","incompatibleMethodOverride":"方法 \\"{name}\\" 會以不相容的方式覆寫類別 \\"{className}\\"","inconsistentIndent":"取消縮排量與先前縮排不符","inconsistentTabs":"在縮排中使用 Tab 字元和空格不一致","initMustReturnNone":"\\"__init__\\" 的傳回類型必須為 None","initSubclassCallFailed":"__init_subclass__ 方法不正確的關鍵字引數","initSubclassClsParam":"__init_subclass__ 覆寫應接受 \\"cls\\" 參數","initVarNotAllowed":"此內容中不允許 \\"InitVar\\"","instanceMethodSelfParam":"執行個體方法應該採用 \\"self\\" 參數","instanceVarOverridesClassVar":"執行個體變數 \\"{name}\\" 覆寫類別 \\"{className}\\" 中相同名稱的類別變數","instantiateAbstract":"無法將抽象類別 \\"{type}\\" 具現化","instantiateProtocol":"無法將通訊協定類別 \\"{type}\\" 具現化","internalBindError":"繫結檔案 \\"{file}\\" 時發生內部錯誤: {message}","internalParseError":"剖析檔案 \\"{file}\\" 時發生內部錯誤: {message}","internalTypeCheckingError":"類型檢查檔案 \\"{file}\\" 時發生內部錯誤: {message}","invalidIdentifierChar":"識別碼中的字元無效","invalidStubStatement":"陳述式在類型虛設常式檔案內沒有意義","invalidTokenChars":"權杖中的字元 \\"{text}\\" 無效","isInstanceInvalidType":"\\"isinstance\\" 的第二個引數必須是類別或類別的元組","isSubclassInvalidType":"\\"issubclass\\" 的第二個引數必須是類別的類別或 Tuple","keyValueInSet":"組合內不允許金鑰/值組","keywordArgInTypeArgument":"關鍵字引數無法用於型別引數清單","keywordOnlyAfterArgs":"\\"*\\" 參數之後不允許僅限關鍵字的引數分隔符號","keywordParameterMissing":"一或多個關鍵字參數必須接在 \\"*\\" 參數後面","keywordSubscriptIllegal":"不支援下標內的關鍵字引數","lambdaReturnTypePartiallyUnknown":"Lambda 的傳回類型 \\"{returnType}\\" 部分未知","lambdaReturnTypeUnknown":"Lambda 的傳回類型未知","listAssignmentMismatch":"類型 \\"{type}\\" 的運算式不能指派至目標清單","listInAnnotation":"類型註釋中不允許清單運算式","literalEmptyArgs":"\\"Literal\\" 後面應有一或多個型別引數","literalNamedUnicodeEscape":"Named unicode escape sequences are not supported in \\"Literal\\" string annotations","literalNotAllowed":"沒有類型參數，\\"Literal\\" 不能在此內容中使用","literalNotCallable":"常值類型不能具現化","literalUnsupportedType":"\\"Literal\\" 的類型引數必須是 None、常值 (int、bool、str 或 bytes) 或列舉值","matchIncompatible":"比對陳述式需要 Python 3.10 或更新版本","matchIsNotExhaustive":"match 陳述式內的案例並未完整處理所有值","maxParseDepthExceeded":"超過剖析深度上限; 將運算式分成較小的子運算式","memberAccess":"不能存取類型 \\"{type}\\" 的成員 \\"{name}\\"","memberDelete":"不能刪除類型 \\"{type}\\" 的成員 \\"{name}\\"","memberSet":"無法指派型別 \\"{type}\\" 的成員 \\"{name}\\"","metaclassConflict":"衍生類別的變換類型必須是其所有基底類別的變換類型的子類別","metaclassDuplicate":"只能提供一個變換類型","metaclassIsGeneric":"變換類型不能是一般","methodNotDefined":"\\"{name}\\" 方法未定義","methodNotDefinedOnType":"類型 \\"{type}\\" 上未定義 \\"{name}\\" 方法","methodOrdering":"不能建立一致的方法順序","methodOverridden":"\\"{name}\\" 以不相容型別 \\"{type}\\" 覆寫類別 \\"{className}\\" 中具有相同名稱的方法","methodReturnsNonObject":"\\"{name}\\" 方法未傳回物件","missingSuperCall":"方法 \\"{methodName}\\" 未呼叫父類別中相同名稱的方法","moduleAsType":"模組不能當作型別來使用","moduleNotCallable":"模組無法呼叫","moduleUnknownMember":"\\"{memberName}\\" 不是模組 \\"{moduleName}\\" 的已知成員","namedExceptAfterCatchAll":"catch-all except 子句後面不能出現具名 except 子句","namedParamAfterParamSpecArgs":"關鍵字參數 \\"{name}\\" 不能在簽章中出現在 ParamSpec args 參數之後","namedTupleEmptyName":"具名元組內的名稱不可為空白","namedTupleEntryRedeclared":"無法覆寫 \\"{name}\\"，因為父代類別 \\"{className}\\" 是具名的 Tuple","namedTupleFirstArg":"預期為具名 Tuple 類別名稱作為第一個引數","namedTupleMultipleInheritance":"不支援使用 NamedTuple 的多重繼承","namedTupleNameKeyword":"欄位名稱不能是關鍵字","namedTupleNameType":"指定項目名稱和類型預期有兩個項目 Tuple","namedTupleNameUnique":"具名 Tuple 內的名稱必須是唯一的","namedTupleNoTypes":"\\"namedtuple\\" 未提供 Tuple 項目的類型; 請改為使用 \\"NamedTuple\\"","namedTupleSecondArg":"預期為具名 Tuple 項目清單作為第二個引數","newClsParam":"__new__ 覆寫應接受 \\"cls\\" 參數","newTypeAnyOrUnknown":"NewType 的第二個引數必須是已知的類別，不能是 Any 或 Unknown","newTypeBadName":"NewType 的第一個引數必須是字串常值","newTypeLiteral":"NewType 不能與常值類型搭配使用","newTypeNameMismatch":"NewType 必須指派給名稱相同的變數","newTypeNotAClass":"預期類別為 NewType 的第二個引數","newTypeParamCount":"NewType 需要兩個位置引數","newTypeProtocolClass":"NewType 無法與結構類型 (通訊協定或 TypedDict 類別) 搭配使用","noOverload":"\\"{name}\\" 沒有任何多載符合提供的引數","noReturnContainsReturn":"宣告傳回類型為 \\"NoReturn\\" 的函式不能包含 return 陳述式","noReturnContainsYield":"宣告傳回類型為 \\"NoReturn\\" 的函式不能包含 yield 陳述式","noReturnReturnsNone":"宣告類型為 \\"NoReturn\\" 的函式不能傳回 \\"None\\"","nonDefaultAfterDefault":"非預設引數遵循預設引數","nonLocalInModule":"模組層級不允許 nonlocal 宣告","nonLocalNoBinding":"找不到 nonlocal \\"{name}\\" 的繫結","nonLocalReassignment":"\\"{name}\\" 在 nonlocal 宣告之前指派","nonLocalRedefinition":"\\"{name}\\" 已宣告為 nonlocal","noneNotCallable":"無法呼叫型別 \\"None\\" 的物件","noneNotIterable":"類型 \\"None\\" 的物件不能作為可疊代的值","noneNotSubscriptable":"型別 \\"None\\" 的物件不能下標","noneNotUsableWith":"類型 \\"None\\" 的物件不能與 \\"with\\" 搭配使用","noneOperator":"\\"None\\" 不支援運算子 \\"{operator}\\"","noneUnknownMember":"\\"{name}\\" 不是 \\"None\\" 的已知成員","notRequiredArgCount":"預期 \\"NotRequired\\" 之後為單一類型引數","notRequiredNotInTypedDict":"此內容中不允許 \\"NotRequired\\"","objectNotCallable":"類型 \\"{type}\\" 的物件無法呼叫","obscuredClassDeclaration":"類別宣告 \\"{name}\\" 已被相同名稱的宣告遮蔽","obscuredFunctionDeclaration":"函式宣告 \\"{name}\\" 被相同名稱的宣告遮蔽","obscuredMethodDeclaration":"方法宣告 \\"{name}\\" 被相同名稱的宣告遮蔽","obscuredParameterDeclaration":"參數宣告 \\"{name}\\" 被相同名稱的宣告遮蔽","obscuredTypeAliasDeclaration":"類型別名宣告 \\"{name}\\" 被相同名稱的宣告遮蔽","obscuredVariableDeclaration":"宣告 \\"{name}\\" 被相同名稱的宣告遮蔽","operatorLessOrGreaterDeprecated":"Python 3 中不支援運算子 \\"<>\\"; 請改為使用 \\"!=\\"","optionalExtraArgs":"\\"Optional\\" 後面應有一個型別引數","orPatternIrrefutable":"無法推翻的模式僅允許作為 \\"or\\" 模式中的最後一個子模式","orPatternMissingName":"\\"or\\" 模式內的所有子模式都必須以相同的名稱為目標","overlappingKeywordArgs":"輸入的字典與關鍵字參數重疊:: {names}","overlappingOverload":"\\"{name}\\" 的多載 {obscured} 將永遠不會使用，因為它的參數與多載 {obscuredBy} 重疊","overloadAbstractMismatch":"多載方法必須全為抽象或不抽象","overloadClassMethodInconsistent":"\\"{name}\\" 的多載不一致地使用 @classmethod","overloadFinalInconsistencyImpl":"\\"{name}\\" 的多載已標示為 @final 但未實作","overloadFinalInconsistencyNoImpl":"\\"{name}\\" 的多載 {index} 標示為 @final 但多載 1 未標示","overloadImplementationMismatch":"多載的實作與多載 {index} 的簽章不一致","overloadReturnTypeMismatch":"\\"{name}\\" 的多載 {prevIndex} 與多載 {newIndex} 重疊，並傳回不相容的類型","overloadStaticMethodInconsistent":"\\"{name}\\" 的多載不一致地使用 @staticmethod","overloadWithoutImplementation":"\\"{name}\\" 標示為多載，但未提供實作","overriddenMethodNotFound":"方法 \\"{name}\\" 已標示為覆寫，但不存在相同名稱的基底方法","overrideDecoratorMissing":"方法 \\"{name}\\" 未標示為覆寫，但正在覆寫類別 \\"{className}\\" 中的方法","paramAfterKwargsParam":"參數無法接在 \\"**\\" 參數後面","paramAlreadyAssigned":"已指派參數 \\"{name}\\"","paramAnnotationMissing":"參數 \\"{name}\\" 遺漏了型別註釋","paramAssignmentMismatch":"無法將型別 \\"{sourceType}\\" 的運算式指派給型別 \\"{paramType}\\" 的參數","paramNameMissing":"沒有名為 \\"{name}\\" 的參數","paramSpecArgsKwargsUsage":"ParamSpec 的 \\"args\\" 和 \\"kwargs\\" 成員都必須出現在函式簽章內","paramSpecArgsMissing":"ParamSpec \\"{type}\\" 的引數遺失","paramSpecArgsUsage":"只有搭配 *args 參數使用時，ParamSpec 的 \\"args\\" 成員才有效","paramSpecAssignedName":"ParamSpec 必須指派至名為 \\"{name}\\" 的變數","paramSpecContext":"此內容中不允許 ParamSpec","paramSpecDefaultNotTuple":"ParamSpec 的預設值必須是省略符號、元組運算式或 ParamSpec","paramSpecFirstArg":"應以 ParamSpec 的名稱作為第一個引數","paramSpecKwargsUsage":"ParamSpec 的 \\"kwargs\\" 成員只有在與 **kwargs 參數搭配使用時有效","paramSpecNotUsedByOuterScope":"ParamSpec \\"{name}\\" 在此內容中沒有意義","paramSpecScopedToReturnType":"ParamSpec \\"{name}\\" 的範圍為傳回型別內的可呼叫項目，無法在函式主體中參考","paramSpecUnknownArg":"ParamSpec 不支援一個以上的引數","paramSpecUnknownMember":"\\"{name}\\" 不是 ParamSpec 的已知成員","paramSpecUnknownParam":"\\"{name}\\" 對 ParamSpec 是未知的參數","paramTypeCovariant":"不能在參數類型中使用共變數類型變數","paramTypePartiallyUnknown":"參數 \\"{paramName}\\" 的類型部分未知","paramTypeUnknown":"參數 \\"{paramName}\\" 的類型未知","parenthesizedContextManagerIllegal":"\\"with\\" 陳述式內的括弧需要 Python 3.9 或較新的版本","patternNeverMatches":"模式永遠不會符合主體類型 \\"{type}\\"","positionArgAfterNamedArg":"位置引數不能出現在關鍵字引數之後","positionOnlyAfterArgs":"\\"*\\" 參數之後不允許 Position-only 參數分隔符號","positionOnlyAfterKeywordOnly":"\\"/\\" 參數必須出現在 \\"*\\" 參數之前","positionOnlyAfterNon":"非 Position-only 參數之後不允許 Position-only 參數","positionOnlyFirstParam":"不允許 Position-only 參數分隔符號作為第一個參數","positionOnlyIncompatible":"Position-only 參數分隔符號需要 Python 3.8 或更新版本","privateImportFromPyTypedModule":"\\"{name}\\" 未從模組 \\"{module}\\" 匯出","privateUsedOutsideOfClass":"\\"{name}\\" 為私人，並用於宣告其所在的類別之外","privateUsedOutsideOfModule":"\\"{name}\\" 為私人，並用於宣告其所在的模組之外","propertyOverridden":"\\"{name}\\" 不正確地覆寫了類別 \\"{className}\\" 中相同名稱的屬性","propertyStaticMethod":"屬性 getter、setter 或 deleter 不允許靜態方法","protectedUsedOutsideOfClass":"\\"{name}\\" 受到保護，並用於其宣告所在的類別之外","protocolBaseClass":"通訊協定類別 \\"{classType}\\" 不能衍生自非通訊協定類別 \\"{baseType}\\"","protocolBaseClassWithTypeArgs":"使用型別參數語法時，通訊協定類別不允許使用型別引數","protocolIllegal":"使用 \\"Protocol\\" 需要 Python 3.7 或更新版本","protocolNotAllowed":"\\"Protocol\\" 不能用在此內容中","protocolUnsafeOverlap":"類別以不安全方式重疊 \\"{name}\\"，且可能會在運行時間產生相符專案","protocolVarianceContravariant":"一般通訊協定 \\"{class}\\" 中使用的型別變數 \\"{variable}\\" 必須為逆變數","protocolVarianceCovariant":"一般通訊協定 \\"{class}\\" 中使用的型別變數 \\"{variable}\\" 必須為共變數","protocolVarianceInvariant":"一般通訊協定 \\"{class}\\" 中使用的型別變數 \\"{variable}\\" 必須為不變數","pyrightCommentInvalidDiagnosticBoolValue":"Pyright 註解指示詞後面必須接著 \\"=\\"，且值為 true 或 false","pyrightCommentInvalidDiagnosticSeverityValue":"Pyright 註解指示詞後面必須接著 \\"=\\"，且值為 true、false、error、warning、information 或 none","pyrightCommentMissingDirective":"Pyright 註解後面必須接著指示詞 (basic 或 strict) 或診斷規則","pyrightCommentNotOnOwnLine":"用來控制檔案層級設定的 Pyright 註解必須出現在自己的行上","pyrightCommentUnknownDiagnosticRule":"\\"{rule}\\" 是 pyright 註解未知的診斷規則","pyrightCommentUnknownDiagnosticSeverityValue":"\\"{value}\\" 是 pyright 註解無效的值; 預期為 true、false、error、warning、information 或 none","pyrightCommentUnknownDirective":"\\"{directive}\\" 是 pyright 註解未知的指示詞; 預期為 \\"strict\\" 或 \\"basic\\"","readOnlyArgCount":"\\"ReadOnly\\" 後面應有單一型別引數","readOnlyNotInTypedDict":"此內容中不允許 \\"ReadOnly\\"","recursiveDefinition":"無法判斷 \\"{name}\\" 型別，因為它參照了自己","relativeImportNotAllowed":"相對匯入不能與 \\"import .a\\" 格式搭配使用; 請改為使用 \\"from . import a\\"","requiredArgCount":"\\"Required\\" 後面應有單一型別引數","requiredNotInTypedDict":"此內容中不允許 \\"Required\\"","returnInAsyncGenerator":"非同步產生器中不允許具有值的 return 陳述式","returnMissing":"宣告類型為 \\"{returnType}\\" 的函式必須在所有程式碼路徑上傳回值","returnOutsideFunction":"\\"return\\" 只能在函式內使用","returnTypeContravariant":"逆變數型別變數不能用在傳回型別中","returnTypeMismatch":"類型 \\"{exprType}\\" 的運算式不能指派至傳回類型 \\"{returnType}\\"","returnTypePartiallyUnknown":"傳回類型 \\"{returnType}\\" 部分未知","returnTypeUnknown":"傳回類型未知","revealLocalsArgs":"\\"reveal_locals\\" 呼叫不應有任何引數","revealLocalsNone":"此範圍中沒有任何 locals","revealTypeArgs":"\\"reveal_type\\" 呼叫預期為單一位置引數","revealTypeExpectedTextArg":"函式 \\"reveal_type\\" 的 \\"expected_text\\" 引數必須是 str 常值","revealTypeExpectedTextMismatch":"類型文字不符; 預期為 \\"{expected}\\"，但收到 \\"{received}\\"","revealTypeExpectedTypeMismatch":"型別不符; 應為 \\"{expected}\\"，但收到 \\"{received}\\"","selfTypeContext":"\\"Self\\" 在此內容中無效","selfTypeMetaclass":"“Self” 不能用於 Metaclass 内 (“type” 的子類別)","selfTypeWithTypedSelfOrCls":"\\"Self\\" 不能用在具有 `self` 或 `cls` 參數的函式中，其類型註釋不是 \\"Self\\"","setterGetterTypeMismatch":"屬性 setter 數值類型不能指派至 getter 傳回類型","singleOverload":"\\"{name}\\" 標示為多載，但遺失其他多載","slotsAttributeError":"未在__slots__中指定 \\"{name}\\"","slotsClassVarConflict":"\\"{name}\\" 與在 __slots__ 中宣告的執行個體變數衝突","starPatternInAsPattern":"星形模式不能與 \\"as\\" 目標搭配使用","starPatternInOrPattern":"星形模式不能在其他模式內使用 OR","starStarWildcardNotAllowed":"** 不能與萬用字元 \\"_\\" 搭配使用","staticClsSelfParam":"靜態方法不應採用 \\"self\\" 或 \\"cls\\" 參數","stdlibModuleOverridden":"\\"{path}\\" 正在覆寫 stdlib 模組 \\"{name}\\"","stringNonAsciiBytes":"位元組字串常值中不允許非 ASCII 字元","stringNotSubscriptable":"字串運算式不能在類型註釋中下標; 以引號括住整個註釋","stringUnsupportedEscape":"字串常值中不支援的逸出序列","stringUnterminated":"字串常值未結束","stubFileMissing":"找不到 \\"{importName}\\" 的虛設常式檔案","stubUsesGetAttr":"類型虛設常式檔案不完整; \\"__getattr__\\" 會遮蔽模組的類型錯誤","sublistParamsIncompatible":"Python 3.x 不支援子清單參數","superCallArgCount":"\\"super\\" 呼叫不應有兩個以上的引數","superCallFirstArg":"預期的類別類型為 \\"super\\" 呼叫的第一個引數，但收到 \\"{type}\\"","superCallSecondArg":"\\"super\\" 呼叫的第二個引數必須是衍生自 \\"{type}\\" 的物件或類別","superCallZeroArgForm":"\\"super\\" 呼叫的零引數形式只在方法內有效","superCallZeroArgFormStaticMethod":"\\"super\\" 呼叫的零引數形式在靜態方法內無效","symbolIsPossiblyUnbound":"\\"{name}\\" 可能未繫結","symbolIsUnbound":"\\"{name}\\" 未繫結","symbolIsUndefined":"\\"{name}\\" 未定義","symbolOverridden":"\\"{name}\\" 會覆寫類別 \\"{className}\\" 中相同名稱的符號","ternaryNotAllowed":"類型註釋中不允許三元運算式","totalOrderingMissingMethod":"類別必須定義 \\"__lt__\\"、\\"__le__\\"、\\"__gt__\\" 或 \\"__ge__\\" 其中一個，才能使用 total_ordering","trailingCommaInFromImport":"後置逗號不允許未使用括弧","tryWithoutExcept":"Try 陳述式必須至少有一個 except 或 finally 子句","tupleAssignmentMismatch":"無法將型別 \\"{type}\\" 的運算式指派至目標元組","tupleInAnnotation":"型別註釋中不允許元組運算式","tupleIndexOutOfRange":"索引 {index} 超過類型 {type} 的範圍","typeAliasIllegalExpressionForm":"類型別名定義無效的運算式格式","typeAliasIsRecursiveDirect":"型別別名 \\"{name}\\" 無法在其定義中使用它自己","typeAliasNotInModuleOrClass":"TypeAlias 只能在模組或類別範圍內定義","typeAliasRedeclared":"\\"{name}\\" 宣告為 TypeAlias，且只能指派一次","typeAliasStatementBadScope":"類型陳述式只能在模組或類別範圍內使用","typeAliasStatementIllegal":"類型別名陳述式需要 Python 3.12 或更新版本","typeAliasTypeBaseClass":"\\"type\\" 陳述式中定義的類型別名不能做為基底類別使用","typeAliasTypeMustBeAssigned":"TypeAliasType 必須指派給與型別別名相同的變數","typeAliasTypeNameArg":"TypeAliasType 的第一個引數必須是代表型別別名名稱的字串常值","typeAliasTypeNameMismatch":"類型別名的名稱必須與指派它的變數名稱相符","typeAliasTypeParamInvalid":"型別參數清單必須是只包含 TypeVar、TypeVarTuple 或 ParamSpec 的元組","typeAnnotationCall":"型別運算式中不允許呼叫運算式","typeAnnotationVariable":"型別運算式中不允許變數","typeAnnotationWithCallable":"\\"type\\" 的類型引數必須是類別; 不支援可呼叫項目","typeArgListExpected":"預期為 ParamSpec、省略符號或類型清單","typeArgListNotAllowed":"此型別引數不允許清單運算式","typeArgsExpectingNone":"預期類別 \\"{name}\\" 沒有類型引數","typeArgsMismatchOne":"預期為一個類型引數，但收到 {received}","typeArgsMissingForAlias":"預期為一般類型別名 \\"{name}\\" 的類型引數","typeArgsMissingForClass":"應為一般類別 \\"{name}\\" 的型別引數","typeArgsTooFew":"為 \\"{name}\\" 提供太少類型引數; 預期為 {expected} 但收到 {received}","typeArgsTooMany":"已為 \\"{name}\\" 提供太多型別引數; 應為 {expected} 但收到 {received}","typeAssignmentMismatch":"類型 \\"{sourceType}\\" 的運算式不能指派至宣告的類型 \\"{destType}\\"","typeAssignmentMismatchWildcard":"匯入符號 \\"{name}\\" 具有類型 \\"{sourceType}\\"，無法指派給宣告的類型 \\"{destType}\\"","typeCallNotAllowed":"不應在類型註釋中使用 type() 呼叫","typeCheckOnly":"\\"{name}\\" 已標示為 @type_check_only，只能在型別註釋中使用","typeCommentDeprecated":"使用類型註解已取代; 請改為使用類型註釋","typeExpectedClass":"預期為類型運算式，但收到 \\"{type}\\"","typeGuardArgCount":"預期 \\"TypeGuard\\" 或 \\"TypeIs\\" 之後為單一類型引數","typeGuardParamCount":"使用者定義的類型防護函式和方法至少必須有一個輸入參數","typeIsReturnType":"TypeIs 的傳回類型 (\\"{returnType}\\") 與值參數類型 (\\"{type}\\") 不一致","typeNotAwaitable":"\\"{type}\\" 不可等候","typeNotIntantiable":"\\"{type}\\" 不能具現化","typeNotIterable":"\\"{type}\\" 無法疊代","typeNotSpecializable":"無法將型別 \\"{type}\\" 特殊化","typeNotSubscriptable":"類型 \\"{type}\\" 的物件不能下標","typeNotSupportBinaryOperator":"型別 \\"{leftType}\\" 和 \\"{rightType}\\" 不支援運算子 \\"{operator}\\"","typeNotSupportBinaryOperatorBidirectional":"當預期的型別為 \\"{expectedType}\\" 時，型別 \\"{leftType}\\" 和 \\"{rightType}\\" 不支援運算子 \\"{operator}\\"","typeNotSupportUnaryOperator":"型別 \\"{type}\\" 不支援運算子 \\"{operator}\\"","typeNotSupportUnaryOperatorBidirectional":"預期的類型為 \\"{expectedType}\\" 時，類型 \\"{type}\\" 不支援運算子 \\"{operator}\\"","typeNotUsableWith":"類型 \\"{type}\\" 的物件不能與 \\"with\\" 搭配使用，因為它未實作 {method}","typeParameterBoundNotAllowed":"界限或條件約束不能與 variadic 型別參數或 ParamSpec 一起使用","typeParameterConstraintTuple":"類型參數限制式必須是兩個或兩個以上類型的 Tuple","typeParameterExistingTypeParameter":"類型參數 \\"{name}\\" 已在使用中","typeParameterNotDeclared":"類型參數 \\"{name}\\" 未包含在 \\"{container}\\" 的類型參數清單中","typeParametersMissing":"至少必須指定一個類型參數","typePartiallyUnknown":"\\"{name}\\" 的類型部分未知","typeUnknown":"\\"{name}\\" 的類型未知","typeVarAssignedName":"TypeVar 必須指派至名為 \\"{name}\\" 的變數","typeVarAssignmentMismatch":"無法將型別 \\"{type}\\" 指派給型別變數 \\"{name}\\"","typeVarBoundAndConstrained":"TypeVar 不能同時繫結和限制","typeVarBoundGeneric":"TypeVar 繫結類型不能是一般","typeVarConstraintGeneric":"TypeVar 限制式類型不能是一般","typeVarDefaultBoundMismatch":"TypeVar 預設型別必須是繫結型別的子型別","typeVarDefaultConstraintMismatch":"TypeVar 預設型別必須是其中一個限制型別","typeVarDefaultIllegal":"型別變數預設型別需要 Python 3.13 或較新的版本","typeVarDefaultInvalidTypeVar":"類型參數 \\"{name}\\" 的預設類型參考不在範圍的一或多個類型變數","typeVarFirstArg":"預期為 TypeVar 的名稱作為第一個引數","typeVarNoMember":"TypeVar \\"{type}\\" 沒有成員 \\"{name}\\"","typeVarNotSubscriptable":"TypeVar \\"{type}\\" 不能下標","typeVarNotUsedByOuterScope":"類型變數 \\"{name}\\" 在此內容中沒有意義","typeVarPossiblyUnsolvable":"如果呼叫者未提供參數 \\"{param}\\" 的引數，則型別變數 \\"{name}\\" 可能無法解析","typeVarScopedToReturnType":"型別變數 \\"{name}\\" 的範圍為傳回型別內的可呼叫項目，無法在函式主體中參考","typeVarSingleConstraint":"TypeVar 至少必須有兩個限制類型","typeVarTupleConstraints":"TypeVarTuple 不能有值條件約束","typeVarTupleContext":"此內容中不允許 TypeVarTuple","typeVarTupleDefaultNotUnpacked":"TypeVarTuple 預設型別必須是未封裝的元組或 TypeVarTuple","typeVarTupleMustBeUnpacked":"TypeVarTuple 值需要解除封裝運算子","typeVarTupleUnknownParam":"\\"{name}\\" 是 TypeVarTuple 的未知參數","typeVarUnknownParam":"\\"{name}\\" 對 TypeVar 是未知的參數","typeVarUsedByOuterScope":"外部領域已在使用 TypeVar \\"{name}\\"","typeVarUsedOnlyOnce":"TypeVar \\"{name}\\" 只會在一般函式簽章中出現一次","typeVarVariance":"TypeVar 不能同時為共變數和逆變數","typeVarWithDefaultFollowsVariadic":"TypeVar \\"{typeVarName}\\" 具有預設值，無法遵循 TypeVarTuple \\"{variadicName}\\"","typeVarWithoutDefault":"\\"{name}\\" 無法出現在型別參數清單中的 \\"{other}\\" 後面，因為它沒有預設型別","typeVarsNotInGenericOrProtocol":"Generic[] 或 Protocol[] 必須包含所有類型變數","typedDictAccess":"無法存取 TypedDict 中的項目","typedDictAssignedName":"TypedDict 必須指派至名為 \\"{name}\\" 的變數","typedDictBadVar":"TypedDict 類別只能包含型別註釋","typedDictBaseClass":"TypedDict 類別的所有基底類別也必須是 TypedDict 類別","typedDictBoolParam":"預期 \\"{name}\\" 參數的值為 True 或 False","typedDictClosedExtras":"基底類別 \\"{name}\\" 是已關閉的 TypedDict; 額外項目必須為型別 \\"{type}\\"","typedDictClosedNoExtras":"基底類別 \\"{name}\\" 是已關閉的 TypedDict; 不允許額外項目","typedDictDelete":"無法刪除 TypedDict 中的項目","typedDictEmptyName":"TypedDict 內的名稱不可為空白","typedDictEntryName":"字典項目名稱預期為字串常值","typedDictEntryUnique":"字典內的名稱必須是唯一的","typedDictExtraArgs":"不支援額外的 TypedDict 引數","typedDictFieldNotRequiredRedefinition":"TypedDict 項目 \\"{name}\\" 不能重新定義為 NotRequired","typedDictFieldReadOnlyRedefinition":"TypedDict 項目 \\"{name}\\" 不能重新定義為 ReadOnly","typedDictFieldRequiredRedefinition":"TypedDict 項目 \\"{name}\\" 不能重新定義為 Required","typedDictFirstArg":"預期 TypedDict 類別名稱作為第一個引數","typedDictInitsubclassParameter":"TypedDict 不支援__init_subclass__參數 \\"{name}\\"","typedDictNotAllowed":"\\"TypedDict\\" 不能用在此內容中","typedDictSecondArgDict":"預期為字典或關鍵字參數作為第二個參數","typedDictSecondArgDictEntry":"應為簡單字典輸入項目","typedDictSet":"無法在 TypedDict 中指派項目","unaccessedClass":"未存取類別 \\"{name}\\"","unaccessedFunction":"未存取函式 \\"{name}\\"","unaccessedImport":"未存取匯入 \\"{name}\\"","unaccessedSymbol":"未存取 \\"{name}\\"","unaccessedVariable":"未存取變數 \\"{name}\\"","unannotatedFunctionSkipped":"因為未標註函式 \\"{name}\\"，所以略過其分析","unaryOperationNotAllowed":"類型註釋中不允許一元運算子","unexpectedAsyncToken":"預期為 \\"def\\"、\\"with\\" 或 \\"for\\" 來追蹤 \\"async\\"","unexpectedExprToken":"運算式結尾未預期的權杖","unexpectedIndent":"未預期的縮排","unexpectedUnindent":"取消縮排未預期","unhashableDictKey":"字典索引鍵必須是可雜湊的","unhashableSetEntry":"設定項目必須是可雜湊","uninitializedAbstractVariables":"抽象基底類別中定義的變數未在 Final 類別 \\"{classType}\\" 中初始化","uninitializedInstanceVariable":"執行個體變數 \\"{name}\\" 未在類別本文或 __init__ 方法上初始化","unionForwardReferenceNotAllowed":"聯集語法不能與字串運算元搭配使用; 使用引號括住整個運算式","unionSyntaxIllegal":"聯集的替代語法需要 Python 3.10 或更新版本","unionTypeArgCount":"聯集需要兩個或多個類型引數","unionUnpackedTuple":"集合聯集不能包含未封裝的 Tuple","unionUnpackedTypeVarTuple":"集合聯集不能包含未封裝的 TypeVarTuple","unnecessaryCast":"不必要的 \\"cast\\" 呼叫; 型別已是 \\"{type}\\"","unnecessaryIsInstanceAlways":"不必要的 isinstance 呼叫; \\"{testType}\\" 一律是 \\"{classType}\\" 的執行個體","unnecessaryIsSubclassAlways":"不必要的 issubclass 呼叫; \\"{testType}\\"永遠是 \\"{classType}\\" 的子類別","unnecessaryPyrightIgnore":"不必要的 \\"# pyright: ignore\\" 註解","unnecessaryPyrightIgnoreRule":"不必要的 \\"# pyright: ignore\\" 規則: \\"{name}\\"","unnecessaryTypeIgnore":"不必要的 \\"# type: ignore\\" 註解","unpackArgCount":"\\"Unpack\\" 後面應為單一型別引數","unpackExpectedTypeVarTuple":"預期 TypeVarTuple 或 tuple 作為 Unpack 的類型引數","unpackExpectedTypedDict":"應為解除封裝的 TypedDict 型別引數","unpackIllegalInComprehension":"理解中不允許解壓縮作業","unpackInAnnotation":"類型註釋中不允許解壓縮運算子","unpackInDict":"字典中不允許解壓縮作業","unpackInSet":"集合內不允許將運算子解除封裝","unpackNotAllowed":"此內容中不允許解壓縮","unpackOperatorNotAllowed":"此內容中不允許解壓縮作業","unpackTuplesIllegal":"Python 3.8 之前的 Tuple 中不允許解壓縮作業","unpackedArgInTypeArgument":"解壓縮的引數不能用於類型引數清單","unpackedArgWithVariadicParam":"未封裝的引數無法用於 TypeVarTuple 參數","unpackedDictArgumentNotMapping":"** 後的引數運算式必須是具有 \\"str\\" 金鑰類型的對應","unpackedDictSubscriptIllegal":"字典解壓縮運算子在下標中不被允許","unpackedSubscriptIllegal":"下標中的解壓縮運算子需要 Python 3.11 或更新版本","unpackedTypeVarTupleExpected":"預期為解壓縮的 TypeVarTuple; 使用 Unpack[{name1}] 或 *{name2}","unpackedTypedDictArgument":"無法比對解壓縮的 TypedDict 引數與參數","unreachableCode":"無法連線到程式碼","unreachableExcept":"無法連接 Except 子句，因為例外已處理","unsupportedDunderAllOperation":"不支援 \\"__all__\\" 上的作業，因此匯出的符號清單可能不正確","unusedCallResult":"呼叫運算式的結果是 \\"{type}\\" 型別，而且未使用; 如果這是刻意的，則指派給變數 \\"_\\"","unusedCoroutine":"未使用非同步函式呼叫的結果; 使用 \\"await\\" 或指派結果至變數","unusedExpression":"未使用運算式值","varAnnotationIllegal":"變數的類型註釋需要 Python 3.6 或更新版本; 使用類型註解以獲得與先前版本的相容性","variableFinalOverride":"變數 \\"{name}\\" 標示為 Final，且會覆寫類別 \\"{className}\\" 中相同名稱的非 Final 變數","variadicTypeArgsTooMany":"類型引數清單最多只能有一個解壓縮的 TypeVarTuple 或 tuple","variadicTypeParamTooManyAlias":"類型別名最多只能有一個 TypeVarTuple 類型參數，但收到多個 ({names})","variadicTypeParamTooManyClass":"一般類別最多只能有一個 TypeVarTuple 類型參數，但收到多個 ({names})","walrusIllegal":"運算子 \\":=\\" 需要 Python 3.8 或更新版本","walrusNotAllowed":"此內容中不允許未使用括弧括住的運算子 \\":=\\"","wildcardInFunction":"類別或函式內不允許萬用字元匯入","wildcardLibraryImport":"不允許從程式庫匯入萬用字元","wildcardPatternTypePartiallyUnknown":"萬用字元模式擷取的類型部分未知","wildcardPatternTypeUnknown":"萬用字元模式擷取的型別不明","yieldFromIllegal":"使用 \\"yield from\\" 需要 Python 3.3 或更新版本","yieldFromOutsideAsync":"非同步函式中不允許 \\"yield from\\"","yieldOutsideFunction":"在函式或 lambda 外部不允許 \\"yield\\"","yieldWithinListCompr":"清單理解內不允許 \\"yield\\"","zeroCaseStatementsFound":"Match 陳述式必須至少包含一個 case 陳述式","zeroLengthTupleNotAllowed":"此內容中不允許零長度 Tuple"},"DiagnosticAddendum":{"annotatedNotAllowed":"[已標註] 特殊表單不可與執行個體和類別檢查一起使用","argParam":"引數對應至參數 \\"{paramName}\\"","argParamFunction":"引數對應至函式 \\"{functionName}\\" 中的參數 \\"{paramName}\\"","argsParamMissing":"參數 \\"*{paramName}\\" 沒有對應的參數","argsPositionOnly":"僅限位置的參數不符; 應為 {expected}，但收到 {received}","argumentType":"引數類型為 \\"{type}\\"","argumentTypes":"引數型別: ({types})","assignToNone":"類型不能指派至類型 \\"None\\"","asyncHelp":"您是指 \\"async with\\" 嗎?","baseClassIncompatible":"基底類別 \\"{baseClass}\\" 與類型 \\"{type}\\" 不相容","baseClassIncompatibleSubclass":"基底類別 \\"{baseClass}\\" 衍生自與類型 \\"{type}\\" 不相容的 \\"{subclass}\\"","baseClassOverriddenType":"基底類別 \\"{baseClass}\\" 提供類型 \\"{type}\\"，其已覆寫","baseClassOverridesType":"基底類別 \\"{baseClass}\\" 以型別 \\"{type}\\" 來覆寫","bytesTypePromotions":"將 disableBytesTypePromotions 設定為 false，以啟用「bytearray」和「memoryview」的類型升級行為","conditionalRequiresBool":"類型 \\"{operandType}\\" 的方法 __bool__ 傳回類型 \\"{boolReturnType}\\" 而非 \\"bool\\"","dataClassFieldLocation":"欄位宣告","dataClassFrozen":"\\"{name}\\" 已凍結","dataProtocolUnsupported":"\\"{name}\\" 是個資料通訊協定","descriptorAccessBindingFailed":"無法為描述項類別 \\"{className}\\" 繫結方法 \\"{name}\\"","descriptorAccessCallFailed":"無法呼叫描述項類別 \\"{className}\\" 的方法 \\"{name}\\"","finalMethod":"最終方法","functionParamDefaultMissing":"參數 \\"{name}\\" 遺漏了預設引數","functionParamName":"參數名稱不符: \\"{destName}\\" 與 \\"{srcName}\\"","functionParamPositionOnly":"僅位置參數不符；參數 \\"{name}\\" 不是僅限位置","functionReturnTypeMismatch":"函式傳回型別 \\"{sourceType}\\" 與型別 \\"{destType}\\" 不相容","functionTooFewParams":"函式接受太少位置參數; 預期 {expected}，但收到 {received}","functionTooManyParams":"函式接受太多位置參數; 預期 {expected}，但收到 {received}","genericClassNotAllowed":"執行個體或類別檢查不允許具有類型引數的泛型類型","incompatibleDeleter":"屬性 deleter 方法不相容","incompatibleGetter":"屬性 getter 方法不相容","incompatibleSetter":"屬性 setter 方法不相容","initMethodLocation":"__init__ 方法於類別 \\"{type}\\" 中定義","initMethodSignature":"__init__ 的簽章為 \\"{type}\\"","initSubclassLocation":"__init_subclass__ 方法已於類別 \\"{name}\\" 中定義","invariantSuggestionDict":"請考慮從「dict」切換到實值型別中共變數的「Mapping」","invariantSuggestionList":"請考慮從共變數的「list」切換到「Sequence」","invariantSuggestionSet":"考慮從 “set”切換到共同變數 “Container”","keyNotRequired":"\\"{name}\\" 在 \\"{type}\\" 中不是必要的索引鍵，因此存取可能會導致執行階段例外狀況","keyReadOnly":"\\"{name}\\" 是 \\"{type}\\" 中的唯讀金鑰","keyRequiredDeleted":"\\"{name}\\" 是必要的金鑰，因此不能刪除","keyUndefined":"\\"{name}\\" 不是 \\"{type}\\" 中定義的金鑰","kwargsParamMissing":"參數 \\"**{paramName}\\" 沒有對應的參數","listAssignmentMismatch":"類型 \\"{type}\\" 與目標清單不相容","literalAssignmentMismatch":"\\"{sourceType}\\" 不能指派至類型 \\"{destType}\\"","matchIsNotExhaustiveHint":"如果不需要徹底處理，請新增 \\"case _: pass\\"","matchIsNotExhaustiveType":"未處理的類型: \\"{type}\\"","memberAssignment":"無法將型別 \\"{type}\\" 的運算式指派給類別 \\"{classType}\\" 的成員 \\"{name}\\"","memberIsAbstract":"\\"{type}.{name}\\" 未實作","memberIsAbstractMore":"和其他 {count} 人...","memberIsClassVarInProtocol":"\\"{name}\\" 定義為通訊協定中的 ClassVar","memberIsFinalInProtocol":"\\"{name}\\" 在通訊協定中標示為 Final","memberIsInitVar":"成員 \\"{name}\\" 是僅限初始化的欄位","memberIsInvariant":"\\"{name}\\" 為不變數，因為它可變動","memberIsNotClassVarInClass":"\\"{name}\\" 必須定義為 ClassVar，才能與通訊協定相容","memberIsNotClassVarInProtocol":"\\"{name}\\" 未定義為通訊協定中的 ClassVar","memberIsNotFinalInProtocol":"\\"{name}\\" 未在通訊協定中標示為 Final","memberIsWritableInProtocol":"\\"{name}\\" 在通訊協定中是可寫入的","memberSetClassVar":"無法透過類別執行個體指派成員 \\"{name}\\"，因為它是 ClassVar","memberTypeMismatch":"\\"{name}\\" 是不相容的類型","memberUnknown":"成員 \\"{name}\\" 未知","metaclassConflict":"Metaclass「{metaclass1}」與「{metaclass2}」衝突","missingDeleter":"屬性 deleter 方法遺失","missingGetter":"屬性 getter 方法遺失","missingSetter":"遺漏了屬性 setter 方法","namedParamMissingInDest":"目的地中遺失關鍵字參數 \\"{name}\\"","namedParamMissingInSource":"來源中遺漏了關鍵字參數 \\"{name}\\"","namedParamTypeMismatch":"類型 \\"{sourceType}\\" 的關鍵字參數 \\"{name}\\" 不能指派至類型 \\"{destType}\\"","namedTupleNotAllowed":"執行個體或類別檢查無法使用 NamedTuple","newMethodLocation":"__new__ 方法於類別 \\"{type}\\" 中定義","newMethodSignature":"__new__ 的簽章為 \\"{type}\\"","newTypeClassNotAllowed":"使用 NewType 建立的類別不能與執行個體和類別檢查一起使用","noOverloadAssignable":"沒有任何多載函式符合類型 \\"{type}\\"","noneNotAllowed":"無法對執行個體或類別檢查使用 None","orPatternMissingName":"遺失名稱: {name}","overloadIndex":"多載 {index} 是最接近的相符項目","overloadNotAssignable":"\\"{name}\\" 的一或多個多載無法指派","overloadSignature":"多載簽章在這裡定義","overriddenMethod":"覆寫方法","overriddenSymbol":"覆寫的符號","overrideInvariantMismatch":"覆寫類型 \\"{overrideType}\\" 與基底類型 \\"{baseType}\\" 不同","overrideIsInvariant":"變數是可變動的，所以其類型是不變的","overrideNoOverloadMatches":"覆寫中沒有任何多載簽章與基底方法相容","overrideNotClassMethod":"基底方法宣告為 classmethod，但無法覆寫","overrideNotInstanceMethod":"基底方法已宣告為執行個體方法，但無法覆寫","overrideNotStaticMethod":"基底方法宣告為 staticmethod，但無法覆寫","overrideOverloadNoMatch":"覆寫未處理基底方法的所有多載","overrideOverloadOrder":"覆寫方法的多載必須與基底方法的順序相同","overrideParamKeywordNoDefault":"關鍵字參數 \\"{name}\\" 不相符: 基底參數有預設引數值，覆寫參數則否","overrideParamKeywordType":"關鍵字參數 \\"{name}\\" 型別不符: 基底參數為型別 \\"{baseType}\\"，覆寫參數為型別 \\"{overrideType}\\"","overrideParamName":"參數 {index} 名稱不符: 基底參數名為 \\"{baseName}\\"，覆寫參數名為 \\"{overrideName}\\"","overrideParamNameExtra":"基底中遺失參數 \\"{name}\\"","overrideParamNameMissing":"覆寫中遺漏了參數 \\"{name}\\"","overrideParamNamePositionOnly":"參數 {index} 不符: 基底參數 \\"{baseName}\\" 為關鍵字參數，覆寫參數為 \\"position-only\\"","overrideParamNoDefault":"參數 {index} 不相符: 基底參數有預設引數值，覆寫參數則否","overrideParamType":"參數 \\"{index}\\" 型別不符: 基底參數為型別 \\"{baseType}\\"，覆寫參數為型別 \\"{overrideType}\\"","overridePositionalParamCount":"位置參數計數不相符; 基底方法有 {baseCount} 個，但覆寫有 {overrideCount} 個","overrideReturnType":"傳回類型不符: 基底方法會傳回類型 \\"{baseType}\\"，覆寫會傳回類型 \\"{overrideType}\\"","overrideType":"基底類別會將類型定義為 \\"{type}\\"","paramAssignment":"參數 {index}: 類型 \\"{sourceType}\\" 不能指派至類型 \\"{destType}\\"","paramSpecMissingInOverride":"覆寫方法中遺漏了 ParamSpec 參數","paramType":"參數類型為 \\"{paramType}\\"","privateImportFromPyTypedSource":"改為從 \\"{module}\\" 匯入","propertyAccessFromProtocolClass":"通訊協定類別中定義的屬性無法存取為類別變數","propertyMethodIncompatible":"屬性方法 \\"{name}\\" 不相容","propertyMethodMissing":"覆寫中遺漏了屬性方法 \\"{name}\\"","propertyMissingDeleter":"屬性 \\"{name}\\" 沒有定義的 deleter","propertyMissingSetter":"屬性 \\"{name}\\" 沒有定義的 setter","protocolIncompatible":"\\"{sourceType}\\" 與通訊協定 \\"{destType}\\" 不相容","protocolMemberMissing":"\\"{name}\\" 不存在","protocolRequiresRuntimeCheckable":"通訊協定類別必須為 @runtime_checkable，才能搭配執行個體和類別檢查使用","protocolSourceIsNotConcrete":"\\"{sourceType}\\" 不是實體類別型別，因此無法指派給型別 \\"{destType}\\"","protocolUnsafeOverlap":"\\"{name}\\" 的屬性與通訊協定的名稱相同","pyrightCommentIgnoreTip":"使用 \\"# pyright: ignore[<diagnostic rules>]\\" 來隱藏單行的診斷","readOnlyAttribute":"屬性 \\"{name}\\" 為唯讀","seeClassDeclaration":"請參閱類別宣告","seeDeclaration":"請參閱宣告","seeFunctionDeclaration":"請參閱函式宣告","seeMethodDeclaration":"請參閱方法宣告","seeParameterDeclaration":"請參閱參數宣告","seeTypeAliasDeclaration":"請參閱類型別名宣告","seeVariableDeclaration":"請參閱變數宣告","tupleAssignmentMismatch":"型別 \\"{type}\\" 與目標元組不相容","tupleEntryTypeMismatch":"Tuple 項目 {entry} 的類型不正確","tupleSizeIndeterminateSrc":"元組大小不符; 預期為 {expected}，但收到不確定的大小","tupleSizeIndeterminateSrcDest":"元組大小不符; 預期為 {expected} 或其他，但收到不確定的大小","tupleSizeMismatch":"元組大小不符; 預期為 {expected}，但收到 {received}","tupleSizeMismatchIndeterminateDest":"元組大小不符; 預期為 {expected} 或其他，但收到 {received}","typeAliasInstanceCheck":"使用 \\"type\\" 陳述式建立的類型別名不能搭配執行個體和類別檢查使用","typeAssignmentMismatch":"類型 \\"{sourceType}\\" 不能指派至類型 \\"{destType}\\"","typeBound":"類型 \\"{sourceType}\\" 與類型變數 \\"{name}\\" 的繫結類型 \\"{destType}\\" 不相容","typeConstrainedTypeVar":"類型 \\"{type}\\" 與限制類型變數 \\"{name}\\" 不相容","typeIncompatible":"\\"{sourceType}\\" 與 \\"{destType}\\" 不相容","typeNotClass":"\\"{type}\\" 不是類別","typeNotStringLiteral":"\\"{type}\\" 不是字串常值","typeOfSymbol":"\\"{name}\\" 的型別為 \\"{type}\\"","typeParamSpec":"類型 \\"{type}\\" 與 ParamSpec \\"{name}\\" 不相容","typeUnsupported":"類型 \\"{type}\\" 不受支援","typeVarDefaultOutOfScope":"類型變數 \\"{name}\\" 不在範圍內","typeVarIsContravariant":"型別參數 \\"{name}\\" 具有反變性，但 \\"{sourceType}\\" 不是 \\"{destType}\\" 的超型別","typeVarIsCovariant":"型別參數 \\"{name}\\" 具有共變性，但 \\"{sourceType}\\" 不是 \\"{destType}\\" 的子型別","typeVarIsInvariant":"型別參數 \\"{name}\\" 具有不變性，但 \\"{sourceType}\\" 與 \\"{destType}\\" 不同","typeVarNotAllowed":"執行個體或類別檢查不允許 TypeVar","typeVarTupleRequiresKnownLength":"TypeVarTuple 無法繫結至長度不明的元組","typeVarUnnecessarySuggestion":"改用 {type}","typeVarUnsolvableRemedy":"提供多載，其指定未提供引數時的傳回類型","typeVarsMissing":"遺失類型變數: {names}","typedDictBaseClass":"類別 \\"{type}\\" 不是 TypedDict","typedDictClassNotAllowed":"執行個體或類別檢查不允許 TypedDict 類別","typedDictClosedExtraNotAllowed":"無法新增項目 \\"{name}\\"","typedDictClosedExtraTypeMismatch":"無法新增型別為 \\"{type}\\" 的項目 \\"{name}\\"","typedDictClosedFieldNotRequired":"無法新增項目 \\"{name}\\"，因為它必須是 NotRequired","typedDictExtraFieldNotAllowed":"\\"{name}\\" 不存在於 \\"{type}\\"","typedDictExtraFieldTypeMismatch":"\\"{name}\\" 型別與 \\"{type}\\" 中的 \\"__extra_items__\\" 型別不相容","typedDictFieldMissing":"\\"{type}\\" 遺失 \\"{name}\\"","typedDictFieldNotReadOnly":"\\"{name}\\" 在 \\"{type}\\" 中不是唯讀","typedDictFieldNotRequired":"\\"{type}\\" 中不需要 \\"{name}\\"","typedDictFieldRequired":"\\"{type}\\" 中需要 \\"{name}\\"","typedDictFieldTypeMismatch":"型別 \\"{type}\\" 無法指派給項目 \\"{name}\\"","typedDictFieldUndefined":"\\"{name}\\" 是型別 \\"{type}\\" 中未定義的項目","typedDictFinalMismatch":"\\"{sourceType}\\" 與 \\"{destType}\\" 不相容，因為@final 不符","typedDictKeyAccess":"使用 [\\"{name}\\"] 參考 TypedDict 中的項目","typedDictNotAllowed":"執行個體或類別檢查無法使用 TypedDict","unhashableType":"型別 \\"{type}\\" 無法雜湊","uninitializedAbstractVariable":"執行個體變數 \\"{name}\\" 在抽象基底類別 \\"{classType}\\" 中定義，但未初始化","unreachableExcept":"\\"{exceptionType}\\" 是 \\"{parentType}\\" 的子類別","useDictInstead":"使用 Dict[T1，T2] 來表示字典型別","useListInstead":"使用 List[T] 來表示清單型別，或使用 Union [T1, T2] 來表示等位型別","useTupleInstead":"使用 tuple[T1, ..., Tn] 來指出 Tuple 類型或 Union[T1, T2] 來指出聯集類型","useTypeInstead":"改為使用 Type[T]","varianceMismatchForClass":"型別引數 \\"{typeVarName}\\" 的變異數與基底類別 \\"{className}\\" 不相容","varianceMismatchForTypeAlias":"型別引數 \\"{typeVarName}\\" 的變異數與 \\"{typeAliasParam}\\" 不相容"}}')}};
//# sourceMappingURL=pyright.bundle.js.map