{
    "ClientLoc.ServerRestart.crashMessage": "Pylance s’est bloquée.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance s’est bloquée. Pylance redémarre lorsque vous sélectionnez un exécutable Node.js pour exécuter Pylance.",
    "ClientLoc.ServerRestart.restartQuestion": "Pylance s’est bloquée. Voulez-vous essayer d’utiliser un exécutable Node.js pour exécuter le serveur de langage ?",
    "ClientLoc.ServerRestart.restartingMessage": "Redémarrage de Pylance à l’aide de Node.js ...",
    "ClientLoc.ServerRestart.selectButton": "Sélectionner",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Sélectionner Node.js exécutable pour exécuter Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Pylance est configurée pour s’exécuter avec {0}. Voulez-vous utiliser cet exécutable pour exécuter Pylance ?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Mode complétions d’importation automatique Python",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Complétions d’importation automatique : {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Basculer vers désactivé",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Basculer vers activé",
    "ClientLoc.crashTooManyRestarts": "Pylance s’est écrasé 5 fois au cours des 3 dernières minutes. Pylance ne sera pas redémarré. Pour plus d’informations, consultez la sortie.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Mode de vérification du type Python",
    "ClientLoc.typeCheckingModeStatusItem.text": "Vérification de type : {0}",
    "ClientLoc.typeCheckingModeStatusItem.titleOff": "Basculer vers désactivé",
    "ClientLoc.typeCheckingModeStatusItem.titleOn": "Basculer vers activé",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Échec de la mise à jour du paramètre '{0}.{1}'.",
    "Common.Help": "Aide",
    "Common.No": "Non",
    "Common.Yes": "Oui",
    "Common.reload": "Recharger",
    "Common.remindMeLater": "Me rappeler plus tard",
    "Insiders.installingPreRelease": "Installation de la version préliminaire de Pylance...",
    "LanguageServer.settingsMigratedMessage": "Les paramètres applicables à Microsoft Language Server ont été copiés dans les paramètres Pylance. Veuillez vérifier le(s) fichier(s) settings.json pour plus de détails.",
    "LanguageServer.settingsMigrationError": "Impossible de migrer les paramètres suivants :",
    "Refactoring.MoveSymbol.newFileDetail": "Entrer le chemin d’accès ou sélectionner le fichier de destination",
    "Refactoring.MoveSymbol.newFileLabel": "Entrer le chemin d’accès du fichier de destination",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Sélectionner",
    "Refactoring.MoveSymbol.openDialogTitle": "Sélectionner un nouveau fichier pour déplacer le symbole vers ...",
    "Refactoring.MoveSymbol.progressBarTitle": "Déplacer le symbole vers ...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Rechercher le fichier de destination",
    "Refactoring.MoveSymbol.quickPickTitle": "Sélectionner la destination pour le déplacement",
    "Refactoring.MoveSymbol.separatorText": "Fichiers de destination",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Rechercher des importations",
    "Refactoring.SearchImports.quickPickTitle": "Rechercher d’autres importations correspondantes",
    "commands.pylance.gotoOutputChannel.title": "Pylance : accéder au canal de sortie",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance : effacer tous les index persistants",
    "commands.pylance.profiling.start.title": "Pylance : démarrer le profilage",
    "commands.pylance.profiling.stop.title": "Pylance : arrêter le profilage",
    "commands.pylance.reportIssue.title": "Pylance : problème de rapport...",
    "settings.python.analysis.autoFormatStrings.description": "Lorsque vous tapez un '{' dans une chaîne, préfixez automatiquement la chaîne avec un 'f'.",
    "settings.python.analysis.autoImportCompletions.description": "Activez les complétions d’importation automatique.",
    "settings.python.analysis.autoIndent.description": "Ajustez automatiquement la mise en retrait en fonction de la sémantique de langage lors de la saisie de code Python.",
    "settings.python.analysis.autoSearchPaths.description": "Ajoutez automatiquement des chemins de recherche courants tels que 'src'.",
    "settings.python.analysis.completeFunctionParens.description": "Ajoutez des parenthèses aux complétions de fonction.",
    "settings.python.analysis.diagnosticMode.description": "Étendue d’analyse pour l’affichage des diagnostics.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Permet à un utilisateur de remplacer les niveaux de gravité pour des diagnostics individuels. Utilisez le nom de la règle comme clé et l'un des éléments suivants : \"erreur\", \"avertissement\", \"information\", \"aucun\", \"true\" (alias pour \"erreur\") ou \"false\" (alias pour \"aucun\") comme valeur. La valeur par défaut affichée pour chaque diagnostic est la valeur par défaut lorsque « python.analysis.typeCheckingMode » est défini sur « off ». Voir [ici](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) pour connaître les valeurs par défaut de chaque mode de vérification de type (\"off\", \"basic\" et \" strict\").",
    "settings.python.analysis.enablePytestSupport.description": "Active la prise en charge de pytest dans Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Utiliser le mode serveur de synchronisation [Expérimental]. Pour usage interne uniquement, Pylance peut cesser de fonctionner.",
    "settings.python.analysis.exclude.description": "Chemins d’accès des répertoires ou fichiers qui ne doivent pas être inclus. Ceux-ci remplacent les répertoires comprennent, ce qui permet d’exclure des sous-répertoires spécifiques. Notez que les fichiers des chemins d’exclusion peuvent toujours être inclus dans l’analyse s’ils sont référencés (importés) par des fichiers sources qui ne sont pas exclus. Les chemins d’accès peuvent contenir des caractères génériques ** (un répertoire ou plusieurs niveaux de répertoires), * (une séquence de zéro ou plusieurs caractères) ou ? (caractère unique). Si aucun chemin d’exclusion n’est spécifié, Pylance exclut automatiquement les répertoires suivants : '**/node_modules', '**/__pycache__', '.git' et tous les répertoires d’environnement virtuel.",
    "settings.python.analysis.extraCommitChars.description": "Autorisez l’utilisation de '.', '(' en tant que caractères de validation, le cas échéant.",
    "settings.python.analysis.extraPaths.description": "Chemins de résolution de recherche d’importation supplémentaires",
    "settings.python.analysis.fixAll.description": "correctifs sources à exécuter dans tous les correctifs.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Pour les littéraux de chaîne qui ressemblent à des noms de module, permet d’accéder à la définition pour accéder au module.",
    "settings.python.analysis.ignore.description": "Chemins d’accès des répertoires ou fichiers dont la sortie de diagnostic (erreurs et avertissements) doit être supprimée, même s’il s’agit d’un fichier inclus ou dans la fermeture transitive d’un fichier inclus. Les chemins d’accès peuvent contenir des caractères génériques ** (un répertoire ou plusieurs niveaux de répertoires), * (une séquence de zéro ou plusieurs caractères) ou ? (caractère unique).",
    "settings.python.analysis.importFormat.description": "Définit le format par défaut du module d’importation.",
    "settings.python.analysis.include.description": "Chemins d’accès des répertoires ou fichiers qui doivent être inclus. Si aucun chemin d’accès n’est spécifié, Pylance utilise par défaut le répertoire racine de l’espace de travail. Les chemins d’accès peuvent contenir des caractères génériques ** (un répertoire ou plusieurs niveaux de répertoires), * (une séquence de zéro ou plusieurs caractères) ou ? (caractère unique).",
    "settings.python.analysis.indexing.description": "Activez l’indexation des bibliothèques tierces installées et des fichiers utilisateur pour les fonctionnalités de langage telles que l’importation automatique, l’ajout d’importation, les symboles d’espace de travail, etc.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Activer/désactiver les indicateurs d’inlay pour les noms d’arguments d’appel :\r\nPython\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Activez/désactivez les indicateurs d’inlay pour les types de retour de fonction :\r\nPython\r\ndef foo(x :int) '-> int' :\r\n\tretourner x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Activer/désactiver les indicateurs d’inlay pour les paramètres de fonction pytest :\r\nPython\r\ndef test_foo(my_fixture : 'str') :\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Activer/désactiver les indicateurs d’inlay pour les types de variables :\r\nPython\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Spécifie le niveau de journalisation pour le panneau Sortie",
    "settings.python.analysis.nodeExecutable.description": "Chemin d’accès à un exécutable Node.js à utiliser pour exécuter le serveur de langues. S’il n’est pas spécifié, le serveur de langue utilisera l’exécutable Node.js fourni avec le code VS. Activez cette option si vous avez des problèmes avec Pylance qui manque de mémoire. Voir [ici](https://aka.ms/AApf7ox) pour plus d’informations.",
    "settings.python.analysis.packageIndexDepths.description": "Utilisé pour remplacer le nombre de niveaux sous les packages installés à indexer par package. Par défaut, seuls les modules de niveau supérieur sont indexés (profondeur = 1). Pour indexer des sous-modules, augmentez la profondeur de 1 pour chaque niveau de sous-module que vous souhaitez indexer. Les valeurs acceptées sont :\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nSi « inclure tous les symboles » est défini sur « false », seuls les symboles dans « __all__ » de chaque package sont inclus. Lorsqu'il est défini sur « true », Pylance indexera chaque déclaration de module/symbole de niveau supérieur dans le fichier.  \r\n  \r\nExemple d'utilisation : \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Les index de toutes les bibliothèques tierces sont conservés sur le disque.",
    "settings.python.analysis.stubPath.description": "Chemin d’accès au répertoire contenant des fichiers stub de type personnalisé.",
    "settings.python.analysis.typeshedPaths.description": "Chemins d’accès à rechercher pour les modules typeshed.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Utilisez les implémentations de bibliothèque pour extraire des informations de type lorsque le stub de type n’est pas présent.",
    "settings.python.analysis.userFileIndexingLimit.description": "Nombre maximal de fichiers utilisateur à indexer dans l’espace de travail. L’indexation des fichiers est une tâche gourmande en performances. Utilisez ce paramètre pour limiter le nombre de fichiers à indexer. Si vous entrez -1, nous indexerons tous les fichiers.",
    "settings.typecheckingMode.basic.description": "Toutes les règles « désactivées » + règles de vérification de type de base.",
    "settings.typecheckingMode.off.description": "Afficher les diagnostics pour la syntaxe non valide, les importations non résolues et les variables non définies.",
    "settings.typecheckingMode.standard.description": "Toutes les règles « désactivées » + règles de vérification de type de base + règles de typechecker standard.",
    "settings.typecheckingMode.strict.description": "Toutes les règles « désactivées » + toutes les règles de vérification de type."
}
