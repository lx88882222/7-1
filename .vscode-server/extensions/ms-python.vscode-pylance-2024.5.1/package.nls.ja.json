{
    "ClientLoc.ServerRestart.crashMessage": "Pylance がクラッシュしました。",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance がクラッシュしました。Node.js 実行可能ファイルを選択して Pylance を実行すると、Pylance は再起動します。",
    "ClientLoc.ServerRestart.restartQuestion": "Pylance がクラッシュしました。Node.js 実行可能ファイルを使用して言語サーバーを実行しますか?",
    "ClientLoc.ServerRestart.restartingMessage": "Node.js を使用して Pylance を再起動しています...",
    "ClientLoc.ServerRestart.selectButton": "選択",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Node.js 実行可能ファイルを選択して Pylance を実行する",
    "ClientLoc.askNodeSafetyQuestion": "Pylance は {0} で実行するように構成されています。この実行可能ファイルを使用して Pylance を実行しますか?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python 自動インポート候補モード",
    "ClientLoc.autoImportCompletionsStatusItem.text": "自動インポート候補: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "オフに切り替える",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "オンに切り替える",
    "ClientLoc.crashTooManyRestarts": "過去 3 分間に Pylance が 5 回クラッシュしました。Pylance は再起動されません。詳細については、出力を参照してください。",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python 型チェック モード",
    "ClientLoc.typeCheckingModeStatusItem.text": "型チェック: {0}",
    "ClientLoc.typeCheckingModeStatusItem.titleOff": "オフに切り替える",
    "ClientLoc.typeCheckingModeStatusItem.titleOn": "オンに切り替える",
    "ClientLoc.updateSettingsErrorMsgFormatted": "設定 '{0}.{1}' を更新できませんでした。",
    "Common.Help": "ヘルプ",
    "Common.No": "いいえ",
    "Common.Yes": "はい",
    "Common.reload": "再読み込み",
    "Common.remindMeLater": "後で通知する",
    "Insiders.installingPreRelease": "Pylance プレリリース ビルドをインストールしています...",
    "LanguageServer.settingsMigratedMessage": "Microsoft Language Server に適用される設定が Pylance 設定にコピーされました。詳細については、settings.json ファイルを確認してください。",
    "LanguageServer.settingsMigrationError": "次の設定を移行できませんでした:",
    "Refactoring.MoveSymbol.newFileDetail": "パスを入力するか、コピー先ファイルを選択します",
    "Refactoring.MoveSymbol.newFileLabel": "コピー先ファイルのパスを入力してください",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "選択",
    "Refactoring.MoveSymbol.openDialogTitle": "新しいファイルを選択してシンボルを以下に移動します...",
    "Refactoring.MoveSymbol.progressBarTitle": "シンボルを以下に移動...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "検索先ファイル",
    "Refactoring.MoveSymbol.quickPickTitle": "移動先の選択",
    "Refactoring.MoveSymbol.separatorText": "移動先ファイル",
    "Refactoring.SearchImports.quickPickPlaceHolder": "インポートを検索する",
    "Refactoring.SearchImports.quickPickTitle": "一致するその他のインポートを検索する",
    "commands.pylance.gotoOutputChannel.title": "Pylance: 出力チャネルに移動",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: 永続化されたすべてのインデックスをクリア",
    "commands.pylance.profiling.start.title": "Pylance: プロファイルの開始",
    "commands.pylance.profiling.stop.title": "Pylance: プロファイルの停止",
    "commands.pylance.reportIssue.title": "Pylance: 問題を報告...",
    "settings.python.analysis.autoFormatStrings.description": "文字列に '{' を入力すると、文字列の先頭に 'f' が自動的に付きます。",
    "settings.python.analysis.autoImportCompletions.description": "自動インポートの入力候補を有効にします。",
    "settings.python.analysis.autoIndent.description": "Python コードを入力する際の言語セマンティクスに基づいて、インデントを自動的に調整します。",
    "settings.python.analysis.autoSearchPaths.description": "'src' などの一般的な検索パスを自動的に追加します。",
    "settings.python.analysis.completeFunctionParens.description": "関数の入力候補にかっこを追加します。",
    "settings.python.analysis.diagnosticMode.description": "診断を表示するための分析スコープ。",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "ユーザーが個々の診断の重大度レベルを上書きできるようにします。ルール名をキーとして使用し、\"error\"、\"warning\"、\"information\"、\"none\"、'true' (\"error\"のエイリアス)、または 'false' (\"none\" のエイリアス) のいずれかを値として使用します。\"python.analysis.typeCheckingMode\" が \"off\" に設定されている場合、各診断に表示される既定値が既定です。各型チェック モード (\"off\"、\"basic\"、\"strict\") の既定値については、[こちら](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) を参照してください。",
    "settings.python.analysis.enablePytestSupport.description": "Pylance で pytest のサポートを有効にします。",
    "settings.python.analysis.enableSyncServer.description": "同期サーバー モードを使用します [試験段階]。内部使用の場合のみ、Pylance が動作を停止する可能性があります。",
    "settings.python.analysis.exclude.description": "含めることができないディレクトリまたはファイルのパス。これらは、インクルード ディレクトリをオーバーライドして、特定のサブディレクトリを除外できるようにします。除外パスにあるファイルでも、除外されていないソース ファイルから参照 (インポート) されている場合は、分析に含まれる場合があることに注意してください。パスには、ワイルドカード文字 ** (ディレクトリまたは複数レベルのディレクトリ)、* (0 文字以上のシーケンス)、または ?(1 つの文字) が含まれる場合があります。除外パスが指定されていない場合、Pylance は次のディレクトリを自動的に除外します: `**/node_modules`、`**/__pycache__`、`.git`、仮想環境ディレクトリ。",
    "settings.python.analysis.extraCommitChars.description": "該当する場合、コミット文字として '.', '(' を使用できます。",
    "settings.python.analysis.extraPaths.description": "検索解決パスの追加のインポート",
    "settings.python.analysis.fixAll.description": "ソース修正プログラムを [すべて修正] で実行します。",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "モジュール名のように見える文字列リテラルの場合、[定義へ移動] を有効にするとモジュールに移動します。",
    "settings.python.analysis.ignore.description": "インクルード ファイルまたはインクルード ファイルの推移閉包内であっても、診断出力 (エラーと警告) を抑制する必要があるディレクトリまたはファイルのパス。パスには、ワイルドカード文字 ** (ディレクトリまたは複数レベルのディレクトリ)、* (0 文字以上のシーケンス)、または ?(1 つの文字) が含まれる場合があります。",
    "settings.python.analysis.importFormat.description": "インポート モジュールの既定の形式を定義します。",
    "settings.python.analysis.include.description": "含める必要があるディレクトリまたはファイルのパス。パスが指定されていない場合、ワークスペースのルート ディレクトリに対する Pylance の既定値。パスには、ワイルドカード文字 ** (ディレクトリまたは複数レベルのディレクトリ)、* (0 文字以上のシーケンス)、または ?(1 つの文字) が含まれる場合があります。",
    "settings.python.analysis.indexing.description": "自動インポート、インポートの追加、ワークスペース シンボルなど、インストールされている言語機能用のサード パーティ製ライブラリとユーザー ファイルのインデックスを有効にします。",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "呼び出し引数名のインレイ ヒントを有効または無効にする:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "関数の戻り値の型のインレイ ヒントを有効または無効にする:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "pytest 関数パラメーターのインレイ ヒントを有効または無効にする:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "変数の型に対するインレー ヒントを有効または無効にする:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n\r\n```\r\n",
    "settings.python.analysis.logLevel.description": "出力パネルのログのレベルを指定する",
    "settings.python.analysis.nodeExecutable.description": "言語サーバーの実行に使用する Node.js 実行可能ファイルへのパス。指定しない場合、言語サーバーは VS コードに付属する Node.js 実行可能ファイルを使用します。Pylance でメモリが不足している場合は、このオプションを設定します。詳細については、[こちら](https://aka.ms/AApf7ox) を参照してください。",
    "settings.python.analysis.packageIndexDepths.description": "インストールされたパッケージの下の何階層をパッケージ単位でインデックス化するかをオーバーライドするために使用します。既定では、最上位レベルのモジュールのみがインデックス付けされます (深さ = 1)。サブモジュールにインデックスを作成するには、インデックスを作成するサブモジュールのレベルごとに深さを 1 つ増やします。使用できる値は次のとおりです:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\n'include all symbols' が 'false' に設定されている場合、各パッケージの '__all__' のシンボルのみが含まれます。これを 'true' に設定すると、Pylance はファイル内のすべてのモジュール/最上位レベルのシンボル宣言にインデックスを設定します。 \r\n \r\n使用例:\r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "すべてのサード パーティ製ライブラリのインデックスはディスクに永続化されます。",
    "settings.python.analysis.stubPath.description": "カスタム型スタブ ファイルを含むディレクトリへのパスです。",
    "settings.python.analysis.typeshedPaths.description": "Typeshed モジュールを検索するパス。",
    "settings.python.analysis.useLibraryCodeForTypes.description": "ライブラリ実装を使用して、型スタブが存在しない場合に型情報を抽出します。",
    "settings.python.analysis.userFileIndexingLimit.description": "ワークスペースでインデックスを作成するユーザー ファイルの最大数。ファイルのインデックス作成は、パフォーマンス集約型のタスクです。この設定を使用して、インデックスを作成するファイルの数を制限してください。-1 を入力すると、すべてのファイルにインデックスが作成されます。",
    "settings.typecheckingMode.basic.description": "すべての \"オフ\" ルールと基本型チェック ルール。",
    "settings.typecheckingMode.off.description": "無効な構文、未解決のインポート、未定義の変数の診断を表示します。",
    "settings.typecheckingMode.standard.description": "すべての \"オフ\" ルール + 基本型チェック ルール + 標準の typechecker ルール。",
    "settings.typecheckingMode.strict.description": "すべての \"オフ\" ルールとすべての型チェック ルール。"
}
